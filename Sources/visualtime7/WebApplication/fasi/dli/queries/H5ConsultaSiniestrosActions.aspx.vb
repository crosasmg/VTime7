'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Query Designer v7.1.120.1 at 2019/02/27 10:50:03 a.m. model release 1, Form Generator v1.0.34.22 - Query Generator v1.0.16.8
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class H5ConsultaSiniestrosActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"
   
        <WebMethod()>
        Public Shared Function ItemsTblDataLoad(SINIESTRONCLAIM1 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.nClaim = 0, .NBRANCH = 0, .NPRODUCT = 0, .nPolicy = 0, .NCERTIF = 0, .DDECLADAT = Date.MinValue, .SCLAIMTYP = String.Empty, .NCAUSECOD = 0, .SSTACLAIM = String.Empty, .DPRESCDAT = Date.MinValue, .DOCCURDAT = Date.MinValue, .NLOC_RESERV = 0, .NLOC_REC_AM = 0, .NLOC_PAY_AM = 0, .NLOC_OUT_AM = 0, .NLOC_COS_RE = 0, .NIDCATAS = 0, .NBRANCHDesc = String.Empty, .NPRODUCTDesc = String.Empty, .SCLAIMTYPDesc = String.Empty, .NCAUSECODDesc = String.Empty, .SSTACLAIMDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT CLAIM.NCLAIM, CLAIM.NBRANCH, CLAIM.NPRODUCT, CLAIM.NPOLICY, CLAIM.NCERTIF, CLAIM.DDECLADAT, CLAIM.SCLAIMTYP, CLAIM.NCAUSECOD, CLAIM.SSTACLAIM, CLAIM.DPRESCDAT, CLAIM.DOCCURDAT, CLAIM.NLOC_RESERV, CLAIM.NLOC_REC_AM, CLAIM.NLOC_PAY_AM, CLAIM.NLOC_OUT_AM, CLAIM.NLOC_COS_RE, CLAIM.NIDCATAS, TABLE10.SDESCRIPT NBRANCHDESC, PRODMASTER.SDESCRIPT NPRODUCTDESC, TABLE132.SDESCRIPT SCLAIMTYPDESC, CLAIM_CAUS.SDESCRIPT NCAUSECODDESC, TABLE135.SDESCRIPT SSTACLAIMDESC FROM CLAIM CLAIM LEFT JOIN TABLE10 TABLE10 ON TABLE10.NBRANCH = CLAIM.NBRANCH LEFT JOIN PRODMASTER PRODMASTER ON PRODMASTER.NBRANCH = CLAIM.NBRANCH  AND PRODMASTER.NPRODUCT = CLAIM.NPRODUCT LEFT JOIN TABLE132 TABLE132 ON TABLE132.SCLAIMTYP = CLAIM.SCLAIMTYP LEFT JOIN CLAIM_CAUS CLAIM_CAUS ON CLAIM_CAUS.NBRANCH = CLAIM.NBRANCH  AND CLAIM_CAUS.NPRODUCT = CLAIM.NPRODUCT  AND CLAIM_CAUS.NCAUSECOD = CLAIM.NCAUSECOD LEFT JOIN TABLE135 TABLE135 ON TABLE135.SSTACLAIM = CLAIM.SSTACLAIM  WHERE CLAIM.NCLAIM = @:CLAIMNCLAIM1", "CLAIM", "Linked.LatCombined")
                    .AddParameter("CLAIMNCLAIM1", DbType.Decimal, 0, False, SINIESTRONCLAIM1)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.nClaim = itemData.NumericValue("NCLAIM"), .NBRANCH = itemData.NumericValue("NBRANCH"), .NPRODUCT = itemData.NumericValue("NPRODUCT"), .nPolicy = itemData.NumericValue("NPOLICY"), .NCERTIF = itemData.NumericValue("NCERTIF"), .DDECLADAT = itemData.DateTimeValue("DDECLADAT"), .SCLAIMTYP = itemData.StringValue("SCLAIMTYP"), .NCAUSECOD = itemData.NumericValue("NCAUSECOD"), .SSTACLAIM = itemData.StringValue("SSTACLAIM"), .DPRESCDAT = itemData.DateTimeValue("DPRESCDAT"), .DOCCURDAT = itemData.DateTimeValue("DOCCURDAT"), .NLOC_RESERV = itemData.NumericValue("NLOC_RESERV"), .NLOC_REC_AM = itemData.NumericValue("NLOC_REC_AM"), .NLOC_PAY_AM = itemData.NumericValue("NLOC_PAY_AM"), .NLOC_OUT_AM = itemData.NumericValue("NLOC_OUT_AM"), .NLOC_COS_RE = itemData.NumericValue("NLOC_COS_RE"), .NIDCATAS = itemData.NumericValue("NIDCATAS"), .NBRANCHDesc = itemData.StringValue("NBRANCHDESC"), .NPRODUCTDesc = itemData.StringValue("NPRODUCTDESC"), .SCLAIMTYPDesc = itemData.StringValue("SCLAIMTYPDESC"), .NCAUSECODDesc = itemData.StringValue("NCAUSECODDESC"), .SSTACLAIMDesc = itemData.StringValue("SSTACLAIMDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "ItemsTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (ItemsTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function ItemsTblDataCount(SINIESTRONCLAIM1 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT CLAIM.NCLAIM, CLAIM.NBRANCH, CLAIM.NPRODUCT, CLAIM.NPOLICY, CLAIM.NCERTIF, CLAIM.DDECLADAT, CLAIM.SCLAIMTYP, CLAIM.NCAUSECOD, CLAIM.SSTACLAIM, CLAIM.DPRESCDAT, CLAIM.DOCCURDAT, CLAIM.NLOC_RESERV, CLAIM.NLOC_REC_AM, CLAIM.NLOC_PAY_AM, CLAIM.NLOC_OUT_AM, CLAIM.NLOC_COS_RE, CLAIM.NIDCATAS, TABLE10.SDESCRIPT NBRANCHDESC, PRODMASTER.SDESCRIPT NPRODUCTDESC, TABLE132.SDESCRIPT SCLAIMTYPDESC, CLAIM_CAUS.SDESCRIPT NCAUSECODDESC, TABLE135.SDESCRIPT SSTACLAIMDESC FROM CLAIM CLAIM LEFT JOIN TABLE10 TABLE10 ON TABLE10.NBRANCH = CLAIM.NBRANCH LEFT JOIN PRODMASTER PRODMASTER ON PRODMASTER.NBRANCH = CLAIM.NBRANCH  AND PRODMASTER.NPRODUCT = CLAIM.NPRODUCT LEFT JOIN TABLE132 TABLE132 ON TABLE132.SCLAIMTYP = CLAIM.SCLAIMTYP LEFT JOIN CLAIM_CAUS CLAIM_CAUS ON CLAIM_CAUS.NBRANCH = CLAIM.NBRANCH  AND CLAIM_CAUS.NPRODUCT = CLAIM.NPRODUCT  AND CLAIM_CAUS.NCAUSECOD = CLAIM.NCAUSECOD LEFT JOIN TABLE135 TABLE135 ON TABLE135.SSTACLAIM = CLAIM.SSTACLAIM  WHERE CLAIM.NCLAIM = @:CLAIMNCLAIM1)", "CLAIM", "Linked.LatCombined")
                    .AddParameter("CLAIMNCLAIM1", DbType.Decimal, 0, False, SINIESTRONCLAIM1)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "ItemsTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (ItemsTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function Claim_caseTblDataLoad(CLAIMCASENCLAIM1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.nCase_num = 0, .nDeman_type = 0, .sStaCase = String.Empty, .nNoteDama = 0, .NCLAIM = 0, .nDeman_typeDesc = String.Empty, .sStaCaseDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT CLAIM_CASE.NCASE_NUM, CLAIM_CASE.NDEMAN_TYPE, CLAIM_CASE.SSTACASE, CLAIM_CASE.NNOTEDAMA, CLAIM_CASE.NCLAIM, TABLE692.SDESCRIPT NDEMAN_TYPEDESC, TABLE135.SDESCRIPT SSTACASEDESC FROM CLAIM_CASE CLAIM_CASE LEFT JOIN TABLE692 TABLE692 ON TABLE692.NDEMAN_TYPE = CLAIM_CASE.NDEMAN_TYPE LEFT JOIN TABLE135 TABLE135 ON TABLE135.SSTACLAIM = CLAIM_CASE.SSTACASE  WHERE CLAIM_CASE.NCLAIM = @:CLAIM_CASENCLAIM1", "CLAIM_CASE", "Linked.LatCombined")
                    .AddParameter("CLAIM_CASENCLAIM1", DbType.AnsiStringFixedLength, 0, (CLAIMCASENCLAIM1 = String.Empty), CLAIMCASENCLAIM1)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.nCase_num = itemData.NumericValue("NCASE_NUM"), .nDeman_type = itemData.NumericValue("NDEMAN_TYPE"), .sStaCase = itemData.StringValue("SSTACASE"), .nNoteDama = itemData.NumericValue("NNOTEDAMA"), .NCLAIM = itemData.NumericValue("NCLAIM"), .nDeman_typeDesc = itemData.StringValue("NDEMAN_TYPEDESC"), .sStaCaseDesc = itemData.StringValue("SSTACASEDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "Claim_caseTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (Claim_caseTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function Claim_caseTblDataCount(CLAIMCASENCLAIM1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT CLAIM_CASE.NCASE_NUM, CLAIM_CASE.NDEMAN_TYPE, CLAIM_CASE.SSTACASE, CLAIM_CASE.NNOTEDAMA, CLAIM_CASE.NCLAIM, TABLE692.SDESCRIPT NDEMAN_TYPEDESC, TABLE135.SDESCRIPT SSTACASEDESC FROM CLAIM_CASE CLAIM_CASE LEFT JOIN TABLE692 TABLE692 ON TABLE692.NDEMAN_TYPE = CLAIM_CASE.NDEMAN_TYPE LEFT JOIN TABLE135 TABLE135 ON TABLE135.SSTACLAIM = CLAIM_CASE.SSTACASE  WHERE CLAIM_CASE.NCLAIM = @:CLAIM_CASENCLAIM1)", "CLAIM_CASE", "Linked.LatCombined")
                    .AddParameter("CLAIM_CASENCLAIM1", DbType.AnsiStringFixedLength, 0, (CLAIMCASENCLAIM1 = String.Empty), CLAIMCASENCLAIM1)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "Claim_caseTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (Claim_caseTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function Claim_caseSelectCommandActionCLAIM_CASE(CLAIMCASENCLAIM1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(CLAIM_CASE.NCASE_NUM) COUNTDATA FROM CLAIM_CASE CLAIM_CASE LEFT JOIN TABLE692 TABLE692 ON TABLE692.NDEMAN_TYPE = CLAIM_CASE.NDEMAN_TYPE LEFT JOIN TABLE135 TABLE135 ON TABLE135.SSTACLAIM = CLAIM_CASE.SSTACASE  WHERE CLAIM_CASE.NCLAIM = @:CLAIM_CASENCLAIM1", "CLAIM_CASE", "Linked.LatCombined")
                    .AddParameter("CLAIM_CASENCLAIM1", DbType.AnsiStringFixedLength, 0, (CLAIMCASENCLAIM1 = String.Empty), CLAIMCASENCLAIM1)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "Claim_caseSelectCommandActionCLAIM_CASE", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (Claim_caseSelectCommandActionCLAIM_CASE)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function Cl_coverTblDataLoad(CLCOVERNCLAIM1 As String, CLCOVERNCASENUM2 As String, CLCOVERNDEMANTYPE3 As String, CLCOVERNCLAIM4 As String, CLCOVERNCASENUM5 As String, CLCOVERNDEMANTYPE6 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.nCase_num = 0, .nModulec = 0, .NCOVER = 0, .sClient = String.Empty, .nDeman_type = 0, .nDamProf = 0, .sReservstat = String.Empty, .nReserve = 0, .nRec_amount = 0, .nPay_amount = 0, .nLoc_cos_re = 0, .sFrantype = String.Empty, .nFra_amount = 0, .nCurrency = 0, .NCOVERDesc = String.Empty, .sClientDesc = String.Empty, .nDeman_typeDesc = String.Empty, .sFrantypeDesc = String.Empty, .nCurrencyDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT CL_COVER.NCASE_NUM, CL_COVER.NMODULEC, CL_COVER.NCOVER, CL_COVER.SCLIENT, CL_COVER.NDEMAN_TYPE, CL_COVER.NDAMPROF, CL_COVER.SRESERVSTAT, CL_COVER.NRESERVE, CL_COVER.NREC_AMOUNT, CL_COVER.NPAY_AMOUNT, CL_COVER.NLOC_COS_RE, CL_COVER.SFRANTYPE, CL_COVER.NFRA_AMOUNT, CL_COVER.NCURRENCY, CL_COVER.NCLAIM NCLAIM, GCV_COVERAGEDESCRIPTION.SDESCRIPT NCOVERDESC, CLIENT.SCLIENAME SCLIENTDESC, TABLE692.SDESCRIPT NDEMAN_TYPEDESC, TABLE64.SDESCRIPT SFRANTYPEDESC, TABLE11.SSHORT_DES NCURRENCYDESC FROM CL_COVER CL_COVER LEFT JOIN GCV_COVERAGEDESCRIPTION GCV_COVERAGEDESCRIPTION ON GCV_COVERAGEDESCRIPTION.NBRANCH = CL_COVER.NBRANCH  AND GCV_COVERAGEDESCRIPTION.NPRODUCT = CL_COVER.NPRODUCT  AND GCV_COVERAGEDESCRIPTION.NCOVER = CL_COVER.NCOVER LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = CL_COVER.SCLIENT LEFT JOIN TABLE692 TABLE692 ON TABLE692.NDEMAN_TYPE = CL_COVER.NDEMAN_TYPE LEFT JOIN TABLE64 TABLE64 ON TABLE64.SFRANTYPE = CL_COVER.SFRANTYPE LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = CL_COVER.NCURRENCY  WHERE CL_COVER.NCLAIM = @:CL_COVERNCLAIM1 AND CL_COVER.NCASE_NUM = @:CL_COVERNCASE_NUM2 AND CL_COVER.NDEMAN_TYPE = @:CL_COVERNDEMAN_TYPE3 AND CL_COVER.NCLAIM = @:CL_COVERNCLAIM4 AND CL_COVER.NCASE_NUM = @:CL_COVERNCASE_NUM5 AND CL_COVER.NDEMAN_TYPE = @:CL_COVERNDEMAN_TYPE6", "CL_COVER", "Linked.LatCombined")
                    .AddParameter("CL_COVERNCLAIM1", DbType.AnsiStringFixedLength, 0, (CLCOVERNCLAIM1 = String.Empty), CLCOVERNCLAIM1)
                    .AddParameter("CL_COVERNCASE_NUM2", DbType.AnsiStringFixedLength, 0, (CLCOVERNCASENUM2 = String.Empty), CLCOVERNCASENUM2)
                    .AddParameter("CL_COVERNDEMAN_TYPE3", DbType.AnsiStringFixedLength, 0, (CLCOVERNDEMANTYPE3 = String.Empty), CLCOVERNDEMANTYPE3)
                    .AddParameter("CL_COVERNCLAIM4", DbType.AnsiStringFixedLength, 0, (CLCOVERNCLAIM4 = String.Empty), CLCOVERNCLAIM4)
                    .AddParameter("CL_COVERNCASE_NUM5", DbType.AnsiStringFixedLength, 0, (CLCOVERNCASENUM5 = String.Empty), CLCOVERNCASENUM5)
                    .AddParameter("CL_COVERNDEMAN_TYPE6", DbType.AnsiStringFixedLength, 0, (CLCOVERNDEMANTYPE6 = String.Empty), CLCOVERNDEMANTYPE6)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.nCase_num = itemData.NumericValue("NCASE_NUM"), .nModulec = itemData.NumericValue("NMODULEC"), .NCOVER = itemData.NumericValue("NCOVER"), .sClient = itemData.StringValue("SCLIENT"), .nDeman_type = itemData.NumericValue("NDEMAN_TYPE"), .nDamProf = itemData.NumericValue("NDAMPROF"), .sReservstat = itemData.StringValue("SRESERVSTAT"), .nReserve = itemData.NumericValue("NRESERVE"), .nRec_amount = itemData.NumericValue("NREC_AMOUNT"), .nPay_amount = itemData.NumericValue("NPAY_AMOUNT"), .nLoc_cos_re = itemData.NumericValue("NLOC_COS_RE"), .sFrantype = itemData.StringValue("SFRANTYPE"), .nFra_amount = itemData.NumericValue("NFRA_AMOUNT"), .nCurrency = itemData.NumericValue("NCURRENCY"), .NCOVERDesc = itemData.StringValue("NCOVERDESC"), .sClientDesc = itemData.StringValue("SCLIENTDESC"), .nDeman_typeDesc = itemData.StringValue("NDEMAN_TYPEDESC"), .sFrantypeDesc = itemData.StringValue("SFRANTYPEDESC"), .nCurrencyDesc = itemData.StringValue("NCURRENCYDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "Cl_coverTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (Cl_coverTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function Cl_coverTblDataCount(CLCOVERNCLAIM1 As String, CLCOVERNCASENUM2 As String, CLCOVERNDEMANTYPE3 As String, CLCOVERNCLAIM4 As String, CLCOVERNCASENUM5 As String, CLCOVERNDEMANTYPE6 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT CL_COVER.NCASE_NUM, CL_COVER.NMODULEC, CL_COVER.NCOVER, CL_COVER.SCLIENT, CL_COVER.NDEMAN_TYPE, CL_COVER.NDAMPROF, CL_COVER.SRESERVSTAT, CL_COVER.NRESERVE, CL_COVER.NREC_AMOUNT, CL_COVER.NPAY_AMOUNT, CL_COVER.NLOC_COS_RE, CL_COVER.SFRANTYPE, CL_COVER.NFRA_AMOUNT, CL_COVER.NCURRENCY, CL_COVER.NCLAIM NCLAIM, GCV_COVERAGEDESCRIPTION.SDESCRIPT NCOVERDESC, CLIENT.SCLIENAME SCLIENTDESC, TABLE692.SDESCRIPT NDEMAN_TYPEDESC, TABLE64.SDESCRIPT SFRANTYPEDESC, TABLE11.SSHORT_DES NCURRENCYDESC FROM CL_COVER CL_COVER LEFT JOIN GCV_COVERAGEDESCRIPTION GCV_COVERAGEDESCRIPTION ON GCV_COVERAGEDESCRIPTION.NBRANCH = CL_COVER.NBRANCH  AND GCV_COVERAGEDESCRIPTION.NPRODUCT = CL_COVER.NPRODUCT  AND GCV_COVERAGEDESCRIPTION.NCOVER = CL_COVER.NCOVER LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = CL_COVER.SCLIENT LEFT JOIN TABLE692 TABLE692 ON TABLE692.NDEMAN_TYPE = CL_COVER.NDEMAN_TYPE LEFT JOIN TABLE64 TABLE64 ON TABLE64.SFRANTYPE = CL_COVER.SFRANTYPE LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = CL_COVER.NCURRENCY  WHERE CL_COVER.NCLAIM = @:CL_COVERNCLAIM1 AND CL_COVER.NCASE_NUM = @:CL_COVERNCASE_NUM2 AND CL_COVER.NDEMAN_TYPE = @:CL_COVERNDEMAN_TYPE3 AND CL_COVER.NCLAIM = @:CL_COVERNCLAIM4 AND CL_COVER.NCASE_NUM = @:CL_COVERNCASE_NUM5 AND CL_COVER.NDEMAN_TYPE = @:CL_COVERNDEMAN_TYPE6)", "CL_COVER", "Linked.LatCombined")
                    .AddParameter("CL_COVERNCLAIM1", DbType.AnsiStringFixedLength, 0, (CLCOVERNCLAIM1 = String.Empty), CLCOVERNCLAIM1)
                    .AddParameter("CL_COVERNCASE_NUM2", DbType.AnsiStringFixedLength, 0, (CLCOVERNCASENUM2 = String.Empty), CLCOVERNCASENUM2)
                    .AddParameter("CL_COVERNDEMAN_TYPE3", DbType.AnsiStringFixedLength, 0, (CLCOVERNDEMANTYPE3 = String.Empty), CLCOVERNDEMANTYPE3)
                    .AddParameter("CL_COVERNCLAIM4", DbType.AnsiStringFixedLength, 0, (CLCOVERNCLAIM4 = String.Empty), CLCOVERNCLAIM4)
                    .AddParameter("CL_COVERNCASE_NUM5", DbType.AnsiStringFixedLength, 0, (CLCOVERNCASENUM5 = String.Empty), CLCOVERNCASENUM5)
                    .AddParameter("CL_COVERNDEMAN_TYPE6", DbType.AnsiStringFixedLength, 0, (CLCOVERNDEMANTYPE6 = String.Empty), CLCOVERNDEMANTYPE6)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "Cl_coverTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (Cl_coverTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function Cl_coverSelectCommandActionCL_COVER(CLCOVERNCLAIM1 As String, CLCOVERNCASENUM2 As String, CLCOVERNDEMANTYPE3 As String, CLCOVERNCLAIM4 As String, CLCOVERNCASENUM5 As String, CLCOVERNDEMANTYPE6 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(CL_COVER.NCASE_NUM) COUNTDATA FROM CL_COVER CL_COVER LEFT JOIN GCV_COVERAGEDESCRIPTION GCV_COVERAGEDESCRIPTION ON GCV_COVERAGEDESCRIPTION.NBRANCH = CL_COVER.NBRANCH  AND GCV_COVERAGEDESCRIPTION.NPRODUCT = CL_COVER.NPRODUCT  AND GCV_COVERAGEDESCRIPTION.NCOVER = CL_COVER.NCOVER LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = CL_COVER.SCLIENT LEFT JOIN TABLE692 TABLE692 ON TABLE692.NDEMAN_TYPE = CL_COVER.NDEMAN_TYPE LEFT JOIN TABLE64 TABLE64 ON TABLE64.SFRANTYPE = CL_COVER.SFRANTYPE LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = CL_COVER.NCURRENCY  WHERE CL_COVER.NCLAIM = @:CL_COVERNCLAIM1 AND CL_COVER.NCASE_NUM = @:CL_COVERNCASE_NUM2 AND CL_COVER.NDEMAN_TYPE = @:CL_COVERNDEMAN_TYPE3 AND CL_COVER.NCLAIM = @:CL_COVERNCLAIM4 AND CL_COVER.NCASE_NUM = @:CL_COVERNCASE_NUM5 AND CL_COVER.NDEMAN_TYPE = @:CL_COVERNDEMAN_TYPE6", "CL_COVER", "Linked.LatCombined")
                    .AddParameter("CL_COVERNCLAIM1", DbType.AnsiStringFixedLength, 0, (CLCOVERNCLAIM1 = String.Empty), CLCOVERNCLAIM1)
                    .AddParameter("CL_COVERNCASE_NUM2", DbType.AnsiStringFixedLength, 0, (CLCOVERNCASENUM2 = String.Empty), CLCOVERNCASENUM2)
                    .AddParameter("CL_COVERNDEMAN_TYPE3", DbType.AnsiStringFixedLength, 0, (CLCOVERNDEMANTYPE3 = String.Empty), CLCOVERNDEMANTYPE3)
                    .AddParameter("CL_COVERNCLAIM4", DbType.AnsiStringFixedLength, 0, (CLCOVERNCLAIM4 = String.Empty), CLCOVERNCLAIM4)
                    .AddParameter("CL_COVERNCASE_NUM5", DbType.AnsiStringFixedLength, 0, (CLCOVERNCASENUM5 = String.Empty), CLCOVERNCASENUM5)
                    .AddParameter("CL_COVERNDEMAN_TYPE6", DbType.AnsiStringFixedLength, 0, (CLCOVERNDEMANTYPE6 = String.Empty), CLCOVERNDEMANTYPE6)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "Cl_coverSelectCommandActionCL_COVER", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (Cl_coverSelectCommandActionCL_COVER)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function Claim_attmTblDataLoad(CLAIMATTMNCLAIM1 As String, CLAIMATTMNCASENUM2 As String, CLAIMATTMNDEMANTYPE3 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.nCase_num = 0, .nDeman_type = 0, .sClient = String.Empty, .nService = 0, .sIllness = String.Empty, .sClientProf = String.Empty, .nDeman_typeDesc = String.Empty, .sClientDesc = String.Empty, .sIllnessDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT CLAIM_ATTM.NCASE_NUM, CLAIM_ATTM.NDEMAN_TYPE, CLAIM_ATTM.SCLIENT, CLAIM_ATTM.NSERVICE, CLAIM_ATTM.SILLNESS, CLAIM_ATTM.SCLIENTPROF, TABLE692.SDESCRIPT NDEMAN_TYPEDESC, CLIENT.SCLIENAME SCLIENTDESC, TAB_AM_ILL.SDESCRIPT SILLNESSDESC FROM CLAIM_ATTM CLAIM_ATTM LEFT JOIN TABLE692 TABLE692 ON TABLE692.NDEMAN_TYPE = CLAIM_ATTM.NDEMAN_TYPE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = CLAIM_ATTM.SCLIENT LEFT JOIN TAB_AM_ILL TAB_AM_ILL ON TAB_AM_ILL.SILLNESS = CLAIM_ATTM.SILLNESS  WHERE CLAIM_ATTM.NCLAIM = @:CLAIM_ATTMNCLAIM1 AND CLAIM_ATTM.NCASE_NUM = @:CLAIM_ATTMNCASE_NUM2 AND CLAIM_ATTM.NDEMAN_TYPE = @:CLAIM_ATTMNDEMAN_TYPE3", "CLAIM_ATTM", "Linked.LatCombined")
                    .AddParameter("CLAIM_ATTMNCLAIM1", DbType.AnsiStringFixedLength, 0, (CLAIMATTMNCLAIM1 = String.Empty), CLAIMATTMNCLAIM1)
                    .AddParameter("CLAIM_ATTMNCASE_NUM2", DbType.AnsiStringFixedLength, 0, (CLAIMATTMNCASENUM2 = String.Empty), CLAIMATTMNCASENUM2)
                    .AddParameter("CLAIM_ATTMNDEMAN_TYPE3", DbType.AnsiStringFixedLength, 0, (CLAIMATTMNDEMANTYPE3 = String.Empty), CLAIMATTMNDEMANTYPE3)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.nCase_num = itemData.NumericValue("NCASE_NUM"), .nDeman_type = itemData.NumericValue("NDEMAN_TYPE"), .sClient = itemData.StringValue("SCLIENT"), .nService = itemData.NumericValue("NSERVICE"), .sIllness = itemData.StringValue("SILLNESS"), .sClientProf = itemData.StringValue("SCLIENTPROF"), .nDeman_typeDesc = itemData.StringValue("NDEMAN_TYPEDESC"), .sClientDesc = itemData.StringValue("SCLIENTDESC"), .sIllnessDesc = itemData.StringValue("SILLNESSDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "Claim_attmTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (Claim_attmTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function Claim_attmTblDataCount(CLAIMATTMNCLAIM1 As String, CLAIMATTMNCASENUM2 As String, CLAIMATTMNDEMANTYPE3 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT CLAIM_ATTM.NCASE_NUM, CLAIM_ATTM.NDEMAN_TYPE, CLAIM_ATTM.SCLIENT, CLAIM_ATTM.NSERVICE, CLAIM_ATTM.SILLNESS, CLAIM_ATTM.SCLIENTPROF, TABLE692.SDESCRIPT NDEMAN_TYPEDESC, CLIENT.SCLIENAME SCLIENTDESC, TAB_AM_ILL.SDESCRIPT SILLNESSDESC FROM CLAIM_ATTM CLAIM_ATTM LEFT JOIN TABLE692 TABLE692 ON TABLE692.NDEMAN_TYPE = CLAIM_ATTM.NDEMAN_TYPE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = CLAIM_ATTM.SCLIENT LEFT JOIN TAB_AM_ILL TAB_AM_ILL ON TAB_AM_ILL.SILLNESS = CLAIM_ATTM.SILLNESS  WHERE CLAIM_ATTM.NCLAIM = @:CLAIM_ATTMNCLAIM1 AND CLAIM_ATTM.NCASE_NUM = @:CLAIM_ATTMNCASE_NUM2 AND CLAIM_ATTM.NDEMAN_TYPE = @:CLAIM_ATTMNDEMAN_TYPE3)", "CLAIM_ATTM", "Linked.LatCombined")
                    .AddParameter("CLAIM_ATTMNCLAIM1", DbType.AnsiStringFixedLength, 0, (CLAIMATTMNCLAIM1 = String.Empty), CLAIMATTMNCLAIM1)
                    .AddParameter("CLAIM_ATTMNCASE_NUM2", DbType.AnsiStringFixedLength, 0, (CLAIMATTMNCASENUM2 = String.Empty), CLAIMATTMNCASENUM2)
                    .AddParameter("CLAIM_ATTMNDEMAN_TYPE3", DbType.AnsiStringFixedLength, 0, (CLAIMATTMNDEMANTYPE3 = String.Empty), CLAIMATTMNDEMANTYPE3)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "Claim_attmTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (Claim_attmTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function Claim_attmSelectCommandActionCLAIM_ATTM(CLAIMATTMNCLAIM1 As String, CLAIMATTMNCASENUM2 As String, CLAIMATTMNDEMANTYPE3 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(CLAIM_ATTM.NCASE_NUM) COUNTDATA FROM CLAIM_ATTM CLAIM_ATTM LEFT JOIN TABLE692 TABLE692 ON TABLE692.NDEMAN_TYPE = CLAIM_ATTM.NDEMAN_TYPE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = CLAIM_ATTM.SCLIENT LEFT JOIN TAB_AM_ILL TAB_AM_ILL ON TAB_AM_ILL.SILLNESS = CLAIM_ATTM.SILLNESS  WHERE CLAIM_ATTM.NCLAIM = @:CLAIM_ATTMNCLAIM1 AND CLAIM_ATTM.NCASE_NUM = @:CLAIM_ATTMNCASE_NUM2 AND CLAIM_ATTM.NDEMAN_TYPE = @:CLAIM_ATTMNDEMAN_TYPE3", "CLAIM_ATTM", "Linked.LatCombined")
                    .AddParameter("CLAIM_ATTMNCLAIM1", DbType.AnsiStringFixedLength, 0, (CLAIMATTMNCLAIM1 = String.Empty), CLAIMATTMNCLAIM1)
                    .AddParameter("CLAIM_ATTMNCASE_NUM2", DbType.AnsiStringFixedLength, 0, (CLAIMATTMNCASENUM2 = String.Empty), CLAIMATTMNCASENUM2)
                    .AddParameter("CLAIM_ATTMNDEMAN_TYPE3", DbType.AnsiStringFixedLength, 0, (CLAIMATTMNDEMANTYPE3 = String.Empty), CLAIMATTMNDEMANTYPE3)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "Claim_attmSelectCommandActionCLAIM_ATTM", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (Claim_attmSelectCommandActionCLAIM_ATTM)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function Claim_autoTblDataLoad(CLAIMAUTONCLAIM1 As String, CLAIMAUTONCASENUM2 As String, CLAIMAUTONDEMANTYPE3 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.nCase_num = 0, .nDeman_type = 0, .sAlcoholic = String.Empty, .sPoliceDem = String.Empty, .nInfraction = 0, .nAuto_quant = 0, .nNotenum = 0, .nDeman_typeDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT CLAIM_AUTO.NCASE_NUM, CLAIM_AUTO.NDEMAN_TYPE, CLAIM_AUTO.SALCOHOLIC, CLAIM_AUTO.SPOLICEDEM, CLAIM_AUTO.NINFRACTION, CLAIM_AUTO.NAUTO_QUANT, CLAIM_AUTO.NNOTENUM, TABLE692.SDESCRIPT NDEMAN_TYPEDESC FROM CLAIM_AUTO CLAIM_AUTO LEFT JOIN TABLE692 TABLE692 ON TABLE692.NDEMAN_TYPE = CLAIM_AUTO.NDEMAN_TYPE  WHERE CLAIM_AUTO.NCLAIM = @:CLAIM_AUTONCLAIM1 AND CLAIM_AUTO.NCASE_NUM = @:CLAIM_AUTONCASE_NUM2 AND CLAIM_AUTO.NDEMAN_TYPE = @:CLAIM_AUTONDEMAN_TYPE3", "CLAIM_AUTO", "Linked.LatCombined")
                    .AddParameter("CLAIM_AUTONCLAIM1", DbType.AnsiStringFixedLength, 0, (CLAIMAUTONCLAIM1 = String.Empty), CLAIMAUTONCLAIM1)
                    .AddParameter("CLAIM_AUTONCASE_NUM2", DbType.AnsiStringFixedLength, 0, (CLAIMAUTONCASENUM2 = String.Empty), CLAIMAUTONCASENUM2)
                    .AddParameter("CLAIM_AUTONDEMAN_TYPE3", DbType.AnsiStringFixedLength, 0, (CLAIMAUTONDEMANTYPE3 = String.Empty), CLAIMAUTONDEMANTYPE3)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.nCase_num = itemData.NumericValue("NCASE_NUM"), .nDeman_type = itemData.NumericValue("NDEMAN_TYPE"), .sAlcoholic = itemData.StringValue("SALCOHOLIC"), .sPoliceDem = itemData.StringValue("SPOLICEDEM"), .nInfraction = itemData.NumericValue("NINFRACTION"), .nAuto_quant = itemData.NumericValue("NAUTO_QUANT"), .nNotenum = itemData.NumericValue("NNOTENUM"), .nDeman_typeDesc = itemData.StringValue("NDEMAN_TYPEDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "Claim_autoTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (Claim_autoTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function Claim_autoTblDataCount(CLAIMAUTONCLAIM1 As String, CLAIMAUTONCASENUM2 As String, CLAIMAUTONDEMANTYPE3 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT CLAIM_AUTO.NCASE_NUM, CLAIM_AUTO.NDEMAN_TYPE, CLAIM_AUTO.SALCOHOLIC, CLAIM_AUTO.SPOLICEDEM, CLAIM_AUTO.NINFRACTION, CLAIM_AUTO.NAUTO_QUANT, CLAIM_AUTO.NNOTENUM, TABLE692.SDESCRIPT NDEMAN_TYPEDESC FROM CLAIM_AUTO CLAIM_AUTO LEFT JOIN TABLE692 TABLE692 ON TABLE692.NDEMAN_TYPE = CLAIM_AUTO.NDEMAN_TYPE  WHERE CLAIM_AUTO.NCLAIM = @:CLAIM_AUTONCLAIM1 AND CLAIM_AUTO.NCASE_NUM = @:CLAIM_AUTONCASE_NUM2 AND CLAIM_AUTO.NDEMAN_TYPE = @:CLAIM_AUTONDEMAN_TYPE3)", "CLAIM_AUTO", "Linked.LatCombined")
                    .AddParameter("CLAIM_AUTONCLAIM1", DbType.AnsiStringFixedLength, 0, (CLAIMAUTONCLAIM1 = String.Empty), CLAIMAUTONCLAIM1)
                    .AddParameter("CLAIM_AUTONCASE_NUM2", DbType.AnsiStringFixedLength, 0, (CLAIMAUTONCASENUM2 = String.Empty), CLAIMAUTONCASENUM2)
                    .AddParameter("CLAIM_AUTONDEMAN_TYPE3", DbType.AnsiStringFixedLength, 0, (CLAIMAUTONDEMANTYPE3 = String.Empty), CLAIMAUTONDEMANTYPE3)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "Claim_autoTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (Claim_autoTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function Claim_autoSelectCommandActionCLAIM_AUTO(CLAIMAUTONCLAIM1 As String, CLAIMAUTONCASENUM2 As String, CLAIMAUTONDEMANTYPE3 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(CLAIM_AUTO.NCASE_NUM) COUNTDATA FROM CLAIM_AUTO CLAIM_AUTO LEFT JOIN TABLE692 TABLE692 ON TABLE692.NDEMAN_TYPE = CLAIM_AUTO.NDEMAN_TYPE  WHERE CLAIM_AUTO.NCLAIM = @:CLAIM_AUTONCLAIM1 AND CLAIM_AUTO.NCASE_NUM = @:CLAIM_AUTONCASE_NUM2 AND CLAIM_AUTO.NDEMAN_TYPE = @:CLAIM_AUTONDEMAN_TYPE3", "CLAIM_AUTO", "Linked.LatCombined")
                    .AddParameter("CLAIM_AUTONCLAIM1", DbType.AnsiStringFixedLength, 0, (CLAIMAUTONCLAIM1 = String.Empty), CLAIMAUTONCLAIM1)
                    .AddParameter("CLAIM_AUTONCASE_NUM2", DbType.AnsiStringFixedLength, 0, (CLAIMAUTONCASENUM2 = String.Empty), CLAIMAUTONCASENUM2)
                    .AddParameter("CLAIM_AUTONDEMAN_TYPE3", DbType.AnsiStringFixedLength, 0, (CLAIMAUTONDEMANTYPE3 = String.Empty), CLAIMAUTONDEMANTYPE3)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "Claim_autoSelectCommandActionCLAIM_AUTO", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (Claim_autoSelectCommandActionCLAIM_AUTO)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function CLAIM_DAMATblDataLoad(CLAIMDAMANCLAIM1 As String, CLAIMDAMANCASENUM2 As String, CLAIMDAMANDEMANTYPE3 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NDAMAGE_COD = 0, .NMAG_DAM = 0, .NAMOUNT = 0, .NDAMAGE_CODDesc = String.Empty, .NMAG_DAMDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT CLAIM_DAMA.NDAMAGE_COD, CLAIM_DAMA.NMAG_DAM, CLAIM_DAMA.NAMOUNT, TABLE5579.SDESCRIPT NDAMAGE_CODDESC, TABLE5674.SDESCRIPT NMAG_DAMDESC FROM CLAIM_DAMA CLAIM_DAMA LEFT JOIN TABLE5579 TABLE5579 ON TABLE5579.NAUTO_PART = CLAIM_DAMA.NDAMAGE_COD LEFT JOIN TABLE5674 TABLE5674 ON TABLE5674.NMAG_DAM = CLAIM_DAMA.NMAG_DAM  WHERE CLAIM_DAMA.NCLAIM = @:CLAIM_DAMANCLAIM1 AND CLAIM_DAMA.NCASE_NUM = @:CLAIM_DAMANCASE_NUM2 AND CLAIM_DAMA.NDEMAN_TYPE = @:CLAIM_DAMANDEMAN_TYPE3", "CLAIM_DAMA", "Linked.LatCombined")
                    .AddParameter("CLAIM_DAMANCLAIM1", DbType.AnsiStringFixedLength, 0, (CLAIMDAMANCLAIM1 = String.Empty), CLAIMDAMANCLAIM1)
                    .AddParameter("CLAIM_DAMANCASE_NUM2", DbType.AnsiStringFixedLength, 0, (CLAIMDAMANCASENUM2 = String.Empty), CLAIMDAMANCASENUM2)
                    .AddParameter("CLAIM_DAMANDEMAN_TYPE3", DbType.AnsiStringFixedLength, 0, (CLAIMDAMANDEMANTYPE3 = String.Empty), CLAIMDAMANDEMANTYPE3)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NDAMAGE_COD = itemData.NumericValue("NDAMAGE_COD"), .NMAG_DAM = itemData.NumericValue("NMAG_DAM"), .NAMOUNT = itemData.NumericValue("NAMOUNT"), .NDAMAGE_CODDesc = itemData.StringValue("NDAMAGE_CODDESC"), .NMAG_DAMDesc = itemData.StringValue("NMAG_DAMDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "CLAIM_DAMATblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CLAIM_DAMATblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function CLAIM_DAMATblDataCount(CLAIMDAMANCLAIM1 As String, CLAIMDAMANCASENUM2 As String, CLAIMDAMANDEMANTYPE3 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT CLAIM_DAMA.NDAMAGE_COD, CLAIM_DAMA.NMAG_DAM, CLAIM_DAMA.NAMOUNT, TABLE5579.SDESCRIPT NDAMAGE_CODDESC, TABLE5674.SDESCRIPT NMAG_DAMDESC FROM CLAIM_DAMA CLAIM_DAMA LEFT JOIN TABLE5579 TABLE5579 ON TABLE5579.NAUTO_PART = CLAIM_DAMA.NDAMAGE_COD LEFT JOIN TABLE5674 TABLE5674 ON TABLE5674.NMAG_DAM = CLAIM_DAMA.NMAG_DAM  WHERE CLAIM_DAMA.NCLAIM = @:CLAIM_DAMANCLAIM1 AND CLAIM_DAMA.NCASE_NUM = @:CLAIM_DAMANCASE_NUM2 AND CLAIM_DAMA.NDEMAN_TYPE = @:CLAIM_DAMANDEMAN_TYPE3)", "CLAIM_DAMA", "Linked.LatCombined")
                    .AddParameter("CLAIM_DAMANCLAIM1", DbType.AnsiStringFixedLength, 0, (CLAIMDAMANCLAIM1 = String.Empty), CLAIMDAMANCLAIM1)
                    .AddParameter("CLAIM_DAMANCASE_NUM2", DbType.AnsiStringFixedLength, 0, (CLAIMDAMANCASENUM2 = String.Empty), CLAIMDAMANCASENUM2)
                    .AddParameter("CLAIM_DAMANDEMAN_TYPE3", DbType.AnsiStringFixedLength, 0, (CLAIMDAMANDEMANTYPE3 = String.Empty), CLAIMDAMANDEMANTYPE3)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "CLAIM_DAMATblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CLAIM_DAMATblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function CLAIM_DAMASelectCommandActionCLAIM_DAMA(CLAIMDAMANCLAIM1 As String, CLAIMDAMANCASENUM2 As String, CLAIMDAMANDEMANTYPE3 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(CLAIM_DAMA.NDAMAGE_COD) COUNTDATA FROM CLAIM_DAMA CLAIM_DAMA LEFT JOIN TABLE5579 TABLE5579 ON TABLE5579.NAUTO_PART = CLAIM_DAMA.NDAMAGE_COD LEFT JOIN TABLE5674 TABLE5674 ON TABLE5674.NMAG_DAM = CLAIM_DAMA.NMAG_DAM  WHERE CLAIM_DAMA.NCLAIM = @:CLAIM_DAMANCLAIM1 AND CLAIM_DAMA.NCASE_NUM = @:CLAIM_DAMANCASE_NUM2 AND CLAIM_DAMA.NDEMAN_TYPE = @:CLAIM_DAMANDEMAN_TYPE3", "CLAIM_DAMA", "Linked.LatCombined")
                    .AddParameter("CLAIM_DAMANCLAIM1", DbType.AnsiStringFixedLength, 0, (CLAIMDAMANCLAIM1 = String.Empty), CLAIMDAMANCLAIM1)
                    .AddParameter("CLAIM_DAMANCASE_NUM2", DbType.AnsiStringFixedLength, 0, (CLAIMDAMANCASENUM2 = String.Empty), CLAIMDAMANCASENUM2)
                    .AddParameter("CLAIM_DAMANDEMAN_TYPE3", DbType.AnsiStringFixedLength, 0, (CLAIMDAMANDEMANTYPE3 = String.Empty), CLAIMDAMANDEMANTYPE3)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "CLAIM_DAMASelectCommandActionCLAIM_DAMA", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CLAIM_DAMASelectCommandActionCLAIM_DAMA)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function CLAIM_THIRTblDataLoad(CLAIMTHIRNCLAIM1 As String, CLAIMTHIRNCASENUM2 As String, CLAIMTHIRNDEMANTYPE3 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.SLICENSE_TY = String.Empty, .SREGIST = String.Empty, .SCHASSIS = String.Empty, .SMOTOR = String.Empty, .STHIR_POLIC = String.Empty, .STHIR_CLAIM = String.Empty, .SRECOV_IND = String.Empty, .NTHIR_COMP = 0, .NBLAME = 0, .SLICENSE_TYDesc = String.Empty, .NBLAMEDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT CLAIM_THIR.SLICENSE_TY, CLAIM_THIR.SREGIST, CLAIM_THIR.SCHASSIS, CLAIM_THIR.SMOTOR, CLAIM_THIR.STHIR_POLIC, CLAIM_THIR.STHIR_CLAIM, CLAIM_THIR.SRECOV_IND, CLAIM_THIR.NTHIR_COMP, CLAIM_THIR.NBLAME, TABLE80.SDESCRIPT SLICENSE_TYDESC, TABLE204.SDESCRIPT NBLAMEDESC FROM CLAIM_THIR CLAIM_THIR LEFT JOIN TABLE80 TABLE80 ON TABLE80.SLICENSE_TY = CLAIM_THIR.SLICENSE_TY LEFT JOIN TABLE204 TABLE204 ON TABLE204.NBLAME = CLAIM_THIR.NBLAME  WHERE CLAIM_THIR.NCLAIM = @:CLAIM_THIRNCLAIM1 AND CLAIM_THIR.NCASE_NUM = @:CLAIM_THIRNCASE_NUM2 AND CLAIM_THIR.NDEMAN_TYPE = @:CLAIM_THIRNDEMAN_TYPE3", "CLAIM_THIR", "Linked.LatCombined")
                    .AddParameter("CLAIM_THIRNCLAIM1", DbType.AnsiStringFixedLength, 0, (CLAIMTHIRNCLAIM1 = String.Empty), CLAIMTHIRNCLAIM1)
                    .AddParameter("CLAIM_THIRNCASE_NUM2", DbType.AnsiStringFixedLength, 0, (CLAIMTHIRNCASENUM2 = String.Empty), CLAIMTHIRNCASENUM2)
                    .AddParameter("CLAIM_THIRNDEMAN_TYPE3", DbType.AnsiStringFixedLength, 0, (CLAIMTHIRNDEMANTYPE3 = String.Empty), CLAIMTHIRNDEMANTYPE3)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.SLICENSE_TY = itemData.StringValue("SLICENSE_TY"), .SREGIST = itemData.StringValue("SREGIST"), .SCHASSIS = itemData.StringValue("SCHASSIS"), .SMOTOR = itemData.StringValue("SMOTOR"), .STHIR_POLIC = itemData.StringValue("STHIR_POLIC"), .STHIR_CLAIM = itemData.StringValue("STHIR_CLAIM"), .SRECOV_IND = itemData.StringValue("SRECOV_IND"), .NTHIR_COMP = itemData.NumericValue("NTHIR_COMP"), .NBLAME = itemData.NumericValue("NBLAME"), .SLICENSE_TYDesc = itemData.StringValue("SLICENSE_TYDESC"), .NBLAMEDesc = itemData.StringValue("NBLAMEDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "CLAIM_THIRTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CLAIM_THIRTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function CLAIM_THIRTblDataCount(CLAIMTHIRNCLAIM1 As String, CLAIMTHIRNCASENUM2 As String, CLAIMTHIRNDEMANTYPE3 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT CLAIM_THIR.SLICENSE_TY, CLAIM_THIR.SREGIST, CLAIM_THIR.SCHASSIS, CLAIM_THIR.SMOTOR, CLAIM_THIR.STHIR_POLIC, CLAIM_THIR.STHIR_CLAIM, CLAIM_THIR.SRECOV_IND, CLAIM_THIR.NTHIR_COMP, CLAIM_THIR.NBLAME, TABLE80.SDESCRIPT SLICENSE_TYDESC, TABLE204.SDESCRIPT NBLAMEDESC FROM CLAIM_THIR CLAIM_THIR LEFT JOIN TABLE80 TABLE80 ON TABLE80.SLICENSE_TY = CLAIM_THIR.SLICENSE_TY LEFT JOIN TABLE204 TABLE204 ON TABLE204.NBLAME = CLAIM_THIR.NBLAME  WHERE CLAIM_THIR.NCLAIM = @:CLAIM_THIRNCLAIM1 AND CLAIM_THIR.NCASE_NUM = @:CLAIM_THIRNCASE_NUM2 AND CLAIM_THIR.NDEMAN_TYPE = @:CLAIM_THIRNDEMAN_TYPE3)", "CLAIM_THIR", "Linked.LatCombined")
                    .AddParameter("CLAIM_THIRNCLAIM1", DbType.AnsiStringFixedLength, 0, (CLAIMTHIRNCLAIM1 = String.Empty), CLAIMTHIRNCLAIM1)
                    .AddParameter("CLAIM_THIRNCASE_NUM2", DbType.AnsiStringFixedLength, 0, (CLAIMTHIRNCASENUM2 = String.Empty), CLAIMTHIRNCASENUM2)
                    .AddParameter("CLAIM_THIRNDEMAN_TYPE3", DbType.AnsiStringFixedLength, 0, (CLAIMTHIRNDEMANTYPE3 = String.Empty), CLAIMTHIRNDEMANTYPE3)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "CLAIM_THIRTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CLAIM_THIRTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function CLAIM_THIRSelectCommandActionCLAIM_THIR(CLAIMTHIRNCLAIM1 As String, CLAIMTHIRNCASENUM2 As String, CLAIMTHIRNDEMANTYPE3 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(CLAIM_THIR.NTHIR_COMP) COUNTDATA FROM CLAIM_THIR CLAIM_THIR LEFT JOIN TABLE80 TABLE80 ON TABLE80.SLICENSE_TY = CLAIM_THIR.SLICENSE_TY LEFT JOIN TABLE204 TABLE204 ON TABLE204.NBLAME = CLAIM_THIR.NBLAME  WHERE CLAIM_THIR.NCLAIM = @:CLAIM_THIRNCLAIM1 AND CLAIM_THIR.NCASE_NUM = @:CLAIM_THIRNCASE_NUM2 AND CLAIM_THIR.NDEMAN_TYPE = @:CLAIM_THIRNDEMAN_TYPE3", "CLAIM_THIR", "Linked.LatCombined")
                    .AddParameter("CLAIM_THIRNCLAIM1", DbType.AnsiStringFixedLength, 0, (CLAIMTHIRNCLAIM1 = String.Empty), CLAIMTHIRNCLAIM1)
                    .AddParameter("CLAIM_THIRNCASE_NUM2", DbType.AnsiStringFixedLength, 0, (CLAIMTHIRNCASENUM2 = String.Empty), CLAIMTHIRNCASENUM2)
                    .AddParameter("CLAIM_THIRNDEMAN_TYPE3", DbType.AnsiStringFixedLength, 0, (CLAIMTHIRNDEMANTYPE3 = String.Empty), CLAIMTHIRNDEMANTYPE3)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "CLAIM_THIRSelectCommandActionCLAIM_THIR", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CLAIM_THIRSelectCommandActionCLAIM_THIR)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function Life_claimTblDataLoad(LIFECLAIMNCLAIM1 As String, LIFECLAIMNCASENUM2 As String, LIFECLAIMNDEMANTYPE3 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.nCase_num = 0, .nDeman_type = 0, .nIn_lif_typ = 0, .nCla_li_typ = 0, .nMonth_amou = 0, .dEnd_date = Date.MinValue, .nDeman_typeDesc = String.Empty, .nIn_lif_typDesc = String.Empty, .nCla_li_typDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT LIFE_CLAIM.NCASE_NUM, LIFE_CLAIM.NDEMAN_TYPE, LIFE_CLAIM.NIN_LIF_TYP, LIFE_CLAIM.NCLA_LI_TYP, LIFE_CLAIM.NMONTH_AMOU, LIFE_CLAIM.DEND_DATE, TABLE692.SDESCRIPT NDEMAN_TYPEDESC, TABLE211.SDESCRIPT NIN_LIF_TYPDESC, TABLE210.SDESCRIPT NCLA_LI_TYPDESC FROM LIFE_CLAIM LIFE_CLAIM LEFT JOIN TABLE692 TABLE692 ON TABLE692.NDEMAN_TYPE = LIFE_CLAIM.NDEMAN_TYPE LEFT JOIN TABLE211 TABLE211 ON TABLE211.NIN_LIF_TYP = LIFE_CLAIM.NIN_LIF_TYP LEFT JOIN TABLE210 TABLE210 ON TABLE210.NCLA_LI_TYP = LIFE_CLAIM.NCLA_LI_TYP  WHERE LIFE_CLAIM.NCLAIM = @:LIFE_CLAIMNCLAIM1 AND LIFE_CLAIM.NCASE_NUM = @:LIFE_CLAIMNCASE_NUM2 AND LIFE_CLAIM.NDEMAN_TYPE = @:LIFE_CLAIMNDEMAN_TYPE3", "LIFE_CLAIM", "Linked.LatCombined")
                    .AddParameter("LIFE_CLAIMNCLAIM1", DbType.AnsiStringFixedLength, 0, (LIFECLAIMNCLAIM1 = String.Empty), LIFECLAIMNCLAIM1)
                    .AddParameter("LIFE_CLAIMNCASE_NUM2", DbType.AnsiStringFixedLength, 0, (LIFECLAIMNCASENUM2 = String.Empty), LIFECLAIMNCASENUM2)
                    .AddParameter("LIFE_CLAIMNDEMAN_TYPE3", DbType.AnsiStringFixedLength, 0, (LIFECLAIMNDEMANTYPE3 = String.Empty), LIFECLAIMNDEMANTYPE3)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.nCase_num = itemData.NumericValue("NCASE_NUM"), .nDeman_type = itemData.NumericValue("NDEMAN_TYPE"), .nIn_lif_typ = itemData.NumericValue("NIN_LIF_TYP"), .nCla_li_typ = itemData.NumericValue("NCLA_LI_TYP"), .nMonth_amou = itemData.NumericValue("NMONTH_AMOU"), .dEnd_date = itemData.DateTimeValue("DEND_DATE"), .nDeman_typeDesc = itemData.StringValue("NDEMAN_TYPEDESC"), .nIn_lif_typDesc = itemData.StringValue("NIN_LIF_TYPDESC"), .nCla_li_typDesc = itemData.StringValue("NCLA_LI_TYPDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "Life_claimTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (Life_claimTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function Life_claimTblDataCount(LIFECLAIMNCLAIM1 As String, LIFECLAIMNCASENUM2 As String, LIFECLAIMNDEMANTYPE3 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT LIFE_CLAIM.NCASE_NUM, LIFE_CLAIM.NDEMAN_TYPE, LIFE_CLAIM.NIN_LIF_TYP, LIFE_CLAIM.NCLA_LI_TYP, LIFE_CLAIM.NMONTH_AMOU, LIFE_CLAIM.DEND_DATE, TABLE692.SDESCRIPT NDEMAN_TYPEDESC, TABLE211.SDESCRIPT NIN_LIF_TYPDESC, TABLE210.SDESCRIPT NCLA_LI_TYPDESC FROM LIFE_CLAIM LIFE_CLAIM LEFT JOIN TABLE692 TABLE692 ON TABLE692.NDEMAN_TYPE = LIFE_CLAIM.NDEMAN_TYPE LEFT JOIN TABLE211 TABLE211 ON TABLE211.NIN_LIF_TYP = LIFE_CLAIM.NIN_LIF_TYP LEFT JOIN TABLE210 TABLE210 ON TABLE210.NCLA_LI_TYP = LIFE_CLAIM.NCLA_LI_TYP  WHERE LIFE_CLAIM.NCLAIM = @:LIFE_CLAIMNCLAIM1 AND LIFE_CLAIM.NCASE_NUM = @:LIFE_CLAIMNCASE_NUM2 AND LIFE_CLAIM.NDEMAN_TYPE = @:LIFE_CLAIMNDEMAN_TYPE3)", "LIFE_CLAIM", "Linked.LatCombined")
                    .AddParameter("LIFE_CLAIMNCLAIM1", DbType.AnsiStringFixedLength, 0, (LIFECLAIMNCLAIM1 = String.Empty), LIFECLAIMNCLAIM1)
                    .AddParameter("LIFE_CLAIMNCASE_NUM2", DbType.AnsiStringFixedLength, 0, (LIFECLAIMNCASENUM2 = String.Empty), LIFECLAIMNCASENUM2)
                    .AddParameter("LIFE_CLAIMNDEMAN_TYPE3", DbType.AnsiStringFixedLength, 0, (LIFECLAIMNDEMANTYPE3 = String.Empty), LIFECLAIMNDEMANTYPE3)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "Life_claimTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (Life_claimTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function Life_claimSelectCommandActionLIFE_CLAIM(LIFECLAIMNCLAIM1 As String, LIFECLAIMNCASENUM2 As String, LIFECLAIMNDEMANTYPE3 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(LIFE_CLAIM.NCASE_NUM) COUNTDATA FROM LIFE_CLAIM LIFE_CLAIM LEFT JOIN TABLE692 TABLE692 ON TABLE692.NDEMAN_TYPE = LIFE_CLAIM.NDEMAN_TYPE LEFT JOIN TABLE211 TABLE211 ON TABLE211.NIN_LIF_TYP = LIFE_CLAIM.NIN_LIF_TYP LEFT JOIN TABLE210 TABLE210 ON TABLE210.NCLA_LI_TYP = LIFE_CLAIM.NCLA_LI_TYP  WHERE LIFE_CLAIM.NCLAIM = @:LIFE_CLAIMNCLAIM1 AND LIFE_CLAIM.NCASE_NUM = @:LIFE_CLAIMNCASE_NUM2 AND LIFE_CLAIM.NDEMAN_TYPE = @:LIFE_CLAIMNDEMAN_TYPE3", "LIFE_CLAIM", "Linked.LatCombined")
                    .AddParameter("LIFE_CLAIMNCLAIM1", DbType.AnsiStringFixedLength, 0, (LIFECLAIMNCLAIM1 = String.Empty), LIFECLAIMNCLAIM1)
                    .AddParameter("LIFE_CLAIMNCASE_NUM2", DbType.AnsiStringFixedLength, 0, (LIFECLAIMNCASENUM2 = String.Empty), LIFECLAIMNCASENUM2)
                    .AddParameter("LIFE_CLAIMNDEMAN_TYPE3", DbType.AnsiStringFixedLength, 0, (LIFECLAIMNDEMANTYPE3 = String.Empty), LIFECLAIMNDEMANTYPE3)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "Life_claimSelectCommandActionLIFE_CLAIM", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (Life_claimSelectCommandActionLIFE_CLAIM)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function CLAIMBENEFTblDataLoad(CLAIMBENEFNCLAIM1 As String, CLAIMBENEFNCASENUM2 As String, CLAIMBENEFNDEMANTYPE3 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NBENE_TYPE = 0, .SCLIENT = String.Empty, .NRELATION = 0, .NPARTICIP = 0, .SDEMANDANT = String.Empty, .NOFFICE_PAY = 0, .SCLIENT_REP = String.Empty, .NBENE_TYPEDesc = String.Empty, .SCLIENTDesc = String.Empty, .NRELATIONDesc = String.Empty, .NOFFICE_PAYDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT CLAIMBENEF.NBENE_TYPE, CLAIMBENEF.SCLIENT, CLAIMBENEF.NRELATION, CLAIMBENEF.NPARTICIP, CLAIMBENEF.SDEMANDANT, CLAIMBENEF.NOFFICE_PAY, CLAIMBENEF.SCLIENT_REP, TABLE184.SDESCRIPT NBENE_TYPEDESC, CLIENT.SLEGALNAME SCLIENTDESC, TABLE15.SDESCRIPT NRELATIONDESC, TABLE9.SDESCRIPT NOFFICE_PAYDESC FROM CLAIMBENEF CLAIMBENEF LEFT JOIN TABLE184 TABLE184 ON TABLE184.NBENE_TYPE = CLAIMBENEF.NBENE_TYPE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = CLAIMBENEF.SCLIENT LEFT JOIN TABLE15 TABLE15 ON TABLE15.NRELASHIP = CLAIMBENEF.NRELATION LEFT JOIN TABLE9 TABLE9 ON TABLE9.NOFFICE = CLAIMBENEF.NOFFICE_PAY  WHERE CLAIMBENEF.NCLAIM = @:CLAIMBENEFNCLAIM1 AND CLAIMBENEF.NCASE_NUM = @:CLAIMBENEFNCASE_NUM2 AND CLAIMBENEF.NDEMAN_TYPE = @:CLAIMBENEFNDEMAN_TYPE3", "CLAIMBENEF", "Linked.LatCombined")
                    .AddParameter("CLAIMBENEFNCLAIM1", DbType.AnsiStringFixedLength, 0, (CLAIMBENEFNCLAIM1 = String.Empty), CLAIMBENEFNCLAIM1)
                    .AddParameter("CLAIMBENEFNCASE_NUM2", DbType.AnsiStringFixedLength, 0, (CLAIMBENEFNCASENUM2 = String.Empty), CLAIMBENEFNCASENUM2)
                    .AddParameter("CLAIMBENEFNDEMAN_TYPE3", DbType.AnsiStringFixedLength, 0, (CLAIMBENEFNDEMANTYPE3 = String.Empty), CLAIMBENEFNDEMANTYPE3)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NBENE_TYPE = itemData.NumericValue("NBENE_TYPE"), .SCLIENT = itemData.StringValue("SCLIENT"), .NRELATION = itemData.NumericValue("NRELATION"), .NPARTICIP = itemData.NumericValue("NPARTICIP"), .SDEMANDANT = itemData.StringValue("SDEMANDANT"), .NOFFICE_PAY = itemData.NumericValue("NOFFICE_PAY"), .SCLIENT_REP = itemData.StringValue("SCLIENT_REP"), .NBENE_TYPEDesc = itemData.StringValue("NBENE_TYPEDESC"), .SCLIENTDesc = itemData.StringValue("SCLIENTDESC"), .NRELATIONDesc = itemData.StringValue("NRELATIONDESC"), .NOFFICE_PAYDesc = itemData.StringValue("NOFFICE_PAYDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "CLAIMBENEFTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CLAIMBENEFTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function CLAIMBENEFTblDataCount(CLAIMBENEFNCLAIM1 As String, CLAIMBENEFNCASENUM2 As String, CLAIMBENEFNDEMANTYPE3 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT CLAIMBENEF.NBENE_TYPE, CLAIMBENEF.SCLIENT, CLAIMBENEF.NRELATION, CLAIMBENEF.NPARTICIP, CLAIMBENEF.SDEMANDANT, CLAIMBENEF.NOFFICE_PAY, CLAIMBENEF.SCLIENT_REP, TABLE184.SDESCRIPT NBENE_TYPEDESC, CLIENT.SLEGALNAME SCLIENTDESC, TABLE15.SDESCRIPT NRELATIONDESC, TABLE9.SDESCRIPT NOFFICE_PAYDESC FROM CLAIMBENEF CLAIMBENEF LEFT JOIN TABLE184 TABLE184 ON TABLE184.NBENE_TYPE = CLAIMBENEF.NBENE_TYPE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = CLAIMBENEF.SCLIENT LEFT JOIN TABLE15 TABLE15 ON TABLE15.NRELASHIP = CLAIMBENEF.NRELATION LEFT JOIN TABLE9 TABLE9 ON TABLE9.NOFFICE = CLAIMBENEF.NOFFICE_PAY  WHERE CLAIMBENEF.NCLAIM = @:CLAIMBENEFNCLAIM1 AND CLAIMBENEF.NCASE_NUM = @:CLAIMBENEFNCASE_NUM2 AND CLAIMBENEF.NDEMAN_TYPE = @:CLAIMBENEFNDEMAN_TYPE3)", "CLAIMBENEF", "Linked.LatCombined")
                    .AddParameter("CLAIMBENEFNCLAIM1", DbType.AnsiStringFixedLength, 0, (CLAIMBENEFNCLAIM1 = String.Empty), CLAIMBENEFNCLAIM1)
                    .AddParameter("CLAIMBENEFNCASE_NUM2", DbType.AnsiStringFixedLength, 0, (CLAIMBENEFNCASENUM2 = String.Empty), CLAIMBENEFNCASENUM2)
                    .AddParameter("CLAIMBENEFNDEMAN_TYPE3", DbType.AnsiStringFixedLength, 0, (CLAIMBENEFNDEMANTYPE3 = String.Empty), CLAIMBENEFNDEMANTYPE3)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "CLAIMBENEFTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CLAIMBENEFTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function CLAIMBENEFSelectCommandActionCLAIMBENEF(CLAIMBENEFNCLAIM1 As String, CLAIMBENEFNCASENUM2 As String, CLAIMBENEFNDEMANTYPE3 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(CLAIMBENEF.NBENE_TYPE) COUNTDATA FROM CLAIMBENEF CLAIMBENEF LEFT JOIN TABLE184 TABLE184 ON TABLE184.NBENE_TYPE = CLAIMBENEF.NBENE_TYPE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = CLAIMBENEF.SCLIENT LEFT JOIN TABLE15 TABLE15 ON TABLE15.NRELASHIP = CLAIMBENEF.NRELATION LEFT JOIN TABLE9 TABLE9 ON TABLE9.NOFFICE = CLAIMBENEF.NOFFICE_PAY  WHERE CLAIMBENEF.NCLAIM = @:CLAIMBENEFNCLAIM1 AND CLAIMBENEF.NCASE_NUM = @:CLAIMBENEFNCASE_NUM2 AND CLAIMBENEF.NDEMAN_TYPE = @:CLAIMBENEFNDEMAN_TYPE3", "CLAIMBENEF", "Linked.LatCombined")
                    .AddParameter("CLAIMBENEFNCLAIM1", DbType.AnsiStringFixedLength, 0, (CLAIMBENEFNCLAIM1 = String.Empty), CLAIMBENEFNCLAIM1)
                    .AddParameter("CLAIMBENEFNCASE_NUM2", DbType.AnsiStringFixedLength, 0, (CLAIMBENEFNCASENUM2 = String.Empty), CLAIMBENEFNCASENUM2)
                    .AddParameter("CLAIMBENEFNDEMAN_TYPE3", DbType.AnsiStringFixedLength, 0, (CLAIMBENEFNDEMANTYPE3 = String.Empty), CLAIMBENEFNDEMANTYPE3)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "CLAIMBENEFSelectCommandActionCLAIMBENEF", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CLAIMBENEFSelectCommandActionCLAIMBENEF)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function Claim_hisTblDataLoad(CLAIMHISNCLAIM1 As String, CLAIMHISNCASENUM2 As String, CLAIMHISNDEMANTYPE3 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.nCase_num = 0, .dOperdate = Date.MinValue, .nTransac = 0, .sClient = String.Empty, .nOper_type = 0, .nPay_type = 0, .nPay_form = 0, .nServ_order = 0, .sInd_order = String.Empty, .sOrder_num = String.Empty, .sExecuted = String.Empty, .nAmount = 0, .nCurrency = 0, .sClientDesc = String.Empty, .nOper_typeDesc = String.Empty, .nPay_typeDesc = String.Empty, .nPay_formDesc = String.Empty, .nCurrencyDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT CLAIM_HIS.NCASE_NUM, CLAIM_HIS.DOPERDATE, CLAIM_HIS.NTRANSAC, CLAIM_HIS.SCLIENT, CLAIM_HIS.NOPER_TYPE, CLAIM_HIS.NPAY_TYPE, CLAIM_HIS.NPAY_FORM, CLAIM_HIS.NSERV_ORDER, CLAIM_HIS.SIND_ORDER, CLAIM_HIS.SORDER_NUM, CLAIM_HIS.SEXECUTED, CLAIM_HIS.NAMOUNT, CLAIM_HIS.NCURRENCY, CLIENT.SCLIENAME SCLIENTDESC, TABLE140.SDESCRIPT NOPER_TYPEDESC, TABLE199.SDESCRIPT NPAY_TYPEDESC, TABLE138.SDESCRIPT NPAY_FORMDESC, TABLE11.SDESCRIPT NCURRENCYDESC FROM CLAIM_HIS CLAIM_HIS LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = CLAIM_HIS.SCLIENT LEFT JOIN TABLE140 TABLE140 ON TABLE140.NOPER_TYPE = CLAIM_HIS.NOPER_TYPE LEFT JOIN TABLE199 TABLE199 ON TABLE199.NPAY_TYPE = CLAIM_HIS.NPAY_TYPE LEFT JOIN TABLE138 TABLE138 ON TABLE138.NPAY_FORM = CLAIM_HIS.NPAY_FORM LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = CLAIM_HIS.NCURRENCY  WHERE CLAIM_HIS.NCLAIM = @:CLAIM_HISNCLAIM1 AND CLAIM_HIS.NCASE_NUM = @:CLAIM_HISNCASE_NUM2 AND CLAIM_HIS.NDEMAN_TYPE = @:CLAIM_HISNDEMAN_TYPE3", "CLAIM_HIS", "Linked.LatCombined")
                    .AddParameter("CLAIM_HISNCLAIM1", DbType.AnsiStringFixedLength, 0, (CLAIMHISNCLAIM1 = String.Empty), CLAIMHISNCLAIM1)
                    .AddParameter("CLAIM_HISNCASE_NUM2", DbType.AnsiStringFixedLength, 0, (CLAIMHISNCASENUM2 = String.Empty), CLAIMHISNCASENUM2)
                    .AddParameter("CLAIM_HISNDEMAN_TYPE3", DbType.AnsiStringFixedLength, 0, (CLAIMHISNDEMANTYPE3 = String.Empty), CLAIMHISNDEMANTYPE3)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.nCase_num = itemData.NumericValue("NCASE_NUM"), .dOperdate = itemData.DateTimeValue("DOPERDATE"), .nTransac = itemData.NumericValue("NTRANSAC"), .sClient = itemData.StringValue("SCLIENT"), .nOper_type = itemData.NumericValue("NOPER_TYPE"), .nPay_type = itemData.NumericValue("NPAY_TYPE"), .nPay_form = itemData.NumericValue("NPAY_FORM"), .nServ_order = itemData.NumericValue("NSERV_ORDER"), .sInd_order = itemData.StringValue("SIND_ORDER"), .sOrder_num = itemData.StringValue("SORDER_NUM"), .sExecuted = itemData.StringValue("SEXECUTED"), .nAmount = itemData.NumericValue("NAMOUNT"), .nCurrency = itemData.NumericValue("NCURRENCY"), .sClientDesc = itemData.StringValue("SCLIENTDESC"), .nOper_typeDesc = itemData.StringValue("NOPER_TYPEDESC"), .nPay_typeDesc = itemData.StringValue("NPAY_TYPEDESC"), .nPay_formDesc = itemData.StringValue("NPAY_FORMDESC"), .nCurrencyDesc = itemData.StringValue("NCURRENCYDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "Claim_hisTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (Claim_hisTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function Claim_hisTblDataCount(CLAIMHISNCLAIM1 As String, CLAIMHISNCASENUM2 As String, CLAIMHISNDEMANTYPE3 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT CLAIM_HIS.NCASE_NUM, CLAIM_HIS.DOPERDATE, CLAIM_HIS.NTRANSAC, CLAIM_HIS.SCLIENT, CLAIM_HIS.NOPER_TYPE, CLAIM_HIS.NPAY_TYPE, CLAIM_HIS.NPAY_FORM, CLAIM_HIS.NSERV_ORDER, CLAIM_HIS.SIND_ORDER, CLAIM_HIS.SORDER_NUM, CLAIM_HIS.SEXECUTED, CLAIM_HIS.NAMOUNT, CLAIM_HIS.NCURRENCY, CLIENT.SCLIENAME SCLIENTDESC, TABLE140.SDESCRIPT NOPER_TYPEDESC, TABLE199.SDESCRIPT NPAY_TYPEDESC, TABLE138.SDESCRIPT NPAY_FORMDESC, TABLE11.SDESCRIPT NCURRENCYDESC FROM CLAIM_HIS CLAIM_HIS LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = CLAIM_HIS.SCLIENT LEFT JOIN TABLE140 TABLE140 ON TABLE140.NOPER_TYPE = CLAIM_HIS.NOPER_TYPE LEFT JOIN TABLE199 TABLE199 ON TABLE199.NPAY_TYPE = CLAIM_HIS.NPAY_TYPE LEFT JOIN TABLE138 TABLE138 ON TABLE138.NPAY_FORM = CLAIM_HIS.NPAY_FORM LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = CLAIM_HIS.NCURRENCY  WHERE CLAIM_HIS.NCLAIM = @:CLAIM_HISNCLAIM1 AND CLAIM_HIS.NCASE_NUM = @:CLAIM_HISNCASE_NUM2 AND CLAIM_HIS.NDEMAN_TYPE = @:CLAIM_HISNDEMAN_TYPE3)", "CLAIM_HIS", "Linked.LatCombined")
                    .AddParameter("CLAIM_HISNCLAIM1", DbType.AnsiStringFixedLength, 0, (CLAIMHISNCLAIM1 = String.Empty), CLAIMHISNCLAIM1)
                    .AddParameter("CLAIM_HISNCASE_NUM2", DbType.AnsiStringFixedLength, 0, (CLAIMHISNCASENUM2 = String.Empty), CLAIMHISNCASENUM2)
                    .AddParameter("CLAIM_HISNDEMAN_TYPE3", DbType.AnsiStringFixedLength, 0, (CLAIMHISNDEMANTYPE3 = String.Empty), CLAIMHISNDEMANTYPE3)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "Claim_hisTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (Claim_hisTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function Claim_hisSelectCommandActionCLAIM_HIS(CLAIMHISNCLAIM1 As String, CLAIMHISNCASENUM2 As String, CLAIMHISNDEMANTYPE3 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(CLAIM_HIS.NCASE_NUM) COUNTDATA FROM CLAIM_HIS CLAIM_HIS LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = CLAIM_HIS.SCLIENT LEFT JOIN TABLE140 TABLE140 ON TABLE140.NOPER_TYPE = CLAIM_HIS.NOPER_TYPE LEFT JOIN TABLE199 TABLE199 ON TABLE199.NPAY_TYPE = CLAIM_HIS.NPAY_TYPE LEFT JOIN TABLE138 TABLE138 ON TABLE138.NPAY_FORM = CLAIM_HIS.NPAY_FORM LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = CLAIM_HIS.NCURRENCY  WHERE CLAIM_HIS.NCLAIM = @:CLAIM_HISNCLAIM1 AND CLAIM_HIS.NCASE_NUM = @:CLAIM_HISNCASE_NUM2 AND CLAIM_HIS.NDEMAN_TYPE = @:CLAIM_HISNDEMAN_TYPE3", "CLAIM_HIS", "Linked.LatCombined")
                    .AddParameter("CLAIM_HISNCLAIM1", DbType.AnsiStringFixedLength, 0, (CLAIMHISNCLAIM1 = String.Empty), CLAIMHISNCLAIM1)
                    .AddParameter("CLAIM_HISNCASE_NUM2", DbType.AnsiStringFixedLength, 0, (CLAIMHISNCASENUM2 = String.Empty), CLAIMHISNCASENUM2)
                    .AddParameter("CLAIM_HISNDEMAN_TYPE3", DbType.AnsiStringFixedLength, 0, (CLAIMHISNDEMANTYPE3 = String.Empty), CLAIMHISNDEMANTYPE3)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "Claim_hisSelectCommandActionCLAIM_HIS", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (Claim_hisSelectCommandActionCLAIM_HIS)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function CHEQUESTblDataLoad(CHEQUESNCLAIM1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.SREQUEST_TY = String.Empty, .NREQUEST_NU = 0, .SCHEQUE = String.Empty, .NCONCEPT = 0, .NAMOUNT = 0, .NCURRENCYPAY = 0, .NSTA_CHEQUE = 0, .DSTAT_DATE = Date.MinValue, .NOFFICEAGEN = 0, .NAGENCY = 0, .NTYPESUPPORT = 0, .NDOCSUPPORT = 0, .SINTER_PAY = String.Empty, .NUSER_SOL = 0, .NQ_PAYS = 0, .DNULLDATE = Date.MinValue, .DISSUE_DAT = Date.MinValue, .SDESCRIPT = String.Empty, .DDAT_PROPOS = Date.MinValue, .SREQUEST_TYDesc = String.Empty, .NCONCEPTDesc = String.Empty, .NSTA_CHEQUEDesc = String.Empty, .NOFFICEAGENDesc = String.Empty, .NTYPESUPPORTDesc = String.Empty, .SINTER_PAYDesc = String.Empty, .NUSER_SOLDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT CHEQUES.SREQUEST_TY, CHEQUES.NREQUEST_NU, CHEQUES.SCHEQUE, CHEQUES.NCONCEPT, CHEQUES.NAMOUNT, CHEQUES.NCURRENCYPAY, CHEQUES.NSTA_CHEQUE, CHEQUES.DSTAT_DATE, CHEQUES.NOFFICEAGEN, CHEQUES.NAGENCY, CHEQUES.NTYPESUPPORT, CHEQUES.NDOCSUPPORT, CHEQUES.SINTER_PAY, CHEQUES.NUSER_SOL, CHEQUES.NQ_PAYS, CHEQUES.DNULLDATE, CHEQUES.DISSUE_DAT, CHEQUES.SDESCRIPT, CHEQUES.DDAT_PROPOS, TABLE193.SDESCRIPT SREQUEST_TYDESC, TABLE293.SDESCRIPT NCONCEPTDESC, TABLE187.SDESCRIPT NSTA_CHEQUEDESC, TABLE5556.SDESCRIPT NOFFICEAGENDESC, TABLE5570.SDESCRIPT NTYPESUPPORTDESC, CLIENT.SCLIENAME SINTER_PAYDESC, USERS.SINITIALS NUSER_SOLDESC FROM CHEQUES CHEQUES LEFT JOIN TABLE193 TABLE193 ON TABLE193.SREQUEST_TY = CHEQUES.SREQUEST_TY LEFT JOIN TABLE293 TABLE293 ON TABLE293.NCONCEPT = CHEQUES.NCONCEPT LEFT JOIN TABLE187 TABLE187 ON TABLE187.NSTA_CHEQUE = CHEQUES.NSTA_CHEQUE LEFT JOIN TABLE5556 TABLE5556 ON TABLE5556.NOFFICEAGEN = CHEQUES.NOFFICEAGEN LEFT JOIN TABLE5570 TABLE5570 ON TABLE5570.NTYPESUPPORT = CHEQUES.NTYPESUPPORT LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = CHEQUES.SCLIENT LEFT JOIN USERS USERS ON USERS.NUSERCODE = CHEQUES.NUSERCODE  WHERE CHEQUES.NCLAIM = @:CHEQUESNCLAIM1", "CHEQUES", "Linked.LatCombined")
                    .AddParameter("CHEQUESNCLAIM1", DbType.AnsiStringFixedLength, 0, (CHEQUESNCLAIM1 = String.Empty), CHEQUESNCLAIM1)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.SREQUEST_TY = itemData.StringValue("SREQUEST_TY"), .NREQUEST_NU = itemData.NumericValue("NREQUEST_NU"), .SCHEQUE = itemData.StringValue("SCHEQUE"), .NCONCEPT = itemData.NumericValue("NCONCEPT"), .NAMOUNT = itemData.NumericValue("NAMOUNT"), .NCURRENCYPAY = itemData.NumericValue("NCURRENCYPAY"), .NSTA_CHEQUE = itemData.NumericValue("NSTA_CHEQUE"), .DSTAT_DATE = itemData.DateTimeValue("DSTAT_DATE"), .NOFFICEAGEN = itemData.NumericValue("NOFFICEAGEN"), .NAGENCY = itemData.NumericValue("NAGENCY"), .NTYPESUPPORT = itemData.NumericValue("NTYPESUPPORT"), .NDOCSUPPORT = itemData.NumericValue("NDOCSUPPORT"), .SINTER_PAY = itemData.StringValue("SINTER_PAY"), .NUSER_SOL = itemData.NumericValue("NUSER_SOL"), .NQ_PAYS = itemData.NumericValue("NQ_PAYS"), .DNULLDATE = itemData.DateTimeValue("DNULLDATE"), .DISSUE_DAT = itemData.DateTimeValue("DISSUE_DAT"), .SDESCRIPT = itemData.StringValue("SDESCRIPT"), .DDAT_PROPOS = itemData.DateTimeValue("DDAT_PROPOS"), .SREQUEST_TYDesc = itemData.StringValue("SREQUEST_TYDESC"), .NCONCEPTDesc = itemData.StringValue("NCONCEPTDESC"), .NSTA_CHEQUEDesc = itemData.StringValue("NSTA_CHEQUEDESC"), .NOFFICEAGENDesc = itemData.StringValue("NOFFICEAGENDESC"), .NTYPESUPPORTDesc = itemData.StringValue("NTYPESUPPORTDESC"), .SINTER_PAYDesc = itemData.StringValue("SINTER_PAYDESC"), .NUSER_SOLDesc = itemData.StringValue("NUSER_SOLDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "CHEQUESTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CHEQUESTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function CHEQUESTblDataCount(CHEQUESNCLAIM1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT CHEQUES.SREQUEST_TY, CHEQUES.NREQUEST_NU, CHEQUES.SCHEQUE, CHEQUES.NCONCEPT, CHEQUES.NAMOUNT, CHEQUES.NCURRENCYPAY, CHEQUES.NSTA_CHEQUE, CHEQUES.DSTAT_DATE, CHEQUES.NOFFICEAGEN, CHEQUES.NAGENCY, CHEQUES.NTYPESUPPORT, CHEQUES.NDOCSUPPORT, CHEQUES.SINTER_PAY, CHEQUES.NUSER_SOL, CHEQUES.NQ_PAYS, CHEQUES.DNULLDATE, CHEQUES.DISSUE_DAT, CHEQUES.SDESCRIPT, CHEQUES.DDAT_PROPOS, TABLE193.SDESCRIPT SREQUEST_TYDESC, TABLE293.SDESCRIPT NCONCEPTDESC, TABLE187.SDESCRIPT NSTA_CHEQUEDESC, TABLE5556.SDESCRIPT NOFFICEAGENDESC, TABLE5570.SDESCRIPT NTYPESUPPORTDESC, CLIENT.SCLIENAME SINTER_PAYDESC, USERS.SINITIALS NUSER_SOLDESC FROM CHEQUES CHEQUES LEFT JOIN TABLE193 TABLE193 ON TABLE193.SREQUEST_TY = CHEQUES.SREQUEST_TY LEFT JOIN TABLE293 TABLE293 ON TABLE293.NCONCEPT = CHEQUES.NCONCEPT LEFT JOIN TABLE187 TABLE187 ON TABLE187.NSTA_CHEQUE = CHEQUES.NSTA_CHEQUE LEFT JOIN TABLE5556 TABLE5556 ON TABLE5556.NOFFICEAGEN = CHEQUES.NOFFICEAGEN LEFT JOIN TABLE5570 TABLE5570 ON TABLE5570.NTYPESUPPORT = CHEQUES.NTYPESUPPORT LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = CHEQUES.SCLIENT LEFT JOIN USERS USERS ON USERS.NUSERCODE = CHEQUES.NUSERCODE  WHERE CHEQUES.NCLAIM = @:CHEQUESNCLAIM1)", "CHEQUES", "Linked.LatCombined")
                    .AddParameter("CHEQUESNCLAIM1", DbType.AnsiStringFixedLength, 0, (CHEQUESNCLAIM1 = String.Empty), CHEQUESNCLAIM1)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "CHEQUESTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CHEQUESTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function CHEQUESSelectCommandActionCHEQUES(CHEQUESNCLAIM1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(CHEQUES.NREQUEST_NU) COUNTDATA FROM CHEQUES CHEQUES LEFT JOIN TABLE193 TABLE193 ON TABLE193.SREQUEST_TY = CHEQUES.SREQUEST_TY LEFT JOIN TABLE293 TABLE293 ON TABLE293.NCONCEPT = CHEQUES.NCONCEPT LEFT JOIN TABLE187 TABLE187 ON TABLE187.NSTA_CHEQUE = CHEQUES.NSTA_CHEQUE LEFT JOIN TABLE5556 TABLE5556 ON TABLE5556.NOFFICEAGEN = CHEQUES.NOFFICEAGEN LEFT JOIN TABLE5570 TABLE5570 ON TABLE5570.NTYPESUPPORT = CHEQUES.NTYPESUPPORT LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = CHEQUES.SCLIENT LEFT JOIN USERS USERS ON USERS.NUSERCODE = CHEQUES.NUSERCODE  WHERE CHEQUES.NCLAIM = @:CHEQUESNCLAIM1", "CHEQUES", "Linked.LatCombined")
                    .AddParameter("CHEQUESNCLAIM1", DbType.AnsiStringFixedLength, 0, (CHEQUESNCLAIM1 = String.Empty), CHEQUESNCLAIM1)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "CHEQUESSelectCommandActionCHEQUES", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CHEQUESSelectCommandActionCHEQUES)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function CLAIM_HIS2TblDataLoad(CLAIMHISNCLAIM1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NID = 0, .NCASE_NUM = 0, .NTRANSAC = 0, .NOPER_TYPE = 0, .DOPERDATE = Date.MinValue, .NTRANSCLAIMREV = 0, .NOPER_TYPEDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT CLAIM_HIS.NID, CLAIM_HIS.NCASE_NUM, CLAIM_HIS.NTRANSAC, CLAIM_HIS.NOPER_TYPE, CLAIM_HIS.DOPERDATE, CLAIM_HIS.NTRANSCLAIMREV, TABLE140.SDESCRIPT NOPER_TYPEDESC FROM CLAIM_HIS CLAIM_HIS LEFT JOIN TABLE140 TABLE140 ON TABLE140.NOPER_TYPE = CLAIM_HIS.NOPER_TYPE  WHERE CLAIM_HIS.NCLAIM = @:CLAIM_HISNCLAIM1", "CLAIM_HIS", "Linked.LatCombined")
                    .AddParameter("CLAIM_HISNCLAIM1", DbType.AnsiStringFixedLength, 0, (CLAIMHISNCLAIM1 = String.Empty), CLAIMHISNCLAIM1)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NID = itemData.NumericValue("NID"), .NCASE_NUM = itemData.NumericValue("NCASE_NUM"), .NTRANSAC = itemData.NumericValue("NTRANSAC"), .NOPER_TYPE = itemData.NumericValue("NOPER_TYPE"), .DOPERDATE = itemData.DateTimeValue("DOPERDATE"), .NTRANSCLAIMREV = itemData.NumericValue("NTRANSCLAIMREV"), .NOPER_TYPEDesc = itemData.StringValue("NOPER_TYPEDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "CLAIM_HIS2TblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CLAIM_HIS2TblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function CLAIM_HIS2TblDataCount(CLAIMHISNCLAIM1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT CLAIM_HIS.NID, CLAIM_HIS.NCASE_NUM, CLAIM_HIS.NTRANSAC, CLAIM_HIS.NOPER_TYPE, CLAIM_HIS.DOPERDATE, CLAIM_HIS.NTRANSCLAIMREV, TABLE140.SDESCRIPT NOPER_TYPEDESC FROM CLAIM_HIS CLAIM_HIS LEFT JOIN TABLE140 TABLE140 ON TABLE140.NOPER_TYPE = CLAIM_HIS.NOPER_TYPE  WHERE CLAIM_HIS.NCLAIM = @:CLAIM_HISNCLAIM1)", "CLAIM_HIS", "Linked.LatCombined")
                    .AddParameter("CLAIM_HISNCLAIM1", DbType.AnsiStringFixedLength, 0, (CLAIMHISNCLAIM1 = String.Empty), CLAIMHISNCLAIM1)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "CLAIM_HIS2TblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CLAIM_HIS2TblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function CLAIM_HIS2SelectCommandActionCLAIM_HIS(CLAIMHISNCLAIM1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(CLAIM_HIS.NID) COUNTDATA FROM CLAIM_HIS CLAIM_HIS LEFT JOIN TABLE140 TABLE140 ON TABLE140.NOPER_TYPE = CLAIM_HIS.NOPER_TYPE  WHERE CLAIM_HIS.NCLAIM = @:CLAIM_HISNCLAIM1", "CLAIM_HIS", "Linked.LatCombined")
                    .AddParameter("CLAIM_HISNCLAIM1", DbType.AnsiStringFixedLength, 0, (CLAIMHISNCLAIM1 = String.Empty), CLAIMHISNCLAIM1)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaSiniestros", "CLAIM_HIS2SelectCommandActionCLAIM_HIS", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CLAIM_HIS2SelectCommandActionCLAIM_HIS)", ex.Message)
                End With
            End Try

            Return resultData
        End Function


#End Region

#Region "Lookups Web Methods"


#End Region

#Region "Form Actions"


#End Region





#Region "Common Utilities"

        Private Shared Sub SetDefaultValuesFromQueryString(formData As EntryData)
            If HttpContext.Current.Request.QueryString("Siniestro").IsNotEmpty Then
                formData.Siniestro = HttpContext.Current.Request.QueryString("Siniestro")
            End If
            If HttpContext.Current.Request.QueryString("RecordEffectiveDate").IsNotEmpty Then
                formData.RecordEffectiveDate = HttpContext.Current.Request.QueryString("RecordEffectiveDate")
            End If
        End Sub	


#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property Siniestro As Object
            <DataMember()> Public Property RecordEffectiveDate As DateTime
            <DataMember()> Public Property RootItemsnClaim As System.Int32
            <DataMember()> Public Property RootItemsNBRANCH As System.Int32
            <DataMember()> Public Property RootItemsNPRODUCT As System.Int32
            <DataMember()> Public Property RootItemsnPolicy As System.Int32
            <DataMember()> Public Property RootItemsNCERTIF As System.Int32
            <DataMember()> Public Property RootItemsDDECLADAT As System.DateTime
            <DataMember()> Public Property RootItemsSCLAIMTYP As System.String
            <DataMember()> Public Property RootItemsNCAUSECOD As System.Int32
            <DataMember()> Public Property RootItemsSSTACLAIM As System.String
            <DataMember()> Public Property RootItemsDPRESCDAT As System.DateTime
            <DataMember()> Public Property RootItemsDOCCURDAT As System.DateTime
            <DataMember()> Public Property RootItemsNLOC_RESERV As System.Int32
            <DataMember()> Public Property RootItemsNLOC_REC_AM As System.Int32
            <DataMember()> Public Property RootItemsNLOC_PAY_AM As System.Int32
            <DataMember()> Public Property RootItemsNLOC_OUT_AM As System.Int32
            <DataMember()> Public Property RootItemsNLOC_COS_RE As System.Int32
            <DataMember()> Public Property RootItemsNIDCATAS As System.Int32
            <DataMember()> Public Property RootItemsClaim_casenCase_num As System.Int32
            <DataMember()> Public Property RootItemsClaim_casenDeman_type As System.Int32
            <DataMember()> Public Property RootItemsClaim_casesStaCase As System.String
            <DataMember()> Public Property RootItemsClaim_casenNoteDama As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseNCLAIM As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseCl_covernCase_num As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseCl_covernModulec As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseCl_coverNCOVER As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseCl_coversClient As System.String
            <DataMember()> Public Property RootItemsClaim_caseCl_covernDeman_type As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseCl_covernDamProf As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseCl_coversReservstat As System.String
            <DataMember()> Public Property RootItemsClaim_caseCl_covernReserve As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseCl_covernRec_amount As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseCl_covernPay_amount As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseCl_covernLoc_cos_re As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseCl_coversFrantype As System.String
            <DataMember()> Public Property RootItemsClaim_caseCl_covernFra_amount As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseCl_covernCurrency As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseCl_coverNBRANCH As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseCl_coverNPRODUCT As System.Int32
            <DataMember()> Public Property Cl_cover_Cl_cover As List(Of Cl_cover_Cl_coverItem)
            <DataMember()> Public Property RootItemsClaim_caseClaim_attmnCase_num As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseClaim_attmnDeman_type As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseClaim_attmsClient As System.String
            <DataMember()> Public Property RootItemsClaim_caseClaim_attmnService As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseClaim_attmsIllness As System.String
            <DataMember()> Public Property RootItemsClaim_caseClaim_attmsClientProf As System.String
            <DataMember()> Public Property Claim_attm_Claim_attm As List(Of Claim_attm_Claim_attmItem)
            <DataMember()> Public Property RootItemsClaim_caseClaim_autonCase_num As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseClaim_autonDeman_type As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseClaim_autosAlcoholic As System.String
            <DataMember()> Public Property RootItemsClaim_caseClaim_autosPoliceDem As System.String
            <DataMember()> Public Property RootItemsClaim_caseClaim_autonInfraction As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseClaim_autonAuto_quant As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseClaim_autonNotenum As System.Int32
            <DataMember()> Public Property Claim_auto_Claim_auto As List(Of Claim_auto_Claim_autoItem)
            <DataMember()> Public Property RootItemsClaim_caseCLAIM_DAMANDAMAGE_COD As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseCLAIM_DAMANMAG_DAM As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseCLAIM_DAMANAMOUNT As System.Int32
            <DataMember()> Public Property CLAIM_DAMA_CLAIM_DAMA As List(Of CLAIM_DAMA_CLAIM_DAMAItem)
            <DataMember()> Public Property RootItemsClaim_caseCLAIM_THIRSLICENSE_TY As System.String
            <DataMember()> Public Property RootItemsClaim_caseCLAIM_THIRSREGIST As System.String
            <DataMember()> Public Property RootItemsClaim_caseCLAIM_THIRSCHASSIS As System.String
            <DataMember()> Public Property RootItemsClaim_caseCLAIM_THIRSMOTOR As System.String
            <DataMember()> Public Property RootItemsClaim_caseCLAIM_THIRSTHIR_POLIC As System.String
            <DataMember()> Public Property RootItemsClaim_caseCLAIM_THIRSTHIR_CLAIM As System.String
            <DataMember()> Public Property RootItemsClaim_caseCLAIM_THIRSRECOV_IND As System.String
            <DataMember()> Public Property RootItemsClaim_caseCLAIM_THIRNTHIR_COMP As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseCLAIM_THIRNBLAME As System.Int32
            <DataMember()> Public Property CLAIM_THIR_CLAIM_THIR As List(Of CLAIM_THIR_CLAIM_THIRItem)
            <DataMember()> Public Property RootItemsClaim_caseLife_claimnCase_num As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseLife_claimnDeman_type As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseLife_claimnIn_lif_typ As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseLife_claimnCla_li_typ As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseLife_claimnMonth_amou As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseLife_claimdEnd_date As System.DateTime
            <DataMember()> Public Property Life_claim_Life_claim As List(Of Life_claim_Life_claimItem)
            <DataMember()> Public Property RootItemsClaim_caseCLAIMBENEFNBENE_TYPE As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseCLAIMBENEFSCLIENT As System.String
            <DataMember()> Public Property RootItemsClaim_caseCLAIMBENEFNRELATION As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseCLAIMBENEFNPARTICIP As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseCLAIMBENEFSDEMANDANT As System.String
            <DataMember()> Public Property RootItemsClaim_caseCLAIMBENEFNOFFICE_PAY As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseCLAIMBENEFSCLIENT_REP As System.String
            <DataMember()> Public Property CLAIMBENEF_CLAIMBENEF As List(Of CLAIMBENEF_CLAIMBENEFItem)
            <DataMember()> Public Property RootItemsClaim_caseClaim_hisnCase_num As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseClaim_hisdOperdate As System.DateTime
            <DataMember()> Public Property RootItemsClaim_caseClaim_hisnTransac As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseClaim_hissClient As System.String
            <DataMember()> Public Property RootItemsClaim_caseClaim_hisnOper_type As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseClaim_hisnPay_type As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseClaim_hisnPay_form As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseClaim_hisnServ_order As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseClaim_hissInd_order As System.String
            <DataMember()> Public Property RootItemsClaim_caseClaim_hissOrder_num As System.String
            <DataMember()> Public Property RootItemsClaim_caseClaim_hissExecuted As System.String
            <DataMember()> Public Property RootItemsClaim_caseClaim_hisnAmount As System.Int32
            <DataMember()> Public Property RootItemsClaim_caseClaim_hisnCurrency As System.Int32
            <DataMember()> Public Property Claim_his_Claim_his As List(Of Claim_his_Claim_hisItem)
            <DataMember()> Public Property Claim_case_Claim_case As List(Of Claim_case_Claim_caseItem)
            <DataMember()> Public Property RootItemsCHEQUESSREQUEST_TY As System.String
            <DataMember()> Public Property RootItemsCHEQUESNREQUEST_NU As System.Int32
            <DataMember()> Public Property RootItemsCHEQUESSCHEQUE As System.String
            <DataMember()> Public Property RootItemsCHEQUESNCONCEPT As System.Int32
            <DataMember()> Public Property RootItemsCHEQUESNAMOUNT As System.Int32
            <DataMember()> Public Property RootItemsCHEQUESNCURRENCYPAY As System.Int32
            <DataMember()> Public Property RootItemsCHEQUESNSTA_CHEQUE As System.Int32
            <DataMember()> Public Property RootItemsCHEQUESDSTAT_DATE As System.DateTime
            <DataMember()> Public Property RootItemsCHEQUESNOFFICEAGEN As System.Int32
            <DataMember()> Public Property RootItemsCHEQUESNAGENCY As System.Int32
            <DataMember()> Public Property RootItemsCHEQUESNTYPESUPPORT As System.Int32
            <DataMember()> Public Property RootItemsCHEQUESNDOCSUPPORT As System.Int32
            <DataMember()> Public Property RootItemsCHEQUESSINTER_PAY As System.String
            <DataMember()> Public Property RootItemsCHEQUESNUSER_SOL As System.Int32
            <DataMember()> Public Property RootItemsCHEQUESNQ_PAYS As System.Int32
            <DataMember()> Public Property RootItemsCHEQUESDNULLDATE As System.DateTime
            <DataMember()> Public Property RootItemsCHEQUESDISSUE_DAT As System.DateTime
            <DataMember()> Public Property RootItemsCHEQUESSDESCRIPT As System.String
            <DataMember()> Public Property RootItemsCHEQUESDDAT_PROPOS As System.DateTime
            <DataMember()> Public Property CHEQUES_CHEQUES As List(Of CHEQUES_CHEQUESItem)
            <DataMember()> Public Property RootItemsCLAIM_HIS2NID As System.Int32
            <DataMember()> Public Property RootItemsCLAIM_HIS2NCASE_NUM As System.Int32
            <DataMember()> Public Property RootItemsCLAIM_HIS2NTRANSAC As System.Int32
            <DataMember()> Public Property RootItemsCLAIM_HIS2NOPER_TYPE As System.Int32
            <DataMember()> Public Property RootItemsCLAIM_HIS2DOPERDATE As System.DateTime
            <DataMember()> Public Property RootItemsCLAIM_HIS2NTRANSCLAIMREV As System.Int32
            <DataMember()> Public Property CLAIM_HIS2_CLAIM_HIS2 As List(Of CLAIM_HIS2_CLAIM_HIS2Item)
            <DataMember()> Public Property Items_Item As List(Of Items_ItemItem)

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Cl_cover_Cl_coverItem

            <DataMember()> Public Property nCase_num As System.Int32
            <DataMember()> Public Property nModulec As System.Int32
            <DataMember()> Public Property NCOVER As System.Int32
            <DataMember()> Public Property NCOVERDesc As System.String
            <DataMember()> Public Property sClient As System.String
            <DataMember()> Public Property sClientDesc As System.String
            <DataMember()> Public Property nDeman_type As System.Int32
            <DataMember()> Public Property nDeman_typeDesc As System.String
            <DataMember()> Public Property nDamProf As System.Int32
            <DataMember()> Public Property sReservstat As System.String
            <DataMember()> Public Property nReserve As System.Int32
            <DataMember()> Public Property nRec_amount As System.Int32
            <DataMember()> Public Property nPay_amount As System.Int32
            <DataMember()> Public Property nLoc_cos_re As System.Int32
            <DataMember()> Public Property sFrantype As System.String
            <DataMember()> Public Property sFrantypeDesc As System.String
            <DataMember()> Public Property nFra_amount As System.Int32
            <DataMember()> Public Property nCurrency As System.Int32
            <DataMember()> Public Property nCurrencyDesc As System.String
            <DataMember()> Public Property NBRANCH As System.Int32
            <DataMember()> Public Property NPRODUCT As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Claim_attm_Claim_attmItem

            <DataMember()> Public Property nCase_num As System.Int32
            <DataMember()> Public Property nDeman_type As System.Int32
            <DataMember()> Public Property nDeman_typeDesc As System.String
            <DataMember()> Public Property sClient As System.String
            <DataMember()> Public Property sClientDesc As System.String
            <DataMember()> Public Property nService As System.Int32
            <DataMember()> Public Property sIllness As System.String
            <DataMember()> Public Property sIllnessDesc As System.String
            <DataMember()> Public Property sClientProf As System.String
            <DataMember()> Public Property sClientProfDesc As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Claim_auto_Claim_autoItem

            <DataMember()> Public Property nCase_num As System.Int32
            <DataMember()> Public Property nDeman_type As System.Int32
            <DataMember()> Public Property nDeman_typeDesc As System.String
            <DataMember()> Public Property sAlcoholic As System.String
            <DataMember()> Public Property sPoliceDem As System.String
            <DataMember()> Public Property nInfraction As System.Int32
            <DataMember()> Public Property nAuto_quant As System.Int32
            <DataMember()> Public Property nNotenum As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class CLAIM_DAMA_CLAIM_DAMAItem

            <DataMember()> Public Property NDAMAGE_COD As System.Int32
            <DataMember()> Public Property NDAMAGE_CODDesc As System.String
            <DataMember()> Public Property NMAG_DAM As System.Int32
            <DataMember()> Public Property NMAG_DAMDesc As System.String
            <DataMember()> Public Property NAMOUNT As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class CLAIM_THIR_CLAIM_THIRItem

            <DataMember()> Public Property SLICENSE_TY As System.String
            <DataMember()> Public Property SLICENSE_TYDesc As System.String
            <DataMember()> Public Property SREGIST As System.String
            <DataMember()> Public Property SCHASSIS As System.String
            <DataMember()> Public Property SMOTOR As System.String
            <DataMember()> Public Property STHIR_POLIC As System.String
            <DataMember()> Public Property STHIR_CLAIM As System.String
            <DataMember()> Public Property SRECOV_IND As System.String
            <DataMember()> Public Property NTHIR_COMP As System.Int32
            <DataMember()> Public Property NBLAME As System.Int32
            <DataMember()> Public Property NBLAMEDesc As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Life_claim_Life_claimItem

            <DataMember()> Public Property nCase_num As System.Int32
            <DataMember()> Public Property nDeman_type As System.Int32
            <DataMember()> Public Property nDeman_typeDesc As System.String
            <DataMember()> Public Property nIn_lif_typ As System.Int32
            <DataMember()> Public Property nIn_lif_typDesc As System.String
            <DataMember()> Public Property nCla_li_typ As System.Int32
            <DataMember()> Public Property nCla_li_typDesc As System.String
            <DataMember()> Public Property nMonth_amou As System.Int32
            <DataMember()> Public Property dEnd_date As System.DateTime

        End Class

        <Serializable()>
        <DataContract()>
        Public Class CLAIMBENEF_CLAIMBENEFItem

            <DataMember()> Public Property NBENE_TYPE As System.Int32
            <DataMember()> Public Property NBENE_TYPEDesc As System.String
            <DataMember()> Public Property SCLIENT As System.String
            <DataMember()> Public Property SCLIENTDesc As System.String
            <DataMember()> Public Property NRELATION As System.Int32
            <DataMember()> Public Property NRELATIONDesc As System.String
            <DataMember()> Public Property NPARTICIP As System.Int32
            <DataMember()> Public Property SDEMANDANT As System.String
            <DataMember()> Public Property NOFFICE_PAY As System.Int32
            <DataMember()> Public Property NOFFICE_PAYDesc As System.String
            <DataMember()> Public Property SCLIENT_REP As System.String
            <DataMember()> Public Property SCLIENT_REPDesc As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Claim_his_Claim_hisItem

            <DataMember()> Public Property nCase_num As System.Int32
            <DataMember()> Public Property dOperdate As System.DateTime
            <DataMember()> Public Property nTransac As System.Int32
            <DataMember()> Public Property sClient As System.String
            <DataMember()> Public Property sClientDesc As System.String
            <DataMember()> Public Property nOper_type As System.Int32
            <DataMember()> Public Property nOper_typeDesc As System.String
            <DataMember()> Public Property nPay_type As System.Int32
            <DataMember()> Public Property nPay_typeDesc As System.String
            <DataMember()> Public Property nPay_form As System.Int32
            <DataMember()> Public Property nPay_formDesc As System.String
            <DataMember()> Public Property nServ_order As System.Int32
            <DataMember()> Public Property sInd_order As System.String
            <DataMember()> Public Property sOrder_num As System.String
            <DataMember()> Public Property sExecuted As System.String
            <DataMember()> Public Property nAmount As System.Int32
            <DataMember()> Public Property nCurrency As System.Int32
            <DataMember()> Public Property nCurrencyDesc As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Claim_case_Claim_caseItem

            <DataMember()> Public Property nCase_num As System.Int32
            <DataMember()> Public Property nDeman_type As System.Int32
            <DataMember()> Public Property nDeman_typeDesc As System.String
            <DataMember()> Public Property sStaCase As System.String
            <DataMember()> Public Property sStaCaseDesc As System.String
            <DataMember()> Public Property nNoteDama As System.Int32
            <DataMember()> Public Property NCLAIM As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class CHEQUES_CHEQUESItem

            <DataMember()> Public Property SREQUEST_TY As System.String
            <DataMember()> Public Property SREQUEST_TYDesc As System.String
            <DataMember()> Public Property NREQUEST_NU As System.Int32
            <DataMember()> Public Property SCHEQUE As System.String
            <DataMember()> Public Property NCONCEPT As System.Int32
            <DataMember()> Public Property NCONCEPTDesc As System.String
            <DataMember()> Public Property NAMOUNT As System.Int32
            <DataMember()> Public Property NCURRENCYPAY As System.Int32
            <DataMember()> Public Property NSTA_CHEQUE As System.Int32
            <DataMember()> Public Property NSTA_CHEQUEDesc As System.String
            <DataMember()> Public Property DSTAT_DATE As System.DateTime
            <DataMember()> Public Property NOFFICEAGEN As System.Int32
            <DataMember()> Public Property NOFFICEAGENDesc As System.String
            <DataMember()> Public Property NAGENCY As System.Int32
            <DataMember()> Public Property NTYPESUPPORT As System.Int32
            <DataMember()> Public Property NTYPESUPPORTDesc As System.String
            <DataMember()> Public Property NDOCSUPPORT As System.Int32
            <DataMember()> Public Property SINTER_PAY As System.String
            <DataMember()> Public Property SINTER_PAYDesc As System.String
            <DataMember()> Public Property NUSER_SOL As System.Int32
            <DataMember()> Public Property NUSER_SOLDesc As System.String
            <DataMember()> Public Property NQ_PAYS As System.Int32
            <DataMember()> Public Property DNULLDATE As System.DateTime
            <DataMember()> Public Property DISSUE_DAT As System.DateTime
            <DataMember()> Public Property SDESCRIPT As System.String
            <DataMember()> Public Property DDAT_PROPOS As System.DateTime

        End Class

        <Serializable()>
        <DataContract()>
        Public Class CLAIM_HIS2_CLAIM_HIS2Item

            <DataMember()> Public Property NID As System.Int32
            <DataMember()> Public Property NCASE_NUM As System.Int32
            <DataMember()> Public Property NTRANSAC As System.Int32
            <DataMember()> Public Property NOPER_TYPE As System.Int32
            <DataMember()> Public Property NOPER_TYPEDesc As System.String
            <DataMember()> Public Property DOPERDATE As System.DateTime
            <DataMember()> Public Property NTRANSCLAIMREV As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Items_ItemItem

            <DataMember()> Public Property nClaim As System.Int32
            <DataMember()> Public Property NBRANCH As System.Int32
            <DataMember()> Public Property NBRANCHDesc As System.String
            <DataMember()> Public Property NPRODUCT As System.Int32
            <DataMember()> Public Property NPRODUCTDesc As System.String
            <DataMember()> Public Property nPolicy As System.Int32
            <DataMember()> Public Property NCERTIF As System.Int32
            <DataMember()> Public Property DDECLADAT As System.DateTime
            <DataMember()> Public Property SCLAIMTYP As System.String
            <DataMember()> Public Property SCLAIMTYPDesc As System.String
            <DataMember()> Public Property NCAUSECOD As System.Int32
            <DataMember()> Public Property NCAUSECODDesc As System.String
            <DataMember()> Public Property SSTACLAIM As System.String
            <DataMember()> Public Property SSTACLAIMDesc As System.String
            <DataMember()> Public Property DPRESCDAT As System.DateTime
            <DataMember()> Public Property DOCCURDAT As System.DateTime
            <DataMember()> Public Property NLOC_RESERV As System.Int32
            <DataMember()> Public Property NLOC_REC_AM As System.Int32
            <DataMember()> Public Property NLOC_PAY_AM As System.Int32
            <DataMember()> Public Property NLOC_OUT_AM As System.Int32
            <DataMember()> Public Property NLOC_COS_RE As System.Int32
            <DataMember()> Public Property NIDCATAS As System.Int32

        End Class


#End Region

    End Class

End Namespace