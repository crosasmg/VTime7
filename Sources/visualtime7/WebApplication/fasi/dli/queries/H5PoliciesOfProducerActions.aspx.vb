'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Query Designer v7.1.120.1 at 2019/02/27 11:24:48 a.m. model release 1, Form Generator v1.0.34.22 - Query Generator v1.0.16.8
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class H5PoliciesOfProducerActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"
   
        <WebMethod()>
        Public Shared Function ItemsTblDataLoad(filter As String, INTERMEDIARIONINTERMED4 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NBRANCH = 0, .NPRODUCT = 0, .NPOLICY = 0, .NCERTIF = 0, .NINTERMED = 0, .NBRANCHDesc = String.Empty, .NPRODUCTDesc = String.Empty, .SCLIENTDesc = String.Empty, .NNULLCODEDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT ROLES.NBRANCH, ROLES.NPRODUCT, ROLES.NPOLICY, ROLES.NCERTIF, ROLES.NINTERMED, TABLE10.SSHORT_DES NBRANCHDESC, PRODMASTER.SSHORT_DES NPRODUCTDESC, CERTIFICAT.SCLIENT, CERTIFICAT.DDATE_ORIGI, CERTIFICAT.DEXPIRDAT, CERTIFICAT.DNEXTRECEIP, CERTIFICAT.DNULLDATE, CERTIFICAT.NNULLCODE, CLIENT.SCLIENAME SCLIENTDESC, TABLE13.SDESCRIPT NNULLCODEDESC FROM ROLES ROLES LEFT JOIN TABLE10 TABLE10 ON TABLE10.NBRANCH = ROLES.NBRANCH LEFT JOIN PRODMASTER PRODMASTER ON PRODMASTER.NBRANCH = ROLES.NBRANCH  AND PRODMASTER.NPRODUCT = ROLES.NPRODUCT LEFT JOIN CERTIFICAT CERTIFICAT ON CERTIFICAT.SCERTYPE = ROLES.SCERTYPE  AND CERTIFICAT.NBRANCH = ROLES.NBRANCH  AND CERTIFICAT.NPRODUCT = ROLES.NPRODUCT  AND CERTIFICAT.NPOLICY = ROLES.NPOLICY  AND CERTIFICAT.NCERTIF = ROLES.NCERTIF LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = CERTIFICAT.SCLIENT LEFT JOIN TABLE13 TABLE13 ON TABLE13.NNULLCODE = CERTIFICAT.NNULLCODE  WHERE ROLES.NROLE = 13 AND CERTIFICAT.SCERTYPE = '2' AND CERTIFICAT.SSTATUSVA <> '3' AND ROLES.NINTERMED = @:ROLESNINTERMED4", "ROLES", "Linked.LatCombined")
                    .AddParameter("ROLESNINTERMED4", DbType.Decimal, 0, False, INTERMEDIARIONINTERMED4)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NBRANCH = itemData.NumericValue("NBRANCH"), .NPRODUCT = itemData.NumericValue("NPRODUCT"), .NPOLICY = itemData.NumericValue("NPOLICY"), .NCERTIF = itemData.NumericValue("NCERTIF"), .NINTERMED = itemData.NumericValue("NINTERMED"), .NBRANCHDesc = itemData.StringValue("NBRANCHDESC"), .NPRODUCTDesc = itemData.StringValue("NPRODUCTDESC"), .SCLIENTDesc = itemData.StringValue("SCLIENTDESC"), .NNULLCODEDesc = itemData.StringValue("NNULLCODEDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5PoliciesOfProducer", "ItemsTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (ItemsTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function ItemsTblDataCount(filter As String, INTERMEDIARIONINTERMED4 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT ROLES.NBRANCH, ROLES.NPRODUCT, ROLES.NPOLICY, ROLES.NCERTIF, ROLES.NINTERMED, TABLE10.SSHORT_DES NBRANCHDESC, PRODMASTER.SSHORT_DES NPRODUCTDESC, CERTIFICAT.SCLIENT, CERTIFICAT.DDATE_ORIGI, CERTIFICAT.DEXPIRDAT, CERTIFICAT.DNEXTRECEIP, CERTIFICAT.DNULLDATE, CERTIFICAT.NNULLCODE, CLIENT.SCLIENAME SCLIENTDESC, TABLE13.SDESCRIPT NNULLCODEDESC FROM ROLES ROLES LEFT JOIN TABLE10 TABLE10 ON TABLE10.NBRANCH = ROLES.NBRANCH LEFT JOIN PRODMASTER PRODMASTER ON PRODMASTER.NBRANCH = ROLES.NBRANCH  AND PRODMASTER.NPRODUCT = ROLES.NPRODUCT LEFT JOIN CERTIFICAT CERTIFICAT ON CERTIFICAT.SCERTYPE = ROLES.SCERTYPE  AND CERTIFICAT.NBRANCH = ROLES.NBRANCH  AND CERTIFICAT.NPRODUCT = ROLES.NPRODUCT  AND CERTIFICAT.NPOLICY = ROLES.NPOLICY  AND CERTIFICAT.NCERTIF = ROLES.NCERTIF LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = CERTIFICAT.SCLIENT LEFT JOIN TABLE13 TABLE13 ON TABLE13.NNULLCODE = CERTIFICAT.NNULLCODE  WHERE ROLES.NROLE = 13 AND CERTIFICAT.SCERTYPE = '2' AND CERTIFICAT.SSTATUSVA <> '3' AND ROLES.NINTERMED = @:ROLESNINTERMED4)", "ROLES", "Linked.LatCombined")
                    .AddParameter("ROLESNINTERMED4", DbType.Decimal, 0, False, INTERMEDIARIONINTERMED4)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5PoliciesOfProducer", "ItemsTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (ItemsTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

#End Region

#Region "Lookups Web Methods"


#End Region

#Region "Form Actions"


#End Region





#Region "Common Utilities"

        Private Shared Sub SetDefaultValuesFromQueryString(formData As EntryData)
            If HttpContext.Current.Request.QueryString("Intermediario").IsNotEmpty Then
                formData.Intermediario = HttpContext.Current.Request.QueryString("Intermediario")
            End If
            If HttpContext.Current.Request.QueryString("RecordEffectiveDate").IsNotEmpty Then
                formData.RecordEffectiveDate = HttpContext.Current.Request.QueryString("RecordEffectiveDate")
            End If

        End Sub	


#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property Intermediario As System.Int64
            <DataMember()> Public Property RecordEffectiveDate As DateTime
            <DataMember()> Public Property RootItemsSCLIENT As System.String
            <DataMember()> Public Property RootItemsNBRANCH As System.Int32
            <DataMember()> Public Property RootItemsNPRODUCT As System.Int32
            <DataMember()> Public Property RootItemsNPOLICY As System.Int32
            <DataMember()> Public Property RootItemsNCERTIF As System.Int32
            <DataMember()> Public Property RootItemsDDATE_ORIGI As System.DateTime
            <DataMember()> Public Property RootItemsDEXPIRDAT As System.DateTime
            <DataMember()> Public Property RootItemsDNEXTRECEIP As System.DateTime
            <DataMember()> Public Property RootItemsDNULLDATE As System.DateTime
            <DataMember()> Public Property RootItemsNNULLCODE As System.Int32
            <DataMember()> Public Property RootItemsNINTERMED As System.Int32
            <DataMember()> Public Property Items_Item As List(Of Items_ItemItem)

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Items_ItemItem

            <DataMember()> Public Property SCLIENT As System.String
            <DataMember()> Public Property SCLIENTDesc As System.String
            <DataMember()> Public Property NBRANCH As System.Int32
            <DataMember()> Public Property NBRANCHDesc As System.String
            <DataMember()> Public Property NPRODUCT As System.Int32
            <DataMember()> Public Property NPRODUCTDesc As System.String
            <DataMember()> Public Property NPOLICY As System.Int32
            <DataMember()> Public Property NCERTIF As System.Int32
            <DataMember()> Public Property DDATE_ORIGI As System.DateTime
            <DataMember()> Public Property DEXPIRDAT As System.DateTime
            <DataMember()> Public Property DNEXTRECEIP As System.DateTime
            <DataMember()> Public Property DNULLDATE As System.DateTime
            <DataMember()> Public Property NNULLCODE As System.Int32
            <DataMember()> Public Property NNULLCODEDesc As System.String
            <DataMember()> Public Property NINTERMED As System.Int32

        End Class


#End Region

    End Class

End Namespace