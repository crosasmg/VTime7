'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Query Designer v7.1.120.1 at 2019/03/01 02:25:41 p.m. model release 2, Form Generator v1.0.34.22 - Query Generator v1.0.16.8
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class HT5ConsultadePolizaActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"
   
        <WebMethod()>
        Public Shared Function ItemsTblDataLoad(POLICYIDNPOLICY1 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NBRANCH = 0, .NPRODUCT = 0, .NPOLICY = 0, .NCERTIF = 0, .NCAPITAL = 0, .NPAYFREQ = 0, .SSTATUSVA = String.Empty, .DSTARTDATE = Date.MinValue, .NWAIT_CODE = 0, .DISSUEDAT = Date.MinValue, .SRENEWAL = String.Empty, .DNULLDATE = Date.MinValue, .NNULLCODE = 0, .DEXPIRDAT = Date.MinValue, .DCHANGDAT = Date.MinValue, .SCERTYPE = String.Empty, .NDIGIT = 0, .NBRANCHDesc = String.Empty, .NPRODUCTDesc = String.Empty, .NPAYFREQDesc = String.Empty, .SSTATUSVADesc = String.Empty, .NWAIT_CODEDesc = String.Empty, .NNULLCODEDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT CERTIFICAT.NBRANCH, CERTIFICAT.NPRODUCT, CERTIFICAT.NPOLICY, CERTIFICAT.NCERTIF, CERTIFICAT.NCAPITAL, CERTIFICAT.NPAYFREQ, CERTIFICAT.SSTATUSVA, CERTIFICAT.DSTARTDATE, CERTIFICAT.NWAIT_CODE, CERTIFICAT.DISSUEDAT, CERTIFICAT.SRENEWAL, CERTIFICAT.DNULLDATE, CERTIFICAT.NNULLCODE, CERTIFICAT.DEXPIRDAT, CERTIFICAT.DCHANGDAT, CERTIFICAT.SCERTYPE, CERTIFICAT.NDIGIT, TABLE10.SDESCRIPT NBRANCHDESC, PRODMASTER.SDESCRIPT NPRODUCTDESC, TABLE36.SDESCRIPT NPAYFREQDESC, TABLE181.SDESCRIPT SSTATUSVADESC, TAB_WAITPO.SDESCRIPT NWAIT_CODEDESC, TABLE13.SDESCRIPT NNULLCODEDESC FROM CERTIFICAT CERTIFICAT LEFT JOIN TABLE10 TABLE10 ON TABLE10.NBRANCH = CERTIFICAT.NBRANCH LEFT JOIN PRODMASTER PRODMASTER ON PRODMASTER.NBRANCH = CERTIFICAT.NBRANCH  AND PRODMASTER.NPRODUCT = CERTIFICAT.NPRODUCT LEFT JOIN TABLE36 TABLE36 ON TABLE36.NPAYFREQ = CERTIFICAT.NPAYFREQ LEFT JOIN TABLE181 TABLE181 ON TABLE181.SSTATUSVA = CERTIFICAT.SSTATUSVA LEFT JOIN TAB_WAITPO TAB_WAITPO ON TAB_WAITPO.NWAIT_CODE = CERTIFICAT.NWAIT_CODE LEFT JOIN TABLE13 TABLE13 ON TABLE13.NNULLCODE = CERTIFICAT.NNULLCODE  WHERE CERTIFICAT.NPOLICY = @:CERTIFICATNPOLICY1 AND CERTIFICAT.SCERTYPE = '2' AND CERTIFICAT.SSTATUSVA <> '3'", "CERTIFICAT", "Linked.LatCombined")
                    .AddParameter("CERTIFICATNPOLICY1", DbType.Decimal, 0, False, POLICYIDNPOLICY1)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NBRANCH = itemData.NumericValue("NBRANCH"), .NPRODUCT = itemData.NumericValue("NPRODUCT"), .NPOLICY = itemData.NumericValue("NPOLICY"), .NCERTIF = itemData.NumericValue("NCERTIF"), .NCAPITAL = itemData.NumericValue("NCAPITAL"), .NPAYFREQ = itemData.NumericValue("NPAYFREQ"), .SSTATUSVA = itemData.StringValue("SSTATUSVA"), .DSTARTDATE = itemData.DateTimeValue("DSTARTDATE"), .NWAIT_CODE = itemData.NumericValue("NWAIT_CODE"), .DISSUEDAT = itemData.DateTimeValue("DISSUEDAT"), .SRENEWAL = itemData.StringValue("SRENEWAL"), .DNULLDATE = itemData.DateTimeValue("DNULLDATE"), .NNULLCODE = itemData.NumericValue("NNULLCODE"), .DEXPIRDAT = itemData.DateTimeValue("DEXPIRDAT"), .DCHANGDAT = itemData.DateTimeValue("DCHANGDAT"), .SCERTYPE = itemData.StringValue("SCERTYPE"), .NDIGIT = itemData.NumericValue("NDIGIT"), .NBRANCHDesc = itemData.StringValue("NBRANCHDESC"), .NPRODUCTDesc = itemData.StringValue("NPRODUCTDESC"), .NPAYFREQDesc = itemData.StringValue("NPAYFREQDESC"), .SSTATUSVADesc = itemData.StringValue("SSTATUSVADESC"), .NWAIT_CODEDesc = itemData.StringValue("NWAIT_CODEDESC"), .NNULLCODEDesc = itemData.StringValue("NNULLCODEDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "ItemsTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (ItemsTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function ItemsTblDataCount(POLICYIDNPOLICY1 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT CERTIFICAT.NBRANCH, CERTIFICAT.NPRODUCT, CERTIFICAT.NPOLICY, CERTIFICAT.NCERTIF, CERTIFICAT.NCAPITAL, CERTIFICAT.NPAYFREQ, CERTIFICAT.SSTATUSVA, CERTIFICAT.DSTARTDATE, CERTIFICAT.NWAIT_CODE, CERTIFICAT.DISSUEDAT, CERTIFICAT.SRENEWAL, CERTIFICAT.DNULLDATE, CERTIFICAT.NNULLCODE, CERTIFICAT.DEXPIRDAT, CERTIFICAT.DCHANGDAT, CERTIFICAT.SCERTYPE, CERTIFICAT.NDIGIT, TABLE10.SDESCRIPT NBRANCHDESC, PRODMASTER.SDESCRIPT NPRODUCTDESC, TABLE36.SDESCRIPT NPAYFREQDESC, TABLE181.SDESCRIPT SSTATUSVADESC, TAB_WAITPO.SDESCRIPT NWAIT_CODEDESC, TABLE13.SDESCRIPT NNULLCODEDESC FROM CERTIFICAT CERTIFICAT LEFT JOIN TABLE10 TABLE10 ON TABLE10.NBRANCH = CERTIFICAT.NBRANCH LEFT JOIN PRODMASTER PRODMASTER ON PRODMASTER.NBRANCH = CERTIFICAT.NBRANCH  AND PRODMASTER.NPRODUCT = CERTIFICAT.NPRODUCT LEFT JOIN TABLE36 TABLE36 ON TABLE36.NPAYFREQ = CERTIFICAT.NPAYFREQ LEFT JOIN TABLE181 TABLE181 ON TABLE181.SSTATUSVA = CERTIFICAT.SSTATUSVA LEFT JOIN TAB_WAITPO TAB_WAITPO ON TAB_WAITPO.NWAIT_CODE = CERTIFICAT.NWAIT_CODE LEFT JOIN TABLE13 TABLE13 ON TABLE13.NNULLCODE = CERTIFICAT.NNULLCODE  WHERE CERTIFICAT.NPOLICY = @:CERTIFICATNPOLICY1 AND CERTIFICAT.SCERTYPE = '2' AND CERTIFICAT.SSTATUSVA <> '3')", "CERTIFICAT", "Linked.LatCombined")
                    .AddParameter("CERTIFICATNPOLICY1", DbType.Decimal, 0, False, POLICYIDNPOLICY1)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "ItemsTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (ItemsTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function DIR_DEBITTblDataLoad(DIRDEBITSCERTYPE1 As String, DIRDEBITNBRANCH2 As String, DIRDEBITNPRODUCT3 As String, DIRDEBITNPOLICY4 As String, DIRDEBITNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NBANKEXT = 0, .SCREDI_CARD = String.Empty, .NTYP_CRECARD = 0, .DCARDEXPIR = Date.MinValue, .NBANKEXTDesc = String.Empty, .NTYP_CRECARDDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT DIR_DEBIT.NBANKEXT, DIR_DEBIT.SCREDI_CARD, DIR_DEBIT.NTYP_CRECARD, DIR_DEBIT.DCARDEXPIR, TABLE7.SDESCRIPT NBANKEXTDESC, TABLE183.SDESCRIPT NTYP_CRECARDDESC FROM DIR_DEBIT DIR_DEBIT LEFT JOIN TABLE7 TABLE7 ON TABLE7.NBANK_CODE = DIR_DEBIT.NBANKEXT LEFT JOIN TABLE183 TABLE183 ON TABLE183.NCARD_TYPE = DIR_DEBIT.NTYP_CRECARD  WHERE DIR_DEBIT.SCERTYPE = @:DIR_DEBITSCERTYPE1 AND DIR_DEBIT.NBRANCH = @:DIR_DEBITNBRANCH2 AND DIR_DEBIT.NPRODUCT = @:DIR_DEBITNPRODUCT3 AND DIR_DEBIT.NPOLICY = @:DIR_DEBITNPOLICY4 AND DIR_DEBIT.NCERTIF = @:DIR_DEBITNCERTIF5", "DIR_DEBIT", "Linked.LatCombined")
                    .AddParameter("DIR_DEBITSCERTYPE1", DbType.AnsiStringFixedLength, 0, (DIRDEBITSCERTYPE1 = String.Empty), DIRDEBITSCERTYPE1)
                    .AddParameter("DIR_DEBITNBRANCH2", DbType.AnsiStringFixedLength, 0, (DIRDEBITNBRANCH2 = String.Empty), DIRDEBITNBRANCH2)
                    .AddParameter("DIR_DEBITNPRODUCT3", DbType.AnsiStringFixedLength, 0, (DIRDEBITNPRODUCT3 = String.Empty), DIRDEBITNPRODUCT3)
                    .AddParameter("DIR_DEBITNPOLICY4", DbType.AnsiStringFixedLength, 0, (DIRDEBITNPOLICY4 = String.Empty), DIRDEBITNPOLICY4)
                    .AddParameter("DIR_DEBITNCERTIF5", DbType.AnsiStringFixedLength, 0, (DIRDEBITNCERTIF5 = String.Empty), DIRDEBITNCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NBANKEXT = itemData.NumericValue("NBANKEXT"), .SCREDI_CARD = itemData.StringValue("SCREDI_CARD"), .NTYP_CRECARD = itemData.NumericValue("NTYP_CRECARD"), .DCARDEXPIR = itemData.DateTimeValue("DCARDEXPIR"), .NBANKEXTDesc = itemData.StringValue("NBANKEXTDESC"), .NTYP_CRECARDDesc = itemData.StringValue("NTYP_CRECARDDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "DIR_DEBITTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (DIR_DEBITTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function DIR_DEBITTblDataCount(DIRDEBITSCERTYPE1 As String, DIRDEBITNBRANCH2 As String, DIRDEBITNPRODUCT3 As String, DIRDEBITNPOLICY4 As String, DIRDEBITNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT DIR_DEBIT.NBANKEXT, DIR_DEBIT.SCREDI_CARD, DIR_DEBIT.NTYP_CRECARD, DIR_DEBIT.DCARDEXPIR, TABLE7.SDESCRIPT NBANKEXTDESC, TABLE183.SDESCRIPT NTYP_CRECARDDESC FROM DIR_DEBIT DIR_DEBIT LEFT JOIN TABLE7 TABLE7 ON TABLE7.NBANK_CODE = DIR_DEBIT.NBANKEXT LEFT JOIN TABLE183 TABLE183 ON TABLE183.NCARD_TYPE = DIR_DEBIT.NTYP_CRECARD  WHERE DIR_DEBIT.SCERTYPE = @:DIR_DEBITSCERTYPE1 AND DIR_DEBIT.NBRANCH = @:DIR_DEBITNBRANCH2 AND DIR_DEBIT.NPRODUCT = @:DIR_DEBITNPRODUCT3 AND DIR_DEBIT.NPOLICY = @:DIR_DEBITNPOLICY4 AND DIR_DEBIT.NCERTIF = @:DIR_DEBITNCERTIF5)", "DIR_DEBIT", "Linked.LatCombined")
                    .AddParameter("DIR_DEBITSCERTYPE1", DbType.AnsiStringFixedLength, 0, (DIRDEBITSCERTYPE1 = String.Empty), DIRDEBITSCERTYPE1)
                    .AddParameter("DIR_DEBITNBRANCH2", DbType.AnsiStringFixedLength, 0, (DIRDEBITNBRANCH2 = String.Empty), DIRDEBITNBRANCH2)
                    .AddParameter("DIR_DEBITNPRODUCT3", DbType.AnsiStringFixedLength, 0, (DIRDEBITNPRODUCT3 = String.Empty), DIRDEBITNPRODUCT3)
                    .AddParameter("DIR_DEBITNPOLICY4", DbType.AnsiStringFixedLength, 0, (DIRDEBITNPOLICY4 = String.Empty), DIRDEBITNPOLICY4)
                    .AddParameter("DIR_DEBITNCERTIF5", DbType.AnsiStringFixedLength, 0, (DIRDEBITNCERTIF5 = String.Empty), DIRDEBITNCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "DIR_DEBITTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (DIR_DEBITTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function DIR_DEBITSelectCommandActionDIR_DEBIT(DIRDEBITSCERTYPE1 As String, DIRDEBITNBRANCH2 As String, DIRDEBITNPRODUCT3 As String, DIRDEBITNPOLICY4 As String, DIRDEBITNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(DIR_DEBIT.NBANKEXT) COUNTDATA FROM DIR_DEBIT DIR_DEBIT LEFT JOIN TABLE7 TABLE7 ON TABLE7.NBANK_CODE = DIR_DEBIT.NBANKEXT LEFT JOIN TABLE183 TABLE183 ON TABLE183.NCARD_TYPE = DIR_DEBIT.NTYP_CRECARD  WHERE DIR_DEBIT.SCERTYPE = @:DIR_DEBITSCERTYPE1 AND DIR_DEBIT.NBRANCH = @:DIR_DEBITNBRANCH2 AND DIR_DEBIT.NPRODUCT = @:DIR_DEBITNPRODUCT3 AND DIR_DEBIT.NPOLICY = @:DIR_DEBITNPOLICY4 AND DIR_DEBIT.NCERTIF = @:DIR_DEBITNCERTIF5", "DIR_DEBIT", "Linked.LatCombined")
                    .AddParameter("DIR_DEBITSCERTYPE1", DbType.AnsiStringFixedLength, 0, (DIRDEBITSCERTYPE1 = String.Empty), DIRDEBITSCERTYPE1)
                    .AddParameter("DIR_DEBITNBRANCH2", DbType.AnsiStringFixedLength, 0, (DIRDEBITNBRANCH2 = String.Empty), DIRDEBITNBRANCH2)
                    .AddParameter("DIR_DEBITNPRODUCT3", DbType.AnsiStringFixedLength, 0, (DIRDEBITNPRODUCT3 = String.Empty), DIRDEBITNPRODUCT3)
                    .AddParameter("DIR_DEBITNPOLICY4", DbType.AnsiStringFixedLength, 0, (DIRDEBITNPOLICY4 = String.Empty), DIRDEBITNPOLICY4)
                    .AddParameter("DIR_DEBITNCERTIF5", DbType.AnsiStringFixedLength, 0, (DIRDEBITNCERTIF5 = String.Empty), DIRDEBITNCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "DIR_DEBITSelectCommandActionDIR_DEBIT", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (DIR_DEBITSelectCommandActionDIR_DEBIT)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function ROLESTblDataLoad(ROLESSCERTYPE1 As String, ROLESNBRANCH2 As String, ROLESNPRODUCT3 As String, ROLESNPOLICY4 As String, ROLESNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NROLE = 0, .SCLIENT = String.Empty, .NSTATUSROL = 0, .SSEXCLIEN = String.Empty, .DBIRTHDATE = Date.MinValue, .NTYPERISK = 0, .NRATING = 0, .DEFFECDATE = Date.MinValue, .NROLEDesc = String.Empty, .SCLIENTDesc = String.Empty, .NSTATUSROLDesc = String.Empty, .SSEXCLIENDesc = String.Empty, .NTYPERISKDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT ROLES.NROLE, ROLES.SCLIENT, ROLES.NSTATUSROL, ROLES.SSEXCLIEN, ROLES.DBIRTHDATE, ROLES.NTYPERISK, ROLES.NRATING, ROLES.DEFFECDATE, TABLE12.SDESCRIPT NROLEDESC, CLIENT.SCLIENAME SCLIENTDESC, TABLE5561.SDESCRIPT NSTATUSROLDESC, TABLE18.SDESCRIPT SSEXCLIENDESC, TABLE5639.SDESCRIPT NTYPERISKDESC FROM ROLES ROLES LEFT JOIN TABLE12 TABLE12 ON TABLE12.NROLE = ROLES.NROLE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = ROLES.SCLIENT LEFT JOIN TABLE5561 TABLE5561 ON TABLE5561.NSTATUSROL = ROLES.NSTATUSROL LEFT JOIN TABLE18 TABLE18 ON TABLE18.SSEXCLIEN = ROLES.SSEXCLIEN LEFT JOIN TABLE5639 TABLE5639 ON TABLE5639.NTYPERISK = ROLES.NTYPERISK  WHERE ROLES.SCERTYPE = @:ROLESSCERTYPE1 AND ROLES.NBRANCH = @:ROLESNBRANCH2 AND ROLES.NPRODUCT = @:ROLESNPRODUCT3 AND ROLES.NPOLICY = @:ROLESNPOLICY4 AND ROLES.NCERTIF = @:ROLESNCERTIF5", "ROLES", "Linked.LatCombined")
                    .AddParameter("ROLESSCERTYPE1", DbType.AnsiStringFixedLength, 0, (ROLESSCERTYPE1 = String.Empty), ROLESSCERTYPE1)
                    .AddParameter("ROLESNBRANCH2", DbType.AnsiStringFixedLength, 0, (ROLESNBRANCH2 = String.Empty), ROLESNBRANCH2)
                    .AddParameter("ROLESNPRODUCT3", DbType.AnsiStringFixedLength, 0, (ROLESNPRODUCT3 = String.Empty), ROLESNPRODUCT3)
                    .AddParameter("ROLESNPOLICY4", DbType.AnsiStringFixedLength, 0, (ROLESNPOLICY4 = String.Empty), ROLESNPOLICY4)
                    .AddParameter("ROLESNCERTIF5", DbType.AnsiStringFixedLength, 0, (ROLESNCERTIF5 = String.Empty), ROLESNCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NROLE = itemData.NumericValue("NROLE"), .SCLIENT = itemData.StringValue("SCLIENT"), .NSTATUSROL = itemData.NumericValue("NSTATUSROL"), .SSEXCLIEN = itemData.StringValue("SSEXCLIEN"), .DBIRTHDATE = itemData.DateTimeValue("DBIRTHDATE"), .NTYPERISK = itemData.NumericValue("NTYPERISK"), .NRATING = itemData.NumericValue("NRATING"), .DEFFECDATE = itemData.DateTimeValue("DEFFECDATE"), .NROLEDesc = itemData.StringValue("NROLEDESC"), .SCLIENTDesc = itemData.StringValue("SCLIENTDESC"), .NSTATUSROLDesc = itemData.StringValue("NSTATUSROLDESC"), .SSEXCLIENDesc = itemData.StringValue("SSEXCLIENDESC"), .NTYPERISKDesc = itemData.StringValue("NTYPERISKDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "ROLESTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (ROLESTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function ROLESTblDataCount(ROLESSCERTYPE1 As String, ROLESNBRANCH2 As String, ROLESNPRODUCT3 As String, ROLESNPOLICY4 As String, ROLESNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT ROLES.NROLE, ROLES.SCLIENT, ROLES.NSTATUSROL, ROLES.SSEXCLIEN, ROLES.DBIRTHDATE, ROLES.NTYPERISK, ROLES.NRATING, ROLES.DEFFECDATE, TABLE12.SDESCRIPT NROLEDESC, CLIENT.SCLIENAME SCLIENTDESC, TABLE5561.SDESCRIPT NSTATUSROLDESC, TABLE18.SDESCRIPT SSEXCLIENDESC, TABLE5639.SDESCRIPT NTYPERISKDESC FROM ROLES ROLES LEFT JOIN TABLE12 TABLE12 ON TABLE12.NROLE = ROLES.NROLE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = ROLES.SCLIENT LEFT JOIN TABLE5561 TABLE5561 ON TABLE5561.NSTATUSROL = ROLES.NSTATUSROL LEFT JOIN TABLE18 TABLE18 ON TABLE18.SSEXCLIEN = ROLES.SSEXCLIEN LEFT JOIN TABLE5639 TABLE5639 ON TABLE5639.NTYPERISK = ROLES.NTYPERISK  WHERE ROLES.SCERTYPE = @:ROLESSCERTYPE1 AND ROLES.NBRANCH = @:ROLESNBRANCH2 AND ROLES.NPRODUCT = @:ROLESNPRODUCT3 AND ROLES.NPOLICY = @:ROLESNPOLICY4 AND ROLES.NCERTIF = @:ROLESNCERTIF5)", "ROLES", "Linked.LatCombined")
                    .AddParameter("ROLESSCERTYPE1", DbType.AnsiStringFixedLength, 0, (ROLESSCERTYPE1 = String.Empty), ROLESSCERTYPE1)
                    .AddParameter("ROLESNBRANCH2", DbType.AnsiStringFixedLength, 0, (ROLESNBRANCH2 = String.Empty), ROLESNBRANCH2)
                    .AddParameter("ROLESNPRODUCT3", DbType.AnsiStringFixedLength, 0, (ROLESNPRODUCT3 = String.Empty), ROLESNPRODUCT3)
                    .AddParameter("ROLESNPOLICY4", DbType.AnsiStringFixedLength, 0, (ROLESNPOLICY4 = String.Empty), ROLESNPOLICY4)
                    .AddParameter("ROLESNCERTIF5", DbType.AnsiStringFixedLength, 0, (ROLESNCERTIF5 = String.Empty), ROLESNCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "ROLESTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (ROLESTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function ROLESSelectCommandActionROLES(ROLESSCERTYPE1 As String, ROLESNBRANCH2 As String, ROLESNPRODUCT3 As String, ROLESNPOLICY4 As String, ROLESNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(ROLES.NROLE) COUNTDATA FROM ROLES ROLES LEFT JOIN TABLE12 TABLE12 ON TABLE12.NROLE = ROLES.NROLE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = ROLES.SCLIENT LEFT JOIN TABLE5561 TABLE5561 ON TABLE5561.NSTATUSROL = ROLES.NSTATUSROL LEFT JOIN TABLE18 TABLE18 ON TABLE18.SSEXCLIEN = ROLES.SSEXCLIEN LEFT JOIN TABLE5639 TABLE5639 ON TABLE5639.NTYPERISK = ROLES.NTYPERISK  WHERE ROLES.SCERTYPE = @:ROLESSCERTYPE1 AND ROLES.NBRANCH = @:ROLESNBRANCH2 AND ROLES.NPRODUCT = @:ROLESNPRODUCT3 AND ROLES.NPOLICY = @:ROLESNPOLICY4 AND ROLES.NCERTIF = @:ROLESNCERTIF5", "ROLES", "Linked.LatCombined")
                    .AddParameter("ROLESSCERTYPE1", DbType.AnsiStringFixedLength, 0, (ROLESSCERTYPE1 = String.Empty), ROLESSCERTYPE1)
                    .AddParameter("ROLESNBRANCH2", DbType.AnsiStringFixedLength, 0, (ROLESNBRANCH2 = String.Empty), ROLESNBRANCH2)
                    .AddParameter("ROLESNPRODUCT3", DbType.AnsiStringFixedLength, 0, (ROLESNPRODUCT3 = String.Empty), ROLESNPRODUCT3)
                    .AddParameter("ROLESNPOLICY4", DbType.AnsiStringFixedLength, 0, (ROLESNPOLICY4 = String.Empty), ROLESNPOLICY4)
                    .AddParameter("ROLESNCERTIF5", DbType.AnsiStringFixedLength, 0, (ROLESNCERTIF5 = String.Empty), ROLESNCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "ROLESSelectCommandActionROLES", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (ROLESSelectCommandActionROLES)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function CURREN_POLTblDataLoad(CURRENPOLSCERTYPE1 As String, CURRENPOLNBRANCH2 As String, CURRENPOLNPRODUCT3 As String, CURRENPOLNPOLICY4 As String, CURRENPOLNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NCURRENCY = 0, .NCURRENCYDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT CURREN_POL.NCURRENCY, TABLE11.SDESCRIPT NCURRENCYDESC FROM CURREN_POL CURREN_POL LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = CURREN_POL.NCURRENCY  WHERE CURREN_POL.SCERTYPE = @:CURREN_POLSCERTYPE1 AND CURREN_POL.NBRANCH = @:CURREN_POLNBRANCH2 AND CURREN_POL.NPRODUCT = @:CURREN_POLNPRODUCT3 AND CURREN_POL.NPOLICY = @:CURREN_POLNPOLICY4 AND CURREN_POL.NCERTIF = @:CURREN_POLNCERTIF5", "CURREN_POL", "Linked.LatCombined")
                    .AddParameter("CURREN_POLSCERTYPE1", DbType.AnsiStringFixedLength, 0, (CURRENPOLSCERTYPE1 = String.Empty), CURRENPOLSCERTYPE1)
                    .AddParameter("CURREN_POLNBRANCH2", DbType.AnsiStringFixedLength, 0, (CURRENPOLNBRANCH2 = String.Empty), CURRENPOLNBRANCH2)
                    .AddParameter("CURREN_POLNPRODUCT3", DbType.AnsiStringFixedLength, 0, (CURRENPOLNPRODUCT3 = String.Empty), CURRENPOLNPRODUCT3)
                    .AddParameter("CURREN_POLNPOLICY4", DbType.AnsiStringFixedLength, 0, (CURRENPOLNPOLICY4 = String.Empty), CURRENPOLNPOLICY4)
                    .AddParameter("CURREN_POLNCERTIF5", DbType.AnsiStringFixedLength, 0, (CURRENPOLNCERTIF5 = String.Empty), CURRENPOLNCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NCURRENCY = itemData.NumericValue("NCURRENCY"), .NCURRENCYDesc = itemData.StringValue("NCURRENCYDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "CURREN_POLTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CURREN_POLTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function CURREN_POLTblDataCount(CURRENPOLSCERTYPE1 As String, CURRENPOLNBRANCH2 As String, CURRENPOLNPRODUCT3 As String, CURRENPOLNPOLICY4 As String, CURRENPOLNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT CURREN_POL.NCURRENCY, TABLE11.SDESCRIPT NCURRENCYDESC FROM CURREN_POL CURREN_POL LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = CURREN_POL.NCURRENCY  WHERE CURREN_POL.SCERTYPE = @:CURREN_POLSCERTYPE1 AND CURREN_POL.NBRANCH = @:CURREN_POLNBRANCH2 AND CURREN_POL.NPRODUCT = @:CURREN_POLNPRODUCT3 AND CURREN_POL.NPOLICY = @:CURREN_POLNPOLICY4 AND CURREN_POL.NCERTIF = @:CURREN_POLNCERTIF5)", "CURREN_POL", "Linked.LatCombined")
                    .AddParameter("CURREN_POLSCERTYPE1", DbType.AnsiStringFixedLength, 0, (CURRENPOLSCERTYPE1 = String.Empty), CURRENPOLSCERTYPE1)
                    .AddParameter("CURREN_POLNBRANCH2", DbType.AnsiStringFixedLength, 0, (CURRENPOLNBRANCH2 = String.Empty), CURRENPOLNBRANCH2)
                    .AddParameter("CURREN_POLNPRODUCT3", DbType.AnsiStringFixedLength, 0, (CURRENPOLNPRODUCT3 = String.Empty), CURRENPOLNPRODUCT3)
                    .AddParameter("CURREN_POLNPOLICY4", DbType.AnsiStringFixedLength, 0, (CURRENPOLNPOLICY4 = String.Empty), CURRENPOLNPOLICY4)
                    .AddParameter("CURREN_POLNCERTIF5", DbType.AnsiStringFixedLength, 0, (CURRENPOLNCERTIF5 = String.Empty), CURRENPOLNCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "CURREN_POLTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CURREN_POLTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function CURREN_POLSelectCommandActionCURREN_POL(CURRENPOLSCERTYPE1 As String, CURRENPOLNBRANCH2 As String, CURRENPOLNPRODUCT3 As String, CURRENPOLNPOLICY4 As String, CURRENPOLNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(CURREN_POL.NCURRENCY) COUNTDATA FROM CURREN_POL CURREN_POL LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = CURREN_POL.NCURRENCY  WHERE CURREN_POL.SCERTYPE = @:CURREN_POLSCERTYPE1 AND CURREN_POL.NBRANCH = @:CURREN_POLNBRANCH2 AND CURREN_POL.NPRODUCT = @:CURREN_POLNPRODUCT3 AND CURREN_POL.NPOLICY = @:CURREN_POLNPOLICY4 AND CURREN_POL.NCERTIF = @:CURREN_POLNCERTIF5", "CURREN_POL", "Linked.LatCombined")
                    .AddParameter("CURREN_POLSCERTYPE1", DbType.AnsiStringFixedLength, 0, (CURRENPOLSCERTYPE1 = String.Empty), CURRENPOLSCERTYPE1)
                    .AddParameter("CURREN_POLNBRANCH2", DbType.AnsiStringFixedLength, 0, (CURRENPOLNBRANCH2 = String.Empty), CURRENPOLNBRANCH2)
                    .AddParameter("CURREN_POLNPRODUCT3", DbType.AnsiStringFixedLength, 0, (CURRENPOLNPRODUCT3 = String.Empty), CURRENPOLNPRODUCT3)
                    .AddParameter("CURREN_POLNPOLICY4", DbType.AnsiStringFixedLength, 0, (CURRENPOLNPOLICY4 = String.Empty), CURRENPOLNPOLICY4)
                    .AddParameter("CURREN_POLNCERTIF5", DbType.AnsiStringFixedLength, 0, (CURRENPOLNCERTIF5 = String.Empty), CURRENPOLNCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "CURREN_POLSelectCommandActionCURREN_POL", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CURREN_POLSelectCommandActionCURREN_POL)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function SUM_INSURTblDataLoad(SUMINSURSCERTYPE1 As String, SUMINSURNBRANCH2 As String, SUMINSURNPRODUCT3 As String, SUMINSURNPOLICY4 As String, SUMINSURNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NSUMINS_COD = 0, .NSUM_INSUR = 0, .NCOINSURAN = 0, .NSUMINS_REAL = 0, .NSUMINS_CODDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT SUM_INSUR.NSUMINS_COD, SUM_INSUR.NSUM_INSUR, SUM_INSUR.NCOINSURAN, SUM_INSUR.NSUMINS_REAL, BAS_SUMINS.SDESCRIPT NSUMINS_CODDESC FROM SUM_INSUR SUM_INSUR LEFT JOIN BAS_SUMINS BAS_SUMINS ON BAS_SUMINS.NBRANCH = SUM_INSUR.NBRANCH  AND BAS_SUMINS.NPRODUCT = SUM_INSUR.NPRODUCT  AND BAS_SUMINS.NSUMINS_CO = SUM_INSUR.NSUMINS_COD  WHERE SUM_INSUR.SCERTYPE = @:SUM_INSURSCERTYPE1 AND SUM_INSUR.NBRANCH = @:SUM_INSURNBRANCH2 AND SUM_INSUR.NPRODUCT = @:SUM_INSURNPRODUCT3 AND SUM_INSUR.NPOLICY = @:SUM_INSURNPOLICY4 AND SUM_INSUR.NCERTIF = @:SUM_INSURNCERTIF5", "SUM_INSUR", "Linked.LatCombined")
                    .AddParameter("SUM_INSURSCERTYPE1", DbType.AnsiStringFixedLength, 0, (SUMINSURSCERTYPE1 = String.Empty), SUMINSURSCERTYPE1)
                    .AddParameter("SUM_INSURNBRANCH2", DbType.AnsiStringFixedLength, 0, (SUMINSURNBRANCH2 = String.Empty), SUMINSURNBRANCH2)
                    .AddParameter("SUM_INSURNPRODUCT3", DbType.AnsiStringFixedLength, 0, (SUMINSURNPRODUCT3 = String.Empty), SUMINSURNPRODUCT3)
                    .AddParameter("SUM_INSURNPOLICY4", DbType.AnsiStringFixedLength, 0, (SUMINSURNPOLICY4 = String.Empty), SUMINSURNPOLICY4)
                    .AddParameter("SUM_INSURNCERTIF5", DbType.AnsiStringFixedLength, 0, (SUMINSURNCERTIF5 = String.Empty), SUMINSURNCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NSUMINS_COD = itemData.NumericValue("NSUMINS_COD"), .NSUM_INSUR = itemData.NumericValue("NSUM_INSUR"), .NCOINSURAN = itemData.NumericValue("NCOINSURAN"), .NSUMINS_REAL = itemData.NumericValue("NSUMINS_REAL"), .NSUMINS_CODDesc = itemData.StringValue("NSUMINS_CODDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "SUM_INSURTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (SUM_INSURTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function SUM_INSURTblDataCount(SUMINSURSCERTYPE1 As String, SUMINSURNBRANCH2 As String, SUMINSURNPRODUCT3 As String, SUMINSURNPOLICY4 As String, SUMINSURNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT SUM_INSUR.NSUMINS_COD, SUM_INSUR.NSUM_INSUR, SUM_INSUR.NCOINSURAN, SUM_INSUR.NSUMINS_REAL, BAS_SUMINS.SDESCRIPT NSUMINS_CODDESC FROM SUM_INSUR SUM_INSUR LEFT JOIN BAS_SUMINS BAS_SUMINS ON BAS_SUMINS.NBRANCH = SUM_INSUR.NBRANCH  AND BAS_SUMINS.NPRODUCT = SUM_INSUR.NPRODUCT  AND BAS_SUMINS.NSUMINS_CO = SUM_INSUR.NSUMINS_COD  WHERE SUM_INSUR.SCERTYPE = @:SUM_INSURSCERTYPE1 AND SUM_INSUR.NBRANCH = @:SUM_INSURNBRANCH2 AND SUM_INSUR.NPRODUCT = @:SUM_INSURNPRODUCT3 AND SUM_INSUR.NPOLICY = @:SUM_INSURNPOLICY4 AND SUM_INSUR.NCERTIF = @:SUM_INSURNCERTIF5)", "SUM_INSUR", "Linked.LatCombined")
                    .AddParameter("SUM_INSURSCERTYPE1", DbType.AnsiStringFixedLength, 0, (SUMINSURSCERTYPE1 = String.Empty), SUMINSURSCERTYPE1)
                    .AddParameter("SUM_INSURNBRANCH2", DbType.AnsiStringFixedLength, 0, (SUMINSURNBRANCH2 = String.Empty), SUMINSURNBRANCH2)
                    .AddParameter("SUM_INSURNPRODUCT3", DbType.AnsiStringFixedLength, 0, (SUMINSURNPRODUCT3 = String.Empty), SUMINSURNPRODUCT3)
                    .AddParameter("SUM_INSURNPOLICY4", DbType.AnsiStringFixedLength, 0, (SUMINSURNPOLICY4 = String.Empty), SUMINSURNPOLICY4)
                    .AddParameter("SUM_INSURNCERTIF5", DbType.AnsiStringFixedLength, 0, (SUMINSURNCERTIF5 = String.Empty), SUMINSURNCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "SUM_INSURTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (SUM_INSURTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function SUM_INSURSelectCommandActionSUM_INSUR(SUMINSURSCERTYPE1 As String, SUMINSURNBRANCH2 As String, SUMINSURNPRODUCT3 As String, SUMINSURNPOLICY4 As String, SUMINSURNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(SUM_INSUR.NSUMINS_COD) COUNTDATA FROM SUM_INSUR SUM_INSUR LEFT JOIN BAS_SUMINS BAS_SUMINS ON BAS_SUMINS.NBRANCH = SUM_INSUR.NBRANCH  AND BAS_SUMINS.NPRODUCT = SUM_INSUR.NPRODUCT  AND BAS_SUMINS.NSUMINS_CO = SUM_INSUR.NSUMINS_COD  WHERE SUM_INSUR.SCERTYPE = @:SUM_INSURSCERTYPE1 AND SUM_INSUR.NBRANCH = @:SUM_INSURNBRANCH2 AND SUM_INSUR.NPRODUCT = @:SUM_INSURNPRODUCT3 AND SUM_INSUR.NPOLICY = @:SUM_INSURNPOLICY4 AND SUM_INSUR.NCERTIF = @:SUM_INSURNCERTIF5", "SUM_INSUR", "Linked.LatCombined")
                    .AddParameter("SUM_INSURSCERTYPE1", DbType.AnsiStringFixedLength, 0, (SUMINSURSCERTYPE1 = String.Empty), SUMINSURSCERTYPE1)
                    .AddParameter("SUM_INSURNBRANCH2", DbType.AnsiStringFixedLength, 0, (SUMINSURNBRANCH2 = String.Empty), SUMINSURNBRANCH2)
                    .AddParameter("SUM_INSURNPRODUCT3", DbType.AnsiStringFixedLength, 0, (SUMINSURNPRODUCT3 = String.Empty), SUMINSURNPRODUCT3)
                    .AddParameter("SUM_INSURNPOLICY4", DbType.AnsiStringFixedLength, 0, (SUMINSURNPOLICY4 = String.Empty), SUMINSURNPOLICY4)
                    .AddParameter("SUM_INSURNCERTIF5", DbType.AnsiStringFixedLength, 0, (SUMINSURNCERTIF5 = String.Empty), SUMINSURNCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "SUM_INSURSelectCommandActionSUM_INSUR", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (SUM_INSURSelectCommandActionSUM_INSUR)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function COVERTblDataLoad(COVERSCERTYPE1 As String, COVERNBRANCH2 As String, COVERNPRODUCT3 As String, COVERNPOLICY4 As String, COVERNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NMODULEC = 0, .NCOVER = 0, .NROLE = 0, .SCLIENT = String.Empty, .NCAPITAL = 0, .NPREMIUM = 0, .NCURRENCY = 0, .DEFFECDATE = Date.MinValue, .DNULLDATE = Date.MinValue, .NMODULECDesc = String.Empty, .NCOVERDesc = String.Empty, .NROLEDesc = String.Empty, .SCLIENTDesc = String.Empty, .NCURRENCYDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT COVER.NMODULEC, COVER.NCOVER, COVER.NROLE, COVER.SCLIENT, COVER.NCAPITAL, COVER.NPREMIUM, COVER.NCURRENCY, COVER.DEFFECDATE, COVER.DNULLDATE, TAB_MODUL.SDESCRIPT NMODULECDESC, GCV_COVERAGEDESCRIPTION.SDESCRIPT NCOVERDESC, TABLE12.SDESCRIPT NROLEDESC, CLIENT.SCLIENAME SCLIENTDESC, TABLE11.SDESCRIPT NCURRENCYDESC FROM COVER COVER LEFT JOIN TAB_MODUL TAB_MODUL ON TAB_MODUL.NBRANCH = COVER.NBRANCH  AND TAB_MODUL.NPRODUCT = COVER.NPRODUCT  AND TAB_MODUL.NMODULEC = COVER.NMODULEC LEFT JOIN GCV_COVERAGEDESCRIPTION GCV_COVERAGEDESCRIPTION ON GCV_COVERAGEDESCRIPTION.NBRANCH = COVER.NBRANCH  AND GCV_COVERAGEDESCRIPTION.NPRODUCT = COVER.NPRODUCT  AND GCV_COVERAGEDESCRIPTION.NMODULEC = COVER.NMODULEC  AND GCV_COVERAGEDESCRIPTION.NCOVER = COVER.NCOVER LEFT JOIN TABLE12 TABLE12 ON TABLE12.NROLE = COVER.NROLE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = COVER.SCLIENT LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = COVER.NCURRENCY  WHERE COVER.SCERTYPE = @:COVERSCERTYPE1 AND COVER.NBRANCH = @:COVERNBRANCH2 AND COVER.NPRODUCT = @:COVERNPRODUCT3 AND COVER.NPOLICY = @:COVERNPOLICY4 AND COVER.NCERTIF = @:COVERNCERTIF5", "COVER", "Linked.LatCombined")
                    .AddParameter("COVERSCERTYPE1", DbType.AnsiStringFixedLength, 0, (COVERSCERTYPE1 = String.Empty), COVERSCERTYPE1)
                    .AddParameter("COVERNBRANCH2", DbType.AnsiStringFixedLength, 0, (COVERNBRANCH2 = String.Empty), COVERNBRANCH2)
                    .AddParameter("COVERNPRODUCT3", DbType.AnsiStringFixedLength, 0, (COVERNPRODUCT3 = String.Empty), COVERNPRODUCT3)
                    .AddParameter("COVERNPOLICY4", DbType.AnsiStringFixedLength, 0, (COVERNPOLICY4 = String.Empty), COVERNPOLICY4)
                    .AddParameter("COVERNCERTIF5", DbType.AnsiStringFixedLength, 0, (COVERNCERTIF5 = String.Empty), COVERNCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NMODULEC = itemData.NumericValue("NMODULEC"), .NCOVER = itemData.NumericValue("NCOVER"), .NROLE = itemData.NumericValue("NROLE"), .SCLIENT = itemData.StringValue("SCLIENT"), .NCAPITAL = itemData.NumericValue("NCAPITAL"), .NPREMIUM = itemData.NumericValue("NPREMIUM"), .NCURRENCY = itemData.NumericValue("NCURRENCY"), .DEFFECDATE = itemData.DateTimeValue("DEFFECDATE"), .DNULLDATE = itemData.DateTimeValue("DNULLDATE"), .NMODULECDesc = itemData.StringValue("NMODULECDESC"), .NCOVERDesc = itemData.StringValue("NCOVERDESC"), .NROLEDesc = itemData.StringValue("NROLEDESC"), .SCLIENTDesc = itemData.StringValue("SCLIENTDESC"), .NCURRENCYDesc = itemData.StringValue("NCURRENCYDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "COVERTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (COVERTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function COVERTblDataCount(COVERSCERTYPE1 As String, COVERNBRANCH2 As String, COVERNPRODUCT3 As String, COVERNPOLICY4 As String, COVERNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT COVER.NMODULEC, COVER.NCOVER, COVER.NROLE, COVER.SCLIENT, COVER.NCAPITAL, COVER.NPREMIUM, COVER.NCURRENCY, COVER.DEFFECDATE, COVER.DNULLDATE, TAB_MODUL.SDESCRIPT NMODULECDESC, GCV_COVERAGEDESCRIPTION.SDESCRIPT NCOVERDESC, TABLE12.SDESCRIPT NROLEDESC, CLIENT.SCLIENAME SCLIENTDESC, TABLE11.SDESCRIPT NCURRENCYDESC FROM COVER COVER LEFT JOIN TAB_MODUL TAB_MODUL ON TAB_MODUL.NBRANCH = COVER.NBRANCH  AND TAB_MODUL.NPRODUCT = COVER.NPRODUCT  AND TAB_MODUL.NMODULEC = COVER.NMODULEC LEFT JOIN GCV_COVERAGEDESCRIPTION GCV_COVERAGEDESCRIPTION ON GCV_COVERAGEDESCRIPTION.NBRANCH = COVER.NBRANCH  AND GCV_COVERAGEDESCRIPTION.NPRODUCT = COVER.NPRODUCT  AND GCV_COVERAGEDESCRIPTION.NMODULEC = COVER.NMODULEC  AND GCV_COVERAGEDESCRIPTION.NCOVER = COVER.NCOVER LEFT JOIN TABLE12 TABLE12 ON TABLE12.NROLE = COVER.NROLE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = COVER.SCLIENT LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = COVER.NCURRENCY  WHERE COVER.SCERTYPE = @:COVERSCERTYPE1 AND COVER.NBRANCH = @:COVERNBRANCH2 AND COVER.NPRODUCT = @:COVERNPRODUCT3 AND COVER.NPOLICY = @:COVERNPOLICY4 AND COVER.NCERTIF = @:COVERNCERTIF5)", "COVER", "Linked.LatCombined")
                    .AddParameter("COVERSCERTYPE1", DbType.AnsiStringFixedLength, 0, (COVERSCERTYPE1 = String.Empty), COVERSCERTYPE1)
                    .AddParameter("COVERNBRANCH2", DbType.AnsiStringFixedLength, 0, (COVERNBRANCH2 = String.Empty), COVERNBRANCH2)
                    .AddParameter("COVERNPRODUCT3", DbType.AnsiStringFixedLength, 0, (COVERNPRODUCT3 = String.Empty), COVERNPRODUCT3)
                    .AddParameter("COVERNPOLICY4", DbType.AnsiStringFixedLength, 0, (COVERNPOLICY4 = String.Empty), COVERNPOLICY4)
                    .AddParameter("COVERNCERTIF5", DbType.AnsiStringFixedLength, 0, (COVERNCERTIF5 = String.Empty), COVERNCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "COVERTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (COVERTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function COVERSelectCommandActionCOVER(COVERSCERTYPE1 As String, COVERNBRANCH2 As String, COVERNPRODUCT3 As String, COVERNPOLICY4 As String, COVERNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(COVER.NMODULEC) COUNTDATA FROM COVER COVER LEFT JOIN TAB_MODUL TAB_MODUL ON TAB_MODUL.NBRANCH = COVER.NBRANCH  AND TAB_MODUL.NPRODUCT = COVER.NPRODUCT  AND TAB_MODUL.NMODULEC = COVER.NMODULEC LEFT JOIN GCV_COVERAGEDESCRIPTION GCV_COVERAGEDESCRIPTION ON GCV_COVERAGEDESCRIPTION.NBRANCH = COVER.NBRANCH  AND GCV_COVERAGEDESCRIPTION.NPRODUCT = COVER.NPRODUCT  AND GCV_COVERAGEDESCRIPTION.NMODULEC = COVER.NMODULEC  AND GCV_COVERAGEDESCRIPTION.NCOVER = COVER.NCOVER LEFT JOIN TABLE12 TABLE12 ON TABLE12.NROLE = COVER.NROLE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = COVER.SCLIENT LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = COVER.NCURRENCY  WHERE COVER.SCERTYPE = @:COVERSCERTYPE1 AND COVER.NBRANCH = @:COVERNBRANCH2 AND COVER.NPRODUCT = @:COVERNPRODUCT3 AND COVER.NPOLICY = @:COVERNPOLICY4 AND COVER.NCERTIF = @:COVERNCERTIF5", "COVER", "Linked.LatCombined")
                    .AddParameter("COVERSCERTYPE1", DbType.AnsiStringFixedLength, 0, (COVERSCERTYPE1 = String.Empty), COVERSCERTYPE1)
                    .AddParameter("COVERNBRANCH2", DbType.AnsiStringFixedLength, 0, (COVERNBRANCH2 = String.Empty), COVERNBRANCH2)
                    .AddParameter("COVERNPRODUCT3", DbType.AnsiStringFixedLength, 0, (COVERNPRODUCT3 = String.Empty), COVERNPRODUCT3)
                    .AddParameter("COVERNPOLICY4", DbType.AnsiStringFixedLength, 0, (COVERNPOLICY4 = String.Empty), COVERNPOLICY4)
                    .AddParameter("COVERNCERTIF5", DbType.AnsiStringFixedLength, 0, (COVERNCERTIF5 = String.Empty), COVERNCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "COVERSelectCommandActionCOVER", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (COVERSelectCommandActionCOVER)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function REINSURANTblDataLoad(REINSURANSCERTYPE3 As String, REINSURANNBRANCH4 As String, REINSURANNPRODUCT5 As String, REINSURANNPOLICY6 As String, REINSURANNCERTIF7 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NBRANCH_REI = 0, .NTYPE_REIN = 0, .NCAPITAL = 0, .NCURRENCY = 0, .NSHARE = 0, .NBRANCH_REIDesc = String.Empty, .NTYPE_REINDesc = String.Empty, .NCURRENCYDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT REINSURAN.NBRANCH_REI, REINSURAN.NTYPE_REIN, REINSURAN.NCAPITAL, REINSURAN.NCURRENCY, REINSURAN.NSHARE, TABLE5000.SDESCRIPT NBRANCH_REIDESC, TABLE173.SDESCRIPT NTYPE_REINDESC, TABLE11.SSHORT_DES NCURRENCYDESC FROM REINSURAN REINSURAN LEFT JOIN TABLE5000 TABLE5000 ON TABLE5000.NBRANCH_REI = REINSURAN.NBRANCH_REI LEFT JOIN TABLE173 TABLE173 ON TABLE173.NTYPE_REIN = REINSURAN.NTYPE_REIN LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = REINSURAN.NCURRENCY  WHERE REINSURAN.NCAPITAL > 0 AND REINSURAN.NTYPE_REIN <> 8 AND REINSURAN.SCERTYPE = @:REINSURANSCERTYPE3 AND REINSURAN.NBRANCH = @:REINSURANNBRANCH4 AND REINSURAN.NPRODUCT = @:REINSURANNPRODUCT5 AND REINSURAN.NPOLICY = @:REINSURANNPOLICY6 AND REINSURAN.NCERTIF = @:REINSURANNCERTIF7", "REINSURAN", "Linked.LatCombined")
                    .AddParameter("REINSURANSCERTYPE3", DbType.AnsiStringFixedLength, 0, (REINSURANSCERTYPE3 = String.Empty), REINSURANSCERTYPE3)
                    .AddParameter("REINSURANNBRANCH4", DbType.AnsiStringFixedLength, 0, (REINSURANNBRANCH4 = String.Empty), REINSURANNBRANCH4)
                    .AddParameter("REINSURANNPRODUCT5", DbType.AnsiStringFixedLength, 0, (REINSURANNPRODUCT5 = String.Empty), REINSURANNPRODUCT5)
                    .AddParameter("REINSURANNPOLICY6", DbType.AnsiStringFixedLength, 0, (REINSURANNPOLICY6 = String.Empty), REINSURANNPOLICY6)
                    .AddParameter("REINSURANNCERTIF7", DbType.AnsiStringFixedLength, 0, (REINSURANNCERTIF7 = String.Empty), REINSURANNCERTIF7)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NBRANCH_REI = itemData.NumericValue("NBRANCH_REI"), .NTYPE_REIN = itemData.NumericValue("NTYPE_REIN"), .NCAPITAL = itemData.NumericValue("NCAPITAL"), .NCURRENCY = itemData.NumericValue("NCURRENCY"), .NSHARE = itemData.NumericValue("NSHARE"), .NBRANCH_REIDesc = itemData.StringValue("NBRANCH_REIDESC"), .NTYPE_REINDesc = itemData.StringValue("NTYPE_REINDESC"), .NCURRENCYDesc = itemData.StringValue("NCURRENCYDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "REINSURANTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (REINSURANTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function REINSURANTblDataCount(REINSURANSCERTYPE3 As String, REINSURANNBRANCH4 As String, REINSURANNPRODUCT5 As String, REINSURANNPOLICY6 As String, REINSURANNCERTIF7 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT REINSURAN.NBRANCH_REI, REINSURAN.NTYPE_REIN, REINSURAN.NCAPITAL, REINSURAN.NCURRENCY, REINSURAN.NSHARE, TABLE5000.SDESCRIPT NBRANCH_REIDESC, TABLE173.SDESCRIPT NTYPE_REINDESC, TABLE11.SSHORT_DES NCURRENCYDESC FROM REINSURAN REINSURAN LEFT JOIN TABLE5000 TABLE5000 ON TABLE5000.NBRANCH_REI = REINSURAN.NBRANCH_REI LEFT JOIN TABLE173 TABLE173 ON TABLE173.NTYPE_REIN = REINSURAN.NTYPE_REIN LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = REINSURAN.NCURRENCY  WHERE REINSURAN.NCAPITAL > 0 AND REINSURAN.NTYPE_REIN <> 8 AND REINSURAN.SCERTYPE = @:REINSURANSCERTYPE3 AND REINSURAN.NBRANCH = @:REINSURANNBRANCH4 AND REINSURAN.NPRODUCT = @:REINSURANNPRODUCT5 AND REINSURAN.NPOLICY = @:REINSURANNPOLICY6 AND REINSURAN.NCERTIF = @:REINSURANNCERTIF7)", "REINSURAN", "Linked.LatCombined")
                    .AddParameter("REINSURANSCERTYPE3", DbType.AnsiStringFixedLength, 0, (REINSURANSCERTYPE3 = String.Empty), REINSURANSCERTYPE3)
                    .AddParameter("REINSURANNBRANCH4", DbType.AnsiStringFixedLength, 0, (REINSURANNBRANCH4 = String.Empty), REINSURANNBRANCH4)
                    .AddParameter("REINSURANNPRODUCT5", DbType.AnsiStringFixedLength, 0, (REINSURANNPRODUCT5 = String.Empty), REINSURANNPRODUCT5)
                    .AddParameter("REINSURANNPOLICY6", DbType.AnsiStringFixedLength, 0, (REINSURANNPOLICY6 = String.Empty), REINSURANNPOLICY6)
                    .AddParameter("REINSURANNCERTIF7", DbType.AnsiStringFixedLength, 0, (REINSURANNCERTIF7 = String.Empty), REINSURANNCERTIF7)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "REINSURANTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (REINSURANTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function REINSURANSelectCommandActionREINSURAN(REINSURANSCERTYPE3 As String, REINSURANNBRANCH4 As String, REINSURANNPRODUCT5 As String, REINSURANNPOLICY6 As String, REINSURANNCERTIF7 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(REINSURAN.NBRANCH_REI) COUNTDATA FROM REINSURAN REINSURAN LEFT JOIN TABLE5000 TABLE5000 ON TABLE5000.NBRANCH_REI = REINSURAN.NBRANCH_REI LEFT JOIN TABLE173 TABLE173 ON TABLE173.NTYPE_REIN = REINSURAN.NTYPE_REIN LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = REINSURAN.NCURRENCY  WHERE REINSURAN.NCAPITAL > 0 AND REINSURAN.NTYPE_REIN <> 8 AND REINSURAN.SCERTYPE = @:REINSURANSCERTYPE3 AND REINSURAN.NBRANCH = @:REINSURANNBRANCH4 AND REINSURAN.NPRODUCT = @:REINSURANNPRODUCT5 AND REINSURAN.NPOLICY = @:REINSURANNPOLICY6 AND REINSURAN.NCERTIF = @:REINSURANNCERTIF7", "REINSURAN", "Linked.LatCombined")
                    .AddParameter("REINSURANSCERTYPE3", DbType.AnsiStringFixedLength, 0, (REINSURANSCERTYPE3 = String.Empty), REINSURANSCERTYPE3)
                    .AddParameter("REINSURANNBRANCH4", DbType.AnsiStringFixedLength, 0, (REINSURANNBRANCH4 = String.Empty), REINSURANNBRANCH4)
                    .AddParameter("REINSURANNPRODUCT5", DbType.AnsiStringFixedLength, 0, (REINSURANNPRODUCT5 = String.Empty), REINSURANNPRODUCT5)
                    .AddParameter("REINSURANNPOLICY6", DbType.AnsiStringFixedLength, 0, (REINSURANNPOLICY6 = String.Empty), REINSURANNPOLICY6)
                    .AddParameter("REINSURANNCERTIF7", DbType.AnsiStringFixedLength, 0, (REINSURANNCERTIF7 = String.Empty), REINSURANNCERTIF7)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "REINSURANSelectCommandActionREINSURAN", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (REINSURANSelectCommandActionREINSURAN)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function REINSURAN2TblDataLoad(REINSURANSCERTYPE3 As String, REINSURANNBRANCH4 As String, REINSURANNPRODUCT5 As String, REINSURANNPOLICY6 As String, REINSURANNCERTIF7 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NBRANCH_REI = 0, .NCOMPANY = 0, .NCAPITAL = 0, .NCURRENCY = 0, .NSHARE = 0, .NCOMMISSI = 0, .NBRANCH_REIDesc = String.Empty, .NCURRENCYDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT REINSURAN.NBRANCH_REI, REINSURAN.NCOMPANY, REINSURAN.NCAPITAL, REINSURAN.NCURRENCY, REINSURAN.NSHARE, REINSURAN.NCOMMISSI, TABLE5000.SDESCRIPT NBRANCH_REIDESC, TABLE11.SSHORT_DES NCURRENCYDESC FROM REINSURAN REINSURAN LEFT JOIN TABLE5000 TABLE5000 ON TABLE5000.NBRANCH_REI = REINSURAN.NBRANCH_REI LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = REINSURAN.NCURRENCY  WHERE REINSURAN.NCAPITAL > 0 AND REINSURAN.NTYPE_REIN = 8 AND REINSURAN.SCERTYPE = @:REINSURANSCERTYPE3 AND REINSURAN.NBRANCH = @:REINSURANNBRANCH4 AND REINSURAN.NPRODUCT = @:REINSURANNPRODUCT5 AND REINSURAN.NPOLICY = @:REINSURANNPOLICY6 AND REINSURAN.NCERTIF = @:REINSURANNCERTIF7", "REINSURAN", "Linked.LatCombined")
                    .AddParameter("REINSURANSCERTYPE3", DbType.AnsiStringFixedLength, 0, (REINSURANSCERTYPE3 = String.Empty), REINSURANSCERTYPE3)
                    .AddParameter("REINSURANNBRANCH4", DbType.AnsiStringFixedLength, 0, (REINSURANNBRANCH4 = String.Empty), REINSURANNBRANCH4)
                    .AddParameter("REINSURANNPRODUCT5", DbType.AnsiStringFixedLength, 0, (REINSURANNPRODUCT5 = String.Empty), REINSURANNPRODUCT5)
                    .AddParameter("REINSURANNPOLICY6", DbType.AnsiStringFixedLength, 0, (REINSURANNPOLICY6 = String.Empty), REINSURANNPOLICY6)
                    .AddParameter("REINSURANNCERTIF7", DbType.AnsiStringFixedLength, 0, (REINSURANNCERTIF7 = String.Empty), REINSURANNCERTIF7)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NBRANCH_REI = itemData.NumericValue("NBRANCH_REI"), .NCOMPANY = itemData.NumericValue("NCOMPANY"), .NCAPITAL = itemData.NumericValue("NCAPITAL"), .NCURRENCY = itemData.NumericValue("NCURRENCY"), .NSHARE = itemData.NumericValue("NSHARE"), .NCOMMISSI = itemData.NumericValue("NCOMMISSI"), .NBRANCH_REIDesc = itemData.StringValue("NBRANCH_REIDESC"), .NCURRENCYDesc = itemData.StringValue("NCURRENCYDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "REINSURAN2TblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (REINSURAN2TblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function REINSURAN2TblDataCount(REINSURANSCERTYPE3 As String, REINSURANNBRANCH4 As String, REINSURANNPRODUCT5 As String, REINSURANNPOLICY6 As String, REINSURANNCERTIF7 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT REINSURAN.NBRANCH_REI, REINSURAN.NCOMPANY, REINSURAN.NCAPITAL, REINSURAN.NCURRENCY, REINSURAN.NSHARE, REINSURAN.NCOMMISSI, TABLE5000.SDESCRIPT NBRANCH_REIDESC, TABLE11.SSHORT_DES NCURRENCYDESC FROM REINSURAN REINSURAN LEFT JOIN TABLE5000 TABLE5000 ON TABLE5000.NBRANCH_REI = REINSURAN.NBRANCH_REI LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = REINSURAN.NCURRENCY  WHERE REINSURAN.NCAPITAL > 0 AND REINSURAN.NTYPE_REIN = 8 AND REINSURAN.SCERTYPE = @:REINSURANSCERTYPE3 AND REINSURAN.NBRANCH = @:REINSURANNBRANCH4 AND REINSURAN.NPRODUCT = @:REINSURANNPRODUCT5 AND REINSURAN.NPOLICY = @:REINSURANNPOLICY6 AND REINSURAN.NCERTIF = @:REINSURANNCERTIF7)", "REINSURAN", "Linked.LatCombined")
                    .AddParameter("REINSURANSCERTYPE3", DbType.AnsiStringFixedLength, 0, (REINSURANSCERTYPE3 = String.Empty), REINSURANSCERTYPE3)
                    .AddParameter("REINSURANNBRANCH4", DbType.AnsiStringFixedLength, 0, (REINSURANNBRANCH4 = String.Empty), REINSURANNBRANCH4)
                    .AddParameter("REINSURANNPRODUCT5", DbType.AnsiStringFixedLength, 0, (REINSURANNPRODUCT5 = String.Empty), REINSURANNPRODUCT5)
                    .AddParameter("REINSURANNPOLICY6", DbType.AnsiStringFixedLength, 0, (REINSURANNPOLICY6 = String.Empty), REINSURANNPOLICY6)
                    .AddParameter("REINSURANNCERTIF7", DbType.AnsiStringFixedLength, 0, (REINSURANNCERTIF7 = String.Empty), REINSURANNCERTIF7)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "REINSURAN2TblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (REINSURAN2TblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function REINSURAN2SelectCommandActionREINSURAN(REINSURANSCERTYPE3 As String, REINSURANNBRANCH4 As String, REINSURANNPRODUCT5 As String, REINSURANNPOLICY6 As String, REINSURANNCERTIF7 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(REINSURAN.NBRANCH_REI) COUNTDATA FROM REINSURAN REINSURAN LEFT JOIN TABLE5000 TABLE5000 ON TABLE5000.NBRANCH_REI = REINSURAN.NBRANCH_REI LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = REINSURAN.NCURRENCY  WHERE REINSURAN.NCAPITAL > 0 AND REINSURAN.NTYPE_REIN = 8 AND REINSURAN.SCERTYPE = @:REINSURANSCERTYPE3 AND REINSURAN.NBRANCH = @:REINSURANNBRANCH4 AND REINSURAN.NPRODUCT = @:REINSURANNPRODUCT5 AND REINSURAN.NPOLICY = @:REINSURANNPOLICY6 AND REINSURAN.NCERTIF = @:REINSURANNCERTIF7", "REINSURAN", "Linked.LatCombined")
                    .AddParameter("REINSURANSCERTYPE3", DbType.AnsiStringFixedLength, 0, (REINSURANSCERTYPE3 = String.Empty), REINSURANSCERTYPE3)
                    .AddParameter("REINSURANNBRANCH4", DbType.AnsiStringFixedLength, 0, (REINSURANNBRANCH4 = String.Empty), REINSURANNBRANCH4)
                    .AddParameter("REINSURANNPRODUCT5", DbType.AnsiStringFixedLength, 0, (REINSURANNPRODUCT5 = String.Empty), REINSURANNPRODUCT5)
                    .AddParameter("REINSURANNPOLICY6", DbType.AnsiStringFixedLength, 0, (REINSURANNPOLICY6 = String.Empty), REINSURANNPOLICY6)
                    .AddParameter("REINSURANNCERTIF7", DbType.AnsiStringFixedLength, 0, (REINSURANNCERTIF7 = String.Empty), REINSURANNCERTIF7)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "REINSURAN2SelectCommandActionREINSURAN", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (REINSURAN2SelectCommandActionREINSURAN)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function DISC_XPREMTblDataLoad(DISCXPREMSCERTYPE1 As String, DISCXPREMNBRANCH2 As String, DISCXPREMNPRODUCT3 As String, DISCXPREMNPOLICY4 As String, DISCXPREMNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NDISC_CODE = 0, .SAGREE = String.Empty, .NCAUSE = 0, .NCURRENCY = 0, .NAMOUNT = 0, .NDISC_CODEDesc = String.Empty, .NCAUSEDesc = String.Empty, .NCURRENCYDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT DISC_XPREM.NDISC_CODE, DISC_XPREM.SAGREE, DISC_XPREM.NCAUSE, DISC_XPREM.NCURRENCY, DISC_XPREM.NAMOUNT, DISCO_EXPR.SDESCRIPT NDISC_CODEDESC, TABLE5631.SDESCRIPT NCAUSEDESC, TABLE11.SDESCRIPT NCURRENCYDESC FROM DISC_XPREM DISC_XPREM LEFT JOIN DISCO_EXPR DISCO_EXPR ON DISCO_EXPR.NBRANCH = DISC_XPREM.NBRANCH  AND DISCO_EXPR.NPRODUCT = DISC_XPREM.NPRODUCT  AND DISCO_EXPR.NDISEXPRC = DISC_XPREM.NDISC_CODE LEFT JOIN TABLE5631 TABLE5631 ON TABLE5631.NCAUSE = DISC_XPREM.NCAUSE LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = DISC_XPREM.NCURRENCY  WHERE DISC_XPREM.SCERTYPE = @:DISC_XPREMSCERTYPE1 AND DISC_XPREM.NBRANCH = @:DISC_XPREMNBRANCH2 AND DISC_XPREM.NPRODUCT = @:DISC_XPREMNPRODUCT3 AND DISC_XPREM.NPOLICY = @:DISC_XPREMNPOLICY4 AND DISC_XPREM.NCERTIF = @:DISC_XPREMNCERTIF5", "DISC_XPREM", "Linked.LatCombined")
                    .AddParameter("DISC_XPREMSCERTYPE1", DbType.AnsiStringFixedLength, 0, (DISCXPREMSCERTYPE1 = String.Empty), DISCXPREMSCERTYPE1)
                    .AddParameter("DISC_XPREMNBRANCH2", DbType.AnsiStringFixedLength, 0, (DISCXPREMNBRANCH2 = String.Empty), DISCXPREMNBRANCH2)
                    .AddParameter("DISC_XPREMNPRODUCT3", DbType.AnsiStringFixedLength, 0, (DISCXPREMNPRODUCT3 = String.Empty), DISCXPREMNPRODUCT3)
                    .AddParameter("DISC_XPREMNPOLICY4", DbType.AnsiStringFixedLength, 0, (DISCXPREMNPOLICY4 = String.Empty), DISCXPREMNPOLICY4)
                    .AddParameter("DISC_XPREMNCERTIF5", DbType.AnsiStringFixedLength, 0, (DISCXPREMNCERTIF5 = String.Empty), DISCXPREMNCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NDISC_CODE = itemData.NumericValue("NDISC_CODE"), .SAGREE = itemData.StringValue("SAGREE"), .NCAUSE = itemData.NumericValue("NCAUSE"), .NCURRENCY = itemData.NumericValue("NCURRENCY"), .NAMOUNT = itemData.NumericValue("NAMOUNT"), .NDISC_CODEDesc = itemData.StringValue("NDISC_CODEDESC"), .NCAUSEDesc = itemData.StringValue("NCAUSEDESC"), .NCURRENCYDesc = itemData.StringValue("NCURRENCYDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "DISC_XPREMTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (DISC_XPREMTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function DISC_XPREMTblDataCount(DISCXPREMSCERTYPE1 As String, DISCXPREMNBRANCH2 As String, DISCXPREMNPRODUCT3 As String, DISCXPREMNPOLICY4 As String, DISCXPREMNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT DISC_XPREM.NDISC_CODE, DISC_XPREM.SAGREE, DISC_XPREM.NCAUSE, DISC_XPREM.NCURRENCY, DISC_XPREM.NAMOUNT, DISCO_EXPR.SDESCRIPT NDISC_CODEDESC, TABLE5631.SDESCRIPT NCAUSEDESC, TABLE11.SDESCRIPT NCURRENCYDESC FROM DISC_XPREM DISC_XPREM LEFT JOIN DISCO_EXPR DISCO_EXPR ON DISCO_EXPR.NBRANCH = DISC_XPREM.NBRANCH  AND DISCO_EXPR.NPRODUCT = DISC_XPREM.NPRODUCT  AND DISCO_EXPR.NDISEXPRC = DISC_XPREM.NDISC_CODE LEFT JOIN TABLE5631 TABLE5631 ON TABLE5631.NCAUSE = DISC_XPREM.NCAUSE LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = DISC_XPREM.NCURRENCY  WHERE DISC_XPREM.SCERTYPE = @:DISC_XPREMSCERTYPE1 AND DISC_XPREM.NBRANCH = @:DISC_XPREMNBRANCH2 AND DISC_XPREM.NPRODUCT = @:DISC_XPREMNPRODUCT3 AND DISC_XPREM.NPOLICY = @:DISC_XPREMNPOLICY4 AND DISC_XPREM.NCERTIF = @:DISC_XPREMNCERTIF5)", "DISC_XPREM", "Linked.LatCombined")
                    .AddParameter("DISC_XPREMSCERTYPE1", DbType.AnsiStringFixedLength, 0, (DISCXPREMSCERTYPE1 = String.Empty), DISCXPREMSCERTYPE1)
                    .AddParameter("DISC_XPREMNBRANCH2", DbType.AnsiStringFixedLength, 0, (DISCXPREMNBRANCH2 = String.Empty), DISCXPREMNBRANCH2)
                    .AddParameter("DISC_XPREMNPRODUCT3", DbType.AnsiStringFixedLength, 0, (DISCXPREMNPRODUCT3 = String.Empty), DISCXPREMNPRODUCT3)
                    .AddParameter("DISC_XPREMNPOLICY4", DbType.AnsiStringFixedLength, 0, (DISCXPREMNPOLICY4 = String.Empty), DISCXPREMNPOLICY4)
                    .AddParameter("DISC_XPREMNCERTIF5", DbType.AnsiStringFixedLength, 0, (DISCXPREMNCERTIF5 = String.Empty), DISCXPREMNCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "DISC_XPREMTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (DISC_XPREMTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function DISC_XPREMSelectCommandActionDISC_XPREM(DISCXPREMSCERTYPE1 As String, DISCXPREMNBRANCH2 As String, DISCXPREMNPRODUCT3 As String, DISCXPREMNPOLICY4 As String, DISCXPREMNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(DISC_XPREM.NDISC_CODE) COUNTDATA FROM DISC_XPREM DISC_XPREM LEFT JOIN DISCO_EXPR DISCO_EXPR ON DISCO_EXPR.NBRANCH = DISC_XPREM.NBRANCH  AND DISCO_EXPR.NPRODUCT = DISC_XPREM.NPRODUCT  AND DISCO_EXPR.NDISEXPRC = DISC_XPREM.NDISC_CODE LEFT JOIN TABLE5631 TABLE5631 ON TABLE5631.NCAUSE = DISC_XPREM.NCAUSE LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = DISC_XPREM.NCURRENCY  WHERE DISC_XPREM.SCERTYPE = @:DISC_XPREMSCERTYPE1 AND DISC_XPREM.NBRANCH = @:DISC_XPREMNBRANCH2 AND DISC_XPREM.NPRODUCT = @:DISC_XPREMNPRODUCT3 AND DISC_XPREM.NPOLICY = @:DISC_XPREMNPOLICY4 AND DISC_XPREM.NCERTIF = @:DISC_XPREMNCERTIF5", "DISC_XPREM", "Linked.LatCombined")
                    .AddParameter("DISC_XPREMSCERTYPE1", DbType.AnsiStringFixedLength, 0, (DISCXPREMSCERTYPE1 = String.Empty), DISCXPREMSCERTYPE1)
                    .AddParameter("DISC_XPREMNBRANCH2", DbType.AnsiStringFixedLength, 0, (DISCXPREMNBRANCH2 = String.Empty), DISCXPREMNBRANCH2)
                    .AddParameter("DISC_XPREMNPRODUCT3", DbType.AnsiStringFixedLength, 0, (DISCXPREMNPRODUCT3 = String.Empty), DISCXPREMNPRODUCT3)
                    .AddParameter("DISC_XPREMNPOLICY4", DbType.AnsiStringFixedLength, 0, (DISCXPREMNPOLICY4 = String.Empty), DISCXPREMNPOLICY4)
                    .AddParameter("DISC_XPREMNCERTIF5", DbType.AnsiStringFixedLength, 0, (DISCXPREMNCERTIF5 = String.Empty), DISCXPREMNCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "DISC_XPREMSelectCommandActionDISC_XPREM", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (DISC_XPREMSelectCommandActionDISC_XPREM)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function AUTOTblDataLoad(AUTOSCERTYPE1 As String, AUTONBRANCH2 As String, AUTONPRODUCT3 As String, AUTONPOLICY4 As String, AUTONCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.SREGIST = String.Empty, .SLICENSE_TY = String.Empty, .NVEHTYPE = 0, .SMOTOR = String.Empty, .SCHASSIS = String.Empty, .SCOLOR = String.Empty, .NCAPITAL = 0, .NVEH_VALOR = 0, .NYEAR = 0, .NAUTOZONE = 0, .NUSE = 0, .SLICENSE_TYDesc = String.Empty, .NVEHTYPEDesc = String.Empty, .NAUTOZONEDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT AUTO.SREGIST, AUTO.SLICENSE_TY, AUTO.NVEHTYPE, AUTO.SMOTOR, AUTO.SCHASSIS, AUTO.SCOLOR, AUTO.NCAPITAL, AUTO.NVEH_VALOR, AUTO.NYEAR, AUTO.NAUTOZONE, AUTO.NUSE, TABLE80.SDESCRIPT SLICENSE_TYDESC, TABLE226.SDESCRIPT NVEHTYPEDESC, TABLE224.SDESCRIPT NAUTOZONEDESC FROM AUTO AUTO LEFT JOIN TABLE80 TABLE80 ON TABLE80.SLICENSE_TY = AUTO.SLICENSE_TY LEFT JOIN TABLE226 TABLE226 ON TABLE226.NVEHTYPE = AUTO.NVEHTYPE LEFT JOIN TABLE224 TABLE224 ON TABLE224.NAUTOZONE = AUTO.NAUTOZONE  WHERE AUTO.SCERTYPE = @:AUTOSCERTYPE1 AND AUTO.NBRANCH = @:AUTONBRANCH2 AND AUTO.NPRODUCT = @:AUTONPRODUCT3 AND AUTO.NPOLICY = @:AUTONPOLICY4 AND AUTO.NCERTIF = @:AUTONCERTIF5", "AUTO", "Linked.LatCombined")
                    .AddParameter("AUTOSCERTYPE1", DbType.AnsiStringFixedLength, 0, (AUTOSCERTYPE1 = String.Empty), AUTOSCERTYPE1)
                    .AddParameter("AUTONBRANCH2", DbType.AnsiStringFixedLength, 0, (AUTONBRANCH2 = String.Empty), AUTONBRANCH2)
                    .AddParameter("AUTONPRODUCT3", DbType.AnsiStringFixedLength, 0, (AUTONPRODUCT3 = String.Empty), AUTONPRODUCT3)
                    .AddParameter("AUTONPOLICY4", DbType.AnsiStringFixedLength, 0, (AUTONPOLICY4 = String.Empty), AUTONPOLICY4)
                    .AddParameter("AUTONCERTIF5", DbType.AnsiStringFixedLength, 0, (AUTONCERTIF5 = String.Empty), AUTONCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.SREGIST = itemData.StringValue("SREGIST"), .SLICENSE_TY = itemData.StringValue("SLICENSE_TY"), .NVEHTYPE = itemData.NumericValue("NVEHTYPE"), .SMOTOR = itemData.StringValue("SMOTOR"), .SCHASSIS = itemData.StringValue("SCHASSIS"), .SCOLOR = itemData.StringValue("SCOLOR"), .NCAPITAL = itemData.NumericValue("NCAPITAL"), .NVEH_VALOR = itemData.NumericValue("NVEH_VALOR"), .NYEAR = itemData.NumericValue("NYEAR"), .NAUTOZONE = itemData.NumericValue("NAUTOZONE"), .NUSE = itemData.NumericValue("NUSE"), .SLICENSE_TYDesc = itemData.StringValue("SLICENSE_TYDESC"), .NVEHTYPEDesc = itemData.StringValue("NVEHTYPEDESC"), .NAUTOZONEDesc = itemData.StringValue("NAUTOZONEDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "AUTOTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (AUTOTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function AUTOTblDataCount(AUTOSCERTYPE1 As String, AUTONBRANCH2 As String, AUTONPRODUCT3 As String, AUTONPOLICY4 As String, AUTONCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT AUTO.SREGIST, AUTO.SLICENSE_TY, AUTO.NVEHTYPE, AUTO.SMOTOR, AUTO.SCHASSIS, AUTO.SCOLOR, AUTO.NCAPITAL, AUTO.NVEH_VALOR, AUTO.NYEAR, AUTO.NAUTOZONE, AUTO.NUSE, TABLE80.SDESCRIPT SLICENSE_TYDESC, TABLE226.SDESCRIPT NVEHTYPEDESC, TABLE224.SDESCRIPT NAUTOZONEDESC FROM AUTO AUTO LEFT JOIN TABLE80 TABLE80 ON TABLE80.SLICENSE_TY = AUTO.SLICENSE_TY LEFT JOIN TABLE226 TABLE226 ON TABLE226.NVEHTYPE = AUTO.NVEHTYPE LEFT JOIN TABLE224 TABLE224 ON TABLE224.NAUTOZONE = AUTO.NAUTOZONE  WHERE AUTO.SCERTYPE = @:AUTOSCERTYPE1 AND AUTO.NBRANCH = @:AUTONBRANCH2 AND AUTO.NPRODUCT = @:AUTONPRODUCT3 AND AUTO.NPOLICY = @:AUTONPOLICY4 AND AUTO.NCERTIF = @:AUTONCERTIF5)", "AUTO", "Linked.LatCombined")
                    .AddParameter("AUTOSCERTYPE1", DbType.AnsiStringFixedLength, 0, (AUTOSCERTYPE1 = String.Empty), AUTOSCERTYPE1)
                    .AddParameter("AUTONBRANCH2", DbType.AnsiStringFixedLength, 0, (AUTONBRANCH2 = String.Empty), AUTONBRANCH2)
                    .AddParameter("AUTONPRODUCT3", DbType.AnsiStringFixedLength, 0, (AUTONPRODUCT3 = String.Empty), AUTONPRODUCT3)
                    .AddParameter("AUTONPOLICY4", DbType.AnsiStringFixedLength, 0, (AUTONPOLICY4 = String.Empty), AUTONPOLICY4)
                    .AddParameter("AUTONCERTIF5", DbType.AnsiStringFixedLength, 0, (AUTONCERTIF5 = String.Empty), AUTONCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "AUTOTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (AUTOTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function AUTOSelectCommandActionAUTO(AUTOSCERTYPE1 As String, AUTONBRANCH2 As String, AUTONPRODUCT3 As String, AUTONPOLICY4 As String, AUTONCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(AUTO.NVEHTYPE) COUNTDATA FROM AUTO AUTO LEFT JOIN TABLE80 TABLE80 ON TABLE80.SLICENSE_TY = AUTO.SLICENSE_TY LEFT JOIN TABLE226 TABLE226 ON TABLE226.NVEHTYPE = AUTO.NVEHTYPE LEFT JOIN TABLE224 TABLE224 ON TABLE224.NAUTOZONE = AUTO.NAUTOZONE  WHERE AUTO.SCERTYPE = @:AUTOSCERTYPE1 AND AUTO.NBRANCH = @:AUTONBRANCH2 AND AUTO.NPRODUCT = @:AUTONPRODUCT3 AND AUTO.NPOLICY = @:AUTONPOLICY4 AND AUTO.NCERTIF = @:AUTONCERTIF5", "AUTO", "Linked.LatCombined")
                    .AddParameter("AUTOSCERTYPE1", DbType.AnsiStringFixedLength, 0, (AUTOSCERTYPE1 = String.Empty), AUTOSCERTYPE1)
                    .AddParameter("AUTONBRANCH2", DbType.AnsiStringFixedLength, 0, (AUTONBRANCH2 = String.Empty), AUTONBRANCH2)
                    .AddParameter("AUTONPRODUCT3", DbType.AnsiStringFixedLength, 0, (AUTONPRODUCT3 = String.Empty), AUTONPRODUCT3)
                    .AddParameter("AUTONPOLICY4", DbType.AnsiStringFixedLength, 0, (AUTONPOLICY4 = String.Empty), AUTONPOLICY4)
                    .AddParameter("AUTONCERTIF5", DbType.AnsiStringFixedLength, 0, (AUTONCERTIF5 = String.Empty), AUTONCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "AUTOSelectCommandActionAUTO", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (AUTOSelectCommandActionAUTO)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function FIRETblDataLoad(FIRESCERTYPE1 As String, FIRENBRANCH2 As String, FIRENPRODUCT3 As String, FIRENPOLICY4 As String, FIRENCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NCONSTCAT = 0, .NACTIVITYCAT = 0, .NFLOOR_QUAN = 0, .NROOFTYPE = 0, .NSEISMICZONE = 0, .NBUILDTYPE = 0, .NSPCOMBTYPE = 0, .SDESCBUSSI = String.Empty, .NHURRICAN_ZONE = 0, .NSIDECLOSETYPE = 0, .NCONSTCATDesc = String.Empty, .NACTIVITYCATDesc = String.Empty, .NROOFTYPEDesc = String.Empty, .NSEISMICZONEDesc = String.Empty, .NBUILDTYPEDesc = String.Empty, .NSPCOMBTYPEDesc = String.Empty, .NSIDECLOSETYPEDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT FIRE.NCONSTCAT, FIRE.NACTIVITYCAT, FIRE.NFLOOR_QUAN, FIRE.NROOFTYPE, FIRE.NSEISMICZONE, FIRE.NBUILDTYPE, FIRE.NSPCOMBTYPE, FIRE.SDESCBUSSI, FIRE.NHURRICAN_ZONE, FIRE.NSIDECLOSETYPE, TABLE233.SDESCRIPT NCONSTCATDESC, TABLE7044.SDESCRIPT NACTIVITYCATDESC, TABLE7038.SDESCRIPT NROOFTYPEDESC, TABLE7047.SDESCRIPT NSEISMICZONEDESC, TABLE7039.SDESCRIPT NBUILDTYPEDESC, TABLE7040.SDESCRIPT NSPCOMBTYPEDESC, TABLE7037.SDESCRIPT NSIDECLOSETYPEDESC FROM FIRE FIRE LEFT JOIN TABLE233 TABLE233 ON TABLE233.NCONSTCAT = FIRE.NCONSTCAT LEFT JOIN TABLE7044 TABLE7044 ON TABLE7044.NACTIVITYCAT = FIRE.NACTIVITYCAT LEFT JOIN TABLE7038 TABLE7038 ON TABLE7038.NROOFTYPE = FIRE.NROOFTYPE LEFT JOIN TABLE7047 TABLE7047 ON TABLE7047.NSEISMICZONE = FIRE.NSEISMICZONE LEFT JOIN TABLE7039 TABLE7039 ON TABLE7039.NBUILDTYPE = FIRE.NBUILDTYPE LEFT JOIN TABLE7040 TABLE7040 ON TABLE7040.NSPCOMBTYPE = FIRE.NSPCOMBTYPE LEFT JOIN TABLE7037 TABLE7037 ON TABLE7037.NSIDECLOSETYPE = FIRE.NSIDECLOSETYPE  WHERE FIRE.SCERTYPE = @:FIRESCERTYPE1 AND FIRE.NBRANCH = @:FIRENBRANCH2 AND FIRE.NPRODUCT = @:FIRENPRODUCT3 AND FIRE.NPOLICY = @:FIRENPOLICY4 AND FIRE.NCERTIF = @:FIRENCERTIF5", "FIRE", "Linked.LatCombined")
                    .AddParameter("FIRESCERTYPE1", DbType.AnsiStringFixedLength, 0, (FIRESCERTYPE1 = String.Empty), FIRESCERTYPE1)
                    .AddParameter("FIRENBRANCH2", DbType.AnsiStringFixedLength, 0, (FIRENBRANCH2 = String.Empty), FIRENBRANCH2)
                    .AddParameter("FIRENPRODUCT3", DbType.AnsiStringFixedLength, 0, (FIRENPRODUCT3 = String.Empty), FIRENPRODUCT3)
                    .AddParameter("FIRENPOLICY4", DbType.AnsiStringFixedLength, 0, (FIRENPOLICY4 = String.Empty), FIRENPOLICY4)
                    .AddParameter("FIRENCERTIF5", DbType.AnsiStringFixedLength, 0, (FIRENCERTIF5 = String.Empty), FIRENCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NCONSTCAT = itemData.NumericValue("NCONSTCAT"), .NACTIVITYCAT = itemData.NumericValue("NACTIVITYCAT"), .NFLOOR_QUAN = itemData.NumericValue("NFLOOR_QUAN"), .NROOFTYPE = itemData.NumericValue("NROOFTYPE"), .NSEISMICZONE = itemData.NumericValue("NSEISMICZONE"), .NBUILDTYPE = itemData.NumericValue("NBUILDTYPE"), .NSPCOMBTYPE = itemData.NumericValue("NSPCOMBTYPE"), .SDESCBUSSI = itemData.StringValue("SDESCBUSSI"), .NHURRICAN_ZONE = itemData.NumericValue("NHURRICAN_ZONE"), .NSIDECLOSETYPE = itemData.NumericValue("NSIDECLOSETYPE"), .NCONSTCATDesc = itemData.StringValue("NCONSTCATDESC"), .NACTIVITYCATDesc = itemData.StringValue("NACTIVITYCATDESC"), .NROOFTYPEDesc = itemData.StringValue("NROOFTYPEDESC"), .NSEISMICZONEDesc = itemData.StringValue("NSEISMICZONEDESC"), .NBUILDTYPEDesc = itemData.StringValue("NBUILDTYPEDESC"), .NSPCOMBTYPEDesc = itemData.StringValue("NSPCOMBTYPEDESC"), .NSIDECLOSETYPEDesc = itemData.StringValue("NSIDECLOSETYPEDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "FIRETblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (FIRETblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function FIRETblDataCount(FIRESCERTYPE1 As String, FIRENBRANCH2 As String, FIRENPRODUCT3 As String, FIRENPOLICY4 As String, FIRENCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT FIRE.NCONSTCAT, FIRE.NACTIVITYCAT, FIRE.NFLOOR_QUAN, FIRE.NROOFTYPE, FIRE.NSEISMICZONE, FIRE.NBUILDTYPE, FIRE.NSPCOMBTYPE, FIRE.SDESCBUSSI, FIRE.NHURRICAN_ZONE, FIRE.NSIDECLOSETYPE, TABLE233.SDESCRIPT NCONSTCATDESC, TABLE7044.SDESCRIPT NACTIVITYCATDESC, TABLE7038.SDESCRIPT NROOFTYPEDESC, TABLE7047.SDESCRIPT NSEISMICZONEDESC, TABLE7039.SDESCRIPT NBUILDTYPEDESC, TABLE7040.SDESCRIPT NSPCOMBTYPEDESC, TABLE7037.SDESCRIPT NSIDECLOSETYPEDESC FROM FIRE FIRE LEFT JOIN TABLE233 TABLE233 ON TABLE233.NCONSTCAT = FIRE.NCONSTCAT LEFT JOIN TABLE7044 TABLE7044 ON TABLE7044.NACTIVITYCAT = FIRE.NACTIVITYCAT LEFT JOIN TABLE7038 TABLE7038 ON TABLE7038.NROOFTYPE = FIRE.NROOFTYPE LEFT JOIN TABLE7047 TABLE7047 ON TABLE7047.NSEISMICZONE = FIRE.NSEISMICZONE LEFT JOIN TABLE7039 TABLE7039 ON TABLE7039.NBUILDTYPE = FIRE.NBUILDTYPE LEFT JOIN TABLE7040 TABLE7040 ON TABLE7040.NSPCOMBTYPE = FIRE.NSPCOMBTYPE LEFT JOIN TABLE7037 TABLE7037 ON TABLE7037.NSIDECLOSETYPE = FIRE.NSIDECLOSETYPE  WHERE FIRE.SCERTYPE = @:FIRESCERTYPE1 AND FIRE.NBRANCH = @:FIRENBRANCH2 AND FIRE.NPRODUCT = @:FIRENPRODUCT3 AND FIRE.NPOLICY = @:FIRENPOLICY4 AND FIRE.NCERTIF = @:FIRENCERTIF5)", "FIRE", "Linked.LatCombined")
                    .AddParameter("FIRESCERTYPE1", DbType.AnsiStringFixedLength, 0, (FIRESCERTYPE1 = String.Empty), FIRESCERTYPE1)
                    .AddParameter("FIRENBRANCH2", DbType.AnsiStringFixedLength, 0, (FIRENBRANCH2 = String.Empty), FIRENBRANCH2)
                    .AddParameter("FIRENPRODUCT3", DbType.AnsiStringFixedLength, 0, (FIRENPRODUCT3 = String.Empty), FIRENPRODUCT3)
                    .AddParameter("FIRENPOLICY4", DbType.AnsiStringFixedLength, 0, (FIRENPOLICY4 = String.Empty), FIRENPOLICY4)
                    .AddParameter("FIRENCERTIF5", DbType.AnsiStringFixedLength, 0, (FIRENCERTIF5 = String.Empty), FIRENCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "FIRETblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (FIRETblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function FIRESelectCommandActionFIRE(FIRESCERTYPE1 As String, FIRENBRANCH2 As String, FIRENPRODUCT3 As String, FIRENPOLICY4 As String, FIRENCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(FIRE.NCONSTCAT) COUNTDATA FROM FIRE FIRE LEFT JOIN TABLE233 TABLE233 ON TABLE233.NCONSTCAT = FIRE.NCONSTCAT LEFT JOIN TABLE7044 TABLE7044 ON TABLE7044.NACTIVITYCAT = FIRE.NACTIVITYCAT LEFT JOIN TABLE7038 TABLE7038 ON TABLE7038.NROOFTYPE = FIRE.NROOFTYPE LEFT JOIN TABLE7047 TABLE7047 ON TABLE7047.NSEISMICZONE = FIRE.NSEISMICZONE LEFT JOIN TABLE7039 TABLE7039 ON TABLE7039.NBUILDTYPE = FIRE.NBUILDTYPE LEFT JOIN TABLE7040 TABLE7040 ON TABLE7040.NSPCOMBTYPE = FIRE.NSPCOMBTYPE LEFT JOIN TABLE7037 TABLE7037 ON TABLE7037.NSIDECLOSETYPE = FIRE.NSIDECLOSETYPE  WHERE FIRE.SCERTYPE = @:FIRESCERTYPE1 AND FIRE.NBRANCH = @:FIRENBRANCH2 AND FIRE.NPRODUCT = @:FIRENPRODUCT3 AND FIRE.NPOLICY = @:FIRENPOLICY4 AND FIRE.NCERTIF = @:FIRENCERTIF5", "FIRE", "Linked.LatCombined")
                    .AddParameter("FIRESCERTYPE1", DbType.AnsiStringFixedLength, 0, (FIRESCERTYPE1 = String.Empty), FIRESCERTYPE1)
                    .AddParameter("FIRENBRANCH2", DbType.AnsiStringFixedLength, 0, (FIRENBRANCH2 = String.Empty), FIRENBRANCH2)
                    .AddParameter("FIRENPRODUCT3", DbType.AnsiStringFixedLength, 0, (FIRENPRODUCT3 = String.Empty), FIRENPRODUCT3)
                    .AddParameter("FIRENPOLICY4", DbType.AnsiStringFixedLength, 0, (FIRENPOLICY4 = String.Empty), FIRENPOLICY4)
                    .AddParameter("FIRENCERTIF5", DbType.AnsiStringFixedLength, 0, (FIRENCERTIF5 = String.Empty), FIRENCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "FIRESelectCommandActionFIRE", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (FIRESelectCommandActionFIRE)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function HOMEOWNERTblDataLoad(HOMEOWNERSCERTYPE1 As String, HOMEOWNERNBRANCH2 As String, HOMEOWNERNPRODUCT3 As String, HOMEOWNERNPOLICY4 As String, HOMEOWNERNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NOWNERSHIP = 0, .NDWELLINGTYPE = 0, .NSEISMICZONE = 0, .NYEAR_BUILT = 0, .DDATE_PURCH = Date.MinValue, .NPRICE_PURCH = 0, .NCURRENCY_PURCH = 0, .NLANDSUPER = 0, .NHOMESUPER = 0, .NROOFTYPE = 0, .NROOFYEAR = 0, .NFLOODZONE = 0, .NFOUNDTYPE = 0, .SSPRINKSYS = String.Empty, .NAIRTYPE = 0, .NSTORIES = 0, .NHALFBATH = 0, .NFULLBATH = 0, .NBEDROOMS = 0, .NFIREPLACE = 0, .NGARAGE = 0, .SANIMALSDES = String.Empty, .SATTACKEDIND = String.Empty, .NDIST_FIRE = 0, .SALARM_COMP = String.Empty, .SFENCEPOOL = String.Empty, .NSWIMPOOL = 0, .NFENCEHEIGHT = 0, .STRAMPOLINE = String.Empty, .SGAS = String.Empty, .NEXTERCONSTR = 0, .SOTHER_CONSTR = String.Empty, .NOWNERSHIPDesc = String.Empty, .NDWELLINGTYPEDesc = String.Empty, .NCURRENCY_PURCHDesc = String.Empty, .NROOFTYPEDesc = String.Empty, .NFLOODZONEDesc = String.Empty, .NFOUNDTYPEDesc = String.Empty, .NAIRTYPEDesc = String.Empty, .NSWIMPOOLDesc = String.Empty, .NEXTERCONSTRDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT HOMEOWNER.NOWNERSHIP, HOMEOWNER.NDWELLINGTYPE, HOMEOWNER.NSEISMICZONE, HOMEOWNER.NYEAR_BUILT, HOMEOWNER.DDATE_PURCH, HOMEOWNER.NPRICE_PURCH, HOMEOWNER.NCURRENCY_PURCH, HOMEOWNER.NLANDSUPER, HOMEOWNER.NHOMESUPER, HOMEOWNER.NROOFTYPE, HOMEOWNER.NROOFYEAR, HOMEOWNER.NFLOODZONE, HOMEOWNER.NFOUNDTYPE, HOMEOWNER.SSPRINKSYS, HOMEOWNER.NAIRTYPE, HOMEOWNER.NSTORIES, HOMEOWNER.NHALFBATH, HOMEOWNER.NFULLBATH, HOMEOWNER.NBEDROOMS, HOMEOWNER.NFIREPLACE, HOMEOWNER.NGARAGE, HOMEOWNER.SANIMALSDES, HOMEOWNER.SATTACKEDIND, HOMEOWNER.NDIST_FIRE, HOMEOWNER.SALARM_COMP, HOMEOWNER.SFENCEPOOL, HOMEOWNER.NSWIMPOOL, HOMEOWNER.NFENCEHEIGHT, HOMEOWNER.STRAMPOLINE, HOMEOWNER.SGAS, HOMEOWNER.NEXTERCONSTR, HOMEOWNER.SOTHER_CONSTR, TABLE6005.SDESCRIPT NOWNERSHIPDESC, TABLE6012.SDESCRIPT NDWELLINGTYPEDESC, TABLE11.SDESCRIPT NCURRENCY_PURCHDESC, TABLE7038.SDESCRIPT NROOFTYPEDESC, TABLE6007.SDESCRIPT NFLOODZONEDESC, TABLE6003.SDESCRIPT NFOUNDTYPEDESC, TABLE6001.SDESCRIPT NAIRTYPEDESC, TABLE6004.SDESCRIPT NSWIMPOOLDESC, TABLE5536.SDESCRIPT NEXTERCONSTRDESC FROM HOMEOWNER HOMEOWNER LEFT JOIN TABLE6005 TABLE6005 ON TABLE6005.NOWNERSHIP = HOMEOWNER.NOWNERSHIP LEFT JOIN TABLE6012 TABLE6012 ON TABLE6012.NDWELLINGTYPE = HOMEOWNER.NDWELLINGTYPE LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = HOMEOWNER.NCURRENCY_PURCH LEFT JOIN TABLE7038 TABLE7038 ON TABLE7038.NROOFTYPE = HOMEOWNER.NROOFTYPE LEFT JOIN TABLE6007 TABLE6007 ON TABLE6007.NZONETYPE = HOMEOWNER.NFLOODZONE LEFT JOIN TABLE6003 TABLE6003 ON TABLE6003.NFOUNDTYPE = HOMEOWNER.NFOUNDTYPE LEFT JOIN TABLE6001 TABLE6001 ON TABLE6001.NAIRTYPE = HOMEOWNER.NAIRTYPE LEFT JOIN TABLE6004 TABLE6004 ON TABLE6004.NSWIMPOOL = HOMEOWNER.NSWIMPOOL LEFT JOIN TABLE5536 TABLE5536 ON TABLE5536.NSTRUCTURE_WALL = HOMEOWNER.NEXTERCONSTR  WHERE HOMEOWNER.SCERTYPE = @:HOMEOWNERSCERTYPE1 AND HOMEOWNER.NBRANCH = @:HOMEOWNERNBRANCH2 AND HOMEOWNER.NPRODUCT = @:HOMEOWNERNPRODUCT3 AND HOMEOWNER.NPOLICY = @:HOMEOWNERNPOLICY4 AND HOMEOWNER.NCERTIF = @:HOMEOWNERNCERTIF5", "HOMEOWNER", "Linked.LatCombined")
                    .AddParameter("HOMEOWNERSCERTYPE1", DbType.AnsiStringFixedLength, 0, (HOMEOWNERSCERTYPE1 = String.Empty), HOMEOWNERSCERTYPE1)
                    .AddParameter("HOMEOWNERNBRANCH2", DbType.AnsiStringFixedLength, 0, (HOMEOWNERNBRANCH2 = String.Empty), HOMEOWNERNBRANCH2)
                    .AddParameter("HOMEOWNERNPRODUCT3", DbType.AnsiStringFixedLength, 0, (HOMEOWNERNPRODUCT3 = String.Empty), HOMEOWNERNPRODUCT3)
                    .AddParameter("HOMEOWNERNPOLICY4", DbType.AnsiStringFixedLength, 0, (HOMEOWNERNPOLICY4 = String.Empty), HOMEOWNERNPOLICY4)
                    .AddParameter("HOMEOWNERNCERTIF5", DbType.AnsiStringFixedLength, 0, (HOMEOWNERNCERTIF5 = String.Empty), HOMEOWNERNCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NOWNERSHIP = itemData.NumericValue("NOWNERSHIP"), .NDWELLINGTYPE = itemData.NumericValue("NDWELLINGTYPE"), .NSEISMICZONE = itemData.NumericValue("NSEISMICZONE"), .NYEAR_BUILT = itemData.NumericValue("NYEAR_BUILT"), .DDATE_PURCH = itemData.DateTimeValue("DDATE_PURCH"), .NPRICE_PURCH = itemData.NumericValue("NPRICE_PURCH"), .NCURRENCY_PURCH = itemData.NumericValue("NCURRENCY_PURCH"), .NLANDSUPER = itemData.NumericValue("NLANDSUPER"), .NHOMESUPER = itemData.NumericValue("NHOMESUPER"), .NROOFTYPE = itemData.NumericValue("NROOFTYPE"), .NROOFYEAR = itemData.NumericValue("NROOFYEAR"), .NFLOODZONE = itemData.NumericValue("NFLOODZONE"), .NFOUNDTYPE = itemData.NumericValue("NFOUNDTYPE"), .SSPRINKSYS = itemData.StringValue("SSPRINKSYS"), .NAIRTYPE = itemData.NumericValue("NAIRTYPE"), .NSTORIES = itemData.NumericValue("NSTORIES"), .NHALFBATH = itemData.NumericValue("NHALFBATH"), .NFULLBATH = itemData.NumericValue("NFULLBATH"), .NBEDROOMS = itemData.NumericValue("NBEDROOMS"), .NFIREPLACE = itemData.NumericValue("NFIREPLACE"), .NGARAGE = itemData.NumericValue("NGARAGE"), .SANIMALSDES = itemData.StringValue("SANIMALSDES"), .SATTACKEDIND = itemData.StringValue("SATTACKEDIND"), .NDIST_FIRE = itemData.NumericValue("NDIST_FIRE"), .SALARM_COMP = itemData.StringValue("SALARM_COMP"), .SFENCEPOOL = itemData.StringValue("SFENCEPOOL"), .NSWIMPOOL = itemData.NumericValue("NSWIMPOOL"), .NFENCEHEIGHT = itemData.NumericValue("NFENCEHEIGHT"), .STRAMPOLINE = itemData.StringValue("STRAMPOLINE"), .SGAS = itemData.StringValue("SGAS"), .NEXTERCONSTR = itemData.NumericValue("NEXTERCONSTR"), .SOTHER_CONSTR = itemData.StringValue("SOTHER_CONSTR"), .NOWNERSHIPDesc = itemData.StringValue("NOWNERSHIPDESC"), .NDWELLINGTYPEDesc = itemData.StringValue("NDWELLINGTYPEDESC"), .NCURRENCY_PURCHDesc = itemData.StringValue("NCURRENCY_PURCHDESC"), .NROOFTYPEDesc = itemData.StringValue("NROOFTYPEDESC"), .NFLOODZONEDesc = itemData.StringValue("NFLOODZONEDESC"), .NFOUNDTYPEDesc = itemData.StringValue("NFOUNDTYPEDESC"), .NAIRTYPEDesc = itemData.StringValue("NAIRTYPEDESC"), .NSWIMPOOLDesc = itemData.StringValue("NSWIMPOOLDESC"), .NEXTERCONSTRDesc = itemData.StringValue("NEXTERCONSTRDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "HOMEOWNERTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (HOMEOWNERTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function HOMEOWNERTblDataCount(HOMEOWNERSCERTYPE1 As String, HOMEOWNERNBRANCH2 As String, HOMEOWNERNPRODUCT3 As String, HOMEOWNERNPOLICY4 As String, HOMEOWNERNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT HOMEOWNER.NOWNERSHIP, HOMEOWNER.NDWELLINGTYPE, HOMEOWNER.NSEISMICZONE, HOMEOWNER.NYEAR_BUILT, HOMEOWNER.DDATE_PURCH, HOMEOWNER.NPRICE_PURCH, HOMEOWNER.NCURRENCY_PURCH, HOMEOWNER.NLANDSUPER, HOMEOWNER.NHOMESUPER, HOMEOWNER.NROOFTYPE, HOMEOWNER.NROOFYEAR, HOMEOWNER.NFLOODZONE, HOMEOWNER.NFOUNDTYPE, HOMEOWNER.SSPRINKSYS, HOMEOWNER.NAIRTYPE, HOMEOWNER.NSTORIES, HOMEOWNER.NHALFBATH, HOMEOWNER.NFULLBATH, HOMEOWNER.NBEDROOMS, HOMEOWNER.NFIREPLACE, HOMEOWNER.NGARAGE, HOMEOWNER.SANIMALSDES, HOMEOWNER.SATTACKEDIND, HOMEOWNER.NDIST_FIRE, HOMEOWNER.SALARM_COMP, HOMEOWNER.SFENCEPOOL, HOMEOWNER.NSWIMPOOL, HOMEOWNER.NFENCEHEIGHT, HOMEOWNER.STRAMPOLINE, HOMEOWNER.SGAS, HOMEOWNER.NEXTERCONSTR, HOMEOWNER.SOTHER_CONSTR, TABLE6005.SDESCRIPT NOWNERSHIPDESC, TABLE6012.SDESCRIPT NDWELLINGTYPEDESC, TABLE11.SDESCRIPT NCURRENCY_PURCHDESC, TABLE7038.SDESCRIPT NROOFTYPEDESC, TABLE6007.SDESCRIPT NFLOODZONEDESC, TABLE6003.SDESCRIPT NFOUNDTYPEDESC, TABLE6001.SDESCRIPT NAIRTYPEDESC, TABLE6004.SDESCRIPT NSWIMPOOLDESC, TABLE5536.SDESCRIPT NEXTERCONSTRDESC FROM HOMEOWNER HOMEOWNER LEFT JOIN TABLE6005 TABLE6005 ON TABLE6005.NOWNERSHIP = HOMEOWNER.NOWNERSHIP LEFT JOIN TABLE6012 TABLE6012 ON TABLE6012.NDWELLINGTYPE = HOMEOWNER.NDWELLINGTYPE LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = HOMEOWNER.NCURRENCY_PURCH LEFT JOIN TABLE7038 TABLE7038 ON TABLE7038.NROOFTYPE = HOMEOWNER.NROOFTYPE LEFT JOIN TABLE6007 TABLE6007 ON TABLE6007.NZONETYPE = HOMEOWNER.NFLOODZONE LEFT JOIN TABLE6003 TABLE6003 ON TABLE6003.NFOUNDTYPE = HOMEOWNER.NFOUNDTYPE LEFT JOIN TABLE6001 TABLE6001 ON TABLE6001.NAIRTYPE = HOMEOWNER.NAIRTYPE LEFT JOIN TABLE6004 TABLE6004 ON TABLE6004.NSWIMPOOL = HOMEOWNER.NSWIMPOOL LEFT JOIN TABLE5536 TABLE5536 ON TABLE5536.NSTRUCTURE_WALL = HOMEOWNER.NEXTERCONSTR  WHERE HOMEOWNER.SCERTYPE = @:HOMEOWNERSCERTYPE1 AND HOMEOWNER.NBRANCH = @:HOMEOWNERNBRANCH2 AND HOMEOWNER.NPRODUCT = @:HOMEOWNERNPRODUCT3 AND HOMEOWNER.NPOLICY = @:HOMEOWNERNPOLICY4 AND HOMEOWNER.NCERTIF = @:HOMEOWNERNCERTIF5)", "HOMEOWNER", "Linked.LatCombined")
                    .AddParameter("HOMEOWNERSCERTYPE1", DbType.AnsiStringFixedLength, 0, (HOMEOWNERSCERTYPE1 = String.Empty), HOMEOWNERSCERTYPE1)
                    .AddParameter("HOMEOWNERNBRANCH2", DbType.AnsiStringFixedLength, 0, (HOMEOWNERNBRANCH2 = String.Empty), HOMEOWNERNBRANCH2)
                    .AddParameter("HOMEOWNERNPRODUCT3", DbType.AnsiStringFixedLength, 0, (HOMEOWNERNPRODUCT3 = String.Empty), HOMEOWNERNPRODUCT3)
                    .AddParameter("HOMEOWNERNPOLICY4", DbType.AnsiStringFixedLength, 0, (HOMEOWNERNPOLICY4 = String.Empty), HOMEOWNERNPOLICY4)
                    .AddParameter("HOMEOWNERNCERTIF5", DbType.AnsiStringFixedLength, 0, (HOMEOWNERNCERTIF5 = String.Empty), HOMEOWNERNCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "HOMEOWNERTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (HOMEOWNERTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function HOMEOWNERSelectCommandActionHOMEOWNER(HOMEOWNERSCERTYPE1 As String, HOMEOWNERNBRANCH2 As String, HOMEOWNERNPRODUCT3 As String, HOMEOWNERNPOLICY4 As String, HOMEOWNERNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(HOMEOWNER.NOWNERSHIP) COUNTDATA FROM HOMEOWNER HOMEOWNER LEFT JOIN TABLE6005 TABLE6005 ON TABLE6005.NOWNERSHIP = HOMEOWNER.NOWNERSHIP LEFT JOIN TABLE6012 TABLE6012 ON TABLE6012.NDWELLINGTYPE = HOMEOWNER.NDWELLINGTYPE LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = HOMEOWNER.NCURRENCY_PURCH LEFT JOIN TABLE7038 TABLE7038 ON TABLE7038.NROOFTYPE = HOMEOWNER.NROOFTYPE LEFT JOIN TABLE6007 TABLE6007 ON TABLE6007.NZONETYPE = HOMEOWNER.NFLOODZONE LEFT JOIN TABLE6003 TABLE6003 ON TABLE6003.NFOUNDTYPE = HOMEOWNER.NFOUNDTYPE LEFT JOIN TABLE6001 TABLE6001 ON TABLE6001.NAIRTYPE = HOMEOWNER.NAIRTYPE LEFT JOIN TABLE6004 TABLE6004 ON TABLE6004.NSWIMPOOL = HOMEOWNER.NSWIMPOOL LEFT JOIN TABLE5536 TABLE5536 ON TABLE5536.NSTRUCTURE_WALL = HOMEOWNER.NEXTERCONSTR  WHERE HOMEOWNER.SCERTYPE = @:HOMEOWNERSCERTYPE1 AND HOMEOWNER.NBRANCH = @:HOMEOWNERNBRANCH2 AND HOMEOWNER.NPRODUCT = @:HOMEOWNERNPRODUCT3 AND HOMEOWNER.NPOLICY = @:HOMEOWNERNPOLICY4 AND HOMEOWNER.NCERTIF = @:HOMEOWNERNCERTIF5", "HOMEOWNER", "Linked.LatCombined")
                    .AddParameter("HOMEOWNERSCERTYPE1", DbType.AnsiStringFixedLength, 0, (HOMEOWNERSCERTYPE1 = String.Empty), HOMEOWNERSCERTYPE1)
                    .AddParameter("HOMEOWNERNBRANCH2", DbType.AnsiStringFixedLength, 0, (HOMEOWNERNBRANCH2 = String.Empty), HOMEOWNERNBRANCH2)
                    .AddParameter("HOMEOWNERNPRODUCT3", DbType.AnsiStringFixedLength, 0, (HOMEOWNERNPRODUCT3 = String.Empty), HOMEOWNERNPRODUCT3)
                    .AddParameter("HOMEOWNERNPOLICY4", DbType.AnsiStringFixedLength, 0, (HOMEOWNERNPOLICY4 = String.Empty), HOMEOWNERNPOLICY4)
                    .AddParameter("HOMEOWNERNCERTIF5", DbType.AnsiStringFixedLength, 0, (HOMEOWNERNCERTIF5 = String.Empty), HOMEOWNERNCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "HOMEOWNERSelectCommandActionHOMEOWNER", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (HOMEOWNERSelectCommandActionHOMEOWNER)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function LIFETblDataLoad(LIFESCERTYPE1 As String, LIFENBRANCH2 As String, LIFENPRODUCT3 As String, LIFENPOLICY4 As String, LIFENCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.SPDURAIND = String.Empty, .NPAY_TIME = 0, .NTYPDURINS = 0, .NINSUR_TIME = 0, .NAGE_REINSU = 0, .NAGE_LIMIT = 0, .NAGE = 0, .SPDURAINDDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT LIFE.SPDURAIND, LIFE.NPAY_TIME, LIFE.NTYPDURINS, LIFE.NINSUR_TIME, LIFE.NAGE_REINSU, LIFE.NAGE_LIMIT, LIFE.NAGE, TABLE5589.SDESCRIPT SPDURAINDDESC FROM LIFE LIFE LEFT JOIN TABLE5589 TABLE5589 ON TABLE5589.NTYPDUR = LIFE.NPAY_TIME  WHERE LIFE.SCERTYPE = @:LIFESCERTYPE1 AND LIFE.NBRANCH = @:LIFENBRANCH2 AND LIFE.NPRODUCT = @:LIFENPRODUCT3 AND LIFE.NPOLICY = @:LIFENPOLICY4 AND LIFE.NCERTIF = @:LIFENCERTIF5", "LIFE", "Linked.LatCombined")
                    .AddParameter("LIFESCERTYPE1", DbType.AnsiStringFixedLength, 0, (LIFESCERTYPE1 = String.Empty), LIFESCERTYPE1)
                    .AddParameter("LIFENBRANCH2", DbType.AnsiStringFixedLength, 0, (LIFENBRANCH2 = String.Empty), LIFENBRANCH2)
                    .AddParameter("LIFENPRODUCT3", DbType.AnsiStringFixedLength, 0, (LIFENPRODUCT3 = String.Empty), LIFENPRODUCT3)
                    .AddParameter("LIFENPOLICY4", DbType.AnsiStringFixedLength, 0, (LIFENPOLICY4 = String.Empty), LIFENPOLICY4)
                    .AddParameter("LIFENCERTIF5", DbType.AnsiStringFixedLength, 0, (LIFENCERTIF5 = String.Empty), LIFENCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.SPDURAIND = itemData.StringValue("SPDURAIND"), .NPAY_TIME = itemData.NumericValue("NPAY_TIME"), .NTYPDURINS = itemData.NumericValue("NTYPDURINS"), .NINSUR_TIME = itemData.NumericValue("NINSUR_TIME"), .NAGE_REINSU = itemData.NumericValue("NAGE_REINSU"), .NAGE_LIMIT = itemData.NumericValue("NAGE_LIMIT"), .NAGE = itemData.NumericValue("NAGE"), .SPDURAINDDesc = itemData.StringValue("SPDURAINDDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "LIFETblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (LIFETblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function LIFETblDataCount(LIFESCERTYPE1 As String, LIFENBRANCH2 As String, LIFENPRODUCT3 As String, LIFENPOLICY4 As String, LIFENCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT LIFE.SPDURAIND, LIFE.NPAY_TIME, LIFE.NTYPDURINS, LIFE.NINSUR_TIME, LIFE.NAGE_REINSU, LIFE.NAGE_LIMIT, LIFE.NAGE, TABLE5589.SDESCRIPT SPDURAINDDESC FROM LIFE LIFE LEFT JOIN TABLE5589 TABLE5589 ON TABLE5589.NTYPDUR = LIFE.NPAY_TIME  WHERE LIFE.SCERTYPE = @:LIFESCERTYPE1 AND LIFE.NBRANCH = @:LIFENBRANCH2 AND LIFE.NPRODUCT = @:LIFENPRODUCT3 AND LIFE.NPOLICY = @:LIFENPOLICY4 AND LIFE.NCERTIF = @:LIFENCERTIF5)", "LIFE", "Linked.LatCombined")
                    .AddParameter("LIFESCERTYPE1", DbType.AnsiStringFixedLength, 0, (LIFESCERTYPE1 = String.Empty), LIFESCERTYPE1)
                    .AddParameter("LIFENBRANCH2", DbType.AnsiStringFixedLength, 0, (LIFENBRANCH2 = String.Empty), LIFENBRANCH2)
                    .AddParameter("LIFENPRODUCT3", DbType.AnsiStringFixedLength, 0, (LIFENPRODUCT3 = String.Empty), LIFENPRODUCT3)
                    .AddParameter("LIFENPOLICY4", DbType.AnsiStringFixedLength, 0, (LIFENPOLICY4 = String.Empty), LIFENPOLICY4)
                    .AddParameter("LIFENCERTIF5", DbType.AnsiStringFixedLength, 0, (LIFENCERTIF5 = String.Empty), LIFENCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "LIFETblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (LIFETblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function LIFESelectCommandActionLIFE(LIFESCERTYPE1 As String, LIFENBRANCH2 As String, LIFENPRODUCT3 As String, LIFENPOLICY4 As String, LIFENCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(LIFE.NPAY_TIME) COUNTDATA FROM LIFE LIFE LEFT JOIN TABLE5589 TABLE5589 ON TABLE5589.NTYPDUR = LIFE.NPAY_TIME  WHERE LIFE.SCERTYPE = @:LIFESCERTYPE1 AND LIFE.NBRANCH = @:LIFENBRANCH2 AND LIFE.NPRODUCT = @:LIFENPRODUCT3 AND LIFE.NPOLICY = @:LIFENPOLICY4 AND LIFE.NCERTIF = @:LIFENCERTIF5", "LIFE", "Linked.LatCombined")
                    .AddParameter("LIFESCERTYPE1", DbType.AnsiStringFixedLength, 0, (LIFESCERTYPE1 = String.Empty), LIFESCERTYPE1)
                    .AddParameter("LIFENBRANCH2", DbType.AnsiStringFixedLength, 0, (LIFENBRANCH2 = String.Empty), LIFENBRANCH2)
                    .AddParameter("LIFENPRODUCT3", DbType.AnsiStringFixedLength, 0, (LIFENPRODUCT3 = String.Empty), LIFENPRODUCT3)
                    .AddParameter("LIFENPOLICY4", DbType.AnsiStringFixedLength, 0, (LIFENPOLICY4 = String.Empty), LIFENPOLICY4)
                    .AddParameter("LIFENCERTIF5", DbType.AnsiStringFixedLength, 0, (LIFENCERTIF5 = String.Empty), LIFENCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "LIFESelectCommandActionLIFE", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (LIFESelectCommandActionLIFE)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function THEFTTblDataLoad(THEFTSCERTYPE1 As String, THEFTNBRANCH2 As String, THEFTNPRODUCT3 As String, THEFTNPOLICY4 As String, THEFTNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.DSTARTDATE = Date.MinValue, .DEXPIRDAT = Date.MinValue, .NCOMMERGRP = 0, .SDESCBUSSI = String.Empty, .NINSURED = 0, .NEMPLOYEES = 0, .NAREA = 0, .NVIGILANCE = 0, .NCAPITAL = 0, .DNULLDATE = Date.MinValue, .NNULLCODE = 0, .NCOMMERGRPDesc = String.Empty, .NNULLCODEDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT THEFT.DSTARTDATE, THEFT.DEXPIRDAT, THEFT.NCOMMERGRP, THEFT.SDESCBUSSI, THEFT.NINSURED, THEFT.NEMPLOYEES, THEFT.NAREA, THEFT.NVIGILANCE, THEFT.NCAPITAL, THEFT.DNULLDATE, THEFT.NNULLCODE, BUSSKIND.SDESCRIPT NCOMMERGRPDESC, TABLE13.SDESCRIPT NNULLCODEDESC FROM THEFT THEFT LEFT JOIN BUSSKIND BUSSKIND ON BUSSKIND.NCODKIND = THEFT.NCODKIND  AND BUSSKIND.NBUSINESSTY = THEFT.NBUSINESSTY  AND BUSSKIND.NCOMMERGRP = THEFT.NCOMMERGRP LEFT JOIN TABLE13 TABLE13 ON TABLE13.NNULLCODE = THEFT.NNULLCODE  WHERE THEFT.SCERTYPE = @:THEFTSCERTYPE1 AND THEFT.NBRANCH = @:THEFTNBRANCH2 AND THEFT.NPRODUCT = @:THEFTNPRODUCT3 AND THEFT.NPOLICY = @:THEFTNPOLICY4 AND THEFT.NCERTIF = @:THEFTNCERTIF5", "THEFT", "Linked.LatCombined")
                    .AddParameter("THEFTSCERTYPE1", DbType.AnsiStringFixedLength, 0, (THEFTSCERTYPE1 = String.Empty), THEFTSCERTYPE1)
                    .AddParameter("THEFTNBRANCH2", DbType.AnsiStringFixedLength, 0, (THEFTNBRANCH2 = String.Empty), THEFTNBRANCH2)
                    .AddParameter("THEFTNPRODUCT3", DbType.AnsiStringFixedLength, 0, (THEFTNPRODUCT3 = String.Empty), THEFTNPRODUCT3)
                    .AddParameter("THEFTNPOLICY4", DbType.AnsiStringFixedLength, 0, (THEFTNPOLICY4 = String.Empty), THEFTNPOLICY4)
                    .AddParameter("THEFTNCERTIF5", DbType.AnsiStringFixedLength, 0, (THEFTNCERTIF5 = String.Empty), THEFTNCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.DSTARTDATE = itemData.DateTimeValue("DSTARTDATE"), .DEXPIRDAT = itemData.DateTimeValue("DEXPIRDAT"), .NCOMMERGRP = itemData.NumericValue("NCOMMERGRP"), .SDESCBUSSI = itemData.StringValue("SDESCBUSSI"), .NINSURED = itemData.NumericValue("NINSURED"), .NEMPLOYEES = itemData.NumericValue("NEMPLOYEES"), .NAREA = itemData.NumericValue("NAREA"), .NVIGILANCE = itemData.NumericValue("NVIGILANCE"), .NCAPITAL = itemData.NumericValue("NCAPITAL"), .DNULLDATE = itemData.DateTimeValue("DNULLDATE"), .NNULLCODE = itemData.NumericValue("NNULLCODE"), .NCOMMERGRPDesc = itemData.StringValue("NCOMMERGRPDESC"), .NNULLCODEDesc = itemData.StringValue("NNULLCODEDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "THEFTTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (THEFTTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function THEFTTblDataCount(THEFTSCERTYPE1 As String, THEFTNBRANCH2 As String, THEFTNPRODUCT3 As String, THEFTNPOLICY4 As String, THEFTNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT THEFT.DSTARTDATE, THEFT.DEXPIRDAT, THEFT.NCOMMERGRP, THEFT.SDESCBUSSI, THEFT.NINSURED, THEFT.NEMPLOYEES, THEFT.NAREA, THEFT.NVIGILANCE, THEFT.NCAPITAL, THEFT.DNULLDATE, THEFT.NNULLCODE, BUSSKIND.SDESCRIPT NCOMMERGRPDESC, TABLE13.SDESCRIPT NNULLCODEDESC FROM THEFT THEFT LEFT JOIN BUSSKIND BUSSKIND ON BUSSKIND.NCODKIND = THEFT.NCODKIND  AND BUSSKIND.NBUSINESSTY = THEFT.NBUSINESSTY  AND BUSSKIND.NCOMMERGRP = THEFT.NCOMMERGRP LEFT JOIN TABLE13 TABLE13 ON TABLE13.NNULLCODE = THEFT.NNULLCODE  WHERE THEFT.SCERTYPE = @:THEFTSCERTYPE1 AND THEFT.NBRANCH = @:THEFTNBRANCH2 AND THEFT.NPRODUCT = @:THEFTNPRODUCT3 AND THEFT.NPOLICY = @:THEFTNPOLICY4 AND THEFT.NCERTIF = @:THEFTNCERTIF5)", "THEFT", "Linked.LatCombined")
                    .AddParameter("THEFTSCERTYPE1", DbType.AnsiStringFixedLength, 0, (THEFTSCERTYPE1 = String.Empty), THEFTSCERTYPE1)
                    .AddParameter("THEFTNBRANCH2", DbType.AnsiStringFixedLength, 0, (THEFTNBRANCH2 = String.Empty), THEFTNBRANCH2)
                    .AddParameter("THEFTNPRODUCT3", DbType.AnsiStringFixedLength, 0, (THEFTNPRODUCT3 = String.Empty), THEFTNPRODUCT3)
                    .AddParameter("THEFTNPOLICY4", DbType.AnsiStringFixedLength, 0, (THEFTNPOLICY4 = String.Empty), THEFTNPOLICY4)
                    .AddParameter("THEFTNCERTIF5", DbType.AnsiStringFixedLength, 0, (THEFTNCERTIF5 = String.Empty), THEFTNCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "THEFTTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (THEFTTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function THEFTSelectCommandActionTHEFT(THEFTSCERTYPE1 As String, THEFTNBRANCH2 As String, THEFTNPRODUCT3 As String, THEFTNPOLICY4 As String, THEFTNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(THEFT.NCOMMERGRP) COUNTDATA FROM THEFT THEFT LEFT JOIN BUSSKIND BUSSKIND ON BUSSKIND.NCODKIND = THEFT.NCODKIND  AND BUSSKIND.NBUSINESSTY = THEFT.NBUSINESSTY  AND BUSSKIND.NCOMMERGRP = THEFT.NCOMMERGRP LEFT JOIN TABLE13 TABLE13 ON TABLE13.NNULLCODE = THEFT.NNULLCODE  WHERE THEFT.SCERTYPE = @:THEFTSCERTYPE1 AND THEFT.NBRANCH = @:THEFTNBRANCH2 AND THEFT.NPRODUCT = @:THEFTNPRODUCT3 AND THEFT.NPOLICY = @:THEFTNPOLICY4 AND THEFT.NCERTIF = @:THEFTNCERTIF5", "THEFT", "Linked.LatCombined")
                    .AddParameter("THEFTSCERTYPE1", DbType.AnsiStringFixedLength, 0, (THEFTSCERTYPE1 = String.Empty), THEFTSCERTYPE1)
                    .AddParameter("THEFTNBRANCH2", DbType.AnsiStringFixedLength, 0, (THEFTNBRANCH2 = String.Empty), THEFTNBRANCH2)
                    .AddParameter("THEFTNPRODUCT3", DbType.AnsiStringFixedLength, 0, (THEFTNPRODUCT3 = String.Empty), THEFTNPRODUCT3)
                    .AddParameter("THEFTNPOLICY4", DbType.AnsiStringFixedLength, 0, (THEFTNPOLICY4 = String.Empty), THEFTNPOLICY4)
                    .AddParameter("THEFTNCERTIF5", DbType.AnsiStringFixedLength, 0, (THEFTNCERTIF5 = String.Empty), THEFTNCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "THEFTSelectCommandActionTHEFT", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (THEFTSelectCommandActionTHEFT)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function HEALTHTblDataLoad(HEALTHSCERTYPE1 As String, HEALTHNBRANCH2 As String, HEALTHNPRODUCT3 As String, HEALTHNPOLICY4 As String, HEALTHNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.DSTARTDATE = Date.MinValue, .DEXPIRDAT = Date.MinValue, .NCAPITAL = 0, .NPREMIUM = 0, .NTARIFF = 0, .DNULLDATE = Date.MinValue, .NNULLCODE = 0, .SCERTYPE = String.Empty, .NBRANCH = 0, .NPRODUCT = 0, .NPOLICY = 0, .NCERTIF = 0, .NNULLCODEDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT HEALTH.DSTARTDATE, HEALTH.DEXPIRDAT, HEALTH.NCAPITAL, HEALTH.NPREMIUM, HEALTH.NTARIFF, HEALTH.DNULLDATE, HEALTH.NNULLCODE, HEALTH.SCERTYPE, HEALTH.NBRANCH, HEALTH.NPRODUCT, HEALTH.NPOLICY, HEALTH.NCERTIF, TABLE13.SDESCRIPT NNULLCODEDESC FROM HEALTH HEALTH LEFT JOIN TABLE13 TABLE13 ON TABLE13.NNULLCODE = HEALTH.NNULLCODE  WHERE HEALTH.SCERTYPE = @:HEALTHSCERTYPE1 AND HEALTH.NBRANCH = @:HEALTHNBRANCH2 AND HEALTH.NPRODUCT = @:HEALTHNPRODUCT3 AND HEALTH.NPOLICY = @:HEALTHNPOLICY4 AND HEALTH.NCERTIF = @:HEALTHNCERTIF5", "HEALTH", "Linked.LatCombined")
                    .AddParameter("HEALTHSCERTYPE1", DbType.AnsiStringFixedLength, 0, (HEALTHSCERTYPE1 = String.Empty), HEALTHSCERTYPE1)
                    .AddParameter("HEALTHNBRANCH2", DbType.AnsiStringFixedLength, 0, (HEALTHNBRANCH2 = String.Empty), HEALTHNBRANCH2)
                    .AddParameter("HEALTHNPRODUCT3", DbType.AnsiStringFixedLength, 0, (HEALTHNPRODUCT3 = String.Empty), HEALTHNPRODUCT3)
                    .AddParameter("HEALTHNPOLICY4", DbType.AnsiStringFixedLength, 0, (HEALTHNPOLICY4 = String.Empty), HEALTHNPOLICY4)
                    .AddParameter("HEALTHNCERTIF5", DbType.AnsiStringFixedLength, 0, (HEALTHNCERTIF5 = String.Empty), HEALTHNCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.DSTARTDATE = itemData.DateTimeValue("DSTARTDATE"), .DEXPIRDAT = itemData.DateTimeValue("DEXPIRDAT"), .NCAPITAL = itemData.NumericValue("NCAPITAL"), .NPREMIUM = itemData.NumericValue("NPREMIUM"), .NTARIFF = itemData.NumericValue("NTARIFF"), .DNULLDATE = itemData.DateTimeValue("DNULLDATE"), .NNULLCODE = itemData.NumericValue("NNULLCODE"), .SCERTYPE = itemData.StringValue("SCERTYPE"), .NBRANCH = itemData.NumericValue("NBRANCH"), .NPRODUCT = itemData.NumericValue("NPRODUCT"), .NPOLICY = itemData.NumericValue("NPOLICY"), .NCERTIF = itemData.NumericValue("NCERTIF"), .NNULLCODEDesc = itemData.StringValue("NNULLCODEDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "HEALTHTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (HEALTHTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function HEALTHTblDataCount(HEALTHSCERTYPE1 As String, HEALTHNBRANCH2 As String, HEALTHNPRODUCT3 As String, HEALTHNPOLICY4 As String, HEALTHNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT HEALTH.DSTARTDATE, HEALTH.DEXPIRDAT, HEALTH.NCAPITAL, HEALTH.NPREMIUM, HEALTH.NTARIFF, HEALTH.DNULLDATE, HEALTH.NNULLCODE, HEALTH.SCERTYPE, HEALTH.NBRANCH, HEALTH.NPRODUCT, HEALTH.NPOLICY, HEALTH.NCERTIF, TABLE13.SDESCRIPT NNULLCODEDESC FROM HEALTH HEALTH LEFT JOIN TABLE13 TABLE13 ON TABLE13.NNULLCODE = HEALTH.NNULLCODE  WHERE HEALTH.SCERTYPE = @:HEALTHSCERTYPE1 AND HEALTH.NBRANCH = @:HEALTHNBRANCH2 AND HEALTH.NPRODUCT = @:HEALTHNPRODUCT3 AND HEALTH.NPOLICY = @:HEALTHNPOLICY4 AND HEALTH.NCERTIF = @:HEALTHNCERTIF5)", "HEALTH", "Linked.LatCombined")
                    .AddParameter("HEALTHSCERTYPE1", DbType.AnsiStringFixedLength, 0, (HEALTHSCERTYPE1 = String.Empty), HEALTHSCERTYPE1)
                    .AddParameter("HEALTHNBRANCH2", DbType.AnsiStringFixedLength, 0, (HEALTHNBRANCH2 = String.Empty), HEALTHNBRANCH2)
                    .AddParameter("HEALTHNPRODUCT3", DbType.AnsiStringFixedLength, 0, (HEALTHNPRODUCT3 = String.Empty), HEALTHNPRODUCT3)
                    .AddParameter("HEALTHNPOLICY4", DbType.AnsiStringFixedLength, 0, (HEALTHNPOLICY4 = String.Empty), HEALTHNPOLICY4)
                    .AddParameter("HEALTHNCERTIF5", DbType.AnsiStringFixedLength, 0, (HEALTHNCERTIF5 = String.Empty), HEALTHNCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "HEALTHTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (HEALTHTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function HEALTHSelectCommandActionHEALTH(HEALTHSCERTYPE1 As String, HEALTHNBRANCH2 As String, HEALTHNPRODUCT3 As String, HEALTHNPOLICY4 As String, HEALTHNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(HEALTH.NCAPITAL) COUNTDATA FROM HEALTH HEALTH LEFT JOIN TABLE13 TABLE13 ON TABLE13.NNULLCODE = HEALTH.NNULLCODE  WHERE HEALTH.SCERTYPE = @:HEALTHSCERTYPE1 AND HEALTH.NBRANCH = @:HEALTHNBRANCH2 AND HEALTH.NPRODUCT = @:HEALTHNPRODUCT3 AND HEALTH.NPOLICY = @:HEALTHNPOLICY4 AND HEALTH.NCERTIF = @:HEALTHNCERTIF5", "HEALTH", "Linked.LatCombined")
                    .AddParameter("HEALTHSCERTYPE1", DbType.AnsiStringFixedLength, 0, (HEALTHSCERTYPE1 = String.Empty), HEALTHSCERTYPE1)
                    .AddParameter("HEALTHNBRANCH2", DbType.AnsiStringFixedLength, 0, (HEALTHNBRANCH2 = String.Empty), HEALTHNBRANCH2)
                    .AddParameter("HEALTHNPRODUCT3", DbType.AnsiStringFixedLength, 0, (HEALTHNPRODUCT3 = String.Empty), HEALTHNPRODUCT3)
                    .AddParameter("HEALTHNPOLICY4", DbType.AnsiStringFixedLength, 0, (HEALTHNPOLICY4 = String.Empty), HEALTHNPOLICY4)
                    .AddParameter("HEALTHNCERTIF5", DbType.AnsiStringFixedLength, 0, (HEALTHNCERTIF5 = String.Empty), HEALTHNCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "HEALTHSelectCommandActionHEALTH", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (HEALTHSelectCommandActionHEALTH)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function ROLES2TblDataLoad(ROLESSCERTYPE3 As String, ROLESNBRANCH4 As String, ROLESNPRODUCT5 As String, ROLESNPOLICY6 As String, ROLESNCERTIF7 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NROLE = 0, .SCLIENT = String.Empty, .DEFFECDATE = Date.MinValue, .NROLEDesc = String.Empty, .SCLIENTDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT ROLES.NROLE, ROLES.SCLIENT, ROLES.DEFFECDATE, TABLE12.SDESCRIPT NROLEDESC, CLIENT.SCLIENAME SCLIENTDESC FROM ROLES ROLES LEFT JOIN TABLE12 TABLE12 ON TABLE12.NROLE = ROLES.NROLE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = ROLES.SCLIENT  WHERE ROLES.NROLE = 1 AND ROLES.NROLE <> 13 AND ROLES.SCERTYPE = @:ROLESSCERTYPE3 AND ROLES.NBRANCH = @:ROLESNBRANCH4 AND ROLES.NPRODUCT = @:ROLESNPRODUCT5 AND ROLES.NPOLICY = @:ROLESNPOLICY6 AND ROLES.NCERTIF = @:ROLESNCERTIF7", "ROLES", "Linked.LatCombined")
                    .AddParameter("ROLESSCERTYPE3", DbType.AnsiStringFixedLength, 0, (ROLESSCERTYPE3 = String.Empty), ROLESSCERTYPE3)
                    .AddParameter("ROLESNBRANCH4", DbType.AnsiStringFixedLength, 0, (ROLESNBRANCH4 = String.Empty), ROLESNBRANCH4)
                    .AddParameter("ROLESNPRODUCT5", DbType.AnsiStringFixedLength, 0, (ROLESNPRODUCT5 = String.Empty), ROLESNPRODUCT5)
                    .AddParameter("ROLESNPOLICY6", DbType.AnsiStringFixedLength, 0, (ROLESNPOLICY6 = String.Empty), ROLESNPOLICY6)
                    .AddParameter("ROLESNCERTIF7", DbType.AnsiStringFixedLength, 0, (ROLESNCERTIF7 = String.Empty), ROLESNCERTIF7)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NROLE = itemData.NumericValue("NROLE"), .SCLIENT = itemData.StringValue("SCLIENT"), .DEFFECDATE = itemData.DateTimeValue("DEFFECDATE"), .NROLEDesc = itemData.StringValue("NROLEDESC"), .SCLIENTDesc = itemData.StringValue("SCLIENTDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "ROLES2TblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (ROLES2TblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function ROLES2TblDataCount(ROLESSCERTYPE3 As String, ROLESNBRANCH4 As String, ROLESNPRODUCT5 As String, ROLESNPOLICY6 As String, ROLESNCERTIF7 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT ROLES.NROLE, ROLES.SCLIENT, ROLES.DEFFECDATE, TABLE12.SDESCRIPT NROLEDESC, CLIENT.SCLIENAME SCLIENTDESC FROM ROLES ROLES LEFT JOIN TABLE12 TABLE12 ON TABLE12.NROLE = ROLES.NROLE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = ROLES.SCLIENT  WHERE ROLES.NROLE = 1 AND ROLES.NROLE <> 13 AND ROLES.SCERTYPE = @:ROLESSCERTYPE3 AND ROLES.NBRANCH = @:ROLESNBRANCH4 AND ROLES.NPRODUCT = @:ROLESNPRODUCT5 AND ROLES.NPOLICY = @:ROLESNPOLICY6 AND ROLES.NCERTIF = @:ROLESNCERTIF7)", "ROLES", "Linked.LatCombined")
                    .AddParameter("ROLESSCERTYPE3", DbType.AnsiStringFixedLength, 0, (ROLESSCERTYPE3 = String.Empty), ROLESSCERTYPE3)
                    .AddParameter("ROLESNBRANCH4", DbType.AnsiStringFixedLength, 0, (ROLESNBRANCH4 = String.Empty), ROLESNBRANCH4)
                    .AddParameter("ROLESNPRODUCT5", DbType.AnsiStringFixedLength, 0, (ROLESNPRODUCT5 = String.Empty), ROLESNPRODUCT5)
                    .AddParameter("ROLESNPOLICY6", DbType.AnsiStringFixedLength, 0, (ROLESNPOLICY6 = String.Empty), ROLESNPOLICY6)
                    .AddParameter("ROLESNCERTIF7", DbType.AnsiStringFixedLength, 0, (ROLESNCERTIF7 = String.Empty), ROLESNCERTIF7)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "ROLES2TblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (ROLES2TblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function ROLES2SelectCommandActionROLES(ROLESSCERTYPE3 As String, ROLESNBRANCH4 As String, ROLESNPRODUCT5 As String, ROLESNPOLICY6 As String, ROLESNCERTIF7 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(ROLES.NROLE) COUNTDATA FROM ROLES ROLES LEFT JOIN TABLE12 TABLE12 ON TABLE12.NROLE = ROLES.NROLE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = ROLES.SCLIENT  WHERE ROLES.NROLE = 1 AND ROLES.NROLE <> 13 AND ROLES.SCERTYPE = @:ROLESSCERTYPE3 AND ROLES.NBRANCH = @:ROLESNBRANCH4 AND ROLES.NPRODUCT = @:ROLESNPRODUCT5 AND ROLES.NPOLICY = @:ROLESNPOLICY6 AND ROLES.NCERTIF = @:ROLESNCERTIF7", "ROLES", "Linked.LatCombined")
                    .AddParameter("ROLESSCERTYPE3", DbType.AnsiStringFixedLength, 0, (ROLESSCERTYPE3 = String.Empty), ROLESSCERTYPE3)
                    .AddParameter("ROLESNBRANCH4", DbType.AnsiStringFixedLength, 0, (ROLESNBRANCH4 = String.Empty), ROLESNBRANCH4)
                    .AddParameter("ROLESNPRODUCT5", DbType.AnsiStringFixedLength, 0, (ROLESNPRODUCT5 = String.Empty), ROLESNPRODUCT5)
                    .AddParameter("ROLESNPOLICY6", DbType.AnsiStringFixedLength, 0, (ROLESNPOLICY6 = String.Empty), ROLESNPOLICY6)
                    .AddParameter("ROLESNCERTIF7", DbType.AnsiStringFixedLength, 0, (ROLESNCERTIF7 = String.Empty), ROLESNCERTIF7)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "ROLES2SelectCommandActionROLES", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (ROLES2SelectCommandActionROLES)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function FINANCIAL_INSTRUMENTSTblDataLoad(FINANCIALINSTRUMENTSSCERTYPE1 As String, FINANCIALINSTRUMENTSNBRANCH2 As String, FINANCIALINSTRUMENTSNPRODUCT3 As String, FINANCIALINSTRUMENTSNPOLICY4 As String, FINANCIALINSTRUMENTSNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NCONSECUTIVE = 0, .NINSTRUMENT_TY = 0, .NBANK_CODE = 0, .NCARD_TYPE = 0, .SNUMBER = String.Empty, .DCARDEXPIR = Date.MinValue, .DSTARTDATE = Date.MinValue, .DTERM_DATE = Date.MinValue, .NQUOTA = 0, .NAMOUNT = 0, .NCURRENCY = 0, .NINSTRUMENT_TYDesc = String.Empty, .NBANK_CODEDesc = String.Empty, .NCARD_TYPEDesc = String.Empty, .NCURRENCYDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactoryinked.LatCombined")
                    .AddParameter("FINANCIAL_INSTRUMENTSSCERTYPE1", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSSCERTYPE1 = String.Empty), FINANCIALINSTRUMENTSSCERTYPE1)
                    .AddParameter("FINANCIAL_INSTRUMENTSNBRANCH2", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSNBRANCH2 = String.Empty), FINANCIALINSTRUMENTSNBRANCH2)
                    .AddParameter("FINANCIAL_INSTRUMENTSNPRODUCT3", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSNPRODUCT3 = String.Empty), FINANCIALINSTRUMENTSNPRODUCT3)
                    .AddParameter("FINANCIAL_INSTRUMENTSNPOLICY4", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSNPOLICY4 = String.Empty), FINANCIALINSTRUMENTSNPOLICY4)
                    .AddParameter("FINANCIAL_INSTRUMENTSNCERTIF5", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSNCERTIF5 = String.Empty), FINANCIALINSTRUMENTSNCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NCONSECUTIVE = itemData.NumericValue("NCONSECUTIVE"), .NINSTRUMENT_TY = itemData.NumericValue("NINSTRUMENT_TY"), .NBANK_CODE = itemData.NumericValue("NBANK_CODE"), .NCARD_TYPE = itemData.NumericValue("NCARD_TYPE"), .SNUMBER = itemData.StringValue("SNUMBER"), .DCARDEXPIR = itemData.DateTimeValue("DCARDEXPIR"), .DSTARTDATE = itemData.DateTimeValue("DSTARTDATE"), .DTERM_DATE = itemData.DateTimeValue("DTERM_DATE"), .NQUOTA = itemData.NumericValue("NQUOTA"), .NAMOUNT = itemData.NumericValue("NAMOUNT"), .NCURRENCY = itemData.NumericValue("NCURRENCY"), .NINSTRUMENT_TYDesc = itemData.StringValue("NINSTRUMENT_TYDESC"), .NBANK_CODEDesc = itemData.StringValue("NBANK_CODEDESC"), .NCARD_TYPEDesc = itemData.StringValue("NCARD_TYPEDESC"), .NCURRENCYDesc = itemData.StringValue("NCURRENCYDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "FINANCIAL_INSTRUMENTSTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (FINANCIAL_INSTRUMENTSTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function FINANCIAL_INSTRUMENTSTblDataCount(FINANCIALINSTRUMENTSSCERTYPE1 As String, FINANCIALINSTRUMENTSNBRANCH2 As String, FINANCIALINSTRUMENTSNPRODUCT3 As String, FINANCIALINSTRUMENTSNPOLICY4 As String, FINANCIALINSTRUMENTSNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactoryinked.LatCombined")
                    .AddParameter("FINANCIAL_INSTRUMENTSSCERTYPE1", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSSCERTYPE1 = String.Empty), FINANCIALINSTRUMENTSSCERTYPE1)
                    .AddParameter("FINANCIAL_INSTRUMENTSNBRANCH2", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSNBRANCH2 = String.Empty), FINANCIALINSTRUMENTSNBRANCH2)
                    .AddParameter("FINANCIAL_INSTRUMENTSNPRODUCT3", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSNPRODUCT3 = String.Empty), FINANCIALINSTRUMENTSNPRODUCT3)
                    .AddParameter("FINANCIAL_INSTRUMENTSNPOLICY4", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSNPOLICY4 = String.Empty), FINANCIALINSTRUMENTSNPOLICY4)
                    .AddParameter("FINANCIAL_INSTRUMENTSNCERTIF5", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSNCERTIF5 = String.Empty), FINANCIALINSTRUMENTSNCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "FINANCIAL_INSTRUMENTSTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (FINANCIAL_INSTRUMENTSTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function FINANCIAL_INSTRUMENTSSelectCommandActionFINANCIAL_INSTRUMENTS(FINANCIALINSTRUMENTSSCERTYPE1 As String, FINANCIALINSTRUMENTSNBRANCH2 As String, FINANCIALINSTRUMENTSNPRODUCT3 As String, FINANCIALINSTRUMENTSNPOLICY4 As String, FINANCIALINSTRUMENTSNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(FINANCIAL_INSTRUMENTS.NCONSECUTIVE) COUNTDATA FROM FINANCIAL_INSTRUMENTS FINANCIAL_INSTRUMENTS LEFT JOIN TABLE5539 TABLE5539 ON TABLE5539.NINSTRUMENT_TY = FINANCIAL_INSTRUMENTS.NINSTRUMENT_TY LEFT JOIN TABLE7 TABLE7 ON TABLE7.NBANK_CODE = FINANCIAL_INSTRUMENTS.NBANK_CODE LEFT JOIN TABLE183 TABLE183 ON TABLE183.NCARD_TYPE = FINANCIAL_INSTRUMENTS.NCARD_TYPE LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = FINANCIAL_INSTRUMENTS.NCURRENCY  WHERE FINANCIAL_INSTRUMENTS.SCERTYPE = @:FINANCIAL_INSTRUMENTSSCERTYPE1 AND FINANCIAL_INSTRUMENTS.NBRANCH = @:FINANCIAL_INSTRUMENTSNBRANCH2 AND FINANCIAL_INSTRUMENTS.NPRODUCT = @:FINANCIAL_INSTRUMENTSNPRODUCT3 AND FINANCIAL_INSTRUMENTS.NPOLICY = @:FINANCIAL_INSTRUMENTSNPOLICY4 AND FINANCIAL_INSTRUMENTS.NCERTIF = @:FINANCIAL_INSTRUMENTSNCERTIF5", "FINANCIAL_INSTRUMENTS", "Linked.LatCombined")
                    .AddParameter("FINANCIAL_INSTRUMENTSSCERTYPE1", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSSCERTYPE1 = String.Empty), FINANCIALINSTRUMENTSSCERTYPE1)
                    .AddParameter("FINANCIAL_INSTRUMENTSNBRANCH2", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSNBRANCH2 = String.Empty), FINANCIALINSTRUMENTSNBRANCH2)
                    .AddParameter("FINANCIAL_INSTRUMENTSNPRODUCT3", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSNPRODUCT3 = String.Empty), FINANCIALINSTRUMENTSNPRODUCT3)
                    .AddParameter("FINANCIAL_INSTRUMENTSNPOLICY4", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSNPOLICY4 = String.Empty), FINANCIALINSTRUMENTSNPOLICY4)
                    .AddParameter("FINANCIAL_INSTRUMENTSNCERTIF5", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSNCERTIF5 = String.Empty), FINANCIALINSTRUMENTSNCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "FINANCIAL_INSTRUMENTSSelectCommandActionFINANCIAL_INSTRUMENTS", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (FINANCIAL_INSTRUMENTSSelectCommandActionFINANCIAL_INSTRUMENTS)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function PROTECTIONTblDataLoad(PROTECTIONSCERTYPE1 As String, PROTECTIONNBRANCH2 As String, PROTECTIONNPRODUCT3 As String, PROTECTIONNPOLICY4 As String, PROTECTIONNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NUSERCODE = 0}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT PROTECTION.NUSERCODE FROM PROTECTION PROTECTION  WHERE PROTECTION.SCERTYPE = @:PROTECTIONSCERTYPE1 AND PROTECTION.NBRANCH = @:PROTECTIONNBRANCH2 AND PROTECTION.NPRODUCT = @:PROTECTIONNPRODUCT3 AND PROTECTION.NPOLICY = @:PROTECTIONNPOLICY4 AND PROTECTION.NCERTIF = @:PROTECTIONNCERTIF5", "PROTECTION", "Linked.LatCombined")
                    .AddParameter("PROTECTIONSCERTYPE1", DbType.AnsiStringFixedLength, 0, (PROTECTIONSCERTYPE1 = String.Empty), PROTECTIONSCERTYPE1)
                    .AddParameter("PROTECTIONNBRANCH2", DbType.AnsiStringFixedLength, 0, (PROTECTIONNBRANCH2 = String.Empty), PROTECTIONNBRANCH2)
                    .AddParameter("PROTECTIONNPRODUCT3", DbType.AnsiStringFixedLength, 0, (PROTECTIONNPRODUCT3 = String.Empty), PROTECTIONNPRODUCT3)
                    .AddParameter("PROTECTIONNPOLICY4", DbType.AnsiStringFixedLength, 0, (PROTECTIONNPOLICY4 = String.Empty), PROTECTIONNPOLICY4)
                    .AddParameter("PROTECTIONNCERTIF5", DbType.AnsiStringFixedLength, 0, (PROTECTIONNCERTIF5 = String.Empty), PROTECTIONNCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NUSERCODE = itemData.NumericValue("NUSERCODE")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "PROTECTIONTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (PROTECTIONTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function PROTECTIONTblDataCount(PROTECTIONSCERTYPE1 As String, PROTECTIONNBRANCH2 As String, PROTECTIONNPRODUCT3 As String, PROTECTIONNPOLICY4 As String, PROTECTIONNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT PROTECTION.NUSERCODE FROM PROTECTION PROTECTION  WHERE PROTECTION.SCERTYPE = @:PROTECTIONSCERTYPE1 AND PROTECTION.NBRANCH = @:PROTECTIONNBRANCH2 AND PROTECTION.NPRODUCT = @:PROTECTIONNPRODUCT3 AND PROTECTION.NPOLICY = @:PROTECTIONNPOLICY4 AND PROTECTION.NCERTIF = @:PROTECTIONNCERTIF5)", "PROTECTION", "Linked.LatCombined")
                    .AddParameter("PROTECTIONSCERTYPE1", DbType.AnsiStringFixedLength, 0, (PROTECTIONSCERTYPE1 = String.Empty), PROTECTIONSCERTYPE1)
                    .AddParameter("PROTECTIONNBRANCH2", DbType.AnsiStringFixedLength, 0, (PROTECTIONNBRANCH2 = String.Empty), PROTECTIONNBRANCH2)
                    .AddParameter("PROTECTIONNPRODUCT3", DbType.AnsiStringFixedLength, 0, (PROTECTIONNPRODUCT3 = String.Empty), PROTECTIONNPRODUCT3)
                    .AddParameter("PROTECTIONNPOLICY4", DbType.AnsiStringFixedLength, 0, (PROTECTIONNPOLICY4 = String.Empty), PROTECTIONNPOLICY4)
                    .AddParameter("PROTECTIONNCERTIF5", DbType.AnsiStringFixedLength, 0, (PROTECTIONNCERTIF5 = String.Empty), PROTECTIONNCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "PROTECTIONTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (PROTECTIONTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function PROTECTIONSelectCommandActionPROTECTION(PROTECTIONSCERTYPE1 As String, PROTECTIONNBRANCH2 As String, PROTECTIONNPRODUCT3 As String, PROTECTIONNPOLICY4 As String, PROTECTIONNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(PROTECTION.NUSERCODE) COUNTDATA FROM PROTECTION PROTECTION  WHERE PROTECTION.SCERTYPE = @:PROTECTIONSCERTYPE1 AND PROTECTION.NBRANCH = @:PROTECTIONNBRANCH2 AND PROTECTION.NPRODUCT = @:PROTECTIONNPRODUCT3 AND PROTECTION.NPOLICY = @:PROTECTIONNPOLICY4 AND PROTECTION.NCERTIF = @:PROTECTIONNCERTIF5", "PROTECTION", "Linked.LatCombined")
                    .AddParameter("PROTECTIONSCERTYPE1", DbType.AnsiStringFixedLength, 0, (PROTECTIONSCERTYPE1 = String.Empty), PROTECTIONSCERTYPE1)
                    .AddParameter("PROTECTIONNBRANCH2", DbType.AnsiStringFixedLength, 0, (PROTECTIONNBRANCH2 = String.Empty), PROTECTIONNBRANCH2)
                    .AddParameter("PROTECTIONNPRODUCT3", DbType.AnsiStringFixedLength, 0, (PROTECTIONNPRODUCT3 = String.Empty), PROTECTIONNPRODUCT3)
                    .AddParameter("PROTECTIONNPOLICY4", DbType.AnsiStringFixedLength, 0, (PROTECTIONNPOLICY4 = String.Empty), PROTECTIONNPOLICY4)
                    .AddParameter("PROTECTIONNCERTIF5", DbType.AnsiStringFixedLength, 0, (PROTECTIONNCERTIF5 = String.Empty), PROTECTIONNCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "PROTECTIONSelectCommandActionPROTECTION", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (PROTECTIONSelectCommandActionPROTECTION)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function BENEFICIARTblDataLoad(BENEFICIARSCERTYPE1 As String, BENEFICIARNBRANCH2 As String, BENEFICIARNPRODUCT3 As String, BENEFICIARNPOLICY4 As String, BENEFICIARNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NMODULEC = 0, .NCOVER = 0, .SCLIENT = String.Empty, .NRELATION = 0, .NPARTICIP = 0, .SIRREVOC = String.Empty, .NMODULECDesc = String.Empty, .SCLIENTDesc = String.Empty, .NRELATIONDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT BENEFICIAR.NMODULEC, BENEFICIAR.NCOVER, BENEFICIAR.SCLIENT, BENEFICIAR.NRELATION, BENEFICIAR.NPARTICIP, BENEFICIAR.SIRREVOC, TAB_MODUL.SDESCRIPT NMODULECDESC, CLIENT.SCLIENAME SCLIENTDESC, TABLE55.SDESCRIPT NRELATIONDESC FROM BENEFICIAR BENEFICIAR LEFT JOIN TAB_MODUL TAB_MODUL ON TAB_MODUL.NBRANCH = BENEFICIAR.NBRANCH  AND TAB_MODUL.NPRODUCT = BENEFICIAR.NPRODUCT  AND TAB_MODUL.NMODULEC = BENEFICIAR.NMODULEC  AND TAB_MODUL.DEFFECDATE = BENEFICIAR.DEFFECDATE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = BENEFICIAR.SCLIENT LEFT JOIN TABLE55 TABLE55 ON TABLE55.NRELATION = BENEFICIAR.NRELATION  WHERE BENEFICIAR.SCERTYPE = @:BENEFICIARSCERTYPE1 AND BENEFICIAR.NBRANCH = @:BENEFICIARNBRANCH2 AND BENEFICIAR.NPRODUCT = @:BENEFICIARNPRODUCT3 AND BENEFICIAR.NPOLICY = @:BENEFICIARNPOLICY4 AND BENEFICIAR.NCERTIF = @:BENEFICIARNCERTIF5", "BENEFICIAR", "Linked.LatCombined")
                    .AddParameter("BENEFICIARSCERTYPE1", DbType.AnsiStringFixedLength, 0, (BENEFICIARSCERTYPE1 = String.Empty), BENEFICIARSCERTYPE1)
                    .AddParameter("BENEFICIARNBRANCH2", DbType.AnsiStringFixedLength, 0, (BENEFICIARNBRANCH2 = String.Empty), BENEFICIARNBRANCH2)
                    .AddParameter("BENEFICIARNPRODUCT3", DbType.AnsiStringFixedLength, 0, (BENEFICIARNPRODUCT3 = String.Empty), BENEFICIARNPRODUCT3)
                    .AddParameter("BENEFICIARNPOLICY4", DbType.AnsiStringFixedLength, 0, (BENEFICIARNPOLICY4 = String.Empty), BENEFICIARNPOLICY4)
                    .AddParameter("BENEFICIARNCERTIF5", DbType.AnsiStringFixedLength, 0, (BENEFICIARNCERTIF5 = String.Empty), BENEFICIARNCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NMODULEC = itemData.NumericValue("NMODULEC"), .NCOVER = itemData.NumericValue("NCOVER"), .SCLIENT = itemData.StringValue("SCLIENT"), .NRELATION = itemData.NumericValue("NRELATION"), .NPARTICIP = itemData.NumericValue("NPARTICIP"), .SIRREVOC = itemData.StringValue("SIRREVOC"), .NMODULECDesc = itemData.StringValue("NMODULECDESC"), .SCLIENTDesc = itemData.StringValue("SCLIENTDESC"), .NRELATIONDesc = itemData.StringValue("NRELATIONDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "BENEFICIARTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (BENEFICIARTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function BENEFICIARTblDataCount(BENEFICIARSCERTYPE1 As String, BENEFICIARNBRANCH2 As String, BENEFICIARNPRODUCT3 As String, BENEFICIARNPOLICY4 As String, BENEFICIARNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT BENEFICIAR.NMODULEC, BENEFICIAR.NCOVER, BENEFICIAR.SCLIENT, BENEFICIAR.NRELATION, BENEFICIAR.NPARTICIP, BENEFICIAR.SIRREVOC, TAB_MODUL.SDESCRIPT NMODULECDESC, CLIENT.SCLIENAME SCLIENTDESC, TABLE55.SDESCRIPT NRELATIONDESC FROM BENEFICIAR BENEFICIAR LEFT JOIN TAB_MODUL TAB_MODUL ON TAB_MODUL.NBRANCH = BENEFICIAR.NBRANCH  AND TAB_MODUL.NPRODUCT = BENEFICIAR.NPRODUCT  AND TAB_MODUL.NMODULEC = BENEFICIAR.NMODULEC  AND TAB_MODUL.DEFFECDATE = BENEFICIAR.DEFFECDATE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = BENEFICIAR.SCLIENT LEFT JOIN TABLE55 TABLE55 ON TABLE55.NRELATION = BENEFICIAR.NRELATION  WHERE BENEFICIAR.SCERTYPE = @:BENEFICIARSCERTYPE1 AND BENEFICIAR.NBRANCH = @:BENEFICIARNBRANCH2 AND BENEFICIAR.NPRODUCT = @:BENEFICIARNPRODUCT3 AND BENEFICIAR.NPOLICY = @:BENEFICIARNPOLICY4 AND BENEFICIAR.NCERTIF = @:BENEFICIARNCERTIF5)", "BENEFICIAR", "Linked.LatCombined")
                    .AddParameter("BENEFICIARSCERTYPE1", DbType.AnsiStringFixedLength, 0, (BENEFICIARSCERTYPE1 = String.Empty), BENEFICIARSCERTYPE1)
                    .AddParameter("BENEFICIARNBRANCH2", DbType.AnsiStringFixedLength, 0, (BENEFICIARNBRANCH2 = String.Empty), BENEFICIARNBRANCH2)
                    .AddParameter("BENEFICIARNPRODUCT3", DbType.AnsiStringFixedLength, 0, (BENEFICIARNPRODUCT3 = String.Empty), BENEFICIARNPRODUCT3)
                    .AddParameter("BENEFICIARNPOLICY4", DbType.AnsiStringFixedLength, 0, (BENEFICIARNPOLICY4 = String.Empty), BENEFICIARNPOLICY4)
                    .AddParameter("BENEFICIARNCERTIF5", DbType.AnsiStringFixedLength, 0, (BENEFICIARNCERTIF5 = String.Empty), BENEFICIARNCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "BENEFICIARTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (BENEFICIARTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function BENEFICIARSelectCommandActionBENEFICIAR(BENEFICIARSCERTYPE1 As String, BENEFICIARNBRANCH2 As String, BENEFICIARNPRODUCT3 As String, BENEFICIARNPOLICY4 As String, BENEFICIARNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(BENEFICIAR.NMODULEC) COUNTDATA FROM BENEFICIAR BENEFICIAR LEFT JOIN TAB_MODUL TAB_MODUL ON TAB_MODUL.NBRANCH = BENEFICIAR.NBRANCH  AND TAB_MODUL.NPRODUCT = BENEFICIAR.NPRODUCT  AND TAB_MODUL.NMODULEC = BENEFICIAR.NMODULEC  AND TAB_MODUL.DEFFECDATE = BENEFICIAR.DEFFECDATE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = BENEFICIAR.SCLIENT LEFT JOIN TABLE55 TABLE55 ON TABLE55.NRELATION = BENEFICIAR.NRELATION  WHERE BENEFICIAR.SCERTYPE = @:BENEFICIARSCERTYPE1 AND BENEFICIAR.NBRANCH = @:BENEFICIARNBRANCH2 AND BENEFICIAR.NPRODUCT = @:BENEFICIARNPRODUCT3 AND BENEFICIAR.NPOLICY = @:BENEFICIARNPOLICY4 AND BENEFICIAR.NCERTIF = @:BENEFICIARNCERTIF5", "BENEFICIAR", "Linked.LatCombined")
                    .AddParameter("BENEFICIARSCERTYPE1", DbType.AnsiStringFixedLength, 0, (BENEFICIARSCERTYPE1 = String.Empty), BENEFICIARSCERTYPE1)
                    .AddParameter("BENEFICIARNBRANCH2", DbType.AnsiStringFixedLength, 0, (BENEFICIARNBRANCH2 = String.Empty), BENEFICIARNBRANCH2)
                    .AddParameter("BENEFICIARNPRODUCT3", DbType.AnsiStringFixedLength, 0, (BENEFICIARNPRODUCT3 = String.Empty), BENEFICIARNPRODUCT3)
                    .AddParameter("BENEFICIARNPOLICY4", DbType.AnsiStringFixedLength, 0, (BENEFICIARNPOLICY4 = String.Empty), BENEFICIARNPOLICY4)
                    .AddParameter("BENEFICIARNCERTIF5", DbType.AnsiStringFixedLength, 0, (BENEFICIARNCERTIF5 = String.Empty), BENEFICIARNCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "BENEFICIARSelectCommandActionBENEFICIAR", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (BENEFICIARSelectCommandActionBENEFICIAR)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function CLAUSETblDataLoad(CLAUSESCERTYPE1 As String, CLAUSENBRANCH2 As String, CLAUSENPRODUCT3 As String, CLAUSENPOLICY4 As String, CLAUSENCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NCLAUSE = 0, .NNOTENUM = 0}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT CLAUSE.NCLAUSE, CLAUSE.NNOTENUM FROM CLAUSE CLAUSE  WHERE CLAUSE.SCERTYPE = @:CLAUSESCERTYPE1 AND CLAUSE.NBRANCH = @:CLAUSENBRANCH2 AND CLAUSE.NPRODUCT = @:CLAUSENPRODUCT3 AND CLAUSE.NPOLICY = @:CLAUSENPOLICY4 AND CLAUSE.NCERTIF = @:CLAUSENCERTIF5", "CLAUSE", "Linked.LatCombined")
                    .AddParameter("CLAUSESCERTYPE1", DbType.AnsiStringFixedLength, 0, (CLAUSESCERTYPE1 = String.Empty), CLAUSESCERTYPE1)
                    .AddParameter("CLAUSENBRANCH2", DbType.AnsiStringFixedLength, 0, (CLAUSENBRANCH2 = String.Empty), CLAUSENBRANCH2)
                    .AddParameter("CLAUSENPRODUCT3", DbType.AnsiStringFixedLength, 0, (CLAUSENPRODUCT3 = String.Empty), CLAUSENPRODUCT3)
                    .AddParameter("CLAUSENPOLICY4", DbType.AnsiStringFixedLength, 0, (CLAUSENPOLICY4 = String.Empty), CLAUSENPOLICY4)
                    .AddParameter("CLAUSENCERTIF5", DbType.AnsiStringFixedLength, 0, (CLAUSENCERTIF5 = String.Empty), CLAUSENCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NCLAUSE = itemData.NumericValue("NCLAUSE"), .NNOTENUM = itemData.NumericValue("NNOTENUM")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "CLAUSETblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CLAUSETblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function CLAUSETblDataCount(CLAUSESCERTYPE1 As String, CLAUSENBRANCH2 As String, CLAUSENPRODUCT3 As String, CLAUSENPOLICY4 As String, CLAUSENCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT CLAUSE.NCLAUSE, CLAUSE.NNOTENUM FROM CLAUSE CLAUSE  WHERE CLAUSE.SCERTYPE = @:CLAUSESCERTYPE1 AND CLAUSE.NBRANCH = @:CLAUSENBRANCH2 AND CLAUSE.NPRODUCT = @:CLAUSENPRODUCT3 AND CLAUSE.NPOLICY = @:CLAUSENPOLICY4 AND CLAUSE.NCERTIF = @:CLAUSENCERTIF5)", "CLAUSE", "Linked.LatCombined")
                    .AddParameter("CLAUSESCERTYPE1", DbType.AnsiStringFixedLength, 0, (CLAUSESCERTYPE1 = String.Empty), CLAUSESCERTYPE1)
                    .AddParameter("CLAUSENBRANCH2", DbType.AnsiStringFixedLength, 0, (CLAUSENBRANCH2 = String.Empty), CLAUSENBRANCH2)
                    .AddParameter("CLAUSENPRODUCT3", DbType.AnsiStringFixedLength, 0, (CLAUSENPRODUCT3 = String.Empty), CLAUSENPRODUCT3)
                    .AddParameter("CLAUSENPOLICY4", DbType.AnsiStringFixedLength, 0, (CLAUSENPOLICY4 = String.Empty), CLAUSENPOLICY4)
                    .AddParameter("CLAUSENCERTIF5", DbType.AnsiStringFixedLength, 0, (CLAUSENCERTIF5 = String.Empty), CLAUSENCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "CLAUSETblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CLAUSETblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function CLAUSESelectCommandActionCLAUSE(CLAUSESCERTYPE1 As String, CLAUSENBRANCH2 As String, CLAUSENPRODUCT3 As String, CLAUSENPOLICY4 As String, CLAUSENCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(CLAUSE.NCLAUSE) COUNTDATA FROM CLAUSE CLAUSE  WHERE CLAUSE.SCERTYPE = @:CLAUSESCERTYPE1 AND CLAUSE.NBRANCH = @:CLAUSENBRANCH2 AND CLAUSE.NPRODUCT = @:CLAUSENPRODUCT3 AND CLAUSE.NPOLICY = @:CLAUSENPOLICY4 AND CLAUSE.NCERTIF = @:CLAUSENCERTIF5", "CLAUSE", "Linked.LatCombined")
                    .AddParameter("CLAUSESCERTYPE1", DbType.AnsiStringFixedLength, 0, (CLAUSESCERTYPE1 = String.Empty), CLAUSESCERTYPE1)
                    .AddParameter("CLAUSENBRANCH2", DbType.AnsiStringFixedLength, 0, (CLAUSENBRANCH2 = String.Empty), CLAUSENBRANCH2)
                    .AddParameter("CLAUSENPRODUCT3", DbType.AnsiStringFixedLength, 0, (CLAUSENPRODUCT3 = String.Empty), CLAUSENPRODUCT3)
                    .AddParameter("CLAUSENPOLICY4", DbType.AnsiStringFixedLength, 0, (CLAUSENPOLICY4 = String.Empty), CLAUSENPOLICY4)
                    .AddParameter("CLAUSENCERTIF5", DbType.AnsiStringFixedLength, 0, (CLAUSENCERTIF5 = String.Empty), CLAUSENCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "CLAUSESelectCommandActionCLAUSE", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CLAUSESelectCommandActionCLAUSE)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function POLICY_HISTblDataLoad(POLICYHISSCERTYPE1 As String, POLICYHISNBRANCH2 As String, POLICYHISNPRODUCT3 As String, POLICYHISNPOLICY4 As String, POLICYHISNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NTRANSACTIO = 0, .NMOVEMENT = 0, .NTYPE_HIST = 0, .DEFFECDATE = Date.MinValue, .NRECEIPT = 0, .SNULL_MOVE = String.Empty, .DNULLDATE = Date.MinValue, .NTYPE_HISTDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT POLICY_HIS.NTRANSACTIO, POLICY_HIS.NMOVEMENT, POLICY_HIS.NTYPE_HIST, POLICY_HIS.DEFFECDATE, POLICY_HIS.NRECEIPT, POLICY_HIS.SNULL_MOVE, POLICY_HIS.DNULLDATE, TABLE165.SDESCRIPT NTYPE_HISTDESC FROM POLICY_HIS POLICY_HIS LEFT JOIN TABLE165 TABLE165 ON TABLE165.NTYPE_HIST = POLICY_HIS.NTYPE_HIST  WHERE POLICY_HIS.SCERTYPE = @:POLICY_HISSCERTYPE1 AND POLICY_HIS.NBRANCH = @:POLICY_HISNBRANCH2 AND POLICY_HIS.NPRODUCT = @:POLICY_HISNPRODUCT3 AND POLICY_HIS.NPOLICY = @:POLICY_HISNPOLICY4 AND POLICY_HIS.NCERTIF = @:POLICY_HISNCERTIF5", "POLICY_HIS", "Linked.LatCombined")
                    .AddParameter("POLICY_HISSCERTYPE1", DbType.AnsiStringFixedLength, 0, (POLICYHISSCERTYPE1 = String.Empty), POLICYHISSCERTYPE1)
                    .AddParameter("POLICY_HISNBRANCH2", DbType.AnsiStringFixedLength, 0, (POLICYHISNBRANCH2 = String.Empty), POLICYHISNBRANCH2)
                    .AddParameter("POLICY_HISNPRODUCT3", DbType.AnsiStringFixedLength, 0, (POLICYHISNPRODUCT3 = String.Empty), POLICYHISNPRODUCT3)
                    .AddParameter("POLICY_HISNPOLICY4", DbType.AnsiStringFixedLength, 0, (POLICYHISNPOLICY4 = String.Empty), POLICYHISNPOLICY4)
                    .AddParameter("POLICY_HISNCERTIF5", DbType.AnsiStringFixedLength, 0, (POLICYHISNCERTIF5 = String.Empty), POLICYHISNCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NTRANSACTIO = itemData.NumericValue("NTRANSACTIO"), .NMOVEMENT = itemData.NumericValue("NMOVEMENT"), .NTYPE_HIST = itemData.NumericValue("NTYPE_HIST"), .DEFFECDATE = itemData.DateTimeValue("DEFFECDATE"), .NRECEIPT = itemData.NumericValue("NRECEIPT"), .SNULL_MOVE = itemData.StringValue("SNULL_MOVE"), .DNULLDATE = itemData.DateTimeValue("DNULLDATE"), .NTYPE_HISTDesc = itemData.StringValue("NTYPE_HISTDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "POLICY_HISTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (POLICY_HISTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function POLICY_HISTblDataCount(POLICYHISSCERTYPE1 As String, POLICYHISNBRANCH2 As String, POLICYHISNPRODUCT3 As String, POLICYHISNPOLICY4 As String, POLICYHISNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT POLICY_HIS.NTRANSACTIO, POLICY_HIS.NMOVEMENT, POLICY_HIS.NTYPE_HIST, POLICY_HIS.DEFFECDATE, POLICY_HIS.NRECEIPT, POLICY_HIS.SNULL_MOVE, POLICY_HIS.DNULLDATE, TABLE165.SDESCRIPT NTYPE_HISTDESC FROM POLICY_HIS POLICY_HIS LEFT JOIN TABLE165 TABLE165 ON TABLE165.NTYPE_HIST = POLICY_HIS.NTYPE_HIST  WHERE POLICY_HIS.SCERTYPE = @:POLICY_HISSCERTYPE1 AND POLICY_HIS.NBRANCH = @:POLICY_HISNBRANCH2 AND POLICY_HIS.NPRODUCT = @:POLICY_HISNPRODUCT3 AND POLICY_HIS.NPOLICY = @:POLICY_HISNPOLICY4 AND POLICY_HIS.NCERTIF = @:POLICY_HISNCERTIF5)", "POLICY_HIS", "Linked.LatCombined")
                    .AddParameter("POLICY_HISSCERTYPE1", DbType.AnsiStringFixedLength, 0, (POLICYHISSCERTYPE1 = String.Empty), POLICYHISSCERTYPE1)
                    .AddParameter("POLICY_HISNBRANCH2", DbType.AnsiStringFixedLength, 0, (POLICYHISNBRANCH2 = String.Empty), POLICYHISNBRANCH2)
                    .AddParameter("POLICY_HISNPRODUCT3", DbType.AnsiStringFixedLength, 0, (POLICYHISNPRODUCT3 = String.Empty), POLICYHISNPRODUCT3)
                    .AddParameter("POLICY_HISNPOLICY4", DbType.AnsiStringFixedLength, 0, (POLICYHISNPOLICY4 = String.Empty), POLICYHISNPOLICY4)
                    .AddParameter("POLICY_HISNCERTIF5", DbType.AnsiStringFixedLength, 0, (POLICYHISNCERTIF5 = String.Empty), POLICYHISNCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "POLICY_HISTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (POLICY_HISTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function POLICY_HISSelectCommandActionPOLICY_HIS(POLICYHISSCERTYPE1 As String, POLICYHISNBRANCH2 As String, POLICYHISNPRODUCT3 As String, POLICYHISNPOLICY4 As String, POLICYHISNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(POLICY_HIS.NTRANSACTIO) COUNTDATA FROM POLICY_HIS POLICY_HIS LEFT JOIN TABLE165 TABLE165 ON TABLE165.NTYPE_HIST = POLICY_HIS.NTYPE_HIST  WHERE POLICY_HIS.SCERTYPE = @:POLICY_HISSCERTYPE1 AND POLICY_HIS.NBRANCH = @:POLICY_HISNBRANCH2 AND POLICY_HIS.NPRODUCT = @:POLICY_HISNPRODUCT3 AND POLICY_HIS.NPOLICY = @:POLICY_HISNPOLICY4 AND POLICY_HIS.NCERTIF = @:POLICY_HISNCERTIF5", "POLICY_HIS", "Linked.LatCombined")
                    .AddParameter("POLICY_HISSCERTYPE1", DbType.AnsiStringFixedLength, 0, (POLICYHISSCERTYPE1 = String.Empty), POLICYHISSCERTYPE1)
                    .AddParameter("POLICY_HISNBRANCH2", DbType.AnsiStringFixedLength, 0, (POLICYHISNBRANCH2 = String.Empty), POLICYHISNBRANCH2)
                    .AddParameter("POLICY_HISNPRODUCT3", DbType.AnsiStringFixedLength, 0, (POLICYHISNPRODUCT3 = String.Empty), POLICYHISNPRODUCT3)
                    .AddParameter("POLICY_HISNPOLICY4", DbType.AnsiStringFixedLength, 0, (POLICYHISNPOLICY4 = String.Empty), POLICYHISNPOLICY4)
                    .AddParameter("POLICY_HISNCERTIF5", DbType.AnsiStringFixedLength, 0, (POLICYHISNCERTIF5 = String.Empty), POLICYHISNCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "POLICY_HISSelectCommandActionPOLICY_HIS", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (POLICY_HISSelectCommandActionPOLICY_HIS)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function PREMIUMTblDataLoad(PREMIUMSCERTYPE3 As String, PREMIUMNBRANCH4 As String, PREMIUMNPRODUCT5 As String, PREMIUMNPOLICY6 As String, PREMIUMNCERTIF7 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NRECEIPT = 0, .NCURRENCY = 0, .NPREMIUM = 0, .DISSUEDAT = Date.MinValue, .DEFFECDATE = Date.MinValue, .DEXPIRDAT = Date.MinValue, .NSTATUS_PRE = 0, .NWAY_PAY = 0, .SSTATUSVA = String.Empty, .DLIMITDATE = Date.MinValue, .NTRATYPEI = 0, .NINTERMED = 0, .NPARTICIP = 0, .NTAXAMOU = 0, .NCOMAMOU = 0, .NTYPE = 0, .NCONTRAT = 0, .SCERTYPE = String.Empty, .NBRANCH = 0, .NPRODUCT = 0, .NDIGIT = 0, .NPAYNUMBE = 0, .NCURRENCYDesc = String.Empty, .NSTATUS_PREDesc = String.Empty, .NWAY_PAYDesc = String.Empty, .SSTATUSVADesc = String.Empty, .NTRATYPEIDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT PREMIUM.NRECEIPT, PREMIUM.NCURRENCY, PREMIUM.NPREMIUM, PREMIUM.DISSUEDAT, PREMIUM.DEFFECDATE, PREMIUM.DEXPIRDAT, PREMIUM.NSTATUS_PRE, PREMIUM.NWAY_PAY, PREMIUM.SSTATUSVA, PREMIUM.DLIMITDATE, PREMIUM.NTRATYPEI, PREMIUM.NINTERMED, PREMIUM.NPARTICIP, PREMIUM.NTAXAMOU, PREMIUM.NCOMAMOU, PREMIUM.NTYPE, PREMIUM.NCONTRAT, PREMIUM.SCERTYPE, PREMIUM.NBRANCH, PREMIUM.NPRODUCT, PREMIUM.NDIGIT, PREMIUM.NPAYNUMBE, TABLE11.SDESCRIPT NCURRENCYDESC, TABLE19.SDESCRIPT NSTATUS_PREDESC, TABLE5002.SDESCRIPT NWAY_PAYDESC, TABLE181.SDESCRIPT SSTATUSVADESC, TABLE24.SDESCRIPT NTRATYPEIDESC FROM PREMIUM PREMIUM LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = PREMIUM.NCURRENCY LEFT JOIN TABLE19 TABLE19 ON TABLE19.NSTATUS_PRE = PREMIUM.NSTATUS_PRE LEFT JOIN TABLE5002 TABLE5002 ON TABLE5002.NWAY_PAY = PREMIUM.NWAY_PAY LEFT JOIN TABLE181 TABLE181 ON TABLE181.SSTATUSVA = PREMIUM.SSTATUSVA LEFT JOIN TABLE24 TABLE24 ON TABLE24.NTRATYPEI = PREMIUM.NTRATYPEI  WHERE PREMIUM.NDIGIT = 0 AND PREMIUM.SSTATUSVA <> '3' AND PREMIUM.SCERTYPE = @:PREMIUMSCERTYPE3 AND PREMIUM.NBRANCH = @:PREMIUMNBRANCH4 AND PREMIUM.NPRODUCT = @:PREMIUMNPRODUCT5 AND PREMIUM.NPOLICY = @:PREMIUMNPOLICY6 AND PREMIUM.NCERTIF = @:PREMIUMNCERTIF7", "PREMIUM", "Linked.LatCombined")
                    .AddParameter("PREMIUMSCERTYPE3", DbType.AnsiStringFixedLength, 0, (PREMIUMSCERTYPE3 = String.Empty), PREMIUMSCERTYPE3)
                    .AddParameter("PREMIUMNBRANCH4", DbType.AnsiStringFixedLength, 0, (PREMIUMNBRANCH4 = String.Empty), PREMIUMNBRANCH4)
                    .AddParameter("PREMIUMNPRODUCT5", DbType.AnsiStringFixedLength, 0, (PREMIUMNPRODUCT5 = String.Empty), PREMIUMNPRODUCT5)
                    .AddParameter("PREMIUMNPOLICY6", DbType.AnsiStringFixedLength, 0, (PREMIUMNPOLICY6 = String.Empty), PREMIUMNPOLICY6)
                    .AddParameter("PREMIUMNCERTIF7", DbType.AnsiStringFixedLength, 0, (PREMIUMNCERTIF7 = String.Empty), PREMIUMNCERTIF7)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NRECEIPT = itemData.NumericValue("NRECEIPT"), .NCURRENCY = itemData.NumericValue("NCURRENCY"), .NPREMIUM = itemData.NumericValue("NPREMIUM"), .DISSUEDAT = itemData.DateTimeValue("DISSUEDAT"), .DEFFECDATE = itemData.DateTimeValue("DEFFECDATE"), .DEXPIRDAT = itemData.DateTimeValue("DEXPIRDAT"), .NSTATUS_PRE = itemData.NumericValue("NSTATUS_PRE"), .NWAY_PAY = itemData.NumericValue("NWAY_PAY"), .SSTATUSVA = itemData.StringValue("SSTATUSVA"), .DLIMITDATE = itemData.DateTimeValue("DLIMITDATE"), .NTRATYPEI = itemData.NumericValue("NTRATYPEI"), .NINTERMED = itemData.NumericValue("NINTERMED"), .NPARTICIP = itemData.NumericValue("NPARTICIP"), .NTAXAMOU = itemData.NumericValue("NTAXAMOU"), .NCOMAMOU = itemData.NumericValue("NCOMAMOU"), .NTYPE = itemData.NumericValue("NTYPE"), .NCONTRAT = itemData.NumericValue("NCONTRAT"), .SCERTYPE = itemData.StringValue("SCERTYPE"), .NBRANCH = itemData.NumericValue("NBRANCH"), .NPRODUCT = itemData.NumericValue("NPRODUCT"), .NDIGIT = itemData.NumericValue("NDIGIT"), .NPAYNUMBE = itemData.NumericValue("NPAYNUMBE"), .NCURRENCYDesc = itemData.StringValue("NCURRENCYDESC"), .NSTATUS_PREDesc = itemData.StringValue("NSTATUS_PREDESC"), .NWAY_PAYDesc = itemData.StringValue("NWAY_PAYDESC"), .SSTATUSVADesc = itemData.StringValue("SSTATUSVADESC"), .NTRATYPEIDesc = itemData.StringValue("NTRATYPEIDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "PREMIUMTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (PREMIUMTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function PREMIUMTblDataCount(PREMIUMSCERTYPE3 As String, PREMIUMNBRANCH4 As String, PREMIUMNPRODUCT5 As String, PREMIUMNPOLICY6 As String, PREMIUMNCERTIF7 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT PREMIUM.NRECEIPT, PREMIUM.NCURRENCY, PREMIUM.NPREMIUM, PREMIUM.DISSUEDAT, PREMIUM.DEFFECDATE, PREMIUM.DEXPIRDAT, PREMIUM.NSTATUS_PRE, PREMIUM.NWAY_PAY, PREMIUM.SSTATUSVA, PREMIUM.DLIMITDATE, PREMIUM.NTRATYPEI, PREMIUM.NINTERMED, PREMIUM.NPARTICIP, PREMIUM.NTAXAMOU, PREMIUM.NCOMAMOU, PREMIUM.NTYPE, PREMIUM.NCONTRAT, PREMIUM.SCERTYPE, PREMIUM.NBRANCH, PREMIUM.NPRODUCT, PREMIUM.NDIGIT, PREMIUM.NPAYNUMBE, TABLE11.SDESCRIPT NCURRENCYDESC, TABLE19.SDESCRIPT NSTATUS_PREDESC, TABLE5002.SDESCRIPT NWAY_PAYDESC, TABLE181.SDESCRIPT SSTATUSVADESC, TABLE24.SDESCRIPT NTRATYPEIDESC FROM PREMIUM PREMIUM LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = PREMIUM.NCURRENCY LEFT JOIN TABLE19 TABLE19 ON TABLE19.NSTATUS_PRE = PREMIUM.NSTATUS_PRE LEFT JOIN TABLE5002 TABLE5002 ON TABLE5002.NWAY_PAY = PREMIUM.NWAY_PAY LEFT JOIN TABLE181 TABLE181 ON TABLE181.SSTATUSVA = PREMIUM.SSTATUSVA LEFT JOIN TABLE24 TABLE24 ON TABLE24.NTRATYPEI = PREMIUM.NTRATYPEI  WHERE PREMIUM.NDIGIT = 0 AND PREMIUM.SSTATUSVA <> '3' AND PREMIUM.SCERTYPE = @:PREMIUMSCERTYPE3 AND PREMIUM.NBRANCH = @:PREMIUMNBRANCH4 AND PREMIUM.NPRODUCT = @:PREMIUMNPRODUCT5 AND PREMIUM.NPOLICY = @:PREMIUMNPOLICY6 AND PREMIUM.NCERTIF = @:PREMIUMNCERTIF7)", "PREMIUM", "Linked.LatCombined")
                    .AddParameter("PREMIUMSCERTYPE3", DbType.AnsiStringFixedLength, 0, (PREMIUMSCERTYPE3 = String.Empty), PREMIUMSCERTYPE3)
                    .AddParameter("PREMIUMNBRANCH4", DbType.AnsiStringFixedLength, 0, (PREMIUMNBRANCH4 = String.Empty), PREMIUMNBRANCH4)
                    .AddParameter("PREMIUMNPRODUCT5", DbType.AnsiStringFixedLength, 0, (PREMIUMNPRODUCT5 = String.Empty), PREMIUMNPRODUCT5)
                    .AddParameter("PREMIUMNPOLICY6", DbType.AnsiStringFixedLength, 0, (PREMIUMNPOLICY6 = String.Empty), PREMIUMNPOLICY6)
                    .AddParameter("PREMIUMNCERTIF7", DbType.AnsiStringFixedLength, 0, (PREMIUMNCERTIF7 = String.Empty), PREMIUMNCERTIF7)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "PREMIUMTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (PREMIUMTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function PREMIUMSelectCommandActionPREMIUM(PREMIUMSCERTYPE3 As String, PREMIUMNBRANCH4 As String, PREMIUMNPRODUCT5 As String, PREMIUMNPOLICY6 As String, PREMIUMNCERTIF7 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(PREMIUM.NRECEIPT) COUNTDATA FROM PREMIUM PREMIUM LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = PREMIUM.NCURRENCY LEFT JOIN TABLE19 TABLE19 ON TABLE19.NSTATUS_PRE = PREMIUM.NSTATUS_PRE LEFT JOIN TABLE5002 TABLE5002 ON TABLE5002.NWAY_PAY = PREMIUM.NWAY_PAY LEFT JOIN TABLE181 TABLE181 ON TABLE181.SSTATUSVA = PREMIUM.SSTATUSVA LEFT JOIN TABLE24 TABLE24 ON TABLE24.NTRATYPEI = PREMIUM.NTRATYPEI  WHERE PREMIUM.NDIGIT = 0 AND PREMIUM.SSTATUSVA <> '3' AND PREMIUM.SCERTYPE = @:PREMIUMSCERTYPE3 AND PREMIUM.NBRANCH = @:PREMIUMNBRANCH4 AND PREMIUM.NPRODUCT = @:PREMIUMNPRODUCT5 AND PREMIUM.NPOLICY = @:PREMIUMNPOLICY6 AND PREMIUM.NCERTIF = @:PREMIUMNCERTIF7", "PREMIUM", "Linked.LatCombined")
                    .AddParameter("PREMIUMSCERTYPE3", DbType.AnsiStringFixedLength, 0, (PREMIUMSCERTYPE3 = String.Empty), PREMIUMSCERTYPE3)
                    .AddParameter("PREMIUMNBRANCH4", DbType.AnsiStringFixedLength, 0, (PREMIUMNBRANCH4 = String.Empty), PREMIUMNBRANCH4)
                    .AddParameter("PREMIUMNPRODUCT5", DbType.AnsiStringFixedLength, 0, (PREMIUMNPRODUCT5 = String.Empty), PREMIUMNPRODUCT5)
                    .AddParameter("PREMIUMNPOLICY6", DbType.AnsiStringFixedLength, 0, (PREMIUMNPOLICY6 = String.Empty), PREMIUMNPOLICY6)
                    .AddParameter("PREMIUMNCERTIF7", DbType.AnsiStringFixedLength, 0, (PREMIUMNCERTIF7 = String.Empty), PREMIUMNCERTIF7)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "PREMIUMSelectCommandActionPREMIUM", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (PREMIUMSelectCommandActionPREMIUM)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function FINANC_PRETblDataLoad(FINANCPRENRECEIPT1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NCONTRAT = 0, .DSTARTDATE = Date.MinValue, .NCURRENCY = 0, .NPREMIUM = 0, .NCURRENCYDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT FINANC_PRE.NCONTRAT, FINANC_PRE.DSTARTDATE, FINANC_PRE.NCURRENCY, FINANC_PRE.NPREMIUM, TABLE11.SDESCRIPT NCURRENCYDESC FROM FINANC_PRE FINANC_PRE LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = FINANC_PRE.NCURRENCY  WHERE FINANC_PRE.NRECEIPT = @:FINANC_PRENRECEIPT1", "FINANC_PRE", "Linked.LatCombined")
                    .AddParameter("FINANC_PRENRECEIPT1", DbType.AnsiStringFixedLength, 0, (FINANCPRENRECEIPT1 = String.Empty), FINANCPRENRECEIPT1)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NCONTRAT = itemData.NumericValue("NCONTRAT"), .DSTARTDATE = itemData.DateTimeValue("DSTARTDATE"), .NCURRENCY = itemData.NumericValue("NCURRENCY"), .NPREMIUM = itemData.NumericValue("NPREMIUM"), .NCURRENCYDesc = itemData.StringValue("NCURRENCYDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "FINANC_PRETblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (FINANC_PRETblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function FINANC_PRETblDataCount(FINANCPRENRECEIPT1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT FINANC_PRE.NCONTRAT, FINANC_PRE.DSTARTDATE, FINANC_PRE.NCURRENCY, FINANC_PRE.NPREMIUM, TABLE11.SDESCRIPT NCURRENCYDESC FROM FINANC_PRE FINANC_PRE LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = FINANC_PRE.NCURRENCY  WHERE FINANC_PRE.NRECEIPT = @:FINANC_PRENRECEIPT1)", "FINANC_PRE", "Linked.LatCombined")
                    .AddParameter("FINANC_PRENRECEIPT1", DbType.AnsiStringFixedLength, 0, (FINANCPRENRECEIPT1 = String.Empty), FINANCPRENRECEIPT1)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "FINANC_PRETblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (FINANC_PRETblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function FINANC_PRESelectCommandActionFINANC_PRE(FINANCPRENRECEIPT1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(FINANC_PRE.NCONTRAT) COUNTDATA FROM FINANC_PRE FINANC_PRE LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = FINANC_PRE.NCURRENCY  WHERE FINANC_PRE.NRECEIPT = @:FINANC_PRENRECEIPT1", "FINANC_PRE", "Linked.LatCombined")
                    .AddParameter("FINANC_PRENRECEIPT1", DbType.AnsiStringFixedLength, 0, (FINANCPRENRECEIPT1 = String.Empty), FINANCPRENRECEIPT1)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "FINANC_PRESelectCommandActionFINANC_PRE", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (FINANC_PRESelectCommandActionFINANC_PRE)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function FINANC_DRATblDataLoad(FINANCDRANCONTRAT1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NDRAFT = 0, .NAMOUNT = 0, .NSTAT_DRAFT = 0, .NSTAT_DRAFTDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT FINANC_DRA.NDRAFT, FINANC_DRA.NAMOUNT, FINANC_DRA.NSTAT_DRAFT, TABLE253.SDESCRIPT NSTAT_DRAFTDESC FROM FINANC_DRA FINANC_DRA LEFT JOIN TABLE253 TABLE253 ON TABLE253.NSTAT_DRAFT = FINANC_DRA.NSTAT_DRAFT  WHERE FINANC_DRA.NCONTRAT = @:FINANC_DRANCONTRAT1", "FINANC_DRA", "Linked.LatCombined")
                    .AddParameter("FINANC_DRANCONTRAT1", DbType.AnsiStringFixedLength, 0, (FINANCDRANCONTRAT1 = String.Empty), FINANCDRANCONTRAT1)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NDRAFT = itemData.NumericValue("NDRAFT"), .NAMOUNT = itemData.NumericValue("NAMOUNT"), .NSTAT_DRAFT = itemData.NumericValue("NSTAT_DRAFT"), .NSTAT_DRAFTDesc = itemData.StringValue("NSTAT_DRAFTDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "FINANC_DRATblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (FINANC_DRATblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function FINANC_DRATblDataCount(FINANCDRANCONTRAT1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT FINANC_DRA.NDRAFT, FINANC_DRA.NAMOUNT, FINANC_DRA.NSTAT_DRAFT, TABLE253.SDESCRIPT NSTAT_DRAFTDESC FROM FINANC_DRA FINANC_DRA LEFT JOIN TABLE253 TABLE253 ON TABLE253.NSTAT_DRAFT = FINANC_DRA.NSTAT_DRAFT  WHERE FINANC_DRA.NCONTRAT = @:FINANC_DRANCONTRAT1)", "FINANC_DRA", "Linked.LatCombined")
                    .AddParameter("FINANC_DRANCONTRAT1", DbType.AnsiStringFixedLength, 0, (FINANCDRANCONTRAT1 = String.Empty), FINANCDRANCONTRAT1)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "FINANC_DRATblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (FINANC_DRATblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function FINANC_DRASelectCommandActionFINANC_DRA(FINANCDRANCONTRAT1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(FINANC_DRA.NDRAFT) COUNTDATA FROM FINANC_DRA FINANC_DRA LEFT JOIN TABLE253 TABLE253 ON TABLE253.NSTAT_DRAFT = FINANC_DRA.NSTAT_DRAFT  WHERE FINANC_DRA.NCONTRAT = @:FINANC_DRANCONTRAT1", "FINANC_DRA", "Linked.LatCombined")
                    .AddParameter("FINANC_DRANCONTRAT1", DbType.AnsiStringFixedLength, 0, (FINANCDRANCONTRAT1 = String.Empty), FINANCDRANCONTRAT1)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "FINANC_DRASelectCommandActionFINANC_DRA", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (FINANC_DRASelectCommandActionFINANC_DRA)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function PREMIUM_CETblDataLoad(PREMIUMCESCERTYPE1 As String, PREMIUMCENBRANCH2 As String, PREMIUMCENPRODUCT3 As String, PREMIUMCENRECEIPT4 As String, PREMIUMCENDIGIT5 As String, PREMIUMCENPAYNUMBE6 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NCERTIF = 0, .NID_BILL = 0, .STYPE_DETAI = String.Empty, .NCODE_DETAI = 0, .NBILL_ITEM = 0, .NPREMIUM = 0, .NBILL_ITEMDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT PREMIUM_CE.NCERTIF, PREMIUM_CE.NID_BILL, PREMIUM_CE.STYPE_DETAI, PREMIUM_CE.NCODE_DETAI, PREMIUM_CE.NBILL_ITEM, PREMIUM_CE.NPREMIUM, TAB_BILL_I.SSHORT_DES NBILL_ITEMDESC FROM PREMIUM_CE PREMIUM_CE LEFT JOIN TAB_BILL_I TAB_BILL_I ON TAB_BILL_I.NBRANCH = PREMIUM_CE.NBRANCH  AND TAB_BILL_I.NPRODUCT = PREMIUM_CE.NPRODUCT  AND TAB_BILL_I.NBILL_ITEM = PREMIUM_CE.NBILL_ITEM  WHERE PREMIUM_CE.SCERTYPE = @:PREMIUM_CESCERTYPE1 AND PREMIUM_CE.NBRANCH = @:PREMIUM_CENBRANCH2 AND PREMIUM_CE.NPRODUCT = @:PREMIUM_CENPRODUCT3 AND PREMIUM_CE.NRECEIPT = @:PREMIUM_CENRECEIPT4 AND PREMIUM_CE.NDIGIT = @:PREMIUM_CENDIGIT5 AND PREMIUM_CE.NPAYNUMBE = @:PREMIUM_CENPAYNUMBE6", "PREMIUM_CE", "Linked.LatCombined")
                    .AddParameter("PREMIUM_CESCERTYPE1", DbType.AnsiStringFixedLength, 0, (PREMIUMCESCERTYPE1 = String.Empty), PREMIUMCESCERTYPE1)
                    .AddParameter("PREMIUM_CENBRANCH2", DbType.AnsiStringFixedLength, 0, (PREMIUMCENBRANCH2 = String.Empty), PREMIUMCENBRANCH2)
                    .AddParameter("PREMIUM_CENPRODUCT3", DbType.AnsiStringFixedLength, 0, (PREMIUMCENPRODUCT3 = String.Empty), PREMIUMCENPRODUCT3)
                    .AddParameter("PREMIUM_CENRECEIPT4", DbType.AnsiStringFixedLength, 0, (PREMIUMCENRECEIPT4 = String.Empty), PREMIUMCENRECEIPT4)
                    .AddParameter("PREMIUM_CENDIGIT5", DbType.AnsiStringFixedLength, 0, (PREMIUMCENDIGIT5 = String.Empty), PREMIUMCENDIGIT5)
                    .AddParameter("PREMIUM_CENPAYNUMBE6", DbType.AnsiStringFixedLength, 0, (PREMIUMCENPAYNUMBE6 = String.Empty), PREMIUMCENPAYNUMBE6)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NCERTIF = itemData.NumericValue("NCERTIF"), .NID_BILL = itemData.NumericValue("NID_BILL"), .STYPE_DETAI = itemData.StringValue("STYPE_DETAI"), .NCODE_DETAI = itemData.NumericValue("NCODE_DETAI"), .NBILL_ITEM = itemData.NumericValue("NBILL_ITEM"), .NPREMIUM = itemData.NumericValue("NPREMIUM"), .NBILL_ITEMDesc = itemData.StringValue("NBILL_ITEMDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "PREMIUM_CETblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (PREMIUM_CETblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function PREMIUM_CETblDataCount(PREMIUMCESCERTYPE1 As String, PREMIUMCENBRANCH2 As String, PREMIUMCENPRODUCT3 As String, PREMIUMCENRECEIPT4 As String, PREMIUMCENDIGIT5 As String, PREMIUMCENPAYNUMBE6 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT PREMIUM_CE.NCERTIF, PREMIUM_CE.NID_BILL, PREMIUM_CE.STYPE_DETAI, PREMIUM_CE.NCODE_DETAI, PREMIUM_CE.NBILL_ITEM, PREMIUM_CE.NPREMIUM, TAB_BILL_I.SSHORT_DES NBILL_ITEMDESC FROM PREMIUM_CE PREMIUM_CE LEFT JOIN TAB_BILL_I TAB_BILL_I ON TAB_BILL_I.NBRANCH = PREMIUM_CE.NBRANCH  AND TAB_BILL_I.NPRODUCT = PREMIUM_CE.NPRODUCT  AND TAB_BILL_I.NBILL_ITEM = PREMIUM_CE.NBILL_ITEM  WHERE PREMIUM_CE.SCERTYPE = @:PREMIUM_CESCERTYPE1 AND PREMIUM_CE.NBRANCH = @:PREMIUM_CENBRANCH2 AND PREMIUM_CE.NPRODUCT = @:PREMIUM_CENPRODUCT3 AND PREMIUM_CE.NRECEIPT = @:PREMIUM_CENRECEIPT4 AND PREMIUM_CE.NDIGIT = @:PREMIUM_CENDIGIT5 AND PREMIUM_CE.NPAYNUMBE = @:PREMIUM_CENPAYNUMBE6)", "PREMIUM_CE", "Linked.LatCombined")
                    .AddParameter("PREMIUM_CESCERTYPE1", DbType.AnsiStringFixedLength, 0, (PREMIUMCESCERTYPE1 = String.Empty), PREMIUMCESCERTYPE1)
                    .AddParameter("PREMIUM_CENBRANCH2", DbType.AnsiStringFixedLength, 0, (PREMIUMCENBRANCH2 = String.Empty), PREMIUMCENBRANCH2)
                    .AddParameter("PREMIUM_CENPRODUCT3", DbType.AnsiStringFixedLength, 0, (PREMIUMCENPRODUCT3 = String.Empty), PREMIUMCENPRODUCT3)
                    .AddParameter("PREMIUM_CENRECEIPT4", DbType.AnsiStringFixedLength, 0, (PREMIUMCENRECEIPT4 = String.Empty), PREMIUMCENRECEIPT4)
                    .AddParameter("PREMIUM_CENDIGIT5", DbType.AnsiStringFixedLength, 0, (PREMIUMCENDIGIT5 = String.Empty), PREMIUMCENDIGIT5)
                    .AddParameter("PREMIUM_CENPAYNUMBE6", DbType.AnsiStringFixedLength, 0, (PREMIUMCENPAYNUMBE6 = String.Empty), PREMIUMCENPAYNUMBE6)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "PREMIUM_CETblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (PREMIUM_CETblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function PREMIUM_CESelectCommandActionPREMIUM_CE(PREMIUMCESCERTYPE1 As String, PREMIUMCENBRANCH2 As String, PREMIUMCENPRODUCT3 As String, PREMIUMCENRECEIPT4 As String, PREMIUMCENDIGIT5 As String, PREMIUMCENPAYNUMBE6 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(PREMIUM_CE.NCERTIF) COUNTDATA FROM PREMIUM_CE PREMIUM_CE LEFT JOIN TAB_BILL_I TAB_BILL_I ON TAB_BILL_I.NBRANCH = PREMIUM_CE.NBRANCH  AND TAB_BILL_I.NPRODUCT = PREMIUM_CE.NPRODUCT  AND TAB_BILL_I.NBILL_ITEM = PREMIUM_CE.NBILL_ITEM  WHERE PREMIUM_CE.SCERTYPE = @:PREMIUM_CESCERTYPE1 AND PREMIUM_CE.NBRANCH = @:PREMIUM_CENBRANCH2 AND PREMIUM_CE.NPRODUCT = @:PREMIUM_CENPRODUCT3 AND PREMIUM_CE.NRECEIPT = @:PREMIUM_CENRECEIPT4 AND PREMIUM_CE.NDIGIT = @:PREMIUM_CENDIGIT5 AND PREMIUM_CE.NPAYNUMBE = @:PREMIUM_CENPAYNUMBE6", "PREMIUM_CE", "Linked.LatCombined")
                    .AddParameter("PREMIUM_CESCERTYPE1", DbType.AnsiStringFixedLength, 0, (PREMIUMCESCERTYPE1 = String.Empty), PREMIUMCESCERTYPE1)
                    .AddParameter("PREMIUM_CENBRANCH2", DbType.AnsiStringFixedLength, 0, (PREMIUMCENBRANCH2 = String.Empty), PREMIUMCENBRANCH2)
                    .AddParameter("PREMIUM_CENPRODUCT3", DbType.AnsiStringFixedLength, 0, (PREMIUMCENPRODUCT3 = String.Empty), PREMIUMCENPRODUCT3)
                    .AddParameter("PREMIUM_CENRECEIPT4", DbType.AnsiStringFixedLength, 0, (PREMIUMCENRECEIPT4 = String.Empty), PREMIUMCENRECEIPT4)
                    .AddParameter("PREMIUM_CENDIGIT5", DbType.AnsiStringFixedLength, 0, (PREMIUMCENDIGIT5 = String.Empty), PREMIUMCENDIGIT5)
                    .AddParameter("PREMIUM_CENPAYNUMBE6", DbType.AnsiStringFixedLength, 0, (PREMIUMCENPAYNUMBE6 = String.Empty), PREMIUMCENPAYNUMBE6)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "PREMIUM_CESelectCommandActionPREMIUM_CE", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (PREMIUM_CESelectCommandActionPREMIUM_CE)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function CLAIMTblDataLoad(CLAIMSCERTYPE1 As String, CLAIMNBRANCH2 As String, CLAIMNPRODUCT3 As String, CLAIMNPOLICY4 As String, CLAIMNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NCAUSECOD = 0, .SCLAIMTYP = String.Empty, .SCLIENT2 = String.Empty, .DDECLADAT = Date.MinValue, .DOCCURDAT = Date.MinValue, .DLIMIT_PAY = Date.MinValue, .NLOC_RESERV = 0, .NLOC_OUT_AM = 0, .NLOC_PAY_AM = 0, .NLOC_REC_AM = 0, .NLOC_COS_RE = 0, .NTAX_AMO = 0, .SSTACLAIM = String.Empty, .NNULLCODE = 0, .NUNACCODE = 0, .SCLAIMTYPDesc = String.Empty, .SCLIENT2Desc = String.Empty, .SSTACLAIMDesc = String.Empty, .NNULLCODEDesc = String.Empty, .NUNACCODEDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT CLAIM.NCAUSECOD, CLAIM.SCLAIMTYP, CLAIM.SCLIENT2, CLAIM.DDECLADAT, CLAIM.DOCCURDAT, CLAIM.DLIMIT_PAY, CLAIM.NLOC_RESERV, CLAIM.NLOC_OUT_AM, CLAIM.NLOC_PAY_AM, CLAIM.NLOC_REC_AM, CLAIM.NLOC_COS_RE, CLAIM.NTAX_AMO, CLAIM.SSTACLAIM, CLAIM.NNULLCODE, CLAIM.NUNACCODE, TABLE132.SDESCRIPT SCLAIMTYPDESC, CLIENT.SCLIENAME SCLIENT2DESC, TABLE135.SDESCRIPT SSTACLAIMDESC, TABLE136.SDESCRIPT NNULLCODEDESC, TABLE133.SDESCRIPT NUNACCODEDESC FROM CLAIM CLAIM LEFT JOIN TABLE132 TABLE132 ON TABLE132.SCLAIMTYP = CLAIM.SCLAIMTYP LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = CLAIM.SCLIENT LEFT JOIN TABLE135 TABLE135 ON TABLE135.SSTACLAIM = CLAIM.SSTACLAIM LEFT JOIN TABLE136 TABLE136 ON TABLE136.NNULLCODE = CLAIM.NNULLCODE LEFT JOIN TABLE133 TABLE133 ON TABLE133.NUNACCODE = CLAIM.NUNACCODE  WHERE CLAIM.SCERTYPE = @:CLAIMSCERTYPE1 AND CLAIM.NBRANCH = @:CLAIMNBRANCH2 AND CLAIM.NPRODUCT = @:CLAIMNPRODUCT3 AND CLAIM.NPOLICY = @:CLAIMNPOLICY4 AND CLAIM.NCERTIF = @:CLAIMNCERTIF5", "CLAIM", "Linked.LatCombined")
                    .AddParameter("CLAIMSCERTYPE1", DbType.AnsiStringFixedLength, 0, (CLAIMSCERTYPE1 = String.Empty), CLAIMSCERTYPE1)
                    .AddParameter("CLAIMNBRANCH2", DbType.AnsiStringFixedLength, 0, (CLAIMNBRANCH2 = String.Empty), CLAIMNBRANCH2)
                    .AddParameter("CLAIMNPRODUCT3", DbType.AnsiStringFixedLength, 0, (CLAIMNPRODUCT3 = String.Empty), CLAIMNPRODUCT3)
                    .AddParameter("CLAIMNPOLICY4", DbType.AnsiStringFixedLength, 0, (CLAIMNPOLICY4 = String.Empty), CLAIMNPOLICY4)
                    .AddParameter("CLAIMNCERTIF5", DbType.AnsiStringFixedLength, 0, (CLAIMNCERTIF5 = String.Empty), CLAIMNCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NCAUSECOD = itemData.NumericValue("NCAUSECOD"), .SCLAIMTYP = itemData.StringValue("SCLAIMTYP"), .SCLIENT2 = itemData.StringValue("SCLIENT2"), .DDECLADAT = itemData.DateTimeValue("DDECLADAT"), .DOCCURDAT = itemData.DateTimeValue("DOCCURDAT"), .DLIMIT_PAY = itemData.DateTimeValue("DLIMIT_PAY"), .NLOC_RESERV = itemData.NumericValue("NLOC_RESERV"), .NLOC_OUT_AM = itemData.NumericValue("NLOC_OUT_AM"), .NLOC_PAY_AM = itemData.NumericValue("NLOC_PAY_AM"), .NLOC_REC_AM = itemData.NumericValue("NLOC_REC_AM"), .NLOC_COS_RE = itemData.NumericValue("NLOC_COS_RE"), .NTAX_AMO = itemData.NumericValue("NTAX_AMO"), .SSTACLAIM = itemData.StringValue("SSTACLAIM"), .NNULLCODE = itemData.NumericValue("NNULLCODE"), .NUNACCODE = itemData.NumericValue("NUNACCODE"), .SCLAIMTYPDesc = itemData.StringValue("SCLAIMTYPDESC"), .SCLIENT2Desc = itemData.StringValue("SCLIENT2DESC"), .SSTACLAIMDesc = itemData.StringValue("SSTACLAIMDESC"), .NNULLCODEDesc = itemData.StringValue("NNULLCODEDESC"), .NUNACCODEDesc = itemData.StringValue("NUNACCODEDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "CLAIMTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CLAIMTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function CLAIMTblDataCount(CLAIMSCERTYPE1 As String, CLAIMNBRANCH2 As String, CLAIMNPRODUCT3 As String, CLAIMNPOLICY4 As String, CLAIMNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT CLAIM.NCAUSECOD, CLAIM.SCLAIMTYP, CLAIM.SCLIENT2, CLAIM.DDECLADAT, CLAIM.DOCCURDAT, CLAIM.DLIMIT_PAY, CLAIM.NLOC_RESERV, CLAIM.NLOC_OUT_AM, CLAIM.NLOC_PAY_AM, CLAIM.NLOC_REC_AM, CLAIM.NLOC_COS_RE, CLAIM.NTAX_AMO, CLAIM.SSTACLAIM, CLAIM.NNULLCODE, CLAIM.NUNACCODE, TABLE132.SDESCRIPT SCLAIMTYPDESC, CLIENT.SCLIENAME SCLIENT2DESC, TABLE135.SDESCRIPT SSTACLAIMDESC, TABLE136.SDESCRIPT NNULLCODEDESC, TABLE133.SDESCRIPT NUNACCODEDESC FROM CLAIM CLAIM LEFT JOIN TABLE132 TABLE132 ON TABLE132.SCLAIMTYP = CLAIM.SCLAIMTYP LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = CLAIM.SCLIENT LEFT JOIN TABLE135 TABLE135 ON TABLE135.SSTACLAIM = CLAIM.SSTACLAIM LEFT JOIN TABLE136 TABLE136 ON TABLE136.NNULLCODE = CLAIM.NNULLCODE LEFT JOIN TABLE133 TABLE133 ON TABLE133.NUNACCODE = CLAIM.NUNACCODE  WHERE CLAIM.SCERTYPE = @:CLAIMSCERTYPE1 AND CLAIM.NBRANCH = @:CLAIMNBRANCH2 AND CLAIM.NPRODUCT = @:CLAIMNPRODUCT3 AND CLAIM.NPOLICY = @:CLAIMNPOLICY4 AND CLAIM.NCERTIF = @:CLAIMNCERTIF5)", "CLAIM", "Linked.LatCombined")
                    .AddParameter("CLAIMSCERTYPE1", DbType.AnsiStringFixedLength, 0, (CLAIMSCERTYPE1 = String.Empty), CLAIMSCERTYPE1)
                    .AddParameter("CLAIMNBRANCH2", DbType.AnsiStringFixedLength, 0, (CLAIMNBRANCH2 = String.Empty), CLAIMNBRANCH2)
                    .AddParameter("CLAIMNPRODUCT3", DbType.AnsiStringFixedLength, 0, (CLAIMNPRODUCT3 = String.Empty), CLAIMNPRODUCT3)
                    .AddParameter("CLAIMNPOLICY4", DbType.AnsiStringFixedLength, 0, (CLAIMNPOLICY4 = String.Empty), CLAIMNPOLICY4)
                    .AddParameter("CLAIMNCERTIF5", DbType.AnsiStringFixedLength, 0, (CLAIMNCERTIF5 = String.Empty), CLAIMNCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "CLAIMTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CLAIMTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function CLAIMSelectCommandActionCLAIM(CLAIMSCERTYPE1 As String, CLAIMNBRANCH2 As String, CLAIMNPRODUCT3 As String, CLAIMNPOLICY4 As String, CLAIMNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(CLAIM.NCAUSECOD) COUNTDATA FROM CLAIM CLAIM LEFT JOIN TABLE132 TABLE132 ON TABLE132.SCLAIMTYP = CLAIM.SCLAIMTYP LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = CLAIM.SCLIENT LEFT JOIN TABLE135 TABLE135 ON TABLE135.SSTACLAIM = CLAIM.SSTACLAIM LEFT JOIN TABLE136 TABLE136 ON TABLE136.NNULLCODE = CLAIM.NNULLCODE LEFT JOIN TABLE133 TABLE133 ON TABLE133.NUNACCODE = CLAIM.NUNACCODE  WHERE CLAIM.SCERTYPE = @:CLAIMSCERTYPE1 AND CLAIM.NBRANCH = @:CLAIMNBRANCH2 AND CLAIM.NPRODUCT = @:CLAIMNPRODUCT3 AND CLAIM.NPOLICY = @:CLAIMNPOLICY4 AND CLAIM.NCERTIF = @:CLAIMNCERTIF5", "CLAIM", "Linked.LatCombined")
                    .AddParameter("CLAIMSCERTYPE1", DbType.AnsiStringFixedLength, 0, (CLAIMSCERTYPE1 = String.Empty), CLAIMSCERTYPE1)
                    .AddParameter("CLAIMNBRANCH2", DbType.AnsiStringFixedLength, 0, (CLAIMNBRANCH2 = String.Empty), CLAIMNBRANCH2)
                    .AddParameter("CLAIMNPRODUCT3", DbType.AnsiStringFixedLength, 0, (CLAIMNPRODUCT3 = String.Empty), CLAIMNPRODUCT3)
                    .AddParameter("CLAIMNPOLICY4", DbType.AnsiStringFixedLength, 0, (CLAIMNPOLICY4 = String.Empty), CLAIMNPOLICY4)
                    .AddParameter("CLAIMNCERTIF5", DbType.AnsiStringFixedLength, 0, (CLAIMNCERTIF5 = String.Empty), CLAIMNCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "CLAIMSelectCommandActionCLAIM", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CLAIMSelectCommandActionCLAIM)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function CURR_ACCTblDataLoad(CURRACCSCERTYPE2 As String, CURRACCNBRANCH3 As String, CURRACCNPRODUCT4 As String, CURRACCNPOLICY5 As String, CURRACCNCERTIF6 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NTYP_ACCO = 0, .NINSUR_AREA = 0, .STYPE_ACC = String.Empty, .DEFFECDATE = Date.MinValue, .NCURRENCY = 0, .NDEBIT = 0, .NCREDIT = 0, .NBALANCE = 0, .NLED_COMPAN = 0, .SACCOUNT = String.Empty, .SAUX_ACCOUN = String.Empty, .SSTATREGT = String.Empty, .NTYP_ACCODesc = String.Empty, .NINSUR_AREADesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT CURR_ACC.NTYP_ACCO, CURR_ACC.NINSUR_AREA, CURR_ACC.STYPE_ACC, CURR_ACC.DEFFECDATE, CURR_ACC.NCURRENCY, CURR_ACC.NDEBIT, CURR_ACC.NCREDIT, CURR_ACC.NBALANCE, CURR_ACC.NLED_COMPAN, CURR_ACC.SACCOUNT, CURR_ACC.SAUX_ACCOUN, CURR_ACC.SSTATREGT, TABLE400.SDESCRIPT NTYP_ACCODESC, TABLE5001.SDESCRIPT NINSUR_AREADESC FROM CURR_ACC CURR_ACC LEFT JOIN TABLE400 TABLE400 ON TABLE400.NTYP_ACCO = CURR_ACC.NTYP_ACCO LEFT JOIN TABLE5001 TABLE5001 ON TABLE5001.NINSUR_AREA = CURR_ACC.NINSUR_AREA  WHERE CURR_ACC.SSTATREGT = '1' AND CURR_ACC.SCERTYPE = @:CURR_ACCSCERTYPE2 AND CURR_ACC.NBRANCH = @:CURR_ACCNBRANCH3 AND CURR_ACC.NPRODUCT = @:CURR_ACCNPRODUCT4 AND CURR_ACC.NPOLICY = @:CURR_ACCNPOLICY5 AND CURR_ACC.NCERTIF = @:CURR_ACCNCERTIF6", "CURR_ACC", "Linked.LatCombined")
                    .AddParameter("CURR_ACCSCERTYPE2", DbType.AnsiStringFixedLength, 0, (CURRACCSCERTYPE2 = String.Empty), CURRACCSCERTYPE2)
                    .AddParameter("CURR_ACCNBRANCH3", DbType.AnsiStringFixedLength, 0, (CURRACCNBRANCH3 = String.Empty), CURRACCNBRANCH3)
                    .AddParameter("CURR_ACCNPRODUCT4", DbType.AnsiStringFixedLength, 0, (CURRACCNPRODUCT4 = String.Empty), CURRACCNPRODUCT4)
                    .AddParameter("CURR_ACCNPOLICY5", DbType.AnsiStringFixedLength, 0, (CURRACCNPOLICY5 = String.Empty), CURRACCNPOLICY5)
                    .AddParameter("CURR_ACCNCERTIF6", DbType.AnsiStringFixedLength, 0, (CURRACCNCERTIF6 = String.Empty), CURRACCNCERTIF6)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NTYP_ACCO = itemData.NumericValue("NTYP_ACCO"), .NINSUR_AREA = itemData.NumericValue("NINSUR_AREA"), .STYPE_ACC = itemData.StringValue("STYPE_ACC"), .DEFFECDATE = itemData.DateTimeValue("DEFFECDATE"), .NCURRENCY = itemData.NumericValue("NCURRENCY"), .NDEBIT = itemData.NumericValue("NDEBIT"), .NCREDIT = itemData.NumericValue("NCREDIT"), .NBALANCE = itemData.NumericValue("NBALANCE"), .NLED_COMPAN = itemData.NumericValue("NLED_COMPAN"), .SACCOUNT = itemData.StringValue("SACCOUNT"), .SAUX_ACCOUN = itemData.StringValue("SAUX_ACCOUN"), .SSTATREGT = itemData.StringValue("SSTATREGT"), .NTYP_ACCODesc = itemData.StringValue("NTYP_ACCODESC"), .NINSUR_AREADesc = itemData.StringValue("NINSUR_AREADESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "CURR_ACCTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CURR_ACCTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function CURR_ACCTblDataCount(CURRACCSCERTYPE2 As String, CURRACCNBRANCH3 As String, CURRACCNPRODUCT4 As String, CURRACCNPOLICY5 As String, CURRACCNCERTIF6 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT CURR_ACC.NTYP_ACCO, CURR_ACC.NINSUR_AREA, CURR_ACC.STYPE_ACC, CURR_ACC.DEFFECDATE, CURR_ACC.NCURRENCY, CURR_ACC.NDEBIT, CURR_ACC.NCREDIT, CURR_ACC.NBALANCE, CURR_ACC.NLED_COMPAN, CURR_ACC.SACCOUNT, CURR_ACC.SAUX_ACCOUN, CURR_ACC.SSTATREGT, TABLE400.SDESCRIPT NTYP_ACCODESC, TABLE5001.SDESCRIPT NINSUR_AREADESC FROM CURR_ACC CURR_ACC LEFT JOIN TABLE400 TABLE400 ON TABLE400.NTYP_ACCO = CURR_ACC.NTYP_ACCO LEFT JOIN TABLE5001 TABLE5001 ON TABLE5001.NINSUR_AREA = CURR_ACC.NINSUR_AREA  WHERE CURR_ACC.SSTATREGT = '1' AND CURR_ACC.SCERTYPE = @:CURR_ACCSCERTYPE2 AND CURR_ACC.NBRANCH = @:CURR_ACCNBRANCH3 AND CURR_ACC.NPRODUCT = @:CURR_ACCNPRODUCT4 AND CURR_ACC.NPOLICY = @:CURR_ACCNPOLICY5 AND CURR_ACC.NCERTIF = @:CURR_ACCNCERTIF6)", "CURR_ACC", "Linked.LatCombined")
                    .AddParameter("CURR_ACCSCERTYPE2", DbType.AnsiStringFixedLength, 0, (CURRACCSCERTYPE2 = String.Empty), CURRACCSCERTYPE2)
                    .AddParameter("CURR_ACCNBRANCH3", DbType.AnsiStringFixedLength, 0, (CURRACCNBRANCH3 = String.Empty), CURRACCNBRANCH3)
                    .AddParameter("CURR_ACCNPRODUCT4", DbType.AnsiStringFixedLength, 0, (CURRACCNPRODUCT4 = String.Empty), CURRACCNPRODUCT4)
                    .AddParameter("CURR_ACCNPOLICY5", DbType.AnsiStringFixedLength, 0, (CURRACCNPOLICY5 = String.Empty), CURRACCNPOLICY5)
                    .AddParameter("CURR_ACCNCERTIF6", DbType.AnsiStringFixedLength, 0, (CURRACCNCERTIF6 = String.Empty), CURRACCNCERTIF6)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "CURR_ACCTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CURR_ACCTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function CURR_ACCSelectCommandActionCURR_ACC(CURRACCSCERTYPE2 As String, CURRACCNBRANCH3 As String, CURRACCNPRODUCT4 As String, CURRACCNPOLICY5 As String, CURRACCNCERTIF6 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(CURR_ACC.NTYP_ACCO) COUNTDATA FROM CURR_ACC CURR_ACC LEFT JOIN TABLE400 TABLE400 ON TABLE400.NTYP_ACCO = CURR_ACC.NTYP_ACCO LEFT JOIN TABLE5001 TABLE5001 ON TABLE5001.NINSUR_AREA = CURR_ACC.NINSUR_AREA  WHERE CURR_ACC.SSTATREGT = '1' AND CURR_ACC.SCERTYPE = @:CURR_ACCSCERTYPE2 AND CURR_ACC.NBRANCH = @:CURR_ACCNBRANCH3 AND CURR_ACC.NPRODUCT = @:CURR_ACCNPRODUCT4 AND CURR_ACC.NPOLICY = @:CURR_ACCNPOLICY5 AND CURR_ACC.NCERTIF = @:CURR_ACCNCERTIF6", "CURR_ACC", "Linked.LatCombined")
                    .AddParameter("CURR_ACCSCERTYPE2", DbType.AnsiStringFixedLength, 0, (CURRACCSCERTYPE2 = String.Empty), CURRACCSCERTYPE2)
                    .AddParameter("CURR_ACCNBRANCH3", DbType.AnsiStringFixedLength, 0, (CURRACCNBRANCH3 = String.Empty), CURRACCNBRANCH3)
                    .AddParameter("CURR_ACCNPRODUCT4", DbType.AnsiStringFixedLength, 0, (CURRACCNPRODUCT4 = String.Empty), CURRACCNPRODUCT4)
                    .AddParameter("CURR_ACCNPOLICY5", DbType.AnsiStringFixedLength, 0, (CURRACCNPOLICY5 = String.Empty), CURRACCNPOLICY5)
                    .AddParameter("CURR_ACCNCERTIF6", DbType.AnsiStringFixedLength, 0, (CURRACCNCERTIF6 = String.Empty), CURRACCNCERTIF6)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "CURR_ACCSelectCommandActionCURR_ACC", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CURR_ACCSelectCommandActionCURR_ACC)", ex.Message)
                End With
            End Try

            Return resultData
        End Function


#End Region

#Region "Lookups Web Methods"


        <WebMethod()>
        Public Shared Function LookUpForREINSURAN2NCOMPANY(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  COMPANY.NCOMPANY, TRIM(CLIENT.SCLIENAME) SCLIENAME FROM COMPANY COMPANY JOIN CLIENT CLIENT ON CLIENT.SCLIENT = COMPANY.SCLIENT    WHERE NOT SCLIENAME IS NULL ORDER BY SCLIENAME", ""), 
                                            "COMPANY", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NCOMPANY"),
                                                                                            .Description = item.StringValue("SCLIENAME")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5ConsultadePoliza", "LookUpForREINSURAN2NCOMPANY", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForREINSURAN2NCOMPANY")
                End With
            End Try
            Return result
        End Function

#End Region

#Region "Form Actions"


#End Region





#Region "Common Utilities"

        Private Shared Sub SetDefaultValuesFromQueryString(formData As EntryData)
            If HttpContext.Current.Request.QueryString("PolicyID").IsNotEmpty Then
                formData.PolicyID = HttpContext.Current.Request.QueryString("PolicyID")
            End If
            If HttpContext.Current.Request.QueryString("RecordEffectiveDate").IsNotEmpty Then
                formData.RecordEffectiveDate = HttpContext.Current.Request.QueryString("RecordEffectiveDate")
            End If

        End Sub	


#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property PolicyID As System.Int64
            <DataMember()> Public Property RecordEffectiveDate As DateTime
            <DataMember()> Public Property RootItemsNBRANCH As System.Int32
            <DataMember()> Public Property RootItemsNPRODUCT As System.Int32
            <DataMember()> Public Property RootItemsNPOLICY As System.Int32
            <DataMember()> Public Property RootItemsNCERTIF As System.Int32
            <DataMember()> Public Property RootItemsNCAPITAL As System.Int32
            <DataMember()> Public Property RootItemsNPAYFREQ As System.Int32
            <DataMember()> Public Property RootItemsSSTATUSVA As System.String
            <DataMember()> Public Property RootItemsDSTARTDATE As System.DateTime
            <DataMember()> Public Property RootItemsNWAIT_CODE As System.Int32
            <DataMember()> Public Property RootItemsDISSUEDAT As System.DateTime
            <DataMember()> Public Property RootItemsSRENEWAL As System.String
            <DataMember()> Public Property RootItemsDNULLDATE As System.DateTime
            <DataMember()> Public Property RootItemsNNULLCODE As System.Int32
            <DataMember()> Public Property RootItemsDEXPIRDAT As System.DateTime
            <DataMember()> Public Property RootItemsDCHANGDAT As System.DateTime
            <DataMember()> Public Property RootItemsSCERTYPE As System.String
            <DataMember()> Public Property RootItemsNDIGIT As System.Int32
            <DataMember()> Public Property RootItemsDIR_DEBITNBANKEXT As System.Int32
            <DataMember()> Public Property RootItemsDIR_DEBITSCREDI_CARD As System.String
            <DataMember()> Public Property RootItemsDIR_DEBITNTYP_CRECARD As System.Int32
            <DataMember()> Public Property RootItemsDIR_DEBITDCARDEXPIR As System.DateTime
            <DataMember()> Public Property DIR_DEBIT_DIR_DEBIT As List(Of DIR_DEBIT_DIR_DEBITItem)
            <DataMember()> Public Property RootItemsROLESNROLE As System.Int32
            <DataMember()> Public Property RootItemsROLESSCLIENT As System.String
            <DataMember()> Public Property RootItemsROLESNSTATUSROL As System.Int32
            <DataMember()> Public Property RootItemsROLESSSEXCLIEN As System.String
            <DataMember()> Public Property RootItemsROLESDBIRTHDATE As System.DateTime
            <DataMember()> Public Property RootItemsROLESNTYPERISK As System.Int32
            <DataMember()> Public Property RootItemsROLESNRATING As System.Int32
            <DataMember()> Public Property RootItemsROLESDEFFECDATE As System.DateTime
            <DataMember()> Public Property ROLES_ROLES As List(Of ROLES_ROLESItem)
            <DataMember()> Public Property RootItemsCURREN_POLNCURRENCY As System.Int32
            <DataMember()> Public Property CURREN_POL_CURREN_POL As List(Of CURREN_POL_CURREN_POLItem)
            <DataMember()> Public Property RootItemsSUM_INSURNSUMINS_COD As System.Int32
            <DataMember()> Public Property RootItemsSUM_INSURNSUM_INSUR As System.Int32
            <DataMember()> Public Property RootItemsSUM_INSURNCOINSURAN As System.Int32
            <DataMember()> Public Property RootItemsSUM_INSURNSUMINS_REAL As System.Int32
            <DataMember()> Public Property SUM_INSUR_SUM_INSUR As List(Of SUM_INSUR_SUM_INSURItem)
            <DataMember()> Public Property RootItemsCOVERNMODULEC As System.Int32
            <DataMember()> Public Property RootItemsCOVERNCOVER As System.Int32
            <DataMember()> Public Property RootItemsCOVERNROLE As System.Int32
            <DataMember()> Public Property RootItemsCOVERSCLIENT As System.String
            <DataMember()> Public Property RootItemsCOVERNCAPITAL As System.Int32
            <DataMember()> Public Property RootItemsCOVERNPREMIUM As System.Int32
            <DataMember()> Public Property RootItemsCOVERNCURRENCY As System.Int32
            <DataMember()> Public Property RootItemsCOVERDEFFECDATE As System.DateTime
            <DataMember()> Public Property RootItemsCOVERDNULLDATE As System.DateTime
            <DataMember()> Public Property COVER_COVER As List(Of COVER_COVERItem)
            <DataMember()> Public Property RootItemsREINSURANNBRANCH_REI As System.Int32
            <DataMember()> Public Property RootItemsREINSURANNTYPE_REIN As System.Int32
            <DataMember()> Public Property RootItemsREINSURANNCAPITAL As System.Int32
            <DataMember()> Public Property RootItemsREINSURANNCURRENCY As System.Int32
            <DataMember()> Public Property RootItemsREINSURANNSHARE As System.Int32
            <DataMember()> Public Property REINSURAN_REINSURAN As List(Of REINSURAN_REINSURANItem)
            <DataMember()> Public Property RootItemsREINSURAN2NBRANCH_REI As System.Int32
            <DataMember()> Public Property RootItemsREINSURAN2NCOMPANY As System.Int32
            <DataMember()> Public Property RootItemsREINSURAN2NCAPITAL As System.Int32
            <DataMember()> Public Property RootItemsREINSURAN2NCURRENCY As System.Int32
            <DataMember()> Public Property RootItemsREINSURAN2NSHARE As System.Int32
            <DataMember()> Public Property RootItemsREINSURAN2NCOMMISSI As System.Int32
            <DataMember()> Public Property REINSURAN2_REINSURAN2 As List(Of REINSURAN2_REINSURAN2Item)
            <DataMember()> Public Property RootItemsDISC_XPREMNDISC_CODE As System.Int32
            <DataMember()> Public Property RootItemsDISC_XPREMSAGREE As System.String
            <DataMember()> Public Property RootItemsDISC_XPREMNCAUSE As System.Int32
            <DataMember()> Public Property RootItemsDISC_XPREMNCURRENCY As System.Int32
            <DataMember()> Public Property RootItemsDISC_XPREMNAMOUNT As System.Int32
            <DataMember()> Public Property DISC_XPREM_DISC_XPREM As List(Of DISC_XPREM_DISC_XPREMItem)
            <DataMember()> Public Property RootItemsAUTOSREGIST As System.String
            <DataMember()> Public Property RootItemsAUTOSLICENSE_TY As System.String
            <DataMember()> Public Property RootItemsAUTONVEHTYPE As System.Int32
            <DataMember()> Public Property RootItemsAUTOSMOTOR As System.String
            <DataMember()> Public Property RootItemsAUTOSCHASSIS As System.String
            <DataMember()> Public Property RootItemsAUTOSCOLOR As System.String
            <DataMember()> Public Property RootItemsAUTONCAPITAL As System.Int32
            <DataMember()> Public Property RootItemsAUTONVEH_VALOR As System.Int32
            <DataMember()> Public Property RootItemsAUTONYEAR As System.Int32
            <DataMember()> Public Property RootItemsAUTONAUTOZONE As System.Int32
            <DataMember()> Public Property RootItemsAUTONUSE As System.Int32
            <DataMember()> Public Property AUTO_AUTO As List(Of AUTO_AUTOItem)
            <DataMember()> Public Property RootItemsFIRENCONSTCAT As System.Int32
            <DataMember()> Public Property RootItemsFIRENACTIVITYCAT As System.Int32
            <DataMember()> Public Property RootItemsFIRENFLOOR_QUAN As System.Int32
            <DataMember()> Public Property RootItemsFIRENROOFTYPE As System.Int32
            <DataMember()> Public Property RootItemsFIRENSEISMICZONE As System.Int32
            <DataMember()> Public Property RootItemsFIRENBUILDTYPE As System.Int32
            <DataMember()> Public Property RootItemsFIRENSPCOMBTYPE As System.Int32
            <DataMember()> Public Property RootItemsFIRESDESCBUSSI As System.String
            <DataMember()> Public Property RootItemsFIRENHURRICAN_ZONE As System.Int32
            <DataMember()> Public Property RootItemsFIRENSIDECLOSETYPE As System.Int32
            <DataMember()> Public Property FIRE_FIRE As List(Of FIRE_FIREItem)
            <DataMember()> Public Property RootItemsHOMEOWNERNOWNERSHIP As System.Int32
            <DataMember()> Public Property RootItemsHOMEOWNERNDWELLINGTYPE As System.Int32
            <DataMember()> Public Property RootItemsHOMEOWNERNSEISMICZONE As System.Int32
            <DataMember()> Public Property RootItemsHOMEOWNERNYEAR_BUILT As System.Int32
            <DataMember()> Public Property RootItemsHOMEOWNERDDATE_PURCH As System.DateTime
            <DataMember()> Public Property RootItemsHOMEOWNERNPRICE_PURCH As System.Int32
            <DataMember()> Public Property RootItemsHOMEOWNERNCURRENCY_PURCH As System.Int32
            <DataMember()> Public Property RootItemsHOMEOWNERNLANDSUPER As System.Int32
            <DataMember()> Public Property RootItemsHOMEOWNERNHOMESUPER As System.Int32
            <DataMember()> Public Property RootItemsHOMEOWNERNROOFTYPE As System.Int32
            <DataMember()> Public Property RootItemsHOMEOWNERNROOFYEAR As System.Int32
            <DataMember()> Public Property RootItemsHOMEOWNERNFLOODZONE As System.Int32
            <DataMember()> Public Property RootItemsHOMEOWNERNFOUNDTYPE As System.Int32
            <DataMember()> Public Property RootItemsHOMEOWNERSSPRINKSYS As System.String
            <DataMember()> Public Property RootItemsHOMEOWNERNAIRTYPE As System.Int32
            <DataMember()> Public Property RootItemsHOMEOWNERNSTORIES As System.Int32
            <DataMember()> Public Property RootItemsHOMEOWNERNHALFBATH As System.Int32
            <DataMember()> Public Property RootItemsHOMEOWNERNFULLBATH As System.Int32
            <DataMember()> Public Property RootItemsHOMEOWNERNBEDROOMS As System.Int32
            <DataMember()> Public Property RootItemsHOMEOWNERNFIREPLACE As System.Int32
            <DataMember()> Public Property RootItemsHOMEOWNERNGARAGE As System.Int32
            <DataMember()> Public Property RootItemsHOMEOWNERSANIMALSDES As System.String
            <DataMember()> Public Property RootItemsHOMEOWNERSATTACKEDIND As System.String
            <DataMember()> Public Property RootItemsHOMEOWNERNDIST_FIRE As System.Int32
            <DataMember()> Public Property RootItemsHOMEOWNERSALARM_COMP As System.String
            <DataMember()> Public Property RootItemsHOMEOWNERSFENCEPOOL As System.String
            <DataMember()> Public Property RootItemsHOMEOWNERNSWIMPOOL As System.Int32
            <DataMember()> Public Property RootItemsHOMEOWNERNFENCEHEIGHT As System.Int32
            <DataMember()> Public Property RootItemsHOMEOWNERSTRAMPOLINE As System.String
            <DataMember()> Public Property RootItemsHOMEOWNERSGAS As System.String
            <DataMember()> Public Property RootItemsHOMEOWNERNEXTERCONSTR As System.Int32
            <DataMember()> Public Property RootItemsHOMEOWNERSOTHER_CONSTR As System.String
            <DataMember()> Public Property HOMEOWNER_HOMEOWNER As List(Of HOMEOWNER_HOMEOWNERItem)
            <DataMember()> Public Property RootItemsLIFESPDURAIND As System.String
            <DataMember()> Public Property RootItemsLIFENPAY_TIME As System.Int32
            <DataMember()> Public Property RootItemsLIFENTYPDURINS As System.Int32
            <DataMember()> Public Property RootItemsLIFENINSUR_TIME As System.Int32
            <DataMember()> Public Property RootItemsLIFENAGE_REINSU As System.Int32
            <DataMember()> Public Property RootItemsLIFENAGE_LIMIT As System.Int32
            <DataMember()> Public Property RootItemsLIFENAGE As System.Int32
            <DataMember()> Public Property LIFE_LIFE As List(Of LIFE_LIFEItem)
            <DataMember()> Public Property RootItemsTHEFTDSTARTDATE As System.DateTime
            <DataMember()> Public Property RootItemsTHEFTDEXPIRDAT As System.DateTime
            <DataMember()> Public Property RootItemsTHEFTNCOMMERGRP As System.Int32
            <DataMember()> Public Property RootItemsTHEFTSDESCBUSSI As System.String
            <DataMember()> Public Property RootItemsTHEFTNINSURED As System.Int32
            <DataMember()> Public Property RootItemsTHEFTNEMPLOYEES As System.Int32
            <DataMember()> Public Property RootItemsTHEFTNAREA As System.Int32
            <DataMember()> Public Property RootItemsTHEFTNVIGILANCE As System.Int32
            <DataMember()> Public Property RootItemsTHEFTNCAPITAL As System.Int32
            <DataMember()> Public Property RootItemsTHEFTDNULLDATE As System.DateTime
            <DataMember()> Public Property RootItemsTHEFTNNULLCODE As System.Int32
            <DataMember()> Public Property THEFT_THEFT As List(Of THEFT_THEFTItem)
            <DataMember()> Public Property RootItemsHEALTHDSTARTDATE As System.DateTime
            <DataMember()> Public Property RootItemsHEALTHDEXPIRDAT As System.DateTime
            <DataMember()> Public Property RootItemsHEALTHNCAPITAL As System.Int32
            <DataMember()> Public Property RootItemsHEALTHNPREMIUM As System.Int32
            <DataMember()> Public Property RootItemsHEALTHNTARIFF As System.Int32
            <DataMember()> Public Property RootItemsHEALTHDNULLDATE As System.DateTime
            <DataMember()> Public Property RootItemsHEALTHNNULLCODE As System.Int32
            <DataMember()> Public Property RootItemsHEALTHSCERTYPE As System.String
            <DataMember()> Public Property RootItemsHEALTHNBRANCH As System.Int32
            <DataMember()> Public Property RootItemsHEALTHNPRODUCT As System.Int32
            <DataMember()> Public Property RootItemsHEALTHNPOLICY As System.Int32
            <DataMember()> Public Property RootItemsHEALTHNCERTIF As System.Int32
            <DataMember()> Public Property RootItemsHEALTHROLES2NROLE As System.Int32
            <DataMember()> Public Property RootItemsHEALTHROLES2SCLIENT As System.String
            <DataMember()> Public Property RootItemsHEALTHROLES2DEFFECDATE As System.DateTime
            <DataMember()> Public Property ROLES2_ROLES2 As List(Of ROLES2_ROLES2Item)
            <DataMember()> Public Property HEALTH_HEALTH As List(Of HEALTH_HEALTHItem)
            <DataMember()> Public Property RootItemsFINANCIAL_INSTRUMENTSNCONSECUTIVE As System.Int32
            <DataMember()> Public Property RootItemsFINANCIAL_INSTRUMENTSNINSTRUMENT_TY As System.Int32
            <DataMember()> Public Property RootItemsFINANCIAL_INSTRUMENTSNBANK_CODE As System.Int32
            <DataMember()> Public Property RootItemsFINANCIAL_INSTRUMENTSNCARD_TYPE As System.Int32
            <DataMember()> Public Property RootItemsFINANCIAL_INSTRUMENTSSNUMBER As System.String
            <DataMember()> Public Property RootItemsFINANCIAL_INSTRUMENTSDCARDEXPIR As System.DateTime
            <DataMember()> Public Property RootItemsFINANCIAL_INSTRUMENTSDSTARTDATE As System.DateTime
            <DataMember()> Public Property RootItemsFINANCIAL_INSTRUMENTSDTERM_DATE As System.DateTime
            <DataMember()> Public Property RootItemsFINANCIAL_INSTRUMENTSNQUOTA As System.Int32
            <DataMember()> Public Property RootItemsFINANCIAL_INSTRUMENTSNAMOUNT As System.Decimal
            <DataMember()> Public Property RootItemsFINANCIAL_INSTRUMENTSNCURRENCY As System.Int32
            <DataMember()> Public Property FINANCIAL_INSTRUMENTS_FINANCIAL_INSTRUMENTS As List(Of FINANCIAL_INSTRUMENTS_FINANCIAL_INSTRUMENTSItem)
            <DataMember()> Public Property RootItemsPROTECTIONNUSERCODE As System.Int32
            <DataMember()> Public Property PROTECTION_PROTECTION As List(Of PROTECTION_PROTECTIONItem)
            <DataMember()> Public Property RootItemsBENEFICIARNMODULEC As System.Int32
            <DataMember()> Public Property RootItemsBENEFICIARNCOVER As System.Int32
            <DataMember()> Public Property RootItemsBENEFICIARSCLIENT As System.String
            <DataMember()> Public Property RootItemsBENEFICIARNRELATION As System.Int32
            <DataMember()> Public Property RootItemsBENEFICIARNPARTICIP As System.Int32
            <DataMember()> Public Property RootItemsBENEFICIARSIRREVOC As System.String
            <DataMember()> Public Property BENEFICIAR_BENEFICIAR As List(Of BENEFICIAR_BENEFICIARItem)
            <DataMember()> Public Property RootItemsCLAUSENCLAUSE As System.Int32
            <DataMember()> Public Property RootItemsCLAUSENNOTENUM As System.Int32
            <DataMember()> Public Property CLAUSE_CLAUSE As List(Of CLAUSE_CLAUSEItem)
            <DataMember()> Public Property RootItemsPOLICY_HISNTRANSACTIO As System.Int32
            <DataMember()> Public Property RootItemsPOLICY_HISNMOVEMENT As System.Int32
            <DataMember()> Public Property RootItemsPOLICY_HISNTYPE_HIST As System.Int32
            <DataMember()> Public Property RootItemsPOLICY_HISDEFFECDATE As System.DateTime
            <DataMember()> Public Property RootItemsPOLICY_HISNRECEIPT As System.Int32
            <DataMember()> Public Property RootItemsPOLICY_HISSNULL_MOVE As System.String
            <DataMember()> Public Property RootItemsPOLICY_HISDNULLDATE As System.DateTime
            <DataMember()> Public Property POLICY_HIS_POLICY_HIS As List(Of POLICY_HIS_POLICY_HISItem)
            <DataMember()> Public Property RootItemsPREMIUMNRECEIPT As System.Int32
            <DataMember()> Public Property RootItemsPREMIUMNCURRENCY As System.Int32
            <DataMember()> Public Property RootItemsPREMIUMNPREMIUM As System.Int32
            <DataMember()> Public Property RootItemsPREMIUMDISSUEDAT As System.DateTime
            <DataMember()> Public Property RootItemsPREMIUMDEFFECDATE As System.DateTime
            <DataMember()> Public Property RootItemsPREMIUMDEXPIRDAT As System.DateTime
            <DataMember()> Public Property RootItemsPREMIUMNSTATUS_PRE As System.Int32
            <DataMember()> Public Property RootItemsPREMIUMNWAY_PAY As System.Int32
            <DataMember()> Public Property RootItemsPREMIUMSSTATUSVA As System.String
            <DataMember()> Public Property RootItemsPREMIUMDLIMITDATE As System.DateTime
            <DataMember()> Public Property RootItemsPREMIUMNTRATYPEI As System.Int32
            <DataMember()> Public Property RootItemsPREMIUMNINTERMED As System.Int32
            <DataMember()> Public Property RootItemsPREMIUMNPARTICIP As System.Int32
            <DataMember()> Public Property RootItemsPREMIUMNTAXAMOU As System.Int32
            <DataMember()> Public Property RootItemsPREMIUMNCOMAMOU As System.Int32
            <DataMember()> Public Property RootItemsPREMIUMNTYPE As System.Int32
            <DataMember()> Public Property RootItemsPREMIUMNCONTRAT As System.Int32
            <DataMember()> Public Property RootItemsPREMIUMSCERTYPE As System.String
            <DataMember()> Public Property RootItemsPREMIUMNBRANCH As System.Int32
            <DataMember()> Public Property RootItemsPREMIUMNPRODUCT As System.Int32
            <DataMember()> Public Property RootItemsPREMIUMNDIGIT As System.Int32
            <DataMember()> Public Property RootItemsPREMIUMNPAYNUMBE As System.Int32
            <DataMember()> Public Property RootItemsPREMIUMFINANC_PRENCONTRAT As System.Int32
            <DataMember()> Public Property RootItemsPREMIUMFINANC_PREDSTARTDATE As System.DateTime
            <DataMember()> Public Property RootItemsPREMIUMFINANC_PRENCURRENCY As System.Int32
            <DataMember()> Public Property RootItemsPREMIUMFINANC_PRENPREMIUM As System.Int32
            <DataMember()> Public Property RootItemsPREMIUMFINANC_PREFINANC_DRANDRAFT As System.Int32
            <DataMember()> Public Property RootItemsPREMIUMFINANC_PREFINANC_DRANAMOUNT As System.Int32
            <DataMember()> Public Property RootItemsPREMIUMFINANC_PREFINANC_DRANSTAT_DRAFT As System.Int32
            <DataMember()> Public Property FINANC_DRA_FINANC_DRA As List(Of FINANC_DRA_FINANC_DRAItem)
            <DataMember()> Public Property FINANC_PRE_FINANC_PRE As List(Of FINANC_PRE_FINANC_PREItem)
            <DataMember()> Public Property RootItemsPREMIUMPREMIUM_CENCERTIF As System.Int32
            <DataMember()> Public Property RootItemsPREMIUMPREMIUM_CENID_BILL As System.Int32
            <DataMember()> Public Property RootItemsPREMIUMPREMIUM_CESTYPE_DETAI As System.String
            <DataMember()> Public Property RootItemsPREMIUMPREMIUM_CENCODE_DETAI As System.Int32
            <DataMember()> Public Property RootItemsPREMIUMPREMIUM_CENBILL_ITEM As System.Int32
            <DataMember()> Public Property RootItemsPREMIUMPREMIUM_CENPREMIUM As System.Int32
            <DataMember()> Public Property PREMIUM_CE_PREMIUM_CE As List(Of PREMIUM_CE_PREMIUM_CEItem)
            <DataMember()> Public Property PREMIUM_PREMIUM As List(Of PREMIUM_PREMIUMItem)
            <DataMember()> Public Property RootItemsCLAIMNCAUSECOD As System.Int32
            <DataMember()> Public Property RootItemsCLAIMSCLAIMTYP As System.String
            <DataMember()> Public Property RootItemsCLAIMSCLIENT2 As System.String
            <DataMember()> Public Property RootItemsCLAIMDDECLADAT As System.DateTime
            <DataMember()> Public Property RootItemsCLAIMDOCCURDAT As System.DateTime
            <DataMember()> Public Property RootItemsCLAIMDLIMIT_PAY As System.DateTime
            <DataMember()> Public Property RootItemsCLAIMNLOC_RESERV As System.Int32
            <DataMember()> Public Property RootItemsCLAIMNLOC_OUT_AM As System.Int32
            <DataMember()> Public Property RootItemsCLAIMNLOC_PAY_AM As System.Int32
            <DataMember()> Public Property RootItemsCLAIMNLOC_REC_AM As System.Int32
            <DataMember()> Public Property RootItemsCLAIMNLOC_COS_RE As System.Int32
            <DataMember()> Public Property RootItemsCLAIMNTAX_AMO As System.Int32
            <DataMember()> Public Property RootItemsCLAIMSSTACLAIM As System.String
            <DataMember()> Public Property RootItemsCLAIMNNULLCODE As System.Int32
            <DataMember()> Public Property RootItemsCLAIMNUNACCODE As System.Int32
            <DataMember()> Public Property CLAIM_CLAIM As List(Of CLAIM_CLAIMItem)
            <DataMember()> Public Property RootItemsCURR_ACCNTYP_ACCO As System.Int32
            <DataMember()> Public Property RootItemsCURR_ACCNINSUR_AREA As System.Int32
            <DataMember()> Public Property RootItemsCURR_ACCSTYPE_ACC As System.String
            <DataMember()> Public Property RootItemsCURR_ACCDEFFECDATE As System.DateTime
            <DataMember()> Public Property RootItemsCURR_ACCNCURRENCY As System.Int32
            <DataMember()> Public Property RootItemsCURR_ACCNDEBIT As System.Int32
            <DataMember()> Public Property RootItemsCURR_ACCNCREDIT As System.Int32
            <DataMember()> Public Property RootItemsCURR_ACCNBALANCE As System.Int32
            <DataMember()> Public Property RootItemsCURR_ACCNLED_COMPAN As System.Int32
            <DataMember()> Public Property RootItemsCURR_ACCSACCOUNT As System.String
            <DataMember()> Public Property RootItemsCURR_ACCSAUX_ACCOUN As System.String
            <DataMember()> Public Property RootItemsCURR_ACCSSTATREGT As System.String
            <DataMember()> Public Property CURR_ACC_CURR_ACC As List(Of CURR_ACC_CURR_ACCItem)
            <DataMember()> Public Property Items_Item As List(Of Items_ItemItem)

        End Class

        <Serializable()>
        <DataContract()>
        Public Class DIR_DEBIT_DIR_DEBITItem

            <DataMember()> Public Property NBANKEXT As System.Int32
            <DataMember()> Public Property NBANKEXTDesc As System.String
            <DataMember()> Public Property SCREDI_CARD As System.String
            <DataMember()> Public Property NTYP_CRECARD As System.Int32
            <DataMember()> Public Property NTYP_CRECARDDesc As System.String
            <DataMember()> Public Property DCARDEXPIR As System.DateTime

        End Class

        <Serializable()>
        <DataContract()>
        Public Class ROLES_ROLESItem

            <DataMember()> Public Property NROLE As System.Int32
            <DataMember()> Public Property NROLEDesc As System.String
            <DataMember()> Public Property SCLIENT As System.String
            <DataMember()> Public Property SCLIENTDesc As System.String
            <DataMember()> Public Property NSTATUSROL As System.Int32
            <DataMember()> Public Property NSTATUSROLDesc As System.String
            <DataMember()> Public Property SSEXCLIEN As System.String
            <DataMember()> Public Property SSEXCLIENDesc As System.String
            <DataMember()> Public Property DBIRTHDATE As System.DateTime
            <DataMember()> Public Property NTYPERISK As System.Int32
            <DataMember()> Public Property NTYPERISKDesc As System.String
            <DataMember()> Public Property NRATING As System.Int32
            <DataMember()> Public Property DEFFECDATE As System.DateTime

        End Class

        <Serializable()>
        <DataContract()>
        Public Class CURREN_POL_CURREN_POLItem

            <DataMember()> Public Property NCURRENCY As System.Int32
            <DataMember()> Public Property NCURRENCYDesc As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class SUM_INSUR_SUM_INSURItem

            <DataMember()> Public Property NSUMINS_COD As System.Int32
            <DataMember()> Public Property NSUMINS_CODDesc As System.String
            <DataMember()> Public Property NSUM_INSUR As System.Int32
            <DataMember()> Public Property NCOINSURAN As System.Int32
            <DataMember()> Public Property NSUMINS_REAL As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class COVER_COVERItem

            <DataMember()> Public Property NMODULEC As System.Int32
            <DataMember()> Public Property NMODULECDesc As System.String
            <DataMember()> Public Property NCOVER As System.Int32
            <DataMember()> Public Property NCOVERDesc As System.String
            <DataMember()> Public Property NROLE As System.Int32
            <DataMember()> Public Property NROLEDesc As System.String
            <DataMember()> Public Property SCLIENT As System.String
            <DataMember()> Public Property SCLIENTDesc As System.String
            <DataMember()> Public Property NCAPITAL As System.Int32
            <DataMember()> Public Property NPREMIUM As System.Int32
            <DataMember()> Public Property NCURRENCY As System.Int32
            <DataMember()> Public Property NCURRENCYDesc As System.String
            <DataMember()> Public Property DEFFECDATE As System.DateTime
            <DataMember()> Public Property DNULLDATE As System.DateTime

        End Class

        <Serializable()>
        <DataContract()>
        Public Class REINSURAN_REINSURANItem

            <DataMember()> Public Property NBRANCH_REI As System.Int32
            <DataMember()> Public Property NBRANCH_REIDesc As System.String
            <DataMember()> Public Property NTYPE_REIN As System.Int32
            <DataMember()> Public Property NTYPE_REINDesc As System.String
            <DataMember()> Public Property NCAPITAL As System.Int32
            <DataMember()> Public Property NCURRENCY As System.Int32
            <DataMember()> Public Property NCURRENCYDesc As System.String
            <DataMember()> Public Property NSHARE As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class REINSURAN2_REINSURAN2Item

            <DataMember()> Public Property NBRANCH_REI As System.Int32
            <DataMember()> Public Property NBRANCH_REIDesc As System.String
            <DataMember()> Public Property NCOMPANY As System.Int32
            <DataMember()> Public Property NCAPITAL As System.Int32
            <DataMember()> Public Property NCURRENCY As System.Int32
            <DataMember()> Public Property NCURRENCYDesc As System.String
            <DataMember()> Public Property NSHARE As System.Int32
            <DataMember()> Public Property NCOMMISSI As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class DISC_XPREM_DISC_XPREMItem

            <DataMember()> Public Property NDISC_CODE As System.Int32
            <DataMember()> Public Property NDISC_CODEDesc As System.String
            <DataMember()> Public Property SAGREE As System.String
            <DataMember()> Public Property NCAUSE As System.Int32
            <DataMember()> Public Property NCAUSEDesc As System.String
            <DataMember()> Public Property NCURRENCY As System.Int32
            <DataMember()> Public Property NCURRENCYDesc As System.String
            <DataMember()> Public Property NAMOUNT As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class AUTO_AUTOItem

            <DataMember()> Public Property SREGIST As System.String
            <DataMember()> Public Property SLICENSE_TY As System.String
            <DataMember()> Public Property SLICENSE_TYDesc As System.String
            <DataMember()> Public Property NVEHTYPE As System.Int32
            <DataMember()> Public Property NVEHTYPEDesc As System.String
            <DataMember()> Public Property SMOTOR As System.String
            <DataMember()> Public Property SCHASSIS As System.String
            <DataMember()> Public Property SCOLOR As System.String
            <DataMember()> Public Property NCAPITAL As System.Int32
            <DataMember()> Public Property NVEH_VALOR As System.Int32
            <DataMember()> Public Property NYEAR As System.Int32
            <DataMember()> Public Property NAUTOZONE As System.Int32
            <DataMember()> Public Property NAUTOZONEDesc As System.String
            <DataMember()> Public Property NUSE As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class FIRE_FIREItem

            <DataMember()> Public Property NCONSTCAT As System.Int32
            <DataMember()> Public Property NCONSTCATDesc As System.String
            <DataMember()> Public Property NACTIVITYCAT As System.Int32
            <DataMember()> Public Property NACTIVITYCATDesc As System.String
            <DataMember()> Public Property NFLOOR_QUAN As System.Int32
            <DataMember()> Public Property NROOFTYPE As System.Int32
            <DataMember()> Public Property NROOFTYPEDesc As System.String
            <DataMember()> Public Property NSEISMICZONE As System.Int32
            <DataMember()> Public Property NSEISMICZONEDesc As System.String
            <DataMember()> Public Property NBUILDTYPE As System.Int32
            <DataMember()> Public Property NBUILDTYPEDesc As System.String
            <DataMember()> Public Property NSPCOMBTYPE As System.Int32
            <DataMember()> Public Property NSPCOMBTYPEDesc As System.String
            <DataMember()> Public Property SDESCBUSSI As System.String
            <DataMember()> Public Property NHURRICAN_ZONE As System.Int32
            <DataMember()> Public Property NSIDECLOSETYPE As System.Int32
            <DataMember()> Public Property NSIDECLOSETYPEDesc As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class HOMEOWNER_HOMEOWNERItem

            <DataMember()> Public Property NOWNERSHIP As System.Int32
            <DataMember()> Public Property NOWNERSHIPDesc As System.String
            <DataMember()> Public Property NDWELLINGTYPE As System.Int32
            <DataMember()> Public Property NDWELLINGTYPEDesc As System.String
            <DataMember()> Public Property NSEISMICZONE As System.Int32
            <DataMember()> Public Property NYEAR_BUILT As System.Int32
            <DataMember()> Public Property DDATE_PURCH As System.DateTime
            <DataMember()> Public Property NPRICE_PURCH As System.Int32
            <DataMember()> Public Property NCURRENCY_PURCH As System.Int32
            <DataMember()> Public Property NCURRENCY_PURCHDesc As System.String
            <DataMember()> Public Property NLANDSUPER As System.Int32
            <DataMember()> Public Property NHOMESUPER As System.Int32
            <DataMember()> Public Property NROOFTYPE As System.Int32
            <DataMember()> Public Property NROOFTYPEDesc As System.String
            <DataMember()> Public Property NROOFYEAR As System.Int32
            <DataMember()> Public Property NFLOODZONE As System.Int32
            <DataMember()> Public Property NFLOODZONEDesc As System.String
            <DataMember()> Public Property NFOUNDTYPE As System.Int32
            <DataMember()> Public Property NFOUNDTYPEDesc As System.String
            <DataMember()> Public Property SSPRINKSYS As System.String
            <DataMember()> Public Property NAIRTYPE As System.Int32
            <DataMember()> Public Property NAIRTYPEDesc As System.String
            <DataMember()> Public Property NSTORIES As System.Int32
            <DataMember()> Public Property NHALFBATH As System.Int32
            <DataMember()> Public Property NFULLBATH As System.Int32
            <DataMember()> Public Property NBEDROOMS As System.Int32
            <DataMember()> Public Property NFIREPLACE As System.Int32
            <DataMember()> Public Property NGARAGE As System.Int32
            <DataMember()> Public Property SANIMALSDES As System.String
            <DataMember()> Public Property SATTACKEDIND As System.String
            <DataMember()> Public Property NDIST_FIRE As System.Int32
            <DataMember()> Public Property SALARM_COMP As System.String
            <DataMember()> Public Property SFENCEPOOL As System.String
            <DataMember()> Public Property NSWIMPOOL As System.Int32
            <DataMember()> Public Property NSWIMPOOLDesc As System.String
            <DataMember()> Public Property NFENCEHEIGHT As System.Int32
            <DataMember()> Public Property STRAMPOLINE As System.String
            <DataMember()> Public Property SGAS As System.String
            <DataMember()> Public Property NEXTERCONSTR As System.Int32
            <DataMember()> Public Property NEXTERCONSTRDesc As System.String
            <DataMember()> Public Property SOTHER_CONSTR As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class LIFE_LIFEItem

            <DataMember()> Public Property SPDURAIND As System.String
            <DataMember()> Public Property SPDURAINDDesc As System.String
            <DataMember()> Public Property NPAY_TIME As System.Int32
            <DataMember()> Public Property NTYPDURINS As System.Int32
            <DataMember()> Public Property NTYPDURINSDesc As System.String
            <DataMember()> Public Property NINSUR_TIME As System.Int32
            <DataMember()> Public Property NAGE_REINSU As System.Int32
            <DataMember()> Public Property NAGE_LIMIT As System.Int32
            <DataMember()> Public Property NAGE As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class THEFT_THEFTItem

            <DataMember()> Public Property DSTARTDATE As System.DateTime
            <DataMember()> Public Property DEXPIRDAT As System.DateTime
            <DataMember()> Public Property NCOMMERGRP As System.Int32
            <DataMember()> Public Property NCOMMERGRPDesc As System.String
            <DataMember()> Public Property SDESCBUSSI As System.String
            <DataMember()> Public Property NINSURED As System.Int32
            <DataMember()> Public Property NEMPLOYEES As System.Int32
            <DataMember()> Public Property NAREA As System.Int32
            <DataMember()> Public Property NVIGILANCE As System.Int32
            <DataMember()> Public Property NCAPITAL As System.Int32
            <DataMember()> Public Property DNULLDATE As System.DateTime
            <DataMember()> Public Property NNULLCODE As System.Int32
            <DataMember()> Public Property NNULLCODEDesc As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class ROLES2_ROLES2Item

            <DataMember()> Public Property NROLE As System.Int32
            <DataMember()> Public Property NROLEDesc As System.String
            <DataMember()> Public Property SCLIENT As System.String
            <DataMember()> Public Property SCLIENTDesc As System.String
            <DataMember()> Public Property DEFFECDATE As System.DateTime

        End Class

        <Serializable()>
        <DataContract()>
        Public Class HEALTH_HEALTHItem

            <DataMember()> Public Property DSTARTDATE As System.DateTime
            <DataMember()> Public Property DEXPIRDAT As System.DateTime
            <DataMember()> Public Property NCAPITAL As System.Int32
            <DataMember()> Public Property NPREMIUM As System.Int32
            <DataMember()> Public Property NTARIFF As System.Int32
            <DataMember()> Public Property DNULLDATE As System.DateTime
            <DataMember()> Public Property NNULLCODE As System.Int32
            <DataMember()> Public Property NNULLCODEDesc As System.String
            <DataMember()> Public Property SCERTYPE As System.String
            <DataMember()> Public Property NBRANCH As System.Int32
            <DataMember()> Public Property NPRODUCT As System.Int32
            <DataMember()> Public Property NPOLICY As System.Int32
            <DataMember()> Public Property NCERTIF As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class FINANCIAL_INSTRUMENTS_FINANCIAL_INSTRUMENTSItem

            <DataMember()> Public Property NCONSECUTIVE As System.Int32
            <DataMember()> Public Property NINSTRUMENT_TY As System.Int32
            <DataMember()> Public Property NINSTRUMENT_TYDesc As System.String
            <DataMember()> Public Property NBANK_CODE As System.Int32
            <DataMember()> Public Property NBANK_CODEDesc As System.String
            <DataMember()> Public Property NCARD_TYPE As System.Int32
            <DataMember()> Public Property NCARD_TYPEDesc As System.String
            <DataMember()> Public Property SNUMBER As System.String
            <DataMember()> Public Property DCARDEXPIR As System.DateTime
            <DataMember()> Public Property DSTARTDATE As System.DateTime
            <DataMember()> Public Property DTERM_DATE As System.DateTime
            <DataMember()> Public Property NQUOTA As System.Int32
            <DataMember()> Public Property NAMOUNT As System.Decimal
            <DataMember()> Public Property NCURRENCY As System.Int32
            <DataMember()> Public Property NCURRENCYDesc As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class PROTECTION_PROTECTIONItem

            <DataMember()> Public Property NUSERCODE As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class BENEFICIAR_BENEFICIARItem

            <DataMember()> Public Property NMODULEC As System.Int32
            <DataMember()> Public Property NMODULECDesc As System.String
            <DataMember()> Public Property NCOVER As System.Int32
            <DataMember()> Public Property SCLIENT As System.String
            <DataMember()> Public Property SCLIENTDesc As System.String
            <DataMember()> Public Property NRELATION As System.Int32
            <DataMember()> Public Property NRELATIONDesc As System.String
            <DataMember()> Public Property NPARTICIP As System.Int32
            <DataMember()> Public Property SIRREVOC As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class CLAUSE_CLAUSEItem

            <DataMember()> Public Property NCLAUSE As System.Int32
            <DataMember()> Public Property NNOTENUM As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class POLICY_HIS_POLICY_HISItem

            <DataMember()> Public Property NTRANSACTIO As System.Int32
            <DataMember()> Public Property NMOVEMENT As System.Int32
            <DataMember()> Public Property NTYPE_HIST As System.Int32
            <DataMember()> Public Property NTYPE_HISTDesc As System.String
            <DataMember()> Public Property DEFFECDATE As System.DateTime
            <DataMember()> Public Property NRECEIPT As System.Int32
            <DataMember()> Public Property SNULL_MOVE As System.String
            <DataMember()> Public Property DNULLDATE As System.DateTime

        End Class

        <Serializable()>
        <DataContract()>
        Public Class FINANC_DRA_FINANC_DRAItem

            <DataMember()> Public Property NDRAFT As System.Int32
            <DataMember()> Public Property NAMOUNT As System.Int32
            <DataMember()> Public Property NSTAT_DRAFT As System.Int32
            <DataMember()> Public Property NSTAT_DRAFTDesc As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class FINANC_PRE_FINANC_PREItem

            <DataMember()> Public Property NCONTRAT As System.Int32
            <DataMember()> Public Property DSTARTDATE As System.DateTime
            <DataMember()> Public Property NCURRENCY As System.Int32
            <DataMember()> Public Property NCURRENCYDesc As System.String
            <DataMember()> Public Property NPREMIUM As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class PREMIUM_CE_PREMIUM_CEItem

            <DataMember()> Public Property NCERTIF As System.Int32
            <DataMember()> Public Property NID_BILL As System.Int32
            <DataMember()> Public Property STYPE_DETAI As System.String
            <DataMember()> Public Property NCODE_DETAI As System.Int32
            <DataMember()> Public Property NBILL_ITEM As System.Int32
            <DataMember()> Public Property NBILL_ITEMDesc As System.String
            <DataMember()> Public Property NPREMIUM As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class PREMIUM_PREMIUMItem

            <DataMember()> Public Property NRECEIPT As System.Int32
            <DataMember()> Public Property NCURRENCY As System.Int32
            <DataMember()> Public Property NCURRENCYDesc As System.String
            <DataMember()> Public Property NPREMIUM As System.Int32
            <DataMember()> Public Property DISSUEDAT As System.DateTime
            <DataMember()> Public Property DEFFECDATE As System.DateTime
            <DataMember()> Public Property DEXPIRDAT As System.DateTime
            <DataMember()> Public Property NSTATUS_PRE As System.Int32
            <DataMember()> Public Property NSTATUS_PREDesc As System.String
            <DataMember()> Public Property NWAY_PAY As System.Int32
            <DataMember()> Public Property NWAY_PAYDesc As System.String
            <DataMember()> Public Property SSTATUSVA As System.String
            <DataMember()> Public Property SSTATUSVADesc As System.String
            <DataMember()> Public Property DLIMITDATE As System.DateTime
            <DataMember()> Public Property NTRATYPEI As System.Int32
            <DataMember()> Public Property NTRATYPEIDesc As System.String
            <DataMember()> Public Property NINTERMED As System.Int32
            <DataMember()> Public Property NPARTICIP As System.Int32
            <DataMember()> Public Property NTAXAMOU As System.Int32
            <DataMember()> Public Property NCOMAMOU As System.Int32
            <DataMember()> Public Property NTYPE As System.Int32
            <DataMember()> Public Property NCONTRAT As System.Int32
            <DataMember()> Public Property SCERTYPE As System.String
            <DataMember()> Public Property NBRANCH As System.Int32
            <DataMember()> Public Property NPRODUCT As System.Int32
            <DataMember()> Public Property NDIGIT As System.Int32
            <DataMember()> Public Property NPAYNUMBE As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class CLAIM_CLAIMItem

            <DataMember()> Public Property NCAUSECOD As System.Int32
            <DataMember()> Public Property SCLAIMTYP As System.String
            <DataMember()> Public Property SCLAIMTYPDesc As System.String
            <DataMember()> Public Property SCLIENT2 As System.String
            <DataMember()> Public Property SCLIENT2Desc As System.String
            <DataMember()> Public Property DDECLADAT As System.DateTime
            <DataMember()> Public Property DOCCURDAT As System.DateTime
            <DataMember()> Public Property DLIMIT_PAY As System.DateTime
            <DataMember()> Public Property NLOC_RESERV As System.Int32
            <DataMember()> Public Property NLOC_OUT_AM As System.Int32
            <DataMember()> Public Property NLOC_PAY_AM As System.Int32
            <DataMember()> Public Property NLOC_REC_AM As System.Int32
            <DataMember()> Public Property NLOC_COS_RE As System.Int32
            <DataMember()> Public Property NTAX_AMO As System.Int32
            <DataMember()> Public Property SSTACLAIM As System.String
            <DataMember()> Public Property SSTACLAIMDesc As System.String
            <DataMember()> Public Property NNULLCODE As System.Int32
            <DataMember()> Public Property NNULLCODEDesc As System.String
            <DataMember()> Public Property NUNACCODE As System.Int32
            <DataMember()> Public Property NUNACCODEDesc As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class CURR_ACC_CURR_ACCItem

            <DataMember()> Public Property NTYP_ACCO As System.Int32
            <DataMember()> Public Property NTYP_ACCODesc As System.String
            <DataMember()> Public Property NINSUR_AREA As System.Int32
            <DataMember()> Public Property NINSUR_AREADesc As System.String
            <DataMember()> Public Property STYPE_ACC As System.String
            <DataMember()> Public Property DEFFECDATE As System.DateTime
            <DataMember()> Public Property NCURRENCY As System.Int32
            <DataMember()> Public Property NDEBIT As System.Int32
            <DataMember()> Public Property NCREDIT As System.Int32
            <DataMember()> Public Property NBALANCE As System.Int32
            <DataMember()> Public Property NLED_COMPAN As System.Int32
            <DataMember()> Public Property SACCOUNT As System.String
            <DataMember()> Public Property SAUX_ACCOUN As System.String
            <DataMember()> Public Property SSTATREGT As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Items_ItemItem

            <DataMember()> Public Property NBRANCH As System.Int32
            <DataMember()> Public Property NBRANCHDesc As System.String
            <DataMember()> Public Property NPRODUCT As System.Int32
            <DataMember()> Public Property NPRODUCTDesc As System.String
            <DataMember()> Public Property NPOLICY As System.Int32
            <DataMember()> Public Property NCERTIF As System.Int32
            <DataMember()> Public Property NCAPITAL As System.Int32
            <DataMember()> Public Property NPAYFREQ As System.Int32
            <DataMember()> Public Property NPAYFREQDesc As System.String
            <DataMember()> Public Property SSTATUSVA As System.String
            <DataMember()> Public Property SSTATUSVADesc As System.String
            <DataMember()> Public Property DSTARTDATE As System.DateTime
            <DataMember()> Public Property NWAIT_CODE As System.Int32
            <DataMember()> Public Property NWAIT_CODEDesc As System.String
            <DataMember()> Public Property DISSUEDAT As System.DateTime
            <DataMember()> Public Property SRENEWAL As System.String
            <DataMember()> Public Property DNULLDATE As System.DateTime
            <DataMember()> Public Property NNULLCODE As System.Int32
            <DataMember()> Public Property NNULLCODEDesc As System.String
            <DataMember()> Public Property DEXPIRDAT As System.DateTime
            <DataMember()> Public Property DCHANGDAT As System.DateTime
            <DataMember()> Public Property SCERTYPE As System.String
            <DataMember()> Public Property NDIGIT As System.Int32

        End Class


#End Region

    End Class

End Namespace