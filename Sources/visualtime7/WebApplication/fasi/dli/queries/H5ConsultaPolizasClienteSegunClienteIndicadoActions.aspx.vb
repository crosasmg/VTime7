'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Query Designer v7.1.120.1 at 2019/02/27 11:16:24 a.m. model release 1, Form Generator v1.0.34.22 - Query Generator v1.0.16.8
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class H5ConsultaPolizasClienteSegunClienteIndicadoActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"
   
        <WebMethod()>
        Public Shared Function ItemsTblDataLoad(CLIENTSCLIENT1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.SCLIENT = String.Empty, .SCLIENAME = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT CLIENT.SCLIENT, CLIENT.SCLIENAME FROM CLIENT CLIENT  WHERE CLIENT.SCLIENT = @:CLIENTSCLIENT1", "CLIENT", "Linked.LatCombined")
                    .AddParameter("CLIENTSCLIENT1", DbType.AnsiStringFixedLength, 0, (CLIENTSCLIENT1 = String.Empty), CLIENTSCLIENT1)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.SCLIENT = itemData.StringValue("SCLIENT"), .SCLIENAME = itemData.StringValue("SCLIENAME")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "ItemsTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (ItemsTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function ItemsTblDataCount(CLIENTSCLIENT1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT CLIENT.SCLIENT, CLIENT.SCLIENAME FROM CLIENT CLIENT  WHERE CLIENT.SCLIENT = @:CLIENTSCLIENT1)", "CLIENT", "Linked.LatCombined")
                    .AddParameter("CLIENTSCLIENT1", DbType.AnsiStringFixedLength, 0, (CLIENTSCLIENT1 = String.Empty), CLIENTSCLIENT1)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "ItemsTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (ItemsTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function CertificatTblDataLoad(filter As String, CERTIFICATSCLIENT1 As String, CERTIFICATSCLIENT5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.nBranch = 0, .nProduct = 0, .nPolicy = 0, .nCapital = 0, .nPayfreq = 0, .sStatusva = String.Empty, .dIssuedat = Date.MinValue, .nWait_code = 0, .dStartdate = Date.MinValue, .sRenewal = String.Empty, .dNulldate = Date.MinValue, .nNullcode = 0, .dExpirdat = Date.MinValue, .dChangdat = Date.MinValue, .SCERTYPE = String.Empty, .NCERTIF = String.Empty, .nBranchDesc = String.Empty, .nProductDesc = String.Empty, .nPayfreqDesc = String.Empty, .sStatusvaDesc = String.Empty, .nWait_codeDesc = String.Empty, .nNullcodeDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT CERTIFICAT.NBRANCH, CERTIFICAT.NPRODUCT, CERTIFICAT.NPOLICY, CERTIFICAT.NCAPITAL, CERTIFICAT.NPAYFREQ, CERTIFICAT.SSTATUSVA, CERTIFICAT.DISSUEDAT, CERTIFICAT.NWAIT_CODE, CERTIFICAT.DSTARTDATE, CERTIFICAT.SRENEWAL, CERTIFICAT.DNULLDATE, CERTIFICAT.NNULLCODE, CERTIFICAT.DEXPIRDAT, CERTIFICAT.DCHANGDAT, CERTIFICAT.SCERTYPE, CERTIFICAT.NCERTIF, CERTIFICAT.SCLIENT SCLIENT, TABLE10.SDESCRIPT NBRANCHDESC, PRODMASTER.SDESCRIPT NPRODUCTDESC, TABLE36.SDESCRIPT NPAYFREQDESC, TABLE181.SDESCRIPT SSTATUSVADESC, TAB_WAITPO.SDESCRIPT NWAIT_CODEDESC, TABLE13.SDESCRIPT NNULLCODEDESC, POLICY.SPOLITYPE SPOLITYPE FROM CERTIFICAT CERTIFICAT LEFT JOIN TABLE10 TABLE10 ON TABLE10.NBRANCH = CERTIFICAT.NBRANCH LEFT JOIN PRODMASTER PRODMASTER ON PRODMASTER.NBRANCH = CERTIFICAT.NBRANCH  AND PRODMASTER.NPRODUCT = CERTIFICAT.NPRODUCT LEFT JOIN TABLE36 TABLE36 ON TABLE36.NPAYFREQ = CERTIFICAT.NPAYFREQ LEFT JOIN TABLE181 TABLE181 ON TABLE181.SSTATUSVA = CERTIFICAT.SSTATUSVA LEFT JOIN TAB_WAITPO TAB_WAITPO ON TAB_WAITPO.NWAIT_CODE = CERTIFICAT.NWAIT_CODE LEFT JOIN TABLE13 TABLE13 ON TABLE13.NNULLCODE = CERTIFICAT.NNULLCODE LEFT JOIN POLICY POLICY ON POLICY.SCERTYPE = CERTIFICAT.SCERTYPE  AND POLICY.NBRANCH = CERTIFICAT.NBRANCH  AND POLICY.NPRODUCT = CERTIFICAT.NPRODUCT  AND POLICY.NPOLICY = CERTIFICAT.NPOLICY  WHERE CERTIFICAT.SCLIENT = @:CERTIFICATSCLIENT1 AND POLICY.SPOLITYPE = '1' AND CERTIFICAT.SCERTYPE = '2' AND CERTIFICAT.SSTATUSVA <> '3' AND CERTIFICAT.SCLIENT = @:CERTIFICATSCLIENT5", "CERTIFICAT", "Linked.LatCombined")
                    .AddParameter("CERTIFICATSCLIENT1", DbType.AnsiStringFixedLength, 0, (CERTIFICATSCLIENT1 = String.Empty), CERTIFICATSCLIENT1)
                    .AddParameter("CERTIFICATSCLIENT5", DbType.AnsiStringFixedLength, 0, (CERTIFICATSCLIENT5 = String.Empty), CERTIFICATSCLIENT5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.nBranch = itemData.NumericValue("NBRANCH"), .nProduct = itemData.NumericValue("NPRODUCT"), .nPolicy = itemData.NumericValue("NPOLICY"), .nCapital = itemData.NumericValue("NCAPITAL"), .nPayfreq = itemData.NumericValue("NPAYFREQ"), .sStatusva = itemData.StringValue("SSTATUSVA"), .dIssuedat = itemData.DateTimeValue("DISSUEDAT"), .nWait_code = itemData.NumericValue("NWAIT_CODE"), .dStartdate = itemData.DateTimeValue("DSTARTDATE"), .sRenewal = itemData.StringValue("SRENEWAL"), .dNulldate = itemData.DateTimeValue("DNULLDATE"), .nNullcode = itemData.NumericValue("NNULLCODE"), .dExpirdat = itemData.DateTimeValue("DEXPIRDAT"), .dChangdat = itemData.DateTimeValue("DCHANGDAT"), .SCERTYPE = itemData.StringValue("SCERTYPE"), .NCERTIF = itemData.StringValue("NCERTIF"), .nBranchDesc = itemData.StringValue("NBRANCHDESC"), .nProductDesc = itemData.StringValue("NPRODUCTDESC"), .nPayfreqDesc = itemData.StringValue("NPAYFREQDESC"), .sStatusvaDesc = itemData.StringValue("SSTATUSVADESC"), .nWait_codeDesc = itemData.StringValue("NWAIT_CODEDESC"), .nNullcodeDesc = itemData.StringValue("NNULLCODEDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "CertificatTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CertificatTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function CertificatTblDataCount(filter As String, CERTIFICATSCLIENT1 As String, CERTIFICATSCLIENT5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT CERTIFICAT.NBRANCH, CERTIFICAT.NPRODUCT, CERTIFICAT.NPOLICY, CERTIFICAT.NCAPITAL, CERTIFICAT.NPAYFREQ, CERTIFICAT.SSTATUSVA, CERTIFICAT.DISSUEDAT, CERTIFICAT.NWAIT_CODE, CERTIFICAT.DSTARTDATE, CERTIFICAT.SRENEWAL, CERTIFICAT.DNULLDATE, CERTIFICAT.NNULLCODE, CERTIFICAT.DEXPIRDAT, CERTIFICAT.DCHANGDAT, CERTIFICAT.SCERTYPE, CERTIFICAT.NCERTIF, CERTIFICAT.SCLIENT SCLIENT, TABLE10.SDESCRIPT NBRANCHDESC, PRODMASTER.SDESCRIPT NPRODUCTDESC, TABLE36.SDESCRIPT NPAYFREQDESC, TABLE181.SDESCRIPT SSTATUSVADESC, TAB_WAITPO.SDESCRIPT NWAIT_CODEDESC, TABLE13.SDESCRIPT NNULLCODEDESC, POLICY.SPOLITYPE SPOLITYPE FROM CERTIFICAT CERTIFICAT LEFT JOIN TABLE10 TABLE10 ON TABLE10.NBRANCH = CERTIFICAT.NBRANCH LEFT JOIN PRODMASTER PRODMASTER ON PRODMASTER.NBRANCH = CERTIFICAT.NBRANCH  AND PRODMASTER.NPRODUCT = CERTIFICAT.NPRODUCT LEFT JOIN TABLE36 TABLE36 ON TABLE36.NPAYFREQ = CERTIFICAT.NPAYFREQ LEFT JOIN TABLE181 TABLE181 ON TABLE181.SSTATUSVA = CERTIFICAT.SSTATUSVA LEFT JOIN TAB_WAITPO TAB_WAITPO ON TAB_WAITPO.NWAIT_CODE = CERTIFICAT.NWAIT_CODE LEFT JOIN TABLE13 TABLE13 ON TABLE13.NNULLCODE = CERTIFICAT.NNULLCODE LEFT JOIN POLICY POLICY ON POLICY.SCERTYPE = CERTIFICAT.SCERTYPE  AND POLICY.NBRANCH = CERTIFICAT.NBRANCH  AND POLICY.NPRODUCT = CERTIFICAT.NPRODUCT  AND POLICY.NPOLICY = CERTIFICAT.NPOLICY  WHERE CERTIFICAT.SCLIENT = @:CERTIFICATSCLIENT1 AND POLICY.SPOLITYPE = '1' AND CERTIFICAT.SCERTYPE = '2' AND CERTIFICAT.SSTATUSVA <> '3' AND CERTIFICAT.SCLIENT = @:CERTIFICATSCLIENT5)", "CERTIFICAT", "Linked.LatCombined")
                    .AddParameter("CERTIFICATSCLIENT1", DbType.AnsiStringFixedLength, 0, (CERTIFICATSCLIENT1 = String.Empty), CERTIFICATSCLIENT1)
                    .AddParameter("CERTIFICATSCLIENT5", DbType.AnsiStringFixedLength, 0, (CERTIFICATSCLIENT5 = String.Empty), CERTIFICATSCLIENT5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "CertificatTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CertificatTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function CertificatSelectCommandActionCERTIFICAT(CERTIFICATSCLIENT1 As String, CERTIFICATSCLIENT5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(CERTIFICAT.NBRANCH) COUNTDATA FROM CERTIFICAT CERTIFICAT LEFT JOIN TABLE10 TABLE10 ON TABLE10.NBRANCH = CERTIFICAT.NBRANCH LEFT JOIN PRODMASTER PRODMASTER ON PRODMASTER.NBRANCH = CERTIFICAT.NBRANCH  AND PRODMASTER.NPRODUCT = CERTIFICAT.NPRODUCT LEFT JOIN TABLE36 TABLE36 ON TABLE36.NPAYFREQ = CERTIFICAT.NPAYFREQ LEFT JOIN TABLE181 TABLE181 ON TABLE181.SSTATUSVA = CERTIFICAT.SSTATUSVA LEFT JOIN TAB_WAITPO TAB_WAITPO ON TAB_WAITPO.NWAIT_CODE = CERTIFICAT.NWAIT_CODE LEFT JOIN TABLE13 TABLE13 ON TABLE13.NNULLCODE = CERTIFICAT.NNULLCODE LEFT JOIN POLICY POLICY ON POLICY.SCERTYPE = CERTIFICAT.SCERTYPE  AND POLICY.NBRANCH = CERTIFICAT.NBRANCH  AND POLICY.NPRODUCT = CERTIFICAT.NPRODUCT  AND POLICY.NPOLICY = CERTIFICAT.NPOLICY  WHERE CERTIFICAT.SCLIENT = @:CERTIFICATSCLIENT1 AND POLICY.SPOLITYPE = '1' AND CERTIFICAT.SCERTYPE = '2' AND CERTIFICAT.SSTATUSVA <> '3' AND CERTIFICAT.SCLIENT = @:CERTIFICATSCLIENT5", "CERTIFICAT", "Linked.LatCombined")
                    .AddParameter("CERTIFICATSCLIENT1", DbType.AnsiStringFixedLength, 0, (CERTIFICATSCLIENT1 = String.Empty), CERTIFICATSCLIENT1)
                    .AddParameter("CERTIFICATSCLIENT5", DbType.AnsiStringFixedLength, 0, (CERTIFICATSCLIENT5 = String.Empty), CERTIFICATSCLIENT5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "CertificatSelectCommandActionCERTIFICAT", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CertificatSelectCommandActionCERTIFICAT)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function Curren_polTblDataLoad(CURRENPOLSCERTYPE1 As String, CURRENPOLNBRANCH2 As String, CURRENPOLNPRODUCT3 As String, CURRENPOLNPOLICY4 As String, CURRENPOLNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.nCurrency = 0, .nCurrencyDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT CURREN_POL.NCURRENCY, TABLE11.SSHORT_DES NCURRENCYDESC FROM CURREN_POL CURREN_POL LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = CURREN_POL.NCURRENCY  WHERE CURREN_POL.SCERTYPE = @:CURREN_POLSCERTYPE1 AND CURREN_POL.NBRANCH = @:CURREN_POLNBRANCH2 AND CURREN_POL.NPRODUCT = @:CURREN_POLNPRODUCT3 AND CURREN_POL.NPOLICY = @:CURREN_POLNPOLICY4 AND CURREN_POL.NCERTIF = @:CURREN_POLNCERTIF5", "CURREN_POL", "Linked.LatCombined")
                    .AddParameter("CURREN_POLSCERTYPE1", DbType.AnsiStringFixedLength, 0, (CURRENPOLSCERTYPE1 = String.Empty), CURRENPOLSCERTYPE1)
                    .AddParameter("CURREN_POLNBRANCH2", DbType.AnsiStringFixedLength, 0, (CURRENPOLNBRANCH2 = String.Empty), CURRENPOLNBRANCH2)
                    .AddParameter("CURREN_POLNPRODUCT3", DbType.AnsiStringFixedLength, 0, (CURRENPOLNPRODUCT3 = String.Empty), CURRENPOLNPRODUCT3)
                    .AddParameter("CURREN_POLNPOLICY4", DbType.AnsiStringFixedLength, 0, (CURRENPOLNPOLICY4 = String.Empty), CURRENPOLNPOLICY4)
                    .AddParameter("CURREN_POLNCERTIF5", DbType.AnsiStringFixedLength, 0, (CURRENPOLNCERTIF5 = String.Empty), CURRENPOLNCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.nCurrency = itemData.NumericValue("NCURRENCY"), .nCurrencyDesc = itemData.StringValue("NCURRENCYDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "Curren_polTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (Curren_polTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function Curren_polTblDataCount(CURRENPOLSCERTYPE1 As String, CURRENPOLNBRANCH2 As String, CURRENPOLNPRODUCT3 As String, CURRENPOLNPOLICY4 As String, CURRENPOLNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT CURREN_POL.NCURRENCY, TABLE11.SSHORT_DES NCURRENCYDESC FROM CURREN_POL CURREN_POL LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = CURREN_POL.NCURRENCY  WHERE CURREN_POL.SCERTYPE = @:CURREN_POLSCERTYPE1 AND CURREN_POL.NBRANCH = @:CURREN_POLNBRANCH2 AND CURREN_POL.NPRODUCT = @:CURREN_POLNPRODUCT3 AND CURREN_POL.NPOLICY = @:CURREN_POLNPOLICY4 AND CURREN_POL.NCERTIF = @:CURREN_POLNCERTIF5)", "CURREN_POL", "Linked.LatCombined")
                    .AddParameter("CURREN_POLSCERTYPE1", DbType.AnsiStringFixedLength, 0, (CURRENPOLSCERTYPE1 = String.Empty), CURRENPOLSCERTYPE1)
                    .AddParameter("CURREN_POLNBRANCH2", DbType.AnsiStringFixedLength, 0, (CURRENPOLNBRANCH2 = String.Empty), CURRENPOLNBRANCH2)
                    .AddParameter("CURREN_POLNPRODUCT3", DbType.AnsiStringFixedLength, 0, (CURRENPOLNPRODUCT3 = String.Empty), CURRENPOLNPRODUCT3)
                    .AddParameter("CURREN_POLNPOLICY4", DbType.AnsiStringFixedLength, 0, (CURRENPOLNPOLICY4 = String.Empty), CURRENPOLNPOLICY4)
                    .AddParameter("CURREN_POLNCERTIF5", DbType.AnsiStringFixedLength, 0, (CURRENPOLNCERTIF5 = String.Empty), CURRENPOLNCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "Curren_polTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (Curren_polTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function Curren_polSelectCommandActionCURREN_POL(CURRENPOLSCERTYPE1 As String, CURRENPOLNBRANCH2 As String, CURRENPOLNPRODUCT3 As String, CURRENPOLNPOLICY4 As String, CURRENPOLNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(CURREN_POL.NCURRENCY) COUNTDATA FROM CURREN_POL CURREN_POL LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = CURREN_POL.NCURRENCY  WHERE CURREN_POL.SCERTYPE = @:CURREN_POLSCERTYPE1 AND CURREN_POL.NBRANCH = @:CURREN_POLNBRANCH2 AND CURREN_POL.NPRODUCT = @:CURREN_POLNPRODUCT3 AND CURREN_POL.NPOLICY = @:CURREN_POLNPOLICY4 AND CURREN_POL.NCERTIF = @:CURREN_POLNCERTIF5", "CURREN_POL", "Linked.LatCombined")
                    .AddParameter("CURREN_POLSCERTYPE1", DbType.AnsiStringFixedLength, 0, (CURRENPOLSCERTYPE1 = String.Empty), CURRENPOLSCERTYPE1)
                    .AddParameter("CURREN_POLNBRANCH2", DbType.AnsiStringFixedLength, 0, (CURRENPOLNBRANCH2 = String.Empty), CURRENPOLNBRANCH2)
                    .AddParameter("CURREN_POLNPRODUCT3", DbType.AnsiStringFixedLength, 0, (CURRENPOLNPRODUCT3 = String.Empty), CURRENPOLNPRODUCT3)
                    .AddParameter("CURREN_POLNPOLICY4", DbType.AnsiStringFixedLength, 0, (CURRENPOLNPOLICY4 = String.Empty), CURRENPOLNPOLICY4)
                    .AddParameter("CURREN_POLNCERTIF5", DbType.AnsiStringFixedLength, 0, (CURRENPOLNCERTIF5 = String.Empty), CURRENPOLNCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "Curren_polSelectCommandActionCURREN_POL", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (Curren_polSelectCommandActionCURREN_POL)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function RolesTblDataLoad(ROLESSCERTYPE1 As String, ROLESNBRANCH2 As String, ROLESNPRODUCT3 As String, ROLESNPOLICY4 As String, ROLESNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.nRole = 0, .sClient = String.Empty, .nStatusRol = 0, .sSexClien = String.Empty, .dBirthDate = Date.MinValue, .nTypeRisk = 0, .nRating = 0, .nRoleDesc = String.Empty, .sClientDesc = String.Empty, .nStatusRolDesc = String.Empty, .sSexClienDesc = String.Empty, .nTypeRiskDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT ROLES.NROLE, ROLES.SCLIENT, ROLES.NSTATUSROL, ROLES.SSEXCLIEN, ROLES.DBIRTHDATE, ROLES.NTYPERISK, ROLES.NRATING, TABLE12.SDESCRIPT NROLEDESC, CLIENT.SCLIENAME SCLIENTDESC, TABLE5561.SDESCRIPT NSTATUSROLDESC, TABLE18.SDESCRIPT SSEXCLIENDESC, TABLE5639.SDESCRIPT NTYPERISKDESC FROM ROLES ROLES LEFT JOIN TABLE12 TABLE12 ON TABLE12.NROLE = ROLES.NROLE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = ROLES.SCLIENT LEFT JOIN TABLE5561 TABLE5561 ON TABLE5561.NSTATUSROL = ROLES.NSTATUSROL LEFT JOIN TABLE18 TABLE18 ON TABLE18.SSEXCLIEN = ROLES.SSEXCLIEN LEFT JOIN TABLE5639 TABLE5639 ON TABLE5639.NTYPERISK = ROLES.NTYPERISK  WHERE ROLES.SCERTYPE = @:ROLESSCERTYPE1 AND ROLES.NBRANCH = @:ROLESNBRANCH2 AND ROLES.NPRODUCT = @:ROLESNPRODUCT3 AND ROLES.NPOLICY = @:ROLESNPOLICY4 AND ROLES.NCERTIF = @:ROLESNCERTIF5", "ROLES", "Linked.LatCombined")
                    .AddParameter("ROLESSCERTYPE1", DbType.AnsiStringFixedLength, 0, (ROLESSCERTYPE1 = String.Empty), ROLESSCERTYPE1)
                    .AddParameter("ROLESNBRANCH2", DbType.AnsiStringFixedLength, 0, (ROLESNBRANCH2 = String.Empty), ROLESNBRANCH2)
                    .AddParameter("ROLESNPRODUCT3", DbType.AnsiStringFixedLength, 0, (ROLESNPRODUCT3 = String.Empty), ROLESNPRODUCT3)
                    .AddParameter("ROLESNPOLICY4", DbType.AnsiStringFixedLength, 0, (ROLESNPOLICY4 = String.Empty), ROLESNPOLICY4)
                    .AddParameter("ROLESNCERTIF5", DbType.AnsiStringFixedLength, 0, (ROLESNCERTIF5 = String.Empty), ROLESNCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.nRole = itemData.NumericValue("NROLE"), .sClient = itemData.StringValue("SCLIENT"), .nStatusRol = itemData.NumericValue("NSTATUSROL"), .sSexClien = itemData.StringValue("SSEXCLIEN"), .dBirthDate = itemData.DateTimeValue("DBIRTHDATE"), .nTypeRisk = itemData.NumericValue("NTYPERISK"), .nRating = itemData.NumericValue("NRATING"), .nRoleDesc = itemData.StringValue("NROLEDESC"), .sClientDesc = itemData.StringValue("SCLIENTDESC"), .nStatusRolDesc = itemData.StringValue("NSTATUSROLDESC"), .sSexClienDesc = itemData.StringValue("SSEXCLIENDESC"), .nTypeRiskDesc = itemData.StringValue("NTYPERISKDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "RolesTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (RolesTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function RolesTblDataCount(ROLESSCERTYPE1 As String, ROLESNBRANCH2 As String, ROLESNPRODUCT3 As String, ROLESNPOLICY4 As String, ROLESNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT ROLES.NROLE, ROLES.SCLIENT, ROLES.NSTATUSROL, ROLES.SSEXCLIEN, ROLES.DBIRTHDATE, ROLES.NTYPERISK, ROLES.NRATING, TABLE12.SDESCRIPT NROLEDESC, CLIENT.SCLIENAME SCLIENTDESC, TABLE5561.SDESCRIPT NSTATUSROLDESC, TABLE18.SDESCRIPT SSEXCLIENDESC, TABLE5639.SDESCRIPT NTYPERISKDESC FROM ROLES ROLES LEFT JOIN TABLE12 TABLE12 ON TABLE12.NROLE = ROLES.NROLE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = ROLES.SCLIENT LEFT JOIN TABLE5561 TABLE5561 ON TABLE5561.NSTATUSROL = ROLES.NSTATUSROL LEFT JOIN TABLE18 TABLE18 ON TABLE18.SSEXCLIEN = ROLES.SSEXCLIEN LEFT JOIN TABLE5639 TABLE5639 ON TABLE5639.NTYPERISK = ROLES.NTYPERISK  WHERE ROLES.SCERTYPE = @:ROLESSCERTYPE1 AND ROLES.NBRANCH = @:ROLESNBRANCH2 AND ROLES.NPRODUCT = @:ROLESNPRODUCT3 AND ROLES.NPOLICY = @:ROLESNPOLICY4 AND ROLES.NCERTIF = @:ROLESNCERTIF5)", "ROLES", "Linked.LatCombined")
                    .AddParameter("ROLESSCERTYPE1", DbType.AnsiStringFixedLength, 0, (ROLESSCERTYPE1 = String.Empty), ROLESSCERTYPE1)
                    .AddParameter("ROLESNBRANCH2", DbType.AnsiStringFixedLength, 0, (ROLESNBRANCH2 = String.Empty), ROLESNBRANCH2)
                    .AddParameter("ROLESNPRODUCT3", DbType.AnsiStringFixedLength, 0, (ROLESNPRODUCT3 = String.Empty), ROLESNPRODUCT3)
                    .AddParameter("ROLESNPOLICY4", DbType.AnsiStringFixedLength, 0, (ROLESNPOLICY4 = String.Empty), ROLESNPOLICY4)
                    .AddParameter("ROLESNCERTIF5", DbType.AnsiStringFixedLength, 0, (ROLESNCERTIF5 = String.Empty), ROLESNCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "RolesTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (RolesTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function RolesSelectCommandActionROLES(ROLESSCERTYPE1 As String, ROLESNBRANCH2 As String, ROLESNPRODUCT3 As String, ROLESNPOLICY4 As String, ROLESNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(ROLES.NROLE) COUNTDATA FROM ROLES ROLES LEFT JOIN TABLE12 TABLE12 ON TABLE12.NROLE = ROLES.NROLE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = ROLES.SCLIENT LEFT JOIN TABLE5561 TABLE5561 ON TABLE5561.NSTATUSROL = ROLES.NSTATUSROL LEFT JOIN TABLE18 TABLE18 ON TABLE18.SSEXCLIEN = ROLES.SSEXCLIEN LEFT JOIN TABLE5639 TABLE5639 ON TABLE5639.NTYPERISK = ROLES.NTYPERISK  WHERE ROLES.SCERTYPE = @:ROLESSCERTYPE1 AND ROLES.NBRANCH = @:ROLESNBRANCH2 AND ROLES.NPRODUCT = @:ROLESNPRODUCT3 AND ROLES.NPOLICY = @:ROLESNPOLICY4 AND ROLES.NCERTIF = @:ROLESNCERTIF5", "ROLES", "Linked.LatCombined")
                    .AddParameter("ROLESSCERTYPE1", DbType.AnsiStringFixedLength, 0, (ROLESSCERTYPE1 = String.Empty), ROLESSCERTYPE1)
                    .AddParameter("ROLESNBRANCH2", DbType.AnsiStringFixedLength, 0, (ROLESNBRANCH2 = String.Empty), ROLESNBRANCH2)
                    .AddParameter("ROLESNPRODUCT3", DbType.AnsiStringFixedLength, 0, (ROLESNPRODUCT3 = String.Empty), ROLESNPRODUCT3)
                    .AddParameter("ROLESNPOLICY4", DbType.AnsiStringFixedLength, 0, (ROLESNPOLICY4 = String.Empty), ROLESNPOLICY4)
                    .AddParameter("ROLESNCERTIF5", DbType.AnsiStringFixedLength, 0, (ROLESNCERTIF5 = String.Empty), ROLESNCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "RolesSelectCommandActionROLES", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (RolesSelectCommandActionROLES)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function SUM_INSURTblDataLoad(SUMINSURSCERTYPE1 As String, SUMINSURNBRANCH2 As String, SUMINSURNPRODUCT3 As String, SUMINSURNPOLICY4 As String, SUMINSURNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NSUMINS_COD = 0, .NSUMINS_REAL = 0, .NCOINSURAN = 0, .NSUM_INSUR = 0, .NSUMINS_CODDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT SUM_INSUR.NSUMINS_COD, SUM_INSUR.NSUMINS_REAL, SUM_INSUR.NCOINSURAN, SUM_INSUR.NSUM_INSUR, BAS_SUMINS.SDESCRIPT NSUMINS_CODDESC FROM SUM_INSUR SUM_INSUR LEFT JOIN BAS_SUMINS BAS_SUMINS ON BAS_SUMINS.NBRANCH = SUM_INSUR.NBRANCH  AND BAS_SUMINS.NPRODUCT = SUM_INSUR.NPRODUCT  AND BAS_SUMINS.NSUMINS_CO = SUM_INSUR.NSUMINS_COD  WHERE SUM_INSUR.SCERTYPE = @:SUM_INSURSCERTYPE1 AND SUM_INSUR.NBRANCH = @:SUM_INSURNBRANCH2 AND SUM_INSUR.NPRODUCT = @:SUM_INSURNPRODUCT3 AND SUM_INSUR.NPOLICY = @:SUM_INSURNPOLICY4 AND SUM_INSUR.NCERTIF = @:SUM_INSURNCERTIF5", "SUM_INSUR", "Linked.LatCombined")
                    .AddParameter("SUM_INSURSCERTYPE1", DbType.AnsiStringFixedLength, 0, (SUMINSURSCERTYPE1 = String.Empty), SUMINSURSCERTYPE1)
                    .AddParameter("SUM_INSURNBRANCH2", DbType.AnsiStringFixedLength, 0, (SUMINSURNBRANCH2 = String.Empty), SUMINSURNBRANCH2)
                    .AddParameter("SUM_INSURNPRODUCT3", DbType.AnsiStringFixedLength, 0, (SUMINSURNPRODUCT3 = String.Empty), SUMINSURNPRODUCT3)
                    .AddParameter("SUM_INSURNPOLICY4", DbType.AnsiStringFixedLength, 0, (SUMINSURNPOLICY4 = String.Empty), SUMINSURNPOLICY4)
                    .AddParameter("SUM_INSURNCERTIF5", DbType.AnsiStringFixedLength, 0, (SUMINSURNCERTIF5 = String.Empty), SUMINSURNCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NSUMINS_COD = itemData.NumericValue("NSUMINS_COD"), .NSUMINS_REAL = itemData.NumericValue("NSUMINS_REAL"), .NCOINSURAN = itemData.NumericValue("NCOINSURAN"), .NSUM_INSUR = itemData.NumericValue("NSUM_INSUR"), .NSUMINS_CODDesc = itemData.StringValue("NSUMINS_CODDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "SUM_INSURTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (SUM_INSURTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function SUM_INSURTblDataCount(SUMINSURSCERTYPE1 As String, SUMINSURNBRANCH2 As String, SUMINSURNPRODUCT3 As String, SUMINSURNPOLICY4 As String, SUMINSURNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT SUM_INSUR.NSUMINS_COD, SUM_INSUR.NSUMINS_REAL, SUM_INSUR.NCOINSURAN, SUM_INSUR.NSUM_INSUR, BAS_SUMINS.SDESCRIPT NSUMINS_CODDESC FROM SUM_INSUR SUM_INSUR LEFT JOIN BAS_SUMINS BAS_SUMINS ON BAS_SUMINS.NBRANCH = SUM_INSUR.NBRANCH  AND BAS_SUMINS.NPRODUCT = SUM_INSUR.NPRODUCT  AND BAS_SUMINS.NSUMINS_CO = SUM_INSUR.NSUMINS_COD  WHERE SUM_INSUR.SCERTYPE = @:SUM_INSURSCERTYPE1 AND SUM_INSUR.NBRANCH = @:SUM_INSURNBRANCH2 AND SUM_INSUR.NPRODUCT = @:SUM_INSURNPRODUCT3 AND SUM_INSUR.NPOLICY = @:SUM_INSURNPOLICY4 AND SUM_INSUR.NCERTIF = @:SUM_INSURNCERTIF5)", "SUM_INSUR", "Linked.LatCombined")
                    .AddParameter("SUM_INSURSCERTYPE1", DbType.AnsiStringFixedLength, 0, (SUMINSURSCERTYPE1 = String.Empty), SUMINSURSCERTYPE1)
                    .AddParameter("SUM_INSURNBRANCH2", DbType.AnsiStringFixedLength, 0, (SUMINSURNBRANCH2 = String.Empty), SUMINSURNBRANCH2)
                    .AddParameter("SUM_INSURNPRODUCT3", DbType.AnsiStringFixedLength, 0, (SUMINSURNPRODUCT3 = String.Empty), SUMINSURNPRODUCT3)
                    .AddParameter("SUM_INSURNPOLICY4", DbType.AnsiStringFixedLength, 0, (SUMINSURNPOLICY4 = String.Empty), SUMINSURNPOLICY4)
                    .AddParameter("SUM_INSURNCERTIF5", DbType.AnsiStringFixedLength, 0, (SUMINSURNCERTIF5 = String.Empty), SUMINSURNCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "SUM_INSURTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (SUM_INSURTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function SUM_INSURSelectCommandActionSUM_INSUR(SUMINSURSCERTYPE1 As String, SUMINSURNBRANCH2 As String, SUMINSURNPRODUCT3 As String, SUMINSURNPOLICY4 As String, SUMINSURNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(SUM_INSUR.NSUMINS_COD) COUNTDATA FROM SUM_INSUR SUM_INSUR LEFT JOIN BAS_SUMINS BAS_SUMINS ON BAS_SUMINS.NBRANCH = SUM_INSUR.NBRANCH  AND BAS_SUMINS.NPRODUCT = SUM_INSUR.NPRODUCT  AND BAS_SUMINS.NSUMINS_CO = SUM_INSUR.NSUMINS_COD  WHERE SUM_INSUR.SCERTYPE = @:SUM_INSURSCERTYPE1 AND SUM_INSUR.NBRANCH = @:SUM_INSURNBRANCH2 AND SUM_INSUR.NPRODUCT = @:SUM_INSURNPRODUCT3 AND SUM_INSUR.NPOLICY = @:SUM_INSURNPOLICY4 AND SUM_INSUR.NCERTIF = @:SUM_INSURNCERTIF5", "SUM_INSUR", "Linked.LatCombined")
                    .AddParameter("SUM_INSURSCERTYPE1", DbType.AnsiStringFixedLength, 0, (SUMINSURSCERTYPE1 = String.Empty), SUMINSURSCERTYPE1)
                    .AddParameter("SUM_INSURNBRANCH2", DbType.AnsiStringFixedLength, 0, (SUMINSURNBRANCH2 = String.Empty), SUMINSURNBRANCH2)
                    .AddParameter("SUM_INSURNPRODUCT3", DbType.AnsiStringFixedLength, 0, (SUMINSURNPRODUCT3 = String.Empty), SUMINSURNPRODUCT3)
                    .AddParameter("SUM_INSURNPOLICY4", DbType.AnsiStringFixedLength, 0, (SUMINSURNPOLICY4 = String.Empty), SUMINSURNPOLICY4)
                    .AddParameter("SUM_INSURNCERTIF5", DbType.AnsiStringFixedLength, 0, (SUMINSURNCERTIF5 = String.Empty), SUMINSURNCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "SUM_INSURSelectCommandActionSUM_INSUR", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (SUM_INSURSelectCommandActionSUM_INSUR)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function CoverTblDataLoad(COVERSCERTYPE1 As String, COVERNBRANCH2 As String, COVERNPRODUCT3 As String, COVERNPOLICY4 As String, COVERNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.nModulec = 0, .nCover = 0, .nRole = 0, .sClient = String.Empty, .nCurrency = 0, .nCapital = 0, .nPremium = 0, .nModulecDesc = String.Empty, .nCoverDesc = String.Empty, .nRoleDesc = String.Empty, .sClientDesc = String.Empty, .nCurrencyDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT COVER.NMODULEC, COVER.NCOVER, COVER.NROLE, COVER.SCLIENT, COVER.NCURRENCY, COVER.NCAPITAL, COVER.NPREMIUM, TAB_MODUL.SDESCRIPT NMODULECDESC, GCV_COVERAGEDESCRIPTION.SDESCRIPT NCOVERDESC, TABLE12.SDESCRIPT NROLEDESC, CLIENT.SCLIENAME SCLIENTDESC, TABLE11.SDESCRIPT NCURRENCYDESC FROM COVER COVER LEFT JOIN TAB_MODUL TAB_MODUL ON TAB_MODUL.NBRANCH = COVER.NBRANCH  AND TAB_MODUL.NPRODUCT = COVER.NPRODUCT  AND TAB_MODUL.NMODULEC = COVER.NMODULEC  AND TAB_MODUL.DEFFECDATE = COVER.DEFFECDATE LEFT JOIN GCV_COVERAGEDESCRIPTION GCV_COVERAGEDESCRIPTION ON GCV_COVERAGEDESCRIPTION.NBRANCH = COVER.NBRANCH  AND GCV_COVERAGEDESCRIPTION.NPRODUCT = COVER.NPRODUCT  AND GCV_COVERAGEDESCRIPTION.NCOVER = COVER.NCOVER LEFT JOIN TABLE12 TABLE12 ON TABLE12.NROLE = COVER.NROLE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = COVER.SCLIENT LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = COVER.NCURRENCY  WHERE COVER.SCERTYPE = @:COVERSCERTYPE1 AND COVER.NBRANCH = @:COVERNBRANCH2 AND COVER.NPRODUCT = @:COVERNPRODUCT3 AND COVER.NPOLICY = @:COVERNPOLICY4 AND COVER.NCERTIF = @:COVERNCERTIF5", "COVER", "Linked.LatCombined")
                    .AddParameter("COVERSCERTYPE1", DbType.AnsiStringFixedLength, 0, (COVERSCERTYPE1 = String.Empty), COVERSCERTYPE1)
                    .AddParameter("COVERNBRANCH2", DbType.AnsiStringFixedLength, 0, (COVERNBRANCH2 = String.Empty), COVERNBRANCH2)
                    .AddParameter("COVERNPRODUCT3", DbType.AnsiStringFixedLength, 0, (COVERNPRODUCT3 = String.Empty), COVERNPRODUCT3)
                    .AddParameter("COVERNPOLICY4", DbType.AnsiStringFixedLength, 0, (COVERNPOLICY4 = String.Empty), COVERNPOLICY4)
                    .AddParameter("COVERNCERTIF5", DbType.AnsiStringFixedLength, 0, (COVERNCERTIF5 = String.Empty), COVERNCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.nModulec = itemData.NumericValue("NMODULEC"), .nCover = itemData.NumericValue("NCOVER"), .nRole = itemData.NumericValue("NROLE"), .sClient = itemData.StringValue("SCLIENT"), .nCurrency = itemData.NumericValue("NCURRENCY"), .nCapital = itemData.NumericValue("NCAPITAL"), .nPremium = itemData.NumericValue("NPREMIUM"), .nModulecDesc = itemData.StringValue("NMODULECDESC"), .nCoverDesc = itemData.StringValue("NCOVERDESC"), .nRoleDesc = itemData.StringValue("NROLEDESC"), .sClientDesc = itemData.StringValue("SCLIENTDESC"), .nCurrencyDesc = itemData.StringValue("NCURRENCYDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "CoverTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CoverTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function CoverTblDataCount(COVERSCERTYPE1 As String, COVERNBRANCH2 As String, COVERNPRODUCT3 As String, COVERNPOLICY4 As String, COVERNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT COVER.NMODULEC, COVER.NCOVER, COVER.NROLE, COVER.SCLIENT, COVER.NCURRENCY, COVER.NCAPITAL, COVER.NPREMIUM, TAB_MODUL.SDESCRIPT NMODULECDESC, GCV_COVERAGEDESCRIPTION.SDESCRIPT NCOVERDESC, TABLE12.SDESCRIPT NROLEDESC, CLIENT.SCLIENAME SCLIENTDESC, TABLE11.SDESCRIPT NCURRENCYDESC FROM COVER COVER LEFT JOIN TAB_MODUL TAB_MODUL ON TAB_MODUL.NBRANCH = COVER.NBRANCH  AND TAB_MODUL.NPRODUCT = COVER.NPRODUCT  AND TAB_MODUL.NMODULEC = COVER.NMODULEC  AND TAB_MODUL.DEFFECDATE = COVER.DEFFECDATE LEFT JOIN GCV_COVERAGEDESCRIPTION GCV_COVERAGEDESCRIPTION ON GCV_COVERAGEDESCRIPTION.NBRANCH = COVER.NBRANCH  AND GCV_COVERAGEDESCRIPTION.NPRODUCT = COVER.NPRODUCT  AND GCV_COVERAGEDESCRIPTION.NCOVER = COVER.NCOVER LEFT JOIN TABLE12 TABLE12 ON TABLE12.NROLE = COVER.NROLE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = COVER.SCLIENT LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = COVER.NCURRENCY  WHERE COVER.SCERTYPE = @:COVERSCERTYPE1 AND COVER.NBRANCH = @:COVERNBRANCH2 AND COVER.NPRODUCT = @:COVERNPRODUCT3 AND COVER.NPOLICY = @:COVERNPOLICY4 AND COVER.NCERTIF = @:COVERNCERTIF5)", "COVER", "Linked.LatCombined")
                    .AddParameter("COVERSCERTYPE1", DbType.AnsiStringFixedLength, 0, (COVERSCERTYPE1 = String.Empty), COVERSCERTYPE1)
                    .AddParameter("COVERNBRANCH2", DbType.AnsiStringFixedLength, 0, (COVERNBRANCH2 = String.Empty), COVERNBRANCH2)
                    .AddParameter("COVERNPRODUCT3", DbType.AnsiStringFixedLength, 0, (COVERNPRODUCT3 = String.Empty), COVERNPRODUCT3)
                    .AddParameter("COVERNPOLICY4", DbType.AnsiStringFixedLength, 0, (COVERNPOLICY4 = String.Empty), COVERNPOLICY4)
                    .AddParameter("COVERNCERTIF5", DbType.AnsiStringFixedLength, 0, (COVERNCERTIF5 = String.Empty), COVERNCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "CoverTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CoverTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function CoverSelectCommandActionCOVER(COVERSCERTYPE1 As String, COVERNBRANCH2 As String, COVERNPRODUCT3 As String, COVERNPOLICY4 As String, COVERNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(COVER.NMODULEC) COUNTDATA FROM COVER COVER LEFT JOIN TAB_MODUL TAB_MODUL ON TAB_MODUL.NBRANCH = COVER.NBRANCH  AND TAB_MODUL.NPRODUCT = COVER.NPRODUCT  AND TAB_MODUL.NMODULEC = COVER.NMODULEC  AND TAB_MODUL.DEFFECDATE = COVER.DEFFECDATE LEFT JOIN GCV_COVERAGEDESCRIPTION GCV_COVERAGEDESCRIPTION ON GCV_COVERAGEDESCRIPTION.NBRANCH = COVER.NBRANCH  AND GCV_COVERAGEDESCRIPTION.NPRODUCT = COVER.NPRODUCT  AND GCV_COVERAGEDESCRIPTION.NCOVER = COVER.NCOVER LEFT JOIN TABLE12 TABLE12 ON TABLE12.NROLE = COVER.NROLE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = COVER.SCLIENT LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = COVER.NCURRENCY  WHERE COVER.SCERTYPE = @:COVERSCERTYPE1 AND COVER.NBRANCH = @:COVERNBRANCH2 AND COVER.NPRODUCT = @:COVERNPRODUCT3 AND COVER.NPOLICY = @:COVERNPOLICY4 AND COVER.NCERTIF = @:COVERNCERTIF5", "COVER", "Linked.LatCombined")
                    .AddParameter("COVERSCERTYPE1", DbType.AnsiStringFixedLength, 0, (COVERSCERTYPE1 = String.Empty), COVERSCERTYPE1)
                    .AddParameter("COVERNBRANCH2", DbType.AnsiStringFixedLength, 0, (COVERNBRANCH2 = String.Empty), COVERNBRANCH2)
                    .AddParameter("COVERNPRODUCT3", DbType.AnsiStringFixedLength, 0, (COVERNPRODUCT3 = String.Empty), COVERNPRODUCT3)
                    .AddParameter("COVERNPOLICY4", DbType.AnsiStringFixedLength, 0, (COVERNPOLICY4 = String.Empty), COVERNPOLICY4)
                    .AddParameter("COVERNCERTIF5", DbType.AnsiStringFixedLength, 0, (COVERNCERTIF5 = String.Empty), COVERNCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "CoverSelectCommandActionCOVER", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (CoverSelectCommandActionCOVER)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function REINSURANTblDataLoad(REINSURANSCERTYPE3 As String, REINSURANNBRANCH4 As String, REINSURANNPRODUCT5 As String, REINSURANNPOLICY6 As String, REINSURANNCERTIF7 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NBRANCH_REI = 0, .NTYPE_REIN = 0, .NCAPITAL = 0, .NCURRENCY = 0, .NSHARE = 0, .NBRANCH_REIDesc = String.Empty, .NTYPE_REINDesc = String.Empty, .NCURRENCYDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT REINSURAN.NBRANCH_REI, REINSURAN.NTYPE_REIN, REINSURAN.NCAPITAL, REINSURAN.NCURRENCY, REINSURAN.NSHARE, TABLE5000.SDESCRIPT NBRANCH_REIDESC, TABLE173.SDESCRIPT NTYPE_REINDESC, TABLE11.SSHORT_DES NCURRENCYDESC FROM REINSURAN REINSURAN LEFT JOIN TABLE5000 TABLE5000 ON TABLE5000.NBRANCH_REI = REINSURAN.NBRANCH_REI LEFT JOIN TABLE173 TABLE173 ON TABLE173.NTYPE_REIN = REINSURAN.NTYPE_REIN LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = REINSURAN.NCURRENCY  WHERE REINSURAN.NCAPITAL > 0 AND REINSURAN.NTYPE_REIN <> 8 AND REINSURAN.SCERTYPE = @:REINSURANSCERTYPE3 AND REINSURAN.NBRANCH = @:REINSURANNBRANCH4 AND REINSURAN.NPRODUCT = @:REINSURANNPRODUCT5 AND REINSURAN.NPOLICY = @:REINSURANNPOLICY6 AND REINSURAN.NCERTIF = @:REINSURANNCERTIF7", "REINSURAN", "Linked.LatCombined")
                    .AddParameter("REINSURANSCERTYPE3", DbType.AnsiStringFixedLength, 0, (REINSURANSCERTYPE3 = String.Empty), REINSURANSCERTYPE3)
                    .AddParameter("REINSURANNBRANCH4", DbType.AnsiStringFixedLength, 0, (REINSURANNBRANCH4 = String.Empty), REINSURANNBRANCH4)
                    .AddParameter("REINSURANNPRODUCT5", DbType.AnsiStringFixedLength, 0, (REINSURANNPRODUCT5 = String.Empty), REINSURANNPRODUCT5)
                    .AddParameter("REINSURANNPOLICY6", DbType.AnsiStringFixedLength, 0, (REINSURANNPOLICY6 = String.Empty), REINSURANNPOLICY6)
                    .AddParameter("REINSURANNCERTIF7", DbType.AnsiStringFixedLength, 0, (REINSURANNCERTIF7 = String.Empty), REINSURANNCERTIF7)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NBRANCH_REI = itemData.NumericValue("NBRANCH_REI"), .NTYPE_REIN = itemData.NumericValue("NTYPE_REIN"), .NCAPITAL = itemData.NumericValue("NCAPITAL"), .NCURRENCY = itemData.NumericValue("NCURRENCY"), .NSHARE = itemData.NumericValue("NSHARE"), .NBRANCH_REIDesc = itemData.StringValue("NBRANCH_REIDESC"), .NTYPE_REINDesc = itemData.StringValue("NTYPE_REINDESC"), .NCURRENCYDesc = itemData.StringValue("NCURRENCYDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "REINSURANTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (REINSURANTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function REINSURANTblDataCount(REINSURANSCERTYPE3 As String, REINSURANNBRANCH4 As String, REINSURANNPRODUCT5 As String, REINSURANNPOLICY6 As String, REINSURANNCERTIF7 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT REINSURAN.NBRANCH_REI, REINSURAN.NTYPE_REIN, REINSURAN.NCAPITAL, REINSURAN.NCURRENCY, REINSURAN.NSHARE, TABLE5000.SDESCRIPT NBRANCH_REIDESC, TABLE173.SDESCRIPT NTYPE_REINDESC, TABLE11.SSHORT_DES NCURRENCYDESC FROM REINSURAN REINSURAN LEFT JOIN TABLE5000 TABLE5000 ON TABLE5000.NBRANCH_REI = REINSURAN.NBRANCH_REI LEFT JOIN TABLE173 TABLE173 ON TABLE173.NTYPE_REIN = REINSURAN.NTYPE_REIN LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = REINSURAN.NCURRENCY  WHERE REINSURAN.NCAPITAL > 0 AND REINSURAN.NTYPE_REIN <> 8 AND REINSURAN.SCERTYPE = @:REINSURANSCERTYPE3 AND REINSURAN.NBRANCH = @:REINSURANNBRANCH4 AND REINSURAN.NPRODUCT = @:REINSURANNPRODUCT5 AND REINSURAN.NPOLICY = @:REINSURANNPOLICY6 AND REINSURAN.NCERTIF = @:REINSURANNCERTIF7)", "REINSURAN", "Linked.LatCombined")
                    .AddParameter("REINSURANSCERTYPE3", DbType.AnsiStringFixedLength, 0, (REINSURANSCERTYPE3 = String.Empty), REINSURANSCERTYPE3)
                    .AddParameter("REINSURANNBRANCH4", DbType.AnsiStringFixedLength, 0, (REINSURANNBRANCH4 = String.Empty), REINSURANNBRANCH4)
                    .AddParameter("REINSURANNPRODUCT5", DbType.AnsiStringFixedLength, 0, (REINSURANNPRODUCT5 = String.Empty), REINSURANNPRODUCT5)
                    .AddParameter("REINSURANNPOLICY6", DbType.AnsiStringFixedLength, 0, (REINSURANNPOLICY6 = String.Empty), REINSURANNPOLICY6)
                    .AddParameter("REINSURANNCERTIF7", DbType.AnsiStringFixedLength, 0, (REINSURANNCERTIF7 = String.Empty), REINSURANNCERTIF7)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "REINSURANTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (REINSURANTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function REINSURANSelectCommandActionREINSURAN(REINSURANSCERTYPE3 As String, REINSURANNBRANCH4 As String, REINSURANNPRODUCT5 As String, REINSURANNPOLICY6 As String, REINSURANNCERTIF7 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(REINSURAN.NBRANCH_REI) COUNTDATA FROM REINSURAN REINSURAN LEFT JOIN TABLE5000 TABLE5000 ON TABLE5000.NBRANCH_REI = REINSURAN.NBRANCH_REI LEFT JOIN TABLE173 TABLE173 ON TABLE173.NTYPE_REIN = REINSURAN.NTYPE_REIN LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = REINSURAN.NCURRENCY  WHERE REINSURAN.NCAPITAL > 0 AND REINSURAN.NTYPE_REIN <> 8 AND REINSURAN.SCERTYPE = @:REINSURANSCERTYPE3 AND REINSURAN.NBRANCH = @:REINSURANNBRANCH4 AND REINSURAN.NPRODUCT = @:REINSURANNPRODUCT5 AND REINSURAN.NPOLICY = @:REINSURANNPOLICY6 AND REINSURAN.NCERTIF = @:REINSURANNCERTIF7", "REINSURAN", "Linked.LatCombined")
                    .AddParameter("REINSURANSCERTYPE3", DbType.AnsiStringFixedLength, 0, (REINSURANSCERTYPE3 = String.Empty), REINSURANSCERTYPE3)
                    .AddParameter("REINSURANNBRANCH4", DbType.AnsiStringFixedLength, 0, (REINSURANNBRANCH4 = String.Empty), REINSURANNBRANCH4)
                    .AddParameter("REINSURANNPRODUCT5", DbType.AnsiStringFixedLength, 0, (REINSURANNPRODUCT5 = String.Empty), REINSURANNPRODUCT5)
                    .AddParameter("REINSURANNPOLICY6", DbType.AnsiStringFixedLength, 0, (REINSURANNPOLICY6 = String.Empty), REINSURANNPOLICY6)
                    .AddParameter("REINSURANNCERTIF7", DbType.AnsiStringFixedLength, 0, (REINSURANNCERTIF7 = String.Empty), REINSURANNCERTIF7)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "REINSURANSelectCommandActionREINSURAN", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (REINSURANSelectCommandActionREINSURAN)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function REINSURAN2TblDataLoad(REINSURANSCERTYPE3 As String, REINSURANNBRANCH4 As String, REINSURANNPRODUCT5 As String, REINSURANNPOLICY6 As String, REINSURANNCERTIF7 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NBRANCH_REI = 0, .NCOMPANY = 0, .NCAPITAL = 0, .NCURRENCY = 0, .NSHARE = 0, .NCOMMISSI = 0, .NBRANCH_REIDesc = String.Empty, .NCURRENCYDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT REINSURAN.NBRANCH_REI, REINSURAN.NCOMPANY, REINSURAN.NCAPITAL, REINSURAN.NCURRENCY, REINSURAN.NSHARE, REINSURAN.NCOMMISSI, TABLE5000.SDESCRIPT NBRANCH_REIDESC, TABLE11.SSHORT_DES NCURRENCYDESC FROM REINSURAN REINSURAN LEFT JOIN TABLE5000 TABLE5000 ON TABLE5000.NBRANCH_REI = REINSURAN.NBRANCH_REI LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = REINSURAN.NCURRENCY  WHERE REINSURAN.NCAPITAL > 0 AND REINSURAN.NTYPE_REIN = 8 AND REINSURAN.SCERTYPE = @:REINSURANSCERTYPE3 AND REINSURAN.NBRANCH = @:REINSURANNBRANCH4 AND REINSURAN.NPRODUCT = @:REINSURANNPRODUCT5 AND REINSURAN.NPOLICY = @:REINSURANNPOLICY6 AND REINSURAN.NCERTIF = @:REINSURANNCERTIF7", "REINSURAN", "Linked.LatCombined")
                    .AddParameter("REINSURANSCERTYPE3", DbType.AnsiStringFixedLength, 0, (REINSURANSCERTYPE3 = String.Empty), REINSURANSCERTYPE3)
                    .AddParameter("REINSURANNBRANCH4", DbType.AnsiStringFixedLength, 0, (REINSURANNBRANCH4 = String.Empty), REINSURANNBRANCH4)
                    .AddParameter("REINSURANNPRODUCT5", DbType.AnsiStringFixedLength, 0, (REINSURANNPRODUCT5 = String.Empty), REINSURANNPRODUCT5)
                    .AddParameter("REINSURANNPOLICY6", DbType.AnsiStringFixedLength, 0, (REINSURANNPOLICY6 = String.Empty), REINSURANNPOLICY6)
                    .AddParameter("REINSURANNCERTIF7", DbType.AnsiStringFixedLength, 0, (REINSURANNCERTIF7 = String.Empty), REINSURANNCERTIF7)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NBRANCH_REI = itemData.NumericValue("NBRANCH_REI"), .NCOMPANY = itemData.NumericValue("NCOMPANY"), .NCAPITAL = itemData.NumericValue("NCAPITAL"), .NCURRENCY = itemData.NumericValue("NCURRENCY"), .NSHARE = itemData.NumericValue("NSHARE"), .NCOMMISSI = itemData.NumericValue("NCOMMISSI"), .NBRANCH_REIDesc = itemData.StringValue("NBRANCH_REIDESC"), .NCURRENCYDesc = itemData.StringValue("NCURRENCYDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "REINSURAN2TblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (REINSURAN2TblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function REINSURAN2TblDataCount(REINSURANSCERTYPE3 As String, REINSURANNBRANCH4 As String, REINSURANNPRODUCT5 As String, REINSURANNPOLICY6 As String, REINSURANNCERTIF7 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT REINSURAN.NBRANCH_REI, REINSURAN.NCOMPANY, REINSURAN.NCAPITAL, REINSURAN.NCURRENCY, REINSURAN.NSHARE, REINSURAN.NCOMMISSI, TABLE5000.SDESCRIPT NBRANCH_REIDESC, TABLE11.SSHORT_DES NCURRENCYDESC FROM REINSURAN REINSURAN LEFT JOIN TABLE5000 TABLE5000 ON TABLE5000.NBRANCH_REI = REINSURAN.NBRANCH_REI LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = REINSURAN.NCURRENCY  WHERE REINSURAN.NCAPITAL > 0 AND REINSURAN.NTYPE_REIN = 8 AND REINSURAN.SCERTYPE = @:REINSURANSCERTYPE3 AND REINSURAN.NBRANCH = @:REINSURANNBRANCH4 AND REINSURAN.NPRODUCT = @:REINSURANNPRODUCT5 AND REINSURAN.NPOLICY = @:REINSURANNPOLICY6 AND REINSURAN.NCERTIF = @:REINSURANNCERTIF7)", "REINSURAN", "Linked.LatCombined")
                    .AddParameter("REINSURANSCERTYPE3", DbType.AnsiStringFixedLength, 0, (REINSURANSCERTYPE3 = String.Empty), REINSURANSCERTYPE3)
                    .AddParameter("REINSURANNBRANCH4", DbType.AnsiStringFixedLength, 0, (REINSURANNBRANCH4 = String.Empty), REINSURANNBRANCH4)
                    .AddParameter("REINSURANNPRODUCT5", DbType.AnsiStringFixedLength, 0, (REINSURANNPRODUCT5 = String.Empty), REINSURANNPRODUCT5)
                    .AddParameter("REINSURANNPOLICY6", DbType.AnsiStringFixedLength, 0, (REINSURANNPOLICY6 = String.Empty), REINSURANNPOLICY6)
                    .AddParameter("REINSURANNCERTIF7", DbType.AnsiStringFixedLength, 0, (REINSURANNCERTIF7 = String.Empty), REINSURANNCERTIF7)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "REINSURAN2TblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (REINSURAN2TblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function REINSURAN2SelectCommandActionREINSURAN(REINSURANSCERTYPE3 As String, REINSURANNBRANCH4 As String, REINSURANNPRODUCT5 As String, REINSURANNPOLICY6 As String, REINSURANNCERTIF7 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(REINSURAN.NBRANCH_REI) COUNTDATA FROM REINSURAN REINSURAN LEFT JOIN TABLE5000 TABLE5000 ON TABLE5000.NBRANCH_REI = REINSURAN.NBRANCH_REI LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = REINSURAN.NCURRENCY  WHERE REINSURAN.NCAPITAL > 0 AND REINSURAN.NTYPE_REIN = 8 AND REINSURAN.SCERTYPE = @:REINSURANSCERTYPE3 AND REINSURAN.NBRANCH = @:REINSURANNBRANCH4 AND REINSURAN.NPRODUCT = @:REINSURANNPRODUCT5 AND REINSURAN.NPOLICY = @:REINSURANNPOLICY6 AND REINSURAN.NCERTIF = @:REINSURANNCERTIF7", "REINSURAN", "Linked.LatCombined")
                    .AddParameter("REINSURANSCERTYPE3", DbType.AnsiStringFixedLength, 0, (REINSURANSCERTYPE3 = String.Empty), REINSURANSCERTYPE3)
                    .AddParameter("REINSURANNBRANCH4", DbType.AnsiStringFixedLength, 0, (REINSURANNBRANCH4 = String.Empty), REINSURANNBRANCH4)
                    .AddParameter("REINSURANNPRODUCT5", DbType.AnsiStringFixedLength, 0, (REINSURANNPRODUCT5 = String.Empty), REINSURANNPRODUCT5)
                    .AddParameter("REINSURANNPOLICY6", DbType.AnsiStringFixedLength, 0, (REINSURANNPOLICY6 = String.Empty), REINSURANNPOLICY6)
                    .AddParameter("REINSURANNCERTIF7", DbType.AnsiStringFixedLength, 0, (REINSURANNCERTIF7 = String.Empty), REINSURANNCERTIF7)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "REINSURAN2SelectCommandActionREINSURAN", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (REINSURAN2SelectCommandActionREINSURAN)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function Disc_xpremTblDataLoad(DISCXPREMSCERTYPE1 As String, DISCXPREMNBRANCH2 As String, DISCXPREMNPRODUCT3 As String, DISCXPREMNPOLICY4 As String, DISCXPREMNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.nDisc_code = 0, .sAgree = String.Empty, .nCause = 0, .nPercent = 0, .nCurrency = 0, .nAmount = 0, .nDisc_codeDesc = String.Empty, .nCauseDesc = String.Empty, .nCurrencyDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT DISC_XPREM.NDISC_CODE, DISC_XPREM.SAGREE, DISC_XPREM.NCAUSE, DISC_XPREM.NPERCENT, DISC_XPREM.NCURRENCY, DISC_XPREM.NAMOUNT, DISCO_EXPR.SSHORT_DES NDISC_CODEDESC, TABLE5631.SDESCRIPT NCAUSEDESC, TABLE11.SDESCRIPT NCURRENCYDESC FROM DISC_XPREM DISC_XPREM LEFT JOIN DISCO_EXPR DISCO_EXPR ON DISCO_EXPR.NBRANCH = DISC_XPREM.NBRANCH  AND DISCO_EXPR.NPRODUCT = DISC_XPREM.NPRODUCT  AND DISCO_EXPR.NDISEXPRC = DISC_XPREM.NDISC_CODE LEFT JOIN TABLE5631 TABLE5631 ON TABLE5631.NCAUSE = DISC_XPREM.NCAUSE LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = DISC_XPREM.NCURRENCY  WHERE DISC_XPREM.SCERTYPE = @:DISC_XPREMSCERTYPE1 AND DISC_XPREM.NBRANCH = @:DISC_XPREMNBRANCH2 AND DISC_XPREM.NPRODUCT = @:DISC_XPREMNPRODUCT3 AND DISC_XPREM.NPOLICY = @:DISC_XPREMNPOLICY4 AND DISC_XPREM.NCERTIF = @:DISC_XPREMNCERTIF5", "DISC_XPREM", "Linked.LatCombined")
                    .AddParameter("DISC_XPREMSCERTYPE1", DbType.AnsiStringFixedLength, 0, (DISCXPREMSCERTYPE1 = String.Empty), DISCXPREMSCERTYPE1)
                    .AddParameter("DISC_XPREMNBRANCH2", DbType.AnsiStringFixedLength, 0, (DISCXPREMNBRANCH2 = String.Empty), DISCXPREMNBRANCH2)
                    .AddParameter("DISC_XPREMNPRODUCT3", DbType.AnsiStringFixedLength, 0, (DISCXPREMNPRODUCT3 = String.Empty), DISCXPREMNPRODUCT3)
                    .AddParameter("DISC_XPREMNPOLICY4", DbType.AnsiStringFixedLength, 0, (DISCXPREMNPOLICY4 = String.Empty), DISCXPREMNPOLICY4)
                    .AddParameter("DISC_XPREMNCERTIF5", DbType.AnsiStringFixedLength, 0, (DISCXPREMNCERTIF5 = String.Empty), DISCXPREMNCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.nDisc_code = itemData.NumericValue("NDISC_CODE"), .sAgree = itemData.StringValue("SAGREE"), .nCause = itemData.NumericValue("NCAUSE"), .nPercent = itemData.NumericValue("NPERCENT"), .nCurrency = itemData.NumericValue("NCURRENCY"), .nAmount = itemData.NumericValue("NAMOUNT"), .nDisc_codeDesc = itemData.StringValue("NDISC_CODEDESC"), .nCauseDesc = itemData.StringValue("NCAUSEDESC"), .nCurrencyDesc = itemData.StringValue("NCURRENCYDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "Disc_xpremTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (Disc_xpremTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function Disc_xpremTblDataCount(DISCXPREMSCERTYPE1 As String, DISCXPREMNBRANCH2 As String, DISCXPREMNPRODUCT3 As String, DISCXPREMNPOLICY4 As String, DISCXPREMNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT DISC_XPREM.NDISC_CODE, DISC_XPREM.SAGREE, DISC_XPREM.NCAUSE, DISC_XPREM.NPERCENT, DISC_XPREM.NCURRENCY, DISC_XPREM.NAMOUNT, DISCO_EXPR.SSHORT_DES NDISC_CODEDESC, TABLE5631.SDESCRIPT NCAUSEDESC, TABLE11.SDESCRIPT NCURRENCYDESC FROM DISC_XPREM DISC_XPREM LEFT JOIN DISCO_EXPR DISCO_EXPR ON DISCO_EXPR.NBRANCH = DISC_XPREM.NBRANCH  AND DISCO_EXPR.NPRODUCT = DISC_XPREM.NPRODUCT  AND DISCO_EXPR.NDISEXPRC = DISC_XPREM.NDISC_CODE LEFT JOIN TABLE5631 TABLE5631 ON TABLE5631.NCAUSE = DISC_XPREM.NCAUSE LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = DISC_XPREM.NCURRENCY  WHERE DISC_XPREM.SCERTYPE = @:DISC_XPREMSCERTYPE1 AND DISC_XPREM.NBRANCH = @:DISC_XPREMNBRANCH2 AND DISC_XPREM.NPRODUCT = @:DISC_XPREMNPRODUCT3 AND DISC_XPREM.NPOLICY = @:DISC_XPREMNPOLICY4 AND DISC_XPREM.NCERTIF = @:DISC_XPREMNCERTIF5)", "DISC_XPREM", "Linked.LatCombined")
                    .AddParameter("DISC_XPREMSCERTYPE1", DbType.AnsiStringFixedLength, 0, (DISCXPREMSCERTYPE1 = String.Empty), DISCXPREMSCERTYPE1)
                    .AddParameter("DISC_XPREMNBRANCH2", DbType.AnsiStringFixedLength, 0, (DISCXPREMNBRANCH2 = String.Empty), DISCXPREMNBRANCH2)
                    .AddParameter("DISC_XPREMNPRODUCT3", DbType.AnsiStringFixedLength, 0, (DISCXPREMNPRODUCT3 = String.Empty), DISCXPREMNPRODUCT3)
                    .AddParameter("DISC_XPREMNPOLICY4", DbType.AnsiStringFixedLength, 0, (DISCXPREMNPOLICY4 = String.Empty), DISCXPREMNPOLICY4)
                    .AddParameter("DISC_XPREMNCERTIF5", DbType.AnsiStringFixedLength, 0, (DISCXPREMNCERTIF5 = String.Empty), DISCXPREMNCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "Disc_xpremTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (Disc_xpremTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function Disc_xpremSelectCommandActionDISC_XPREM(DISCXPREMSCERTYPE1 As String, DISCXPREMNBRANCH2 As String, DISCXPREMNPRODUCT3 As String, DISCXPREMNPOLICY4 As String, DISCXPREMNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(DISC_XPREM.NDISC_CODE) COUNTDATA FROM DISC_XPREM DISC_XPREM LEFT JOIN DISCO_EXPR DISCO_EXPR ON DISCO_EXPR.NBRANCH = DISC_XPREM.NBRANCH  AND DISCO_EXPR.NPRODUCT = DISC_XPREM.NPRODUCT  AND DISCO_EXPR.NDISEXPRC = DISC_XPREM.NDISC_CODE LEFT JOIN TABLE5631 TABLE5631 ON TABLE5631.NCAUSE = DISC_XPREM.NCAUSE LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = DISC_XPREM.NCURRENCY  WHERE DISC_XPREM.SCERTYPE = @:DISC_XPREMSCERTYPE1 AND DISC_XPREM.NBRANCH = @:DISC_XPREMNBRANCH2 AND DISC_XPREM.NPRODUCT = @:DISC_XPREMNPRODUCT3 AND DISC_XPREM.NPOLICY = @:DISC_XPREMNPOLICY4 AND DISC_XPREM.NCERTIF = @:DISC_XPREMNCERTIF5", "DISC_XPREM", "Linked.LatCombined")
                    .AddParameter("DISC_XPREMSCERTYPE1", DbType.AnsiStringFixedLength, 0, (DISCXPREMSCERTYPE1 = String.Empty), DISCXPREMSCERTYPE1)
                    .AddParameter("DISC_XPREMNBRANCH2", DbType.AnsiStringFixedLength, 0, (DISCXPREMNBRANCH2 = String.Empty), DISCXPREMNBRANCH2)
                    .AddParameter("DISC_XPREMNPRODUCT3", DbType.AnsiStringFixedLength, 0, (DISCXPREMNPRODUCT3 = String.Empty), DISCXPREMNPRODUCT3)
                    .AddParameter("DISC_XPREMNPOLICY4", DbType.AnsiStringFixedLength, 0, (DISCXPREMNPOLICY4 = String.Empty), DISCXPREMNPOLICY4)
                    .AddParameter("DISC_XPREMNCERTIF5", DbType.AnsiStringFixedLength, 0, (DISCXPREMNCERTIF5 = String.Empty), DISCXPREMNCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "Disc_xpremSelectCommandActionDISC_XPREM", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (Disc_xpremSelectCommandActionDISC_XPREM)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function AutoTblDataLoad(AUTOSCERTYPE1 As String, AUTONBRANCH2 As String, AUTONPRODUCT3 As String, AUTONPOLICY4 As String, AUTONCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.sRegist = String.Empty, .sLicense_ty = String.Empty, .nVehType = 0, .sMotor = String.Empty, .sChassis = String.Empty, .sColor = String.Empty, .nCapital = 0, .nVeh_valor = 0, .nYear = 0, .nAutoZone = 0, .nUse = 0, .sLicense_tyDesc = String.Empty, .nVehTypeDesc = String.Empty, .nAutoZoneDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT AUTO.SREGIST, AUTO.SLICENSE_TY, AUTO.NVEHTYPE, AUTO.SMOTOR, AUTO.SCHASSIS, AUTO.SCOLOR, AUTO.NCAPITAL, AUTO.NVEH_VALOR, AUTO.NYEAR, AUTO.NAUTOZONE, AUTO.NUSE, TABLE80.SDESCRIPT SLICENSE_TYDESC, TABLE226.SDESCRIPT NVEHTYPEDESC, TABLE224.SSHORT_DES NAUTOZONEDESC FROM AUTO AUTO LEFT JOIN TABLE80 TABLE80 ON TABLE80.SLICENSE_TY = AUTO.SLICENSE_TY LEFT JOIN TABLE226 TABLE226 ON TABLE226.NVEHTYPE = AUTO.NVEHTYPE LEFT JOIN TABLE224 TABLE224 ON TABLE224.NAUTOZONE = AUTO.NAUTOZONE  WHERE AUTO.SCERTYPE = @:AUTOSCERTYPE1 AND AUTO.NBRANCH = @:AUTONBRANCH2 AND AUTO.NPRODUCT = @:AUTONPRODUCT3 AND AUTO.NPOLICY = @:AUTONPOLICY4 AND AUTO.NCERTIF = @:AUTONCERTIF5", "AUTO", "Linked.LatCombined")
                    .AddParameter("AUTOSCERTYPE1", DbType.AnsiStringFixedLength, 0, (AUTOSCERTYPE1 = String.Empty), AUTOSCERTYPE1)
                    .AddParameter("AUTONBRANCH2", DbType.AnsiStringFixedLength, 0, (AUTONBRANCH2 = String.Empty), AUTONBRANCH2)
                    .AddParameter("AUTONPRODUCT3", DbType.AnsiStringFixedLength, 0, (AUTONPRODUCT3 = String.Empty), AUTONPRODUCT3)
                    .AddParameter("AUTONPOLICY4", DbType.AnsiStringFixedLength, 0, (AUTONPOLICY4 = String.Empty), AUTONPOLICY4)
                    .AddParameter("AUTONCERTIF5", DbType.AnsiStringFixedLength, 0, (AUTONCERTIF5 = String.Empty), AUTONCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.sRegist = itemData.StringValue("SREGIST"), .sLicense_ty = itemData.StringValue("SLICENSE_TY"), .nVehType = itemData.NumericValue("NVEHTYPE"), .sMotor = itemData.StringValue("SMOTOR"), .sChassis = itemData.StringValue("SCHASSIS"), .sColor = itemData.StringValue("SCOLOR"), .nCapital = itemData.NumericValue("NCAPITAL"), .nVeh_valor = itemData.NumericValue("NVEH_VALOR"), .nYear = itemData.NumericValue("NYEAR"), .nAutoZone = itemData.NumericValue("NAUTOZONE"), .nUse = itemData.NumericValue("NUSE"), .sLicense_tyDesc = itemData.StringValue("SLICENSE_TYDESC"), .nVehTypeDesc = itemData.StringValue("NVEHTYPEDESC"), .nAutoZoneDesc = itemData.StringValue("NAUTOZONEDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "AutoTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (AutoTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function AutoTblDataCount(AUTOSCERTYPE1 As String, AUTONBRANCH2 As String, AUTONPRODUCT3 As String, AUTONPOLICY4 As String, AUTONCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT AUTO.SREGIST, AUTO.SLICENSE_TY, AUTO.NVEHTYPE, AUTO.SMOTOR, AUTO.SCHASSIS, AUTO.SCOLOR, AUTO.NCAPITAL, AUTO.NVEH_VALOR, AUTO.NYEAR, AUTO.NAUTOZONE, AUTO.NUSE, TABLE80.SDESCRIPT SLICENSE_TYDESC, TABLE226.SDESCRIPT NVEHTYPEDESC, TABLE224.SSHORT_DES NAUTOZONEDESC FROM AUTO AUTO LEFT JOIN TABLE80 TABLE80 ON TABLE80.SLICENSE_TY = AUTO.SLICENSE_TY LEFT JOIN TABLE226 TABLE226 ON TABLE226.NVEHTYPE = AUTO.NVEHTYPE LEFT JOIN TABLE224 TABLE224 ON TABLE224.NAUTOZONE = AUTO.NAUTOZONE  WHERE AUTO.SCERTYPE = @:AUTOSCERTYPE1 AND AUTO.NBRANCH = @:AUTONBRANCH2 AND AUTO.NPRODUCT = @:AUTONPRODUCT3 AND AUTO.NPOLICY = @:AUTONPOLICY4 AND AUTO.NCERTIF = @:AUTONCERTIF5)", "AUTO", "Linked.LatCombined")
                    .AddParameter("AUTOSCERTYPE1", DbType.AnsiStringFixedLength, 0, (AUTOSCERTYPE1 = String.Empty), AUTOSCERTYPE1)
                    .AddParameter("AUTONBRANCH2", DbType.AnsiStringFixedLength, 0, (AUTONBRANCH2 = String.Empty), AUTONBRANCH2)
                    .AddParameter("AUTONPRODUCT3", DbType.AnsiStringFixedLength, 0, (AUTONPRODUCT3 = String.Empty), AUTONPRODUCT3)
                    .AddParameter("AUTONPOLICY4", DbType.AnsiStringFixedLength, 0, (AUTONPOLICY4 = String.Empty), AUTONPOLICY4)
                    .AddParameter("AUTONCERTIF5", DbType.AnsiStringFixedLength, 0, (AUTONCERTIF5 = String.Empty), AUTONCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "AutoTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (AutoTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function AutoSelectCommandActionAUTO(AUTOSCERTYPE1 As String, AUTONBRANCH2 As String, AUTONPRODUCT3 As String, AUTONPOLICY4 As String, AUTONCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(AUTO.NVEHTYPE) COUNTDATA FROM AUTO AUTO LEFT JOIN TABLE80 TABLE80 ON TABLE80.SLICENSE_TY = AUTO.SLICENSE_TY LEFT JOIN TABLE226 TABLE226 ON TABLE226.NVEHTYPE = AUTO.NVEHTYPE LEFT JOIN TABLE224 TABLE224 ON TABLE224.NAUTOZONE = AUTO.NAUTOZONE  WHERE AUTO.SCERTYPE = @:AUTOSCERTYPE1 AND AUTO.NBRANCH = @:AUTONBRANCH2 AND AUTO.NPRODUCT = @:AUTONPRODUCT3 AND AUTO.NPOLICY = @:AUTONPOLICY4 AND AUTO.NCERTIF = @:AUTONCERTIF5", "AUTO", "Linked.LatCombined")
                    .AddParameter("AUTOSCERTYPE1", DbType.AnsiStringFixedLength, 0, (AUTOSCERTYPE1 = String.Empty), AUTOSCERTYPE1)
                    .AddParameter("AUTONBRANCH2", DbType.AnsiStringFixedLength, 0, (AUTONBRANCH2 = String.Empty), AUTONBRANCH2)
                    .AddParameter("AUTONPRODUCT3", DbType.AnsiStringFixedLength, 0, (AUTONPRODUCT3 = String.Empty), AUTONPRODUCT3)
                    .AddParameter("AUTONPOLICY4", DbType.AnsiStringFixedLength, 0, (AUTONPOLICY4 = String.Empty), AUTONPOLICY4)
                    .AddParameter("AUTONCERTIF5", DbType.AnsiStringFixedLength, 0, (AUTONCERTIF5 = String.Empty), AUTONCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "AutoSelectCommandActionAUTO", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (AutoSelectCommandActionAUTO)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function FireTblDataLoad(FIRESCERTYPE1 As String, FIRENBRANCH2 As String, FIRENPRODUCT3 As String, FIRENPOLICY4 As String, FIRENCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.nConstCat = 0, .nActivityCat = 0, .nFloor_quan = 0, .nRoofType = 0, .nSeismicZone = 0, .nBuildType = 0, .nSpCombType = 0, .sDescBussi = String.Empty, .nHurrican_zone = 0, .nSideCloseType = 0, .nConstCatDesc = String.Empty, .nActivityCatDesc = String.Empty, .nRoofTypeDesc = String.Empty, .nSeismicZoneDesc = String.Empty, .nBuildTypeDesc = String.Empty, .nSpCombTypeDesc = String.Empty, .nSideCloseTypeDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT FIRE.NCONSTCAT, FIRE.NACTIVITYCAT, FIRE.NFLOOR_QUAN, FIRE.NROOFTYPE, FIRE.NSEISMICZONE, FIRE.NBUILDTYPE, FIRE.NSPCOMBTYPE, FIRE.SDESCBUSSI, FIRE.NHURRICAN_ZONE, FIRE.NSIDECLOSETYPE, TABLE233.SDESCRIPT NCONSTCATDESC, TABLE7044.SDESCRIPT NACTIVITYCATDESC, TABLE7038.SDESCRIPT NROOFTYPEDESC, TABLE7047.SDESCRIPT NSEISMICZONEDESC, TABLE7039.SDESCRIPT NBUILDTYPEDESC, TABLE7040.SDESCRIPT NSPCOMBTYPEDESC, TABLE7037.SDESCRIPT NSIDECLOSETYPEDESC FROM FIRE FIRE LEFT JOIN TABLE233 TABLE233 ON TABLE233.NCONSTCAT = FIRE.NCONSTCAT LEFT JOIN TABLE7044 TABLE7044 ON TABLE7044.NACTIVITYCAT = FIRE.NACTIVITYCAT LEFT JOIN TABLE7038 TABLE7038 ON TABLE7038.NROOFTYPE = FIRE.NROOFTYPE LEFT JOIN TABLE7047 TABLE7047 ON TABLE7047.NSEISMICZONE = FIRE.NSEISMICZONE LEFT JOIN TABLE7039 TABLE7039 ON TABLE7039.NBUILDTYPE = FIRE.NBUILDTYPE LEFT JOIN TABLE7040 TABLE7040 ON TABLE7040.NSPCOMBTYPE = FIRE.NSPCOMBTYPE LEFT JOIN TABLE7037 TABLE7037 ON TABLE7037.NSIDECLOSETYPE = FIRE.NSIDECLOSETYPE  WHERE FIRE.SCERTYPE = @:FIRESCERTYPE1 AND FIRE.NBRANCH = @:FIRENBRANCH2 AND FIRE.NPRODUCT = @:FIRENPRODUCT3 AND FIRE.NPOLICY = @:FIRENPOLICY4 AND FIRE.NCERTIF = @:FIRENCERTIF5", "FIRE", "Linked.LatCombined")
                    .AddParameter("FIRESCERTYPE1", DbType.AnsiStringFixedLength, 0, (FIRESCERTYPE1 = String.Empty), FIRESCERTYPE1)
                    .AddParameter("FIRENBRANCH2", DbType.AnsiStringFixedLength, 0, (FIRENBRANCH2 = String.Empty), FIRENBRANCH2)
                    .AddParameter("FIRENPRODUCT3", DbType.AnsiStringFixedLength, 0, (FIRENPRODUCT3 = String.Empty), FIRENPRODUCT3)
                    .AddParameter("FIRENPOLICY4", DbType.AnsiStringFixedLength, 0, (FIRENPOLICY4 = String.Empty), FIRENPOLICY4)
                    .AddParameter("FIRENCERTIF5", DbType.AnsiStringFixedLength, 0, (FIRENCERTIF5 = String.Empty), FIRENCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.nConstCat = itemData.NumericValue("NCONSTCAT"), .nActivityCat = itemData.NumericValue("NACTIVITYCAT"), .nFloor_quan = itemData.NumericValue("NFLOOR_QUAN"), .nRoofType = itemData.NumericValue("NROOFTYPE"), .nSeismicZone = itemData.NumericValue("NSEISMICZONE"), .nBuildType = itemData.NumericValue("NBUILDTYPE"), .nSpCombType = itemData.NumericValue("NSPCOMBTYPE"), .sDescBussi = itemData.StringValue("SDESCBUSSI"), .nHurrican_zone = itemData.NumericValue("NHURRICAN_ZONE"), .nSideCloseType = itemData.NumericValue("NSIDECLOSETYPE"), .nConstCatDesc = itemData.StringValue("NCONSTCATDESC"), .nActivityCatDesc = itemData.StringValue("NACTIVITYCATDESC"), .nRoofTypeDesc = itemData.StringValue("NROOFTYPEDESC"), .nSeismicZoneDesc = itemData.StringValue("NSEISMICZONEDESC"), .nBuildTypeDesc = itemData.StringValue("NBUILDTYPEDESC"), .nSpCombTypeDesc = itemData.StringValue("NSPCOMBTYPEDESC"), .nSideCloseTypeDesc = itemData.StringValue("NSIDECLOSETYPEDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "FireTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (FireTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function FireTblDataCount(FIRESCERTYPE1 As String, FIRENBRANCH2 As String, FIRENPRODUCT3 As String, FIRENPOLICY4 As String, FIRENCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT FIRE.NCONSTCAT, FIRE.NACTIVITYCAT, FIRE.NFLOOR_QUAN, FIRE.NROOFTYPE, FIRE.NSEISMICZONE, FIRE.NBUILDTYPE, FIRE.NSPCOMBTYPE, FIRE.SDESCBUSSI, FIRE.NHURRICAN_ZONE, FIRE.NSIDECLOSETYPE, TABLE233.SDESCRIPT NCONSTCATDESC, TABLE7044.SDESCRIPT NACTIVITYCATDESC, TABLE7038.SDESCRIPT NROOFTYPEDESC, TABLE7047.SDESCRIPT NSEISMICZONEDESC, TABLE7039.SDESCRIPT NBUILDTYPEDESC, TABLE7040.SDESCRIPT NSPCOMBTYPEDESC, TABLE7037.SDESCRIPT NSIDECLOSETYPEDESC FROM FIRE FIRE LEFT JOIN TABLE233 TABLE233 ON TABLE233.NCONSTCAT = FIRE.NCONSTCAT LEFT JOIN TABLE7044 TABLE7044 ON TABLE7044.NACTIVITYCAT = FIRE.NACTIVITYCAT LEFT JOIN TABLE7038 TABLE7038 ON TABLE7038.NROOFTYPE = FIRE.NROOFTYPE LEFT JOIN TABLE7047 TABLE7047 ON TABLE7047.NSEISMICZONE = FIRE.NSEISMICZONE LEFT JOIN TABLE7039 TABLE7039 ON TABLE7039.NBUILDTYPE = FIRE.NBUILDTYPE LEFT JOIN TABLE7040 TABLE7040 ON TABLE7040.NSPCOMBTYPE = FIRE.NSPCOMBTYPE LEFT JOIN TABLE7037 TABLE7037 ON TABLE7037.NSIDECLOSETYPE = FIRE.NSIDECLOSETYPE  WHERE FIRE.SCERTYPE = @:FIRESCERTYPE1 AND FIRE.NBRANCH = @:FIRENBRANCH2 AND FIRE.NPRODUCT = @:FIRENPRODUCT3 AND FIRE.NPOLICY = @:FIRENPOLICY4 AND FIRE.NCERTIF = @:FIRENCERTIF5)", "FIRE", "Linked.LatCombined")
                    .AddParameter("FIRESCERTYPE1", DbType.AnsiStringFixedLength, 0, (FIRESCERTYPE1 = String.Empty), FIRESCERTYPE1)
                    .AddParameter("FIRENBRANCH2", DbType.AnsiStringFixedLength, 0, (FIRENBRANCH2 = String.Empty), FIRENBRANCH2)
                    .AddParameter("FIRENPRODUCT3", DbType.AnsiStringFixedLength, 0, (FIRENPRODUCT3 = String.Empty), FIRENPRODUCT3)
                    .AddParameter("FIRENPOLICY4", DbType.AnsiStringFixedLength, 0, (FIRENPOLICY4 = String.Empty), FIRENPOLICY4)
                    .AddParameter("FIRENCERTIF5", DbType.AnsiStringFixedLength, 0, (FIRENCERTIF5 = String.Empty), FIRENCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "FireTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (FireTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function FireSelectCommandActionFIRE(FIRESCERTYPE1 As String, FIRENBRANCH2 As String, FIRENPRODUCT3 As String, FIRENPOLICY4 As String, FIRENCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(FIRE.NCONSTCAT) COUNTDATA FROM FIRE FIRE LEFT JOIN TABLE233 TABLE233 ON TABLE233.NCONSTCAT = FIRE.NCONSTCAT LEFT JOIN TABLE7044 TABLE7044 ON TABLE7044.NACTIVITYCAT = FIRE.NACTIVITYCAT LEFT JOIN TABLE7038 TABLE7038 ON TABLE7038.NROOFTYPE = FIRE.NROOFTYPE LEFT JOIN TABLE7047 TABLE7047 ON TABLE7047.NSEISMICZONE = FIRE.NSEISMICZONE LEFT JOIN TABLE7039 TABLE7039 ON TABLE7039.NBUILDTYPE = FIRE.NBUILDTYPE LEFT JOIN TABLE7040 TABLE7040 ON TABLE7040.NSPCOMBTYPE = FIRE.NSPCOMBTYPE LEFT JOIN TABLE7037 TABLE7037 ON TABLE7037.NSIDECLOSETYPE = FIRE.NSIDECLOSETYPE  WHERE FIRE.SCERTYPE = @:FIRESCERTYPE1 AND FIRE.NBRANCH = @:FIRENBRANCH2 AND FIRE.NPRODUCT = @:FIRENPRODUCT3 AND FIRE.NPOLICY = @:FIRENPOLICY4 AND FIRE.NCERTIF = @:FIRENCERTIF5", "FIRE", "Linked.LatCombined")
                    .AddParameter("FIRESCERTYPE1", DbType.AnsiStringFixedLength, 0, (FIRESCERTYPE1 = String.Empty), FIRESCERTYPE1)
                    .AddParameter("FIRENBRANCH2", DbType.AnsiStringFixedLength, 0, (FIRENBRANCH2 = String.Empty), FIRENBRANCH2)
                    .AddParameter("FIRENPRODUCT3", DbType.AnsiStringFixedLength, 0, (FIRENPRODUCT3 = String.Empty), FIRENPRODUCT3)
                    .AddParameter("FIRENPOLICY4", DbType.AnsiStringFixedLength, 0, (FIRENPOLICY4 = String.Empty), FIRENPOLICY4)
                    .AddParameter("FIRENCERTIF5", DbType.AnsiStringFixedLength, 0, (FIRENCERTIF5 = String.Empty), FIRENCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "FireSelectCommandActionFIRE", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (FireSelectCommandActionFIRE)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function HomeOwnerTblDataLoad(HOMEOWNERSCERTYPE1 As String, HOMEOWNERNBRANCH2 As String, HOMEOWNERNPRODUCT3 As String, HOMEOWNERNPOLICY4 As String, HOMEOWNERNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.nOwnerShip = 0, .nDwellingType = 0, .NSEISMICZONE = 0, .nYear_built = 0, .dDate_purch = Date.MinValue, .nPrice_purch = 0, .nCurrency_purch = 0, .nLandSuper = 0, .nHomeSuper = 0, .nRoofType = 0, .nRoofYear = 0, .nFloodZone = 0, .nFoundType = 0, .sSprinkSys = String.Empty, .nAirType = 0, .nStories = 0, .nHalfBath = 0, .nFullBath = 0, .nBedrooms = 0, .nFirePlace = 0, .nGarage = 0, .sAnimalsDes = String.Empty, .nDist_Fire = 0, .sAlarm_comp = String.Empty, .sFencePool = String.Empty, .nSwimPool = 0, .nFenceHeight = 0, .sPolicy_other = String.Empty, .nCap_other = 0, .nCurrency_other = 0, .dExpir_other = Date.MinValue, .nOwnerShipDesc = String.Empty, .nDwellingTypeDesc = String.Empty, .nCurrency_purchDesc = String.Empty, .nRoofTypeDesc = String.Empty, .nFloodZoneDesc = String.Empty, .nAirTypeDesc = String.Empty, .nSwimPoolDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT HOMEOWNER.NOWNERSHIP, HOMEOWNER.NDWELLINGTYPE, HOMEOWNER.NSEISMICZONE, HOMEOWNER.NYEAR_BUILT, HOMEOWNER.DDATE_PURCH, HOMEOWNER.NPRICE_PURCH, HOMEOWNER.NCURRENCY_PURCH, HOMEOWNER.NLANDSUPER, HOMEOWNER.NHOMESUPER, HOMEOWNER.NROOFTYPE, HOMEOWNER.NROOFYEAR, HOMEOWNER.NFLOODZONE, HOMEOWNER.NFOUNDTYPE, HOMEOWNER.SSPRINKSYS, HOMEOWNER.NAIRTYPE, HOMEOWNER.NSTORIES, HOMEOWNER.NHALFBATH, HOMEOWNER.NFULLBATH, HOMEOWNER.NBEDROOMS, HOMEOWNER.NFIREPLACE, HOMEOWNER.NGARAGE, HOMEOWNER.SANIMALSDES, HOMEOWNER.NDIST_FIRE, HOMEOWNER.SALARM_COMP, HOMEOWNER.SFENCEPOOL, HOMEOWNER.NSWIMPOOL, HOMEOWNER.NFENCEHEIGHT, HOMEOWNER.SPOLICY_OTHER, HOMEOWNER.NCAP_OTHER, HOMEOWNER.NCURRENCY_OTHER, HOMEOWNER.DEXPIR_OTHER, TABLE6005.SDESCRIPT NOWNERSHIPDESC, TABLE6012.SDESCRIPT NDWELLINGTYPEDESC, TABLE11.SDESCRIPT NCURRENCY_PURCHDESC, TABLE7038.SDESCRIPT NROOFTYPEDESC, TABLE6007.SDESCRIPT NFLOODZONEDESC, TABLE6001.SDESCRIPT NAIRTYPEDESC, TABLE6004.SDESCRIPT NSWIMPOOLDESC FROM HOMEOWNER HOMEOWNER LEFT JOIN TABLE6005 TABLE6005 ON TABLE6005.NOWNERSHIP = HOMEOWNER.NOWNERSHIP LEFT JOIN TABLE6012 TABLE6012 ON TABLE6012.NDWELLINGTYPE = HOMEOWNER.NDWELLINGTYPE LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = HOMEOWNER.NCURRENCY_PURCH LEFT JOIN TABLE7038 TABLE7038 ON TABLE7038.NROOFTYPE = HOMEOWNER.NROOFTYPE LEFT JOIN TABLE6007 TABLE6007 ON TABLE6007.NZONETYPE = HOMEOWNER.NFLOODZONE LEFT JOIN TABLE6001 TABLE6001 ON TABLE6001.NAIRTYPE = HOMEOWNER.NAIRTYPE LEFT JOIN TABLE6004 TABLE6004 ON TABLE6004.NSWIMPOOL = HOMEOWNER.NSWIMPOOL  WHERE HOMEOWNER.SCERTYPE = @:HOMEOWNERSCERTYPE1 AND HOMEOWNER.NBRANCH = @:HOMEOWNERNBRANCH2 AND HOMEOWNER.NPRODUCT = @:HOMEOWNERNPRODUCT3 AND HOMEOWNER.NPOLICY = @:HOMEOWNERNPOLICY4 AND HOMEOWNER.NCERTIF = @:HOMEOWNERNCERTIF5", "HOMEOWNER", "Linked.LatCombined")
                    .AddParameter("HOMEOWNERSCERTYPE1", DbType.AnsiStringFixedLength, 0, (HOMEOWNERSCERTYPE1 = String.Empty), HOMEOWNERSCERTYPE1)
                    .AddParameter("HOMEOWNERNBRANCH2", DbType.AnsiStringFixedLength, 0, (HOMEOWNERNBRANCH2 = String.Empty), HOMEOWNERNBRANCH2)
                    .AddParameter("HOMEOWNERNPRODUCT3", DbType.AnsiStringFixedLength, 0, (HOMEOWNERNPRODUCT3 = String.Empty), HOMEOWNERNPRODUCT3)
                    .AddParameter("HOMEOWNERNPOLICY4", DbType.AnsiStringFixedLength, 0, (HOMEOWNERNPOLICY4 = String.Empty), HOMEOWNERNPOLICY4)
                    .AddParameter("HOMEOWNERNCERTIF5", DbType.AnsiStringFixedLength, 0, (HOMEOWNERNCERTIF5 = String.Empty), HOMEOWNERNCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.nOwnerShip = itemData.NumericValue("NOWNERSHIP"), .nDwellingType = itemData.NumericValue("NDWELLINGTYPE"), .NSEISMICZONE = itemData.NumericValue("NSEISMICZONE"), .nYear_built = itemData.NumericValue("NYEAR_BUILT"), .dDate_purch = itemData.DateTimeValue("DDATE_PURCH"), .nPrice_purch = itemData.NumericValue("NPRICE_PURCH"), .nCurrency_purch = itemData.NumericValue("NCURRENCY_PURCH"), .nLandSuper = itemData.NumericValue("NLANDSUPER"), .nHomeSuper = itemData.NumericValue("NHOMESUPER"), .nRoofType = itemData.NumericValue("NROOFTYPE"), .nRoofYear = itemData.NumericValue("NROOFYEAR"), .nFloodZone = itemData.NumericValue("NFLOODZONE"), .nFoundType = itemData.NumericValue("NFOUNDTYPE"), .sSprinkSys = itemData.StringValue("SSPRINKSYS"), .nAirType = itemData.NumericValue("NAIRTYPE"), .nStories = itemData.NumericValue("NSTORIES"), .nHalfBath = itemData.NumericValue("NHALFBATH"), .nFullBath = itemData.NumericValue("NFULLBATH"), .nBedrooms = itemData.NumericValue("NBEDROOMS"), .nFirePlace = itemData.NumericValue("NFIREPLACE"), .nGarage = itemData.NumericValue("NGARAGE"), .sAnimalsDes = itemData.StringValue("SANIMALSDES"), .nDist_Fire = itemData.NumericValue("NDIST_FIRE"), .sAlarm_comp = itemData.StringValue("SALARM_COMP"), .sFencePool = itemData.StringValue("SFENCEPOOL"), .nSwimPool = itemData.NumericValue("NSWIMPOOL"), .nFenceHeight = itemData.NumericValue("NFENCEHEIGHT"), .sPolicy_other = itemData.StringValue("SPOLICY_OTHER"), .nCap_other = itemData.NumericValue("NCAP_OTHER"), .nCurrency_other = itemData.NumericValue("NCURRENCY_OTHER"), .dExpir_other = itemData.DateTimeValue("DEXPIR_OTHER"), .nOwnerShipDesc = itemData.StringValue("NOWNERSHIPDESC"), .nDwellingTypeDesc = itemData.StringValue("NDWELLINGTYPEDESC"), .nCurrency_purchDesc = itemData.StringValue("NCURRENCY_PURCHDESC"), .nRoofTypeDesc = itemData.StringValue("NROOFTYPEDESC"), .nFloodZoneDesc = itemData.StringValue("NFLOODZONEDESC"), .nAirTypeDesc = itemData.StringValue("NAIRTYPEDESC"), .nSwimPoolDesc = itemData.StringValue("NSWIMPOOLDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "HomeOwnerTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (HomeOwnerTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function HomeOwnerTblDataCount(HOMEOWNERSCERTYPE1 As String, HOMEOWNERNBRANCH2 As String, HOMEOWNERNPRODUCT3 As String, HOMEOWNERNPOLICY4 As String, HOMEOWNERNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT HOMEOWNER.NOWNERSHIP, HOMEOWNER.NDWELLINGTYPE, HOMEOWNER.NSEISMICZONE, HOMEOWNER.NYEAR_BUILT, HOMEOWNER.DDATE_PURCH, HOMEOWNER.NPRICE_PURCH, HOMEOWNER.NCURRENCY_PURCH, HOMEOWNER.NLANDSUPER, HOMEOWNER.NHOMESUPER, HOMEOWNER.NROOFTYPE, HOMEOWNER.NROOFYEAR, HOMEOWNER.NFLOODZONE, HOMEOWNER.NFOUNDTYPE, HOMEOWNER.SSPRINKSYS, HOMEOWNER.NAIRTYPE, HOMEOWNER.NSTORIES, HOMEOWNER.NHALFBATH, HOMEOWNER.NFULLBATH, HOMEOWNER.NBEDROOMS, HOMEOWNER.NFIREPLACE, HOMEOWNER.NGARAGE, HOMEOWNER.SANIMALSDES, HOMEOWNER.NDIST_FIRE, HOMEOWNER.SALARM_COMP, HOMEOWNER.SFENCEPOOL, HOMEOWNER.NSWIMPOOL, HOMEOWNER.NFENCEHEIGHT, HOMEOWNER.SPOLICY_OTHER, HOMEOWNER.NCAP_OTHER, HOMEOWNER.NCURRENCY_OTHER, HOMEOWNER.DEXPIR_OTHER, TABLE6005.SDESCRIPT NOWNERSHIPDESC, TABLE6012.SDESCRIPT NDWELLINGTYPEDESC, TABLE11.SDESCRIPT NCURRENCY_PURCHDESC, TABLE7038.SDESCRIPT NROOFTYPEDESC, TABLE6007.SDESCRIPT NFLOODZONEDESC, TABLE6001.SDESCRIPT NAIRTYPEDESC, TABLE6004.SDESCRIPT NSWIMPOOLDESC FROM HOMEOWNER HOMEOWNER LEFT JOIN TABLE6005 TABLE6005 ON TABLE6005.NOWNERSHIP = HOMEOWNER.NOWNERSHIP LEFT JOIN TABLE6012 TABLE6012 ON TABLE6012.NDWELLINGTYPE = HOMEOWNER.NDWELLINGTYPE LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = HOMEOWNER.NCURRENCY_PURCH LEFT JOIN TABLE7038 TABLE7038 ON TABLE7038.NROOFTYPE = HOMEOWNER.NROOFTYPE LEFT JOIN TABLE6007 TABLE6007 ON TABLE6007.NZONETYPE = HOMEOWNER.NFLOODZONE LEFT JOIN TABLE6001 TABLE6001 ON TABLE6001.NAIRTYPE = HOMEOWNER.NAIRTYPE LEFT JOIN TABLE6004 TABLE6004 ON TABLE6004.NSWIMPOOL = HOMEOWNER.NSWIMPOOL  WHERE HOMEOWNER.SCERTYPE = @:HOMEOWNERSCERTYPE1 AND HOMEOWNER.NBRANCH = @:HOMEOWNERNBRANCH2 AND HOMEOWNER.NPRODUCT = @:HOMEOWNERNPRODUCT3 AND HOMEOWNER.NPOLICY = @:HOMEOWNERNPOLICY4 AND HOMEOWNER.NCERTIF = @:HOMEOWNERNCERTIF5)", "HOMEOWNER", "Linked.LatCombined")
                    .AddParameter("HOMEOWNERSCERTYPE1", DbType.AnsiStringFixedLength, 0, (HOMEOWNERSCERTYPE1 = String.Empty), HOMEOWNERSCERTYPE1)
                    .AddParameter("HOMEOWNERNBRANCH2", DbType.AnsiStringFixedLength, 0, (HOMEOWNERNBRANCH2 = String.Empty), HOMEOWNERNBRANCH2)
                    .AddParameter("HOMEOWNERNPRODUCT3", DbType.AnsiStringFixedLength, 0, (HOMEOWNERNPRODUCT3 = String.Empty), HOMEOWNERNPRODUCT3)
                    .AddParameter("HOMEOWNERNPOLICY4", DbType.AnsiStringFixedLength, 0, (HOMEOWNERNPOLICY4 = String.Empty), HOMEOWNERNPOLICY4)
                    .AddParameter("HOMEOWNERNCERTIF5", DbType.AnsiStringFixedLength, 0, (HOMEOWNERNCERTIF5 = String.Empty), HOMEOWNERNCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "HomeOwnerTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (HomeOwnerTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function HomeOwnerSelectCommandActionHOMEOWNER(HOMEOWNERSCERTYPE1 As String, HOMEOWNERNBRANCH2 As String, HOMEOWNERNPRODUCT3 As String, HOMEOWNERNPOLICY4 As String, HOMEOWNERNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(HOMEOWNER.NOWNERSHIP) COUNTDATA FROM HOMEOWNER HOMEOWNER LEFT JOIN TABLE6005 TABLE6005 ON TABLE6005.NOWNERSHIP = HOMEOWNER.NOWNERSHIP LEFT JOIN TABLE6012 TABLE6012 ON TABLE6012.NDWELLINGTYPE = HOMEOWNER.NDWELLINGTYPE LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = HOMEOWNER.NCURRENCY_PURCH LEFT JOIN TABLE7038 TABLE7038 ON TABLE7038.NROOFTYPE = HOMEOWNER.NROOFTYPE LEFT JOIN TABLE6007 TABLE6007 ON TABLE6007.NZONETYPE = HOMEOWNER.NFLOODZONE LEFT JOIN TABLE6001 TABLE6001 ON TABLE6001.NAIRTYPE = HOMEOWNER.NAIRTYPE LEFT JOIN TABLE6004 TABLE6004 ON TABLE6004.NSWIMPOOL = HOMEOWNER.NSWIMPOOL  WHERE HOMEOWNER.SCERTYPE = @:HOMEOWNERSCERTYPE1 AND HOMEOWNER.NBRANCH = @:HOMEOWNERNBRANCH2 AND HOMEOWNER.NPRODUCT = @:HOMEOWNERNPRODUCT3 AND HOMEOWNER.NPOLICY = @:HOMEOWNERNPOLICY4 AND HOMEOWNER.NCERTIF = @:HOMEOWNERNCERTIF5", "HOMEOWNER", "Linked.LatCombined")
                    .AddParameter("HOMEOWNERSCERTYPE1", DbType.AnsiStringFixedLength, 0, (HOMEOWNERSCERTYPE1 = String.Empty), HOMEOWNERSCERTYPE1)
                    .AddParameter("HOMEOWNERNBRANCH2", DbType.AnsiStringFixedLength, 0, (HOMEOWNERNBRANCH2 = String.Empty), HOMEOWNERNBRANCH2)
                    .AddParameter("HOMEOWNERNPRODUCT3", DbType.AnsiStringFixedLength, 0, (HOMEOWNERNPRODUCT3 = String.Empty), HOMEOWNERNPRODUCT3)
                    .AddParameter("HOMEOWNERNPOLICY4", DbType.AnsiStringFixedLength, 0, (HOMEOWNERNPOLICY4 = String.Empty), HOMEOWNERNPOLICY4)
                    .AddParameter("HOMEOWNERNCERTIF5", DbType.AnsiStringFixedLength, 0, (HOMEOWNERNCERTIF5 = String.Empty), HOMEOWNERNCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "HomeOwnerSelectCommandActionHOMEOWNER", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (HomeOwnerSelectCommandActionHOMEOWNER)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function LifeTblDataLoad(LIFESCERTYPE1 As String, LIFENBRANCH2 As String, LIFENPRODUCT3 As String, LIFENPOLICY4 As String, LIFENCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.nTypDurPay = 0, .nPay_time = 0, .nTypDurIns = 0, .nInsur_time = 0, .nXprem_time = 0, .nAge_limit = 0, .NAGE_REINSU = 0, .NAGE = 0, .nTypDurPayDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT LIFE.NTYPDURPAY, LIFE.NPAY_TIME, LIFE.NTYPDURINS, LIFE.NINSUR_TIME, LIFE.NXPREM_TIME, LIFE.NAGE_LIMIT, LIFE.NAGE_REINSU, LIFE.NAGE, TABLE5589.SDESCRIPT NTYPDURPAYDESC FROM LIFE LIFE LEFT JOIN TABLE5589 TABLE5589 ON TABLE5589.NTYPDUR = LIFE.NPAY_TIME  WHERE LIFE.SCERTYPE = @:LIFESCERTYPE1 AND LIFE.NBRANCH = @:LIFENBRANCH2 AND LIFE.NPRODUCT = @:LIFENPRODUCT3 AND LIFE.NPOLICY = @:LIFENPOLICY4 AND LIFE.NCERTIF = @:LIFENCERTIF5", "LIFE", "Linked.LatCombined")
                    .AddParameter("LIFESCERTYPE1", DbType.AnsiStringFixedLength, 0, (LIFESCERTYPE1 = String.Empty), LIFESCERTYPE1)
                    .AddParameter("LIFENBRANCH2", DbType.AnsiStringFixedLength, 0, (LIFENBRANCH2 = String.Empty), LIFENBRANCH2)
                    .AddParameter("LIFENPRODUCT3", DbType.AnsiStringFixedLength, 0, (LIFENPRODUCT3 = String.Empty), LIFENPRODUCT3)
                    .AddParameter("LIFENPOLICY4", DbType.AnsiStringFixedLength, 0, (LIFENPOLICY4 = String.Empty), LIFENPOLICY4)
                    .AddParameter("LIFENCERTIF5", DbType.AnsiStringFixedLength, 0, (LIFENCERTIF5 = String.Empty), LIFENCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.nTypDurPay = itemData.NumericValue("NTYPDURPAY"), .nPay_time = itemData.NumericValue("NPAY_TIME"), .nTypDurIns = itemData.NumericValue("NTYPDURINS"), .nInsur_time = itemData.NumericValue("NINSUR_TIME"), .nXprem_time = itemData.NumericValue("NXPREM_TIME"), .nAge_limit = itemData.NumericValue("NAGE_LIMIT"), .NAGE_REINSU = itemData.NumericValue("NAGE_REINSU"), .NAGE = itemData.NumericValue("NAGE"), .nTypDurPayDesc = itemData.StringValue("NTYPDURPAYDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "LifeTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (LifeTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function LifeTblDataCount(LIFESCERTYPE1 As String, LIFENBRANCH2 As String, LIFENPRODUCT3 As String, LIFENPOLICY4 As String, LIFENCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT LIFE.NTYPDURPAY, LIFE.NPAY_TIME, LIFE.NTYPDURINS, LIFE.NINSUR_TIME, LIFE.NXPREM_TIME, LIFE.NAGE_LIMIT, LIFE.NAGE_REINSU, LIFE.NAGE, TABLE5589.SDESCRIPT NTYPDURPAYDESC FROM LIFE LIFE LEFT JOIN TABLE5589 TABLE5589 ON TABLE5589.NTYPDUR = LIFE.NPAY_TIME  WHERE LIFE.SCERTYPE = @:LIFESCERTYPE1 AND LIFE.NBRANCH = @:LIFENBRANCH2 AND LIFE.NPRODUCT = @:LIFENPRODUCT3 AND LIFE.NPOLICY = @:LIFENPOLICY4 AND LIFE.NCERTIF = @:LIFENCERTIF5)", "LIFE", "Linked.LatCombined")
                    .AddParameter("LIFESCERTYPE1", DbType.AnsiStringFixedLength, 0, (LIFESCERTYPE1 = String.Empty), LIFESCERTYPE1)
                    .AddParameter("LIFENBRANCH2", DbType.AnsiStringFixedLength, 0, (LIFENBRANCH2 = String.Empty), LIFENBRANCH2)
                    .AddParameter("LIFENPRODUCT3", DbType.AnsiStringFixedLength, 0, (LIFENPRODUCT3 = String.Empty), LIFENPRODUCT3)
                    .AddParameter("LIFENPOLICY4", DbType.AnsiStringFixedLength, 0, (LIFENPOLICY4 = String.Empty), LIFENPOLICY4)
                    .AddParameter("LIFENCERTIF5", DbType.AnsiStringFixedLength, 0, (LIFENCERTIF5 = String.Empty), LIFENCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "LifeTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (LifeTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function LifeSelectCommandActionLIFE(LIFESCERTYPE1 As String, LIFENBRANCH2 As String, LIFENPRODUCT3 As String, LIFENPOLICY4 As String, LIFENCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(LIFE.NTYPDURPAY) COUNTDATA FROM LIFE LIFE LEFT JOIN TABLE5589 TABLE5589 ON TABLE5589.NTYPDUR = LIFE.NPAY_TIME  WHERE LIFE.SCERTYPE = @:LIFESCERTYPE1 AND LIFE.NBRANCH = @:LIFENBRANCH2 AND LIFE.NPRODUCT = @:LIFENPRODUCT3 AND LIFE.NPOLICY = @:LIFENPOLICY4 AND LIFE.NCERTIF = @:LIFENCERTIF5", "LIFE", "Linked.LatCombined")
                    .AddParameter("LIFESCERTYPE1", DbType.AnsiStringFixedLength, 0, (LIFESCERTYPE1 = String.Empty), LIFESCERTYPE1)
                    .AddParameter("LIFENBRANCH2", DbType.AnsiStringFixedLength, 0, (LIFENBRANCH2 = String.Empty), LIFENBRANCH2)
                    .AddParameter("LIFENPRODUCT3", DbType.AnsiStringFixedLength, 0, (LIFENPRODUCT3 = String.Empty), LIFENPRODUCT3)
                    .AddParameter("LIFENPOLICY4", DbType.AnsiStringFixedLength, 0, (LIFENPOLICY4 = String.Empty), LIFENPOLICY4)
                    .AddParameter("LIFENCERTIF5", DbType.AnsiStringFixedLength, 0, (LIFENCERTIF5 = String.Empty), LIFENCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "LifeSelectCommandActionLIFE", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (LifeSelectCommandActionLIFE)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function THEFTTblDataLoad(THEFTSCERTYPE1 As String, THEFTNBRANCH2 As String, THEFTNPRODUCT3 As String, THEFTNPOLICY4 As String, THEFTNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.DSTARTDATE = Date.MinValue, .DEXPIRDAT = Date.MinValue, .NCOMMERGRP = 0, .SDESCBUSSI = String.Empty, .NINSURED = 0, .NEMPLOYEES = 0, .NAREA = 0, .NVIGILANCE = 0, .NCAPITAL = 0, .DNULLDATE = Date.MinValue, .NNULLCODE = 0, .NCOMMERGRPDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT THEFT.DSTARTDATE, THEFT.DEXPIRDAT, THEFT.NCOMMERGRP, THEFT.SDESCBUSSI, THEFT.NINSURED, THEFT.NEMPLOYEES, THEFT.NAREA, THEFT.NVIGILANCE, THEFT.NCAPITAL, THEFT.DNULLDATE, THEFT.NNULLCODE, BUSSKIND.SDESCRIPT NCOMMERGRPDESC FROM THEFT THEFT LEFT JOIN BUSSKIND BUSSKIND ON BUSSKIND.NCODKIND = THEFT.NCODKIND  AND BUSSKIND.NBUSINESSTY = THEFT.NBUSINESSTY  AND BUSSKIND.NCOMMERGRP = THEFT.NCOMMERGRP  WHERE THEFT.SCERTYPE = @:THEFTSCERTYPE1 AND THEFT.NBRANCH = @:THEFTNBRANCH2 AND THEFT.NPRODUCT = @:THEFTNPRODUCT3 AND THEFT.NPOLICY = @:THEFTNPOLICY4 AND THEFT.NCERTIF = @:THEFTNCERTIF5", "THEFT", "Linked.LatCombined")
                    .AddParameter("THEFTSCERTYPE1", DbType.AnsiStringFixedLength, 0, (THEFTSCERTYPE1 = String.Empty), THEFTSCERTYPE1)
                    .AddParameter("THEFTNBRANCH2", DbType.AnsiStringFixedLength, 0, (THEFTNBRANCH2 = String.Empty), THEFTNBRANCH2)
                    .AddParameter("THEFTNPRODUCT3", DbType.AnsiStringFixedLength, 0, (THEFTNPRODUCT3 = String.Empty), THEFTNPRODUCT3)
                    .AddParameter("THEFTNPOLICY4", DbType.AnsiStringFixedLength, 0, (THEFTNPOLICY4 = String.Empty), THEFTNPOLICY4)
                    .AddParameter("THEFTNCERTIF5", DbType.AnsiStringFixedLength, 0, (THEFTNCERTIF5 = String.Empty), THEFTNCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.DSTARTDATE = itemData.DateTimeValue("DSTARTDATE"), .DEXPIRDAT = itemData.DateTimeValue("DEXPIRDAT"), .NCOMMERGRP = itemData.NumericValue("NCOMMERGRP"), .SDESCBUSSI = itemData.StringValue("SDESCBUSSI"), .NINSURED = itemData.NumericValue("NINSURED"), .NEMPLOYEES = itemData.NumericValue("NEMPLOYEES"), .NAREA = itemData.NumericValue("NAREA"), .NVIGILANCE = itemData.NumericValue("NVIGILANCE"), .NCAPITAL = itemData.NumericValue("NCAPITAL"), .DNULLDATE = itemData.DateTimeValue("DNULLDATE"), .NNULLCODE = itemData.NumericValue("NNULLCODE"), .NCOMMERGRPDesc = itemData.StringValue("NCOMMERGRPDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "THEFTTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (THEFTTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function THEFTTblDataCount(THEFTSCERTYPE1 As String, THEFTNBRANCH2 As String, THEFTNPRODUCT3 As String, THEFTNPOLICY4 As String, THEFTNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT THEFT.DSTARTDATE, THEFT.DEXPIRDAT, THEFT.NCOMMERGRP, THEFT.SDESCBUSSI, THEFT.NINSURED, THEFT.NEMPLOYEES, THEFT.NAREA, THEFT.NVIGILANCE, THEFT.NCAPITAL, THEFT.DNULLDATE, THEFT.NNULLCODE, BUSSKIND.SDESCRIPT NCOMMERGRPDESC FROM THEFT THEFT LEFT JOIN BUSSKIND BUSSKIND ON BUSSKIND.NCODKIND = THEFT.NCODKIND  AND BUSSKIND.NBUSINESSTY = THEFT.NBUSINESSTY  AND BUSSKIND.NCOMMERGRP = THEFT.NCOMMERGRP  WHERE THEFT.SCERTYPE = @:THEFTSCERTYPE1 AND THEFT.NBRANCH = @:THEFTNBRANCH2 AND THEFT.NPRODUCT = @:THEFTNPRODUCT3 AND THEFT.NPOLICY = @:THEFTNPOLICY4 AND THEFT.NCERTIF = @:THEFTNCERTIF5)", "THEFT", "Linked.LatCombined")
                    .AddParameter("THEFTSCERTYPE1", DbType.AnsiStringFixedLength, 0, (THEFTSCERTYPE1 = String.Empty), THEFTSCERTYPE1)
                    .AddParameter("THEFTNBRANCH2", DbType.AnsiStringFixedLength, 0, (THEFTNBRANCH2 = String.Empty), THEFTNBRANCH2)
                    .AddParameter("THEFTNPRODUCT3", DbType.AnsiStringFixedLength, 0, (THEFTNPRODUCT3 = String.Empty), THEFTNPRODUCT3)
                    .AddParameter("THEFTNPOLICY4", DbType.AnsiStringFixedLength, 0, (THEFTNPOLICY4 = String.Empty), THEFTNPOLICY4)
                    .AddParameter("THEFTNCERTIF5", DbType.AnsiStringFixedLength, 0, (THEFTNCERTIF5 = String.Empty), THEFTNCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "THEFTTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (THEFTTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function THEFTSelectCommandActionTHEFT(THEFTSCERTYPE1 As String, THEFTNBRANCH2 As String, THEFTNPRODUCT3 As String, THEFTNPOLICY4 As String, THEFTNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(THEFT.NCOMMERGRP) COUNTDATA FROM THEFT THEFT LEFT JOIN BUSSKIND BUSSKIND ON BUSSKIND.NCODKIND = THEFT.NCODKIND  AND BUSSKIND.NBUSINESSTY = THEFT.NBUSINESSTY  AND BUSSKIND.NCOMMERGRP = THEFT.NCOMMERGRP  WHERE THEFT.SCERTYPE = @:THEFTSCERTYPE1 AND THEFT.NBRANCH = @:THEFTNBRANCH2 AND THEFT.NPRODUCT = @:THEFTNPRODUCT3 AND THEFT.NPOLICY = @:THEFTNPOLICY4 AND THEFT.NCERTIF = @:THEFTNCERTIF5", "THEFT", "Linked.LatCombined")
                    .AddParameter("THEFTSCERTYPE1", DbType.AnsiStringFixedLength, 0, (THEFTSCERTYPE1 = String.Empty), THEFTSCERTYPE1)
                    .AddParameter("THEFTNBRANCH2", DbType.AnsiStringFixedLength, 0, (THEFTNBRANCH2 = String.Empty), THEFTNBRANCH2)
                    .AddParameter("THEFTNPRODUCT3", DbType.AnsiStringFixedLength, 0, (THEFTNPRODUCT3 = String.Empty), THEFTNPRODUCT3)
                    .AddParameter("THEFTNPOLICY4", DbType.AnsiStringFixedLength, 0, (THEFTNPOLICY4 = String.Empty), THEFTNPOLICY4)
                    .AddParameter("THEFTNCERTIF5", DbType.AnsiStringFixedLength, 0, (THEFTNCERTIF5 = String.Empty), THEFTNCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "THEFTSelectCommandActionTHEFT", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (THEFTSelectCommandActionTHEFT)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function FINANCIAL_INSTRUMENTSTblDataLoad(FINANCIALINSTRUMENTSSCERTYPE1 As String, FINANCIALINSTRUMENTSNBRANCH2 As String, FINANCIALINSTRUMENTSNPRODUCT3 As String, FINANCIALINSTRUMENTSNPOLICY4 As String, FINANCIALINSTRUMENTSNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NCONSECUTIVE = 0, .NINSTRUMENT_TY = 0, .NBANK_CODE = 0, .NCARD_TYPE = 0, .SNUMBER = String.Empty, .DCARDEXPIR = Date.MinValue, .DSTARTDATE = Date.MinValue, .DTERM_DATE = Date.MinValue, .NQUOTA = 0, .NAMOUNT = 0, .NCURRENCY = 0, .NINSTRUMENT_TYDesc = String.Empty, .NBANK_CODEDesc = String.Empty, .NCARD_TYPEDesc = String.Empty, .NCURRENCYDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactoryinked.LatCombined")
                    .AddParameter("FINANCIAL_INSTRUMENTSSCERTYPE1", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSSCERTYPE1 = String.Empty), FINANCIALINSTRUMENTSSCERTYPE1)
                    .AddParameter("FINANCIAL_INSTRUMENTSNBRANCH2", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSNBRANCH2 = String.Empty), FINANCIALINSTRUMENTSNBRANCH2)
                    .AddParameter("FINANCIAL_INSTRUMENTSNPRODUCT3", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSNPRODUCT3 = String.Empty), FINANCIALINSTRUMENTSNPRODUCT3)
                    .AddParameter("FINANCIAL_INSTRUMENTSNPOLICY4", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSNPOLICY4 = String.Empty), FINANCIALINSTRUMENTSNPOLICY4)
                    .AddParameter("FINANCIAL_INSTRUMENTSNCERTIF5", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSNCERTIF5 = String.Empty), FINANCIALINSTRUMENTSNCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NCONSECUTIVE = itemData.NumericValue("NCONSECUTIVE"), .NINSTRUMENT_TY = itemData.NumericValue("NINSTRUMENT_TY"), .NBANK_CODE = itemData.NumericValue("NBANK_CODE"), .NCARD_TYPE = itemData.NumericValue("NCARD_TYPE"), .SNUMBER = itemData.StringValue("SNUMBER"), .DCARDEXPIR = itemData.DateTimeValue("DCARDEXPIR"), .DSTARTDATE = itemData.DateTimeValue("DSTARTDATE"), .DTERM_DATE = itemData.DateTimeValue("DTERM_DATE"), .NQUOTA = itemData.NumericValue("NQUOTA"), .NAMOUNT = itemData.NumericValue("NAMOUNT"), .NCURRENCY = itemData.NumericValue("NCURRENCY"), .NINSTRUMENT_TYDesc = itemData.StringValue("NINSTRUMENT_TYDESC"), .NBANK_CODEDesc = itemData.StringValue("NBANK_CODEDESC"), .NCARD_TYPEDesc = itemData.StringValue("NCARD_TYPEDESC"), .NCURRENCYDesc = itemData.StringValue("NCURRENCYDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "FINANCIAL_INSTRUMENTSTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (FINANCIAL_INSTRUMENTSTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function FINANCIAL_INSTRUMENTSTblDataCount(FINANCIALINSTRUMENTSSCERTYPE1 As String, FINANCIALINSTRUMENTSNBRANCH2 As String, FINANCIALINSTRUMENTSNPRODUCT3 As String, FINANCIALINSTRUMENTSNPOLICY4 As String, FINANCIALINSTRUMENTSNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactoryinked.LatCombined")
                    .AddParameter("FINANCIAL_INSTRUMENTSSCERTYPE1", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSSCERTYPE1 = String.Empty), FINANCIALINSTRUMENTSSCERTYPE1)
                    .AddParameter("FINANCIAL_INSTRUMENTSNBRANCH2", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSNBRANCH2 = String.Empty), FINANCIALINSTRUMENTSNBRANCH2)
                    .AddParameter("FINANCIAL_INSTRUMENTSNPRODUCT3", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSNPRODUCT3 = String.Empty), FINANCIALINSTRUMENTSNPRODUCT3)
                    .AddParameter("FINANCIAL_INSTRUMENTSNPOLICY4", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSNPOLICY4 = String.Empty), FINANCIALINSTRUMENTSNPOLICY4)
                    .AddParameter("FINANCIAL_INSTRUMENTSNCERTIF5", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSNCERTIF5 = String.Empty), FINANCIALINSTRUMENTSNCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "FINANCIAL_INSTRUMENTSTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (FINANCIAL_INSTRUMENTSTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function FINANCIAL_INSTRUMENTSSelectCommandActionFINANCIAL_INSTRUMENTS(FINANCIALINSTRUMENTSSCERTYPE1 As String, FINANCIALINSTRUMENTSNBRANCH2 As String, FINANCIALINSTRUMENTSNPRODUCT3 As String, FINANCIALINSTRUMENTSNPOLICY4 As String, FINANCIALINSTRUMENTSNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(FINANCIAL_INSTRUMENTS.NCONSECUTIVE) COUNTDATA FROM FINANCIAL_INSTRUMENTS FINANCIAL_INSTRUMENTS LEFT JOIN TABLE5539 TABLE5539 ON TABLE5539.NINSTRUMENT_TY = FINANCIAL_INSTRUMENTS.NINSTRUMENT_TY LEFT JOIN TABLE7 TABLE7 ON TABLE7.NBANK_CODE = FINANCIAL_INSTRUMENTS.NBANK_CODE LEFT JOIN TABLE183 TABLE183 ON TABLE183.NCARD_TYPE = FINANCIAL_INSTRUMENTS.NCARD_TYPE LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = FINANCIAL_INSTRUMENTS.NCURRENCY  WHERE FINANCIAL_INSTRUMENTS.SCERTYPE = @:FINANCIAL_INSTRUMENTSSCERTYPE1 AND FINANCIAL_INSTRUMENTS.NBRANCH = @:FINANCIAL_INSTRUMENTSNBRANCH2 AND FINANCIAL_INSTRUMENTS.NPRODUCT = @:FINANCIAL_INSTRUMENTSNPRODUCT3 AND FINANCIAL_INSTRUMENTS.NPOLICY = @:FINANCIAL_INSTRUMENTSNPOLICY4 AND FINANCIAL_INSTRUMENTS.NCERTIF = @:FINANCIAL_INSTRUMENTSNCERTIF5", "FINANCIAL_INSTRUMENTS", "Linked.LatCombined")
                    .AddParameter("FINANCIAL_INSTRUMENTSSCERTYPE1", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSSCERTYPE1 = String.Empty), FINANCIALINSTRUMENTSSCERTYPE1)
                    .AddParameter("FINANCIAL_INSTRUMENTSNBRANCH2", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSNBRANCH2 = String.Empty), FINANCIALINSTRUMENTSNBRANCH2)
                    .AddParameter("FINANCIAL_INSTRUMENTSNPRODUCT3", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSNPRODUCT3 = String.Empty), FINANCIALINSTRUMENTSNPRODUCT3)
                    .AddParameter("FINANCIAL_INSTRUMENTSNPOLICY4", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSNPOLICY4 = String.Empty), FINANCIALINSTRUMENTSNPOLICY4)
                    .AddParameter("FINANCIAL_INSTRUMENTSNCERTIF5", DbType.AnsiStringFixedLength, 0, (FINANCIALINSTRUMENTSNCERTIF5 = String.Empty), FINANCIALINSTRUMENTSNCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "FINANCIAL_INSTRUMENTSSelectCommandActionFINANCIAL_INSTRUMENTS", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (FINANCIAL_INSTRUMENTSSelectCommandActionFINANCIAL_INSTRUMENTS)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function HEALTHTblDataLoad(HEALTHSCERTYPE1 As String, HEALTHNBRANCH2 As String, HEALTHNPRODUCT3 As String, HEALTHNPOLICY4 As String, HEALTHNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.DEFFECDATE = Date.MinValue, .DEXPIRDAT = Date.MinValue, .NCAPITAL = 0, .NPREMIUM = 0, .SCERTYPE = String.Empty, .NBRANCH = String.Empty, .NPRODUCT = String.Empty, .NPOLICY = String.Empty, .NCERTIF = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT HEALTH.DEFFECDATE, HEALTH.DEXPIRDAT, HEALTH.NCAPITAL, HEALTH.NPREMIUM, HEALTH.SCERTYPE, HEALTH.NBRANCH, HEALTH.NPRODUCT, HEALTH.NPOLICY, HEALTH.NCERTIF FROM HEALTH HEALTH  WHERE HEALTH.SCERTYPE = @:HEALTHSCERTYPE1 AND HEALTH.NBRANCH = @:HEALTHNBRANCH2 AND HEALTH.NPRODUCT = @:HEALTHNPRODUCT3 AND HEALTH.NPOLICY = @:HEALTHNPOLICY4 AND HEALTH.NCERTIF = @:HEALTHNCERTIF5", "HEALTH", "Linked.LatCombined")
                    .AddParameter("HEALTHSCERTYPE1", DbType.AnsiStringFixedLength, 0, (HEALTHSCERTYPE1 = String.Empty), HEALTHSCERTYPE1)
                    .AddParameter("HEALTHNBRANCH2", DbType.AnsiStringFixedLength, 0, (HEALTHNBRANCH2 = String.Empty), HEALTHNBRANCH2)
                    .AddParameter("HEALTHNPRODUCT3", DbType.AnsiStringFixedLength, 0, (HEALTHNPRODUCT3 = String.Empty), HEALTHNPRODUCT3)
                    .AddParameter("HEALTHNPOLICY4", DbType.AnsiStringFixedLength, 0, (HEALTHNPOLICY4 = String.Empty), HEALTHNPOLICY4)
                    .AddParameter("HEALTHNCERTIF5", DbType.AnsiStringFixedLength, 0, (HEALTHNCERTIF5 = String.Empty), HEALTHNCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.DEFFECDATE = itemData.DateTimeValue("DEFFECDATE"), .DEXPIRDAT = itemData.DateTimeValue("DEXPIRDAT"), .NCAPITAL = itemData.NumericValue("NCAPITAL"), .NPREMIUM = itemData.NumericValue("NPREMIUM"), .SCERTYPE = itemData.StringValue("SCERTYPE"), .NBRANCH = itemData.StringValue("NBRANCH"), .NPRODUCT = itemData.StringValue("NPRODUCT"), .NPOLICY = itemData.StringValue("NPOLICY"), .NCERTIF = itemData.StringValue("NCERTIF")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "HEALTHTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (HEALTHTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function HEALTHTblDataCount(HEALTHSCERTYPE1 As String, HEALTHNBRANCH2 As String, HEALTHNPRODUCT3 As String, HEALTHNPOLICY4 As String, HEALTHNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT HEALTH.DEFFECDATE, HEALTH.DEXPIRDAT, HEALTH.NCAPITAL, HEALTH.NPREMIUM, HEALTH.SCERTYPE, HEALTH.NBRANCH, HEALTH.NPRODUCT, HEALTH.NPOLICY, HEALTH.NCERTIF FROM HEALTH HEALTH  WHERE HEALTH.SCERTYPE = @:HEALTHSCERTYPE1 AND HEALTH.NBRANCH = @:HEALTHNBRANCH2 AND HEALTH.NPRODUCT = @:HEALTHNPRODUCT3 AND HEALTH.NPOLICY = @:HEALTHNPOLICY4 AND HEALTH.NCERTIF = @:HEALTHNCERTIF5)", "HEALTH", "Linked.LatCombined")
                    .AddParameter("HEALTHSCERTYPE1", DbType.AnsiStringFixedLength, 0, (HEALTHSCERTYPE1 = String.Empty), HEALTHSCERTYPE1)
                    .AddParameter("HEALTHNBRANCH2", DbType.AnsiStringFixedLength, 0, (HEALTHNBRANCH2 = String.Empty), HEALTHNBRANCH2)
                    .AddParameter("HEALTHNPRODUCT3", DbType.AnsiStringFixedLength, 0, (HEALTHNPRODUCT3 = String.Empty), HEALTHNPRODUCT3)
                    .AddParameter("HEALTHNPOLICY4", DbType.AnsiStringFixedLength, 0, (HEALTHNPOLICY4 = String.Empty), HEALTHNPOLICY4)
                    .AddParameter("HEALTHNCERTIF5", DbType.AnsiStringFixedLength, 0, (HEALTHNCERTIF5 = String.Empty), HEALTHNCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "HEALTHTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (HEALTHTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function HEALTHSelectCommandActionHEALTH(HEALTHSCERTYPE1 As String, HEALTHNBRANCH2 As String, HEALTHNPRODUCT3 As String, HEALTHNPOLICY4 As String, HEALTHNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(HEALTH.NCAPITAL) COUNTDATA FROM HEALTH HEALTH  WHERE HEALTH.SCERTYPE = @:HEALTHSCERTYPE1 AND HEALTH.NBRANCH = @:HEALTHNBRANCH2 AND HEALTH.NPRODUCT = @:HEALTHNPRODUCT3 AND HEALTH.NPOLICY = @:HEALTHNPOLICY4 AND HEALTH.NCERTIF = @:HEALTHNCERTIF5", "HEALTH", "Linked.LatCombined")
                    .AddParameter("HEALTHSCERTYPE1", DbType.AnsiStringFixedLength, 0, (HEALTHSCERTYPE1 = String.Empty), HEALTHSCERTYPE1)
                    .AddParameter("HEALTHNBRANCH2", DbType.AnsiStringFixedLength, 0, (HEALTHNBRANCH2 = String.Empty), HEALTHNBRANCH2)
                    .AddParameter("HEALTHNPRODUCT3", DbType.AnsiStringFixedLength, 0, (HEALTHNPRODUCT3 = String.Empty), HEALTHNPRODUCT3)
                    .AddParameter("HEALTHNPOLICY4", DbType.AnsiStringFixedLength, 0, (HEALTHNPOLICY4 = String.Empty), HEALTHNPOLICY4)
                    .AddParameter("HEALTHNCERTIF5", DbType.AnsiStringFixedLength, 0, (HEALTHNCERTIF5 = String.Empty), HEALTHNCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "HEALTHSelectCommandActionHEALTH", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (HEALTHSelectCommandActionHEALTH)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function ROLES2TblDataLoad(ROLESSCERTYPE3 As String, ROLESNBRANCH4 As String, ROLESNPRODUCT5 As String, ROLESNPOLICY6 As String, ROLESNCERTIF7 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NROLE = 0, .SCLIENT = String.Empty, .NROLEDesc = String.Empty, .SCLIENTDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT ROLES.NROLE, ROLES.SCLIENT, TABLE12.SDESCRIPT NROLEDESC, CLIENT.SCLIENAME SCLIENTDESC FROM ROLES ROLES LEFT JOIN TABLE12 TABLE12 ON TABLE12.NROLE = ROLES.NROLE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = ROLES.SCLIENT  WHERE ROLES.NROLE <> 1 AND ROLES.NROLE <> 13 AND ROLES.SCERTYPE = @:ROLESSCERTYPE3 AND ROLES.NBRANCH = @:ROLESNBRANCH4 AND ROLES.NPRODUCT = @:ROLESNPRODUCT5 AND ROLES.NPOLICY = @:ROLESNPOLICY6 AND ROLES.NCERTIF = @:ROLESNCERTIF7", "ROLES", "Linked.LatCombined")
                    .AddParameter("ROLESSCERTYPE3", DbType.AnsiStringFixedLength, 0, (ROLESSCERTYPE3 = String.Empty), ROLESSCERTYPE3)
                    .AddParameter("ROLESNBRANCH4", DbType.AnsiStringFixedLength, 0, (ROLESNBRANCH4 = String.Empty), ROLESNBRANCH4)
                    .AddParameter("ROLESNPRODUCT5", DbType.AnsiStringFixedLength, 0, (ROLESNPRODUCT5 = String.Empty), ROLESNPRODUCT5)
                    .AddParameter("ROLESNPOLICY6", DbType.AnsiStringFixedLength, 0, (ROLESNPOLICY6 = String.Empty), ROLESNPOLICY6)
                    .AddParameter("ROLESNCERTIF7", DbType.AnsiStringFixedLength, 0, (ROLESNCERTIF7 = String.Empty), ROLESNCERTIF7)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NROLE = itemData.NumericValue("NROLE"), .SCLIENT = itemData.StringValue("SCLIENT"), .NROLEDesc = itemData.StringValue("NROLEDESC"), .SCLIENTDesc = itemData.StringValue("SCLIENTDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "ROLES2TblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (ROLES2TblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function ROLES2TblDataCount(ROLESSCERTYPE3 As String, ROLESNBRANCH4 As String, ROLESNPRODUCT5 As String, ROLESNPOLICY6 As String, ROLESNCERTIF7 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT ROLES.NROLE, ROLES.SCLIENT, TABLE12.SDESCRIPT NROLEDESC, CLIENT.SCLIENAME SCLIENTDESC FROM ROLES ROLES LEFT JOIN TABLE12 TABLE12 ON TABLE12.NROLE = ROLES.NROLE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = ROLES.SCLIENT  WHERE ROLES.NROLE <> 1 AND ROLES.NROLE <> 13 AND ROLES.SCERTYPE = @:ROLESSCERTYPE3 AND ROLES.NBRANCH = @:ROLESNBRANCH4 AND ROLES.NPRODUCT = @:ROLESNPRODUCT5 AND ROLES.NPOLICY = @:ROLESNPOLICY6 AND ROLES.NCERTIF = @:ROLESNCERTIF7)", "ROLES", "Linked.LatCombined")
                    .AddParameter("ROLESSCERTYPE3", DbType.AnsiStringFixedLength, 0, (ROLESSCERTYPE3 = String.Empty), ROLESSCERTYPE3)
                    .AddParameter("ROLESNBRANCH4", DbType.AnsiStringFixedLength, 0, (ROLESNBRANCH4 = String.Empty), ROLESNBRANCH4)
                    .AddParameter("ROLESNPRODUCT5", DbType.AnsiStringFixedLength, 0, (ROLESNPRODUCT5 = String.Empty), ROLESNPRODUCT5)
                    .AddParameter("ROLESNPOLICY6", DbType.AnsiStringFixedLength, 0, (ROLESNPOLICY6 = String.Empty), ROLESNPOLICY6)
                    .AddParameter("ROLESNCERTIF7", DbType.AnsiStringFixedLength, 0, (ROLESNCERTIF7 = String.Empty), ROLESNCERTIF7)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "ROLES2TblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (ROLES2TblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function ROLES2SelectCommandActionROLES(ROLESSCERTYPE3 As String, ROLESNBRANCH4 As String, ROLESNPRODUCT5 As String, ROLESNPOLICY6 As String, ROLESNCERTIF7 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(ROLES.NROLE) COUNTDATA FROM ROLES ROLES LEFT JOIN TABLE12 TABLE12 ON TABLE12.NROLE = ROLES.NROLE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = ROLES.SCLIENT  WHERE ROLES.NROLE <> 1 AND ROLES.NROLE <> 13 AND ROLES.SCERTYPE = @:ROLESSCERTYPE3 AND ROLES.NBRANCH = @:ROLESNBRANCH4 AND ROLES.NPRODUCT = @:ROLESNPRODUCT5 AND ROLES.NPOLICY = @:ROLESNPOLICY6 AND ROLES.NCERTIF = @:ROLESNCERTIF7", "ROLES", "Linked.LatCombined")
                    .AddParameter("ROLESSCERTYPE3", DbType.AnsiStringFixedLength, 0, (ROLESSCERTYPE3 = String.Empty), ROLESSCERTYPE3)
                    .AddParameter("ROLESNBRANCH4", DbType.AnsiStringFixedLength, 0, (ROLESNBRANCH4 = String.Empty), ROLESNBRANCH4)
                    .AddParameter("ROLESNPRODUCT5", DbType.AnsiStringFixedLength, 0, (ROLESNPRODUCT5 = String.Empty), ROLESNPRODUCT5)
                    .AddParameter("ROLESNPOLICY6", DbType.AnsiStringFixedLength, 0, (ROLESNPOLICY6 = String.Empty), ROLESNPOLICY6)
                    .AddParameter("ROLESNCERTIF7", DbType.AnsiStringFixedLength, 0, (ROLESNCERTIF7 = String.Empty), ROLESNCERTIF7)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "ROLES2SelectCommandActionROLES", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (ROLES2SelectCommandActionROLES)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function BeneficiarTblDataLoad(BENEFICIARSCERTYPE1 As String, BENEFICIARNBRANCH2 As String, BENEFICIARNPRODUCT3 As String, BENEFICIARNPOLICY4 As String, BENEFICIARNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.nModulec = 0, .nCover = 0, .sClient = String.Empty, .nRelation = 0, .sIrrevoc = String.Empty, .nParticip = 0, .nModulecDesc = String.Empty, .sClientDesc = String.Empty, .nRelationDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT BENEFICIAR.NMODULEC, BENEFICIAR.NCOVER, BENEFICIAR.SCLIENT, BENEFICIAR.NRELATION, BENEFICIAR.SIRREVOC, BENEFICIAR.NPARTICIP, TAB_MODUL.SDESCRIPT NMODULECDESC, CLIENT.SCLIENAME SCLIENTDESC, TABLE15.SDESCRIPT NRELATIONDESC FROM BENEFICIAR BENEFICIAR LEFT JOIN TAB_MODUL TAB_MODUL ON TAB_MODUL.NBRANCH = BENEFICIAR.NBRANCH  AND TAB_MODUL.NPRODUCT = BENEFICIAR.NPRODUCT  AND TAB_MODUL.NMODULEC = BENEFICIAR.NMODULEC  AND TAB_MODUL.DEFFECDATE = BENEFICIAR.DEFFECDATE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = BENEFICIAR.SCLIENT LEFT JOIN TABLE15 TABLE15 ON TABLE15.NRELASHIP = BENEFICIAR.NRELATION  WHERE BENEFICIAR.SCERTYPE = @:BENEFICIARSCERTYPE1 AND BENEFICIAR.NBRANCH = @:BENEFICIARNBRANCH2 AND BENEFICIAR.NPRODUCT = @:BENEFICIARNPRODUCT3 AND BENEFICIAR.NPOLICY = @:BENEFICIARNPOLICY4 AND BENEFICIAR.NCERTIF = @:BENEFICIARNCERTIF5", "BENEFICIAR", "Linked.LatCombined")
                    .AddParameter("BENEFICIARSCERTYPE1", DbType.AnsiStringFixedLength, 0, (BENEFICIARSCERTYPE1 = String.Empty), BENEFICIARSCERTYPE1)
                    .AddParameter("BENEFICIARNBRANCH2", DbType.AnsiStringFixedLength, 0, (BENEFICIARNBRANCH2 = String.Empty), BENEFICIARNBRANCH2)
                    .AddParameter("BENEFICIARNPRODUCT3", DbType.AnsiStringFixedLength, 0, (BENEFICIARNPRODUCT3 = String.Empty), BENEFICIARNPRODUCT3)
                    .AddParameter("BENEFICIARNPOLICY4", DbType.AnsiStringFixedLength, 0, (BENEFICIARNPOLICY4 = String.Empty), BENEFICIARNPOLICY4)
                    .AddParameter("BENEFICIARNCERTIF5", DbType.AnsiStringFixedLength, 0, (BENEFICIARNCERTIF5 = String.Empty), BENEFICIARNCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.nModulec = itemData.NumericValue("NMODULEC"), .nCover = itemData.NumericValue("NCOVER"), .sClient = itemData.StringValue("SCLIENT"), .nRelation = itemData.NumericValue("NRELATION"), .sIrrevoc = itemData.StringValue("SIRREVOC"), .nParticip = itemData.NumericValue("NPARTICIP"), .nModulecDesc = itemData.StringValue("NMODULECDESC"), .sClientDesc = itemData.StringValue("SCLIENTDESC"), .nRelationDesc = itemData.StringValue("NRELATIONDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "BeneficiarTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (BeneficiarTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function BeneficiarTblDataCount(BENEFICIARSCERTYPE1 As String, BENEFICIARNBRANCH2 As String, BENEFICIARNPRODUCT3 As String, BENEFICIARNPOLICY4 As String, BENEFICIARNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT BENEFICIAR.NMODULEC, BENEFICIAR.NCOVER, BENEFICIAR.SCLIENT, BENEFICIAR.NRELATION, BENEFICIAR.SIRREVOC, BENEFICIAR.NPARTICIP, TAB_MODUL.SDESCRIPT NMODULECDESC, CLIENT.SCLIENAME SCLIENTDESC, TABLE15.SDESCRIPT NRELATIONDESC FROM BENEFICIAR BENEFICIAR LEFT JOIN TAB_MODUL TAB_MODUL ON TAB_MODUL.NBRANCH = BENEFICIAR.NBRANCH  AND TAB_MODUL.NPRODUCT = BENEFICIAR.NPRODUCT  AND TAB_MODUL.NMODULEC = BENEFICIAR.NMODULEC  AND TAB_MODUL.DEFFECDATE = BENEFICIAR.DEFFECDATE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = BENEFICIAR.SCLIENT LEFT JOIN TABLE15 TABLE15 ON TABLE15.NRELASHIP = BENEFICIAR.NRELATION  WHERE BENEFICIAR.SCERTYPE = @:BENEFICIARSCERTYPE1 AND BENEFICIAR.NBRANCH = @:BENEFICIARNBRANCH2 AND BENEFICIAR.NPRODUCT = @:BENEFICIARNPRODUCT3 AND BENEFICIAR.NPOLICY = @:BENEFICIARNPOLICY4 AND BENEFICIAR.NCERTIF = @:BENEFICIARNCERTIF5)", "BENEFICIAR", "Linked.LatCombined")
                    .AddParameter("BENEFICIARSCERTYPE1", DbType.AnsiStringFixedLength, 0, (BENEFICIARSCERTYPE1 = String.Empty), BENEFICIARSCERTYPE1)
                    .AddParameter("BENEFICIARNBRANCH2", DbType.AnsiStringFixedLength, 0, (BENEFICIARNBRANCH2 = String.Empty), BENEFICIARNBRANCH2)
                    .AddParameter("BENEFICIARNPRODUCT3", DbType.AnsiStringFixedLength, 0, (BENEFICIARNPRODUCT3 = String.Empty), BENEFICIARNPRODUCT3)
                    .AddParameter("BENEFICIARNPOLICY4", DbType.AnsiStringFixedLength, 0, (BENEFICIARNPOLICY4 = String.Empty), BENEFICIARNPOLICY4)
                    .AddParameter("BENEFICIARNCERTIF5", DbType.AnsiStringFixedLength, 0, (BENEFICIARNCERTIF5 = String.Empty), BENEFICIARNCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "BeneficiarTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (BeneficiarTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function BeneficiarSelectCommandActionBENEFICIAR(BENEFICIARSCERTYPE1 As String, BENEFICIARNBRANCH2 As String, BENEFICIARNPRODUCT3 As String, BENEFICIARNPOLICY4 As String, BENEFICIARNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(BENEFICIAR.NMODULEC) COUNTDATA FROM BENEFICIAR BENEFICIAR LEFT JOIN TAB_MODUL TAB_MODUL ON TAB_MODUL.NBRANCH = BENEFICIAR.NBRANCH  AND TAB_MODUL.NPRODUCT = BENEFICIAR.NPRODUCT  AND TAB_MODUL.NMODULEC = BENEFICIAR.NMODULEC  AND TAB_MODUL.DEFFECDATE = BENEFICIAR.DEFFECDATE LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = BENEFICIAR.SCLIENT LEFT JOIN TABLE15 TABLE15 ON TABLE15.NRELASHIP = BENEFICIAR.NRELATION  WHERE BENEFICIAR.SCERTYPE = @:BENEFICIARSCERTYPE1 AND BENEFICIAR.NBRANCH = @:BENEFICIARNBRANCH2 AND BENEFICIAR.NPRODUCT = @:BENEFICIARNPRODUCT3 AND BENEFICIAR.NPOLICY = @:BENEFICIARNPOLICY4 AND BENEFICIAR.NCERTIF = @:BENEFICIARNCERTIF5", "BENEFICIAR", "Linked.LatCombined")
                    .AddParameter("BENEFICIARSCERTYPE1", DbType.AnsiStringFixedLength, 0, (BENEFICIARSCERTYPE1 = String.Empty), BENEFICIARSCERTYPE1)
                    .AddParameter("BENEFICIARNBRANCH2", DbType.AnsiStringFixedLength, 0, (BENEFICIARNBRANCH2 = String.Empty), BENEFICIARNBRANCH2)
                    .AddParameter("BENEFICIARNPRODUCT3", DbType.AnsiStringFixedLength, 0, (BENEFICIARNPRODUCT3 = String.Empty), BENEFICIARNPRODUCT3)
                    .AddParameter("BENEFICIARNPOLICY4", DbType.AnsiStringFixedLength, 0, (BENEFICIARNPOLICY4 = String.Empty), BENEFICIARNPOLICY4)
                    .AddParameter("BENEFICIARNCERTIF5", DbType.AnsiStringFixedLength, 0, (BENEFICIARNCERTIF5 = String.Empty), BENEFICIARNCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "BeneficiarSelectCommandActionBENEFICIAR", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (BeneficiarSelectCommandActionBENEFICIAR)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function ClauseTblDataLoad(CLAUSESCERTYPE1 As String, CLAUSENBRANCH2 As String, CLAUSENPRODUCT3 As String, CLAUSENPOLICY4 As String, CLAUSENCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.nClause = 0, .nNotenum = 0}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT CLAUSE.NCLAUSE, CLAUSE.NNOTENUM FROM CLAUSE CLAUSE  WHERE CLAUSE.SCERTYPE = @:CLAUSESCERTYPE1 AND CLAUSE.NBRANCH = @:CLAUSENBRANCH2 AND CLAUSE.NPRODUCT = @:CLAUSENPRODUCT3 AND CLAUSE.NPOLICY = @:CLAUSENPOLICY4 AND CLAUSE.NCERTIF = @:CLAUSENCERTIF5", "CLAUSE", "Linked.LatCombined")
                    .AddParameter("CLAUSESCERTYPE1", DbType.AnsiStringFixedLength, 0, (CLAUSESCERTYPE1 = String.Empty), CLAUSESCERTYPE1)
                    .AddParameter("CLAUSENBRANCH2", DbType.AnsiStringFixedLength, 0, (CLAUSENBRANCH2 = String.Empty), CLAUSENBRANCH2)
                    .AddParameter("CLAUSENPRODUCT3", DbType.AnsiStringFixedLength, 0, (CLAUSENPRODUCT3 = String.Empty), CLAUSENPRODUCT3)
                    .AddParameter("CLAUSENPOLICY4", DbType.AnsiStringFixedLength, 0, (CLAUSENPOLICY4 = String.Empty), CLAUSENPOLICY4)
                    .AddParameter("CLAUSENCERTIF5", DbType.AnsiStringFixedLength, 0, (CLAUSENCERTIF5 = String.Empty), CLAUSENCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.nClause = itemData.NumericValue("NCLAUSE"), .nNotenum = itemData.NumericValue("NNOTENUM")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "ClauseTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (ClauseTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function ClauseTblDataCount(CLAUSESCERTYPE1 As String, CLAUSENBRANCH2 As String, CLAUSENPRODUCT3 As String, CLAUSENPOLICY4 As String, CLAUSENCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT CLAUSE.NCLAUSE, CLAUSE.NNOTENUM FROM CLAUSE CLAUSE  WHERE CLAUSE.SCERTYPE = @:CLAUSESCERTYPE1 AND CLAUSE.NBRANCH = @:CLAUSENBRANCH2 AND CLAUSE.NPRODUCT = @:CLAUSENPRODUCT3 AND CLAUSE.NPOLICY = @:CLAUSENPOLICY4 AND CLAUSE.NCERTIF = @:CLAUSENCERTIF5)", "CLAUSE", "Linked.LatCombined")
                    .AddParameter("CLAUSESCERTYPE1", DbType.AnsiStringFixedLength, 0, (CLAUSESCERTYPE1 = String.Empty), CLAUSESCERTYPE1)
                    .AddParameter("CLAUSENBRANCH2", DbType.AnsiStringFixedLength, 0, (CLAUSENBRANCH2 = String.Empty), CLAUSENBRANCH2)
                    .AddParameter("CLAUSENPRODUCT3", DbType.AnsiStringFixedLength, 0, (CLAUSENPRODUCT3 = String.Empty), CLAUSENPRODUCT3)
                    .AddParameter("CLAUSENPOLICY4", DbType.AnsiStringFixedLength, 0, (CLAUSENPOLICY4 = String.Empty), CLAUSENPOLICY4)
                    .AddParameter("CLAUSENCERTIF5", DbType.AnsiStringFixedLength, 0, (CLAUSENCERTIF5 = String.Empty), CLAUSENCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "ClauseTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (ClauseTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function ClauseSelectCommandActionCLAUSE(CLAUSESCERTYPE1 As String, CLAUSENBRANCH2 As String, CLAUSENPRODUCT3 As String, CLAUSENPOLICY4 As String, CLAUSENCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(CLAUSE.NCLAUSE) COUNTDATA FROM CLAUSE CLAUSE  WHERE CLAUSE.SCERTYPE = @:CLAUSESCERTYPE1 AND CLAUSE.NBRANCH = @:CLAUSENBRANCH2 AND CLAUSE.NPRODUCT = @:CLAUSENPRODUCT3 AND CLAUSE.NPOLICY = @:CLAUSENPOLICY4 AND CLAUSE.NCERTIF = @:CLAUSENCERTIF5", "CLAUSE", "Linked.LatCombined")
                    .AddParameter("CLAUSESCERTYPE1", DbType.AnsiStringFixedLength, 0, (CLAUSESCERTYPE1 = String.Empty), CLAUSESCERTYPE1)
                    .AddParameter("CLAUSENBRANCH2", DbType.AnsiStringFixedLength, 0, (CLAUSENBRANCH2 = String.Empty), CLAUSENBRANCH2)
                    .AddParameter("CLAUSENPRODUCT3", DbType.AnsiStringFixedLength, 0, (CLAUSENPRODUCT3 = String.Empty), CLAUSENPRODUCT3)
                    .AddParameter("CLAUSENPOLICY4", DbType.AnsiStringFixedLength, 0, (CLAUSENPOLICY4 = String.Empty), CLAUSENPOLICY4)
                    .AddParameter("CLAUSENCERTIF5", DbType.AnsiStringFixedLength, 0, (CLAUSENCERTIF5 = String.Empty), CLAUSENCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "ClauseSelectCommandActionCLAUSE", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (ClauseSelectCommandActionCLAUSE)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function POLICY_HISTblDataLoad(POLICYHISSCERTYPE1 As String, POLICYHISNBRANCH2 As String, POLICYHISNPRODUCT3 As String, POLICYHISNPOLICY4 As String, POLICYHISNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NMOVEMENT = 0, .NTYPE_HIST = 0, .DEFFECDATE = Date.MinValue, .NTRANSACTIO = 0, .NRECEIPT = 0, .SNULL_MOVE = String.Empty, .DNULLDATE = Date.MinValue, .NTYPE_HISTDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT POLICY_HIS.NMOVEMENT, POLICY_HIS.NTYPE_HIST, POLICY_HIS.DEFFECDATE, POLICY_HIS.NTRANSACTIO, POLICY_HIS.NRECEIPT, POLICY_HIS.SNULL_MOVE, POLICY_HIS.DNULLDATE, TABLE165.SDESCRIPT NTYPE_HISTDESC FROM POLICY_HIS POLICY_HIS LEFT JOIN TABLE165 TABLE165 ON TABLE165.NTYPE_HIST = POLICY_HIS.NTYPE_HIST  WHERE POLICY_HIS.SCERTYPE = @:POLICY_HISSCERTYPE1 AND POLICY_HIS.NBRANCH = @:POLICY_HISNBRANCH2 AND POLICY_HIS.NPRODUCT = @:POLICY_HISNPRODUCT3 AND POLICY_HIS.NPOLICY = @:POLICY_HISNPOLICY4 AND POLICY_HIS.NCERTIF = @:POLICY_HISNCERTIF5", "POLICY_HIS", "Linked.LatCombined")
                    .AddParameter("POLICY_HISSCERTYPE1", DbType.AnsiStringFixedLength, 0, (POLICYHISSCERTYPE1 = String.Empty), POLICYHISSCERTYPE1)
                    .AddParameter("POLICY_HISNBRANCH2", DbType.AnsiStringFixedLength, 0, (POLICYHISNBRANCH2 = String.Empty), POLICYHISNBRANCH2)
                    .AddParameter("POLICY_HISNPRODUCT3", DbType.AnsiStringFixedLength, 0, (POLICYHISNPRODUCT3 = String.Empty), POLICYHISNPRODUCT3)
                    .AddParameter("POLICY_HISNPOLICY4", DbType.AnsiStringFixedLength, 0, (POLICYHISNPOLICY4 = String.Empty), POLICYHISNPOLICY4)
                    .AddParameter("POLICY_HISNCERTIF5", DbType.AnsiStringFixedLength, 0, (POLICYHISNCERTIF5 = String.Empty), POLICYHISNCERTIF5)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NMOVEMENT = itemData.NumericValue("NMOVEMENT"), .NTYPE_HIST = itemData.NumericValue("NTYPE_HIST"), .DEFFECDATE = itemData.DateTimeValue("DEFFECDATE"), .NTRANSACTIO = itemData.NumericValue("NTRANSACTIO"), .NRECEIPT = itemData.NumericValue("NRECEIPT"), .SNULL_MOVE = itemData.StringValue("SNULL_MOVE"), .DNULLDATE = itemData.DateTimeValue("DNULLDATE"), .NTYPE_HISTDesc = itemData.StringValue("NTYPE_HISTDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "POLICY_HISTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (POLICY_HISTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function POLICY_HISTblDataCount(POLICYHISSCERTYPE1 As String, POLICYHISNBRANCH2 As String, POLICYHISNPRODUCT3 As String, POLICYHISNPOLICY4 As String, POLICYHISNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT POLICY_HIS.NMOVEMENT, POLICY_HIS.NTYPE_HIST, POLICY_HIS.DEFFECDATE, POLICY_HIS.NTRANSACTIO, POLICY_HIS.NRECEIPT, POLICY_HIS.SNULL_MOVE, POLICY_HIS.DNULLDATE, TABLE165.SDESCRIPT NTYPE_HISTDESC FROM POLICY_HIS POLICY_HIS LEFT JOIN TABLE165 TABLE165 ON TABLE165.NTYPE_HIST = POLICY_HIS.NTYPE_HIST  WHERE POLICY_HIS.SCERTYPE = @:POLICY_HISSCERTYPE1 AND POLICY_HIS.NBRANCH = @:POLICY_HISNBRANCH2 AND POLICY_HIS.NPRODUCT = @:POLICY_HISNPRODUCT3 AND POLICY_HIS.NPOLICY = @:POLICY_HISNPOLICY4 AND POLICY_HIS.NCERTIF = @:POLICY_HISNCERTIF5)", "POLICY_HIS", "Linked.LatCombined")
                    .AddParameter("POLICY_HISSCERTYPE1", DbType.AnsiStringFixedLength, 0, (POLICYHISSCERTYPE1 = String.Empty), POLICYHISSCERTYPE1)
                    .AddParameter("POLICY_HISNBRANCH2", DbType.AnsiStringFixedLength, 0, (POLICYHISNBRANCH2 = String.Empty), POLICYHISNBRANCH2)
                    .AddParameter("POLICY_HISNPRODUCT3", DbType.AnsiStringFixedLength, 0, (POLICYHISNPRODUCT3 = String.Empty), POLICYHISNPRODUCT3)
                    .AddParameter("POLICY_HISNPOLICY4", DbType.AnsiStringFixedLength, 0, (POLICYHISNPOLICY4 = String.Empty), POLICYHISNPOLICY4)
                    .AddParameter("POLICY_HISNCERTIF5", DbType.AnsiStringFixedLength, 0, (POLICYHISNCERTIF5 = String.Empty), POLICYHISNCERTIF5)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "POLICY_HISTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (POLICY_HISTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function POLICY_HISSelectCommandActionPOLICY_HIS(POLICYHISSCERTYPE1 As String, POLICYHISNBRANCH2 As String, POLICYHISNPRODUCT3 As String, POLICYHISNPOLICY4 As String, POLICYHISNCERTIF5 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(POLICY_HIS.NMOVEMENT) COUNTDATA FROM POLICY_HIS POLICY_HIS LEFT JOIN TABLE165 TABLE165 ON TABLE165.NTYPE_HIST = POLICY_HIS.NTYPE_HIST  WHERE POLICY_HIS.SCERTYPE = @:POLICY_HISSCERTYPE1 AND POLICY_HIS.NBRANCH = @:POLICY_HISNBRANCH2 AND POLICY_HIS.NPRODUCT = @:POLICY_HISNPRODUCT3 AND POLICY_HIS.NPOLICY = @:POLICY_HISNPOLICY4 AND POLICY_HIS.NCERTIF = @:POLICY_HISNCERTIF5", "POLICY_HIS", "Linked.LatCombined")
                    .AddParameter("POLICY_HISSCERTYPE1", DbType.AnsiStringFixedLength, 0, (POLICYHISSCERTYPE1 = String.Empty), POLICYHISSCERTYPE1)
                    .AddParameter("POLICY_HISNBRANCH2", DbType.AnsiStringFixedLength, 0, (POLICYHISNBRANCH2 = String.Empty), POLICYHISNBRANCH2)
                    .AddParameter("POLICY_HISNPRODUCT3", DbType.AnsiStringFixedLength, 0, (POLICYHISNPRODUCT3 = String.Empty), POLICYHISNPRODUCT3)
                    .AddParameter("POLICY_HISNPOLICY4", DbType.AnsiStringFixedLength, 0, (POLICYHISNPOLICY4 = String.Empty), POLICYHISNPOLICY4)
                    .AddParameter("POLICY_HISNCERTIF5", DbType.AnsiStringFixedLength, 0, (POLICYHISNCERTIF5 = String.Empty), POLICYHISNCERTIF5)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "POLICY_HISSelectCommandActionPOLICY_HIS", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (POLICY_HISSelectCommandActionPOLICY_HIS)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function DIR_DEBITTblDataLoad(DIRDEBITSCERTYPE2 As String, DIRDEBITNBRANCH3 As String, DIRDEBITNPRODUCT4 As String, DIRDEBITNPOLICY5 As String, DIRDEBITNCERTIF6 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NBANKEXT = 0, .NTYP_CRECARD = 0, .SCREDI_CARD = String.Empty, .DCARDEXPIR = Date.MinValue, .NPOLICY = 0, .NBANKEXTDesc = String.Empty, .NTYP_CRECARDDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT DIR_DEBIT.NBANKEXT, DIR_DEBIT.NTYP_CRECARD, DIR_DEBIT.SCREDI_CARD, DIR_DEBIT.DCARDEXPIR, DIR_DEBIT.NPOLICY, TABLE7.SDESCRIPT NBANKEXTDESC, TABLE183.SDESCRIPT NTYP_CRECARDDESC FROM DIR_DEBIT DIR_DEBIT LEFT JOIN TABLE7 TABLE7 ON TABLE7.NBANK_CODE = DIR_DEBIT.NBANKEXT LEFT JOIN TABLE183 TABLE183 ON TABLE183.NCARD_TYPE = DIR_DEBIT.NTYP_CRECARD  WHERE DIR_DEBIT.SCREDI_CARD IS NOT NULL AND DIR_DEBIT.SCERTYPE = @:DIR_DEBITSCERTYPE2 AND DIR_DEBIT.NBRANCH = @:DIR_DEBITNBRANCH3 AND DIR_DEBIT.NPRODUCT = @:DIR_DEBITNPRODUCT4 AND DIR_DEBIT.NPOLICY = @:DIR_DEBITNPOLICY5 AND DIR_DEBIT.NCERTIF = @:DIR_DEBITNCERTIF6", "DIR_DEBIT", "Linked.LatCombined")
                    .AddParameter("DIR_DEBITSCERTYPE2", DbType.AnsiStringFixedLength, 0, (DIRDEBITSCERTYPE2 = String.Empty), DIRDEBITSCERTYPE2)
                    .AddParameter("DIR_DEBITNBRANCH3", DbType.AnsiStringFixedLength, 0, (DIRDEBITNBRANCH3 = String.Empty), DIRDEBITNBRANCH3)
                    .AddParameter("DIR_DEBITNPRODUCT4", DbType.AnsiStringFixedLength, 0, (DIRDEBITNPRODUCT4 = String.Empty), DIRDEBITNPRODUCT4)
                    .AddParameter("DIR_DEBITNPOLICY5", DbType.AnsiStringFixedLength, 0, (DIRDEBITNPOLICY5 = String.Empty), DIRDEBITNPOLICY5)
                    .AddParameter("DIR_DEBITNCERTIF6", DbType.AnsiStringFixedLength, 0, (DIRDEBITNCERTIF6 = String.Empty), DIRDEBITNCERTIF6)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NBANKEXT = itemData.NumericValue("NBANKEXT"), .NTYP_CRECARD = itemData.NumericValue("NTYP_CRECARD"), .SCREDI_CARD = itemData.StringValue("SCREDI_CARD"), .DCARDEXPIR = itemData.DateTimeValue("DCARDEXPIR"), .NPOLICY = itemData.NumericValue("NPOLICY"), .NBANKEXTDesc = itemData.StringValue("NBANKEXTDESC"), .NTYP_CRECARDDesc = itemData.StringValue("NTYP_CRECARDDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "DIR_DEBITTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (DIR_DEBITTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function DIR_DEBITTblDataCount(DIRDEBITSCERTYPE2 As String, DIRDEBITNBRANCH3 As String, DIRDEBITNPRODUCT4 As String, DIRDEBITNPOLICY5 As String, DIRDEBITNCERTIF6 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT DIR_DEBIT.NBANKEXT, DIR_DEBIT.NTYP_CRECARD, DIR_DEBIT.SCREDI_CARD, DIR_DEBIT.DCARDEXPIR, DIR_DEBIT.NPOLICY, TABLE7.SDESCRIPT NBANKEXTDESC, TABLE183.SDESCRIPT NTYP_CRECARDDESC FROM DIR_DEBIT DIR_DEBIT LEFT JOIN TABLE7 TABLE7 ON TABLE7.NBANK_CODE = DIR_DEBIT.NBANKEXT LEFT JOIN TABLE183 TABLE183 ON TABLE183.NCARD_TYPE = DIR_DEBIT.NTYP_CRECARD  WHERE DIR_DEBIT.SCREDI_CARD IS NOT NULL AND DIR_DEBIT.SCERTYPE = @:DIR_DEBITSCERTYPE2 AND DIR_DEBIT.NBRANCH = @:DIR_DEBITNBRANCH3 AND DIR_DEBIT.NPRODUCT = @:DIR_DEBITNPRODUCT4 AND DIR_DEBIT.NPOLICY = @:DIR_DEBITNPOLICY5 AND DIR_DEBIT.NCERTIF = @:DIR_DEBITNCERTIF6)", "DIR_DEBIT", "Linked.LatCombined")
                    .AddParameter("DIR_DEBITSCERTYPE2", DbType.AnsiStringFixedLength, 0, (DIRDEBITSCERTYPE2 = String.Empty), DIRDEBITSCERTYPE2)
                    .AddParameter("DIR_DEBITNBRANCH3", DbType.AnsiStringFixedLength, 0, (DIRDEBITNBRANCH3 = String.Empty), DIRDEBITNBRANCH3)
                    .AddParameter("DIR_DEBITNPRODUCT4", DbType.AnsiStringFixedLength, 0, (DIRDEBITNPRODUCT4 = String.Empty), DIRDEBITNPRODUCT4)
                    .AddParameter("DIR_DEBITNPOLICY5", DbType.AnsiStringFixedLength, 0, (DIRDEBITNPOLICY5 = String.Empty), DIRDEBITNPOLICY5)
                    .AddParameter("DIR_DEBITNCERTIF6", DbType.AnsiStringFixedLength, 0, (DIRDEBITNCERTIF6 = String.Empty), DIRDEBITNCERTIF6)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "DIR_DEBITTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (DIR_DEBITTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function DIR_DEBITSelectCommandActionDIR_DEBIT(DIRDEBITSCERTYPE2 As String, DIRDEBITNBRANCH3 As String, DIRDEBITNPRODUCT4 As String, DIRDEBITNPOLICY5 As String, DIRDEBITNCERTIF6 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(DIR_DEBIT.NBANKEXT) COUNTDATA FROM DIR_DEBIT DIR_DEBIT LEFT JOIN TABLE7 TABLE7 ON TABLE7.NBANK_CODE = DIR_DEBIT.NBANKEXT LEFT JOIN TABLE183 TABLE183 ON TABLE183.NCARD_TYPE = DIR_DEBIT.NTYP_CRECARD  WHERE DIR_DEBIT.SCREDI_CARD IS NOT NULL AND DIR_DEBIT.SCERTYPE = @:DIR_DEBITSCERTYPE2 AND DIR_DEBIT.NBRANCH = @:DIR_DEBITNBRANCH3 AND DIR_DEBIT.NPRODUCT = @:DIR_DEBITNPRODUCT4 AND DIR_DEBIT.NPOLICY = @:DIR_DEBITNPOLICY5 AND DIR_DEBIT.NCERTIF = @:DIR_DEBITNCERTIF6", "DIR_DEBIT", "Linked.LatCombined")
                    .AddParameter("DIR_DEBITSCERTYPE2", DbType.AnsiStringFixedLength, 0, (DIRDEBITSCERTYPE2 = String.Empty), DIRDEBITSCERTYPE2)
                    .AddParameter("DIR_DEBITNBRANCH3", DbType.AnsiStringFixedLength, 0, (DIRDEBITNBRANCH3 = String.Empty), DIRDEBITNBRANCH3)
                    .AddParameter("DIR_DEBITNPRODUCT4", DbType.AnsiStringFixedLength, 0, (DIRDEBITNPRODUCT4 = String.Empty), DIRDEBITNPRODUCT4)
                    .AddParameter("DIR_DEBITNPOLICY5", DbType.AnsiStringFixedLength, 0, (DIRDEBITNPOLICY5 = String.Empty), DIRDEBITNPOLICY5)
                    .AddParameter("DIR_DEBITNCERTIF6", DbType.AnsiStringFixedLength, 0, (DIRDEBITNCERTIF6 = String.Empty), DIRDEBITNCERTIF6)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "DIR_DEBITSelectCommandActionDIR_DEBIT", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (DIR_DEBITSelectCommandActionDIR_DEBIT)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function Client(filter As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                resultData = InMotionGIT.BackOffice.Support.Connection.Client.Lookup(filter, 1, 20)
            Catch ex As Exception
                LogHandler.ErrorLog("H5ConsultaPolizasClienteSegunClienteIndicado", "Client", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (Client)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

#End Region

#Region "Lookups Web Methods"


#End Region

#Region "Form Actions"


#End Region





#Region "Common Utilities"

        Private Shared Sub SetDefaultValuesFromQueryString(formData As EntryData)
            If HttpContext.Current.Request.QueryString("Client").IsNotEmpty Then
                formData.Client = HttpContext.Current.Request.QueryString("Client")
            End If
            If HttpContext.Current.Request.QueryString("RecordEffectiveDate").IsNotEmpty Then
                formData.RecordEffectiveDate = HttpContext.Current.Request.QueryString("RecordEffectiveDate")
            End If
        End Sub	


#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property Client As System.String
            <DataMember()> Public Property RecordEffectiveDate As DateTime
            <DataMember()> Public Property RootItemsSCLIENT As System.String
            <DataMember()> Public Property RootItemsSCLIENAME As System.String
            <DataMember()> Public Property RootItemsCertificatnBranch As System.Int32
            <DataMember()> Public Property RootItemsCertificatnProduct As System.Int32
            <DataMember()> Public Property RootItemsCertificatnPolicy As System.Int32
            <DataMember()> Public Property RootItemsCertificatnCapital As System.Int32
            <DataMember()> Public Property RootItemsCertificatnPayfreq As System.Int32
            <DataMember()> Public Property RootItemsCertificatsStatusva As System.String
            <DataMember()> Public Property RootItemsCertificatdIssuedat As System.DateTime
            <DataMember()> Public Property RootItemsCertificatnWait_code As System.Int32
            <DataMember()> Public Property RootItemsCertificatdStartdate As System.DateTime
            <DataMember()> Public Property RootItemsCertificatsRenewal As System.String
            <DataMember()> Public Property RootItemsCertificatdNulldate As System.DateTime
            <DataMember()> Public Property RootItemsCertificatnNullcode As System.Int32
            <DataMember()> Public Property RootItemsCertificatdExpirdat As System.DateTime
            <DataMember()> Public Property RootItemsCertificatdChangdat As System.DateTime
            <DataMember()> Public Property RootItemsCertificatSCERTYPE As System.String
            <DataMember()> Public Property RootItemsCertificatNCERTIF As System.String
            <DataMember()> Public Property RootItemsCertificatCurren_polnCurrency As System.Int32
            <DataMember()> Public Property Curren_pol_Curren_pol As List(Of Curren_pol_Curren_polItem)
            <DataMember()> Public Property RootItemsCertificatRolesnRole As System.Int32
            <DataMember()> Public Property RootItemsCertificatRolessClient As System.String
            <DataMember()> Public Property RootItemsCertificatRolesnStatusRol As System.Int32
            <DataMember()> Public Property RootItemsCertificatRolessSexClien As System.String
            <DataMember()> Public Property RootItemsCertificatRolesdBirthDate As System.DateTime
            <DataMember()> Public Property RootItemsCertificatRolesnTypeRisk As System.Int32
            <DataMember()> Public Property RootItemsCertificatRolesnRating As System.Int32
            <DataMember()> Public Property Roles_Roles As List(Of Roles_RolesItem)
            <DataMember()> Public Property RootItemsCertificatSUM_INSURNSUMINS_COD As System.Int32
            <DataMember()> Public Property RootItemsCertificatSUM_INSURNSUMINS_REAL As System.Int32
            <DataMember()> Public Property RootItemsCertificatSUM_INSURNCOINSURAN As System.Int32
            <DataMember()> Public Property RootItemsCertificatSUM_INSURNSUM_INSUR As System.Int32
            <DataMember()> Public Property SUM_INSUR_SUM_INSUR As List(Of SUM_INSUR_SUM_INSURItem)
            <DataMember()> Public Property RootItemsCertificatCovernModulec As System.Int32
            <DataMember()> Public Property RootItemsCertificatCovernCover As System.Int32
            <DataMember()> Public Property RootItemsCertificatCovernRole As System.Int32
            <DataMember()> Public Property RootItemsCertificatCoversClient As System.String
            <DataMember()> Public Property RootItemsCertificatCovernCurrency As System.Int32
            <DataMember()> Public Property RootItemsCertificatCovernCapital As System.Int32
            <DataMember()> Public Property RootItemsCertificatCovernPremium As System.Int32
            <DataMember()> Public Property Cover_Cover As List(Of Cover_CoverItem)
            <DataMember()> Public Property RootItemsCertificatREINSURANNBRANCH_REI As System.Int32
            <DataMember()> Public Property RootItemsCertificatREINSURANNTYPE_REIN As System.Int32
            <DataMember()> Public Property RootItemsCertificatREINSURANNCAPITAL As System.Int32
            <DataMember()> Public Property RootItemsCertificatREINSURANNCURRENCY As System.Int32
            <DataMember()> Public Property RootItemsCertificatREINSURANNSHARE As System.Int32
            <DataMember()> Public Property REINSURAN_REINSURAN As List(Of REINSURAN_REINSURANItem)
            <DataMember()> Public Property RootItemsCertificatREINSURAN2NBRANCH_REI As System.Int32
            <DataMember()> Public Property RootItemsCertificatREINSURAN2NCOMPANY As System.Int32
            <DataMember()> Public Property RootItemsCertificatREINSURAN2NCAPITAL As System.Int32
            <DataMember()> Public Property RootItemsCertificatREINSURAN2NCURRENCY As System.Int32
            <DataMember()> Public Property RootItemsCertificatREINSURAN2NSHARE As System.Int32
            <DataMember()> Public Property RootItemsCertificatREINSURAN2NCOMMISSI As System.Int32
            <DataMember()> Public Property REINSURAN2_REINSURAN2 As List(Of REINSURAN2_REINSURAN2Item)
            <DataMember()> Public Property RootItemsCertificatDisc_xpremnDisc_code As System.Int32
            <DataMember()> Public Property RootItemsCertificatDisc_xpremsAgree As System.String
            <DataMember()> Public Property RootItemsCertificatDisc_xpremnCause As System.Int32
            <DataMember()> Public Property RootItemsCertificatDisc_xpremnPercent As System.Int32
            <DataMember()> Public Property RootItemsCertificatDisc_xpremnCurrency As System.Int32
            <DataMember()> Public Property RootItemsCertificatDisc_xpremnAmount As System.Int32
            <DataMember()> Public Property Disc_xprem_Disc_xprem As List(Of Disc_xprem_Disc_xpremItem)
            <DataMember()> Public Property RootItemsCertificatAutosRegist As System.String
            <DataMember()> Public Property RootItemsCertificatAutosLicense_ty As System.String
            <DataMember()> Public Property RootItemsCertificatAutonVehType As System.Int32
            <DataMember()> Public Property RootItemsCertificatAutosMotor As System.String
            <DataMember()> Public Property RootItemsCertificatAutosChassis As System.String
            <DataMember()> Public Property RootItemsCertificatAutosColor As System.String
            <DataMember()> Public Property RootItemsCertificatAutonCapital As System.Int32
            <DataMember()> Public Property RootItemsCertificatAutonVeh_valor As System.Int32
            <DataMember()> Public Property RootItemsCertificatAutonYear As System.Int32
            <DataMember()> Public Property RootItemsCertificatAutonAutoZone As System.Int32
            <DataMember()> Public Property RootItemsCertificatAutonUse As System.Int32
            <DataMember()> Public Property Auto_Auto As List(Of Auto_AutoItem)
            <DataMember()> Public Property RootItemsCertificatFirenConstCat As System.Int32
            <DataMember()> Public Property RootItemsCertificatFirenActivityCat As System.Int32
            <DataMember()> Public Property RootItemsCertificatFirenFloor_quan As System.Int32
            <DataMember()> Public Property RootItemsCertificatFirenRoofType As System.Int32
            <DataMember()> Public Property RootItemsCertificatFirenSeismicZone As System.Int32
            <DataMember()> Public Property RootItemsCertificatFirenBuildType As System.Int32
            <DataMember()> Public Property RootItemsCertificatFirenSpCombType As System.Int32
            <DataMember()> Public Property RootItemsCertificatFiresDescBussi As System.String
            <DataMember()> Public Property RootItemsCertificatFirenHurrican_zone As System.Int32
            <DataMember()> Public Property RootItemsCertificatFirenSideCloseType As System.Int32
            <DataMember()> Public Property Fire_Fire As List(Of Fire_FireItem)
            <DataMember()> Public Property RootItemsCertificatHomeOwnernOwnerShip As System.Int32
            <DataMember()> Public Property RootItemsCertificatHomeOwnernDwellingType As System.Int32
            <DataMember()> Public Property RootItemsCertificatHomeOwnerNSEISMICZONE As System.Int32
            <DataMember()> Public Property RootItemsCertificatHomeOwnernYear_built As System.Int32
            <DataMember()> Public Property RootItemsCertificatHomeOwnerdDate_purch As System.DateTime
            <DataMember()> Public Property RootItemsCertificatHomeOwnernPrice_purch As System.Int32
            <DataMember()> Public Property RootItemsCertificatHomeOwnernCurrency_purch As System.Int32
            <DataMember()> Public Property RootItemsCertificatHomeOwnernLandSuper As System.Int32
            <DataMember()> Public Property RootItemsCertificatHomeOwnernHomeSuper As System.Int32
            <DataMember()> Public Property RootItemsCertificatHomeOwnernRoofType As System.Int32
            <DataMember()> Public Property RootItemsCertificatHomeOwnernRoofYear As System.Int32
            <DataMember()> Public Property RootItemsCertificatHomeOwnernFloodZone As System.Int32
            <DataMember()> Public Property RootItemsCertificatHomeOwnernFoundType As System.Int32
            <DataMember()> Public Property RootItemsCertificatHomeOwnersSprinkSys As System.String
            <DataMember()> Public Property RootItemsCertificatHomeOwnernAirType As System.Int32
            <DataMember()> Public Property RootItemsCertificatHomeOwnernStories As System.Int32
            <DataMember()> Public Property RootItemsCertificatHomeOwnernHalfBath As System.Int32
            <DataMember()> Public Property RootItemsCertificatHomeOwnernFullBath As System.Int32
            <DataMember()> Public Property RootItemsCertificatHomeOwnernBedrooms As System.Int32
            <DataMember()> Public Property RootItemsCertificatHomeOwnernFirePlace As System.Int32
            <DataMember()> Public Property RootItemsCertificatHomeOwnernGarage As System.Int32
            <DataMember()> Public Property RootItemsCertificatHomeOwnersAnimalsDes As System.String
            <DataMember()> Public Property RootItemsCertificatHomeOwnernDist_Fire As System.Int32
            <DataMember()> Public Property RootItemsCertificatHomeOwnersAlarm_comp As System.String
            <DataMember()> Public Property RootItemsCertificatHomeOwnersFencePool As System.String
            <DataMember()> Public Property RootItemsCertificatHomeOwnernSwimPool As System.Int32
            <DataMember()> Public Property RootItemsCertificatHomeOwnernFenceHeight As System.Int32
            <DataMember()> Public Property RootItemsCertificatHomeOwnersPolicy_other As System.String
            <DataMember()> Public Property RootItemsCertificatHomeOwnernCap_other As System.Int32
            <DataMember()> Public Property RootItemsCertificatHomeOwnernCurrency_other As System.Int32
            <DataMember()> Public Property RootItemsCertificatHomeOwnerdExpir_other As System.DateTime
            <DataMember()> Public Property HomeOwner_HomeOwner As List(Of HomeOwner_HomeOwnerItem)
            <DataMember()> Public Property RootItemsCertificatLifenTypDurPay As System.Int32
            <DataMember()> Public Property RootItemsCertificatLifenPay_time As System.Int32
            <DataMember()> Public Property RootItemsCertificatLifenTypDurIns As System.Int32
            <DataMember()> Public Property RootItemsCertificatLifenInsur_time As System.Int32
            <DataMember()> Public Property RootItemsCertificatLifenXprem_time As System.Int32
            <DataMember()> Public Property RootItemsCertificatLifenAge_limit As System.Int32
            <DataMember()> Public Property RootItemsCertificatLifeNAGE_REINSU As System.Int32
            <DataMember()> Public Property RootItemsCertificatLifeNAGE As System.Int32
            <DataMember()> Public Property Life_Life As List(Of Life_LifeItem)
            <DataMember()> Public Property RootItemsCertificatTHEFTDSTARTDATE As System.DateTime
            <DataMember()> Public Property RootItemsCertificatTHEFTDEXPIRDAT As System.DateTime
            <DataMember()> Public Property RootItemsCertificatTHEFTNCOMMERGRP As System.Int32
            <DataMember()> Public Property RootItemsCertificatTHEFTSDESCBUSSI As System.String
            <DataMember()> Public Property RootItemsCertificatTHEFTNINSURED As System.Int32
            <DataMember()> Public Property RootItemsCertificatTHEFTNEMPLOYEES As System.Int32
            <DataMember()> Public Property RootItemsCertificatTHEFTNAREA As System.Int32
            <DataMember()> Public Property RootItemsCertificatTHEFTNVIGILANCE As System.Int32
            <DataMember()> Public Property RootItemsCertificatTHEFTNCAPITAL As System.Int32
            <DataMember()> Public Property RootItemsCertificatTHEFTDNULLDATE As System.DateTime
            <DataMember()> Public Property RootItemsCertificatTHEFTNNULLCODE As System.Int32
            <DataMember()> Public Property THEFT_THEFT As List(Of THEFT_THEFTItem)
            <DataMember()> Public Property RootItemsCertificatFINANCIAL_INSTRUMENTSNCONSECUTIVE As System.Int32
            <DataMember()> Public Property RootItemsCertificatFINANCIAL_INSTRUMENTSNINSTRUMENT_TY As System.Int32
            <DataMember()> Public Property RootItemsCertificatFINANCIAL_INSTRUMENTSNBANK_CODE As System.Int32
            <DataMember()> Public Property RootItemsCertificatFINANCIAL_INSTRUMENTSNCARD_TYPE As System.Int32
            <DataMember()> Public Property RootItemsCertificatFINANCIAL_INSTRUMENTSSNUMBER As System.String
            <DataMember()> Public Property RootItemsCertificatFINANCIAL_INSTRUMENTSDCARDEXPIR As System.DateTime
            <DataMember()> Public Property RootItemsCertificatFINANCIAL_INSTRUMENTSDSTARTDATE As System.DateTime
            <DataMember()> Public Property RootItemsCertificatFINANCIAL_INSTRUMENTSDTERM_DATE As System.DateTime
            <DataMember()> Public Property RootItemsCertificatFINANCIAL_INSTRUMENTSNQUOTA As System.Int32
            <DataMember()> Public Property RootItemsCertificatFINANCIAL_INSTRUMENTSNAMOUNT As System.Decimal
            <DataMember()> Public Property RootItemsCertificatFINANCIAL_INSTRUMENTSNCURRENCY As System.Int32
            <DataMember()> Public Property FINANCIAL_INSTRUMENTS_FINANCIAL_INSTRUMENTS As List(Of FINANCIAL_INSTRUMENTS_FINANCIAL_INSTRUMENTSItem)
            <DataMember()> Public Property RootItemsCertificatHEALTHDEFFECDATE As System.DateTime
            <DataMember()> Public Property RootItemsCertificatHEALTHDEXPIRDAT As System.DateTime
            <DataMember()> Public Property RootItemsCertificatHEALTHNCAPITAL As System.Int32
            <DataMember()> Public Property RootItemsCertificatHEALTHNPREMIUM As System.Int32
            <DataMember()> Public Property RootItemsCertificatHEALTHSCERTYPE As System.String
            <DataMember()> Public Property RootItemsCertificatHEALTHNBRANCH As System.String
            <DataMember()> Public Property RootItemsCertificatHEALTHNPRODUCT As System.String
            <DataMember()> Public Property RootItemsCertificatHEALTHNPOLICY As System.String
            <DataMember()> Public Property RootItemsCertificatHEALTHNCERTIF As System.String
            <DataMember()> Public Property RootItemsCertificatHEALTHROLES2NROLE As System.Int32
            <DataMember()> Public Property RootItemsCertificatHEALTHROLES2SCLIENT As System.String
            <DataMember()> Public Property ROLES2_ROLES2 As List(Of ROLES2_ROLES2Item)
            <DataMember()> Public Property HEALTH_HEALTH As List(Of HEALTH_HEALTHItem)
            <DataMember()> Public Property RootItemsCertificatBeneficiarnModulec As System.Int32
            <DataMember()> Public Property RootItemsCertificatBeneficiarnCover As System.Int32
            <DataMember()> Public Property RootItemsCertificatBeneficiarsClient As System.String
            <DataMember()> Public Property RootItemsCertificatBeneficiarnRelation As System.Int32
            <DataMember()> Public Property RootItemsCertificatBeneficiarsIrrevoc As System.String
            <DataMember()> Public Property RootItemsCertificatBeneficiarnParticip As System.Int32
            <DataMember()> Public Property Beneficiar_Beneficiar As List(Of Beneficiar_BeneficiarItem)
            <DataMember()> Public Property RootItemsCertificatClausenClause As System.Int32
            <DataMember()> Public Property RootItemsCertificatClausenNotenum As System.Int32
            <DataMember()> Public Property Clause_Clause As List(Of Clause_ClauseItem)
            <DataMember()> Public Property RootItemsCertificatPOLICY_HISNMOVEMENT As System.Int32
            <DataMember()> Public Property RootItemsCertificatPOLICY_HISNTYPE_HIST As System.Int32
            <DataMember()> Public Property RootItemsCertificatPOLICY_HISDEFFECDATE As System.DateTime
            <DataMember()> Public Property RootItemsCertificatPOLICY_HISNTRANSACTIO As System.Int32
            <DataMember()> Public Property RootItemsCertificatPOLICY_HISNRECEIPT As System.Int32
            <DataMember()> Public Property RootItemsCertificatPOLICY_HISSNULL_MOVE As System.String
            <DataMember()> Public Property RootItemsCertificatPOLICY_HISDNULLDATE As System.DateTime
            <DataMember()> Public Property POLICY_HIS_POLICY_HIS As List(Of POLICY_HIS_POLICY_HISItem)
            <DataMember()> Public Property RootItemsCertificatDIR_DEBITNBANKEXT As System.Int32
            <DataMember()> Public Property RootItemsCertificatDIR_DEBITNTYP_CRECARD As System.Int32
            <DataMember()> Public Property RootItemsCertificatDIR_DEBITSCREDI_CARD As System.String
            <DataMember()> Public Property RootItemsCertificatDIR_DEBITDCARDEXPIR As System.DateTime
            <DataMember()> Public Property RootItemsCertificatDIR_DEBITNPOLICY As System.Int32
            <DataMember()> Public Property DIR_DEBIT_DIR_DEBIT As List(Of DIR_DEBIT_DIR_DEBITItem)
            <DataMember()> Public Property Certificat_Certificat As List(Of Certificat_CertificatItem)
            <DataMember()> Public Property Items_Item As List(Of Items_ItemItem)

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Curren_pol_Curren_polItem

            <DataMember()> Public Property nCurrency As System.Int32
            <DataMember()> Public Property nCurrencyDesc As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Roles_RolesItem

            <DataMember()> Public Property nRole As System.Int32
            <DataMember()> Public Property nRoleDesc As System.String
            <DataMember()> Public Property sClient As System.String
            <DataMember()> Public Property sClientDesc As System.String
            <DataMember()> Public Property nStatusRol As System.Int32
            <DataMember()> Public Property nStatusRolDesc As System.String
            <DataMember()> Public Property sSexClien As System.String
            <DataMember()> Public Property sSexClienDesc As System.String
            <DataMember()> Public Property dBirthDate As System.DateTime
            <DataMember()> Public Property nTypeRisk As System.Int32
            <DataMember()> Public Property nTypeRiskDesc As System.String
            <DataMember()> Public Property nRating As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class SUM_INSUR_SUM_INSURItem

            <DataMember()> Public Property NSUMINS_COD As System.Int32
            <DataMember()> Public Property NSUMINS_CODDesc As System.String
            <DataMember()> Public Property NSUMINS_REAL As System.Int32
            <DataMember()> Public Property NCOINSURAN As System.Int32
            <DataMember()> Public Property NSUM_INSUR As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Cover_CoverItem

            <DataMember()> Public Property nModulec As System.Int32
            <DataMember()> Public Property nModulecDesc As System.String
            <DataMember()> Public Property nCover As System.Int32
            <DataMember()> Public Property nCoverDesc As System.String
            <DataMember()> Public Property nRole As System.Int32
            <DataMember()> Public Property nRoleDesc As System.String
            <DataMember()> Public Property sClient As System.String
            <DataMember()> Public Property sClientDesc As System.String
            <DataMember()> Public Property nCurrency As System.Int32
            <DataMember()> Public Property nCurrencyDesc As System.String
            <DataMember()> Public Property nCapital As System.Int32
            <DataMember()> Public Property nPremium As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class REINSURAN_REINSURANItem

            <DataMember()> Public Property NBRANCH_REI As System.Int32
            <DataMember()> Public Property NBRANCH_REIDesc As System.String
            <DataMember()> Public Property NTYPE_REIN As System.Int32
            <DataMember()> Public Property NTYPE_REINDesc As System.String
            <DataMember()> Public Property NCAPITAL As System.Int32
            <DataMember()> Public Property NCURRENCY As System.Int32
            <DataMember()> Public Property NCURRENCYDesc As System.String
            <DataMember()> Public Property NSHARE As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class REINSURAN2_REINSURAN2Item

            <DataMember()> Public Property NBRANCH_REI As System.Int32
            <DataMember()> Public Property NBRANCH_REIDesc As System.String
            <DataMember()> Public Property NCOMPANY As System.Int32
            <DataMember()> Public Property NCAPITAL As System.Int32
            <DataMember()> Public Property NCURRENCY As System.Int32
            <DataMember()> Public Property NCURRENCYDesc As System.String
            <DataMember()> Public Property NSHARE As System.Int32
            <DataMember()> Public Property NCOMMISSI As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Disc_xprem_Disc_xpremItem

            <DataMember()> Public Property nDisc_code As System.Int32
            <DataMember()> Public Property nDisc_codeDesc As System.String
            <DataMember()> Public Property sAgree As System.String
            <DataMember()> Public Property nCause As System.Int32
            <DataMember()> Public Property nCauseDesc As System.String
            <DataMember()> Public Property nPercent As System.Int32
            <DataMember()> Public Property nCurrency As System.Int32
            <DataMember()> Public Property nCurrencyDesc As System.String
            <DataMember()> Public Property nAmount As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Auto_AutoItem

            <DataMember()> Public Property sRegist As System.String
            <DataMember()> Public Property sLicense_ty As System.String
            <DataMember()> Public Property sLicense_tyDesc As System.String
            <DataMember()> Public Property nVehType As System.Int32
            <DataMember()> Public Property nVehTypeDesc As System.String
            <DataMember()> Public Property sMotor As System.String
            <DataMember()> Public Property sChassis As System.String
            <DataMember()> Public Property sColor As System.String
            <DataMember()> Public Property nCapital As System.Int32
            <DataMember()> Public Property nVeh_valor As System.Int32
            <DataMember()> Public Property nYear As System.Int32
            <DataMember()> Public Property nAutoZone As System.Int32
            <DataMember()> Public Property nAutoZoneDesc As System.String
            <DataMember()> Public Property nUse As System.Int32
            <DataMember()> Public Property nUseDesc As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Fire_FireItem

            <DataMember()> Public Property nConstCat As System.Int32
            <DataMember()> Public Property nConstCatDesc As System.String
            <DataMember()> Public Property nActivityCat As System.Int32
            <DataMember()> Public Property nActivityCatDesc As System.String
            <DataMember()> Public Property nFloor_quan As System.Int32
            <DataMember()> Public Property nRoofType As System.Int32
            <DataMember()> Public Property nRoofTypeDesc As System.String
            <DataMember()> Public Property nSeismicZone As System.Int32
            <DataMember()> Public Property nSeismicZoneDesc As System.String
            <DataMember()> Public Property nBuildType As System.Int32
            <DataMember()> Public Property nBuildTypeDesc As System.String
            <DataMember()> Public Property nSpCombType As System.Int32
            <DataMember()> Public Property nSpCombTypeDesc As System.String
            <DataMember()> Public Property sDescBussi As System.String
            <DataMember()> Public Property nHurrican_zone As System.Int32
            <DataMember()> Public Property nSideCloseType As System.Int32
            <DataMember()> Public Property nSideCloseTypeDesc As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class HomeOwner_HomeOwnerItem

            <DataMember()> Public Property nOwnerShip As System.Int32
            <DataMember()> Public Property nOwnerShipDesc As System.String
            <DataMember()> Public Property nDwellingType As System.Int32
            <DataMember()> Public Property nDwellingTypeDesc As System.String
            <DataMember()> Public Property NSEISMICZONE As System.Int32
            <DataMember()> Public Property nYear_built As System.Int32
            <DataMember()> Public Property dDate_purch As System.DateTime
            <DataMember()> Public Property nPrice_purch As System.Int32
            <DataMember()> Public Property nCurrency_purch As System.Int32
            <DataMember()> Public Property nCurrency_purchDesc As System.String
            <DataMember()> Public Property nLandSuper As System.Int32
            <DataMember()> Public Property nHomeSuper As System.Int32
            <DataMember()> Public Property nRoofType As System.Int32
            <DataMember()> Public Property nRoofTypeDesc As System.String
            <DataMember()> Public Property nRoofYear As System.Int32
            <DataMember()> Public Property nFloodZone As System.Int32
            <DataMember()> Public Property nFloodZoneDesc As System.String
            <DataMember()> Public Property nFoundType As System.Int32
            <DataMember()> Public Property sSprinkSys As System.String
            <DataMember()> Public Property nAirType As System.Int32
            <DataMember()> Public Property nAirTypeDesc As System.String
            <DataMember()> Public Property nStories As System.Int32
            <DataMember()> Public Property nHalfBath As System.Int32
            <DataMember()> Public Property nFullBath As System.Int32
            <DataMember()> Public Property nBedrooms As System.Int32
            <DataMember()> Public Property nFirePlace As System.Int32
            <DataMember()> Public Property nGarage As System.Int32
            <DataMember()> Public Property sAnimalsDes As System.String
            <DataMember()> Public Property nDist_Fire As System.Int32
            <DataMember()> Public Property sAlarm_comp As System.String
            <DataMember()> Public Property sFencePool As System.String
            <DataMember()> Public Property nSwimPool As System.Int32
            <DataMember()> Public Property nSwimPoolDesc As System.String
            <DataMember()> Public Property nFenceHeight As System.Int32
            <DataMember()> Public Property sPolicy_other As System.String
            <DataMember()> Public Property nCap_other As System.Int32
            <DataMember()> Public Property nCurrency_other As System.Int32
            <DataMember()> Public Property nCurrency_otherDesc As System.String
            <DataMember()> Public Property dExpir_other As System.DateTime

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Life_LifeItem

            <DataMember()> Public Property nTypDurPay As System.Int32
            <DataMember()> Public Property nTypDurPayDesc As System.String
            <DataMember()> Public Property nPay_time As System.Int32
            <DataMember()> Public Property nTypDurIns As System.Int32
            <DataMember()> Public Property nTypDurInsDesc As System.String
            <DataMember()> Public Property nInsur_time As System.Int32
            <DataMember()> Public Property nXprem_time As System.Int32
            <DataMember()> Public Property nAge_limit As System.Int32
            <DataMember()> Public Property NAGE_REINSU As System.Int32
            <DataMember()> Public Property NAGE As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class THEFT_THEFTItem

            <DataMember()> Public Property DSTARTDATE As System.DateTime
            <DataMember()> Public Property DEXPIRDAT As System.DateTime
            <DataMember()> Public Property NCOMMERGRP As System.Int32
            <DataMember()> Public Property NCOMMERGRPDesc As System.String
            <DataMember()> Public Property SDESCBUSSI As System.String
            <DataMember()> Public Property NINSURED As System.Int32
            <DataMember()> Public Property NEMPLOYEES As System.Int32
            <DataMember()> Public Property NAREA As System.Int32
            <DataMember()> Public Property NVIGILANCE As System.Int32
            <DataMember()> Public Property NCAPITAL As System.Int32
            <DataMember()> Public Property DNULLDATE As System.DateTime
            <DataMember()> Public Property NNULLCODE As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class FINANCIAL_INSTRUMENTS_FINANCIAL_INSTRUMENTSItem

            <DataMember()> Public Property NCONSECUTIVE As System.Int32
            <DataMember()> Public Property NINSTRUMENT_TY As System.Int32
            <DataMember()> Public Property NINSTRUMENT_TYDesc As System.String
            <DataMember()> Public Property NBANK_CODE As System.Int32
            <DataMember()> Public Property NBANK_CODEDesc As System.String
            <DataMember()> Public Property NCARD_TYPE As System.Int32
            <DataMember()> Public Property NCARD_TYPEDesc As System.String
            <DataMember()> Public Property SNUMBER As System.String
            <DataMember()> Public Property DCARDEXPIR As System.DateTime
            <DataMember()> Public Property DSTARTDATE As System.DateTime
            <DataMember()> Public Property DTERM_DATE As System.DateTime
            <DataMember()> Public Property NQUOTA As System.Int32
            <DataMember()> Public Property NAMOUNT As System.Decimal
            <DataMember()> Public Property NCURRENCY As System.Int32
            <DataMember()> Public Property NCURRENCYDesc As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class ROLES2_ROLES2Item

            <DataMember()> Public Property NROLE As System.Int32
            <DataMember()> Public Property NROLEDesc As System.String
            <DataMember()> Public Property SCLIENT As System.String
            <DataMember()> Public Property SCLIENTDesc As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class HEALTH_HEALTHItem

            <DataMember()> Public Property DEFFECDATE As System.DateTime
            <DataMember()> Public Property DEXPIRDAT As System.DateTime
            <DataMember()> Public Property NCAPITAL As System.Int32
            <DataMember()> Public Property NPREMIUM As System.Int32
            <DataMember()> Public Property SCERTYPE As System.String
            <DataMember()> Public Property NBRANCH As System.String
            <DataMember()> Public Property NPRODUCT As System.String
            <DataMember()> Public Property NPOLICY As System.String
            <DataMember()> Public Property NCERTIF As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Beneficiar_BeneficiarItem

            <DataMember()> Public Property nModulec As System.Int32
            <DataMember()> Public Property nModulecDesc As System.String
            <DataMember()> Public Property nCover As System.Int32
            <DataMember()> Public Property sClient As System.String
            <DataMember()> Public Property sClientDesc As System.String
            <DataMember()> Public Property nRelation As System.Int32
            <DataMember()> Public Property nRelationDesc As System.String
            <DataMember()> Public Property sIrrevoc As System.String
            <DataMember()> Public Property nParticip As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Clause_ClauseItem

            <DataMember()> Public Property nClause As System.Int32
            <DataMember()> Public Property nNotenum As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class POLICY_HIS_POLICY_HISItem

            <DataMember()> Public Property NMOVEMENT As System.Int32
            <DataMember()> Public Property NTYPE_HIST As System.Int32
            <DataMember()> Public Property NTYPE_HISTDesc As System.String
            <DataMember()> Public Property DEFFECDATE As System.DateTime
            <DataMember()> Public Property NTRANSACTIO As System.Int32
            <DataMember()> Public Property NRECEIPT As System.Int32
            <DataMember()> Public Property SNULL_MOVE As System.String
            <DataMember()> Public Property DNULLDATE As System.DateTime

        End Class

        <Serializable()>
        <DataContract()>
        Public Class DIR_DEBIT_DIR_DEBITItem

            <DataMember()> Public Property NBANKEXT As System.Int32
            <DataMember()> Public Property NBANKEXTDesc As System.String
            <DataMember()> Public Property NTYP_CRECARD As System.Int32
            <DataMember()> Public Property NTYP_CRECARDDesc As System.String
            <DataMember()> Public Property SCREDI_CARD As System.String
            <DataMember()> Public Property DCARDEXPIR As System.DateTime
            <DataMember()> Public Property NPOLICY As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Certificat_CertificatItem

            <DataMember()> Public Property nBranch As System.Int32
            <DataMember()> Public Property nBranchDesc As System.String
            <DataMember()> Public Property nProduct As System.Int32
            <DataMember()> Public Property nProductDesc As System.String
            <DataMember()> Public Property nPolicy As System.Int32
            <DataMember()> Public Property nCapital As System.Int32
            <DataMember()> Public Property nPayfreq As System.Int32
            <DataMember()> Public Property nPayfreqDesc As System.String
            <DataMember()> Public Property sStatusva As System.String
            <DataMember()> Public Property sStatusvaDesc As System.String
            <DataMember()> Public Property dIssuedat As System.DateTime
            <DataMember()> Public Property nWait_code As System.Int32
            <DataMember()> Public Property nWait_codeDesc As System.String
            <DataMember()> Public Property dStartdate As System.DateTime
            <DataMember()> Public Property sRenewal As System.String
            <DataMember()> Public Property dNulldate As System.DateTime
            <DataMember()> Public Property nNullcode As System.Int32
            <DataMember()> Public Property nNullcodeDesc As System.String
            <DataMember()> Public Property dExpirdat As System.DateTime
            <DataMember()> Public Property dChangdat As System.DateTime
            <DataMember()> Public Property SCERTYPE As System.String
            <DataMember()> Public Property NCERTIF As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Items_ItemItem

            <DataMember()> Public Property SCLIENT As System.String
            <DataMember()> Public Property SCLIENAME As System.String

        End Class


#End Region

    End Class

End Namespace