'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Query Designer v7.1.120.1 at 2019/02/27 11:09:36 a.m. model release 1, Form Generator v1.0.34.22 - Query Generator v1.0.16.8
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class H5NNConsultaDeReciboActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"
   
        <WebMethod()>
        Public Shared Function ItemsTblDataLoad(RECIBONRECEIPT1 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NRECEIPT = 0, .SLEADINVO = String.Empty, .NBRANCH = 0, .NPRODUCT = 0, .NPOLICY = 0, .SCLIENT = String.Empty, .DISSUEDAT = Date.MinValue, .DEFFECDATE = Date.MinValue, .DEXPIRDAT = Date.MinValue, .DNULLDATE = Date.MinValue, .NNULLCODE = 0, .NPAYNUMBE = 0, .SDIRDEBIT = String.Empty, .NCURRENCY = 0, .NPREMIUM = 0, .NBALANCE = 0, .NCOMAMOU = 0, .NTAXAMOU = 0, .NSTATUS_PRE = 0, .DSTATDATE = Date.MinValue, .DPAYDATE = Date.MinValue, .SCERTYPE = String.Empty, .NDIGIT = 0, .NPERIOD = 0, .DLIMITDATE = Date.MinValue, .NTRATYPEI = 0, .NCONTRAT = 0, .NCOD_AGREE = 0, .NBRANCHDesc = String.Empty, .NPRODUCTDesc = String.Empty, .SCLIENTDesc = String.Empty, .NNULLCODEDesc = String.Empty, .NCURRENCYDesc = String.Empty, .NSTATUS_PREDesc = String.Empty, .NTRATYPEIDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT PREMIUM.NRECEIPT, PREMIUM.SLEADINVO, PREMIUM.NBRANCH, PREMIUM.NPRODUCT, PREMIUM.NPOLICY, PREMIUM.SCLIENT, PREMIUM.DISSUEDAT, PREMIUM.DEFFECDATE, PREMIUM.DEXPIRDAT, PREMIUM.DNULLDATE, PREMIUM.NNULLCODE, PREMIUM.NPAYNUMBE, PREMIUM.SDIRDEBIT, PREMIUM.NCURRENCY, PREMIUM.NPREMIUM, PREMIUM.NBALANCE, PREMIUM.NCOMAMOU, PREMIUM.NTAXAMOU, PREMIUM.NSTATUS_PRE, PREMIUM.DSTATDATE, PREMIUM.DPAYDATE, PREMIUM.SCERTYPE, PREMIUM.NDIGIT, PREMIUM.NPERIOD, PREMIUM.DLIMITDATE, PREMIUM.NTRATYPEI, PREMIUM.NCONTRAT, PREMIUM.NCOD_AGREE, TABLE10.SDESCRIPT NBRANCHDESC, PRODMASTER.SDESCRIPT NPRODUCTDESC, CLIENT.SCLIENAME SCLIENTDESC, TABLE95.SDESCRIPT NNULLCODEDESC, TABLE11.SSHORT_DES NCURRENCYDESC, TABLE19.SDESCRIPT NSTATUS_PREDESC, TABLE24.SDESCRIPT NTRATYPEIDESC FROM PREMIUM PREMIUM LEFT JOIN TABLE10 TABLE10 ON TABLE10.NBRANCH = PREMIUM.NBRANCH LEFT JOIN PRODMASTER PRODMASTER ON PRODMASTER.NBRANCH = PREMIUM.NBRANCH  AND PRODMASTER.NPRODUCT = PREMIUM.NPRODUCT LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = PREMIUM.SCLIENT LEFT JOIN TABLE95 TABLE95 ON TABLE95.NNULLCODE = PREMIUM.NNULLCODE LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = PREMIUM.NCURRENCY LEFT JOIN TABLE19 TABLE19 ON TABLE19.NSTATUS_PRE = PREMIUM.NSTATUS_PRE LEFT JOIN TABLE24 TABLE24 ON TABLE24.NTRATYPEI = PREMIUM.NTRATYPEI  WHERE PREMIUM.NRECEIPT = @:PREMIUMNRECEIPT1", "PREMIUM", "Linked.LatCombined")
                    .AddParameter("PREMIUMNRECEIPT1", DbType.Decimal, 0, False, RECIBONRECEIPT1)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NRECEIPT = itemData.NumericValue("NRECEIPT"), .SLEADINVO = itemData.StringValue("SLEADINVO"), .NBRANCH = itemData.NumericValue("NBRANCH"), .NPRODUCT = itemData.NumericValue("NPRODUCT"), .NPOLICY = itemData.NumericValue("NPOLICY"), .SCLIENT = itemData.StringValue("SCLIENT"), .DISSUEDAT = itemData.DateTimeValue("DISSUEDAT"), .DEFFECDATE = itemData.DateTimeValue("DEFFECDATE"), .DEXPIRDAT = itemData.DateTimeValue("DEXPIRDAT"), .DNULLDATE = itemData.DateTimeValue("DNULLDATE"), .NNULLCODE = itemData.NumericValue("NNULLCODE"), .NPAYNUMBE = itemData.NumericValue("NPAYNUMBE"), .SDIRDEBIT = itemData.StringValue("SDIRDEBIT"), .NCURRENCY = itemData.NumericValue("NCURRENCY"), .NPREMIUM = itemData.NumericValue("NPREMIUM"), .NBALANCE = itemData.NumericValue("NBALANCE"), .NCOMAMOU = itemData.NumericValue("NCOMAMOU"), .NTAXAMOU = itemData.NumericValue("NTAXAMOU"), .NSTATUS_PRE = itemData.NumericValue("NSTATUS_PRE"), .DSTATDATE = itemData.DateTimeValue("DSTATDATE"), .DPAYDATE = itemData.DateTimeValue("DPAYDATE"), .SCERTYPE = itemData.StringValue("SCERTYPE"), .NDIGIT = itemData.NumericValue("NDIGIT"), .NPERIOD = itemData.NumericValue("NPERIOD"), .DLIMITDATE = itemData.DateTimeValue("DLIMITDATE"), .NTRATYPEI = itemData.NumericValue("NTRATYPEI"), .NCONTRAT = itemData.NumericValue("NCONTRAT"), .NCOD_AGREE = itemData.NumericValue("NCOD_AGREE"), .NBRANCHDesc = itemData.StringValue("NBRANCHDESC"), .NPRODUCTDesc = itemData.StringValue("NPRODUCTDESC"), .SCLIENTDesc = itemData.StringValue("SCLIENTDESC"), .NNULLCODEDesc = itemData.StringValue("NNULLCODEDESC"), .NCURRENCYDesc = itemData.StringValue("NCURRENCYDESC"), .NSTATUS_PREDesc = itemData.StringValue("NSTATUS_PREDESC"), .NTRATYPEIDesc = itemData.StringValue("NTRATYPEIDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5NNConsultaDeRecibo", "ItemsTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (ItemsTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function ItemsTblDataCount(RECIBONRECEIPT1 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT PREMIUM.NRECEIPT, PREMIUM.SLEADINVO, PREMIUM.NBRANCH, PREMIUM.NPRODUCT, PREMIUM.NPOLICY, PREMIUM.SCLIENT, PREMIUM.DISSUEDAT, PREMIUM.DEFFECDATE, PREMIUM.DEXPIRDAT, PREMIUM.DNULLDATE, PREMIUM.NNULLCODE, PREMIUM.NPAYNUMBE, PREMIUM.SDIRDEBIT, PREMIUM.NCURRENCY, PREMIUM.NPREMIUM, PREMIUM.NBALANCE, PREMIUM.NCOMAMOU, PREMIUM.NTAXAMOU, PREMIUM.NSTATUS_PRE, PREMIUM.DSTATDATE, PREMIUM.DPAYDATE, PREMIUM.SCERTYPE, PREMIUM.NDIGIT, PREMIUM.NPERIOD, PREMIUM.DLIMITDATE, PREMIUM.NTRATYPEI, PREMIUM.NCONTRAT, PREMIUM.NCOD_AGREE, TABLE10.SDESCRIPT NBRANCHDESC, PRODMASTER.SDESCRIPT NPRODUCTDESC, CLIENT.SCLIENAME SCLIENTDESC, TABLE95.SDESCRIPT NNULLCODEDESC, TABLE11.SSHORT_DES NCURRENCYDESC, TABLE19.SDESCRIPT NSTATUS_PREDESC, TABLE24.SDESCRIPT NTRATYPEIDESC FROM PREMIUM PREMIUM LEFT JOIN TABLE10 TABLE10 ON TABLE10.NBRANCH = PREMIUM.NBRANCH LEFT JOIN PRODMASTER PRODMASTER ON PRODMASTER.NBRANCH = PREMIUM.NBRANCH  AND PRODMASTER.NPRODUCT = PREMIUM.NPRODUCT LEFT JOIN CLIENT CLIENT ON CLIENT.SCLIENT = PREMIUM.SCLIENT LEFT JOIN TABLE95 TABLE95 ON TABLE95.NNULLCODE = PREMIUM.NNULLCODE LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = PREMIUM.NCURRENCY LEFT JOIN TABLE19 TABLE19 ON TABLE19.NSTATUS_PRE = PREMIUM.NSTATUS_PRE LEFT JOIN TABLE24 TABLE24 ON TABLE24.NTRATYPEI = PREMIUM.NTRATYPEI  WHERE PREMIUM.NRECEIPT = @:PREMIUMNRECEIPT1)", "PREMIUM", "Linked.LatCombined")
                    .AddParameter("PREMIUMNRECEIPT1", DbType.Decimal, 0, False, RECIBONRECEIPT1)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5NNConsultaDeRecibo", "ItemsTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (ItemsTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function PREMIUM_MOTblDataLoad(PREMIUMMOSCERTYPE1 As String, PREMIUMMONBRANCH2 As String, PREMIUMMONPRODUCT3 As String, PREMIUMMONRECEIPT4 As String, PREMIUMMONDIGIT5 As String, PREMIUMMONPAYNUMBE6 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NID = 0, .NTRANSAC = 0, .NTYPE = 0, .DCOMPDATE = Date.MinValue, .NAMOUNT = 0, .NCURRENCY = 0, .NTYPEDesc = String.Empty, .NCURRENCYDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT PREMIUM_MO.NID, PREMIUM_MO.NTRANSAC, PREMIUM_MO.NTYPE, PREMIUM_MO.DCOMPDATE, PREMIUM_MO.NAMOUNT, PREMIUM_MO.NCURRENCY, TABLE6.SDESCRIPT NTYPEDESC, TABLE11.SSHORT_DES NCURRENCYDESC FROM PREMIUM_MO PREMIUM_MO LEFT JOIN TABLE6 TABLE6 ON TABLE6.NTYPE_TRAN = PREMIUM_MO.NTYPE LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = PREMIUM_MO.NCURRENCY  WHERE PREMIUM_MO.SCERTYPE = @:PREMIUM_MOSCERTYPE1 AND PREMIUM_MO.NBRANCH = @:PREMIUM_MONBRANCH2 AND PREMIUM_MO.NPRODUCT = @:PREMIUM_MONPRODUCT3 AND PREMIUM_MO.NRECEIPT = @:PREMIUM_MONRECEIPT4 AND PREMIUM_MO.NDIGIT = @:PREMIUM_MONDIGIT5 AND PREMIUM_MO.NPAYNUMBE = @:PREMIUM_MONPAYNUMBE6", "PREMIUM_MO", "Linked.LatCombined")
                    .AddParameter("PREMIUM_MOSCERTYPE1", DbType.AnsiStringFixedLength, 0, (PREMIUMMOSCERTYPE1 = String.Empty), PREMIUMMOSCERTYPE1)
                    .AddParameter("PREMIUM_MONBRANCH2", DbType.AnsiStringFixedLength, 0, (PREMIUMMONBRANCH2 = String.Empty), PREMIUMMONBRANCH2)
                    .AddParameter("PREMIUM_MONPRODUCT3", DbType.AnsiStringFixedLength, 0, (PREMIUMMONPRODUCT3 = String.Empty), PREMIUMMONPRODUCT3)
                    .AddParameter("PREMIUM_MONRECEIPT4", DbType.AnsiStringFixedLength, 0, (PREMIUMMONRECEIPT4 = String.Empty), PREMIUMMONRECEIPT4)
                    .AddParameter("PREMIUM_MONDIGIT5", DbType.AnsiStringFixedLength, 0, (PREMIUMMONDIGIT5 = String.Empty), PREMIUMMONDIGIT5)
                    .AddParameter("PREMIUM_MONPAYNUMBE6", DbType.AnsiStringFixedLength, 0, (PREMIUMMONPAYNUMBE6 = String.Empty), PREMIUMMONPAYNUMBE6)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NID = itemData.NumericValue("NID"), .NTRANSAC = itemData.NumericValue("NTRANSAC"), .NTYPE = itemData.NumericValue("NTYPE"), .DCOMPDATE = itemData.DateTimeValue("DCOMPDATE"), .NAMOUNT = itemData.NumericValue("NAMOUNT"), .NCURRENCY = itemData.NumericValue("NCURRENCY"), .NTYPEDesc = itemData.StringValue("NTYPEDESC"), .NCURRENCYDesc = itemData.StringValue("NCURRENCYDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5NNConsultaDeRecibo", "PREMIUM_MOTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (PREMIUM_MOTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function PREMIUM_MOTblDataCount(PREMIUMMOSCERTYPE1 As String, PREMIUMMONBRANCH2 As String, PREMIUMMONPRODUCT3 As String, PREMIUMMONRECEIPT4 As String, PREMIUMMONDIGIT5 As String, PREMIUMMONPAYNUMBE6 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT PREMIUM_MO.NID, PREMIUM_MO.NTRANSAC, PREMIUM_MO.NTYPE, PREMIUM_MO.DCOMPDATE, PREMIUM_MO.NAMOUNT, PREMIUM_MO.NCURRENCY, TABLE6.SDESCRIPT NTYPEDESC, TABLE11.SSHORT_DES NCURRENCYDESC FROM PREMIUM_MO PREMIUM_MO LEFT JOIN TABLE6 TABLE6 ON TABLE6.NTYPE_TRAN = PREMIUM_MO.NTYPE LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = PREMIUM_MO.NCURRENCY  WHERE PREMIUM_MO.SCERTYPE = @:PREMIUM_MOSCERTYPE1 AND PREMIUM_MO.NBRANCH = @:PREMIUM_MONBRANCH2 AND PREMIUM_MO.NPRODUCT = @:PREMIUM_MONPRODUCT3 AND PREMIUM_MO.NRECEIPT = @:PREMIUM_MONRECEIPT4 AND PREMIUM_MO.NDIGIT = @:PREMIUM_MONDIGIT5 AND PREMIUM_MO.NPAYNUMBE = @:PREMIUM_MONPAYNUMBE6)", "PREMIUM_MO", "Linked.LatCombined")
                    .AddParameter("PREMIUM_MOSCERTYPE1", DbType.AnsiStringFixedLength, 0, (PREMIUMMOSCERTYPE1 = String.Empty), PREMIUMMOSCERTYPE1)
                    .AddParameter("PREMIUM_MONBRANCH2", DbType.AnsiStringFixedLength, 0, (PREMIUMMONBRANCH2 = String.Empty), PREMIUMMONBRANCH2)
                    .AddParameter("PREMIUM_MONPRODUCT3", DbType.AnsiStringFixedLength, 0, (PREMIUMMONPRODUCT3 = String.Empty), PREMIUMMONPRODUCT3)
                    .AddParameter("PREMIUM_MONRECEIPT4", DbType.AnsiStringFixedLength, 0, (PREMIUMMONRECEIPT4 = String.Empty), PREMIUMMONRECEIPT4)
                    .AddParameter("PREMIUM_MONDIGIT5", DbType.AnsiStringFixedLength, 0, (PREMIUMMONDIGIT5 = String.Empty), PREMIUMMONDIGIT5)
                    .AddParameter("PREMIUM_MONPAYNUMBE6", DbType.AnsiStringFixedLength, 0, (PREMIUMMONPAYNUMBE6 = String.Empty), PREMIUMMONPAYNUMBE6)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5NNConsultaDeRecibo", "PREMIUM_MOTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (PREMIUM_MOTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function PREMIUM_MOSelectCommandActionPREMIUM_MO(PREMIUMMOSCERTYPE1 As String, PREMIUMMONBRANCH2 As String, PREMIUMMONPRODUCT3 As String, PREMIUMMONRECEIPT4 As String, PREMIUMMONDIGIT5 As String, PREMIUMMONPAYNUMBE6 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(PREMIUM_MO.NID) COUNTDATA FROM PREMIUM_MO PREMIUM_MO LEFT JOIN TABLE6 TABLE6 ON TABLE6.NTYPE_TRAN = PREMIUM_MO.NTYPE LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = PREMIUM_MO.NCURRENCY  WHERE PREMIUM_MO.SCERTYPE = @:PREMIUM_MOSCERTYPE1 AND PREMIUM_MO.NBRANCH = @:PREMIUM_MONBRANCH2 AND PREMIUM_MO.NPRODUCT = @:PREMIUM_MONPRODUCT3 AND PREMIUM_MO.NRECEIPT = @:PREMIUM_MONRECEIPT4 AND PREMIUM_MO.NDIGIT = @:PREMIUM_MONDIGIT5 AND PREMIUM_MO.NPAYNUMBE = @:PREMIUM_MONPAYNUMBE6", "PREMIUM_MO", "Linked.LatCombined")
                    .AddParameter("PREMIUM_MOSCERTYPE1", DbType.AnsiStringFixedLength, 0, (PREMIUMMOSCERTYPE1 = String.Empty), PREMIUMMOSCERTYPE1)
                    .AddParameter("PREMIUM_MONBRANCH2", DbType.AnsiStringFixedLength, 0, (PREMIUMMONBRANCH2 = String.Empty), PREMIUMMONBRANCH2)
                    .AddParameter("PREMIUM_MONPRODUCT3", DbType.AnsiStringFixedLength, 0, (PREMIUMMONPRODUCT3 = String.Empty), PREMIUMMONPRODUCT3)
                    .AddParameter("PREMIUM_MONRECEIPT4", DbType.AnsiStringFixedLength, 0, (PREMIUMMONRECEIPT4 = String.Empty), PREMIUMMONRECEIPT4)
                    .AddParameter("PREMIUM_MONDIGIT5", DbType.AnsiStringFixedLength, 0, (PREMIUMMONDIGIT5 = String.Empty), PREMIUMMONDIGIT5)
                    .AddParameter("PREMIUM_MONPAYNUMBE6", DbType.AnsiStringFixedLength, 0, (PREMIUMMONPAYNUMBE6 = String.Empty), PREMIUMMONPAYNUMBE6)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5NNConsultaDeRecibo", "PREMIUM_MOSelectCommandActionPREMIUM_MO", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (PREMIUM_MOSelectCommandActionPREMIUM_MO)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function PREMIUM_CETblDataLoad(PREMIUMCESCERTYPE1 As String, PREMIUMCENBRANCH2 As String, PREMIUMCENPRODUCT3 As String, PREMIUMCENRECEIPT4 As String, PREMIUMCENDIGIT5 As String, PREMIUMCENPAYNUMBE6 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NCERTIF = 0, .NBILL_ITEM = 0, .DSTARTDATE = Date.MinValue, .DEXPIRDAT = Date.MinValue, .NPREMIUM = 0, .NTRATYPEI = 0, .NCAPITAL = 0, .NBILL_ITEMDesc = String.Empty, .NTRATYPEIDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT PREMIUM_CE.NCERTIF, PREMIUM_CE.NBILL_ITEM, PREMIUM_CE.DSTARTDATE, PREMIUM_CE.DEXPIRDAT, PREMIUM_CE.NPREMIUM, PREMIUM_CE.NTRATYPEI, PREMIUM_CE.NCAPITAL, TAB_BILL_I.SDESCRIPT NBILL_ITEMDESC, TABLE24.SDESCRIPT NTRATYPEIDESC FROM PREMIUM_CE PREMIUM_CE LEFT JOIN TAB_BILL_I TAB_BILL_I ON TAB_BILL_I.NBRANCH = PREMIUM_CE.NBRANCH  AND TAB_BILL_I.NPRODUCT = PREMIUM_CE.NPRODUCT  AND TAB_BILL_I.NBILL_ITEM = PREMIUM_CE.NBILL_ITEM LEFT JOIN TABLE24 TABLE24 ON TABLE24.NTRATYPEI = PREMIUM_CE.NTRATYPEI  WHERE PREMIUM_CE.SCERTYPE = @:PREMIUM_CESCERTYPE1 AND PREMIUM_CE.NBRANCH = @:PREMIUM_CENBRANCH2 AND PREMIUM_CE.NPRODUCT = @:PREMIUM_CENPRODUCT3 AND PREMIUM_CE.NRECEIPT = @:PREMIUM_CENRECEIPT4 AND PREMIUM_CE.NDIGIT = @:PREMIUM_CENDIGIT5 AND PREMIUM_CE.NPAYNUMBE = @:PREMIUM_CENPAYNUMBE6", "PREMIUM_CE", "Linked.LatCombined")
                    .AddParameter("PREMIUM_CESCERTYPE1", DbType.AnsiStringFixedLength, 0, (PREMIUMCESCERTYPE1 = String.Empty), PREMIUMCESCERTYPE1)
                    .AddParameter("PREMIUM_CENBRANCH2", DbType.AnsiStringFixedLength, 0, (PREMIUMCENBRANCH2 = String.Empty), PREMIUMCENBRANCH2)
                    .AddParameter("PREMIUM_CENPRODUCT3", DbType.AnsiStringFixedLength, 0, (PREMIUMCENPRODUCT3 = String.Empty), PREMIUMCENPRODUCT3)
                    .AddParameter("PREMIUM_CENRECEIPT4", DbType.AnsiStringFixedLength, 0, (PREMIUMCENRECEIPT4 = String.Empty), PREMIUMCENRECEIPT4)
                    .AddParameter("PREMIUM_CENDIGIT5", DbType.AnsiStringFixedLength, 0, (PREMIUMCENDIGIT5 = String.Empty), PREMIUMCENDIGIT5)
                    .AddParameter("PREMIUM_CENPAYNUMBE6", DbType.AnsiStringFixedLength, 0, (PREMIUMCENPAYNUMBE6 = String.Empty), PREMIUMCENPAYNUMBE6)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NCERTIF = itemData.NumericValue("NCERTIF"), .NBILL_ITEM = itemData.NumericValue("NBILL_ITEM"), .DSTARTDATE = itemData.DateTimeValue("DSTARTDATE"), .DEXPIRDAT = itemData.DateTimeValue("DEXPIRDAT"), .NPREMIUM = itemData.NumericValue("NPREMIUM"), .NTRATYPEI = itemData.NumericValue("NTRATYPEI"), .NCAPITAL = itemData.NumericValue("NCAPITAL"), .NBILL_ITEMDesc = itemData.StringValue("NBILL_ITEMDESC"), .NTRATYPEIDesc = itemData.StringValue("NTRATYPEIDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5NNConsultaDeRecibo", "PREMIUM_CETblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (PREMIUM_CETblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function PREMIUM_CETblDataCount(PREMIUMCESCERTYPE1 As String, PREMIUMCENBRANCH2 As String, PREMIUMCENPRODUCT3 As String, PREMIUMCENRECEIPT4 As String, PREMIUMCENDIGIT5 As String, PREMIUMCENPAYNUMBE6 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT PREMIUM_CE.NCERTIF, PREMIUM_CE.NBILL_ITEM, PREMIUM_CE.DSTARTDATE, PREMIUM_CE.DEXPIRDAT, PREMIUM_CE.NPREMIUM, PREMIUM_CE.NTRATYPEI, PREMIUM_CE.NCAPITAL, TAB_BILL_I.SDESCRIPT NBILL_ITEMDESC, TABLE24.SDESCRIPT NTRATYPEIDESC FROM PREMIUM_CE PREMIUM_CE LEFT JOIN TAB_BILL_I TAB_BILL_I ON TAB_BILL_I.NBRANCH = PREMIUM_CE.NBRANCH  AND TAB_BILL_I.NPRODUCT = PREMIUM_CE.NPRODUCT  AND TAB_BILL_I.NBILL_ITEM = PREMIUM_CE.NBILL_ITEM LEFT JOIN TABLE24 TABLE24 ON TABLE24.NTRATYPEI = PREMIUM_CE.NTRATYPEI  WHERE PREMIUM_CE.SCERTYPE = @:PREMIUM_CESCERTYPE1 AND PREMIUM_CE.NBRANCH = @:PREMIUM_CENBRANCH2 AND PREMIUM_CE.NPRODUCT = @:PREMIUM_CENPRODUCT3 AND PREMIUM_CE.NRECEIPT = @:PREMIUM_CENRECEIPT4 AND PREMIUM_CE.NDIGIT = @:PREMIUM_CENDIGIT5 AND PREMIUM_CE.NPAYNUMBE = @:PREMIUM_CENPAYNUMBE6)", "PREMIUM_CE", "Linked.LatCombined")
                    .AddParameter("PREMIUM_CESCERTYPE1", DbType.AnsiStringFixedLength, 0, (PREMIUMCESCERTYPE1 = String.Empty), PREMIUMCESCERTYPE1)
                    .AddParameter("PREMIUM_CENBRANCH2", DbType.AnsiStringFixedLength, 0, (PREMIUMCENBRANCH2 = String.Empty), PREMIUMCENBRANCH2)
                    .AddParameter("PREMIUM_CENPRODUCT3", DbType.AnsiStringFixedLength, 0, (PREMIUMCENPRODUCT3 = String.Empty), PREMIUMCENPRODUCT3)
                    .AddParameter("PREMIUM_CENRECEIPT4", DbType.AnsiStringFixedLength, 0, (PREMIUMCENRECEIPT4 = String.Empty), PREMIUMCENRECEIPT4)
                    .AddParameter("PREMIUM_CENDIGIT5", DbType.AnsiStringFixedLength, 0, (PREMIUMCENDIGIT5 = String.Empty), PREMIUMCENDIGIT5)
                    .AddParameter("PREMIUM_CENPAYNUMBE6", DbType.AnsiStringFixedLength, 0, (PREMIUMCENPAYNUMBE6 = String.Empty), PREMIUMCENPAYNUMBE6)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5NNConsultaDeRecibo", "PREMIUM_CETblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (PREMIUM_CETblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function PREMIUM_CESelectCommandActionPREMIUM_CE(PREMIUMCESCERTYPE1 As String, PREMIUMCENBRANCH2 As String, PREMIUMCENPRODUCT3 As String, PREMIUMCENRECEIPT4 As String, PREMIUMCENDIGIT5 As String, PREMIUMCENPAYNUMBE6 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(PREMIUM_CE.NCERTIF) COUNTDATA FROM PREMIUM_CE PREMIUM_CE LEFT JOIN TAB_BILL_I TAB_BILL_I ON TAB_BILL_I.NBRANCH = PREMIUM_CE.NBRANCH  AND TAB_BILL_I.NPRODUCT = PREMIUM_CE.NPRODUCT  AND TAB_BILL_I.NBILL_ITEM = PREMIUM_CE.NBILL_ITEM LEFT JOIN TABLE24 TABLE24 ON TABLE24.NTRATYPEI = PREMIUM_CE.NTRATYPEI  WHERE PREMIUM_CE.SCERTYPE = @:PREMIUM_CESCERTYPE1 AND PREMIUM_CE.NBRANCH = @:PREMIUM_CENBRANCH2 AND PREMIUM_CE.NPRODUCT = @:PREMIUM_CENPRODUCT3 AND PREMIUM_CE.NRECEIPT = @:PREMIUM_CENRECEIPT4 AND PREMIUM_CE.NDIGIT = @:PREMIUM_CENDIGIT5 AND PREMIUM_CE.NPAYNUMBE = @:PREMIUM_CENPAYNUMBE6", "PREMIUM_CE", "Linked.LatCombined")
                    .AddParameter("PREMIUM_CESCERTYPE1", DbType.AnsiStringFixedLength, 0, (PREMIUMCESCERTYPE1 = String.Empty), PREMIUMCESCERTYPE1)
                    .AddParameter("PREMIUM_CENBRANCH2", DbType.AnsiStringFixedLength, 0, (PREMIUMCENBRANCH2 = String.Empty), PREMIUMCENBRANCH2)
                    .AddParameter("PREMIUM_CENPRODUCT3", DbType.AnsiStringFixedLength, 0, (PREMIUMCENPRODUCT3 = String.Empty), PREMIUMCENPRODUCT3)
                    .AddParameter("PREMIUM_CENRECEIPT4", DbType.AnsiStringFixedLength, 0, (PREMIUMCENRECEIPT4 = String.Empty), PREMIUMCENRECEIPT4)
                    .AddParameter("PREMIUM_CENDIGIT5", DbType.AnsiStringFixedLength, 0, (PREMIUMCENDIGIT5 = String.Empty), PREMIUMCENDIGIT5)
                    .AddParameter("PREMIUM_CENPAYNUMBE6", DbType.AnsiStringFixedLength, 0, (PREMIUMCENPAYNUMBE6 = String.Empty), PREMIUMCENPAYNUMBE6)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5NNConsultaDeRecibo", "PREMIUM_CESelectCommandActionPREMIUM_CE", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (PREMIUM_CESelectCommandActionPREMIUM_CE)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function COMMISS_PRTblDataLoad(COMMISSPRSCERTYPE1 As String, COMMISSPRNBRANCH2 As String, COMMISSPRNPRODUCT3 As String, COMMISSPRNRECEIPT4 As String, COMMISSPRNDIGIT5 As String, COMMISSPRNPAYNUMBE6 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NINTERMED = 0, .NROLE = 0, .NAMOUNT = 0, .NPERCENT = 0, .NSHARE = 0, .NROLEDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT COMMISS_PR.NINTERMED, COMMISS_PR.NROLE, COMMISS_PR.NAMOUNT, COMMISS_PR.NPERCENT, COMMISS_PR.NSHARE, INTERM_TYP.SDESCRIPT NROLEDESC FROM COMMISS_PR COMMISS_PR LEFT JOIN INTERM_TYP INTERM_TYP ON INTERM_TYP.NINTERTYP = COMMISS_PR.NROLE  WHERE COMMISS_PR.SCERTYPE = @:COMMISS_PRSCERTYPE1 AND COMMISS_PR.NBRANCH = @:COMMISS_PRNBRANCH2 AND COMMISS_PR.NPRODUCT = @:COMMISS_PRNPRODUCT3 AND COMMISS_PR.NRECEIPT = @:COMMISS_PRNRECEIPT4 AND COMMISS_PR.NDIGIT = @:COMMISS_PRNDIGIT5 AND COMMISS_PR.NPAYNUMBE = @:COMMISS_PRNPAYNUMBE6", "COMMISS_PR", "Linked.LatCombined")
                    .AddParameter("COMMISS_PRSCERTYPE1", DbType.AnsiStringFixedLength, 0, (COMMISSPRSCERTYPE1 = String.Empty), COMMISSPRSCERTYPE1)
                    .AddParameter("COMMISS_PRNBRANCH2", DbType.AnsiStringFixedLength, 0, (COMMISSPRNBRANCH2 = String.Empty), COMMISSPRNBRANCH2)
                    .AddParameter("COMMISS_PRNPRODUCT3", DbType.AnsiStringFixedLength, 0, (COMMISSPRNPRODUCT3 = String.Empty), COMMISSPRNPRODUCT3)
                    .AddParameter("COMMISS_PRNRECEIPT4", DbType.AnsiStringFixedLength, 0, (COMMISSPRNRECEIPT4 = String.Empty), COMMISSPRNRECEIPT4)
                    .AddParameter("COMMISS_PRNDIGIT5", DbType.AnsiStringFixedLength, 0, (COMMISSPRNDIGIT5 = String.Empty), COMMISSPRNDIGIT5)
                    .AddParameter("COMMISS_PRNPAYNUMBE6", DbType.AnsiStringFixedLength, 0, (COMMISSPRNPAYNUMBE6 = String.Empty), COMMISSPRNPAYNUMBE6)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NINTERMED = itemData.NumericValue("NINTERMED"), .NROLE = itemData.NumericValue("NROLE"), .NAMOUNT = itemData.NumericValue("NAMOUNT"), .NPERCENT = itemData.NumericValue("NPERCENT"), .NSHARE = itemData.NumericValue("NSHARE"), .NROLEDesc = itemData.StringValue("NROLEDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5NNConsultaDeRecibo", "COMMISS_PRTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (COMMISS_PRTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function COMMISS_PRTblDataCount(COMMISSPRSCERTYPE1 As String, COMMISSPRNBRANCH2 As String, COMMISSPRNPRODUCT3 As String, COMMISSPRNRECEIPT4 As String, COMMISSPRNDIGIT5 As String, COMMISSPRNPAYNUMBE6 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT COMMISS_PR.NINTERMED, COMMISS_PR.NROLE, COMMISS_PR.NAMOUNT, COMMISS_PR.NPERCENT, COMMISS_PR.NSHARE, INTERM_TYP.SDESCRIPT NROLEDESC FROM COMMISS_PR COMMISS_PR LEFT JOIN INTERM_TYP INTERM_TYP ON INTERM_TYP.NINTERTYP = COMMISS_PR.NROLE  WHERE COMMISS_PR.SCERTYPE = @:COMMISS_PRSCERTYPE1 AND COMMISS_PR.NBRANCH = @:COMMISS_PRNBRANCH2 AND COMMISS_PR.NPRODUCT = @:COMMISS_PRNPRODUCT3 AND COMMISS_PR.NRECEIPT = @:COMMISS_PRNRECEIPT4 AND COMMISS_PR.NDIGIT = @:COMMISS_PRNDIGIT5 AND COMMISS_PR.NPAYNUMBE = @:COMMISS_PRNPAYNUMBE6)", "COMMISS_PR", "Linked.LatCombined")
                    .AddParameter("COMMISS_PRSCERTYPE1", DbType.AnsiStringFixedLength, 0, (COMMISSPRSCERTYPE1 = String.Empty), COMMISSPRSCERTYPE1)
                    .AddParameter("COMMISS_PRNBRANCH2", DbType.AnsiStringFixedLength, 0, (COMMISSPRNBRANCH2 = String.Empty), COMMISSPRNBRANCH2)
                    .AddParameter("COMMISS_PRNPRODUCT3", DbType.AnsiStringFixedLength, 0, (COMMISSPRNPRODUCT3 = String.Empty), COMMISSPRNPRODUCT3)
                    .AddParameter("COMMISS_PRNRECEIPT4", DbType.AnsiStringFixedLength, 0, (COMMISSPRNRECEIPT4 = String.Empty), COMMISSPRNRECEIPT4)
                    .AddParameter("COMMISS_PRNDIGIT5", DbType.AnsiStringFixedLength, 0, (COMMISSPRNDIGIT5 = String.Empty), COMMISSPRNDIGIT5)
                    .AddParameter("COMMISS_PRNPAYNUMBE6", DbType.AnsiStringFixedLength, 0, (COMMISSPRNPAYNUMBE6 = String.Empty), COMMISSPRNPAYNUMBE6)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5NNConsultaDeRecibo", "COMMISS_PRTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (COMMISS_PRTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function COMMISS_PRSelectCommandActionCOMMISS_PR(COMMISSPRSCERTYPE1 As String, COMMISSPRNBRANCH2 As String, COMMISSPRNPRODUCT3 As String, COMMISSPRNRECEIPT4 As String, COMMISSPRNDIGIT5 As String, COMMISSPRNPAYNUMBE6 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(COMMISS_PR.NINTERMED) COUNTDATA FROM COMMISS_PR COMMISS_PR LEFT JOIN INTERM_TYP INTERM_TYP ON INTERM_TYP.NINTERTYP = COMMISS_PR.NROLE  WHERE COMMISS_PR.SCERTYPE = @:COMMISS_PRSCERTYPE1 AND COMMISS_PR.NBRANCH = @:COMMISS_PRNBRANCH2 AND COMMISS_PR.NPRODUCT = @:COMMISS_PRNPRODUCT3 AND COMMISS_PR.NRECEIPT = @:COMMISS_PRNRECEIPT4 AND COMMISS_PR.NDIGIT = @:COMMISS_PRNDIGIT5 AND COMMISS_PR.NPAYNUMBE = @:COMMISS_PRNPAYNUMBE6", "COMMISS_PR", "Linked.LatCombined")
                    .AddParameter("COMMISS_PRSCERTYPE1", DbType.AnsiStringFixedLength, 0, (COMMISSPRSCERTYPE1 = String.Empty), COMMISSPRSCERTYPE1)
                    .AddParameter("COMMISS_PRNBRANCH2", DbType.AnsiStringFixedLength, 0, (COMMISSPRNBRANCH2 = String.Empty), COMMISSPRNBRANCH2)
                    .AddParameter("COMMISS_PRNPRODUCT3", DbType.AnsiStringFixedLength, 0, (COMMISSPRNPRODUCT3 = String.Empty), COMMISSPRNPRODUCT3)
                    .AddParameter("COMMISS_PRNRECEIPT4", DbType.AnsiStringFixedLength, 0, (COMMISSPRNRECEIPT4 = String.Empty), COMMISSPRNRECEIPT4)
                    .AddParameter("COMMISS_PRNDIGIT5", DbType.AnsiStringFixedLength, 0, (COMMISSPRNDIGIT5 = String.Empty), COMMISSPRNDIGIT5)
                    .AddParameter("COMMISS_PRNPAYNUMBE6", DbType.AnsiStringFixedLength, 0, (COMMISSPRNPAYNUMBE6 = String.Empty), COMMISSPRNPAYNUMBE6)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5NNConsultaDeRecibo", "COMMISS_PRSelectCommandActionCOMMISS_PR", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (COMMISS_PRSelectCommandActionCOMMISS_PR)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function DETAIL_PRETblDataLoad(DETAILPRESCERTYPE1 As String, DETAILPRENBRANCH2 As String, DETAILPRENPRODUCT3 As String, DETAILPRENRECEIPT4 As String, DETAILPRENDIGIT5 As String, DETAILPRENPAYNUMBE6 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NID_BILL = 0, .STYPE_DETAI = String.Empty, .NDET_CODE = 0, .NBILL_ITEM = 0, .NPREMIUM = 0, .NRECAMOUNT = 0, .NDESCAMOUNT = 0, .NCOMMI_RATE = 0, .NCAPITAL = 0, .NCOMMISION = 0, .NTAX = 0, .NTAXAMOUNT = 0, .NBILL_ITEMDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT DETAIL_PRE.NID_BILL, DETAIL_PRE.STYPE_DETAI, DETAIL_PRE.NDET_CODE, DETAIL_PRE.NBILL_ITEM, DETAIL_PRE.NPREMIUM, DETAIL_PRE.NRECAMOUNT, DETAIL_PRE.NDESCAMOUNT, DETAIL_PRE.NCOMMI_RATE, DETAIL_PRE.NCAPITAL, DETAIL_PRE.NCOMMISION, DETAIL_PRE.NTAX, DETAIL_PRE.NTAXAMOUNT, TAB_BILL_I.SDESCRIPT NBILL_ITEMDESC FROM DETAIL_PRE DETAIL_PRE LEFT JOIN TAB_BILL_I TAB_BILL_I ON TAB_BILL_I.NBRANCH = DETAIL_PRE.NBRANCH  AND TAB_BILL_I.NPRODUCT = DETAIL_PRE.NPRODUCT  AND TAB_BILL_I.NBILL_ITEM = DETAIL_PRE.NBILL_ITEM  WHERE DETAIL_PRE.SCERTYPE = @:DETAIL_PRESCERTYPE1 AND DETAIL_PRE.NBRANCH = @:DETAIL_PRENBRANCH2 AND DETAIL_PRE.NPRODUCT = @:DETAIL_PRENPRODUCT3 AND DETAIL_PRE.NRECEIPT = @:DETAIL_PRENRECEIPT4 AND DETAIL_PRE.NDIGIT = @:DETAIL_PRENDIGIT5 AND DETAIL_PRE.NPAYNUMBE = @:DETAIL_PRENPAYNUMBE6", "DETAIL_PRE", "Linked.LatCombined")
                    .AddParameter("DETAIL_PRESCERTYPE1", DbType.AnsiStringFixedLength, 0, (DETAILPRESCERTYPE1 = String.Empty), DETAILPRESCERTYPE1)
                    .AddParameter("DETAIL_PRENBRANCH2", DbType.AnsiStringFixedLength, 0, (DETAILPRENBRANCH2 = String.Empty), DETAILPRENBRANCH2)
                    .AddParameter("DETAIL_PRENPRODUCT3", DbType.AnsiStringFixedLength, 0, (DETAILPRENPRODUCT3 = String.Empty), DETAILPRENPRODUCT3)
                    .AddParameter("DETAIL_PRENRECEIPT4", DbType.AnsiStringFixedLength, 0, (DETAILPRENRECEIPT4 = String.Empty), DETAILPRENRECEIPT4)
                    .AddParameter("DETAIL_PRENDIGIT5", DbType.AnsiStringFixedLength, 0, (DETAILPRENDIGIT5 = String.Empty), DETAILPRENDIGIT5)
                    .AddParameter("DETAIL_PRENPAYNUMBE6", DbType.AnsiStringFixedLength, 0, (DETAILPRENPAYNUMBE6 = String.Empty), DETAILPRENPAYNUMBE6)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NID_BILL = itemData.NumericValue("NID_BILL"), .STYPE_DETAI = itemData.StringValue("STYPE_DETAI"), .NDET_CODE = itemData.NumericValue("NDET_CODE"), .NBILL_ITEM = itemData.NumericValue("NBILL_ITEM"), .NPREMIUM = itemData.NumericValue("NPREMIUM"), .NRECAMOUNT = itemData.NumericValue("NRECAMOUNT"), .NDESCAMOUNT = itemData.NumericValue("NDESCAMOUNT"), .NCOMMI_RATE = itemData.NumericValue("NCOMMI_RATE"), .NCAPITAL = itemData.NumericValue("NCAPITAL"), .NCOMMISION = itemData.NumericValue("NCOMMISION"), .NTAX = itemData.NumericValue("NTAX"), .NTAXAMOUNT = itemData.NumericValue("NTAXAMOUNT"), .NBILL_ITEMDesc = itemData.StringValue("NBILL_ITEMDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5NNConsultaDeRecibo", "DETAIL_PRETblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (DETAIL_PRETblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function DETAIL_PRETblDataCount(DETAILPRESCERTYPE1 As String, DETAILPRENBRANCH2 As String, DETAILPRENPRODUCT3 As String, DETAILPRENRECEIPT4 As String, DETAILPRENDIGIT5 As String, DETAILPRENPAYNUMBE6 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT DETAIL_PRE.NID_BILL, DETAIL_PRE.STYPE_DETAI, DETAIL_PRE.NDET_CODE, DETAIL_PRE.NBILL_ITEM, DETAIL_PRE.NPREMIUM, DETAIL_PRE.NRECAMOUNT, DETAIL_PRE.NDESCAMOUNT, DETAIL_PRE.NCOMMI_RATE, DETAIL_PRE.NCAPITAL, DETAIL_PRE.NCOMMISION, DETAIL_PRE.NTAX, DETAIL_PRE.NTAXAMOUNT, TAB_BILL_I.SDESCRIPT NBILL_ITEMDESC FROM DETAIL_PRE DETAIL_PRE LEFT JOIN TAB_BILL_I TAB_BILL_I ON TAB_BILL_I.NBRANCH = DETAIL_PRE.NBRANCH  AND TAB_BILL_I.NPRODUCT = DETAIL_PRE.NPRODUCT  AND TAB_BILL_I.NBILL_ITEM = DETAIL_PRE.NBILL_ITEM  WHERE DETAIL_PRE.SCERTYPE = @:DETAIL_PRESCERTYPE1 AND DETAIL_PRE.NBRANCH = @:DETAIL_PRENBRANCH2 AND DETAIL_PRE.NPRODUCT = @:DETAIL_PRENPRODUCT3 AND DETAIL_PRE.NRECEIPT = @:DETAIL_PRENRECEIPT4 AND DETAIL_PRE.NDIGIT = @:DETAIL_PRENDIGIT5 AND DETAIL_PRE.NPAYNUMBE = @:DETAIL_PRENPAYNUMBE6)", "DETAIL_PRE", "Linked.LatCombined")
                    .AddParameter("DETAIL_PRESCERTYPE1", DbType.AnsiStringFixedLength, 0, (DETAILPRESCERTYPE1 = String.Empty), DETAILPRESCERTYPE1)
                    .AddParameter("DETAIL_PRENBRANCH2", DbType.AnsiStringFixedLength, 0, (DETAILPRENBRANCH2 = String.Empty), DETAILPRENBRANCH2)
                    .AddParameter("DETAIL_PRENPRODUCT3", DbType.AnsiStringFixedLength, 0, (DETAILPRENPRODUCT3 = String.Empty), DETAILPRENPRODUCT3)
                    .AddParameter("DETAIL_PRENRECEIPT4", DbType.AnsiStringFixedLength, 0, (DETAILPRENRECEIPT4 = String.Empty), DETAILPRENRECEIPT4)
                    .AddParameter("DETAIL_PRENDIGIT5", DbType.AnsiStringFixedLength, 0, (DETAILPRENDIGIT5 = String.Empty), DETAILPRENDIGIT5)
                    .AddParameter("DETAIL_PRENPAYNUMBE6", DbType.AnsiStringFixedLength, 0, (DETAILPRENPAYNUMBE6 = String.Empty), DETAILPRENPAYNUMBE6)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5NNConsultaDeRecibo", "DETAIL_PRETblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (DETAIL_PRETblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function DETAIL_PRESelectCommandActionDETAIL_PRE(DETAILPRESCERTYPE1 As String, DETAILPRENBRANCH2 As String, DETAILPRENPRODUCT3 As String, DETAILPRENRECEIPT4 As String, DETAILPRENDIGIT5 As String, DETAILPRENPAYNUMBE6 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(DETAIL_PRE.NID_BILL) COUNTDATA FROM DETAIL_PRE DETAIL_PRE LEFT JOIN TAB_BILL_I TAB_BILL_I ON TAB_BILL_I.NBRANCH = DETAIL_PRE.NBRANCH  AND TAB_BILL_I.NPRODUCT = DETAIL_PRE.NPRODUCT  AND TAB_BILL_I.NBILL_ITEM = DETAIL_PRE.NBILL_ITEM  WHERE DETAIL_PRE.SCERTYPE = @:DETAIL_PRESCERTYPE1 AND DETAIL_PRE.NBRANCH = @:DETAIL_PRENBRANCH2 AND DETAIL_PRE.NPRODUCT = @:DETAIL_PRENPRODUCT3 AND DETAIL_PRE.NRECEIPT = @:DETAIL_PRENRECEIPT4 AND DETAIL_PRE.NDIGIT = @:DETAIL_PRENDIGIT5 AND DETAIL_PRE.NPAYNUMBE = @:DETAIL_PRENPAYNUMBE6", "DETAIL_PRE", "Linked.LatCombined")
                    .AddParameter("DETAIL_PRESCERTYPE1", DbType.AnsiStringFixedLength, 0, (DETAILPRESCERTYPE1 = String.Empty), DETAILPRESCERTYPE1)
                    .AddParameter("DETAIL_PRENBRANCH2", DbType.AnsiStringFixedLength, 0, (DETAILPRENBRANCH2 = String.Empty), DETAILPRENBRANCH2)
                    .AddParameter("DETAIL_PRENPRODUCT3", DbType.AnsiStringFixedLength, 0, (DETAILPRENPRODUCT3 = String.Empty), DETAILPRENPRODUCT3)
                    .AddParameter("DETAIL_PRENRECEIPT4", DbType.AnsiStringFixedLength, 0, (DETAILPRENRECEIPT4 = String.Empty), DETAILPRENRECEIPT4)
                    .AddParameter("DETAIL_PRENDIGIT5", DbType.AnsiStringFixedLength, 0, (DETAILPRENDIGIT5 = String.Empty), DETAILPRENDIGIT5)
                    .AddParameter("DETAIL_PRENPAYNUMBE6", DbType.AnsiStringFixedLength, 0, (DETAILPRENPAYNUMBE6 = String.Empty), DETAILPRENPAYNUMBE6)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5NNConsultaDeRecibo", "DETAIL_PRESelectCommandActionDETAIL_PRE", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (DETAIL_PRESelectCommandActionDETAIL_PRE)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function AGREEMENTTblDataLoad(AGREEMENTNCODAGREE1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NCOD_AGREE = 0, .NQ_DRAFT = 0, .DINIT_DATE = Date.MinValue, .DEND_DATE = Date.MinValue}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT AGREEMENT.NCOD_AGREE, AGREEMENT.NQ_DRAFT, AGREEMENT.DINIT_DATE, AGREEMENT.DEND_DATE FROM AGREEMENT AGREEMENT  WHERE AGREEMENT.NCOD_AGREE = @:AGREEMENTNCOD_AGREE1", "AGREEMENT", "Linked.LatCombined")
                    .AddParameter("AGREEMENTNCOD_AGREE1", DbType.AnsiStringFixedLength, 0, (AGREEMENTNCODAGREE1 = String.Empty), AGREEMENTNCODAGREE1)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NCOD_AGREE = itemData.NumericValue("NCOD_AGREE"), .NQ_DRAFT = itemData.NumericValue("NQ_DRAFT"), .DINIT_DATE = itemData.DateTimeValue("DINIT_DATE"), .DEND_DATE = itemData.DateTimeValue("DEND_DATE")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5NNConsultaDeRecibo", "AGREEMENTTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (AGREEMENTTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function AGREEMENTTblDataCount(AGREEMENTNCODAGREE1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT AGREEMENT.NCOD_AGREE, AGREEMENT.NQ_DRAFT, AGREEMENT.DINIT_DATE, AGREEMENT.DEND_DATE FROM AGREEMENT AGREEMENT  WHERE AGREEMENT.NCOD_AGREE = @:AGREEMENTNCOD_AGREE1)", "AGREEMENT", "Linked.LatCombined")
                    .AddParameter("AGREEMENTNCOD_AGREE1", DbType.AnsiStringFixedLength, 0, (AGREEMENTNCODAGREE1 = String.Empty), AGREEMENTNCODAGREE1)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5NNConsultaDeRecibo", "AGREEMENTTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (AGREEMENTTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function AGREEMENTSelectCommandActionAGREEMENT(AGREEMENTNCODAGREE1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(AGREEMENT.NCOD_AGREE) COUNTDATA FROM AGREEMENT AGREEMENT  WHERE AGREEMENT.NCOD_AGREE = @:AGREEMENTNCOD_AGREE1", "AGREEMENT", "Linked.LatCombined")
                    .AddParameter("AGREEMENTNCOD_AGREE1", DbType.AnsiStringFixedLength, 0, (AGREEMENTNCODAGREE1 = String.Empty), AGREEMENTNCODAGREE1)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5NNConsultaDeRecibo", "AGREEMENTSelectCommandActionAGREEMENT", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (AGREEMENTSelectCommandActionAGREEMENT)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function FINANCE_COTblDataLoad(FINANCECONCONTRAT1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NCONTRAT = 0, .NSTAT_CONTR = 0, .NCURRENCY = 0, .NAMOUNT = 0, .NQ_DRAFT = 0, .NAMOUNT_D = 0, .NDSCTO_AMO = 0, .NFRECUENCY = 0, .DFIRST_DRAF = Date.MinValue, .NBILL_DAY = 0, .NWAY_PAY = 0, .NINITIAL = 0, .NINTEREST = 0, .DNULLDATE = Date.MinValue, .NSTAT_CONTRDesc = String.Empty, .NCURRENCYDesc = String.Empty, .NFRECUENCYDesc = String.Empty, .NWAY_PAYDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT FINANCE_CO.NCONTRAT, FINANCE_CO.NSTAT_CONTR, FINANCE_CO.NCURRENCY, FINANCE_CO.NAMOUNT, FINANCE_CO.NQ_DRAFT, FINANCE_CO.NAMOUNT_D, FINANCE_CO.NDSCTO_AMO, FINANCE_CO.NFRECUENCY, FINANCE_CO.DFIRST_DRAF, FINANCE_CO.NBILL_DAY, FINANCE_CO.NWAY_PAY, FINANCE_CO.NINITIAL, FINANCE_CO.NINTEREST, FINANCE_CO.DNULLDATE, TABLE278.SDESCRIPT NSTAT_CONTRDESC, TABLE11.SSHORT_DES NCURRENCYDESC, TABLE250.SDESCRIPT NFRECUENCYDESC, TABLE5002.SDESCRIPT NWAY_PAYDESC FROM FINANCE_CO FINANCE_CO LEFT JOIN TABLE278 TABLE278 ON TABLE278.NSTAT_CONTR = FINANCE_CO.NSTAT_CONTR LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = FINANCE_CO.NCURRENCY LEFT JOIN TABLE250 TABLE250 ON TABLE250.NFRECUENCY = FINANCE_CO.NFRECUENCY LEFT JOIN TABLE5002 TABLE5002 ON TABLE5002.NWAY_PAY = FINANCE_CO.NWAY_PAY  WHERE FINANCE_CO.NCONTRAT = @:FINANCE_CONCONTRAT1", "FINANCE_CO", "Linked.LatCombined")
                    .AddParameter("FINANCE_CONCONTRAT1", DbType.AnsiStringFixedLength, 0, (FINANCECONCONTRAT1 = String.Empty), FINANCECONCONTRAT1)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NCONTRAT = itemData.NumericValue("NCONTRAT"), .NSTAT_CONTR = itemData.NumericValue("NSTAT_CONTR"), .NCURRENCY = itemData.NumericValue("NCURRENCY"), .NAMOUNT = itemData.NumericValue("NAMOUNT"), .NQ_DRAFT = itemData.NumericValue("NQ_DRAFT"), .NAMOUNT_D = itemData.NumericValue("NAMOUNT_D"), .NDSCTO_AMO = itemData.NumericValue("NDSCTO_AMO"), .NFRECUENCY = itemData.NumericValue("NFRECUENCY"), .DFIRST_DRAF = itemData.DateTimeValue("DFIRST_DRAF"), .NBILL_DAY = itemData.NumericValue("NBILL_DAY"), .NWAY_PAY = itemData.NumericValue("NWAY_PAY"), .NINITIAL = itemData.NumericValue("NINITIAL"), .NINTEREST = itemData.NumericValue("NINTEREST"), .DNULLDATE = itemData.DateTimeValue("DNULLDATE"), .NSTAT_CONTRDesc = itemData.StringValue("NSTAT_CONTRDESC"), .NCURRENCYDesc = itemData.StringValue("NCURRENCYDESC"), .NFRECUENCYDesc = itemData.StringValue("NFRECUENCYDESC"), .NWAY_PAYDesc = itemData.StringValue("NWAY_PAYDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5NNConsultaDeRecibo", "FINANCE_COTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (FINANCE_COTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function FINANCE_COTblDataCount(FINANCECONCONTRAT1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT FINANCE_CO.NCONTRAT, FINANCE_CO.NSTAT_CONTR, FINANCE_CO.NCURRENCY, FINANCE_CO.NAMOUNT, FINANCE_CO.NQ_DRAFT, FINANCE_CO.NAMOUNT_D, FINANCE_CO.NDSCTO_AMO, FINANCE_CO.NFRECUENCY, FINANCE_CO.DFIRST_DRAF, FINANCE_CO.NBILL_DAY, FINANCE_CO.NWAY_PAY, FINANCE_CO.NINITIAL, FINANCE_CO.NINTEREST, FINANCE_CO.DNULLDATE, TABLE278.SDESCRIPT NSTAT_CONTRDESC, TABLE11.SSHORT_DES NCURRENCYDESC, TABLE250.SDESCRIPT NFRECUENCYDESC, TABLE5002.SDESCRIPT NWAY_PAYDESC FROM FINANCE_CO FINANCE_CO LEFT JOIN TABLE278 TABLE278 ON TABLE278.NSTAT_CONTR = FINANCE_CO.NSTAT_CONTR LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = FINANCE_CO.NCURRENCY LEFT JOIN TABLE250 TABLE250 ON TABLE250.NFRECUENCY = FINANCE_CO.NFRECUENCY LEFT JOIN TABLE5002 TABLE5002 ON TABLE5002.NWAY_PAY = FINANCE_CO.NWAY_PAY  WHERE FINANCE_CO.NCONTRAT = @:FINANCE_CONCONTRAT1)", "FINANCE_CO", "Linked.LatCombined")
                    .AddParameter("FINANCE_CONCONTRAT1", DbType.AnsiStringFixedLength, 0, (FINANCECONCONTRAT1 = String.Empty), FINANCECONCONTRAT1)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5NNConsultaDeRecibo", "FINANCE_COTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (FINANCE_COTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function FINANCE_COSelectCommandActionFINANCE_CO(FINANCECONCONTRAT1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(FINANCE_CO.NCONTRAT) COUNTDATA FROM FINANCE_CO FINANCE_CO LEFT JOIN TABLE278 TABLE278 ON TABLE278.NSTAT_CONTR = FINANCE_CO.NSTAT_CONTR LEFT JOIN TABLE11 TABLE11 ON TABLE11.NCODIGINT = FINANCE_CO.NCURRENCY LEFT JOIN TABLE250 TABLE250 ON TABLE250.NFRECUENCY = FINANCE_CO.NFRECUENCY LEFT JOIN TABLE5002 TABLE5002 ON TABLE5002.NWAY_PAY = FINANCE_CO.NWAY_PAY  WHERE FINANCE_CO.NCONTRAT = @:FINANCE_CONCONTRAT1", "FINANCE_CO", "Linked.LatCombined")
                    .AddParameter("FINANCE_CONCONTRAT1", DbType.AnsiStringFixedLength, 0, (FINANCECONCONTRAT1 = String.Empty), FINANCECONCONTRAT1)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5NNConsultaDeRecibo", "FINANCE_COSelectCommandActionFINANCE_CO", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (FINANCE_COSelectCommandActionFINANCE_CO)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function FINANC_DRATblDataLoad(FINANCDRANCONTRAT1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.NDRAFT = 0, .NAMOUNT = 0, .NSTAT_DRAFT = 0, .NAMOUNT_NET = 0, .DEXPIRDAT = Date.MinValue, .NSTAT_DRAFTDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT FINANC_DRA.NDRAFT, FINANC_DRA.NAMOUNT, FINANC_DRA.NSTAT_DRAFT, FINANC_DRA.NAMOUNT_NET, FINANC_DRA.DEXPIRDAT, TABLE253.SDESCRIPT NSTAT_DRAFTDESC FROM FINANC_DRA FINANC_DRA LEFT JOIN TABLE253 TABLE253 ON TABLE253.NSTAT_DRAFT = FINANC_DRA.NSTAT_DRAFT  WHERE FINANC_DRA.NCONTRAT = @:FINANC_DRANCONTRAT1", "FINANC_DRA", "Linked.LatCombined")
                    .AddParameter("FINANC_DRANCONTRAT1", DbType.AnsiStringFixedLength, 0, (FINANCDRANCONTRAT1 = String.Empty), FINANCDRANCONTRAT1)

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.NDRAFT = itemData.NumericValue("NDRAFT"), .NAMOUNT = itemData.NumericValue("NAMOUNT"), .NSTAT_DRAFT = itemData.NumericValue("NSTAT_DRAFT"), .NAMOUNT_NET = itemData.NumericValue("NAMOUNT_NET"), .DEXPIRDAT = itemData.DateTimeValue("DEXPIRDAT"), .NSTAT_DRAFTDesc = itemData.StringValue("NSTAT_DRAFTDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5NNConsultaDeRecibo", "FINANC_DRATblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (FINANC_DRATblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function FINANC_DRATblDataCount(FINANCDRANCONTRAT1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT FINANC_DRA.NDRAFT, FINANC_DRA.NAMOUNT, FINANC_DRA.NSTAT_DRAFT, FINANC_DRA.NAMOUNT_NET, FINANC_DRA.DEXPIRDAT, TABLE253.SDESCRIPT NSTAT_DRAFTDESC FROM FINANC_DRA FINANC_DRA LEFT JOIN TABLE253 TABLE253 ON TABLE253.NSTAT_DRAFT = FINANC_DRA.NSTAT_DRAFT  WHERE FINANC_DRA.NCONTRAT = @:FINANC_DRANCONTRAT1)", "FINANC_DRA", "Linked.LatCombined")
                    .AddParameter("FINANC_DRANCONTRAT1", DbType.AnsiStringFixedLength, 0, (FINANCDRANCONTRAT1 = String.Empty), FINANCDRANCONTRAT1)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5NNConsultaDeRecibo", "FINANC_DRATblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (FINANC_DRATblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function FINANC_DRASelectCommandActionFINANC_DRA(FINANCDRANCONTRAT1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}

            Try

                With New DataManagerFactory("Select COUNT(FINANC_DRA.NDRAFT) COUNTDATA FROM FINANC_DRA FINANC_DRA LEFT JOIN TABLE253 TABLE253 ON TABLE253.NSTAT_DRAFT = FINANC_DRA.NSTAT_DRAFT  WHERE FINANC_DRA.NCONTRAT = @:FINANC_DRANCONTRAT1", "FINANC_DRA", "Linked.LatCombined")
                    .AddParameter("FINANC_DRANCONTRAT1", DbType.AnsiStringFixedLength, 0, (FINANCDRANCONTRAT1 = String.Empty), FINANCDRANCONTRAT1)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5NNConsultaDeRecibo", "FINANC_DRASelectCommandActionFINANC_DRA", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (FINANC_DRASelectCommandActionFINANC_DRA)", ex.Message)
                End With
            End Try

            Return resultData
        End Function


#End Region

#Region "Lookups Web Methods"


        <WebMethod()>
        Public Shared Function LookUpForCOMMISS_PRNINTERMED(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  INTERMEDIA.NINTERMED, INTERMEDIA.SCLIENT, CLIENT.SCLIENAME FROM INTERMEDIA INTERMEDIA JOIN CLIENT CLIENT ON CLIENT.SCLIENT = INTERMEDIA.SCLIENT    WHERE NOT SCLIENAME IS NULL ORDER BY SCLIENAME", ""), 
                                            "INTERMEDIA", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NINTERMED"),
                                                                                            .Description = item.StringValue("SCLIENAME")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("H5NNConsultaDeRecibo", "LookUpForCOMMISS_PRNINTERMED", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForCOMMISS_PRNINTERMED")
                End With
            End Try
            Return result
        End Function

#End Region

#Region "Form Actions"


#End Region





#Region "Common Utilities"

        Private Shared Sub SetDefaultValuesFromQueryString(formData As EntryData)
            If HttpContext.Current.Request.QueryString("Recibo").IsNotEmpty Then
                formData.Recibo = HttpContext.Current.Request.QueryString("Recibo")
            End If
            If HttpContext.Current.Request.QueryString("RecordEffectiveDate").IsNotEmpty Then
                formData.RecordEffectiveDate = HttpContext.Current.Request.QueryString("RecordEffectiveDate")
            End If
        End Sub	


#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property Recibo As System.Int64
            <DataMember()> Public Property RecordEffectiveDate As DateTime
            <DataMember()> Public Property RootItemsNRECEIPT As System.Int32
            <DataMember()> Public Property RootItemsSLEADINVO As System.String
            <DataMember()> Public Property RootItemsNBRANCH As System.Int32
            <DataMember()> Public Property RootItemsNPRODUCT As System.Int32
            <DataMember()> Public Property RootItemsNPOLICY As System.Int32
            <DataMember()> Public Property RootItemsSCLIENT As System.String
            <DataMember()> Public Property RootItemsDISSUEDAT As System.DateTime
            <DataMember()> Public Property RootItemsDEFFECDATE As System.DateTime
            <DataMember()> Public Property RootItemsDEXPIRDAT As System.DateTime
            <DataMember()> Public Property RootItemsDNULLDATE As System.DateTime
            <DataMember()> Public Property RootItemsNNULLCODE As System.Int32
            <DataMember()> Public Property RootItemsNPAYNUMBE As System.Int32
            <DataMember()> Public Property RootItemsSDIRDEBIT As System.String
            <DataMember()> Public Property RootItemsNCURRENCY As System.Int32
            <DataMember()> Public Property RootItemsNPREMIUM As System.Int32
            <DataMember()> Public Property RootItemsNBALANCE As System.Int32
            <DataMember()> Public Property RootItemsNCOMAMOU As System.Int32
            <DataMember()> Public Property RootItemsNTAXAMOU As System.Int32
            <DataMember()> Public Property RootItemsNSTATUS_PRE As System.Int32
            <DataMember()> Public Property RootItemsDSTATDATE As System.DateTime
            <DataMember()> Public Property RootItemsDPAYDATE As System.DateTime
            <DataMember()> Public Property RootItemsSCERTYPE As System.String
            <DataMember()> Public Property RootItemsNDIGIT As System.Int32
            <DataMember()> Public Property RootItemsNPERIOD As System.Int32
            <DataMember()> Public Property RootItemsDLIMITDATE As System.DateTime
            <DataMember()> Public Property RootItemsNTRATYPEI As System.Int32
            <DataMember()> Public Property RootItemsNCONTRAT As System.Int32
            <DataMember()> Public Property RootItemsNCOD_AGREE As System.Int32
            <DataMember()> Public Property RootItemsPREMIUM_MONID As System.Int32
            <DataMember()> Public Property RootItemsPREMIUM_MONTRANSAC As System.Int32
            <DataMember()> Public Property RootItemsPREMIUM_MONTYPE As System.Int32
            <DataMember()> Public Property RootItemsPREMIUM_MODCOMPDATE As System.DateTime
            <DataMember()> Public Property RootItemsPREMIUM_MONAMOUNT As System.Int32
            <DataMember()> Public Property RootItemsPREMIUM_MONCURRENCY As System.Int32
            <DataMember()> Public Property PREMIUM_MO_PREMIUM_MO As List(Of PREMIUM_MO_PREMIUM_MOItem)
            <DataMember()> Public Property RootItemsPREMIUM_CENCERTIF As System.Int32
            <DataMember()> Public Property RootItemsPREMIUM_CENBILL_ITEM As System.Int32
            <DataMember()> Public Property RootItemsPREMIUM_CEDSTARTDATE As System.DateTime
            <DataMember()> Public Property RootItemsPREMIUM_CEDEXPIRDAT As System.DateTime
            <DataMember()> Public Property RootItemsPREMIUM_CENPREMIUM As System.Int32
            <DataMember()> Public Property RootItemsPREMIUM_CENTRATYPEI As System.Int32
            <DataMember()> Public Property RootItemsPREMIUM_CENCAPITAL As System.Int32
            <DataMember()> Public Property PREMIUM_CE_PREMIUM_CE As List(Of PREMIUM_CE_PREMIUM_CEItem)
            <DataMember()> Public Property RootItemsCOMMISS_PRNINTERMED As System.Int32
            <DataMember()> Public Property RootItemsCOMMISS_PRNROLE As System.Int32
            <DataMember()> Public Property RootItemsCOMMISS_PRNAMOUNT As System.Int32
            <DataMember()> Public Property RootItemsCOMMISS_PRNPERCENT As System.Int32
            <DataMember()> Public Property RootItemsCOMMISS_PRNSHARE As System.Int32
            <DataMember()> Public Property COMMISS_PR_COMMISS_PR As List(Of COMMISS_PR_COMMISS_PRItem)
            <DataMember()> Public Property RootItemsDETAIL_PRENID_BILL As System.Int32
            <DataMember()> Public Property RootItemsDETAIL_PRESTYPE_DETAI As System.String
            <DataMember()> Public Property RootItemsDETAIL_PRENDET_CODE As System.Int32
            <DataMember()> Public Property RootItemsDETAIL_PRENBILL_ITEM As System.Int32
            <DataMember()> Public Property RootItemsDETAIL_PRENPREMIUM As System.Int32
            <DataMember()> Public Property RootItemsDETAIL_PRENRECAMOUNT As System.Int32
            <DataMember()> Public Property RootItemsDETAIL_PRENDESCAMOUNT As System.Int32
            <DataMember()> Public Property RootItemsDETAIL_PRENCOMMI_RATE As System.Int32
            <DataMember()> Public Property RootItemsDETAIL_PRENCAPITAL As System.Int32
            <DataMember()> Public Property RootItemsDETAIL_PRENCOMMISION As System.Int32
            <DataMember()> Public Property RootItemsDETAIL_PRENTAX As System.Int32
            <DataMember()> Public Property RootItemsDETAIL_PRENTAXAMOUNT As System.Int32
            <DataMember()> Public Property DETAIL_PRE_DETAIL_PRE As List(Of DETAIL_PRE_DETAIL_PREItem)
            <DataMember()> Public Property RootItemsAGREEMENTNCOD_AGREE As System.Int32
            <DataMember()> Public Property RootItemsAGREEMENTNQ_DRAFT As System.Int32
            <DataMember()> Public Property RootItemsAGREEMENTDINIT_DATE As System.DateTime
            <DataMember()> Public Property RootItemsAGREEMENTDEND_DATE As System.DateTime
            <DataMember()> Public Property AGREEMENT_AGREEMENT As List(Of AGREEMENT_AGREEMENTItem)
            <DataMember()> Public Property RootItemsFINANCE_CONCONTRAT As System.Int32
            <DataMember()> Public Property RootItemsFINANCE_CONSTAT_CONTR As System.Int32
            <DataMember()> Public Property RootItemsFINANCE_CONCURRENCY As System.Int32
            <DataMember()> Public Property RootItemsFINANCE_CONAMOUNT As System.Int32
            <DataMember()> Public Property RootItemsFINANCE_CONQ_DRAFT As System.Int32
            <DataMember()> Public Property RootItemsFINANCE_CONAMOUNT_D As System.Int32
            <DataMember()> Public Property RootItemsFINANCE_CONDSCTO_AMO As System.Int32
            <DataMember()> Public Property RootItemsFINANCE_CONFRECUENCY As System.Int32
            <DataMember()> Public Property RootItemsFINANCE_CODFIRST_DRAF As System.DateTime
            <DataMember()> Public Property RootItemsFINANCE_CONBILL_DAY As System.Int32
            <DataMember()> Public Property RootItemsFINANCE_CONWAY_PAY As System.Int32
            <DataMember()> Public Property RootItemsFINANCE_CONINITIAL As System.Int32
            <DataMember()> Public Property RootItemsFINANCE_CONINTEREST As System.Int32
            <DataMember()> Public Property RootItemsFINANCE_CODNULLDATE As System.DateTime
            <DataMember()> Public Property RootItemsFINANCE_COFINANC_DRANDRAFT As System.Int32
            <DataMember()> Public Property RootItemsFINANCE_COFINANC_DRANAMOUNT As System.Int32
            <DataMember()> Public Property RootItemsFINANCE_COFINANC_DRANSTAT_DRAFT As System.Int32
            <DataMember()> Public Property RootItemsFINANCE_COFINANC_DRANAMOUNT_NET As System.Int32
            <DataMember()> Public Property RootItemsFINANCE_COFINANC_DRADEXPIRDAT As System.DateTime
            <DataMember()> Public Property FINANC_DRA_FINANC_DRA As List(Of FINANC_DRA_FINANC_DRAItem)
            <DataMember()> Public Property FINANCE_CO_FINANCE_CO As List(Of FINANCE_CO_FINANCE_COItem)
            <DataMember()> Public Property Items_Item As List(Of Items_ItemItem)

        End Class

        <Serializable()>
        <DataContract()>
        Public Class PREMIUM_MO_PREMIUM_MOItem

            <DataMember()> Public Property NID As System.Int32
            <DataMember()> Public Property NTRANSAC As System.Int32
            <DataMember()> Public Property NTYPE As System.Int32
            <DataMember()> Public Property NTYPEDesc As System.String
            <DataMember()> Public Property DCOMPDATE As System.DateTime
            <DataMember()> Public Property NAMOUNT As System.Int32
            <DataMember()> Public Property NCURRENCY As System.Int32
            <DataMember()> Public Property NCURRENCYDesc As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class PREMIUM_CE_PREMIUM_CEItem

            <DataMember()> Public Property NCERTIF As System.Int32
            <DataMember()> Public Property NBILL_ITEM As System.Int32
            <DataMember()> Public Property NBILL_ITEMDesc As System.String
            <DataMember()> Public Property DSTARTDATE As System.DateTime
            <DataMember()> Public Property DEXPIRDAT As System.DateTime
            <DataMember()> Public Property NPREMIUM As System.Int32
            <DataMember()> Public Property NTRATYPEI As System.Int32
            <DataMember()> Public Property NTRATYPEIDesc As System.String
            <DataMember()> Public Property NCAPITAL As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class COMMISS_PR_COMMISS_PRItem

            <DataMember()> Public Property NINTERMED As System.Int32
            <DataMember()> Public Property NROLE As System.Int32
            <DataMember()> Public Property NROLEDesc As System.String
            <DataMember()> Public Property NAMOUNT As System.Int32
            <DataMember()> Public Property NPERCENT As System.Int32
            <DataMember()> Public Property NSHARE As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class DETAIL_PRE_DETAIL_PREItem

            <DataMember()> Public Property NID_BILL As System.Int32
            <DataMember()> Public Property STYPE_DETAI As System.String
            <DataMember()> Public Property NDET_CODE As System.Int32
            <DataMember()> Public Property NBILL_ITEM As System.Int32
            <DataMember()> Public Property NBILL_ITEMDesc As System.String
            <DataMember()> Public Property NPREMIUM As System.Int32
            <DataMember()> Public Property NRECAMOUNT As System.Int32
            <DataMember()> Public Property NDESCAMOUNT As System.Int32
            <DataMember()> Public Property NCOMMI_RATE As System.Int32
            <DataMember()> Public Property NCAPITAL As System.Int32
            <DataMember()> Public Property NCOMMISION As System.Int32
            <DataMember()> Public Property NTAX As System.Int32
            <DataMember()> Public Property NTAXAMOUNT As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class AGREEMENT_AGREEMENTItem

            <DataMember()> Public Property NCOD_AGREE As System.Int32
            <DataMember()> Public Property NQ_DRAFT As System.Int32
            <DataMember()> Public Property DINIT_DATE As System.DateTime
            <DataMember()> Public Property DEND_DATE As System.DateTime

        End Class

        <Serializable()>
        <DataContract()>
        Public Class FINANC_DRA_FINANC_DRAItem

            <DataMember()> Public Property NDRAFT As System.Int32
            <DataMember()> Public Property NAMOUNT As System.Int32
            <DataMember()> Public Property NSTAT_DRAFT As System.Int32
            <DataMember()> Public Property NSTAT_DRAFTDesc As System.String
            <DataMember()> Public Property NAMOUNT_NET As System.Int32
            <DataMember()> Public Property DEXPIRDAT As System.DateTime

        End Class

        <Serializable()>
        <DataContract()>
        Public Class FINANCE_CO_FINANCE_COItem

            <DataMember()> Public Property NCONTRAT As System.Int32
            <DataMember()> Public Property NSTAT_CONTR As System.Int32
            <DataMember()> Public Property NSTAT_CONTRDesc As System.String
            <DataMember()> Public Property NCURRENCY As System.Int32
            <DataMember()> Public Property NCURRENCYDesc As System.String
            <DataMember()> Public Property NAMOUNT As System.Int32
            <DataMember()> Public Property NQ_DRAFT As System.Int32
            <DataMember()> Public Property NAMOUNT_D As System.Int32
            <DataMember()> Public Property NDSCTO_AMO As System.Int32
            <DataMember()> Public Property NFRECUENCY As System.Int32
            <DataMember()> Public Property NFRECUENCYDesc As System.String
            <DataMember()> Public Property DFIRST_DRAF As System.DateTime
            <DataMember()> Public Property NBILL_DAY As System.Int32
            <DataMember()> Public Property NWAY_PAY As System.Int32
            <DataMember()> Public Property NWAY_PAYDesc As System.String
            <DataMember()> Public Property NINITIAL As System.Int32
            <DataMember()> Public Property NINTEREST As System.Int32
            <DataMember()> Public Property DNULLDATE As System.DateTime

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Items_ItemItem

            <DataMember()> Public Property NRECEIPT As System.Int32
            <DataMember()> Public Property SLEADINVO As System.String
            <DataMember()> Public Property NBRANCH As System.Int32
            <DataMember()> Public Property NBRANCHDesc As System.String
            <DataMember()> Public Property NPRODUCT As System.Int32
            <DataMember()> Public Property NPRODUCTDesc As System.String
            <DataMember()> Public Property NPOLICY As System.Int32
            <DataMember()> Public Property SCLIENT As System.String
            <DataMember()> Public Property SCLIENTDesc As System.String
            <DataMember()> Public Property DISSUEDAT As System.DateTime
            <DataMember()> Public Property DEFFECDATE As System.DateTime
            <DataMember()> Public Property DEXPIRDAT As System.DateTime
            <DataMember()> Public Property DNULLDATE As System.DateTime
            <DataMember()> Public Property NNULLCODE As System.Int32
            <DataMember()> Public Property NNULLCODEDesc As System.String
            <DataMember()> Public Property NPAYNUMBE As System.Int32
            <DataMember()> Public Property SDIRDEBIT As System.String
            <DataMember()> Public Property NCURRENCY As System.Int32
            <DataMember()> Public Property NCURRENCYDesc As System.String
            <DataMember()> Public Property NPREMIUM As System.Int32
            <DataMember()> Public Property NBALANCE As System.Int32
            <DataMember()> Public Property NCOMAMOU As System.Int32
            <DataMember()> Public Property NTAXAMOU As System.Int32
            <DataMember()> Public Property NSTATUS_PRE As System.Int32
            <DataMember()> Public Property NSTATUS_PREDesc As System.String
            <DataMember()> Public Property DSTATDATE As System.DateTime
            <DataMember()> Public Property DPAYDATE As System.DateTime
            <DataMember()> Public Property SCERTYPE As System.String
            <DataMember()> Public Property NDIGIT As System.Int32
            <DataMember()> Public Property NPERIOD As System.Int32
            <DataMember()> Public Property DLIMITDATE As System.DateTime
            <DataMember()> Public Property NTRATYPEI As System.Int32
            <DataMember()> Public Property NTRATYPEIDesc As System.String
            <DataMember()> Public Property NCONTRAT As System.Int32
            <DataMember()> Public Property NCOD_AGREE As System.Int32

        End Class


#End Region

    End Class

End Namespace