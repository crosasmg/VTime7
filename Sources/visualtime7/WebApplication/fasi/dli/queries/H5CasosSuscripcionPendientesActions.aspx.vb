'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Query Designer v7.1.120.1 at 2019/02/27 11:12:13 a.m. model release 1, Form Generator v1.0.34.22 - Query Generator v1.0.16.8
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class H5CasosSuscripcionPendientesActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"
   
        <WebMethod()>
        Public Shared Function ItemsTblDataLoad(filter As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.RecordType = 0, .Status = 0, .UnderwritingCaseID = 0, .OpenDate = Date.MinValue, .Decision = 0, .CreatorUserCode = 0, .UpdateUserCode = 0, .UpdateDate = Date.MinValue, .RecordTypeDesc = String.Empty, .StatusDesc = String.Empty, .DecisionDesc = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)

            Try

                With New DataManagerFactory("SELECT UNDERWRITINGCASE.RECORDTYPE, UNDERWRITINGCASE.STATUS, UNDERWRITINGCASE.UNDERWRITINGCASEID, UNDERWRITINGCASE.OPENDATE, UNDERWRITINGCASE.DECISION, UNDERWRITINGCASE.CREATORUSERCODE, UNDERWRITINGCASE.UPDATEUSERCODE, UNDERWRITINGCASE.UPDATEDATE, TRANSUNDERWRITINGCASETYPE.DESCRIPTION RECORDTYPEDESC, TRANSUNDERWRITINGCASESTYPE.DESCRIPTION STATUSDESC, TRANSDECISIONTYPE.DESCRIPTION DECISIONDESC FROM UNDERWRITINGCASE UNDERWRITINGCASE LEFT JOIN TRANSUNDERWRITINGCASETYPE TRANSUNDERWRITINGCASETYPE ON TRANSUNDERWRITINGCASETYPE.UNDERWRITINGCASETYPE = UNDERWRITINGCASE.UNDERWRITINGCASETYPE LEFT JOIN TRANSUNDERWRITINGCASESTYPE TRANSUNDERWRITINGCASESTYPE ON TRANSUNDERWRITINGCASESTYPE.UNDERWRITINGCASESTATUS = UNDERWRITINGCASE.STATUS LEFT JOIN TRANSDECISIONTYPE TRANSDECISIONTYPE ON TRANSDECISIONTYPE.DECISION = UNDERWRITINGCASE.DECISION  WHERE UNDERWRITINGCASE.DECISION = 1 AND UNDERWRITINGCASE.STATUS <> 3 AND UNDERWRITINGCASE.STATUS <> 5", "UNDERWRITINGCASE", "Linked.Underwriting")

                    .MaxNumberOfRecord = 2000
                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.RecordType = itemData.NumericValue("RECORDTYPE"), .Status = itemData.NumericValue("STATUS"), .UnderwritingCaseID = itemData.NumericValue("UNDERWRITINGCASEID"), .OpenDate = itemData.DateTimeValue("OPENDATE"), .Decision = itemData.NumericValue("DECISION"), .CreatorUserCode = itemData.NumericValue("CREATORUSERCODE"), .UpdateUserCode = itemData.NumericValue("UPDATEUSERCODE"), .UpdateDate = itemData.DateTimeValue("UPDATEDATE"), .RecordTypeDesc = itemData.StringValue("RECORDTYPEDESC"), .StatusDesc = itemData.StringValue("STATUSDESC"), .DecisionDesc = itemData.StringValue("DECISIONDESC")}

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5CasosSuscripcionPendientes", "ItemsTblDataLoad", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (ItemsTblDataLoad)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function ItemsTblDataCount(filter As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}

            Try
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT UNDERWRITINGCASE.RECORDTYPE, UNDERWRITINGCASE.STATUS, UNDERWRITINGCASE.UNDERWRITINGCASEID, UNDERWRITINGCASE.OPENDATE, UNDERWRITINGCASE.DECISION, UNDERWRITINGCASE.CREATORUSERCODE, UNDERWRITINGCASE.UPDATEUSERCODE, UNDERWRITINGCASE.UPDATEDATE, TRANSUNDERWRITINGCASETYPE.DESCRIPTION RECORDTYPEDESC, TRANSUNDERWRITINGCASESTYPE.DESCRIPTION STATUSDESC, TRANSDECISIONTYPE.DESCRIPTION DECISIONDESC FROM UNDERWRITINGCASE UNDERWRITINGCASE LEFT JOIN TRANSUNDERWRITINGCASETYPE TRANSUNDERWRITINGCASETYPE ON TRANSUNDERWRITINGCASETYPE.UNDERWRITINGCASETYPE = UNDERWRITINGCASE.UNDERWRITINGCASETYPE LEFT JOIN TRANSUNDERWRITINGCASESTYPE TRANSUNDERWRITINGCASESTYPE ON TRANSUNDERWRITINGCASESTYPE.UNDERWRITINGCASESTATUS = UNDERWRITINGCASE.STATUS LEFT JOIN TRANSDECISIONTYPE TRANSDECISIONTYPE ON TRANSDECISIONTYPE.DECISION = UNDERWRITINGCASE.DECISION  WHERE UNDERWRITINGCASE.DECISION = 1 AND UNDERWRITINGCASE.STATUS <> 3 AND UNDERWRITINGCASE.STATUS <> 5)", "UNDERWRITINGCASE", "Linked.Underwriting")

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("H5CasosSuscripcionPendientes", "ItemsTblDataCount", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} (ItemsTblDataCount)", ex.Message)
                End With
            End Try

            Return resultData
        End Function

#End Region

#Region "Lookups Web Methods"


        <WebMethod()>
        Public Shared Function LookUpForUnderwritingCaseCreatorUserCode(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  USERS.NUSERCODE, USERS.SINITIALS FROM USERS USERS    WHERE NOT SINITIALS IS NULL ORDER BY SINITIALS", ""), 
                                            "USERS", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NUSERCODE"),
                                                                                            .Description = item.StringValue("SINITIALS")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("H5CasosSuscripcionPendientes", "LookUpForUnderwritingCaseCreatorUserCode", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForUnderwritingCaseCreatorUserCode")
                End With
            End Try
            Return result
        End Function

        <WebMethod()>
        Public Shared Function LookUpForUnderwritingCaseUpdateUserCode(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  USERS.NUSERCODE, USERS.SINITIALS FROM USERS USERS  WHERE  ( USERS.NUSERCODE IS NOT NULL )   AND NOT SINITIALS IS NULL ORDER BY SINITIALS", ""), 
                                            "USERS", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NUSERCODE"),
                                                                                            .Description = item.StringValue("SINITIALS")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("H5CasosSuscripcionPendientes", "LookUpForUnderwritingCaseUpdateUserCode", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForUnderwritingCaseUpdateUserCode")
                End With
            End Try
            Return result
        End Function

#End Region

#Region "Form Actions"


#End Region





#Region "Common Utilities"

        Private Shared Sub SetDefaultValuesFromQueryString(formData As EntryData)

        End Sub	


#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property RootItemsRecordType As System.Int32
            <DataMember()> Public Property RootItemsStatus As System.Int32
            <DataMember()> Public Property RootItemsUnderwritingCaseID As System.Int32
            <DataMember()> Public Property RootItemsOpenDate As System.DateTime
            <DataMember()> Public Property RootItemsDecision As System.Int32
            <DataMember()> Public Property RootItemsCreatorUserCode As System.Int32
            <DataMember()> Public Property RootItemsUpdateUserCode As System.Int32
            <DataMember()> Public Property RootItemsUpdateDate As System.DateTime
            <DataMember()> Public Property Items_Item As List(Of Items_ItemItem)

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Items_ItemItem

            <DataMember()> Public Property RecordType As System.Int32
            <DataMember()> Public Property RecordTypeDesc As System.String
            <DataMember()> Public Property Status As System.Int32
            <DataMember()> Public Property StatusDesc As System.String
            <DataMember()> Public Property UnderwritingCaseID As System.Int32
            <DataMember()> Public Property OpenDate As System.DateTime
            <DataMember()> Public Property Decision As System.Int32
            <DataMember()> Public Property DecisionDesc As System.String
            <DataMember()> Public Property CreatorUserCode As System.Int32
            <DataMember()> Public Property UpdateUserCode As System.Int32
            <DataMember()> Public Property UpdateDate As System.DateTime

        End Class


#End Region

    End Class

End Namespace