'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Form Designer v7.1.213.1 at 2018/11/19 10:45:02 AM model release 2, Form Generator v1.0.33.4
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class HT5NNCotizacionPolizaHogar1BasicoActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"

       <WebMethod(EnableSession:=True)>
        Public Shared Function Initialization(id As String, urlid As String, fromid As String) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim instance As New EntryData With {.InstanceFormId = id}
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim currentAction As String = String.Empty
            Dim HT5NNCotizacionPolizaHogar1BasicoParametersInstance As HT5NNCotizacionPolizaHogar1BasicoParameters = Nothing

            Try
                If id.IsEmpty AndAlso urlid.IsEmpty Then
                    instance.InstanceFormId = System.Guid.NewGuid().ToString
                    
                    With instance

                    End With                
                    
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance = EntryDataToClass(HT5NNCotizacionPolizaHogar1BasicoParametersInstance, instance)
                    SetDefaultValuesFromQueryString(HT5NNCotizacionPolizaHogar1BasicoParametersInstance)
                    
                    If fromid.IsNotEmpty Then
                        GetTransferParameters(HT5NNCotizacionPolizaHogar1BasicoParametersInstance, fromid)
                    End If
                Else          
                    instance.InstanceFormId = id.IfEmpty(urlid)
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                End If

                HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath"))) = String.Empty

                If id.IsEmpty AndAlso urlid.IsEmpty Then
                    Form_Initialization(currentAction, HT5NNCotizacionPolizaHogar1BasicoParametersInstance, resultData)
                Else
                    Form_Load(currentAction, HT5NNCotizacionPolizaHogar1BasicoParametersInstance, resultData)
                End If


                instance = ClassToEntryData(instance, HT5NNCotizacionPolizaHogar1BasicoParametersInstance) 
		        
                StoreFormInformation(HT5NNCotizacionPolizaHogar1BasicoParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogar1Basico", "Initialization", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
   
        <WebMethod(EnableSession:=True)>
        Public Shared Function button0Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionPolizaHogar1BasicoParametersInstance As HT5NNCotizacionPolizaHogar1BasicoParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionPolizaHogar1BasicoParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button0Click")
                HT5NNCotizacionPolizaHogar1BasicoParametersInstance = EntryDataToClass(HT5NNCotizacionPolizaHogar1BasicoParametersInstance, instance)
                currentAction = SessionTrace("1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.CapitalEstructura = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountEstruct...")
                currentAction = SessionTrace("1.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.CapitalEstructura = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountEstruct...")

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.CapitalEstructura = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountEstructura.InsuredValue
                currentAction = SessionTrace("1.2. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.CapitalContenido = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountConteni...")

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.CapitalContenido = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountContenido.InsuredValue

                currentAction = SessionTrace("2. 'HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts' = New 'InMotionGIT.Policy.Entity'...'")
                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts = New InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmountCollection

                currentAction = SessionTrace("3. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountEstructura.CodeOfTheInsuredAmount = 3...")
                currentAction = SessionTrace("3.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountEstructura.CodeOfTheInsuredAmount = 3...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountEstructura) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountEstructura = New InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountEstructura.CodeOfTheInsuredAmount = 3
                currentAction = SessionTrace("3.2. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountEstructura.Coinsurance = 100...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountEstructura) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountEstructura = New InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountEstructura.Coinsurance = 100
                currentAction = SessionTrace("3.3. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountEstructura.RealValueOfInsuredProperty = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountEstruct...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountEstructura) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountEstructura = New InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountEstructura.RealValueOfInsuredProperty = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountEstructura.InsuredValue

                currentAction = SessionTrace("4. 'HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts'.Add('HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountEstructura')")
                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts.Add(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountEstructura)

                currentAction = SessionTrace("5. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountContenido.CodeOfTheInsuredAmount = 2...")
                currentAction = SessionTrace("5.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountContenido.CodeOfTheInsuredAmount = 2...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountContenido) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountContenido = New InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountContenido.CodeOfTheInsuredAmount = 2
                currentAction = SessionTrace("5.2. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountContenido.Coinsurance = 100...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountContenido) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountContenido = New InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountContenido.Coinsurance = 100
                currentAction = SessionTrace("5.3. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountContenido.RealValueOfInsuredProperty = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountConteni...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountContenido) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountContenido = New InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountContenido.RealValueOfInsuredProperty = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountContenido.InsuredValue

                currentAction = SessionTrace("6. 'HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts'.Add('HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountContenido')")
                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts.Add(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountContenido)

                currentAction = SessionTrace("7. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ErrorsFound = true...")
                currentAction = SessionTrace("7.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ErrorsFound = true...")

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ErrorsFound = true

                currentAction = SessionTrace("8. For Each moduleItem As 'InMotionGIT.Policy.Entity...' In 'HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation...'")
                For Each moduleItem As InMotionGIT.Policy.Entity.Contracts.Module In HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.Modules

                    currentAction = SessionTrace("9. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ErrorsFound = false...")
                    currentAction = SessionTrace("9.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ErrorsFound = false...")

                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ErrorsFound = false

                    Next
                currentAction = SessionTrace("10. If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ErrorsFound = true Then")
                If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ErrorsFound = true Then

                    currentAction = SessionTrace("11. The message 'Debe seleccionar al ...' will displayed as 'Popup'")
                    ParametersToDictionary(HT5NNCotizacionPolizaHogar1BasicoParametersInstance, parametersDictionary)
                    messageAction = "Debe seleccionar al menos un módulo/plan"
                    messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                    resultData.AddNotifyPopup(messageAction)
                        Else
                    currentAction = SessionTrace("12. Call Shared Sub 'Coverage Rating' with parameters (RiskInformation Object, Error List)")
InMotionGIT.PolicyManager.Services.Rating.Calculate.Process(riskInformation:=HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation, errors:=formContext.Errors)

                    currentAction = SessionTrace("13. label20.Visible = false, button5.Visible = true, TcoverCollection.Visible = true")
                    currentAction = SessionTrace("13.1. label20.Visible = false...")
                    resultData.AddControlBehavior("label20", "hide")
                    currentAction = SessionTrace("13.2. button5.Visible = true...")
                    resultData.AddControlBehavior("button5", "show")
                    currentAction = SessionTrace("13.3. TcoverCollection.Visible = true...")
                    resultData.AddControlBehavior("TcoverCollection", "show")

                            End If

                instance = ClassToEntryData(instance, HT5NNCotizacionPolizaHogar1BasicoParametersInstance)
                
                StoreFormInformation(HT5NNCotizacionPolizaHogar1BasicoParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogar1Basico", "button0Click", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function button5Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionPolizaHogar1BasicoParametersInstance As HT5NNCotizacionPolizaHogar1BasicoParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionPolizaHogar1BasicoParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button5Click")
                HT5NNCotizacionPolizaHogar1BasicoParametersInstance = EntryDataToClass(HT5NNCotizacionPolizaHogar1BasicoParametersInstance, instance)
Dim errors As InMotionGIT.Common.DataType.Notify
                currentAction = SessionTrace("1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation.CompanyId = 1...")
                currentAction = SessionTrace("1.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation.CompanyId = 1...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation.CompanyId = 1
                currentAction = SessionTrace("1.2. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation.Country = 58...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation.Country = 58
                currentAction = SessionTrace("1.3. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation.Security.Usercode = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.UsercodeBO...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation.Security) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation.Security = New InMotionGIT.Common.Contracts.Process.SecurityInformation
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation.Security.Usercode = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.UsercodeBO

                currentAction = SessionTrace("2. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Cont...")
                currentAction = SessionTrace("2.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Cont...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                currentAction = SessionTrace("2.2. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Cont...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.eMailAddress) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Contract.General.eMailAddress
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Contract.General.eMailAddress
                currentAction = SessionTrace("2.3. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Cont...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address

                currentAction = SessionTrace("3. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.RecordOwnerID = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.PrimaryIn...")
                currentAction = SessionTrace("3.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.RecordOwnerID = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.PrimaryIn...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.RecordOwnerID = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID
                currentAction = SessionTrace("3.2. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1
                currentAction = SessionTrace("3.3. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.AddressID = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.PrimaryIn...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.AddressID = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID

                currentAction = SessionTrace("4. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1...")
                currentAction = SessionTrace("4.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1
                currentAction = SessionTrace("4.2. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.TypeOfAddress = 3...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.TypeOfAddress) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.TypeOfAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfAddress
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.TypeOfAddress = 3
                currentAction = SessionTrace("4.3. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.UserCompany.Code = 1...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.UserCompany) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.UserCompany = New InMotionGIT.Common.DataType.LookUpValueExtend
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.UserCompany.Code = 1
                currentAction = SessionTrace("4.4. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 6...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 6

                currentAction = SessionTrace("5. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ShowBasicInformation = true...")
                currentAction = SessionTrace("5.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ShowBasicInformation = true...")

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ShowBasicInformation = true

                currentAction = SessionTrace("8. Call 'HT5Póliza Hogar Seguro' form with transferring parameters")
                                HttpContext.Current.Session(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.InternalId) = HT5NNCotizacionPolizaHogar1BasicoParametersInstance
                HttpContext.Current.Session("fromid") = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.InternalId
    
                With resultData
                    .AddRedirect(String.Format(CultureInfo.InvariantCulture, "{0}/HT5NNCotizacionPolizaHogar2Cliente.aspx?fromid={1}", "/fasi/dli/forms", HT5NNCotizacionPolizaHogar1BasicoParametersInstance.InternalId, ""))
                End With

                instance = ClassToEntryData(instance, HT5NNCotizacionPolizaHogar1BasicoParametersInstance)
                
                StoreFormInformation(HT5NNCotizacionPolizaHogar1BasicoParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogar1Basico", "button5Click", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function

#End Region

#Region "Lookups Web Methods"


        <WebMethod()>
        Public Shared Function LookUpForProductCode(id As String, RiskInformationLineOfBusiness As System.Int32) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  PRODMASTER.NBRANCH, PRODMASTER.NPRODUCT, PRODMASTER.SDESCRIPT, PRODMASTER.SSTATREGT FROM PRODMASTER PRODMASTER  WHERE PRODMASTER.SSTATREGT = '{0}'  AND (PRODMASTER.NBRANCH = @:PRODMASTERNBRANCHDependen)  ORDER BY PRODMASTER.SDESCRIPT ASC", "1"), 
                                            "PRODMASTER", "Linked.LatCombined")
                    .AddParameter("PRODMASTERNBRANCHDependen", DbType.Int32, 0, False, RiskInformationLineOfBusiness)

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NPRODUCT"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogar1Basico", "LookUpForProductCode", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForProductCode")
                End With
            End Try
            Return result
        End Function

        <WebMethod()>
        Public Shared Function LookUpForLineOfBusiness(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE10.NBRANCH, TABLE10.SDESCRIPT, TABLE10.SSTATREGT FROM TABLE10 TABLE10  WHERE TABLE10.SSTATREGT = 1  AND NOT SDESCRIPT IS NULL ORDER BY SDESCRIPT", "1"), 
                                            "TABLE10", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NBRANCH"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogar1Basico", "LookUpForLineOfBusiness", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForLineOfBusiness")
                End With
            End Try
            Return result
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForYearBuilt(formId As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            Dim HT5NNCotizacionPolizaHogar1BasicoParametersInstance As HT5NNCotizacionPolizaHogar1BasicoParameters = RetrieveFormInformationFromDatabase(formId)

            Try
                If Not IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection) Then
                    For Each item As InMotionGIT.Common.Contracts.Errors.Error In HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.ErrorId,
                                                                                            .Description = item.ErrorId})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogar1Basico", "LookUpForYearBuilt", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForYearBuilt")
                End With
            End Try
            Return result
        End Function

        <WebMethod()>
        Public Shared Function LookUpForDwellingType(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE6012.NDWELLINGTYPE, TABLE6012.SDESCRIPT FROM TABLE6012 TABLE6012  WHERE TABLE6012.SSTATREGT = '{0}'  ORDER BY TABLE6012.SDESCRIPT ASC", "1"), 
                                            "TABLE6012", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NDWELLINGTYPE"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogar1Basico", "LookUpForDwellingType", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForDwellingType")
                End With
            End Try
            Return result
        End Function

        <WebMethod()>
        Public Shared Function LookUpForConstructionMaterial(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE5536.NSTRUCTURE_WALL, TABLE5536.SDESCRIPT FROM TABLE5536 TABLE5536  WHERE TABLE5536.SSTATREGT = '{0}'  ORDER BY TABLE5536.SDESCRIPT ASC", "1"), 
                                            "TABLE5536", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NSTRUCTURE_WALL"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogar1Basico", "LookUpForConstructionMaterial", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForConstructionMaterial")
                End With
            End Try
            Return result
        End Function

        <WebMethod()>
        Public Shared Function LookUpForFoundation(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE6003.NFOUNDTYPE, TABLE6003.SDESCRIPT FROM TABLE6003 TABLE6003  WHERE TABLE6003.SSTATREGT = '{0}'  ORDER BY TABLE6003.SDESCRIPT ASC", "1"), 
                                            "TABLE6003", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NFOUNDTYPE"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogar1Basico", "LookUpForFoundation", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForFoundation")
                End With
            End Try
            Return result
        End Function

        <WebMethod()>
        Public Shared Function LookUpForRoofType(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE7038.NROOFTYPE, TABLE7038.SDESCRIPT FROM TABLE7038 TABLE7038  WHERE TABLE7038.SSTATREGT = '{0}'  ORDER BY TABLE7038.SDESCRIPT ASC", "1"), 
                                            "TABLE7038", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NROOFTYPE"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogar1Basico", "LookUpForRoofType", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForRoofType")
                End With
            End Try
            Return result
        End Function

        <WebMethod()>
        Public Shared Function LookUpForCurrency(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE11.NCODIGINT, TABLE11.SDESCRIPT FROM TABLE11 TABLE11  WHERE TABLE11.SSTATREGT = '{0}'  ORDER BY TABLE11.SDESCRIPT ASC", "1"), 
                                            "TABLE11", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NCODIGINT"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogar1Basico", "LookUpForCurrency", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForCurrency")
                End With
            End Try
            Return result
        End Function

       <WebMethod()>
        Public Shared Function LookUpForModuleSelected(RiskInformationLineOfBusiness As System.Int32, RiskInformationProductCode As System.Int32) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of Object)

            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TAB_MODUL.NBRANCH, TAB_MODUL.NPRODUCT, TAB_MODUL.NMODULEC, TAB_MODUL.SDESCRIPT, TAB_MODUL.SREQUIRE, TAB_MODUL.DNULLDATE FROM TAB_MODUL TAB_MODUL  WHERE TAB_MODUL.DNULLDATE IS NULL  AND (TAB_MODUL.NBRANCH = @:TAB_MODULNBRANCHDependenc AND TAB_MODUL.NPRODUCT = @:TAB_MODULNPRODUCTDependen AND NOT SDESCRIPT IS NULL) ORDER BY SDESCRIPT ", ""), 
                                            "TAB_MODUL", "Linked.LatCombined")
                    .AddParameter("TAB_MODULNBRANCHDependenc", DbType.Int32, 0, False, RiskInformationLineOfBusiness)
                    .AddParameter("TAB_MODULNPRODUCTDependen", DbType.Int32, 0, False, RiskInformationProductCode)

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New With {.CoverageModule = item.NumericValue("NMODULEC"),
                                                                            .SDESCRIPT = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogar1Basico", "LookUpForModuleSelected", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForModuleSelected")
                End With
            End Try
            Return result
        End Function

#End Region

#Region "Form Actions"

        Private Shared Sub Form_Initialization(ByRef currentAction As String, ByRef HT5NNCotizacionPolizaHogar1BasicoParametersInstance As HT5NNCotizacionPolizaHogar1BasicoParameters, ByRef resultData As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult)
            Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
            Dim formContext As New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, HT5NNCotizacionPolizaHogar1BasicoParametersInstance.InternalId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
            Dim selectDataTableItem As DataTable = Nothing
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim messageAction As String = String.Empty
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            Dim errors As InMotionGIT.Common.DataType.Notify
            currentAction = SessionTrace("Form_Initialization")

            currentAction = SessionTrace("2. If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ShowBasicInformation <> true Then")
            If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ShowBasicInformation <> true Then

                currentAction = SessionTrace("3. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.EffectiveDate = Date.Today...")
                currentAction = SessionTrace("3.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.EffectiveDate = Date.Today...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.EffectiveDate = Date.Today

                currentAction = SessionTrace("4. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection(0).ErrorId = Date.Today.year...")
                currentAction = SessionTrace("4.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection(0).ErrorId = Date.Today.year...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection = New InMotionGIT.Common.Contracts.Errors.ErrorCollection
                End If
                If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection.Count < (0 + 1) Then
                    For indexInstance As Integer = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection.Count To 0
                          HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection.Add(New InMotionGIT.Common.Contracts.Errors.Error)
                    Next
               End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection(0).ErrorId = Date.Today.year

                currentAction = SessionTrace("5. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection(1).ErrorId = Date.Today.year - 1...")
                currentAction = SessionTrace("5.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection(1).ErrorId = Date.Today.year - 1...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection = New InMotionGIT.Common.Contracts.Errors.ErrorCollection
                End If
                If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection.Count < (9 + 1) Then
                    For indexInstance As Integer = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection.Count To 9
                          HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection.Add(New InMotionGIT.Common.Contracts.Errors.Error)
                    Next
               End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection(1).ErrorId = Date.Today.year - 1
                currentAction = SessionTrace("5.2. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection(2).ErrorId = Date.Today.year - 2...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection = New InMotionGIT.Common.Contracts.Errors.ErrorCollection
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection(2).ErrorId = Date.Today.year - 2
                currentAction = SessionTrace("5.3. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection(3).ErrorId = Date.Today.year - 3...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection = New InMotionGIT.Common.Contracts.Errors.ErrorCollection
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection(3).ErrorId = Date.Today.year - 3
                currentAction = SessionTrace("5.4. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection(4).ErrorId = Date.Today.year - 4...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection = New InMotionGIT.Common.Contracts.Errors.ErrorCollection
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection(4).ErrorId = Date.Today.year - 4
                currentAction = SessionTrace("5.5. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection(5).ErrorId = Date.Today.year - 5...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection = New InMotionGIT.Common.Contracts.Errors.ErrorCollection
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection(5).ErrorId = Date.Today.year - 5
                currentAction = SessionTrace("5.6. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection(6).ErrorId = Date.Today.year - 6...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection = New InMotionGIT.Common.Contracts.Errors.ErrorCollection
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection(6).ErrorId = Date.Today.year - 6
                currentAction = SessionTrace("5.7. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection(7).ErrorId = Date.Today.year - 7...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection = New InMotionGIT.Common.Contracts.Errors.ErrorCollection
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection(7).ErrorId = Date.Today.year - 7
                currentAction = SessionTrace("5.8. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection(8).ErrorId = Date.Today.year - 8...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection = New InMotionGIT.Common.Contracts.Errors.ErrorCollection
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection(8).ErrorId = Date.Today.year - 8
                currentAction = SessionTrace("5.9. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection(9).ErrorId = Date.Today.year - 9...")
                                If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection = New InMotionGIT.Common.Contracts.Errors.ErrorCollection
                End If

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.YearCollection(9).ErrorId = Date.Today.year - 9

                currentAction = SessionTrace("6. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RecoveryCaseIndicator = false...")
                currentAction = SessionTrace("6.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RecoveryCaseIndicator = false...")

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RecoveryCaseIndicator = false

                currentAction = SessionTrace("7. If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.StatusRun <> true Then")
                If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.StatusRun <> true Then

                    currentAction = SessionTrace("8. The message 'You are not authoriz...' will displayed as 'Splash'")
                    ParametersToDictionary(HT5NNCotizacionPolizaHogar1BasicoParametersInstance, parametersDictionary)
                    messageAction = "You are not authorized to execute this transaction"
                    messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                    resultData.AddNotifySplash(messageAction)
                        End If
                currentAction = SessionTrace("9. If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.uwcaseid Not Is Null Or Not Empty '' AND HT5NNCotizacionPolizaHogar1BasicoParametersInstance.uwcaseid <> 0 Then")
                If Not String.IsNullOrEmpty(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.uwcaseid) AndAlso HT5NNCotizacionPolizaHogar1BasicoParametersInstance.uwcaseid <> 0 Then

                    currentAction = SessionTrace("10. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts(0).CodeOfTheInsuredAmount = 3...")
                    currentAction = SessionTrace("10.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts(0).CodeOfTheInsuredAmount = 3...")
                                    If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts = New InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmountCollection
                End If
                    If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts.Count < (1 + 1) Then
                    For indexInstance As Integer = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts.Count To 1
                          HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts.Add(New InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount)
                    Next
               End If

                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts(0).CodeOfTheInsuredAmount = 3
                    currentAction = SessionTrace("10.2. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts(1).CodeOfTheInsuredAmount = 2...")
                                    If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts = New InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmountCollection
                End If

                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts(1).CodeOfTheInsuredAmount = 2

                    currentAction = SessionTrace("11. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RecoveryCaseIndicator = true...")
                    currentAction = SessionTrace("11.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RecoveryCaseIndicator = true...")

                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RecoveryCaseIndicator = true

                    currentAction = SessionTrace("12. Call 'Retrieve Case Information for Request of policy' workflow in Synchronous mode with tracking")
                    WorkflowInArguments = New Dictionary(Of String, Object)

                    With WorkflowInArguments
                    .Add("uwcaseid", HT5NNCotizacionPolizaHogar1BasicoParametersInstance.uwcaseid)
                    .Add("ClientName", HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.PrimaryInsured.Client.CompleteClientName)
                    .Add("StatusCase", HT5NNCotizacionPolizaHogar1BasicoParametersInstance.StatusCase)
                    .Add("RiskInformation", HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation)
                    .Add("Identifier", "Home")
                    .Add("context", formContext)
                    End With

                    WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("RetrieveCaseInformationRequestPolicy", "3967f9a8-6bc2-41d6-8672-ad0ede452cf2", 9, WorkflowInArguments, True, True, "Me.AppRelativeVirtualPath", HT5NNCotizacionPolizaHogar1BasicoParametersInstance.InternalId)

                    currentAction += "'Mapping Outputs'"
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.uwcaseid = WorkflowOutArguments("uwcaseid")
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.PrimaryInsured.Client.CompleteClientName = WorkflowOutArguments("ClientName")
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.StatusCase = WorkflowOutArguments("StatusCase")
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation = WorkflowOutArguments("RiskInformation")

                    currentAction = SessionTrace("13. Call Shared Function 'Retrieve Client' with parameters (Client Identification)")
                    Dim _Client_c6219b99a3a245598ee19b815e379d52 As InMotionGIT.Client.Entity.Contracts.Client
                    
      _Client_c6219b99a3a245598ee19b815e379d52 = (New InMotionGIT.Client.Services.ClientManager).Retrieve(clientId:=HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID, atDate:=Date.Today, childFilter:= "All")
      isNullResult = (IsNothing(_Client_c6219b99a3a245598ee19b815e379d52))
      isFoundData  = Not isNullResult
    
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.PrimaryInsured.Client = _Client_c6219b99a3a245598ee19b815e379d52

                    currentAction = SessionTrace("14. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.eMail = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.PrimaryIn...")
                    currentAction = SessionTrace("14.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.eMail = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.PrimaryIn...")

                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.eMail = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.PrimaryInsured.Client.eMailAddressDefault

                    currentAction = SessionTrace("15. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountEstructura.InsuredValue = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsu...")
                    currentAction = SessionTrace("15.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountEstructura.InsuredValue = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsu...")
                                    If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountEstructura) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountEstructura = New InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount
                End If

                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountEstructura.InsuredValue = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts(0).InsuredValue
                    currentAction = SessionTrace("15.2. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountContenido.InsuredValue = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsu...")
                                    If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountContenido) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountContenido = New InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount
                End If

                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.BasicInsuredAmountContenido.InsuredValue = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts(1).InsuredValue

                    currentAction = SessionTrace("16. Continuar.Visible = true, TcoverCollection.Visible = true, CoverageWithCalculatedPremium.Visible = true")
                    currentAction = SessionTrace("16.1. Continuar.Visible = true...")
                    resultData.AddControlBehavior("Continuar", "show")
                    currentAction = SessionTrace("16.2. TcoverCollection.Visible = true...")
                    resultData.AddControlBehavior("TcoverCollection", "show")
                    currentAction = SessionTrace("16.3. CoverageWithCalculatedPremium.Visible = true...")
                    resultData.AddControlBehavior("CoverageWithCalculatedPremiumContainer", "show")

                    currentAction = SessionTrace("17. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ClientExistInDB = true...")
                    currentAction = SessionTrace("17.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ClientExistInDB = true...")

                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ClientExistInDB = true

                    currentAction = SessionTrace("18. uwcaseid.Visible = true")
                    currentAction = SessionTrace("18.1. uwcaseid.Visible = true...")
                    resultData.AddControlBehavior("uwcaseid", "show")

                            Else
                    currentAction = SessionTrace("19. TcoverCollection.Visible = false, uwcaseid.Visible = false")
                    currentAction = SessionTrace("19.1. TcoverCollection.Visible = false...")
                    resultData.AddControlBehavior("TcoverCollection", "hide")
                    currentAction = SessionTrace("19.2. uwcaseid.Visible = false...")
                    resultData.AddControlBehavior("uwcaseid", "hide")

                    currentAction = SessionTrace("20. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts(0).Coinsurance = 100...")
                    currentAction = SessionTrace("20.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts(0).Coinsurance = 100...")
                                    If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts = New InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmountCollection
                End If
                    If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts.Count < (1 + 1) Then
                    For indexInstance As Integer = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts.Count To 1
                          HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts.Add(New InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount)
                    Next
               End If

                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts(0).Coinsurance = 100
                    currentAction = SessionTrace("20.2. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts(1).Coinsurance = 100...")
                                    If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts = New InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmountCollection
                End If

                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.BasicInsuredAmounts(1).Coinsurance = 100
                    currentAction = SessionTrace("20.3. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.HomeLineOfBusiness.YearBuilt = Date.Today.year...")
                                    If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.HomeLineOfBusiness) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.HomeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness
                End If

                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.HomeLineOfBusiness.YearBuilt = Date.Today.year
                    currentAction = SessionTrace("20.4. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.HomeLineOfBusiness.RoofYear = Date.Today.year...")
                                    If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.HomeLineOfBusiness) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.HomeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness
                End If

                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.HomeLineOfBusiness.RoofYear = Date.Today.year

                                End If
                            End If
            currentAction = SessionTrace("21. If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ShowBasicInformation <> true Then")
            If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ShowBasicInformation <> true Then

                currentAction = SessionTrace("22. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.SendMailIndicator = true...")
                currentAction = SessionTrace("22.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.SendMailIndicator = true...")

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.SendMailIndicator = true

                currentAction = SessionTrace("23. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.OnLinePrintIndicator = false...")
                currentAction = SessionTrace("23.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.OnLinePrintIndicator = false...")

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.OnLinePrintIndicator = false

                currentAction = SessionTrace("24. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.PreviousPayment = false...")
                currentAction = SessionTrace("24.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.PreviousPayment = false...")

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.PreviousPayment = false

                currentAction = SessionTrace("25. SELECT TAB_MODUL.NBRANCH, TAB_MODUL.NPRODUCT, TAB_MODUL.NMODULEC FROM TAB_MODUL... WHERE TAB_MODUL.NBRANCH = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.LineOfBusiness AND TAB_MODUL.NPRODUCT = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.ProductCode AND TAB_MODUL.DNULLDATE Is Empty  AND )")
                isFoundData = False
                       With New DataManagerFactory("SELECT TAB_MODUL.NBRANCH, TAB_MODUL.NPRODUCT, TAB_MODUL.NMODULEC, TAB_MODUL.SDEFAULTI, TAB_MODUL.SREQUIRE, TAB_MODUL.DNULLDATE FROM TAB_MODUL TAB_MODUL  WHERE TAB_MODUL.NBRANCH = @:TAB_MODULNBRANCH0 AND TAB_MODUL.NPRODUCT = @:TAB_MODULNPRODUCT1 AND TAB_MODUL.DNULLDATE IS NULL AND (TAB_MODUL.SREQUIRE = '1' OR TAB_MODUL.SDEFAULTI = '1')", "TAB_MODUL", "Linked.LatCombined")
.AddParameter("TAB_MODULNBRANCH0", DbType.Int32, 5, False, HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.LineOfBusiness)
.AddParameter("TAB_MODULNPRODUCT1", DbType.Int32, 5, False, HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.ProductCode)
 
            selectDataTableItem = .QueryExecuteToTable(True)  
        End With
                With selectDataTableItem
                        If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                            isFoundData = True 
                                      If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation) Then
              HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.Modules = New InMotionGIT.Policy.Entity.Contracts.ModuleCollection 
                            Dim newItem As InMotionGIT.Policy.Entity.Contracts.Module 
                            For Each itemData As DataRow In .Rows
                                 newItem = New InMotionGIT.Policy.Entity.Contracts.Module
                        newItem.CoverageModule = itemData.NumericValue("NMODULEC") 

                                  HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.Modules.Add(newItem)
                            Next
                        End If
                End With

                                End If
            currentAction = SessionTrace("26. If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ShowBasicInformation = true Then")
            If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ShowBasicInformation = true Then

                currentAction = SessionTrace("27. zone0Gen.Enabled = false, zone9.Enabled = false, zone10Modulos.Enabled = false...")
                currentAction = SessionTrace("27.1. zone0Gen.Enabled = false...")
                resultData.AddControlBehavior("zone0Gen", "disabled")
                currentAction = SessionTrace("27.2. zone9.Enabled = false...")
                resultData.AddControlBehavior("zone9", "disabled")
                currentAction = SessionTrace("27.3. zone10Modulos.Enabled = false...")
                resultData.AddControlBehavior("zone10Modulos", "disabled")
                currentAction = SessionTrace("27.4. TcoverCollection.Enabled = false...")
                resultData.AddControlBehavior("TcoverCollection", "disabled")
                currentAction = SessionTrace("27.5. TcoverCollection.Visible = true...")
                resultData.AddControlBehavior("TcoverCollection", "show")
                currentAction = SessionTrace("27.6. zone13F1Basico.Visible = false...")
                resultData.AddControlBehavior("zone13F1Basico", "hide")

                currentAction = SessionTrace("28. NNCotizacionPolizaHogarSecuencia.button34.Visible = true")
                currentAction = SessionTrace("28.1. NNCotizacionPolizaHogarSecuencia.button34.Visible = true...")
                resultData.AddControlBehavior("button34", "show")

                                    End If
            currentAction = SessionTrace("29. If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ShowAddressInformation = true Then")
            If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ShowAddressInformation = true Then

                currentAction = SessionTrace("30. NNCotizacionPolizaHogarSecuencia.button34.Visible = true, NNCotizacionPolizaHogarSecuencia.button32.Visible = true")
                currentAction = SessionTrace("30.1. NNCotizacionPolizaHogarSecuencia.button34.Visible = true...")
                resultData.AddControlBehavior("button34", "show")
                currentAction = SessionTrace("30.2. NNCotizacionPolizaHogarSecuencia.button32.Visible = true...")
                resultData.AddControlBehavior("button32", "show")

                                        End If
            currentAction = SessionTrace("31. If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ShowAdditionalInformation = true Then")
            If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ShowAdditionalInformation = true Then

                currentAction = SessionTrace("32. NNCotizacionPolizaHogarSecuencia.button32.Visible = true, NNCotizacionPolizaHogarSecuencia.button36.Visible = true")
                currentAction = SessionTrace("32.1. NNCotizacionPolizaHogarSecuencia.button32.Visible = true...")
                resultData.AddControlBehavior("button32", "show")
                currentAction = SessionTrace("32.2. NNCotizacionPolizaHogarSecuencia.button36.Visible = true...")
                resultData.AddControlBehavior("button36", "show")

                currentAction = SessionTrace("33. NNCotizacionPolizaHogarSecuencia.button19.Visible = true, NNCotizacionPolizaHogarSecuencia.EnviarCotizacionEmail.Visible = true, NNCotizacionPolizaHogarSecuencia.eMail.Visible = true")
                currentAction = SessionTrace("33.1. NNCotizacionPolizaHogarSecuencia.button19.Visible = true...")
                resultData.AddControlBehavior("button19", "show")
                currentAction = SessionTrace("33.2. NNCotizacionPolizaHogarSecuencia.EnviarCotizacionEmail.Visible = true...")
                resultData.AddControlBehavior("EnviarCotizacionEmail", "show")
                currentAction = SessionTrace("33.3. NNCotizacionPolizaHogarSecuencia.eMail.Visible = true...")
                resultData.AddControlBehavior("eMail", "show")

                                            End If
            currentAction = SessionTrace("34. If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ShowPaymentInformation = true Then")
            If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ShowPaymentInformation = true Then

                currentAction = SessionTrace("35. NNCotizacionPolizaHogarSecuencia.button36.Visible = true")
                currentAction = SessionTrace("35.1. NNCotizacionPolizaHogarSecuencia.button36.Visible = true...")
                resultData.AddControlBehavior("button36", "show")

                currentAction = SessionTrace("36. NNCotizacionPolizaHogarSecuencia.button19.Visible = true, NNCotizacionPolizaHogarSecuencia.EnviarCotizacionEmail.Visible = true, NNCotizacionPolizaHogarSecuencia.eMail.Visible = true")
                currentAction = SessionTrace("36.1. NNCotizacionPolizaHogarSecuencia.button19.Visible = true...")
                resultData.AddControlBehavior("button19", "show")
                currentAction = SessionTrace("36.2. NNCotizacionPolizaHogarSecuencia.EnviarCotizacionEmail.Visible = true...")
                resultData.AddControlBehavior("EnviarCotizacionEmail", "show")
                currentAction = SessionTrace("36.3. NNCotizacionPolizaHogarSecuencia.eMail.Visible = true...")
                resultData.AddControlBehavior("eMail", "show")

                                                End If
            currentAction = SessionTrace("37. If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ShowGeneral = true Then")
            If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ShowGeneral = true Then

                currentAction = SessionTrace("38. NNCotizacionPolizaHogarSecuencia.Accept.Visible = true")
                currentAction = SessionTrace("38.1. NNCotizacionPolizaHogarSecuencia.Accept.Visible = true...")
                resultData.AddControlBehavior("Accept", "show")

                                                    End If
            currentAction = SessionTrace("39. If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ErrorsFound = true Then")
            If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ErrorsFound = true Then

                currentAction = SessionTrace("40. FinalMessageLabel.Visible = true")
                currentAction = SessionTrace("40.1. FinalMessageLabel.Visible = true...")
                resultData.AddControlBehavior("FinalMessageLabel", "show")

                currentAction = SessionTrace("41. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ErrorsFound = false...")
                currentAction = SessionTrace("41.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ErrorsFound = false...")

                HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ErrorsFound = false

                                                        Else
                currentAction = SessionTrace("42. FinalMessageLabel.Visible = false")
                currentAction = SessionTrace("42.1. FinalMessageLabel.Visible = false...")
                resultData.AddControlBehavior("FinalMessageLabel", "hide")

                                                            End If
            currentAction = SessionTrace("43. If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.frompanel = true Then")
            If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.frompanel = true Then

                currentAction = SessionTrace("44. NNCotizacionPolizaHogarSecuencia.Accept.Visible = false, NNCotizacionPolizaHogarSecuencia.button31.Visible = true, NNCotizacionPolizaHogarSecuencia.button32.Visible = true...")
                currentAction = SessionTrace("44.1. NNCotizacionPolizaHogarSecuencia.Accept.Visible = false...")
                resultData.AddControlBehavior("Accept", "hide")
                currentAction = SessionTrace("44.2. NNCotizacionPolizaHogarSecuencia.button31.Visible = true...")
                resultData.AddControlBehavior("button31", "show")
                currentAction = SessionTrace("44.3. NNCotizacionPolizaHogarSecuencia.button32.Visible = true...")
                resultData.AddControlBehavior("button32", "show")
                currentAction = SessionTrace("44.4. NNCotizacionPolizaHogarSecuencia.button34.Visible = true...")
                resultData.AddControlBehavior("button34", "show")
                currentAction = SessionTrace("44.5. NNCotizacionPolizaHogarSecuencia.button36.Visible = true...")
                resultData.AddControlBehavior("button36", "show")
                currentAction = SessionTrace("44.6. NNCotizacionPolizaHogarSecuencia.button19.Visible = false...")
                resultData.AddControlBehavior("button19", "hide")
                currentAction = SessionTrace("44.7. NNCotizacionPolizaHogarSecuencia.EnviarCotizacionEmail.Visible = false...")
                resultData.AddControlBehavior("EnviarCotizacionEmail", "hide")
                currentAction = SessionTrace("44.8. NNCotizacionPolizaHogarSecuencia.eMail.Visible = false...")
                resultData.AddControlBehavior("eMail", "hide")
                currentAction = SessionTrace("44.9. label20.Visible = false...")
                resultData.AddControlBehavior("label20", "hide")
                currentAction = SessionTrace("44.10. button0.Visible = false...")
                resultData.AddControlBehavior("button0", "hide")
                currentAction = SessionTrace("44.11. zone0Gen.Enabled = false...")
                resultData.AddControlBehavior("zone0Gen", "disabled")
                currentAction = SessionTrace("44.12. zone9.Enabled = false...")
                resultData.AddControlBehavior("zone9", "disabled")
                currentAction = SessionTrace("44.13. zone10Modulos.Enabled = false...")
                resultData.AddControlBehavior("zone10Modulos", "disabled")
                currentAction = SessionTrace("44.14. TcoverCollection.Enabled = false...")
                resultData.AddControlBehavior("TcoverCollection", "disabled")

                                                                End If

        End Sub
	
        Private Shared Sub Form_Load(ByRef currentAction As String, ByRef HT5NNCotizacionPolizaHogar1BasicoParametersInstance As HT5NNCotizacionPolizaHogar1BasicoParameters, ByRef resultData As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult)
            Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
            Dim formContext As New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, HT5NNCotizacionPolizaHogar1BasicoParametersInstance.InternalId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
            Dim selectDataTableItem As DataTable = Nothing
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim messageAction As String = String.Empty
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            currentAction = SessionTrace("Form_Load")

            currentAction = SessionTrace("1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RecoveryCaseIndicator = true...")
            currentAction = SessionTrace("1.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RecoveryCaseIndicator = true...")

            HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RecoveryCaseIndicator = true

            currentAction = SessionTrace("2. Call Shared Function 'Retrieve Underwriting Case' with parameters (Case ID, Effective Date)")
            Dim _UnderwritingCase_c2e66452a92e4a7ab3293c4d073813f7 As InMotionGIT.Underwriting.Contracts.UnderwritingCase
            _UnderwritingCase_c2e66452a92e4a7ab3293c4d073813f7 = InMotionGIT.Underwriting.Proxy.Manager.Retrieve(underwritingCaseID:=HT5NNCotizacionPolizaHogar1BasicoParametersInstance.uwcaseid, atDate:=Date.Today)
            HT5NNCotizacionPolizaHogar1BasicoParametersInstance.UnderwritingCase = _UnderwritingCase_c2e66452a92e4a7ab3293c4d073813f7
            isNullResult = (IsNothing(_UnderwritingCase_c2e66452a92e4a7ab3293c4d073813f7))

            currentAction = SessionTrace("3. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.UnderwritingCase.RiskInfo...")
            currentAction = SessionTrace("3.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.UnderwritingCase.RiskInfo...")
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If

            HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.UnderwritingCase.RiskInformation

            currentAction = SessionTrace("4. Call Shared Sub 'Clear Form Errors' without parameters")
            
        HT5NNCotizacionPolizaHogar1BasicoParametersInstance.Errors.Clear()
	formContext.Errors.Clear()
    

            currentAction = SessionTrace("5. Call Shared Function 'Retrieve Client' with parameters (Client Identification)")
            Dim _Client_9ac552e128d149bf8b9feb6bddb585cc As InMotionGIT.Client.Entity.Contracts.Client
            
      _Client_9ac552e128d149bf8b9feb6bddb585cc = (New InMotionGIT.Client.Services.ClientManager).Retrieve(clientId:=HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID, atDate:=Date.Today, childFilter:= "All")
      isNullResult = (IsNothing(_Client_9ac552e128d149bf8b9feb6bddb585cc))
      isFoundData  = Not isNullResult
    
            HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.PrimaryInsured.Client = _Client_9ac552e128d149bf8b9feb6bddb585cc

            currentAction = SessionTrace("6. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ClientExistInDB = true...")
            currentAction = SessionTrace("6.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ClientExistInDB = true...")

            HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ClientExistInDB = true

            currentAction = SessionTrace("7. uwcaseid.Visible = true")
            currentAction = SessionTrace("7.1. uwcaseid.Visible = true...")
            resultData.AddControlBehavior("uwcaseid", "show")

            currentAction = SessionTrace("8. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation.CompanyId = 1...")
            currentAction = SessionTrace("8.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation.CompanyId = 1...")
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If

            HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation.CompanyId = 1
            currentAction = SessionTrace("8.2. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation.Country = 58...")
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If

            HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation.Country = 58
            currentAction = SessionTrace("8.3. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation.Security.Usercode = 9998...")
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation.Security) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation.Security = New InMotionGIT.Common.Contracts.Process.SecurityInformation
                End If

            HT5NNCotizacionPolizaHogar1BasicoParametersInstance.ConsumerInformation.Security.Usercode = 9998

            currentAction = SessionTrace("9. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Cont...")
            currentAction = SessionTrace("9.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Cont...")
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If

            HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
            currentAction = SessionTrace("9.2. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Cont...")
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.eMailAddress) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Contract.General.eMailAddress
                End If

            HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Contract.General.eMailAddress
            currentAction = SessionTrace("9.3. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Cont...")
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

            HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address

            currentAction = SessionTrace("10. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.RecordOwnerID = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.PrimaryIn...")
            currentAction = SessionTrace("10.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.RecordOwnerID = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.PrimaryIn...")
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

            HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.RecordOwnerID = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID
            currentAction = SessionTrace("10.2. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1...")
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

            HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1
            currentAction = SessionTrace("10.3. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.AddressID = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.PrimaryIn...")
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

            HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.AddressID = HT5NNCotizacionPolizaHogar1BasicoParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID

            currentAction = SessionTrace("11. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1...")
            currentAction = SessionTrace("11.1. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1...")
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

            HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1
            currentAction = SessionTrace("11.2. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.TypeOfAddress = 3...")
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.TypeOfAddress) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.TypeOfAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfAddress
                End If

            HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.TypeOfAddress = 3
            currentAction = SessionTrace("11.3. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.UserCompany.Code = 1...")
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.UserCompany) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.UserCompany = New InMotionGIT.Common.DataType.LookUpValueExtend
                End If

            HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddresseMailDLI.Address.UserCompany.Code = 1
            currentAction = SessionTrace("11.4. HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 6...")
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

            HT5NNCotizacionPolizaHogar1BasicoParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 6

            currentAction = SessionTrace("12. If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.frompanel = true Then")
            If HT5NNCotizacionPolizaHogar1BasicoParametersInstance.frompanel = true Then

                currentAction = SessionTrace("13. NNCotizacionPolizaHogarSecuencia.Accept.Visible = false, NNCotizacionPolizaHogarSecuencia.OnLinePrintIndicator.Visible = false, NNCotizacionPolizaHogarSecuencia.button31.Visible = true...")
                currentAction = SessionTrace("13.1. NNCotizacionPolizaHogarSecuencia.Accept.Visible = false...")
                resultData.AddControlBehavior("Accept", "hide")
                currentAction = SessionTrace("13.2. NNCotizacionPolizaHogarSecuencia.OnLinePrintIndicator.Visible = false...")
                resultData.AddControlBehavior("OnLinePrintIndicator", "hide")
                currentAction = SessionTrace("13.3. NNCotizacionPolizaHogarSecuencia.button31.Visible = true...")
                resultData.AddControlBehavior("button31", "show")
                currentAction = SessionTrace("13.4. NNCotizacionPolizaHogarSecuencia.button32.Visible = true...")
                resultData.AddControlBehavior("button32", "show")
                currentAction = SessionTrace("13.5. NNCotizacionPolizaHogarSecuencia.button34.Visible = true...")
                resultData.AddControlBehavior("button34", "show")
                currentAction = SessionTrace("13.6. NNCotizacionPolizaHogarSecuencia.button36.Visible = true...")
                resultData.AddControlBehavior("button36", "show")
                currentAction = SessionTrace("13.7. NNCotizacionPolizaHogarSecuencia.button19.Visible = false...")
                resultData.AddControlBehavior("button19", "hide")
                currentAction = SessionTrace("13.8. NNCotizacionPolizaHogarSecuencia.EnviarCotizacionEmail.Visible = false...")
                resultData.AddControlBehavior("EnviarCotizacionEmail", "hide")
                currentAction = SessionTrace("13.9. NNCotizacionPolizaHogarSecuencia.eMail.Visible = false...")
                resultData.AddControlBehavior("eMail", "hide")
                currentAction = SessionTrace("13.10. label20.Visible = false...")
                resultData.AddControlBehavior("label20", "hide")
                currentAction = SessionTrace("13.11. button0.Visible = false...")
                resultData.AddControlBehavior("button0", "hide")
                currentAction = SessionTrace("13.12. zone0Gen.Enabled = false...")
                resultData.AddControlBehavior("zone0Gen", "disabled")
                currentAction = SessionTrace("13.13. zone9.Enabled = false...")
                resultData.AddControlBehavior("zone9", "disabled")
                currentAction = SessionTrace("13.14. zone10Modulos.Enabled = false...")
                resultData.AddControlBehavior("zone10Modulos", "disabled")
                currentAction = SessionTrace("13.15. TcoverCollection.Enabled = false...")
                resultData.AddControlBehavior("TcoverCollection", "disabled")

                End If

        End Sub
#End Region
#Region "Utilities"

        Private Shared Sub ParametersToDictionary(formData As HT5NNCotizacionPolizaHogar1BasicoParameters, ByRef target As Dictionary(Of String, Object))
            If IsNothing(target) Then
                target = New Dictionary(Of String, Object)

                target.Add("RiskInformation", formData.RiskInformation)
                target.Add("CantidadMascotas", formData.CantidadMascotas)
                target.Add("RamoPorDefecto", formData.RamoPorDefecto)
                target.Add("ProductoporDefecto", formData.ProductoporDefecto)
                target.Add("ProductMaster", formData.ProductMaster)
                target.Add("PrimaTotal", formData.PrimaTotal)
                target.Add("eMail", formData.eMail)
                target.Add("ProducerClientID", formData.ProducerClientID)
                target.Add("PlanType", formData.PlanType)
                target.Add("ClientExistInDB", formData.ClientExistInDB)
                target.Add("Age", formData.Age)
                target.Add("SendMailIndicator", formData.SendMailIndicator)
                target.Add("MailToProducerIndicator", formData.MailToProducerIndicator)
                target.Add("uwcaseid", formData.uwcaseid)
                target.Add("RecoveryCaseIndicator", formData.RecoveryCaseIndicator)
                target.Add("StatusRun", formData.StatusRun)
                target.Add("StatusCase", formData.StatusCase)
                target.Add("ClientName", formData.ClientName)
                target.Add("OnLinePrintIndicator", formData.OnLinePrintIndicator)
                target.Add("PolicyDocument", formData.PolicyDocument)
                target.Add("OnLinePrintResult", formData.OnLinePrintResult)
                target.Add("YearCollection", formData.YearCollection)
                target.Add("BasicInsuredAmountEstructura", formData.BasicInsuredAmountEstructura)
                target.Add("BasicInsuredAmountContenido", formData.BasicInsuredAmountContenido)
                target.Add("CapitalEstructura", formData.CapitalEstructura)
                target.Add("CapitalContenido", formData.CapitalContenido)
                target.Add("ProductMasterDescription", formData.ProductMasterDescription)
                target.Add("PreviousPayment", formData.PreviousPayment)
                target.Add("AddresseMailDLI", formData.AddresseMailDLI)
                target.Add("AddressPhysicalAddressDLI", formData.AddressPhysicalAddressDLI)
                target.Add("AddressDLICollection", formData.AddressDLICollection)
                target.Add("ConsumerInformation", formData.ConsumerInformation)
                target.Add("UsercodeBO", formData.UsercodeBO)
                target.Add("PlanillaModificacion", formData.PlanillaModificacion)
                target.Add("PlanillaVisualizacion", formData.PlanillaVisualizacion)
                target.Add("UsercodeFASI", formData.UsercodeFASI)
                target.Add("ErrorsFound", formData.ErrorsFound)
                target.Add("ClienteIndicado", formData.ClienteIndicado)
                target.Add("ModuleBasico", formData.ModuleBasico)
                target.Add("UnderwritingCase", formData.UnderwritingCase)
                target.Add("frompanel", formData.frompanel)
                target.Add("ShowGeneral", formData.ShowGeneral)
                target.Add("ShowBasicInformation", formData.ShowBasicInformation)
                target.Add("ShowAdditionalInformation", formData.ShowAdditionalInformation)
                target.Add("ShowPaymentInformation", formData.ShowPaymentInformation)
                target.Add("ShowAddressInformation", formData.ShowAddressInformation)
                target.Add("ShowMoreInformation", formData.ShowMoreInformation)
                target.Add("FinalMessage", formData.FinalMessage)
                target.Add("DireccionMostrar", formData.DireccionMostrar)
            Else
                target("RiskInformation") = formData.RiskInformation
                target("CantidadMascotas") = formData.CantidadMascotas
                target("RamoPorDefecto") = formData.RamoPorDefecto
                target("ProductoporDefecto") = formData.ProductoporDefecto
                target("ProductMaster") = formData.ProductMaster
                target("PrimaTotal") = formData.PrimaTotal
                target("eMail") = formData.eMail
                target("ProducerClientID") = formData.ProducerClientID
                target("PlanType") = formData.PlanType
                target("ClientExistInDB") = formData.ClientExistInDB
                target("Age") = formData.Age
                target("SendMailIndicator") = formData.SendMailIndicator
                target("MailToProducerIndicator") = formData.MailToProducerIndicator
                target("uwcaseid") = formData.uwcaseid
                target("RecoveryCaseIndicator") = formData.RecoveryCaseIndicator
                target("StatusRun") = formData.StatusRun
                target("StatusCase") = formData.StatusCase
                target("ClientName") = formData.ClientName
                target("OnLinePrintIndicator") = formData.OnLinePrintIndicator
                target("PolicyDocument") = formData.PolicyDocument
                target("OnLinePrintResult") = formData.OnLinePrintResult
                target("YearCollection") = formData.YearCollection
                target("BasicInsuredAmountEstructura") = formData.BasicInsuredAmountEstructura
                target("BasicInsuredAmountContenido") = formData.BasicInsuredAmountContenido
                target("CapitalEstructura") = formData.CapitalEstructura
                target("CapitalContenido") = formData.CapitalContenido
                target("ProductMasterDescription") = formData.ProductMasterDescription
                target("PreviousPayment") = formData.PreviousPayment
                target("AddresseMailDLI") = formData.AddresseMailDLI
                target("AddressPhysicalAddressDLI") = formData.AddressPhysicalAddressDLI
                target("AddressDLICollection") = formData.AddressDLICollection
                target("ConsumerInformation") = formData.ConsumerInformation
                target("UsercodeBO") = formData.UsercodeBO
                target("PlanillaModificacion") = formData.PlanillaModificacion
                target("PlanillaVisualizacion") = formData.PlanillaVisualizacion
                target("UsercodeFASI") = formData.UsercodeFASI
                target("ErrorsFound") = formData.ErrorsFound
                target("ClienteIndicado") = formData.ClienteIndicado
                target("ModuleBasico") = formData.ModuleBasico
                target("UnderwritingCase") = formData.UnderwritingCase
                target("frompanel") = formData.frompanel
                target("ShowGeneral") = formData.ShowGeneral
                target("ShowBasicInformation") = formData.ShowBasicInformation
                target("ShowAdditionalInformation") = formData.ShowAdditionalInformation
                target("ShowPaymentInformation") = formData.ShowPaymentInformation
                target("ShowAddressInformation") = formData.ShowAddressInformation
                target("ShowMoreInformation") = formData.ShowMoreInformation
                target("FinalMessage") = formData.FinalMessage
                target("DireccionMostrar") = formData.DireccionMostrar
            End If
        End Sub

        Private Shared Sub GetTransferParameters(parametersData As HT5NNCotizacionPolizaHogar1BasicoParameters, fromid As String)
            Dim fromDocumentCache As Object = Nothing

            If Not String.IsNullOrEmpty(fromid) Then
                fromDocumentCache = HttpContext.Current.Session(fromid)
                HttpContext.Current.Session.Remove(fromid)

            Else
                fromDocumentCache = HttpContext.Current.Session(HttpContext.Current.Session("fromid"))
                HttpContext.Current.Session.Remove(HttpContext.Current.Session("fromid"))
                HttpContext.Current.Session.Remove("fromid")
            End If

            If Not IsNothing(fromDocumentCache) Then
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("RiskInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CantidadMascotas", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("RamoPorDefecto", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProductoporDefecto", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProductMaster", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PrimaTotal", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("eMail", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProducerClientID", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PlanType", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClientExistInDB", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Age", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("SendMailIndicator", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("MailToProducerIndicator", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("uwcaseid", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("RecoveryCaseIndicator", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("StatusRun", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("StatusCase", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClientName", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OnLinePrintIndicator", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PolicyDocument", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OnLinePrintResult", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("YearCollection", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("BasicInsuredAmountEstructura", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("BasicInsuredAmountContenido", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CapitalEstructura", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CapitalContenido", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProductMasterDescription", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PreviousPayment", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AddresseMailDLI", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AddressPhysicalAddressDLI", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AddressDLICollection", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ConsumerInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UsercodeBO", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PlanillaModificacion", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PlanillaVisualizacion", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UsercodeFASI", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ErrorsFound", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClienteIndicado", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ModuleBasico", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UnderwritingCase", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("frompanel", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowGeneral", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowBasicInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowAdditionalInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowPaymentInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowAddressInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowMoreInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("FinalMessage", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("DireccionMostrar", fromDocumentCache, parametersData)
            End If
        End Sub

        Private Shared Function SessionTrace(message As String) As String

            If Not IsNothing(HttpContext.Current.Session("Form.Track")) AndAlso HttpContext.Current.Session("Form.Track").ToString.ToLower = "true" Then
                Dim tracelog As String = HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath")))

                tracelog += String.Format(CultureInfo.InvariantCulture, "{0} {1}<br>{2}", Now.ToString("hh:mm:ss.fff"), message, vbCrLf)
                HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath"))) = tracelog
            End If

            Return message
        End Function

#End Region


#Region "Storage Database Methods"

      Private Shared Sub StoreFormInformation(formData As HT5NNCotizacionPolizaHogar1BasicoParameters)
            If Not IsNothing(formData) Then
                Dim foundData As Boolean

                If formData.InternalId.IsEmpty Then
                    formData.InternalId = Guid.NewGuid.ToString
                Else
                    With New DataManagerFactory("SELECT COUNT(FormId) FROM FrontOffice.DocumentCache WHERE FormId = @:FormId",
                                 "FrontOffice.DocumentCache", "FrontOfficeConnectionString")
                        .AddParameter("FormId", DbType.AnsiStringFixedLength, 36, False, formData.InternalId)
                        foundData = .QueryExecuteScalarToInteger > 0
                    End With
                End If

                If foundData Then
                    UpdateStorageData(formData)
                Else
                    InsertStorageData(formData)
                End If

                If Not IsNothing(HttpContext.Current.Session("Form.Track")) AndAlso
                    HttpContext.Current.Session("Form.Track").ToString.ToLower = "true" Then
                    HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.HT5NNCotizacionPolizaHogar1Basico", formData.InternalId)) = formData
                End If

                If Not IsNothing(HttpContext.Current.Session("Form.Track.Parameters")) AndAlso
                    HttpContext.Current.Session("Form.Track.Parameters").ToString.ToLower = "true" Then

                    If Not IsNothing(HttpContext.Current.Session("Form.Track")) AndAlso HttpContext.Current.Session("Form.Track").ToString.ToLower = "true" Then
                        InMotionGIT.Common.Helpers.FileHandler.SaveContent(String.Format(CultureInfo.InvariantCulture, 
                                                                                         "{0}\{1}.HT5NNCotizacionPolizaHogar1Basico.txt", ConfigurationManager.AppSettings("Path.Logs"), formData.InternalId), 
                                                                                         HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", 
                                                                                                                                   IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath"))))
                    End If

                    InMotionGIT.Common.Helpers.Serialize.SerializeToFile(Of HT5NNCotizacionPolizaHogar1BasicoParameters)(formData, String.Format(CultureInfo.InvariantCulture, "{0}\{1}.HT5NNCotizacionPolizaHogar1Basico.xml", 
                                                                                                                        ConfigurationManager.AppSettings("Path.Logs"), formData.InternalId), True)
                End If
            End If
        End Sub

        Private Shared Function RetrieveFormInformationFromDatabase(instanceFormId As String) As HT5NNCotizacionPolizaHogar1BasicoParameters
            Dim result As HT5NNCotizacionPolizaHogar1BasicoParameters = Nothing
            Dim records As DataTable = Nothing

            With New DataManagerFactory("SELECT Content FROM FrontOffice.DocumentCache WHERE FormId = @:FormId",
                                        "FrontOffice.DocumentCache", "FrontOfficeConnectionString")

            .AddParameter("FormId", DbType.AnsiStringFixedLength, 36, False, instanceFormId)
                records = .QueryExecuteToTable(True)
            End With

            If records.Rows.Count > 0 Then
                result = Serialize.Deserialize(Of HT5NNCotizacionPolizaHogar1BasicoParameters)(records.FirstRow.Item("Content"))
            End If

            Return result
        End Function

        Private Shared Sub InsertStorageData(formData As HT5NNCotizacionPolizaHogar1BasicoParameters)
            Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
	    
            With New DataManagerFactory("INSERT INTO FrontOffice.DocumentCache (FormId, ModelId, UserId, Page, Content, CreationDate, UpdateDate) VALUES(@:FormId, @:ModelId, @:UserId, @:Page, @:Content, @:CreationDate, @:UpdateDate)",
                                        "FrontOffice.DocumentCache", "FrontOfficeConnectionString")

                .AddParameter("FormId", DbType.AnsiStringFixedLength, 36, False, formData.InternalId)
                .AddParameter("ModelId", DbType.AnsiStringFixedLength, 36, False, "42fa64ae-e8f9-4650-8840-f6eb1abff7d9")
                .AddParameter("UserId", DbType.AnsiString, 256, False, UserInfo.UserId)
            .AddParameter("Page", DbType.AnsiString, 255, False, "Me.AppRelativeVirtualPath")
            .AddParameter("Content", DbType.Xml, 1, False, Serialize.Serialize(Of HT5NNCotizacionPolizaHogar1BasicoParameters)(formData))
            .AddParameter("CreationDate", DbType.DateTime, 20, False, Now)
            .AddParameter("UpdateDate", DbType.DateTime, 20, False, Now)

                .CommandExecute()
            End With
        End Sub

        Private Shared Sub UpdateStorageData(formData As HT5NNCotizacionPolizaHogar1BasicoParameters)
            Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
	    
            With New DataManagerFactory("UPDATE FrontOffice.DocumentCache SET ModelId = @:ModelId, UserId = @:UserId, Page = @:Page, Content = @:Content, UpdateDate = @:UpdateDate WHERE FormId = @:FormId",
                                        "FrontOffice.DocumentCache", "FrontOfficeConnectionString")

                .AddParameter("ModelId", DbType.AnsiStringFixedLength, 36, False, "42fa64ae-e8f9-4650-8840-f6eb1abff7d9")
                .AddParameter("UserId", DbType.AnsiString, 256, False, UserInfo.UserId)
            .AddParameter("Page", DbType.AnsiString, 255, False, "Me.AppRelativeVirtualPath")
            .AddParameter("Content", DbType.Xml, 1, False, Serialize.Serialize(Of HT5NNCotizacionPolizaHogar1BasicoParameters)(formData))
            .AddParameter("UpdateDate", DbType.DateTime, 20, False, Now)
            .AddParameter("FormId", DbType.AnsiStringFixedLength, 36, False, formData.InternalId)

                .CommandExecute()
            End With
        End Sub

#End Region


#Region "Contracts Mappers"

        Private Shared Function EntryDataToClass(parametersData As HT5NNCotizacionPolizaHogar1BasicoParameters, formData As EntryData) As HT5NNCotizacionPolizaHogar1BasicoParameters
            If IsNothing(parametersData) Then
                parametersData = New HT5NNCotizacionPolizaHogar1BasicoParameters
            End If

            If IsNothing(parametersData.RiskInformation) Then
                parametersData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
            End If
            If IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                parametersData.RiskInformation.HomeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness
            End If
            If IsNothing(parametersData.BasicInsuredAmountEstructura) Then
                parametersData.BasicInsuredAmountEstructura = New InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount
            End If
            If IsNothing(parametersData.BasicInsuredAmountContenido) Then
                parametersData.BasicInsuredAmountContenido = New InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount
            End If
            If IsNothing(parametersData.RiskInformation.Modules) Then
                parametersData.RiskInformation.Modules = New InMotionGIT.Policy.Entity.Contracts.ModuleCollection
            End If
            If IsNothing(parametersData.RiskInformation.CoveragesWithCalculatedPremium) Then
                parametersData.RiskInformation.CoveragesWithCalculatedPremium = New InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremiumCollection
            End If

            With parametersData
                .InternalId = formData.InstanceFormId
                .RiskInformation.EffectiveDate = formData.RiskInformationEffectiveDate
                .RiskInformation.ProductCode = formData.RiskInformationProductCode
                .RiskInformation.LineOfBusiness = formData.RiskInformationLineOfBusiness
                .RiskInformation.HomeLineOfBusiness.YearBuilt = formData.RiskInformationHomeLineOfBusinessYearBuilt
                .RiskInformation.HomeLineOfBusiness.DwellingType = formData.RiskInformationHomeLineOfBusinessDwellingType
                .RiskInformation.HomeLineOfBusiness.ConstructionMaterial = formData.RiskInformationHomeLineOfBusinessConstructionMaterial
                .RiskInformation.HomeLineOfBusiness.Foundation = formData.RiskInformationHomeLineOfBusinessFoundation
                .RiskInformation.HomeLineOfBusiness.RoofType = formData.RiskInformationHomeLineOfBusinessRoofType
                .RiskInformation.HomeLineOfBusiness.Stories = formData.RiskInformationHomeLineOfBusinessStories
                .RiskInformation.HomeLineOfBusiness.Area = formData.RiskInformationHomeLineOfBusinessArea
                .RiskInformation.HomeLineOfBusiness.LandArea = formData.RiskInformationHomeLineOfBusinessLandArea
                .RiskInformation.Currency = formData.RiskInformationCurrency
                .BasicInsuredAmountEstructura.InsuredValue = formData.BasicInsuredAmountEstructuraInsuredValue
                .BasicInsuredAmountContenido.InsuredValue = formData.BasicInsuredAmountContenidoInsuredValue

                .FinalMessage = formData.FinalMessage
            End With

            Return parametersData
        End Function

        Private Shared Function ClassToEntryData(formData As EntryData, parametersData As HT5NNCotizacionPolizaHogar1BasicoParameters) As EntryData
            formData = New EntryData

            With formData
                .InstanceFormId = parametersData.InternalId
                If Not IsNothing(parametersData.RiskInformation) Then
                    .RiskInformationEffectiveDate = parametersData.RiskInformation.EffectiveDate
                End If
                If Not IsNothing(parametersData.RiskInformation) Then
                    .RiskInformationProductCode = parametersData.RiskInformation.ProductCode
                End If
                .uwcaseid = parametersData.uwcaseid
                If Not IsNothing(parametersData.RiskInformation) Then
                    .RiskInformationLineOfBusiness = parametersData.RiskInformation.LineOfBusiness
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessYearBuilt = parametersData.RiskInformation.HomeLineOfBusiness.YearBuilt
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessDwellingType = parametersData.RiskInformation.HomeLineOfBusiness.DwellingType
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessConstructionMaterial = parametersData.RiskInformation.HomeLineOfBusiness.ConstructionMaterial
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessFoundation = parametersData.RiskInformation.HomeLineOfBusiness.Foundation
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessRoofType = parametersData.RiskInformation.HomeLineOfBusiness.RoofType
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessStories = parametersData.RiskInformation.HomeLineOfBusiness.Stories
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessArea = parametersData.RiskInformation.HomeLineOfBusiness.Area
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessLandArea = parametersData.RiskInformation.HomeLineOfBusiness.LandArea
                End If
                If Not IsNothing(parametersData.RiskInformation) Then
                    .RiskInformationCurrency = parametersData.RiskInformation.Currency
                End If
                If Not IsNothing(parametersData.BasicInsuredAmountEstructura) Then
                    .BasicInsuredAmountEstructuraInsuredValue = parametersData.BasicInsuredAmountEstructura.InsuredValue
                End If
                If Not IsNothing(parametersData.BasicInsuredAmountContenido) Then
                    .BasicInsuredAmountContenidoInsuredValue = parametersData.BasicInsuredAmountContenido.InsuredValue
                End If
                .ModuleCollection = New List(Of ModuleCollectionItem)

                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.Modules) Then
                    Dim newItem as ModuleCollectionItem
                    
                    For Each itemData As InMotionGIT.Policy.Entity.Contracts.Module In parametersData.RiskInformation.Modules
                        newItem = New ModuleCollectionItem
                        
                        With newItem
.CoverageModule = itemData.CoverageModule                        
                        End With
                        
                        .ModuleCollection.Add(newItem)
                    Next
                End If


                .CoverageWithCalculatedPremium_CoverageWithCalculatedPremium = New List(Of CoverageWithCalculatedPremium_CoverageWithCalculatedPremiumItem)

                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.CoveragesWithCalculatedPremium) Then
                    Dim newItem as CoverageWithCalculatedPremium_CoverageWithCalculatedPremiumItem
                    
                    For Each itemData As InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium In parametersData.RiskInformation.CoveragesWithCalculatedPremium
                        newItem = New CoverageWithCalculatedPremium_CoverageWithCalculatedPremiumItem
                        
                        With newItem
                            .Description = itemData.Description
                            .InsuredAmount = itemData.InsuredAmount
                            .AnnualPremium = itemData.AnnualPremium
                            .SelectedByDefault = itemData.SelectedByDefault
                            .CoverageCode = itemData.CoverageCode                        
                        End With
                        
                        .CoverageWithCalculatedPremium_CoverageWithCalculatedPremium.Add(newItem)
                    Next
                End If


                If Not IsNothing(parametersData.RiskInformation) Then
                    .RiskInformationTotalOriginalAnnualPremium = parametersData.RiskInformation.TotalOriginalAnnualPremium
                End If
                .FinalMessage = parametersData.FinalMessage
            End With

            Return formData
        End Function

#End Region

#Region "Common Utilities"

        Private Shared Sub SetDefaultValuesFromQueryString(formData As HT5NNCotizacionPolizaHogar1BasicoParameters)
            If HttpContext.Current.Request.QueryString("CantidadMascotas").IsNotEmpty Then
                formData.CantidadMascotas = HttpContext.Current.Request.QueryString("CantidadMascotas")
            End If
            If HttpContext.Current.Request.QueryString("RamoPorDefecto").IsNotEmpty Then
                formData.RamoPorDefecto = HttpContext.Current.Request.QueryString("RamoPorDefecto")
            End If
            If HttpContext.Current.Request.QueryString("ProductoporDefecto").IsNotEmpty Then
                formData.ProductoporDefecto = HttpContext.Current.Request.QueryString("ProductoporDefecto")
            End If
            If HttpContext.Current.Request.QueryString("PrimaTotal").IsNotEmpty Then
                formData.PrimaTotal = HttpContext.Current.Request.QueryString("PrimaTotal")
            End If
            If HttpContext.Current.Request.QueryString("eMail").IsNotEmpty Then
                formData.eMail = HttpContext.Current.Request.QueryString("eMail")
            End If
            If HttpContext.Current.Request.QueryString("ProducerClientID").IsNotEmpty Then
                formData.ProducerClientID = HttpContext.Current.Request.QueryString("ProducerClientID")
            End If
            If HttpContext.Current.Request.QueryString("PlanType").IsNotEmpty Then
                formData.PlanType = HttpContext.Current.Request.QueryString("PlanType")
            End If
            If HttpContext.Current.Request.QueryString("ClientExistInDB").IsNotEmpty Then
                formData.ClientExistInDB = HttpContext.Current.Request.QueryString("ClientExistInDB")
            End If
            If HttpContext.Current.Request.QueryString("Age").IsNotEmpty Then
                formData.Age = HttpContext.Current.Request.QueryString("Age")
            End If
            If HttpContext.Current.Request.QueryString("SendMailIndicator").IsNotEmpty Then
                formData.SendMailIndicator = HttpContext.Current.Request.QueryString("SendMailIndicator")
            End If
            If HttpContext.Current.Request.QueryString("MailToProducerIndicator").IsNotEmpty Then
                formData.MailToProducerIndicator = HttpContext.Current.Request.QueryString("MailToProducerIndicator")
            End If
            If HttpContext.Current.Request.QueryString("uwcaseid").IsNotEmpty Then
                formData.uwcaseid = HttpContext.Current.Request.QueryString("uwcaseid")
            End If
            If HttpContext.Current.Request.QueryString("RecoveryCaseIndicator").IsNotEmpty Then
                formData.RecoveryCaseIndicator = HttpContext.Current.Request.QueryString("RecoveryCaseIndicator")
            End If
            If HttpContext.Current.Request.QueryString("StatusRun").IsNotEmpty Then
                formData.StatusRun = HttpContext.Current.Request.QueryString("StatusRun")
            End If
            If HttpContext.Current.Request.QueryString("StatusCase").IsNotEmpty Then
                formData.StatusCase = HttpContext.Current.Request.QueryString("StatusCase")
            End If
            If HttpContext.Current.Request.QueryString("ClientName").IsNotEmpty Then
                formData.ClientName = HttpContext.Current.Request.QueryString("ClientName")
            End If
            If HttpContext.Current.Request.QueryString("OnLinePrintIndicator").IsNotEmpty Then
                formData.OnLinePrintIndicator = HttpContext.Current.Request.QueryString("OnLinePrintIndicator")
            End If
            If HttpContext.Current.Request.QueryString("PolicyDocument").IsNotEmpty Then
                formData.PolicyDocument = HttpContext.Current.Request.QueryString("PolicyDocument")
            End If
            If HttpContext.Current.Request.QueryString("OnLinePrintResult").IsNotEmpty Then
                formData.OnLinePrintResult = HttpContext.Current.Request.QueryString("OnLinePrintResult")
            End If
            If HttpContext.Current.Request.QueryString("CapitalEstructura").IsNotEmpty Then
                formData.CapitalEstructura = HttpContext.Current.Request.QueryString("CapitalEstructura")
            End If
            If HttpContext.Current.Request.QueryString("CapitalContenido").IsNotEmpty Then
                formData.CapitalContenido = HttpContext.Current.Request.QueryString("CapitalContenido")
            End If
            If HttpContext.Current.Request.QueryString("ProductMasterDescription").IsNotEmpty Then
                formData.ProductMasterDescription = HttpContext.Current.Request.QueryString("ProductMasterDescription")
            End If
            If HttpContext.Current.Request.QueryString("PreviousPayment").IsNotEmpty Then
                formData.PreviousPayment = HttpContext.Current.Request.QueryString("PreviousPayment")
            End If
            If HttpContext.Current.Request.QueryString("UsercodeBO").IsNotEmpty Then
                formData.UsercodeBO = HttpContext.Current.Request.QueryString("UsercodeBO")
            End If
            If HttpContext.Current.Request.QueryString("PlanillaModificacion").IsNotEmpty Then
                formData.PlanillaModificacion = HttpContext.Current.Request.QueryString("PlanillaModificacion")
            End If
            If HttpContext.Current.Request.QueryString("PlanillaVisualizacion").IsNotEmpty Then
                formData.PlanillaVisualizacion = HttpContext.Current.Request.QueryString("PlanillaVisualizacion")
            End If
            If HttpContext.Current.Request.QueryString("UsercodeFASI").IsNotEmpty Then
                formData.UsercodeFASI = HttpContext.Current.Request.QueryString("UsercodeFASI")
            End If
            If HttpContext.Current.Request.QueryString("ErrorsFound").IsNotEmpty Then
                formData.ErrorsFound = HttpContext.Current.Request.QueryString("ErrorsFound")
            End If
            If HttpContext.Current.Request.QueryString("ClienteIndicado").IsNotEmpty Then
                formData.ClienteIndicado = HttpContext.Current.Request.QueryString("ClienteIndicado")
            End If
            If HttpContext.Current.Request.QueryString("frompanel").IsNotEmpty Then
                formData.frompanel = HttpContext.Current.Request.QueryString("frompanel")
            End If
            If HttpContext.Current.Request.QueryString("ShowGeneral").IsNotEmpty Then
                formData.ShowGeneral = HttpContext.Current.Request.QueryString("ShowGeneral")
            End If
            If HttpContext.Current.Request.QueryString("ShowBasicInformation").IsNotEmpty Then
                formData.ShowBasicInformation = HttpContext.Current.Request.QueryString("ShowBasicInformation")
            End If
            If HttpContext.Current.Request.QueryString("ShowAdditionalInformation").IsNotEmpty Then
                formData.ShowAdditionalInformation = HttpContext.Current.Request.QueryString("ShowAdditionalInformation")
            End If
            If HttpContext.Current.Request.QueryString("ShowPaymentInformation").IsNotEmpty Then
                formData.ShowPaymentInformation = HttpContext.Current.Request.QueryString("ShowPaymentInformation")
            End If
            If HttpContext.Current.Request.QueryString("ShowAddressInformation").IsNotEmpty Then
                formData.ShowAddressInformation = HttpContext.Current.Request.QueryString("ShowAddressInformation")
            End If
            If HttpContext.Current.Request.QueryString("ShowMoreInformation").IsNotEmpty Then
                formData.ShowMoreInformation = HttpContext.Current.Request.QueryString("ShowMoreInformation")
            End If
            If HttpContext.Current.Request.QueryString("FinalMessage").IsNotEmpty Then
                formData.FinalMessage = HttpContext.Current.Request.QueryString("FinalMessage")
            End If
            If HttpContext.Current.Request.QueryString("DireccionMostrar").IsNotEmpty Then
                formData.DireccionMostrar = HttpContext.Current.Request.QueryString("DireccionMostrar")
            End If
        End Sub	

        Private Sub ValidateParametersInstance(ByRef formData As HT5NNCotizacionPolizaHogar1BasicoParameters)
            If IsNothing(formData.RiskInformation) Then
                formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
            End If
            If IsNothing(formData.RiskInformation.HomeLineOfBusiness) Then
                formData.RiskInformation.HomeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness
            End If
            If IsNothing(formData.BasicInsuredAmountEstructura) Then
                formData.BasicInsuredAmountEstructura = New InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount
            End If
            If IsNothing(formData.BasicInsuredAmountContenido) Then
                formData.BasicInsuredAmountContenido = New InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount
            End If
            If IsNothing(formData.RiskInformation.Modules) Then
                formData.RiskInformation.Modules = New InMotionGIT.Policy.Entity.Contracts.ModuleCollection
            End If
            If IsNothing(formData.RiskInformation.CoveragesWithCalculatedPremium) Then
                formData.RiskInformation.CoveragesWithCalculatedPremium = New InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremiumCollection
            End If

        End Sub

#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property RiskInformationEffectiveDate As System.DateTime
            <DataMember()> Public Property RiskInformationProductCode As System.Int32
            <DataMember()> Public Property uwcaseid As Int64
            <DataMember()> Public Property RiskInformationLineOfBusiness As System.Int32
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessYearBuilt As System.Int32
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessDwellingType As System.Int32
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessConstructionMaterial As System.Int32
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessFoundation As System.Int32
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessRoofType As System.Int32
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessStories As System.Int32
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessArea As System.Decimal
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessLandArea As System.Decimal
            <DataMember()> Public Property RiskInformationCurrency As System.Int32
            <DataMember()> Public Property BasicInsuredAmountEstructuraInsuredValue As System.Decimal
            <DataMember()> Public Property BasicInsuredAmountContenidoInsuredValue As System.Decimal
            <DataMember()> Public Property ModuleCollection As List(Of ModuleCollectionItem)
            <DataMember()> Public Property RiskInformationCoveragesWithCalculatedPremiumDescription As System.String
            <DataMember()> Public Property RiskInformationCoveragesWithCalculatedPremiumInsuredAmount As System.Decimal
            <DataMember()> Public Property RiskInformationCoveragesWithCalculatedPremiumAnnualPremium As System.Decimal
            <DataMember()> Public Property CoverageWithCalculatedPremium_CoverageWithCalculatedPremium As List(Of CoverageWithCalculatedPremium_CoverageWithCalculatedPremiumItem)
            <DataMember()> Public Property RiskInformationTotalOriginalAnnualPremium As System.Decimal
            <DataMember()> Public Property FinalMessage As String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class ModuleCollectionItem

            <DataMember()> Public Property CoverageModule As System.Int32
            <DataMember()> Public Property SDESCRIPT As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class CoverageWithCalculatedPremium_CoverageWithCalculatedPremiumItem

            <DataMember()> Public Property Description As System.String
            <DataMember()> Public Property InsuredAmount As System.Decimal
            <DataMember()> Public Property AnnualPremium As System.Decimal
            <DataMember()> Public Property SelectedByDefault As System.Boolean
            <DataMember()> Public Property CoverageCode As System.Int32

        End Class

        <Serializable()>
        Public Class HT5NNCotizacionPolizaHogar1BasicoParameters
            Inherits InMotionGIT.FrontOffice.Support.DataType.FormBase(Of HT5NNCotizacionPolizaHogar1BasicoParameters)

            Public Property RiskInformation As InMotionGIT.Policy.Entity.Contracts.RiskInformation
            Public Property CantidadMascotas As Int32
            Public Property RamoPorDefecto As Int32
            Public Property ProductoporDefecto As Int32
            Public Property ProductMaster As InMotionGIT.Product.Entity.Contracts.ProductMaster
            Public Property PrimaTotal As Decimal
            Public Property eMail As String
            Public Property ProducerClientID As String
            Public Property PlanType As Int32
            Public Property ClientExistInDB As Boolean
            Public Property Age As Int32
            Public Property SendMailIndicator As Boolean
            Public Property MailToProducerIndicator As Boolean
            Public Property uwcaseid As Int64
            Public Property RecoveryCaseIndicator As Boolean
            Public Property StatusRun As Boolean
            Public Property StatusCase As Int32
            Public Property ClientName As String
            Public Property OnLinePrintIndicator As Boolean
            Public Property PolicyDocument As String
            Public Property OnLinePrintResult As Int32
            Public Property YearCollection As InMotionGIT.Common.Contracts.Errors.ErrorCollection
            Public Property BasicInsuredAmountEstructura As InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount
            Public Property BasicInsuredAmountContenido As InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount
            Public Property CapitalEstructura As Decimal
            Public Property CapitalContenido As Decimal
            Public Property ProductMasterDescription As String
            Public Property PreviousPayment As Boolean
            Public Property AddresseMailDLI As InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
            Public Property AddressPhysicalAddressDLI As InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
            Public Property AddressDLICollection As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
            Public Property ConsumerInformation As InMotionGIT.Common.Contracts.Process.ConsumerInformation
            Public Property UsercodeBO As Int32
            Public Property PlanillaModificacion As String
            Public Property PlanillaVisualizacion As String
            Public Property UsercodeFASI As Int32
            Public Property ErrorsFound As Boolean
            Public Property ClienteIndicado As String
            Public Property ModuleBasico As InMotionGIT.Policy.Entity.Contracts.Module
            Public Property UnderwritingCase As InMotionGIT.Underwriting.Contracts.UnderwritingCase
            Public Property frompanel As Boolean
            Public Property ShowGeneral As Boolean
            Public Property ShowBasicInformation As Boolean
            Public Property ShowAdditionalInformation As Boolean
            Public Property ShowPaymentInformation As Boolean
            Public Property ShowAddressInformation As Boolean
            Public Property ShowMoreInformation As Boolean
            Public Property FinalMessage As String
            Public Property DireccionMostrar As String

        End Class
#End Region

    End Class

End Namespace