'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Form Designer v7.1.221.1 at 2019/03/12 11:19:12 AM model release 2, Form Generator v1.0.34.24
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class NSF0312AActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"

       <WebMethod(EnableSession:=True)>
        Public Shared Function Initialization(id As String, urlid As String, fromid As String) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim instance As New EntryData With {.InstanceFormId = id}
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim currentAction As String = String.Empty
            Dim NSF0312AParametersInstance As NSF0312AParameters = Nothing

            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess()
                
                If id.IsEmpty AndAlso urlid.IsEmpty Then
                    instance.InstanceFormId = System.Guid.NewGuid().ToString
                    
                    With instance

                    End With                
                    
                    NSF0312AParametersInstance = EntryDataToClass(NSF0312AParametersInstance, instance)
                    SetDefaultValuesFromQueryString(NSF0312AParametersInstance)
                    
                    If fromid.IsNotEmpty Then
                        GetTransferParameters(NSF0312AParametersInstance, fromid)
                        ValidateParametersInstance(NSF0312AParametersInstance)
                    End If
                Else       
                    instance.InstanceFormId = id.IfEmpty(urlid)
                    NSF0312AParametersInstance = RetrieveFormInformationFromSession(instance.InstanceFormId)
         
                    If IsNothing(NSF0312AParametersInstance) then
                        NSF0312AParametersInstance = EntryDataToClass(NSF0312AParametersInstance, instance)
                        SetDefaultValuesFromQueryString(NSF0312AParametersInstance)
                    End If
                End If

                HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath"))) = String.Empty



                instance = ClassToEntryData(instance, NSF0312AParametersInstance) 
		        StoreFormInformationOnSession(NSF0312AParametersInstance)
                
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "NSF0312A", "Initialization", currentAction)
            End Try

            Return resultData
        End Function
   
        <WebMethod(EnableSession:=True)>
        Public Shared Function button1Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim NSF0312AParametersInstance As NSF0312AParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess()
                NSF0312AParametersInstance = RetrieveFormInformationFromSession(instance.InstanceFormId)
         
                    If IsNothing(NSF0312AParametersInstance) then
                        NSF0312AParametersInstance = EntryDataToClass(NSF0312AParametersInstance, instance)
                        SetDefaultValuesFromQueryString(NSF0312AParametersInstance)
                    End If
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button1Click")
                NSF0312AParametersInstance = EntryDataToClass(NSF0312AParametersInstance, instance)
                currentAction = SessionTrace("1. The message 'dsfasdf...' will displayed as 'Popup'")
                ParametersToDictionary(NSF0312AParametersInstance, parametersDictionary)
                messageAction = "dsfasdf"
                messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                resultData.AddNotifyPopup(messageAction)

                instance = ClassToEntryData(instance, NSF0312AParametersInstance)
                StoreFormInformationOnSession(NSF0312AParametersInstance)
                
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "NSF0312A", "button1Click", currentAction)
            End Try

            Return resultData
        End Function

#End Region

#Region "Lookups Web Methods"


#End Region

#Region "Form Actions"


#End Region
#Region "Utilities"

        Private Shared Sub ParametersToDictionary(formData As NSF0312AParameters, ByRef target As Dictionary(Of String, Object))
            If IsNothing(target) Then
                target = New Dictionary(Of String, Object)

                target.Add("Parameter1", formData.Parameter1)
                target.Add("Parameter3", formData.Parameter3)
            Else
                target("Parameter1") = formData.Parameter1
                target("Parameter3") = formData.Parameter3
            End If
        End Sub

        Private Shared Sub GetTransferParameters(parametersData As NSF0312AParameters, fromid As String)
            Dim fromDocumentCache As Object = Nothing

            If Not String.IsNullOrEmpty(fromid) Then
                fromDocumentCache = HttpContext.Current.Session(fromid)
                HttpContext.Current.Session.Remove(fromid)

            Else
                fromDocumentCache = HttpContext.Current.Session(HttpContext.Current.Session("fromid"))
                HttpContext.Current.Session.Remove(HttpContext.Current.Session("fromid"))
                HttpContext.Current.Session.Remove("fromid")
            End If

            If Not IsNothing(fromDocumentCache) Then
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Parameter1", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Parameter3", fromDocumentCache, parametersData)
            End If
        End Sub

        Private Shared Function SessionTrace(message As String) As String

            If Not IsNothing(HttpContext.Current.Session("Form.Track")) AndAlso HttpContext.Current.Session("Form.Track").ToString.ToLower = "true" Then
                Dim tracelog As String = HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath")))

                tracelog += String.Format(CultureInfo.InvariantCulture, "{0} {1}<br>{2}", Now.ToString("hh:mm:ss.fff"), message, vbCrLf)
                HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath"))) = tracelog
            End If

            Return message
        End Function

#End Region
#Region "Storage Session Methods"

        Private Shared Function RetrieveFormInformationFromSession(id As String) As NSF0312AParameters
            Dim source As String = HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.Storage.{0}", id))
            Dim instance As NSF0312AParameters = Nothing

            If Not String.IsNullOrEmpty(source) Then
                instance = Serialize.Deserialize(Of NSF0312AParameters)(source)
            End If

            Return instance
        End Function

        Private Shared Sub StoreFormInformationOnSession(instance As NSF0312AParameters)
            If Not IsNothing(instance) Then
                HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.Storage.{0}", instance.InternalId)) = Serialize.Serialize(Of NSF0312AParameters)(instance)
                HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.Title.{0}", instance.InternalId)) = "NSF0312A"
              
                If Not IsNothing(HttpContext.Current.Session("Form.Track")) AndAlso
                   HttpContext.Current.Session("Form.Track").ToString.ToLower = "true" Then

                    HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.NSF0312A", instance.InternalId)) = instance
                End If

                If Not IsNothing(HttpContext.Current.Session("Form.Track.Parameters")) AndAlso
                   HttpContext.Current.Session("Form.Track.Parameters").ToString.ToLower = "true" Then

                    If Not IsNothing(HttpContext.Current.Session("Form.Track")) AndAlso HttpContext.Current.Session("Form.Track").ToString.ToLower = "true" Then
                        InMotionGIT.Common.Helpers.FileHandler.SaveContent(String.Format(CultureInfo.InvariantCulture, "{0}\{1}.NSF0312A.txt",
                                                                                         ConfigurationManager.AppSettings("Path.Logs"), instance.InternalId),
                                                                                          HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture,
                                                                                                                     "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath"))))
                    End If

                    InMotionGIT.Common.Helpers.Serialize.SerializeToFile(Of NSF0312AParameters)(instance,
                                                                                                String.Format(CultureInfo.InvariantCulture,
                                                                                                              "{0}\{1}.NSF0312A.xml", ConfigurationManager.AppSettings("Path.Logs"), instance.InternalId), True)
                End If			
            End If
        End Sub

#End Region


#Region "Contracts Mappers"

        Private Shared Function EntryDataToClass(parametersData As NSF0312AParameters, formData As EntryData) As NSF0312AParameters
            If IsNothing(parametersData) Then
                parametersData = New NSF0312AParameters
            End If


            With parametersData
                .InternalId = formData.InstanceFormId
                .Parameter1 = formData.Parameter1
                .Parameter3 = formData.Parameter3
            End With

            Return parametersData
        End Function

        Private Shared Function ClassToEntryData(formData As EntryData, parametersData As NSF0312AParameters) As EntryData
            formData = New EntryData

            With formData
                .InstanceFormId = parametersData.InternalId
                .Parameter1 = parametersData.Parameter1
                .Parameter3 = parametersData.Parameter3
            End With

            Return formData
        End Function

#End Region

#Region "Common Utilities"

        Private Shared Sub SetDefaultValuesFromQueryString(formData As NSF0312AParameters)
            If HttpContext.Current.Request.QueryString("Parameter1").IsNotEmpty Then
                formData.Parameter1 = HttpContext.Current.Request.QueryString("Parameter1")
            End If
            If HttpContext.Current.Request.QueryString("Parameter3").IsNotEmpty Then
                formData.Parameter3 = HttpContext.Current.Request.QueryString("Parameter3")
            End If
        End Sub	

        Private Shared Sub ValidateParametersInstance(ByRef formData As NSF0312AParameters)

        End Sub

#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property Parameter1 As Int32
            <DataMember()> Public Property Parameter3 As String

        End Class

        <Serializable()>
        Public Class NSF0312AParameters
            Inherits InMotionGIT.FrontOffice.Support.DataType.FormBase(Of NSF0312AParameters)

            Public Property Parameter1 As Int32
            Public Property Parameter3 As String

        End Class
#End Region

    End Class

End Namespace