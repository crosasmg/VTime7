'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Form Designer v7.3.36.1 at 2020-03-18 08:56:48 AM model release 11, Form Generator v1.0.37.37
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Net
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class AccessTrackingActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"

       <WebMethod(EnableSession:=True)>
        Public Shared Function Initialization(id As String, urlid As String, fromid As String) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim instance As New EntryData With {.InstanceFormId = id}
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim currentAction As String = String.Empty
            
            
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                
                If id.IsEmpty AndAlso urlid.IsEmpty Then
                    instance.InstanceFormId = System.Guid.NewGuid().ToString
                  
                
                Else
                    instance.InstanceFormId = id.IfEmpty(urlid)
                End If             
             
                With resultData
                    .Success = True
                    .Data = New With {.Instance = instance, .LookUps = Nothing}
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "AccessTracking", "Initialization", currentAction)
            End Try
            
            Return resultData
        End Function
  

        <WebMethod()>
        Public Shared Function OkButton1SelectCommandActionUSERSSECURITYTRACE(USERSSECURITYTRACEEFFECTDATE3 As DateTime, USERSSECURITYTRACEEFFECTDATE4 As DateTime) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.CustomString = String.Empty, .eMailAddressDefault = String.Empty, .CustomStringEx = String.Empty, .DateOfIngress = Date.MinValue, .LanguageDescription = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")

                With New DataManagerFactory("Select USERSSECURITYTRACE.ID, USERSSECURITYTRACE.IPADDRESS, USERSSECURITYTRACE.EMAIL, USERSSECURITYTRACE.STATE, USERSSECURITYTRACE.RESULT, USERSSECURITYTRACE.EFFECTDATE, LOOKUP.LOOKUPID, LOOKUP.LANGUAGEID, LOOKUP.DESCRIPTION FROM USERSSECURITYTRACE USERSSECURITYTRACE  JOIN LOOKUP LOOKUP ON LOOKUP.CODE = USERSSECURITYTRACE.STATE  WHERE LOOKUP.LOOKUPID = 8 AND LOOKUP.LANGUAGEID = 2 AND TRUNC(USERSSECURITYTRACE.EFFECTDATE) >= @:EFFECTDATE3 AND TRUNC(USERSSECURITYTRACE.EFFECTDATE) <= @:EFFECTDATE4 ORDER BY USERSSECURITYTRACE.EFFECTDATE DESC", "USERSSECURITYTRACE", "Linked.FrontOffice")
                    .AddParameter("EFFECTDATE3", DbType.DateTime, 7, (USERSSECURITYTRACEEFFECTDATE3 = Date.MinValue), USERSSECURITYTRACEEFFECTDATE3)
                    .AddParameter("EFFECTDATE4", DbType.DateTime, 7, (USERSSECURITYTRACEEFFECTDATE4 = Date.MinValue), USERSSECURITYTRACEEFFECTDATE4)

                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.CustomString = itemData.StringValue("IPADDRESS"), .eMailAddressDefault = itemData.StringValue("EMAIL"), .CustomStringEx = itemData.StringValue("RESULT"), .DateOfIngress = itemData.DateTimeValue("EFFECTDATE"), .LanguageDescription = itemData.StringValue("DESCRIPTION")}
                            
                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With
            
            If responseList.Count <> 0 Then          
		    
            End If
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "AccessTracking", "OkButton1SelectCommandActionUSERSSECURITYTRACE", String.Empty)
            End Try
            
            Return resultData
        End Function


#End Region

#Region "Lookups Web Methods"


#End Region

#Region "Form Actions"


#End Region





#Region "Common Utilities"

        Private Shared Sub SetDefaultValuesFromQueryString(formData As EntryData)
            If HttpContext.Current.Request.QueryString("Start").IsNotEmpty Then
                formData.Start = HttpContext.Current.Request.QueryString("Start")
            End If
            If HttpContext.Current.Request.QueryString("Finish").IsNotEmpty Then
                formData.Finish = HttpContext.Current.Request.QueryString("Finish")
            End If
        End Sub	


#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property Start As DateTime
            <DataMember()> Public Property Finish As DateTime
            <DataMember()> Public Property ClientListDateOfIngress As System.DateTime
            <DataMember()> Public Property ClientListCustomString As System.String
            <DataMember()> Public Property ClientListeMailAddressDefault As System.String
            <DataMember()> Public Property ClientListLanguageDescription As System.String
            <DataMember()> Public Property ClientListCustomStringEx As System.String
            <DataMember()> Public Property Client_Client As List(Of Client_ClientItem)

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Client_ClientItem

            <DataMember()> Public Property DateOfIngress As System.DateTime
            <DataMember()> Public Property CustomString As System.String
            <DataMember()> Public Property eMailAddressDefault As System.String
            <DataMember()> Public Property LanguageDescription As System.String
            <DataMember()> Public Property CustomStringEx As System.String

        End Class


#End Region

    End Class

End Namespace

