'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Form Designer v7.3.24.1 at 2019-11-08 01:30:53 p. m. model release 5, Form Generator v1.0.37.9
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class H5MantEtapasActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"
  

        <WebMethod()>
        Public Shared Function TabStageCase_GridTblDataLoad(filter As String, TransStageCaseLanguageId1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Stage = 0, .LineOfBusiness = 0, .Product = 0, .UnderwritingCaseType = 0, .RecordStatus = 0, .CreatorUserCode = 0, .CreationDate = Date.MinValue, .UpdateUserCode = 0, .UpdateDate = Date.MinValue, .Description = String.Empty, .ShortDescription = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)
            
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")

                With New DataManagerFactory("SELECT TABSTAGECASE.STAGE, TABSTAGECASE.LINEOFBUSINESS, TABSTAGECASE.PRODUCT, TABSTAGECASE.UNDERWRITINGCASETYPE, TABSTAGECASE.RECORDSTATUS, TABSTAGECASE.CREATORUSERCODE, TABSTAGECASE.CREATIONDATE, TABSTAGECASE.UPDATEUSERCODE, TABSTAGECASE.UPDATEDATE, TRANSSTAGECASE.DESCRIPTION, TRANSSTAGECASE.SHORTDESCRIPTION FROM TABSTAGECASE TABSTAGECASE  LEFT JOIN TRANSSTAGECASE TRANSSTAGECASE ON TRANSSTAGECASE.STAGE = TABSTAGECASE.STAGE  AND TRANSSTAGECASE.LANGUAGEID = @:LANGUAGEID1", "TabStageCase", "Linked.Underwriting")
                    .AddParameter("LANGUAGEID1", DbType.AnsiString, 5, (TransStageCaseLanguageId1 = String.Empty), TransStageCaseLanguageId1)

                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.Stage = itemData.NumericValue("STAGE"), .LineOfBusiness = itemData.NumericValue("LINEOFBUSINESS"), .Product = itemData.NumericValue("PRODUCT"), .UnderwritingCaseType = itemData.NumericValue("UNDERWRITINGCASETYPE"), .RecordStatus = itemData.NumericValue("RECORDSTATUS"), .CreatorUserCode = itemData.NumericValue("CREATORUSERCODE"), .CreationDate = itemData.DateTimeValue("CREATIONDATE"), .UpdateUserCode = itemData.NumericValue("UPDATEUSERCODE"), .UpdateDate = itemData.DateTimeValue("UPDATEDATE"), .Description = itemData.StringValue("DESCRIPTION"), .ShortDescription = itemData.StringValue("SHORTDESCRIPTION")}
                            
                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With
            
            If responseList.Count <> 0 Then          
		    
            End If
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MantEtapas", "TabStageCase_GridTblDataLoad", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function TabStageCase_Grid1InsertCommandActionTabStageCase(STAGE1 As Decimal, LINEOFBUSINESS2 As Decimal, PRODUCT3 As Decimal, UNDERWRITINGCASETYPE4 As Decimal, RECORDSTATUS5 As Decimal, CREATORUSERCODE5 As Decimal, UPDATEUSERCODE7 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                With New DataManagerFactory("INSERT INTO TabStageCase (STAGE, LINEOFBUSINESS, PRODUCT, UNDERWRITINGCASETYPE, RECORDSTATUS, CREATORUSERCODE, CREATIONDATE, UPDATEUSERCODE, UPDATEDATE) VALUES (@:STAGE1, @:LINEOFBUSINESS2, @:PRODUCT3, @:UNDERWRITINGCASETYPE4, @:RECORDSTATUS5, @:CREATORUSERCODE5, @:CREATIONDATE6, @:UPDATEUSERCODE7, @:UPDATEDATE8)", "TabStageCase", "Linked.Underwriting")
                    .AddParameter("STAGE1", DbType.Decimal, 0, False, STAGE1)
                    .AddParameter("LINEOFBUSINESS2", DbType.Decimal, 0, False, LINEOFBUSINESS2)
                    .AddParameter("PRODUCT3", DbType.Decimal, 0, False, PRODUCT3)
                    .AddParameter("UNDERWRITINGCASETYPE4", DbType.Decimal, 0, False, UNDERWRITINGCASETYPE4)
                    .AddParameter("RECORDSTATUS5", DbType.Decimal, 0, False, RECORDSTATUS5)
                    .AddParameter("CREATORUSERCODE5", DbType.Decimal, 0, False, CREATORUSERCODE5)
                    .AddParameter("CREATIONDATE6", DbType.DateTime, 0, False, Date.Now)
                    .AddParameter("UPDATEUSERCODE7", DbType.Decimal, 0, False, UPDATEUSERCODE7)
                    .AddParameter("UPDATEDATE8", DbType.DateTime, 0, False, Date.Now)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MantEtapas", "TabStageCase_Grid1InsertCommandActionTabStageCase", String.Empty)
            End Try
            
            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function TabStageCase_Grid3InsertCommandActionTransStageCase(STAGE1 As Decimal, LANGUAGEID1 As Decimal, DESCRIPTION3 As String, SHORTDESCRIPTION4 As String, CREATORUSERCODE4 As Decimal, UPDATEUSERCODE6 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                    With New DataManagerFactory("INSERT INTO TransStageCase (STAGE, LANGUAGEID, DESCRIPTION, SHORTDESCRIPTION, CREATORUSERCODE, CREATIONDATE, UPDATEUSERCODE, UPDATEDATE) VALUES (@:STAGE1, @:LANGUAGEID1, @:DESCRIPTION3, @:SHORTDESCRIPTION4, @:CREATORUSERCODE4, @:CREATIONDATE5, @:UPDATEUSERCODE6, @:UPDATEDATE7)", "TransStageCase", "Linked.Underwriting")
                    .AddParameter("STAGE1", DbType.Decimal, 0, False, STAGE1)
                    .AddParameter("LANGUAGEID1", DbType.Decimal, 0, False, LANGUAGEID1)
                    .AddParameter("DESCRIPTION3", DbType.AnsiString, 0, (DESCRIPTION3 = String.Empty), DESCRIPTION3)
                    .AddParameter("SHORTDESCRIPTION4", DbType.AnsiString, 0, (SHORTDESCRIPTION4 = String.Empty), SHORTDESCRIPTION4)
                    .AddParameter("CREATORUSERCODE4", DbType.Decimal, 0, False, CREATORUSERCODE4)
                    .AddParameter("CREATIONDATE5", DbType.DateTime, 0, False, Date.Now)
                    .AddParameter("UPDATEUSERCODE6", DbType.Decimal, 0, False, UPDATEUSERCODE6)
                    .AddParameter("UPDATEDATE7", DbType.DateTime, 0, False, Date.Now)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MantEtapas", "TabStageCase_Grid3InsertCommandActionTransStageCase", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function TabStageCase_Grid1UpdateCommandActionTabStageCase(LINEOFBUSINESS1 As Decimal, PRODUCT2 As Decimal, UNDERWRITINGCASETYPE3 As Decimal, RECORDSTATUS4 As Decimal, UPDATEUSERCODE4 As Decimal, TabStageCaseStage6 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                With New DataManagerFactory("UPDATE TabStageCase SET LINEOFBUSINESS = @:LINEOFBUSINESS1, PRODUCT = @:PRODUCT2, UNDERWRITINGCASETYPE = @:UNDERWRITINGCASETYPE3, RECORDSTATUS = @:RECORDSTATUS4, UPDATEUSERCODE = @:UPDATEUSERCODE4 WHERE TABSTAGECASE.STAGE = @:STAGE6", "TabStageCase", "Linked.Underwriting")
                    .AddParameter("LINEOFBUSINESS1", DbType.Decimal, 0, False, LINEOFBUSINESS1)
                    .AddParameter("PRODUCT2", DbType.Decimal, 0, False, PRODUCT2)
                    .AddParameter("UNDERWRITINGCASETYPE3", DbType.Decimal, 0, False, UNDERWRITINGCASETYPE3)
                    .AddParameter("RECORDSTATUS4", DbType.Decimal, 0, False, RECORDSTATUS4)
                    .AddParameter("UPDATEUSERCODE4", DbType.Decimal, 0, False, UPDATEUSERCODE4)
                    .AddParameter("STAGE6", DbType.Decimal, 0, False, TabStageCaseStage6)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MantEtapas", "TabStageCase_Grid1UpdateCommandActionTabStageCase", String.Empty)
            End Try
            
            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function TabStageCase_Grid3SelectCommandActionTransStageCase(TransStageCaseStage1 As Decimal, TransStageCaseLanguageId2 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}
            Dim responseList As New List(Of Object)
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")

                With New DataManagerFactory("Select COUNT(TRANSSTAGECASE.STAGE) STAGE FROM TRANSSTAGECASE TRANSSTAGECASE  WHERE TRANSSTAGECASE.STAGE = @:STAGE1 AND TRANSSTAGECASE.LANGUAGEID = @:LANGUAGEID2", "TransStageCase", "Linked.Underwriting")
                    .AddParameter("STAGE1", DbType.Decimal, 0, False, TransStageCaseStage1)
                    .AddParameter("LANGUAGEID2", DbType.Decimal, 0, False, TransStageCaseLanguageId2)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With
            
            If responseList.Count <> 0 Then          
		    
            End If
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MantEtapas", "TabStageCase_Grid3SelectCommandActionTransStageCase", String.Empty)
            End Try
            
            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function TabStageCase_Grid5InsertCommandActionTransStageCase(STAGE1 As Decimal, LANGUAGEID1 As Decimal, DESCRIPTION3 As String, SHORTDESCRIPTION4 As String, CREATORUSERCODE4 As Decimal, UPDATEUSERCODE6 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                        With New DataManagerFactory("INSERT INTO TransStageCase (STAGE, LANGUAGEID, DESCRIPTION, SHORTDESCRIPTION, CREATORUSERCODE, CREATIONDATE, UPDATEUSERCODE, UPDATEDATE) VALUES (@:STAGE1, @:LANGUAGEID1, @:DESCRIPTION3, @:SHORTDESCRIPTION4, @:CREATORUSERCODE4, @:CREATIONDATE5, @:UPDATEUSERCODE6, @:UPDATEDATE7)", "TransStageCase", "Linked.Underwriting")
                    .AddParameter("STAGE1", DbType.Decimal, 0, False, STAGE1)
                    .AddParameter("LANGUAGEID1", DbType.Decimal, 0, False, LANGUAGEID1)
                    .AddParameter("DESCRIPTION3", DbType.AnsiString, 0, (DESCRIPTION3 = String.Empty), DESCRIPTION3)
                    .AddParameter("SHORTDESCRIPTION4", DbType.AnsiString, 0, (SHORTDESCRIPTION4 = String.Empty), SHORTDESCRIPTION4)
                    .AddParameter("CREATORUSERCODE4", DbType.Decimal, 0, False, CREATORUSERCODE4)
                    .AddParameter("CREATIONDATE5", DbType.DateTime, 0, False, Date.Now)
                    .AddParameter("UPDATEUSERCODE6", DbType.Decimal, 0, False, UPDATEUSERCODE6)
                    .AddParameter("UPDATEDATE7", DbType.DateTime, 0, False, Date.Now)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MantEtapas", "TabStageCase_Grid5InsertCommandActionTransStageCase", String.Empty)
            End Try
            
            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function TabStageCase_Grid6UpdateCommandActionTransStageCase(DESCRIPTION1 As String, SHORTDESCRIPTION2 As String, UPDATEUSERCODE2 As Decimal, TransStageCaseStage4 As Decimal, TransStageCaseLanguageId5 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                        With New DataManagerFactory("UPDATE TransStageCase SET DESCRIPTION = @:DESCRIPTION1, SHORTDESCRIPTION = @:SHORTDESCRIPTION2, UPDATEUSERCODE = @:UPDATEUSERCODE2 WHERE TRANSSTAGECASE.STAGE = @:STAGE4 AND TRANSSTAGECASE.LANGUAGEID = @:LANGUAGEID5", "TransStageCase", "Linked.Underwriting")
                    .AddParameter("DESCRIPTION1", DbType.AnsiString, 0, (DESCRIPTION1 = String.Empty), DESCRIPTION1)
                    .AddParameter("SHORTDESCRIPTION2", DbType.AnsiString, 0, (SHORTDESCRIPTION2 = String.Empty), SHORTDESCRIPTION2)
                    .AddParameter("UPDATEUSERCODE2", DbType.Decimal, 0, False, UPDATEUSERCODE2)
                    .AddParameter("STAGE4", DbType.Decimal, 0, False, TransStageCaseStage4)
                    .AddParameter("LANGUAGEID5", DbType.Decimal, 0, False, TransStageCaseLanguageId5)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MantEtapas", "TabStageCase_Grid6UpdateCommandActionTransStageCase", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function TabStageCase_Grid1DeleteCommandActionTransStageCase(TransStageCaseStage1 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                With New DataManagerFactory("DELETE FROM TransStageCase WHERE TRANSSTAGECASE.STAGE = @:STAGE1", "TransStageCase", "Linked.Underwriting")
                    .AddParameter("STAGE1", DbType.Decimal, 0, False, TransStageCaseStage1)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MantEtapas", "TabStageCase_Grid1DeleteCommandActionTransStageCase", String.Empty)
            End Try
            
            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function TabStageCase_Grid3DeleteCommandActionTabStageCase(TabStageCaseStage1 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                    With New DataManagerFactory("DELETE FROM TabStageCase WHERE TABSTAGECASE.STAGE = @:STAGE1", "TabStageCase", "Linked.Underwriting")
                    .AddParameter("STAGE1", DbType.Decimal, 0, False, TabStageCaseStage1)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MantEtapas", "TabStageCase_Grid3DeleteCommandActionTabStageCase", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function TabStageCase_Grid2SelectCommandActionTabStageCase() As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}
            Dim responseList As New List(Of Object)
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")

                With New DataManagerFactory("Select MAX(TABSTAGECASE.STAGE) STAGE FROM TABSTAGECASE TABSTAGECASE ", "TabStageCase", "Linked.Underwriting")

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With
            
            If responseList.Count <> 0 Then          
		    
            End If
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MantEtapas", "TabStageCase_Grid2SelectCommandActionTabStageCase", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function TabStageCaseTranslator_GridTblDataLoad(filter As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Stage = 0, .LanguageId = 0, .Description = String.Empty, .ShortDescription = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)
            
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")

                With New DataManagerFactory("SELECT TABSTAGECASE.STAGE, TRANSSTAGECASE.LANGUAGEID, TRANSSTAGECASE.DESCRIPTION, TRANSSTAGECASE.SHORTDESCRIPTION FROM TABSTAGECASE TABSTAGECASE  LEFT JOIN TRANSSTAGECASE TRANSSTAGECASE ON TRANSSTAGECASE.STAGE = TABSTAGECASE.STAGE ", "TabStageCase", "Linked.Underwriting")

                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.Stage = itemData.NumericValue("STAGE"), .LanguageId = itemData.NumericValue("LANGUAGEID"), .Description = itemData.StringValue("DESCRIPTION"), .ShortDescription = itemData.StringValue("SHORTDESCRIPTION")}
                            
                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With
            
            If responseList.Count <> 0 Then          
		    
            End If
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MantEtapas", "TabStageCaseTranslator_GridTblDataLoad", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function TabStageCaseTranslator_Grid1UpdateCommandActionTransStageCase(DESCRIPTION1 As String, SHORTDESCRIPTION2 As String, UPDATEUSERCODE2 As Decimal, TransStageCaseStage4 As Decimal, TransStageCaseLanguageId5 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                With New DataManagerFactory("UPDATE UNDERWRITING.TransStageCase SET DESCRIPTION = @:DESCRIPTION1, SHORTDESCRIPTION = @:SHORTDESCRIPTION2, UPDATEUSERCODE = @:UPDATEUSERCODE2 WHERE TRANSSTAGECASE.STAGE = @:STAGE4 AND TRANSSTAGECASE.LANGUAGEID = @:LANGUAGEID5", "TransStageCase", "Linked.Underwriting")
                    .AddParameter("DESCRIPTION1", DbType.AnsiString, 0, (DESCRIPTION1 = String.Empty), DESCRIPTION1)
                    .AddParameter("SHORTDESCRIPTION2", DbType.AnsiString, 0, (SHORTDESCRIPTION2 = String.Empty), SHORTDESCRIPTION2)
                    .AddParameter("UPDATEUSERCODE2", DbType.Decimal, 0, False, UPDATEUSERCODE2)
                    .AddParameter("STAGE4", DbType.Decimal, 0, False, TransStageCaseStage4)
                    .AddParameter("LANGUAGEID5", DbType.Decimal, 0, False, TransStageCaseLanguageId5)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MantEtapas", "TabStageCaseTranslator_Grid1UpdateCommandActionTransStageCase", String.Empty)
            End Try
            
            Return resultData
        End Function


#End Region

#Region "Lookups Web Methods"


        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForLineOfBusiness(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                 
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE10.NBRANCH, TRIM(TABLE10.SDESCRIPT) SDESCRIPT, TRIM(TABLE10.SSTATREGT) SSTATREGT FROM TABLE10 TABLE10  WHERE TABLE10.SSTATREGT = '{0}'  AND NOT TABLE10.SDESCRIPT IS NULL ORDER BY SDESCRIPT", "1"), 
                                            "TABLE10", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NBRANCH"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MantEtapas", "LookUpForLineOfBusiness", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForProduct(id As String, TabStageCaseCollectionLineOfBusiness As System.Double) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                 
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  PRODMASTER.NBRANCH, PRODMASTER.NPRODUCT, TRIM(PRODMASTER.SDESCRIPT) SDESCRIPT, TRIM(PRODMASTER.SSTATREGT) SSTATREGT FROM PRODMASTER PRODMASTER  WHERE PRODMASTER.SSTATREGT = '{0}'  AND (PRODMASTER.NBRANCH = @:PRODMASTERNBRANCHDependen AND NOT PRODMASTER.SDESCRIPT IS NULL) ORDER BY SDESCRIPT ", "1"), 
                                            "PRODMASTER", "Linked.LatCombined")
                    .AddParameter("PRODMASTERNBRANCHDependen", DbType.Int32, 0, False, TabStageCaseCollectionLineOfBusiness)

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NPRODUCT"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MantEtapas", "LookUpForProduct", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForUnderwritingCaseType(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                 
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABUNDERWRITINGCASETYPE.UNDERWRITINGCASETYPE, TRANSUNDERWRITINGCASETYPE.SHORTDESCRIPTION, TRANSUNDERWRITINGCASETYPE.LANGUAGEID FROM TABUNDERWRITINGCASETYPE TABUNDERWRITINGCASETYPE JOIN TRANSUNDERWRITINGCASETYPE TRANSUNDERWRITINGCASETYPE ON TRANSUNDERWRITINGCASETYPE.UNDERWRITINGCASETYPE = TABUNDERWRITINGCASETYPE.UNDERWRITINGCASETYPE  WHERE TRANSUNDERWRITINGCASETYPE.LANGUAGEID = {0}  AND NOT TRANSUNDERWRITINGCASETYPE.SHORTDESCRIPTION IS NULL ORDER BY SHORTDESCRIPTION", InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId()), 
                                            "TabUnderwritingCaseType", "Linked.Underwriting")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("UnderwritingCaseType"),
                                                                                            .Description = item.StringValue("ShortDescription")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MantEtapas", "LookUpForUnderwritingCaseType", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForRecordStatus(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                 
                Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TRIM(ETRANRECORDSTATUS.RECORDSTATUS) RECORDSTATUS, ETRANRECORDSTATUS.DESCRIPTION FROM ETRANRECORDSTATUS ETRANRECORDSTATUS  WHERE ETRANRECORDSTATUS.LANGUAGEID = {0}  AND NOT ETRANRECORDSTATUS.DESCRIPTION IS NULL ORDER BY DESCRIPTION", InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId()), 
                                            "ETranRecordStatus", "Linked.Common")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.StringValue("RecordStatus"),
                                                                                            .Description = item.StringValue("Description")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MantEtapas", "LookUpForRecordStatus", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForLanguageIdTranslator(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                 
                Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT TRANSLANGUAGE.LANGUAGECODEID, TRANSLANGUAGE.DESCRIPTION FROM TRANSLANGUAGE TRANSLANGUAGE WHERE TRANSLANGUAGE.LANGUAGEID = {0} AND NOT TRANSLANGUAGE.DESCRIPTION IS NULL ORDER BY DESCRIPTION", InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId()), 
                                            "TransLanguage", "Linked.Common")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("LanguageCodeID"),
                                                                                            .Description = item.StringValue("Description")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MantEtapas", "LookUpForLanguageIdTranslator", String.Empty)
            End Try
                        
            Return result
        End Function

#End Region

#Region "Form Actions"


#End Region





#Region "Common Utilities"

        Private Shared Sub SetDefaultValuesFromQueryString(formData As EntryData)

        End Sub	


#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property TabStageCaseCollectionStage As System.Double
            <DataMember()> Public Property TabStageCaseCollectionLineOfBusiness As System.Double
            <DataMember()> Public Property TabStageCaseCollectionProduct As System.Double
            <DataMember()> Public Property TabStageCaseCollectionUnderwritingCaseType As System.Double
            <DataMember()> Public Property TabStageCaseCollectionCreatorUserCode As System.Double
            <DataMember()> Public Property TabStageCaseCollectionCreationDate As System.DateTime
            <DataMember()> Public Property TabStageCaseCollectionUpdateUserCode As System.Double
            <DataMember()> Public Property TabStageCaseCollectionUpdateDate As System.DateTime
            <DataMember()> Public Property TabStageCaseCollectionDescription As System.String
            <DataMember()> Public Property TabStageCaseCollectionShortDescription As System.String
            <DataMember()> Public Property TabStageCaseCollectionRecordStatus As System.Double
            <DataMember()> Public Property TabStageCase_Grid_TabStageCase_Item As List(Of TabStageCase_Grid_TabStageCase_ItemItem)
            <DataMember()> Public Property TabStageCaseCollectionLanguageId As System.Double
            <DataMember()> Public Property TabStageCaseTranslator_Grid_TabStageCase_Item As List(Of TabStageCaseTranslator_Grid_TabStageCase_ItemItem)

        End Class

        <Serializable()>
        <DataContract()>
        Public Class TabStageCase_Grid_TabStageCase_ItemItem

            <DataMember()> Public Property Stage As System.Double
            <DataMember()> Public Property LineOfBusiness As System.Double
            <DataMember()> Public Property Product As System.Double
            <DataMember()> Public Property UnderwritingCaseType As System.Double
            <DataMember()> Public Property CreatorUserCode As System.Double
            <DataMember()> Public Property CreationDate As System.DateTime
            <DataMember()> Public Property UpdateUserCode As System.Double
            <DataMember()> Public Property UpdateDate As System.DateTime
            <DataMember()> Public Property Description As System.String
            <DataMember()> Public Property ShortDescription As System.String
            <DataMember()> Public Property RecordStatus As System.Double

        End Class

        <Serializable()>
        <DataContract()>
        Public Class TabStageCaseTranslator_Grid_TabStageCase_ItemItem

            <DataMember()> Public Property Stage As System.Double
            <DataMember()> Public Property LanguageId As System.Double
            <DataMember()> Public Property Description As System.String
            <DataMember()> Public Property ShortDescription As System.String

        End Class


#End Region

    End Class

End Namespace

