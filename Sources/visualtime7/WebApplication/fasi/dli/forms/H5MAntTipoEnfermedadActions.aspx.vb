'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Form Designer v7.3.24.1 at 2019-11-08 04:16:10 p. m. model release 1, Form Generator v1.0.37.9
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class H5MAntTipoEnfermedadActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"
  

        <WebMethod()>
        Public Shared Function TabIllnessType_GridTblDataLoad(filter As String, TransIllnessTypeLanguageId1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.ImpairmentCode = String.Empty, .RecordStatus = 0, .CreatorUserCode = 0, .CreationDate = Date.MinValue, .UpdateUserCode = 0, .UpdateDate = Date.MinValue, .Description = String.Empty, .ShortDescription = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)
            
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")

                With New DataManagerFactory("SELECT TABILLNESSTYPE.IMPAIRMENTCODE, TABILLNESSTYPE.RECORDSTATUS, TABILLNESSTYPE.CREATORUSERCODE, TABILLNESSTYPE.CREATIONDATE, TABILLNESSTYPE.UPDATEUSERCODE, TABILLNESSTYPE.UPDATEDATE, TRANSILLNESSTYPE.DESCRIPTION, TRANSILLNESSTYPE.SHORTDESCRIPTION FROM TABILLNESSTYPE TABILLNESSTYPE  LEFT JOIN TRANSILLNESSTYPE TRANSILLNESSTYPE ON TRANSILLNESSTYPE.IMPAIRMENTCODE = TABILLNESSTYPE.IMPAIRMENTCODE  AND TRANSILLNESSTYPE.LANGUAGEID = @:LANGUAGEID1", "TabIllnessType", "Linked.Underwriting")
                    .AddParameter("LANGUAGEID1", DbType.AnsiString, 5, (TransIllnessTypeLanguageId1 = String.Empty), TransIllnessTypeLanguageId1)

                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.ImpairmentCode = itemData.StringValue("IMPAIRMENTCODE"), .RecordStatus = itemData.NumericValue("RECORDSTATUS"), .CreatorUserCode = itemData.NumericValue("CREATORUSERCODE"), .CreationDate = itemData.DateTimeValue("CREATIONDATE"), .UpdateUserCode = itemData.NumericValue("UPDATEUSERCODE"), .UpdateDate = itemData.DateTimeValue("UPDATEDATE"), .Description = itemData.StringValue("DESCRIPTION"), .ShortDescription = itemData.StringValue("SHORTDESCRIPTION")}
                            
                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With
            
            If responseList.Count <> 0 Then          
		    
            End If
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MAntTipoEnfermedad", "TabIllnessType_GridTblDataLoad", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function TabIllnessType_Grid1InsertCommandActionTabIllnessType(IMPAIRMENTCODE1 As String, RECORDSTATUS2 As Decimal, CREATORUSERCODE2 As Decimal, UPDATEUSERCODE4 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                With New DataManagerFactory("INSERT INTO TabIllnessType (IMPAIRMENTCODE, RECORDSTATUS, CREATORUSERCODE, CREATIONDATE, UPDATEUSERCODE, UPDATEDATE) VALUES (@:IMPAIRMENTCODE1, @:RECORDSTATUS2, @:CREATORUSERCODE2, @:CREATIONDATE3, @:UPDATEUSERCODE4, @:UPDATEDATE5)", "TabIllnessType", "Linked.Underwriting")
                    .AddParameter("IMPAIRMENTCODE1", DbType.AnsiStringFixedLength, 0, (IMPAIRMENTCODE1 = String.Empty), IMPAIRMENTCODE1)
                    .AddParameter("RECORDSTATUS2", DbType.Decimal, 0, False, RECORDSTATUS2)
                    .AddParameter("CREATORUSERCODE2", DbType.Decimal, 0, False, CREATORUSERCODE2)
                    .AddParameter("CREATIONDATE3", DbType.DateTime, 0, False, Date.Now)
                    .AddParameter("UPDATEUSERCODE4", DbType.Decimal, 0, False, UPDATEUSERCODE4)
                    .AddParameter("UPDATEDATE5", DbType.DateTime, 0, False, Date.Now)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MAntTipoEnfermedad", "TabIllnessType_Grid1InsertCommandActionTabIllnessType", String.Empty)
            End Try
            
            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function TabIllnessType_Grid3InsertCommandActionTransIllnessType(IMPAIRMENTCODE1 As String, LANGUAGEID1 As Decimal, DESCRIPTION3 As String, SHORTDESCRIPTION4 As String, CREATORUSERCODE4 As Decimal, UPDATEUSERCODE6 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                    With New DataManagerFactory("INSERT INTO TransIllnessType (IMPAIRMENTCODE, LANGUAGEID, DESCRIPTION, SHORTDESCRIPTION, CREATORUSERCODE, CREATIONDATE, UPDATEUSERCODE, UPDATEDATE) VALUES (@:IMPAIRMENTCODE1, @:LANGUAGEID1, @:DESCRIPTION3, @:SHORTDESCRIPTION4, @:CREATORUSERCODE4, @:CREATIONDATE5, @:UPDATEUSERCODE6, @:UPDATEDATE7)", "TransIllnessType", "Linked.Underwriting")
                    .AddParameter("IMPAIRMENTCODE1", DbType.AnsiStringFixedLength, 0, (IMPAIRMENTCODE1 = String.Empty), IMPAIRMENTCODE1)
                    .AddParameter("LANGUAGEID1", DbType.Decimal, 0, False, LANGUAGEID1)
                    .AddParameter("DESCRIPTION3", DbType.AnsiString, 0, (DESCRIPTION3 = String.Empty), DESCRIPTION3)
                    .AddParameter("SHORTDESCRIPTION4", DbType.AnsiString, 0, (SHORTDESCRIPTION4 = String.Empty), SHORTDESCRIPTION4)
                    .AddParameter("CREATORUSERCODE4", DbType.Decimal, 0, False, CREATORUSERCODE4)
                    .AddParameter("CREATIONDATE5", DbType.DateTime, 0, False, Date.Now)
                    .AddParameter("UPDATEUSERCODE6", DbType.Decimal, 0, False, UPDATEUSERCODE6)
                    .AddParameter("UPDATEDATE7", DbType.DateTime, 0, False, Date.Now)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MAntTipoEnfermedad", "TabIllnessType_Grid3InsertCommandActionTransIllnessType", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function TabIllnessType_Grid1UpdateCommandActionTabIllnessType(RECORDSTATUS1 As Decimal, UPDATEUSERCODE1 As Decimal, TabIllnessTypeImpairmentCode3 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                With New DataManagerFactory("UPDATE TabIllnessType SET RECORDSTATUS = @:RECORDSTATUS1, UPDATEUSERCODE = @:UPDATEUSERCODE1 WHERE TABILLNESSTYPE.IMPAIRMENTCODE = @:IMPAIRMENTCODE3", "TabIllnessType", "Linked.Underwriting")
                    .AddParameter("RECORDSTATUS1", DbType.Decimal, 0, False, RECORDSTATUS1)
                    .AddParameter("UPDATEUSERCODE1", DbType.Decimal, 0, False, UPDATEUSERCODE1)
                    .AddParameter("IMPAIRMENTCODE3", DbType.AnsiStringFixedLength, 0, (TabIllnessTypeImpairmentCode3 = String.Empty), TabIllnessTypeImpairmentCode3)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MAntTipoEnfermedad", "TabIllnessType_Grid1UpdateCommandActionTabIllnessType", String.Empty)
            End Try
            
            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function TabIllnessType_Grid3SelectCommandActionTransIllnessType(TransIllnessTypeImpairmentCode1 As String, TransIllnessTypeLanguageId2 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}
            Dim responseList As New List(Of Object)
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")

                With New DataManagerFactory("Select COUNT(TRANSILLNESSTYPE.IMPAIRMENTCODE) IMPAIRMENTCODE FROM TRANSILLNESSTYPE TRANSILLNESSTYPE  WHERE TRANSILLNESSTYPE.IMPAIRMENTCODE = @:IMPAIRMENTCODE1 AND TRANSILLNESSTYPE.LANGUAGEID = @:LANGUAGEID2", "TransIllnessType", "Linked.Underwriting")
                    .AddParameter("IMPAIRMENTCODE1", DbType.AnsiStringFixedLength, 0, (TransIllnessTypeImpairmentCode1 = String.Empty), TransIllnessTypeImpairmentCode1)
                    .AddParameter("LANGUAGEID2", DbType.Decimal, 0, False, TransIllnessTypeLanguageId2)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With
            
            If responseList.Count <> 0 Then          
		    
            End If
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MAntTipoEnfermedad", "TabIllnessType_Grid3SelectCommandActionTransIllnessType", String.Empty)
            End Try
            
            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function TabIllnessType_Grid5InsertCommandActionTransIllnessType(IMPAIRMENTCODE1 As String, LANGUAGEID1 As Decimal, DESCRIPTION3 As String, SHORTDESCRIPTION4 As String, CREATORUSERCODE4 As Decimal, UPDATEUSERCODE6 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                        With New DataManagerFactory("INSERT INTO TransIllnessType (IMPAIRMENTCODE, LANGUAGEID, DESCRIPTION, SHORTDESCRIPTION, CREATORUSERCODE, CREATIONDATE, UPDATEUSERCODE, UPDATEDATE) VALUES (@:IMPAIRMENTCODE1, @:LANGUAGEID1, @:DESCRIPTION3, @:SHORTDESCRIPTION4, @:CREATORUSERCODE4, @:CREATIONDATE5, @:UPDATEUSERCODE6, @:UPDATEDATE7)", "TransIllnessType", "Linked.Underwriting")
                    .AddParameter("IMPAIRMENTCODE1", DbType.AnsiStringFixedLength, 0, (IMPAIRMENTCODE1 = String.Empty), IMPAIRMENTCODE1)
                    .AddParameter("LANGUAGEID1", DbType.Decimal, 0, False, LANGUAGEID1)
                    .AddParameter("DESCRIPTION3", DbType.AnsiString, 0, (DESCRIPTION3 = String.Empty), DESCRIPTION3)
                    .AddParameter("SHORTDESCRIPTION4", DbType.AnsiString, 0, (SHORTDESCRIPTION4 = String.Empty), SHORTDESCRIPTION4)
                    .AddParameter("CREATORUSERCODE4", DbType.Decimal, 0, False, CREATORUSERCODE4)
                    .AddParameter("CREATIONDATE5", DbType.DateTime, 0, False, Date.Now)
                    .AddParameter("UPDATEUSERCODE6", DbType.Decimal, 0, False, UPDATEUSERCODE6)
                    .AddParameter("UPDATEDATE7", DbType.DateTime, 0, False, Date.Now)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MAntTipoEnfermedad", "TabIllnessType_Grid5InsertCommandActionTransIllnessType", String.Empty)
            End Try
            
            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function TabIllnessType_Grid6UpdateCommandActionTransIllnessType(DESCRIPTION1 As String, SHORTDESCRIPTION2 As String, UPDATEUSERCODE2 As Decimal, TransIllnessTypeImpairmentCode4 As String, TransIllnessTypeLanguageId5 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                        With New DataManagerFactory("UPDATE TransIllnessType SET DESCRIPTION = @:DESCRIPTION1, SHORTDESCRIPTION = @:SHORTDESCRIPTION2, UPDATEUSERCODE = @:UPDATEUSERCODE2 WHERE TRANSILLNESSTYPE.IMPAIRMENTCODE = @:IMPAIRMENTCODE4 AND TRANSILLNESSTYPE.LANGUAGEID = @:LANGUAGEID5", "TransIllnessType", "Linked.Underwriting")
                    .AddParameter("DESCRIPTION1", DbType.AnsiString, 0, (DESCRIPTION1 = String.Empty), DESCRIPTION1)
                    .AddParameter("SHORTDESCRIPTION2", DbType.AnsiString, 0, (SHORTDESCRIPTION2 = String.Empty), SHORTDESCRIPTION2)
                    .AddParameter("UPDATEUSERCODE2", DbType.Decimal, 0, False, UPDATEUSERCODE2)
                    .AddParameter("IMPAIRMENTCODE4", DbType.AnsiStringFixedLength, 0, (TransIllnessTypeImpairmentCode4 = String.Empty), TransIllnessTypeImpairmentCode4)
                    .AddParameter("LANGUAGEID5", DbType.Decimal, 0, False, TransIllnessTypeLanguageId5)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MAntTipoEnfermedad", "TabIllnessType_Grid6UpdateCommandActionTransIllnessType", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function TabIllnessType_Grid1DeleteCommandActionTransIllnessType(TransIllnessTypeImpairmentCode1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                With New DataManagerFactory("DELETE FROM TransIllnessType WHERE TRANSILLNESSTYPE.IMPAIRMENTCODE = @:IMPAIRMENTCODE1", "TransIllnessType", "Linked.Underwriting")
                    .AddParameter("IMPAIRMENTCODE1", DbType.AnsiStringFixedLength, 0, (TransIllnessTypeImpairmentCode1 = String.Empty), TransIllnessTypeImpairmentCode1)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MAntTipoEnfermedad", "TabIllnessType_Grid1DeleteCommandActionTransIllnessType", String.Empty)
            End Try
            
            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function TabIllnessType_Grid3DeleteCommandActionTabIllnessType(TabIllnessTypeImpairmentCode1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                    With New DataManagerFactory("DELETE FROM TabIllnessType WHERE TABILLNESSTYPE.IMPAIRMENTCODE = @:IMPAIRMENTCODE1", "TabIllnessType", "Linked.Underwriting")
                    .AddParameter("IMPAIRMENTCODE1", DbType.AnsiStringFixedLength, 0, (TabIllnessTypeImpairmentCode1 = String.Empty), TabIllnessTypeImpairmentCode1)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MAntTipoEnfermedad", "TabIllnessType_Grid3DeleteCommandActionTabIllnessType", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function TabIllnessTypeTranslator_GridTblDataLoad(filter As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.ImpairmentCode = String.Empty, .LanguageId = 0, .Description = String.Empty, .ShortDescription = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)
            
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")

                With New DataManagerFactory("SELECT TABILLNESSTYPE.IMPAIRMENTCODE, TRANSILLNESSTYPE.LANGUAGEID, TRANSILLNESSTYPE.DESCRIPTION, TRANSILLNESSTYPE.SHORTDESCRIPTION FROM TABILLNESSTYPE TABILLNESSTYPE  LEFT JOIN TRANSILLNESSTYPE TRANSILLNESSTYPE ON TRANSILLNESSTYPE.IMPAIRMENTCODE = TABILLNESSTYPE.IMPAIRMENTCODE ", "TabIllnessType", "Linked.Underwriting")

                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.ImpairmentCode = itemData.StringValue("IMPAIRMENTCODE"), .LanguageId = itemData.NumericValue("LANGUAGEID"), .Description = itemData.StringValue("DESCRIPTION"), .ShortDescription = itemData.StringValue("SHORTDESCRIPTION")}
                            
                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With
            
            If responseList.Count <> 0 Then          
		    
            End If
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MAntTipoEnfermedad", "TabIllnessTypeTranslator_GridTblDataLoad", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function TabIllnessTypeTranslator_Grid1UpdateCommandActionTransIllnessType(DESCRIPTION1 As String, SHORTDESCRIPTION2 As String, UPDATEUSERCODE2 As Decimal, TransIllnessTypeImpairmentCode4 As String, TransIllnessTypeLanguageId5 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                With New DataManagerFactory("UPDATE TransIllnessType SET DESCRIPTION = @:DESCRIPTION1, SHORTDESCRIPTION = @:SHORTDESCRIPTION2, UPDATEUSERCODE = @:UPDATEUSERCODE2 WHERE TRANSILLNESSTYPE.IMPAIRMENTCODE = @:IMPAIRMENTCODE4 AND TRANSILLNESSTYPE.LANGUAGEID = @:LANGUAGEID5", "TransIllnessType", "Linked.Underwriting")
                    .AddParameter("DESCRIPTION1", DbType.AnsiString, 0, (DESCRIPTION1 = String.Empty), DESCRIPTION1)
                    .AddParameter("SHORTDESCRIPTION2", DbType.AnsiString, 0, (SHORTDESCRIPTION2 = String.Empty), SHORTDESCRIPTION2)
                    .AddParameter("UPDATEUSERCODE2", DbType.Decimal, 0, False, UPDATEUSERCODE2)
                    .AddParameter("IMPAIRMENTCODE4", DbType.AnsiStringFixedLength, 0, (TransIllnessTypeImpairmentCode4 = String.Empty), TransIllnessTypeImpairmentCode4)
                    .AddParameter("LANGUAGEID5", DbType.Decimal, 0, False, TransIllnessTypeLanguageId5)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MAntTipoEnfermedad", "TabIllnessTypeTranslator_Grid1UpdateCommandActionTransIllnessType", String.Empty)
            End Try
            
            Return resultData
        End Function


#End Region

#Region "Lookups Web Methods"


        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForRecordStatus(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                 
                Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT TRIM(ETRANRECORDSTATUS.RECORDSTATUS) RECORDSTATUS, ETRANRECORDSTATUS.DESCRIPTION FROM ETRANRECORDSTATUS ETRANRECORDSTATUS WHERE ETRANRECORDSTATUS.LANGUAGEID = {0} AND NOT ETRANRECORDSTATUS.DESCRIPTION IS NULL ORDER BY DESCRIPTION", InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId()), 
                                            "ETranRecordStatus", "Linked.Common")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.StringValue("RecordStatus"),
                                                                                            .Description = item.StringValue("Description")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MAntTipoEnfermedad", "LookUpForRecordStatus", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForLanguageIdTranslator(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                 
                Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT TRANSLANGUAGE.LANGUAGECODEID, TRANSLANGUAGE.DESCRIPTION FROM TRANSLANGUAGE TRANSLANGUAGE WHERE TRANSLANGUAGE.LANGUAGEID = {0} AND NOT TRANSLANGUAGE.DESCRIPTION IS NULL ORDER BY DESCRIPTION", InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId()), 
                                            "TransLanguage", "Linked.Common")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("LanguageCodeID"),
                                                                                            .Description = item.StringValue("Description")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5MAntTipoEnfermedad", "LookUpForLanguageIdTranslator", String.Empty)
            End Try
                        
            Return result
        End Function

#End Region

#Region "Form Actions"


#End Region





#Region "Common Utilities"

        Private Shared Sub SetDefaultValuesFromQueryString(formData As EntryData)

        End Sub	


#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property TabIllnessTypeCollectionImpairmentCode As System.String
            <DataMember()> Public Property TabIllnessTypeCollectionRecordStatus As System.Double
            <DataMember()> Public Property TabIllnessTypeCollectionCreatorUserCode As System.Double
            <DataMember()> Public Property TabIllnessTypeCollectionCreationDate As System.DateTime
            <DataMember()> Public Property TabIllnessTypeCollectionUpdateUserCode As System.Double
            <DataMember()> Public Property TabIllnessTypeCollectionUpdateDate As System.DateTime
            <DataMember()> Public Property TabIllnessTypeCollectionDescription As System.String
            <DataMember()> Public Property TabIllnessTypeCollectionShortDescription As System.String
            <DataMember()> Public Property TabIllnessType_Grid_TabIllnessType_Item As List(Of TabIllnessType_Grid_TabIllnessType_ItemItem)
            <DataMember()> Public Property TabIllnessTypeCollectionLanguageId As System.Double
            <DataMember()> Public Property TabIllnessTypeTranslator_Grid_TabIllnessType_Item As List(Of TabIllnessTypeTranslator_Grid_TabIllnessType_ItemItem)

        End Class

        <Serializable()>
        <DataContract()>
        Public Class TabIllnessType_Grid_TabIllnessType_ItemItem

            <DataMember()> Public Property ImpairmentCode As System.String
            <DataMember()> Public Property RecordStatus As System.Double
            <DataMember()> Public Property CreatorUserCode As System.Double
            <DataMember()> Public Property CreationDate As System.DateTime
            <DataMember()> Public Property UpdateUserCode As System.Double
            <DataMember()> Public Property UpdateDate As System.DateTime
            <DataMember()> Public Property Description As System.String
            <DataMember()> Public Property ShortDescription As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class TabIllnessTypeTranslator_Grid_TabIllnessType_ItemItem

            <DataMember()> Public Property ImpairmentCode As System.String
            <DataMember()> Public Property LanguageId As System.Double
            <DataMember()> Public Property Description As System.String
            <DataMember()> Public Property ShortDescription As System.String

        End Class


#End Region

    End Class

End Namespace

