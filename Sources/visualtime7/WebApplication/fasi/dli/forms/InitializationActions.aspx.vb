'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Form Designer v7.3.25.1 at 2019-11-15 01:30:12 p. m. model release 13, Form Generator v1.0.37.13
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
'     
'     *** NOTA: CODIGO ADAPTADO DE FORMA MANUAL, QUEDA PEDIENTE DE VERIFICAR VERSION GENERADA. ***
' </generated>
'---------------------------------------------------------------------------------------------------

#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class InitializationActions
        Inherits System.Web.UI.Page

#Region "Persoanlización"

        <WebMethod()>
        Public Shared Function CleanAppCaching() As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult

            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = Nothing

            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")

                InMotionGIT.Common.Helpers.Caching.Clean()

                With resultData
                    .Success = True
                    .Data = response
                End With
            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "Initialization", "CleanAppCaching", String.Empty)
            End Try

            Return resultData
        End Function

#End Region

#Region "Lookups Web Methods"

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForRolesCheckcombobox() As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult

            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of Object)

            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")

                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TRIM(SECUR_SCHE.SSCHE_CODE) SSCHE_CODE FROM SECUR_SCHE SECUR_SCHE  WHERE SECUR_SCHE.SSTATREGT = '{0}'  AND NOT SECUR_SCHE.SSCHE_CODE IS NULL ORDER BY SSCHE_CODE", "1"),
                                            "SECUR_SCHE", "Linked.LatCombined")


                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New With {.Code = item.StringValue("SSCHE_CODE"),
                                                    .SSCHE_CODE = item.StringValue("SSCHE_CODE")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "Initialization", "LookUpForRolesCheckcombobox", String.Empty)
            End Try

            Return result
        End Function

#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property CleanWorkflows As Boolean
            <DataMember()> Public Property CleanTasks As Boolean
            <DataMember()> Public Property CleanRoleAndUsers As Boolean
            <DataMember()> Public Property AdminPassword As String
            <DataMember()> Public Property CleanPendingDoc As Boolean
            <DataMember()> Public Property CleanNavegation As Boolean
            <DataMember()> Public Property CleanAnonimoUsers As Boolean
            <DataMember()> Public Property RolesConfiguration As Boolean
            <DataMember()> Public Property RoleInit As Boolean
            <DataMember()> Public Property RoleMode As Int32
            <DataMember()> Public Property RolesListList As List(Of RolesListListItem)
            <DataMember()> Public Property InitConfigWidgetByRol As Boolean
            <DataMember()> Public Property VTUsers As Boolean
            <DataMember()> Public Property UserMode As Int32
            <DataMember()> Public Property UsersBackOfficeList As List(Of UsersBackOfficeListItem)
            <DataMember()> Public Property SendCredetialsForEmail As Boolean
            <DataMember()> Public Property CopyConfig As Boolean
            <DataMember()> Public Property CopyConfigMode As Int32
            <DataMember()> Public Property UserToCopyConfig As Int64
            <DataMember()> Public Property UsuariosDestino As List(Of UsersBackFronoffice)

        End Class

        <Serializable()>
        <DataContract()>
        Public Class RolesListListItem

            <DataMember()> Public Property Code As System.String
            <DataMember()> Public Property SSCHE_CODE As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class UsersBackOfficeListItem

            <DataMember()> Public Property Code As System.Int32
            <DataMember()> Public Property SINITIALS As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class UsersBackFronoffice

            <DataMember()> Public Property Code As System.Int64
            <DataMember()> Public Property Description As System.String

        End Class


#End Region

    End Class

End Namespace

