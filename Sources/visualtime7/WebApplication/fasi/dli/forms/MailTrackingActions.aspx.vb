'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Form Designer v7.3.36.1 at 2020-03-18 09:50:15 AM model release 11, Form Generator v1.0.37.37
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Net
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class MailTrackingActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"

       <WebMethod(EnableSession:=True)>
        Public Shared Function Initialization(id As String, urlid As String, fromid As String) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim instance As New EntryData With {.InstanceFormId = id}
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim currentAction As String = String.Empty
            
            
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                
                If id.IsEmpty AndAlso urlid.IsEmpty Then
                    instance.InstanceFormId = System.Guid.NewGuid().ToString
                  
                
                Else
                    instance.InstanceFormId = id.IfEmpty(urlid)
                End If             
             
                With resultData
                    .Success = True
                    .Data = New With {.Instance = instance, .LookUps = Nothing}
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "MailTracking", "Initialization", currentAction)
            End Try
            
            Return resultData
        End Function
  

        <WebMethod()>
        Public Shared Function ClientTblDataLoad(beginIndex As Integer, endIndex As Integer, filter As String, JOBSLASTUPDATEDON3 As DateTime, JOBSLASTUPDATEDON4 As DateTime) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.ClientID = String.Empty, .eMailAddressDefault = String.Empty, .CustomString = String.Empty, .CustomStringEx = String.Empty, .DateOfIngress = Date.MinValue, .LanguageDescription = String.Empty}            
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)
            


            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                
                resultData.Count = ClientTblDataCount(filter, JOBSLASTUPDATEDON3, JOBSLASTUPDATEDON4).Count


                If resultData.Count > 0 Then
                    With New DataManagerFactory("SELECT JOBID, EMAIL, SUBJECT, FAIL, STATUS, LASTUPDATEDON, VIEWEDDATE, DESCRIPTION, LOOKUPID, LANGUAGEID FROM (SELECT TRIM(JOBS.JOBID) JOBID, JOBS.EMAIL, JOBS.SUBJECT, JOBS.FAIL, JOBS.STATUS, JOBS.LASTUPDATEDON, JOBS.VIEWEDDATE, LOOKUP.DESCRIPTION, LOOKUP.LOOKUPID, LOOKUP.LANGUAGEID, ROW_NUMBER() OVER ( ORDER BY JOBS.LASTUPDATEDON ASC) ROW_NUM FROM JOBS JOBS  JOIN LOOKUP LOOKUP ON LOOKUP.CODE = JOBS.STATUS  WHERE LOOKUP.LOOKUPID = 5 AND LOOKUP.LANGUAGEID = 2 AND (JOBS.LASTUPDATEDON >= @:LASTUPDATEDON3 AND JOBS.LASTUPDATEDON < @:LASTUPDATEDON4) AND (JOBS.SUBJECT LIKE '%' || @:FILTER_1 || '%')  ORDER BY JOBS.LASTUPDATEDON ASC) Result WHERE Row_Num BETWEEN @:Begin_Index AND @:End_Index", "JOBS", "Linked.FrontOffice")
                    .AddParameter("LASTUPDATEDON3", DbType.DateTime, 7, (JOBSLASTUPDATEDON3 = Date.MinValue), JOBSLASTUPDATEDON3)
                    .AddParameter("LASTUPDATEDON4", DbType.DateTime, 7, (JOBSLASTUPDATEDON4 = Date.MinValue), JOBSLASTUPDATEDON4)
                    .AddParameter("FILTER_1", DbType.String, 20, False, filter)
                        .AddParameter("Begin_Index", DbType.Int32, 10, False, beginIndex)
                        .AddParameter("End_Index", DbType.Int32, 10, False, endIndex)

                        selectDataTableItem = .QueryExecuteToTable(True)
                    End With
                    With selectDataTableItem
                        If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                            For Each itemData As DataRow In .Rows
                                response = New With {.ClientID = itemData.StringValue("JOBID"), .eMailAddressDefault = itemData.StringValue("EMAIL"), .CustomString = itemData.StringValue("SUBJECT"), .CustomStringEx = itemData.StringValue("FAIL"), .DateOfIngress = itemData.DateTimeValue("LASTUPDATEDON"), .LanguageDescription = itemData.StringValue("DESCRIPTION")}

                                responseList.Add(response)
                            Next
                        End If

                    End With
                End If

                With resultData
                    .Count = resultData.Count
                    .Data = responseList
                End With
  
            If responseList.Count <> 0 Then          
		    
            End If
            
            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "MailTracking", "ClientTblDataLoad", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function ClientTblDataCount(filter As String, JOBSLASTUPDATEDON3 As DateTime, JOBSLASTUPDATEDON4 As DateTime) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT TRIM(JOBS.JOBID) JOBID, JOBS.EMAIL, JOBS.SUBJECT, JOBS.FAIL, JOBS.STATUS, JOBS.LASTUPDATEDON, JOBS.VIEWEDDATE, LOOKUP.DESCRIPTION, LOOKUP.LOOKUPID, LOOKUP.LANGUAGEID, ROW_NUMBER() OVER ( ORDER BY JOBS.LASTUPDATEDON ASC) ROW_NUM FROM JOBS JOBS  JOIN LOOKUP LOOKUP ON LOOKUP.CODE = JOBS.STATUS  WHERE LOOKUP.LOOKUPID = 5 AND LOOKUP.LANGUAGEID = 2 AND (JOBS.LASTUPDATEDON >= @:LASTUPDATEDON3 AND JOBS.LASTUPDATEDON < @:LASTUPDATEDON4) AND (JOBS.SUBJECT LIKE '%' || @:FILTER_1 || '%')  ORDER BY JOBS.LASTUPDATEDON ASC)", "JOBS", "Linked.FrontOffice")
                    .AddParameter("LASTUPDATEDON3", DbType.DateTime, 7, (JOBSLASTUPDATEDON3 = Date.MinValue), JOBSLASTUPDATEDON3)
                    .AddParameter("LASTUPDATEDON4", DbType.DateTime, 7, (JOBSLASTUPDATEDON4 = Date.MinValue), JOBSLASTUPDATEDON4)
                    .AddParameter("FILTER_1", DbType.String, 20, False, filter)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "MailTracking", "ClientTblDataCount", String.Empty)
            End Try
            
            Return resultData
        End Function

#End Region

#Region "Lookups Web Methods"


#End Region

#Region "Form Actions"


#End Region





#Region "Common Utilities"


#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property Start As DateTime
            <DataMember()> Public Property Finish As DateTime
            <DataMember()> Public Property ClientListClientID As System.String
            <DataMember()> Public Property ClientListDateOfIngress As System.DateTime
            <DataMember()> Public Property ClientListCustomDate As System.DateTime
            <DataMember()> Public Property ClientListeMailAddressDefault As System.String
            <DataMember()> Public Property ClientListCustomString As System.String
            <DataMember()> Public Property ClientListLanguageDescription As System.String
            <DataMember()> Public Property ClientListCustomStringEx As System.String
            <DataMember()> Public Property Client_Client As List(Of Client_ClientItem)

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Client_ClientItem

            <DataMember()> Public Property ClientID As System.String
            <DataMember()> Public Property DateOfIngress As System.DateTime
            <DataMember()> Public Property CustomDate As System.DateTime
            <DataMember()> Public Property eMailAddressDefault As System.String
            <DataMember()> Public Property CustomString As System.String
            <DataMember()> Public Property LanguageDescription As System.String
            <DataMember()> Public Property CustomStringEx As System.String

        End Class


#End Region

    End Class

End Namespace

