'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Form Designer v7.1.212.1 at 2018/11/07 11:53:31 a.m. model release 2, Form Generator v1.0.33.2
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class HT5NNCotizacionPolizaHogarSecuenciaActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"

       <WebMethod(EnableSession:=True)>
        Public Shared Function Initialization(id As String, urlid As String, fromid As String) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim instance As New EntryData With {.InstanceFormId = id}
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim currentAction As String = String.Empty
            Dim HT5NNCotizacionPolizaHogarSecuenciaParametersInstance As HT5NNCotizacionPolizaHogarSecuenciaParameters = Nothing

            Try
                If id.IsEmpty AndAlso urlid.IsEmpty Then
                    instance.InstanceFormId = System.Guid.NewGuid().ToString
                    
                    With instance

                    End With                
                    
                    HT5NNCotizacionPolizaHogarSecuenciaParametersInstance = EntryDataToClass(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance, instance)
                    SetDefaultValuesFromQueryString(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance)
                    
                    If fromid.IsNotEmpty Then
                        GetTransferParameters(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance, fromid)
                    End If
                Else          
                    instance.InstanceFormId = id.IfEmpty(urlid)
                    HT5NNCotizacionPolizaHogarSecuenciaParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                End If

                HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath"))) = String.Empty



                instance = ClassToEntryData(instance, HT5NNCotizacionPolizaHogarSecuenciaParametersInstance) 
		        
                StoreFormInformation(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogarSecuencia", "Initialization", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
   
        <WebMethod(EnableSession:=True)>
        Public Shared Function button31Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionPolizaHogarSecuenciaParametersInstance As HT5NNCotizacionPolizaHogarSecuenciaParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionPolizaHogarSecuenciaParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button31Click")
                HT5NNCotizacionPolizaHogarSecuenciaParametersInstance = EntryDataToClass(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance, instance)
                currentAction = SessionTrace("2. Call 'HT5Póliza Hogar Seguro' form with transferring parameters")
                                HttpContext.Current.Session(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.InternalId) = HT5NNCotizacionPolizaHogarSecuenciaParametersInstance
                HttpContext.Current.Session("fromid") = HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.InternalId
    
                With resultData
                    .AddRedirect(String.Format(CultureInfo.InvariantCulture, "{0}/HT5NNCotizacionPolizaHogar1Basico.aspx?fromid={1}", "/fasi/dli/forms", HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.InternalId, ""))
                End With

                instance = ClassToEntryData(instance, HT5NNCotizacionPolizaHogarSecuenciaParametersInstance)
                
                StoreFormInformation(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogarSecuencia", "button31Click", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function button34Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionPolizaHogarSecuenciaParametersInstance As HT5NNCotizacionPolizaHogarSecuenciaParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionPolizaHogarSecuenciaParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button34Click")
                HT5NNCotizacionPolizaHogarSecuenciaParametersInstance = EntryDataToClass(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance, instance)
                currentAction = SessionTrace("2. Call 'HT5Póliza Hogar Seguro' form with transferring parameters")
                                HttpContext.Current.Session(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.InternalId) = HT5NNCotizacionPolizaHogarSecuenciaParametersInstance
                HttpContext.Current.Session("fromid") = HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.InternalId
    
                With resultData
                    .AddRedirect(String.Format(CultureInfo.InvariantCulture, "{0}/HT5NNCotizacionPolizaHogar2Cliente.aspx?fromid={1}", "/fasi/dli/forms", HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.InternalId, ""))
                End With

                instance = ClassToEntryData(instance, HT5NNCotizacionPolizaHogarSecuenciaParametersInstance)
                
                StoreFormInformation(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogarSecuencia", "button34Click", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function button32Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionPolizaHogarSecuenciaParametersInstance As HT5NNCotizacionPolizaHogarSecuenciaParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionPolizaHogarSecuenciaParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button32Click")
                HT5NNCotizacionPolizaHogarSecuenciaParametersInstance = EntryDataToClass(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance, instance)
                currentAction = SessionTrace("2. Call 'HT5Póliza Hogar Seguro' form with transferring parameters")
                                HttpContext.Current.Session(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.InternalId) = HT5NNCotizacionPolizaHogarSecuenciaParametersInstance
                HttpContext.Current.Session("fromid") = HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.InternalId
    
                With resultData
                    .AddRedirect(String.Format(CultureInfo.InvariantCulture, "{0}/HT5NNCotizacionPolizaHogar3Adicional.aspx?fromid={1}", "/fasi/dli/forms", HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.InternalId, ""))
                End With

                instance = ClassToEntryData(instance, HT5NNCotizacionPolizaHogarSecuenciaParametersInstance)
                
                StoreFormInformation(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogarSecuencia", "button32Click", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function button36Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionPolizaHogarSecuenciaParametersInstance As HT5NNCotizacionPolizaHogarSecuenciaParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionPolizaHogarSecuenciaParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button36Click")
                HT5NNCotizacionPolizaHogarSecuenciaParametersInstance = EntryDataToClass(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance, instance)
                currentAction = SessionTrace("2. Call 'HT5Póliza Hogar Seguro' form with transferring parameters")
                                HttpContext.Current.Session(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.InternalId) = HT5NNCotizacionPolizaHogarSecuenciaParametersInstance
                HttpContext.Current.Session("fromid") = HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.InternalId
    
                With resultData
                    .AddRedirect(String.Format(CultureInfo.InvariantCulture, "{0}/HT5NNCotizacionPolizaHogar4Pago.aspx?fromid={1}", "/fasi/dli/forms", HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.InternalId, ""))
                End With

                instance = ClassToEntryData(instance, HT5NNCotizacionPolizaHogarSecuenciaParametersInstance)
                
                StoreFormInformation(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogarSecuencia", "button36Click", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function button19Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionPolizaHogarSecuenciaParametersInstance As HT5NNCotizacionPolizaHogarSecuenciaParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionPolizaHogarSecuenciaParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button19Click")
                HT5NNCotizacionPolizaHogarSecuenciaParametersInstance = EntryDataToClass(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance, instance)
                currentAction = SessionTrace("2. Call 'HT5Póliza Hogar Seguro - Resumen' form with transferring parameters")
                                HttpContext.Current.Session(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.InternalId) = HT5NNCotizacionPolizaHogarSecuenciaParametersInstance
                HttpContext.Current.Session("fromid") = HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.InternalId
    
                With resultData
                    .AddRedirect(String.Format(CultureInfo.InvariantCulture, "{0}/HT5NNCotizacionPolizaHogarResumen.aspx?fromid={1}", "/fasi/dli/forms", HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.InternalId, ""))
                End With

                instance = ClassToEntryData(instance, HT5NNCotizacionPolizaHogarSecuenciaParametersInstance)
                
                StoreFormInformation(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogarSecuencia", "button19Click", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function EnviarCotizacionEmailClick(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionPolizaHogarSecuenciaParametersInstance As HT5NNCotizacionPolizaHogarSecuenciaParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionPolizaHogarSecuenciaParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("EnviarCotizacionEmailClick")
                HT5NNCotizacionPolizaHogarSecuenciaParametersInstance = EntryDataToClass(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance, instance)
                currentAction = SessionTrace("1. HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.FinalMessage = 'El resumen de la cotización ha sid...")
                currentAction = SessionTrace("1.1. HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.FinalMessage = 'El resumen de la cotización ha sid...")

                HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.FinalMessage = "El resumen de la cotización ha sido enviado al correo indicado " & HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.eMail
                currentAction = SessionTrace("1.2. HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.ErrorsFound = true...")

                HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.ErrorsFound = true

                currentAction = SessionTrace("2. Email 'Resumen de cotización de Hogar' in mode 'Design' ")
                ParametersToDictionary(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance, parametersDictionary)
                InMotionGIT.FrontOffice.Proxy.Helpers.Email.SendEmailProcess("{ Value /eMail }", "", "", "", String.Format(CultureInfo.InvariantCulture, "{0}\templates\HT5NNCotizacionPolizaHogarSecuencia_05ee22b16d384962bcaba0ad10d39355_Subject_{1}.txt", ConfigurationManager.AppSettings("GeneratePath").Replace("generated", "fasi\dli"), Threading.Thread.CurrentThread.CurrentCulture.Name.Substring(0, 2).ToUpper), String.Format(CultureInfo.InvariantCulture, "{0}\templates\HT5NNCotizacionPolizaHogarSecuencia_05ee22b16d384962bcaba0ad10d39355_Body_{1}.html", ConfigurationManager.AppSettings("GeneratePath").Replace("generated", "fasi\dli"), Threading.Thread.CurrentThread.CurrentCulture.Name.Substring(0, 2).ToUpper), parametersDictionary)
                currentAction = SessionTrace("3. Call 'Póliza Hogar Seguro' form with transferring parameters")
                                HttpContext.Current.Session(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.InternalId) = HT5NNCotizacionPolizaHogarSecuenciaParametersInstance
                HttpContext.Current.Session("fromid") = HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.InternalId
    
                With resultData
                    .AddRedirect(String.Format(CultureInfo.InvariantCulture, "{0}/NNCotizacionPolizaHogarBasico.aspx?fromid={1}", "/fasi/dli/forms", HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.InternalId, ""))
                End With

                instance = ClassToEntryData(instance, HT5NNCotizacionPolizaHogarSecuenciaParametersInstance)
                
                StoreFormInformation(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogarSecuencia", "EnviarCotizacionEmailClick", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function eMailChange(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionPolizaHogarSecuenciaParametersInstance As HT5NNCotizacionPolizaHogarSecuenciaParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionPolizaHogarSecuenciaParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("eMailClick")
                HT5NNCotizacionPolizaHogarSecuenciaParametersInstance = EntryDataToClass(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance, instance)
                currentAction = SessionTrace("1. HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.RiskInformation.PrimaryInsured.Client.eMailAddressDefault = HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.eMail...")
                currentAction = SessionTrace("1.1. HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.RiskInformation.PrimaryInsured.Client.eMailAddressDefault = HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.eMail...")
                                If IsNothing(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.RiskInformation) Then
                    HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.RiskInformation.PrimaryInsured) Then
                    HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.RiskInformation.PrimaryInsured.Client.eMailAddressDefault = HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.eMail


                instance = ClassToEntryData(instance, HT5NNCotizacionPolizaHogarSecuenciaParametersInstance)
                
                StoreFormInformation(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogarSecuencia", "eMailClick", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function AcceptClick(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionPolizaHogarSecuenciaParametersInstance As HT5NNCotizacionPolizaHogarSecuenciaParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionPolizaHogarSecuenciaParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("AcceptClick")
                HT5NNCotizacionPolizaHogarSecuenciaParametersInstance = EntryDataToClass(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance, instance)
                currentAction = SessionTrace("2. Call 'HT5Póliza Hogar Seguro - Final' form with transferring parameters")
                                HttpContext.Current.Session(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.InternalId) = HT5NNCotizacionPolizaHogarSecuenciaParametersInstance
                HttpContext.Current.Session("fromid") = HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.InternalId
    
                With resultData
                    .AddRedirect(String.Format(CultureInfo.InvariantCulture, "{0}/HT5NNCotizacionPolizaHogarFinal.aspx?fromid={1}", "/fasi/dli/forms", HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.InternalId, ""))
                End With

                instance = ClassToEntryData(instance, HT5NNCotizacionPolizaHogarSecuenciaParametersInstance)
                
                StoreFormInformation(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogarSecuencia", "AcceptClick", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function btnSalirSinGuardarClick(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionPolizaHogarSecuenciaParametersInstance As HT5NNCotizacionPolizaHogarSecuenciaParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionPolizaHogarSecuenciaParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("btnSalirSinGuardarClick")
                HT5NNCotizacionPolizaHogarSecuenciaParametersInstance = EntryDataToClass(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance, instance)
                currentAction = SessionTrace("1. HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.OutWithoutSave = true...")
                currentAction = SessionTrace("1.1. HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.OutWithoutSave = true...")

                HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.OutWithoutSave = true

                currentAction = SessionTrace("3. Call 'HT5Salir sin guardar' form with transferring parameters")
                                HttpContext.Current.Session(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.InternalId) = HT5NNCotizacionPolizaHogarSecuenciaParametersInstance
                HttpContext.Current.Session("fromid") = HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.InternalId
    
                With resultData
                    .AddRedirect(String.Format(CultureInfo.InvariantCulture, "{0}/HT5NNCotizacionOutWithoutSave.aspx?fromid={1}", "/fasi/dli/forms", HT5NNCotizacionPolizaHogarSecuenciaParametersInstance.InternalId, ""))
                End With

                instance = ClassToEntryData(instance, HT5NNCotizacionPolizaHogarSecuenciaParametersInstance)
                
                StoreFormInformation(HT5NNCotizacionPolizaHogarSecuenciaParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogarSecuencia", "btnSalirSinGuardarClick", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function

#End Region

#Region "Lookups Web Methods"


#End Region

#Region "Form Actions"


#End Region
#Region "Utilities"

        Private Shared Sub ParametersToDictionary(formData As HT5NNCotizacionPolizaHogarSecuenciaParameters, ByRef target As Dictionary(Of String, Object))
            If IsNothing(target) Then
                target = New Dictionary(Of String, Object)

                target.Add("RiskInformation", formData.RiskInformation)
                target.Add("CantidadMascotas", formData.CantidadMascotas)
                target.Add("RamoPorDefecto", formData.RamoPorDefecto)
                target.Add("ProductoporDefecto", formData.ProductoporDefecto)
                target.Add("ProductMaster", formData.ProductMaster)
                target.Add("PrimaTotal", formData.PrimaTotal)
                target.Add("eMail", formData.eMail)
                target.Add("ProducerClientID", formData.ProducerClientID)
                target.Add("PlanType", formData.PlanType)
                target.Add("ClientExistInDB", formData.ClientExistInDB)
                target.Add("Age", formData.Age)
                target.Add("SendMailIndicator", formData.SendMailIndicator)
                target.Add("MailToProducerIndicator", formData.MailToProducerIndicator)
                target.Add("uwcaseid", formData.uwcaseid)
                target.Add("RecoveryCaseIndicator", formData.RecoveryCaseIndicator)
                target.Add("StatusRun", formData.StatusRun)
                target.Add("StatusCase", formData.StatusCase)
                target.Add("ClientName", formData.ClientName)
                target.Add("OnLinePrintIndicator", formData.OnLinePrintIndicator)
                target.Add("PolicyDocument", formData.PolicyDocument)
                target.Add("OnLinePrintResult", formData.OnLinePrintResult)
                target.Add("YearCollection", formData.YearCollection)
                target.Add("BasicInsuredAmountEstructura", formData.BasicInsuredAmountEstructura)
                target.Add("BasicInsuredAmountContenido", formData.BasicInsuredAmountContenido)
                target.Add("CapitalEstructura", formData.CapitalEstructura)
                target.Add("CapitalContenido", formData.CapitalContenido)
                target.Add("ProductMasterDescription", formData.ProductMasterDescription)
                target.Add("PreviousPayment", formData.PreviousPayment)
                target.Add("AddresseMailDLI", formData.AddresseMailDLI)
                target.Add("ConsumerInformation", formData.ConsumerInformation)
                target.Add("UsercodeBO", formData.UsercodeBO)
                target.Add("PlanillaModificacion", formData.PlanillaModificacion)
                target.Add("PlanillaVisualizacion", formData.PlanillaVisualizacion)
                target.Add("UsercodeFASI", formData.UsercodeFASI)
                target.Add("ErrorsFound", formData.ErrorsFound)
                target.Add("ClienteIndicado", formData.ClienteIndicado)
                target.Add("UnderwritingCase", formData.UnderwritingCase)
                target.Add("frompanel", formData.frompanel)
                target.Add("ShowGeneral", formData.ShowGeneral)
                target.Add("ShowBasicInformation", formData.ShowBasicInformation)
                target.Add("ShowAdditionalInformation", formData.ShowAdditionalInformation)
                target.Add("ShowPaymentInformation", formData.ShowPaymentInformation)
                target.Add("ShowAddressInformation", formData.ShowAddressInformation)
                target.Add("ShowMoreInformation", formData.ShowMoreInformation)
                target.Add("uwreqid", formData.uwreqid)
                target.Add("Currency", formData.Currency)
                target.Add("BeneficiaryType", formData.BeneficiaryType)
                target.Add("InRuleErros", formData.InRuleErros)
                target.Add("AccumulatedAmount", formData.AccumulatedAmount)
                target.Add("CancelledPoliciesQuantity", formData.CancelledPoliciesQuantity)
                target.Add("OtherPoliciesSameRiskQuantity", formData.OtherPoliciesSameRiskQuantity)
                target.Add("ReportURL", formData.ReportURL)
                target.Add("FormStatus", formData.FormStatus)
                target.Add("OnLinePrint", formData.OnLinePrint)
                target.Add("AnswerDiabetes", formData.AnswerDiabetes)
                target.Add("AnswerHeart", formData.AnswerHeart)
                target.Add("AnswerCancer", formData.AnswerCancer)
                target.Add("PaymentMethod", formData.PaymentMethod)
                target.Add("CompleteAddress", formData.CompleteAddress)
                target.Add("VerificarCuestionariosIndicador", formData.VerificarCuestionariosIndicador)
                target.Add("ProductDescription", formData.ProductDescription)
                target.Add("PrimaTotalAnual", formData.PrimaTotalAnual)
                target.Add("PrimaRecibo", formData.PrimaRecibo)
                target.Add("MonedaRecibo", formData.MonedaRecibo)
                target.Add("CurrentYear", formData.CurrentYear)
                target.Add("IsAnonymous", formData.IsAnonymous)
                target.Add("BeneficiariosMail", formData.BeneficiariosMail)
                target.Add("Codigo", formData.Codigo)
                target.Add("Descripcion", formData.Descripcion)
                target.Add("FondosMail", formData.FondosMail)
                target.Add("QRegistros", formData.QRegistros)
                target.Add("InsuredAmount", formData.InsuredAmount)
                target.Add("InsuredAmountSelected", formData.InsuredAmountSelected)
                target.Add("ValorAcumulado", formData.ValorAcumulado)
                target.Add("GenderClient", formData.GenderClient)
                target.Add("OutWithoutSave", formData.OutWithoutSave)
                target.Add("FinalMessage", formData.FinalMessage)
                target.Add("DireccionMostrar", formData.DireccionMostrar)
                target.Add("ClientIncluded", formData.ClientIncluded)
                target.Add("VehicleCodeInteger", formData.VehicleCodeInteger)
                target.Add("CountRecords", formData.CountRecords)
            Else
                target("RiskInformation") = formData.RiskInformation
                target("CantidadMascotas") = formData.CantidadMascotas
                target("RamoPorDefecto") = formData.RamoPorDefecto
                target("ProductoporDefecto") = formData.ProductoporDefecto
                target("ProductMaster") = formData.ProductMaster
                target("PrimaTotal") = formData.PrimaTotal
                target("eMail") = formData.eMail
                target("ProducerClientID") = formData.ProducerClientID
                target("PlanType") = formData.PlanType
                target("ClientExistInDB") = formData.ClientExistInDB
                target("Age") = formData.Age
                target("SendMailIndicator") = formData.SendMailIndicator
                target("MailToProducerIndicator") = formData.MailToProducerIndicator
                target("uwcaseid") = formData.uwcaseid
                target("RecoveryCaseIndicator") = formData.RecoveryCaseIndicator
                target("StatusRun") = formData.StatusRun
                target("StatusCase") = formData.StatusCase
                target("ClientName") = formData.ClientName
                target("OnLinePrintIndicator") = formData.OnLinePrintIndicator
                target("PolicyDocument") = formData.PolicyDocument
                target("OnLinePrintResult") = formData.OnLinePrintResult
                target("YearCollection") = formData.YearCollection
                target("BasicInsuredAmountEstructura") = formData.BasicInsuredAmountEstructura
                target("BasicInsuredAmountContenido") = formData.BasicInsuredAmountContenido
                target("CapitalEstructura") = formData.CapitalEstructura
                target("CapitalContenido") = formData.CapitalContenido
                target("ProductMasterDescription") = formData.ProductMasterDescription
                target("PreviousPayment") = formData.PreviousPayment
                target("AddresseMailDLI") = formData.AddresseMailDLI
                target("ConsumerInformation") = formData.ConsumerInformation
                target("UsercodeBO") = formData.UsercodeBO
                target("PlanillaModificacion") = formData.PlanillaModificacion
                target("PlanillaVisualizacion") = formData.PlanillaVisualizacion
                target("UsercodeFASI") = formData.UsercodeFASI
                target("ErrorsFound") = formData.ErrorsFound
                target("ClienteIndicado") = formData.ClienteIndicado
                target("UnderwritingCase") = formData.UnderwritingCase
                target("frompanel") = formData.frompanel
                target("ShowGeneral") = formData.ShowGeneral
                target("ShowBasicInformation") = formData.ShowBasicInformation
                target("ShowAdditionalInformation") = formData.ShowAdditionalInformation
                target("ShowPaymentInformation") = formData.ShowPaymentInformation
                target("ShowAddressInformation") = formData.ShowAddressInformation
                target("ShowMoreInformation") = formData.ShowMoreInformation
                target("uwreqid") = formData.uwreqid
                target("Currency") = formData.Currency
                target("BeneficiaryType") = formData.BeneficiaryType
                target("InRuleErros") = formData.InRuleErros
                target("AccumulatedAmount") = formData.AccumulatedAmount
                target("CancelledPoliciesQuantity") = formData.CancelledPoliciesQuantity
                target("OtherPoliciesSameRiskQuantity") = formData.OtherPoliciesSameRiskQuantity
                target("ReportURL") = formData.ReportURL
                target("FormStatus") = formData.FormStatus
                target("OnLinePrint") = formData.OnLinePrint
                target("AnswerDiabetes") = formData.AnswerDiabetes
                target("AnswerHeart") = formData.AnswerHeart
                target("AnswerCancer") = formData.AnswerCancer
                target("PaymentMethod") = formData.PaymentMethod
                target("CompleteAddress") = formData.CompleteAddress
                target("VerificarCuestionariosIndicador") = formData.VerificarCuestionariosIndicador
                target("ProductDescription") = formData.ProductDescription
                target("PrimaTotalAnual") = formData.PrimaTotalAnual
                target("PrimaRecibo") = formData.PrimaRecibo
                target("MonedaRecibo") = formData.MonedaRecibo
                target("CurrentYear") = formData.CurrentYear
                target("IsAnonymous") = formData.IsAnonymous
                target("BeneficiariosMail") = formData.BeneficiariosMail
                target("Codigo") = formData.Codigo
                target("Descripcion") = formData.Descripcion
                target("FondosMail") = formData.FondosMail
                target("QRegistros") = formData.QRegistros
                target("InsuredAmount") = formData.InsuredAmount
                target("InsuredAmountSelected") = formData.InsuredAmountSelected
                target("ValorAcumulado") = formData.ValorAcumulado
                target("GenderClient") = formData.GenderClient
                target("OutWithoutSave") = formData.OutWithoutSave
                target("FinalMessage") = formData.FinalMessage
                target("DireccionMostrar") = formData.DireccionMostrar
                target("ClientIncluded") = formData.ClientIncluded
                target("VehicleCodeInteger") = formData.VehicleCodeInteger
                target("CountRecords") = formData.CountRecords
            End If
        End Sub

        Private Shared Sub GetTransferParameters(parametersData As HT5NNCotizacionPolizaHogarSecuenciaParameters, fromid As String)
            Dim fromDocumentCache As Object = Nothing

            If Not String.IsNullOrEmpty(fromid) Then
                fromDocumentCache = HttpContext.Current.Session(fromid)
                HttpContext.Current.Session.Remove(fromid)

            Else
                fromDocumentCache = HttpContext.Current.Session(HttpContext.Current.Session("fromid"))
                HttpContext.Current.Session.Remove(HttpContext.Current.Session("fromid"))
                HttpContext.Current.Session.Remove("fromid")
            End If

            If Not IsNothing(fromDocumentCache) Then
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("RiskInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CantidadMascotas", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("RamoPorDefecto", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProductoporDefecto", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProductMaster", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PrimaTotal", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("eMail", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProducerClientID", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PlanType", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClientExistInDB", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Age", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("SendMailIndicator", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("MailToProducerIndicator", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("uwcaseid", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("RecoveryCaseIndicator", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("StatusRun", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("StatusCase", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClientName", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OnLinePrintIndicator", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PolicyDocument", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OnLinePrintResult", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("YearCollection", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("BasicInsuredAmountEstructura", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("BasicInsuredAmountContenido", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CapitalEstructura", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CapitalContenido", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProductMasterDescription", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PreviousPayment", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AddresseMailDLI", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ConsumerInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UsercodeBO", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PlanillaModificacion", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PlanillaVisualizacion", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UsercodeFASI", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ErrorsFound", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClienteIndicado", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UnderwritingCase", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("frompanel", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowGeneral", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowBasicInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowAdditionalInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowPaymentInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowAddressInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowMoreInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("uwreqid", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Currency", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("BeneficiaryType", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("InRuleErros", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AccumulatedAmount", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CancelledPoliciesQuantity", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OtherPoliciesSameRiskQuantity", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ReportURL", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("FormStatus", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OnLinePrint", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AnswerDiabetes", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AnswerHeart", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AnswerCancer", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PaymentMethod", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CompleteAddress", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("VerificarCuestionariosIndicador", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProductDescription", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PrimaTotalAnual", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PrimaRecibo", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("MonedaRecibo", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CurrentYear", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("IsAnonymous", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("BeneficiariosMail", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Codigo", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Descripcion", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("FondosMail", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("QRegistros", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("InsuredAmount", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("InsuredAmountSelected", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ValorAcumulado", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("GenderClient", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OutWithoutSave", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("FinalMessage", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("DireccionMostrar", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClientIncluded", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("VehicleCodeInteger", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CountRecords", fromDocumentCache, parametersData)
            End If
        End Sub

        Private Shared Function SessionTrace(message As String) As String

            If Not IsNothing(HttpContext.Current.Session("Form.Track")) AndAlso HttpContext.Current.Session("Form.Track").ToString.ToLower = "true" Then
                Dim tracelog As String = HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath")))

                tracelog += String.Format(CultureInfo.InvariantCulture, "{0} {1}<br>{2}", Now.ToString("hh:mm:ss.fff"), message, vbCrLf)
                HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath"))) = tracelog
            End If

            Return message
        End Function

#End Region


#Region "Storage Database Methods"

      Private Shared Sub StoreFormInformation(formData As HT5NNCotizacionPolizaHogarSecuenciaParameters)
            If Not IsNothing(formData) Then
                Dim foundData As Boolean

                If formData.InternalId.IsEmpty Then
                    formData.InternalId = Guid.NewGuid.ToString
                Else
                    With New DataManagerFactory("SELECT COUNT(FormId) FROM FrontOffice.DocumentCache WHERE FormId = @:FormId",
                                 "FrontOffice.DocumentCache", "FrontOfficeConnectionString")
                        .AddParameter("FormId", DbType.AnsiStringFixedLength, 36, False, formData.InternalId)
                        foundData = .QueryExecuteScalarToInteger > 0
                    End With
                End If

                If foundData Then
                    UpdateStorageData(formData)
                Else
                    InsertStorageData(formData)
                End If

                If Not IsNothing(HttpContext.Current.Session("Form.Track")) AndAlso
                    HttpContext.Current.Session("Form.Track").ToString.ToLower = "true" Then
                    HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.HT5NNCotizacionPolizaHogarSecuencia", formData.InternalId)) = formData
                End If

                If Not IsNothing(HttpContext.Current.Session("Form.Track.Parameters")) AndAlso
                    HttpContext.Current.Session("Form.Track.Parameters").ToString.ToLower = "true" Then

                    If Not IsNothing(HttpContext.Current.Session("Form.Track")) AndAlso HttpContext.Current.Session("Form.Track").ToString.ToLower = "true" Then
                        InMotionGIT.Common.Helpers.FileHandler.SaveContent(String.Format(CultureInfo.InvariantCulture, 
                                                                                         "{0}\{1}.HT5NNCotizacionPolizaHogarSecuencia.txt", ConfigurationManager.AppSettings("Path.Logs"), formData.InternalId), 
                                                                                         HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", 
                                                                                                                                   IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath"))))
                    End If

                    InMotionGIT.Common.Helpers.Serialize.SerializeToFile(Of HT5NNCotizacionPolizaHogarSecuenciaParameters)(formData, String.Format(CultureInfo.InvariantCulture, "{0}\{1}.HT5NNCotizacionPolizaHogarSecuencia.xml", 
                                                                                                                        ConfigurationManager.AppSettings("Path.Logs"), formData.InternalId), True)
                End If
            End If
        End Sub

        Private Shared Function RetrieveFormInformationFromDatabase(instanceFormId As String) As HT5NNCotizacionPolizaHogarSecuenciaParameters
            Dim result As HT5NNCotizacionPolizaHogarSecuenciaParameters = Nothing
            Dim records As DataTable = Nothing

            With New DataManagerFactory("SELECT Content FROM FrontOffice.DocumentCache WHERE FormId = @:FormId",
                                        "FrontOffice.DocumentCache", "FrontOfficeConnectionString")

            .AddParameter("FormId", DbType.AnsiStringFixedLength, 36, False, instanceFormId)
                records = .QueryExecuteToTable(True)
            End With

            If records.Rows.Count > 0 Then
                result = Serialize.Deserialize(Of HT5NNCotizacionPolizaHogarSecuenciaParameters)(records.FirstRow.Item("Content"))
            End If

            Return result
        End Function

        Private Shared Sub InsertStorageData(formData As HT5NNCotizacionPolizaHogarSecuenciaParameters)
            Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
	    
            With New DataManagerFactory("INSERT INTO FrontOffice.DocumentCache (FormId, ModelId, UserId, Page, Content, CreationDate, UpdateDate) VALUES(@:FormId, @:ModelId, @:UserId, @:Page, @:Content, @:CreationDate, @:UpdateDate)",
                                        "FrontOffice.DocumentCache", "FrontOfficeConnectionString")

                .AddParameter("FormId", DbType.AnsiStringFixedLength, 36, False, formData.InternalId)
                .AddParameter("ModelId", DbType.AnsiStringFixedLength, 36, False, "fc6cbb1d-8417-4246-ab75-776d1a55a91a")
                .AddParameter("UserId", DbType.AnsiString, 256, False, UserInfo.UserId)
            .AddParameter("Page", DbType.AnsiString, 255, False, "Me.AppRelativeVirtualPath")
            .AddParameter("Content", DbType.Xml, 1, False, Serialize.Serialize(Of HT5NNCotizacionPolizaHogarSecuenciaParameters)(formData))
            .AddParameter("CreationDate", DbType.DateTime, 20, False, Now)
            .AddParameter("UpdateDate", DbType.DateTime, 20, False, Now)

                .CommandExecute()
            End With
        End Sub

        Private Shared Sub UpdateStorageData(formData As HT5NNCotizacionPolizaHogarSecuenciaParameters)
            Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
	    
            With New DataManagerFactory("UPDATE FrontOffice.DocumentCache SET ModelId = @:ModelId, UserId = @:UserId, Page = @:Page, Content = @:Content, UpdateDate = @:UpdateDate WHERE FormId = @:FormId",
                                        "FrontOffice.DocumentCache", "FrontOfficeConnectionString")

                .AddParameter("ModelId", DbType.AnsiStringFixedLength, 36, False, "fc6cbb1d-8417-4246-ab75-776d1a55a91a")
                .AddParameter("UserId", DbType.AnsiString, 256, False, UserInfo.UserId)
            .AddParameter("Page", DbType.AnsiString, 255, False, "Me.AppRelativeVirtualPath")
            .AddParameter("Content", DbType.Xml, 1, False, Serialize.Serialize(Of HT5NNCotizacionPolizaHogarSecuenciaParameters)(formData))
            .AddParameter("UpdateDate", DbType.DateTime, 20, False, Now)
            .AddParameter("FormId", DbType.AnsiStringFixedLength, 36, False, formData.InternalId)

                .CommandExecute()
            End With
        End Sub

#End Region


#Region "Contracts Mappers"

        Private Shared Function EntryDataToClass(parametersData As HT5NNCotizacionPolizaHogarSecuenciaParameters, formData As EntryData) As HT5NNCotizacionPolizaHogarSecuenciaParameters
            If IsNothing(parametersData) Then
                parametersData = New HT5NNCotizacionPolizaHogarSecuenciaParameters
            End If


            With parametersData
                .InternalId = formData.InstanceFormId
                .eMail = formData.eMail
            End With

            Return parametersData
        End Function

        Private Shared Function ClassToEntryData(formData As EntryData, parametersData As HT5NNCotizacionPolizaHogarSecuenciaParameters) As EntryData
            formData = New EntryData

            With formData
                .InstanceFormId = parametersData.InternalId
                .eMail = parametersData.eMail
            End With

            Return formData
        End Function

#End Region

#Region "Common Utilities"

        Private Shared Sub SetDefaultValuesFromQueryString(formData As HT5NNCotizacionPolizaHogarSecuenciaParameters)
            If HttpContext.Current.Request.QueryString("CantidadMascotas").IsNotEmpty Then
                formData.CantidadMascotas = HttpContext.Current.Request.QueryString("CantidadMascotas")
            End If
            If HttpContext.Current.Request.QueryString("RamoPorDefecto").IsNotEmpty Then
                formData.RamoPorDefecto = HttpContext.Current.Request.QueryString("RamoPorDefecto")
            End If
            If HttpContext.Current.Request.QueryString("ProductoporDefecto").IsNotEmpty Then
                formData.ProductoporDefecto = HttpContext.Current.Request.QueryString("ProductoporDefecto")
            End If
            If HttpContext.Current.Request.QueryString("PrimaTotal").IsNotEmpty Then
                formData.PrimaTotal = HttpContext.Current.Request.QueryString("PrimaTotal")
            End If
            If HttpContext.Current.Request.QueryString("eMail").IsNotEmpty Then
                formData.eMail = HttpContext.Current.Request.QueryString("eMail")
            End If
            If HttpContext.Current.Request.QueryString("ProducerClientID").IsNotEmpty Then
                formData.ProducerClientID = HttpContext.Current.Request.QueryString("ProducerClientID")
            End If
            If HttpContext.Current.Request.QueryString("PlanType").IsNotEmpty Then
                formData.PlanType = HttpContext.Current.Request.QueryString("PlanType")
            End If
            If HttpContext.Current.Request.QueryString("ClientExistInDB").IsNotEmpty Then
                formData.ClientExistInDB = HttpContext.Current.Request.QueryString("ClientExistInDB")
            End If
            If HttpContext.Current.Request.QueryString("Age").IsNotEmpty Then
                formData.Age = HttpContext.Current.Request.QueryString("Age")
            End If
            If HttpContext.Current.Request.QueryString("SendMailIndicator").IsNotEmpty Then
                formData.SendMailIndicator = HttpContext.Current.Request.QueryString("SendMailIndicator")
            End If
            If HttpContext.Current.Request.QueryString("MailToProducerIndicator").IsNotEmpty Then
                formData.MailToProducerIndicator = HttpContext.Current.Request.QueryString("MailToProducerIndicator")
            End If
            If HttpContext.Current.Request.QueryString("uwcaseid").IsNotEmpty Then
                formData.uwcaseid = HttpContext.Current.Request.QueryString("uwcaseid")
            End If
            If HttpContext.Current.Request.QueryString("RecoveryCaseIndicator").IsNotEmpty Then
                formData.RecoveryCaseIndicator = HttpContext.Current.Request.QueryString("RecoveryCaseIndicator")
            End If
            If HttpContext.Current.Request.QueryString("StatusRun").IsNotEmpty Then
                formData.StatusRun = HttpContext.Current.Request.QueryString("StatusRun")
            End If
            If HttpContext.Current.Request.QueryString("StatusCase").IsNotEmpty Then
                formData.StatusCase = HttpContext.Current.Request.QueryString("StatusCase")
            End If
            If HttpContext.Current.Request.QueryString("ClientName").IsNotEmpty Then
                formData.ClientName = HttpContext.Current.Request.QueryString("ClientName")
            End If
            If HttpContext.Current.Request.QueryString("OnLinePrintIndicator").IsNotEmpty Then
                formData.OnLinePrintIndicator = HttpContext.Current.Request.QueryString("OnLinePrintIndicator")
            End If
            If HttpContext.Current.Request.QueryString("PolicyDocument").IsNotEmpty Then
                formData.PolicyDocument = HttpContext.Current.Request.QueryString("PolicyDocument")
            End If
            If HttpContext.Current.Request.QueryString("OnLinePrintResult").IsNotEmpty Then
                formData.OnLinePrintResult = HttpContext.Current.Request.QueryString("OnLinePrintResult")
            End If
            If HttpContext.Current.Request.QueryString("CapitalEstructura").IsNotEmpty Then
                formData.CapitalEstructura = HttpContext.Current.Request.QueryString("CapitalEstructura")
            End If
            If HttpContext.Current.Request.QueryString("CapitalContenido").IsNotEmpty Then
                formData.CapitalContenido = HttpContext.Current.Request.QueryString("CapitalContenido")
            End If
            If HttpContext.Current.Request.QueryString("ProductMasterDescription").IsNotEmpty Then
                formData.ProductMasterDescription = HttpContext.Current.Request.QueryString("ProductMasterDescription")
            End If
            If HttpContext.Current.Request.QueryString("PreviousPayment").IsNotEmpty Then
                formData.PreviousPayment = HttpContext.Current.Request.QueryString("PreviousPayment")
            End If
            If HttpContext.Current.Request.QueryString("UsercodeBO").IsNotEmpty Then
                formData.UsercodeBO = HttpContext.Current.Request.QueryString("UsercodeBO")
            End If
            If HttpContext.Current.Request.QueryString("PlanillaModificacion").IsNotEmpty Then
                formData.PlanillaModificacion = HttpContext.Current.Request.QueryString("PlanillaModificacion")
            End If
            If HttpContext.Current.Request.QueryString("PlanillaVisualizacion").IsNotEmpty Then
                formData.PlanillaVisualizacion = HttpContext.Current.Request.QueryString("PlanillaVisualizacion")
            End If
            If HttpContext.Current.Request.QueryString("UsercodeFASI").IsNotEmpty Then
                formData.UsercodeFASI = HttpContext.Current.Request.QueryString("UsercodeFASI")
            End If
            If HttpContext.Current.Request.QueryString("ErrorsFound").IsNotEmpty Then
                formData.ErrorsFound = HttpContext.Current.Request.QueryString("ErrorsFound")
            End If
            If HttpContext.Current.Request.QueryString("ClienteIndicado").IsNotEmpty Then
                formData.ClienteIndicado = HttpContext.Current.Request.QueryString("ClienteIndicado")
            End If
            If HttpContext.Current.Request.QueryString("frompanel").IsNotEmpty Then
                formData.frompanel = HttpContext.Current.Request.QueryString("frompanel")
            End If
            If HttpContext.Current.Request.QueryString("ShowGeneral").IsNotEmpty Then
                formData.ShowGeneral = HttpContext.Current.Request.QueryString("ShowGeneral")
            End If
            If HttpContext.Current.Request.QueryString("ShowBasicInformation").IsNotEmpty Then
                formData.ShowBasicInformation = HttpContext.Current.Request.QueryString("ShowBasicInformation")
            End If
            If HttpContext.Current.Request.QueryString("ShowAdditionalInformation").IsNotEmpty Then
                formData.ShowAdditionalInformation = HttpContext.Current.Request.QueryString("ShowAdditionalInformation")
            End If
            If HttpContext.Current.Request.QueryString("ShowPaymentInformation").IsNotEmpty Then
                formData.ShowPaymentInformation = HttpContext.Current.Request.QueryString("ShowPaymentInformation")
            End If
            If HttpContext.Current.Request.QueryString("ShowAddressInformation").IsNotEmpty Then
                formData.ShowAddressInformation = HttpContext.Current.Request.QueryString("ShowAddressInformation")
            End If
            If HttpContext.Current.Request.QueryString("ShowMoreInformation").IsNotEmpty Then
                formData.ShowMoreInformation = HttpContext.Current.Request.QueryString("ShowMoreInformation")
            End If
            If HttpContext.Current.Request.QueryString("uwreqid").IsNotEmpty Then
                formData.uwreqid = HttpContext.Current.Request.QueryString("uwreqid")
            End If
            If HttpContext.Current.Request.QueryString("Currency").IsNotEmpty Then
                formData.Currency = HttpContext.Current.Request.QueryString("Currency")
            End If
            If HttpContext.Current.Request.QueryString("BeneficiaryType").IsNotEmpty Then
                formData.BeneficiaryType = HttpContext.Current.Request.QueryString("BeneficiaryType")
            End If
            If HttpContext.Current.Request.QueryString("InRuleErros").IsNotEmpty Then
                formData.InRuleErros = HttpContext.Current.Request.QueryString("InRuleErros")
            End If
            If HttpContext.Current.Request.QueryString("AccumulatedAmount").IsNotEmpty Then
                formData.AccumulatedAmount = HttpContext.Current.Request.QueryString("AccumulatedAmount")
            End If
            If HttpContext.Current.Request.QueryString("CancelledPoliciesQuantity").IsNotEmpty Then
                formData.CancelledPoliciesQuantity = HttpContext.Current.Request.QueryString("CancelledPoliciesQuantity")
            End If
            If HttpContext.Current.Request.QueryString("OtherPoliciesSameRiskQuantity").IsNotEmpty Then
                formData.OtherPoliciesSameRiskQuantity = HttpContext.Current.Request.QueryString("OtherPoliciesSameRiskQuantity")
            End If
            If HttpContext.Current.Request.QueryString("ReportURL").IsNotEmpty Then
                formData.ReportURL = HttpContext.Current.Request.QueryString("ReportURL")
            End If
            If HttpContext.Current.Request.QueryString("FormStatus").IsNotEmpty Then
                formData.FormStatus = HttpContext.Current.Request.QueryString("FormStatus")
            End If
            If HttpContext.Current.Request.QueryString("AnswerDiabetes").IsNotEmpty Then
                formData.AnswerDiabetes = HttpContext.Current.Request.QueryString("AnswerDiabetes")
            End If
            If HttpContext.Current.Request.QueryString("AnswerHeart").IsNotEmpty Then
                formData.AnswerHeart = HttpContext.Current.Request.QueryString("AnswerHeart")
            End If
            If HttpContext.Current.Request.QueryString("AnswerCancer").IsNotEmpty Then
                formData.AnswerCancer = HttpContext.Current.Request.QueryString("AnswerCancer")
            End If
            If HttpContext.Current.Request.QueryString("PaymentMethod").IsNotEmpty Then
                formData.PaymentMethod = HttpContext.Current.Request.QueryString("PaymentMethod")
            End If
            If HttpContext.Current.Request.QueryString("CompleteAddress").IsNotEmpty Then
                formData.CompleteAddress = HttpContext.Current.Request.QueryString("CompleteAddress")
            End If
            If HttpContext.Current.Request.QueryString("VerificarCuestionariosIndicador").IsNotEmpty Then
                formData.VerificarCuestionariosIndicador = HttpContext.Current.Request.QueryString("VerificarCuestionariosIndicador")
            End If
            If HttpContext.Current.Request.QueryString("ProductDescription").IsNotEmpty Then
                formData.ProductDescription = HttpContext.Current.Request.QueryString("ProductDescription")
            End If
            If HttpContext.Current.Request.QueryString("PrimaTotalAnual").IsNotEmpty Then
                formData.PrimaTotalAnual = HttpContext.Current.Request.QueryString("PrimaTotalAnual")
            End If
            If HttpContext.Current.Request.QueryString("PrimaRecibo").IsNotEmpty Then
                formData.PrimaRecibo = HttpContext.Current.Request.QueryString("PrimaRecibo")
            End If
            If HttpContext.Current.Request.QueryString("MonedaRecibo").IsNotEmpty Then
                formData.MonedaRecibo = HttpContext.Current.Request.QueryString("MonedaRecibo")
            End If
            If HttpContext.Current.Request.QueryString("CurrentYear").IsNotEmpty Then
                formData.CurrentYear = HttpContext.Current.Request.QueryString("CurrentYear")
            End If
            If HttpContext.Current.Request.QueryString("IsAnonymous").IsNotEmpty Then
                formData.IsAnonymous = HttpContext.Current.Request.QueryString("IsAnonymous")
            End If
            If HttpContext.Current.Request.QueryString("BeneficiariosMail").IsNotEmpty Then
                formData.BeneficiariosMail = HttpContext.Current.Request.QueryString("BeneficiariosMail")
            End If
            If HttpContext.Current.Request.QueryString("Codigo").IsNotEmpty Then
                formData.Codigo = HttpContext.Current.Request.QueryString("Codigo")
            End If
            If HttpContext.Current.Request.QueryString("Descripcion").IsNotEmpty Then
                formData.Descripcion = HttpContext.Current.Request.QueryString("Descripcion")
            End If
            If HttpContext.Current.Request.QueryString("FondosMail").IsNotEmpty Then
                formData.FondosMail = HttpContext.Current.Request.QueryString("FondosMail")
            End If
            If HttpContext.Current.Request.QueryString("QRegistros").IsNotEmpty Then
                formData.QRegistros = HttpContext.Current.Request.QueryString("QRegistros")
            End If
            If HttpContext.Current.Request.QueryString("InsuredAmount").IsNotEmpty Then
                formData.InsuredAmount = HttpContext.Current.Request.QueryString("InsuredAmount")
            End If
            If HttpContext.Current.Request.QueryString("InsuredAmountSelected").IsNotEmpty Then
                formData.InsuredAmountSelected = HttpContext.Current.Request.QueryString("InsuredAmountSelected")
            End If
            If HttpContext.Current.Request.QueryString("ValorAcumulado").IsNotEmpty Then
                formData.ValorAcumulado = HttpContext.Current.Request.QueryString("ValorAcumulado")
            End If
            If HttpContext.Current.Request.QueryString("GenderClient").IsNotEmpty Then
                formData.GenderClient = HttpContext.Current.Request.QueryString("GenderClient")
            End If
            If HttpContext.Current.Request.QueryString("OutWithoutSave").IsNotEmpty Then
                formData.OutWithoutSave = HttpContext.Current.Request.QueryString("OutWithoutSave")
            End If
            If HttpContext.Current.Request.QueryString("FinalMessage").IsNotEmpty Then
                formData.FinalMessage = HttpContext.Current.Request.QueryString("FinalMessage")
            End If
            If HttpContext.Current.Request.QueryString("DireccionMostrar").IsNotEmpty Then
                formData.DireccionMostrar = HttpContext.Current.Request.QueryString("DireccionMostrar")
            End If
            If HttpContext.Current.Request.QueryString("VehicleCodeInteger").IsNotEmpty Then
                formData.VehicleCodeInteger = HttpContext.Current.Request.QueryString("VehicleCodeInteger")
            End If
            If HttpContext.Current.Request.QueryString("CountRecords").IsNotEmpty Then
                formData.CountRecords = HttpContext.Current.Request.QueryString("CountRecords")
            End If
        End Sub	

        Private Sub ValidateParametersInstance(ByRef formData As HT5NNCotizacionPolizaHogarSecuenciaParameters)

        End Sub

#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property eMail As String

        End Class

        <Serializable()>
        Public Class HT5NNCotizacionPolizaHogarSecuenciaParameters
            Inherits InMotionGIT.FrontOffice.Support.DataType.FormBase(Of HT5NNCotizacionPolizaHogarSecuenciaParameters)

            Public Property RiskInformation As InMotionGIT.Policy.Entity.Contracts.RiskInformation
            Public Property CantidadMascotas As Int32
            Public Property RamoPorDefecto As Int32
            Public Property ProductoporDefecto As Int32
            Public Property ProductMaster As InMotionGIT.Product.Entity.Contracts.ProductMaster
            Public Property PrimaTotal As Decimal
            Public Property eMail As String
            Public Property ProducerClientID As String
            Public Property PlanType As Int32
            Public Property ClientExistInDB As Boolean
            Public Property Age As Int32
            Public Property SendMailIndicator As Boolean
            Public Property MailToProducerIndicator As Boolean
            Public Property uwcaseid As Int64
            Public Property RecoveryCaseIndicator As Boolean
            Public Property StatusRun As Boolean
            Public Property StatusCase As Int32
            Public Property ClientName As String
            Public Property OnLinePrintIndicator As Boolean
            Public Property PolicyDocument As String
            Public Property OnLinePrintResult As Int32
            Public Property YearCollection As InMotionGIT.Common.Contracts.Errors.ErrorCollection
            Public Property BasicInsuredAmountEstructura As InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount
            Public Property BasicInsuredAmountContenido As InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount
            Public Property CapitalEstructura As Decimal
            Public Property CapitalContenido As Decimal
            Public Property ProductMasterDescription As String
            Public Property PreviousPayment As Boolean
            Public Property AddresseMailDLI As InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
            Public Property ConsumerInformation As InMotionGIT.Common.Contracts.Process.ConsumerInformation
            Public Property UsercodeBO As Int32
            Public Property PlanillaModificacion As String
            Public Property PlanillaVisualizacion As String
            Public Property UsercodeFASI As Int32
            Public Property ErrorsFound As Boolean
            Public Property ClienteIndicado As String
            Public Property UnderwritingCase As InMotionGIT.Underwriting.Contracts.UnderwritingCase
            Public Property frompanel As Boolean
            Public Property ShowGeneral As Boolean
            Public Property ShowBasicInformation As Boolean
            Public Property ShowAdditionalInformation As Boolean
            Public Property ShowPaymentInformation As Boolean
            Public Property ShowAddressInformation As Boolean
            Public Property ShowMoreInformation As Boolean
            Public Property uwreqid As Int64
            Public Property Currency As Int32
            Public Property BeneficiaryType As Int32
            Public Property InRuleErros As Boolean
            Public Property AccumulatedAmount As Decimal
            Public Property CancelledPoliciesQuantity As Int32
            Public Property OtherPoliciesSameRiskQuantity As Int32
            Public Property ReportURL As String
            Public Property FormStatus As Int32
            Public Property OnLinePrint As Int32
            Public Property AnswerDiabetes As String
            Public Property AnswerHeart As String
            Public Property AnswerCancer As String
            Public Property PaymentMethod As Int32
            Public Property CompleteAddress As String
            Public Property VerificarCuestionariosIndicador As Boolean
            Public Property ProductDescription As String
            Public Property PrimaTotalAnual As Decimal
            Public Property PrimaRecibo As Decimal
            Public Property MonedaRecibo As Int32
            Public Property CurrentYear As Int32
            Public Property IsAnonymous As Boolean
            Public Property BeneficiariosMail As String
            Public Property Codigo As Int32
            Public Property Descripcion As String
            Public Property FondosMail As String
            Public Property QRegistros As Int32
            Public Property InsuredAmount As Decimal
            Public Property InsuredAmountSelected As Decimal
            Public Property ValorAcumulado As Decimal
            Public Property GenderClient As String
            Public Property OutWithoutSave As Boolean
            Public Property FinalMessage As String
            Public Property DireccionMostrar As String
            Public Property ClientIncluded As InMotionGIT.Client.Entity.Contracts.Client
            Public Property VehicleCodeInteger As Int32
            Public Property CountRecords As Int32

        End Class
#End Region

    End Class

End Namespace