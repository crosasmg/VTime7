'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Form Designer v7.3.24.1 at 2019-11-08 04:51:39 p. m. model release 1, Form Generator v1.0.37.9
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class H5TipoAreaSuscripcionActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"
  

        <WebMethod()>
        Public Shared Function TabUnderwritingAreaType_GridTblDataLoad(filter As String, TransUnderwritingAreaTypeLanguageId1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.UnderwritingArea = 0, .RecordStatus = 0, .CreatorUserCode = 0, .CreationDate = Date.MinValue, .UpdateUserCode = 0, .UpdateDate = Date.MinValue, .Description = String.Empty, .ShortDescription = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)
            
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")

                With New DataManagerFactory("SELECT TABUNDERWRITINGAREATYPE.UNDERWRITINGAREA, TABUNDERWRITINGAREATYPE.RECORDSTATUS, TABUNDERWRITINGAREATYPE.CREATORUSERCODE, TABUNDERWRITINGAREATYPE.CREATIONDATE, TABUNDERWRITINGAREATYPE.UPDATEUSERCODE, TABUNDERWRITINGAREATYPE.UPDATEDATE, TRANSUNDERWRITINGAREATYPE.DESCRIPTION, TRANSUNDERWRITINGAREATYPE.SHORTDESCRIPTION FROM TABUNDERWRITINGAREATYPE TABUNDERWRITINGAREATYPE  LEFT JOIN TRANSUNDERWRITINGAREATYPE TRANSUNDERWRITINGAREATYPE ON TRANSUNDERWRITINGAREATYPE.UNDERWRITINGAREA = TABUNDERWRITINGAREATYPE.UNDERWRITINGAREA  AND TRANSUNDERWRITINGAREATYPE.LANGUAGEID = @:LANGUAGEID1", "TabUnderwritingAreaType", "Linked.Underwriting")
                    .AddParameter("LANGUAGEID1", DbType.AnsiString, 5, (TransUnderwritingAreaTypeLanguageId1 = String.Empty), TransUnderwritingAreaTypeLanguageId1)

                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.UnderwritingArea = itemData.NumericValue("UNDERWRITINGAREA"), .RecordStatus = itemData.NumericValue("RECORDSTATUS"), .CreatorUserCode = itemData.NumericValue("CREATORUSERCODE"), .CreationDate = itemData.DateTimeValue("CREATIONDATE"), .UpdateUserCode = itemData.NumericValue("UPDATEUSERCODE"), .UpdateDate = itemData.DateTimeValue("UPDATEDATE"), .Description = itemData.StringValue("DESCRIPTION"), .ShortDescription = itemData.StringValue("SHORTDESCRIPTION")}
                            
                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With
            
            If responseList.Count <> 0 Then          
		    
            End If
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5TipoAreaSuscripcion", "TabUnderwritingAreaType_GridTblDataLoad", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function TabUnderwritingAreaType_Grid1InsertCommandActionTabUnderwritingAreaType(UNDERWRITINGAREA1 As Decimal, RECORDSTATUS2 As Decimal, CREATORUSERCODE2 As Decimal, UPDATEUSERCODE4 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                With New DataManagerFactory("INSERT INTO TabUnderwritingAreaType (UNDERWRITINGAREA, RECORDSTATUS, CREATORUSERCODE, CREATIONDATE, UPDATEUSERCODE, UPDATEDATE) VALUES (@:UNDERWRITINGAREA1, @:RECORDSTATUS2, @:CREATORUSERCODE2, @:CREATIONDATE3, @:UPDATEUSERCODE4, @:UPDATEDATE5)", "TabUnderwritingAreaType", "Linked.Underwriting")
                    .AddParameter("UNDERWRITINGAREA1", DbType.Decimal, 0, False, UNDERWRITINGAREA1)
                    .AddParameter("RECORDSTATUS2", DbType.Decimal, 0, False, RECORDSTATUS2)
                    .AddParameter("CREATORUSERCODE2", DbType.Decimal, 0, False, CREATORUSERCODE2)
                    .AddParameter("CREATIONDATE3", DbType.DateTime, 0, False, Date.Now)
                    .AddParameter("UPDATEUSERCODE4", DbType.Decimal, 0, False, UPDATEUSERCODE4)
                    .AddParameter("UPDATEDATE5", DbType.DateTime, 0, False, Date.Now)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5TipoAreaSuscripcion", "TabUnderwritingAreaType_Grid1InsertCommandActionTabUnderwritingAreaType", String.Empty)
            End Try
            
            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function TabUnderwritingAreaType_Grid3InsertCommandActionTransUnderwritingAreaType(UNDERWRITINGAREA1 As Decimal, LANGUAGEID1 As Decimal, DESCRIPTION3 As String, SHORTDESCRIPTION4 As String, CREATORUSERCODE4 As Decimal, UPDATEUSERCODE6 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                    With New DataManagerFactory("INSERT INTO TransUnderwritingAreaType (UNDERWRITINGAREA, LANGUAGEID, DESCRIPTION, SHORTDESCRIPTION, CREATORUSERCODE, CREATIONDATE, UPDATEUSERCODE, UPDATEDATE) VALUES (@:UNDERWRITINGAREA1, @:LANGUAGEID1, @:DESCRIPTION3, @:SHORTDESCRIPTION4, @:CREATORUSERCODE4, @:CREATIONDATE5, @:UPDATEUSERCODE6, @:UPDATEDATE7)", "TransUnderwritingAreaType", "Linked.Underwriting")
                    .AddParameter("UNDERWRITINGAREA1", DbType.Decimal, 0, False, UNDERWRITINGAREA1)
                    .AddParameter("LANGUAGEID1", DbType.Decimal, 0, False, LANGUAGEID1)
                    .AddParameter("DESCRIPTION3", DbType.AnsiString, 0, (DESCRIPTION3 = String.Empty), DESCRIPTION3)
                    .AddParameter("SHORTDESCRIPTION4", DbType.AnsiString, 0, (SHORTDESCRIPTION4 = String.Empty), SHORTDESCRIPTION4)
                    .AddParameter("CREATORUSERCODE4", DbType.Decimal, 0, False, CREATORUSERCODE4)
                    .AddParameter("CREATIONDATE5", DbType.DateTime, 0, False, Date.Now)
                    .AddParameter("UPDATEUSERCODE6", DbType.Decimal, 0, False, UPDATEUSERCODE6)
                    .AddParameter("UPDATEDATE7", DbType.DateTime, 0, False, Date.Now)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5TipoAreaSuscripcion", "TabUnderwritingAreaType_Grid3InsertCommandActionTransUnderwritingAreaType", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function TabUnderwritingAreaType_Grid1UpdateCommandActionTabUnderwritingAreaType(RECORDSTATUS1 As Decimal, UPDATEUSERCODE1 As Decimal, TabUnderwritingAreaTypeUnderwritingArea3 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                With New DataManagerFactory("UPDATE TabUnderwritingAreaType SET RECORDSTATUS = @:RECORDSTATUS1, UPDATEUSERCODE = @:UPDATEUSERCODE1 WHERE TABUNDERWRITINGAREATYPE.UNDERWRITINGAREA = @:UNDERWRITINGAREA3", "TabUnderwritingAreaType", "Linked.Underwriting")
                    .AddParameter("RECORDSTATUS1", DbType.Decimal, 0, False, RECORDSTATUS1)
                    .AddParameter("UPDATEUSERCODE1", DbType.Decimal, 0, False, UPDATEUSERCODE1)
                    .AddParameter("UNDERWRITINGAREA3", DbType.Decimal, 0, False, TabUnderwritingAreaTypeUnderwritingArea3)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5TipoAreaSuscripcion", "TabUnderwritingAreaType_Grid1UpdateCommandActionTabUnderwritingAreaType", String.Empty)
            End Try
            
            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function TabUnderwritingAreaType_Grid3SelectCommandActionTransUnderwritingAreaType(TransUnderwritingAreaTypeUnderwritingArea1 As Decimal, TransUnderwritingAreaTypeLanguageId2 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}
            Dim responseList As New List(Of Object)
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")

                With New DataManagerFactory("Select COUNT(TRANSUNDERWRITINGAREATYPE.UNDERWRITINGAREA) UNDERWRITINGAREA FROM TRANSUNDERWRITINGAREATYPE TRANSUNDERWRITINGAREATYPE  WHERE TRANSUNDERWRITINGAREATYPE.UNDERWRITINGAREA = @:UNDERWRITINGAREA1 AND TRANSUNDERWRITINGAREATYPE.LANGUAGEID = @:LANGUAGEID2", "TransUnderwritingAreaType", "Linked.Underwriting")
                    .AddParameter("UNDERWRITINGAREA1", DbType.Decimal, 0, False, TransUnderwritingAreaTypeUnderwritingArea1)
                    .AddParameter("LANGUAGEID2", DbType.Decimal, 0, False, TransUnderwritingAreaTypeLanguageId2)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With
            
            If responseList.Count <> 0 Then          
		    
            End If
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5TipoAreaSuscripcion", "TabUnderwritingAreaType_Grid3SelectCommandActionTransUnderwritingAreaType", String.Empty)
            End Try
            
            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function TabUnderwritingAreaType_Grid5InsertCommandActionTransUnderwritingAreaType(UNDERWRITINGAREA1 As Decimal, LANGUAGEID1 As Decimal, DESCRIPTION3 As String, SHORTDESCRIPTION4 As String, CREATORUSERCODE4 As Decimal, UPDATEUSERCODE6 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                        With New DataManagerFactory("INSERT INTO TransUnderwritingAreaType (UNDERWRITINGAREA, LANGUAGEID, DESCRIPTION, SHORTDESCRIPTION, CREATORUSERCODE, CREATIONDATE, UPDATEUSERCODE, UPDATEDATE) VALUES (@:UNDERWRITINGAREA1, @:LANGUAGEID1, @:DESCRIPTION3, @:SHORTDESCRIPTION4, @:CREATORUSERCODE4, @:CREATIONDATE5, @:UPDATEUSERCODE6, @:UPDATEDATE7)", "TransUnderwritingAreaType", "Linked.Underwriting")
                    .AddParameter("UNDERWRITINGAREA1", DbType.Decimal, 0, False, UNDERWRITINGAREA1)
                    .AddParameter("LANGUAGEID1", DbType.Decimal, 0, False, LANGUAGEID1)
                    .AddParameter("DESCRIPTION3", DbType.AnsiString, 0, (DESCRIPTION3 = String.Empty), DESCRIPTION3)
                    .AddParameter("SHORTDESCRIPTION4", DbType.AnsiString, 0, (SHORTDESCRIPTION4 = String.Empty), SHORTDESCRIPTION4)
                    .AddParameter("CREATORUSERCODE4", DbType.Decimal, 0, False, CREATORUSERCODE4)
                    .AddParameter("CREATIONDATE5", DbType.DateTime, 0, False, Date.Now)
                    .AddParameter("UPDATEUSERCODE6", DbType.Decimal, 0, False, UPDATEUSERCODE6)
                    .AddParameter("UPDATEDATE7", DbType.DateTime, 0, False, Date.Now)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5TipoAreaSuscripcion", "TabUnderwritingAreaType_Grid5InsertCommandActionTransUnderwritingAreaType", String.Empty)
            End Try
            
            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function TabUnderwritingAreaType_Grid6UpdateCommandActionTransUnderwritingAreaType(DESCRIPTION1 As String, SHORTDESCRIPTION2 As String, UPDATEUSERCODE2 As Decimal, TransUnderwritingAreaTypeUnderwritingArea4 As Decimal, TransUnderwritingAreaTypeLanguageId5 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                        With New DataManagerFactory("UPDATE TransUnderwritingAreaType SET DESCRIPTION = @:DESCRIPTION1, SHORTDESCRIPTION = @:SHORTDESCRIPTION2, UPDATEUSERCODE = @:UPDATEUSERCODE2 WHERE TRANSUNDERWRITINGAREATYPE.UNDERWRITINGAREA = @:UNDERWRITINGAREA4 AND TRANSUNDERWRITINGAREATYPE.LANGUAGEID = @:LANGUAGEID5", "TransUnderwritingAreaType", "Linked.Underwriting")
                    .AddParameter("DESCRIPTION1", DbType.AnsiString, 0, (DESCRIPTION1 = String.Empty), DESCRIPTION1)
                    .AddParameter("SHORTDESCRIPTION2", DbType.AnsiString, 0, (SHORTDESCRIPTION2 = String.Empty), SHORTDESCRIPTION2)
                    .AddParameter("UPDATEUSERCODE2", DbType.Decimal, 0, False, UPDATEUSERCODE2)
                    .AddParameter("UNDERWRITINGAREA4", DbType.Decimal, 0, False, TransUnderwritingAreaTypeUnderwritingArea4)
                    .AddParameter("LANGUAGEID5", DbType.Decimal, 0, False, TransUnderwritingAreaTypeLanguageId5)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5TipoAreaSuscripcion", "TabUnderwritingAreaType_Grid6UpdateCommandActionTransUnderwritingAreaType", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function TabUnderwritingAreaType_Grid1DeleteCommandActionTransUnderwritingAreaType(TransUnderwritingAreaTypeUnderwritingArea1 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                With New DataManagerFactory("DELETE FROM TransUnderwritingAreaType WHERE TRANSUNDERWRITINGAREATYPE.UNDERWRITINGAREA = @:UNDERWRITINGAREA1", "TransUnderwritingAreaType", "Linked.Underwriting")
                    .AddParameter("UNDERWRITINGAREA1", DbType.Decimal, 0, False, TransUnderwritingAreaTypeUnderwritingArea1)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5TipoAreaSuscripcion", "TabUnderwritingAreaType_Grid1DeleteCommandActionTransUnderwritingAreaType", String.Empty)
            End Try
            
            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function TabUnderwritingAreaType_Grid3DeleteCommandActionTabUnderwritingAreaType(TabUnderwritingAreaTypeUnderwritingArea1 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                    With New DataManagerFactory("DELETE FROM TabUnderwritingAreaType WHERE TABUNDERWRITINGAREATYPE.UNDERWRITINGAREA = @:UNDERWRITINGAREA1", "TabUnderwritingAreaType", "Linked.Underwriting")
                    .AddParameter("UNDERWRITINGAREA1", DbType.Decimal, 0, False, TabUnderwritingAreaTypeUnderwritingArea1)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5TipoAreaSuscripcion", "TabUnderwritingAreaType_Grid3DeleteCommandActionTabUnderwritingAreaType", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function TabUnderwritingAreaType_Grid2SelectCommandActionTabUnderwritingAreaType() As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}
            Dim responseList As New List(Of Object)
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")

                With New DataManagerFactory("Select MAX(TABUNDERWRITINGAREATYPE.UNDERWRITINGAREA) UNDERWRITINGAREA FROM TABUNDERWRITINGAREATYPE TABUNDERWRITINGAREATYPE ", "TabUnderwritingAreaType", "Linked.Underwriting")

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With
            
            If responseList.Count <> 0 Then          
		    
            End If
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5TipoAreaSuscripcion", "TabUnderwritingAreaType_Grid2SelectCommandActionTabUnderwritingAreaType", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function TabUnderwritingAreaTypeTranslator_GridTblDataLoad(filter As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.UnderwritingArea = 0, .RecordStatus = 0, .CreatorUserCode = 0, .CreationDate = Date.MinValue, .UpdateUserCode = 0, .UpdateDate = Date.MinValue, .LanguageId = 0, .Description = String.Empty, .ShortDescription = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)
            
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")

                With New DataManagerFactory("SELECT TABUNDERWRITINGAREATYPE.UNDERWRITINGAREA, TABUNDERWRITINGAREATYPE.RECORDSTATUS, TABUNDERWRITINGAREATYPE.CREATORUSERCODE, TABUNDERWRITINGAREATYPE.CREATIONDATE, TABUNDERWRITINGAREATYPE.UPDATEUSERCODE, TABUNDERWRITINGAREATYPE.UPDATEDATE, TRANSUNDERWRITINGAREATYPE.LANGUAGEID, TRANSUNDERWRITINGAREATYPE.DESCRIPTION, TRANSUNDERWRITINGAREATYPE.SHORTDESCRIPTION FROM TABUNDERWRITINGAREATYPE TABUNDERWRITINGAREATYPE  LEFT JOIN TRANSUNDERWRITINGAREATYPE TRANSUNDERWRITINGAREATYPE ON TRANSUNDERWRITINGAREATYPE.UNDERWRITINGAREA = TABUNDERWRITINGAREATYPE.UNDERWRITINGAREA ", "TabUnderwritingAreaType", "Linked.Underwriting")

                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.UnderwritingArea = itemData.NumericValue("UNDERWRITINGAREA"), .RecordStatus = itemData.NumericValue("RECORDSTATUS"), .CreatorUserCode = itemData.NumericValue("CREATORUSERCODE"), .CreationDate = itemData.DateTimeValue("CREATIONDATE"), .UpdateUserCode = itemData.NumericValue("UPDATEUSERCODE"), .UpdateDate = itemData.DateTimeValue("UPDATEDATE"), .LanguageId = itemData.NumericValue("LANGUAGEID"), .Description = itemData.StringValue("DESCRIPTION"), .ShortDescription = itemData.StringValue("SHORTDESCRIPTION")}
                            
                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With
            
            If responseList.Count <> 0 Then          
		    
            End If
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5TipoAreaSuscripcion", "TabUnderwritingAreaTypeTranslator_GridTblDataLoad", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function TabUnderwritingAreaTypeTranslator_Grid1UpdateCommandActionTransUnderwritingAreaType(DESCRIPTION1 As String, SHORTDESCRIPTION2 As String, UPDATEUSERCODE2 As Decimal, TransUnderwritingAreaTypeUnderwritingArea4 As Decimal, TransUnderwritingAreaTypeLanguageId5 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                With New DataManagerFactory("UPDATE TransUnderwritingAreaType SET DESCRIPTION = @:DESCRIPTION1, SHORTDESCRIPTION = @:SHORTDESCRIPTION2, UPDATEUSERCODE = @:UPDATEUSERCODE2 WHERE TRANSUNDERWRITINGAREATYPE.UNDERWRITINGAREA = @:UNDERWRITINGAREA4 AND TRANSUNDERWRITINGAREATYPE.LANGUAGEID = @:LANGUAGEID5", "TransUnderwritingAreaType", "Linked.Underwriting")
                    .AddParameter("DESCRIPTION1", DbType.AnsiString, 0, (DESCRIPTION1 = String.Empty), DESCRIPTION1)
                    .AddParameter("SHORTDESCRIPTION2", DbType.AnsiString, 0, (SHORTDESCRIPTION2 = String.Empty), SHORTDESCRIPTION2)
                    .AddParameter("UPDATEUSERCODE2", DbType.Decimal, 0, False, UPDATEUSERCODE2)
                    .AddParameter("UNDERWRITINGAREA4", DbType.Decimal, 0, False, TransUnderwritingAreaTypeUnderwritingArea4)
                    .AddParameter("LANGUAGEID5", DbType.Decimal, 0, False, TransUnderwritingAreaTypeLanguageId5)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5TipoAreaSuscripcion", "TabUnderwritingAreaTypeTranslator_Grid1UpdateCommandActionTransUnderwritingAreaType", String.Empty)
            End Try
            
            Return resultData
        End Function


#End Region

#Region "Lookups Web Methods"


        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForRecordStatus(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                 
                Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT TRIM(ETRANRECORDSTATUS.RECORDSTATUS) RECORDSTATUS, ETRANRECORDSTATUS.DESCRIPTION FROM ETRANRECORDSTATUS ETRANRECORDSTATUS WHERE ETRANRECORDSTATUS.LANGUAGEID = {0} AND NOT ETRANRECORDSTATUS.DESCRIPTION IS NULL ORDER BY DESCRIPTION", InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId()), 
                                            "ETranRecordStatus", "Linked.Common")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.StringValue("RecordStatus"),
                                                                                            .Description = item.StringValue("Description")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5TipoAreaSuscripcion", "LookUpForRecordStatus", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForRecordStatusTranslator(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                 
                Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT TRIM(ETRANRECORDSTATUS.RECORDSTATUS) RECORDSTATUS, ETRANRECORDSTATUS.DESCRIPTION FROM ETRANRECORDSTATUS ETRANRECORDSTATUS WHERE ETRANRECORDSTATUS.LANGUAGEID = {0} AND NOT ETRANRECORDSTATUS.DESCRIPTION IS NULL ORDER BY DESCRIPTION", InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId()), 
                                            "ETranRecordStatus", "Linked.Common")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.StringValue("RecordStatus"),
                                                                                            .Description = item.StringValue("Description")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5TipoAreaSuscripcion", "LookUpForRecordStatusTranslator", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForLanguageIdTranslator(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                 
                Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT TRANSLANGUAGE.LANGUAGECODEID, TRANSLANGUAGE.DESCRIPTION FROM TRANSLANGUAGE TRANSLANGUAGE WHERE TRANSLANGUAGE.LANGUAGEID = {0} AND NOT TRANSLANGUAGE.DESCRIPTION IS NULL ORDER BY DESCRIPTION", InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId()), 
                                            "TransLanguage", "Linked.Common")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("LanguageCodeID"),
                                                                                            .Description = item.StringValue("Description")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5TipoAreaSuscripcion", "LookUpForLanguageIdTranslator", String.Empty)
            End Try
                        
            Return result
        End Function

#End Region

#Region "Form Actions"


#End Region





#Region "Common Utilities"

        Private Shared Sub SetDefaultValuesFromQueryString(formData As EntryData)

        End Sub	


#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property TabUnderwritingAreaTypeCollectionUnderwritingArea As System.Double
            <DataMember()> Public Property TabUnderwritingAreaTypeCollectionDescription As System.String
            <DataMember()> Public Property TabUnderwritingAreaTypeCollectionShortDescription As System.String
            <DataMember()> Public Property TabUnderwritingAreaTypeCollectionRecordStatus As System.Double
            <DataMember()> Public Property TabUnderwritingAreaTypeCollectionCreatorUserCode As System.Double
            <DataMember()> Public Property TabUnderwritingAreaTypeCollectionCreationDate As System.DateTime
            <DataMember()> Public Property TabUnderwritingAreaTypeCollectionUpdateUserCode As System.Double
            <DataMember()> Public Property TabUnderwritingAreaTypeCollectionUpdateDate As System.DateTime
            <DataMember()> Public Property TabUnderwritingAreaType_Grid_TabUnderwritingAreaType_Item As List(Of TabUnderwritingAreaType_Grid_TabUnderwritingAreaType_ItemItem)
            <DataMember()> Public Property TabUnderwritingAreaTypeCollectionLanguageId As System.Double
            <DataMember()> Public Property TabUnderwritingAreaTypeTranslator_Grid_TabUnderwritingAreaType_Item As List(Of TabUnderwritingAreaTypeTranslator_Grid_TabUnderwritingAreaType_ItemItem)

        End Class

        <Serializable()>
        <DataContract()>
        Public Class TabUnderwritingAreaType_Grid_TabUnderwritingAreaType_ItemItem

            <DataMember()> Public Property UnderwritingArea As System.Double
            <DataMember()> Public Property Description As System.String
            <DataMember()> Public Property ShortDescription As System.String
            <DataMember()> Public Property RecordStatus As System.Double
            <DataMember()> Public Property CreatorUserCode As System.Double
            <DataMember()> Public Property CreationDate As System.DateTime
            <DataMember()> Public Property UpdateUserCode As System.Double
            <DataMember()> Public Property UpdateDate As System.DateTime

        End Class

        <Serializable()>
        <DataContract()>
        Public Class TabUnderwritingAreaTypeTranslator_Grid_TabUnderwritingAreaType_ItemItem

            <DataMember()> Public Property UnderwritingArea As System.Double
            <DataMember()> Public Property Description As System.String
            <DataMember()> Public Property ShortDescription As System.String
            <DataMember()> Public Property RecordStatus As System.Double
            <DataMember()> Public Property CreatorUserCode As System.Double
            <DataMember()> Public Property CreationDate As System.DateTime
            <DataMember()> Public Property UpdateUserCode As System.Double
            <DataMember()> Public Property UpdateDate As System.DateTime
            <DataMember()> Public Property LanguageId As System.Double

        End Class


#End Region

    End Class

End Namespace

