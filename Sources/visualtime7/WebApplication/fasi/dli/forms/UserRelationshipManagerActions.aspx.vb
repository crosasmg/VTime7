'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Form Designer v7.3.36.1 at 2020-03-18 10:19:34 AM model release 16, Form Generator v1.0.37.37
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Net
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class UserRelationshipManagerActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"

       <WebMethod(EnableSession:=True)>
        Public Shared Function Initialization(id As String, urlid As String, fromid As String) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim instance As New EntryData With {.InstanceFormId = id}
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim currentAction As String = String.Empty
            
            
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                
                If id.IsEmpty AndAlso urlid.IsEmpty Then
                    instance.InstanceFormId = System.Guid.NewGuid().ToString
                  
                
                Else
                    instance.InstanceFormId = id.IfEmpty(urlid)
                End If             
             
                With resultData
                    .Success = True
                    .Data = New With {.Instance = instance, .LookUps = Nothing}
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "UserRelationshipManager", "Initialization", currentAction)
            End Try
            
            Return resultData
        End Function
  

        <WebMethod()>
        Public Shared Function ClientTblDataLoad(filter As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.CustomNumeric = 0, .CustomString = String.Empty, .CustomStringEx = String.Empty, .eMailAddressDefault = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)
            
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")

                With New DataManagerFactory("SELECT DISTINCT USERMEMBER.USERID, USERMEMBER.FIRSTNAME, USERMEMBER.LASTNAME, USERMEMBER.EMAIL FROM USERGROUPS USERGROUPS  JOIN USERMEMBER USERMEMBER ON USERMEMBER.USERID = USERGROUPS.OWNERID ", "USERGROUPS", "Linked.FrontOffice")

                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.CustomNumeric = itemData.NumericValue("USERID"), .CustomString = itemData.StringValue("FIRSTNAME"), .CustomStringEx = itemData.StringValue("LASTNAME"), .eMailAddressDefault = itemData.StringValue("EMAIL")}
                            
                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With
            
            If responseList.Count <> 0 Then          
		    
            End If
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "UserRelationshipManager", "ClientTblDataLoad", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function grid4TblDataLoad(filter As String, USERGROUPSOWNERID1 As Integer, GROUPMEMBERSUSERID2 As Int64) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.RecordStatus = String.Empty, .UserCode = 0, .CreditCardNumber = String.Empty, .CreditCardTypeDescription = String.Empty, .BankCodeDescription = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)
            
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")

                With New DataManagerFactory("SELECT USERGROUPS.DESCRIPTION, USERGROUPS.OWNERID, USERMEMBER.USERID, USERMEMBER.FIRSTNAME, USERMEMBER.LASTNAME, USERMEMBER.EMAIL FROM USERGROUPS USERGROUPS  JOIN GROUPMEMBERS GROUPMEMBERS ON GROUPMEMBERS.GROUPID = USERGROUPS.GROUPID  JOIN USERMEMBER USERMEMBER ON USERMEMBER.USERID = GROUPMEMBERS.USERID  WHERE USERGROUPS.OWNERID = @:OWNERID1 AND GROUPMEMBERS.USERID <> @:USERID2", "USERGROUPS", "Linked.FrontOffice")
                    .AddParameter("OWNERID1", DbType.Int32, 5, False, USERGROUPSOWNERID1)
                    .AddParameter("USERID2", DbType.Int64, 9, False, GROUPMEMBERSUSERID2)

                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.RecordStatus = itemData.StringValue("DESCRIPTION"), .UserCode = itemData.NumericValue("USERID"), .CreditCardNumber = itemData.StringValue("FIRSTNAME"), .CreditCardTypeDescription = itemData.StringValue("LASTNAME"), .BankCodeDescription = itemData.StringValue("EMAIL")}
                            
                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With
            
            If responseList.Count <> 0 Then          
		    
            End If
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "UserRelationshipManager", "grid4TblDataLoad", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function grid4TblDataCount(filter As String, USERGROUPSOWNERID1 As Integer, GROUPMEMBERSUSERID2 As Int64) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                
                Dim recordCount As Integer = 0                

                With New DataManagerFactory("SELECT COUNT(*) FROM (SELECT USERGROUPS.DESCRIPTION, USERGROUPS.OWNERID, USERMEMBER.USERID, USERMEMBER.FIRSTNAME, USERMEMBER.LASTNAME, USERMEMBER.EMAIL FROM USERGROUPS USERGROUPS  JOIN GROUPMEMBERS GROUPMEMBERS ON GROUPMEMBERS.GROUPID = USERGROUPS.GROUPID  JOIN USERMEMBER USERMEMBER ON USERMEMBER.USERID = GROUPMEMBERS.USERID  WHERE USERGROUPS.OWNERID = @:OWNERID1 AND GROUPMEMBERS.USERID <> @:USERID2)", "USERGROUPS", "Linked.FrontOffice")
                    .AddParameter("OWNERID1", DbType.Int32, 5, False, USERGROUPSOWNERID1)
                    .AddParameter("USERID2", DbType.Int64, 9, False, GROUPMEMBERSUSERID2)

                    recordCount = .QueryExecuteScalarToInteger()
                End With

                With resultData
                    .Count = recordCount
                    .Data = recordCount
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "UserRelationshipManager", "grid4TblDataCount", String.Empty)
            End Try
            
            Return resultData
        End Function

#End Region

#Region "Lookups Web Methods"


#End Region

#Region "Form Actions"


#End Region





#Region "Common Utilities"


#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property ClientListCustomNumeric As System.Decimal
            <DataMember()> Public Property ClientListCustomString As System.String
            <DataMember()> Public Property ClientListCustomStringEx As System.String
            <DataMember()> Public Property ClientListeMailAddressDefault As System.String
            <DataMember()> Public Property ClientListCreditCardsUserCode As System.Int32
            <DataMember()> Public Property ClientListCreditCardsCreditCardNumber As System.String
            <DataMember()> Public Property ClientListCreditCardsCreditCardTypeDescription As System.String
            <DataMember()> Public Property ClientListCreditCardsBankCodeDescription As System.String
            <DataMember()> Public Property ClientListCreditCardsRecordStatus As System.String
            <DataMember()> Public Property grid4_CreditCard As List(Of grid4_CreditCardItem)
            <DataMember()> Public Property Client_Client As List(Of Client_ClientItem)

        End Class

        <Serializable()>
        <DataContract()>
        Public Class grid4_CreditCardItem

            <DataMember()> Public Property UserCode As System.Int32
            <DataMember()> Public Property CreditCardNumber As System.String
            <DataMember()> Public Property CreditCardTypeDescription As System.String
            <DataMember()> Public Property BankCodeDescription As System.String
            <DataMember()> Public Property RecordStatus As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Client_ClientItem

            <DataMember()> Public Property CustomNumeric As System.Decimal
            <DataMember()> Public Property CustomString As System.String
            <DataMember()> Public Property CustomStringEx As System.String
            <DataMember()> Public Property eMailAddressDefault As System.String

        End Class


#End Region

    End Class

End Namespace

