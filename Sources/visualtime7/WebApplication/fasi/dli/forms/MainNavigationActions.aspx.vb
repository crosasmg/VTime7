'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Form Designer v7.3.41.1 at 2020-05-12 10:11:51 AM model release 9, Form Generator v1.0.37.59
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Net
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class MainNavigationActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"

       <WebMethod(EnableSession:=True)>
        Public Shared Function Initialization(id As String, urlid As String, fromid As String) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim instance As New EntryData With {.InstanceFormId = id}
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim currentAction As String = String.Empty
            
            
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                
                If id.IsEmpty AndAlso urlid.IsEmpty Then
                    instance.InstanceFormId = System.Guid.NewGuid().ToString
                  
                
                Else
                    instance.InstanceFormId = id.IfEmpty(urlid)
                End If             
             
                With resultData
                    .Success = True
                    .Data = New With {.Instance = instance, .LookUps = LoadLookupsList()}
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "MainNavigation", "Initialization", currentAction)
            End Try
            
            Return resultData
        End Function
  

        Public Shared Function LoadLookupsList() As List(Of InMotionGIT.Common.DataType.LookUpPackage)
            Dim result As New List(Of InMotionGIT.Common.DataType.LookUpPackage)
            
            Dim dataFactory As New DataManagerFactory("PackageExecuteToLookUp", "LOOKUPS", "")
            Dim dataCommand As InMotionGIT.Common.Services.Contracts.DataCommand = Nothing
            
            dataCommand = dataFactory.AddCommand(String.Format(CultureInfo.CurrentCulture, "SELECT  TRIM(NAVIGATION.CODE) CODE, NAVIGATIONDESC.TITLE FROM NAVIGATION NAVIGATION JOIN NAVIGATIONDESC NAVIGATIONDESC ON NAVIGATIONDESC.CODE = NAVIGATION.CODE  WHERE NAVIGATIONDESC.LANGUAGEID = {0} AND  ( NAVIGATION.TYPE = {1} OR NAVIGATION.TYPE = {2} )   AND NOT NAVIGATIONDESC.TITLE IS NULL ORDER BY TITLE", InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId(), 100, 101), New InMotionGIT.Common.DataType.LookUpValue With {.Code = "CODE", .Description = "TITLE"}, "PARENTCODE", "NAVIGATION", "Linked.FrontOffice")

            dataCommand = dataFactory.AddCommand(String.Format(CultureInfo.CurrentCulture, "SELECT  LOOKUP.CODE, LOOKUP.DESCRIPTION FROM LOOKUP LOOKUP  WHERE LOOKUP.LOOKUPID = {0} AND LOOKUP.LANGUAGEID = {1} AND LOOKUP.RECORDSTATUS = {2}  AND NOT LOOKUP.DESCRIPTION IS NULL ORDER BY DESCRIPTION", 2, InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId(), 1), New InMotionGIT.Common.DataType.LookUpValue With {.Code = "CODE", .Description = "DESCRIPTION"}, "RECORDSTATUS", "LOOKUP", "Linked.FrontOffice")

            dataCommand = dataFactory.AddCommand(String.Format(CultureInfo.CurrentCulture, "SELECT  TRIM(NAVIGATION.CODE) CODE, NAVIGATIONDESC.TITLE FROM NAVIGATION NAVIGATION JOIN NAVIGATIONDESC NAVIGATIONDESC ON NAVIGATIONDESC.CODE = NAVIGATION.CODE  WHERE NAVIGATIONDESC.LANGUAGEID = {0} AND  ( NAVIGATION.TYPE = {1} OR NAVIGATION.TYPE = {2} )   AND NOT NAVIGATIONDESC.TITLE IS NULL ORDER BY TITLE", InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId(), 100, 101), New InMotionGIT.Common.DataType.LookUpValue With {.Code = "CODE", .Description = "TITLE"}, "PARENTCODETranslator", "NAVIGATION", "Linked.FrontOffice")

            dataCommand = dataFactory.AddCommand(String.Format(CultureInfo.CurrentCulture, "SELECT  LOOKUP.CODE, LOOKUP.DESCRIPTION FROM LOOKUP LOOKUP  WHERE LOOKUP.LOOKUPID = {0} AND LOOKUP.LANGUAGEID = {1} AND LOOKUP.RECORDSTATUS = {2}  AND NOT LOOKUP.DESCRIPTION IS NULL ORDER BY DESCRIPTION", 2, InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId(), 1), New InMotionGIT.Common.DataType.LookUpValue With {.Code = "CODE", .Description = "DESCRIPTION"}, "RECORDSTATUSTranslator", "LOOKUP", "Linked.FrontOffice")

            dataCommand = dataFactory.AddCommand(String.Format(CultureInfo.CurrentCulture, "SELECT  LOOKUP.CODE, LOOKUP.DESCRIPTION FROM LOOKUP LOOKUP  WHERE LOOKUP.LOOKUPID = {0} AND LOOKUP.LANGUAGEID = {1} AND LOOKUP.RECORDSTATUS = {2}  AND NOT LOOKUP.DESCRIPTION IS NULL ORDER BY DESCRIPTION", 1, InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId(), 1), New InMotionGIT.Common.DataType.LookUpValue With {.Code = "CODE", .Description = "DESCRIPTION"}, "LANGUAGEIDTranslator", "LOOKUP", "Linked.FrontOffice")
            
            result = dataFactory.PackageExecuteToLookUp()
	
            Return result
        End Function



        <WebMethod()>
        Public Shared Function NAVIGATION_GridTblDataLoad(filter As String, NAVIGATIONDESCLANGUAGEID1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Unique_Key = 0, .CODE = String.Empty, .PARENTCODE = String.Empty, .TYPE = 0, .URLPATH = String.Empty, .SMALLIMAGE = String.Empty, .BIGIMAGE = String.Empty, .SEQUENCE = 0, .URLHELP = String.Empty, .MODELID = String.Empty, .ICONCSSCLASS = String.Empty, .RECORDSTATUS = 0, .TITLE = String.Empty, .DESCRIPTION = String.Empty}
            Dim index as integer = 1
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)
            
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")

                With New DataManagerFactory("SELECT NAVIGATION.CODE, NAVIGATION.PARENTCODE, NAVIGATION.TYPE, NAVIGATION.URLPATH, NAVIGATION.SMALLIMAGE, NAVIGATION.BIGIMAGE, NAVIGATION.SEQUENCE, NAVIGATION.URLHELP, NAVIGATION.MODELID, NAVIGATION.ICONCSSCLASS, NAVIGATION.RECORDSTATUS, NAVIGATION.CREATORUSERCODE, NAVIGATION.CREATIONDATE, NAVIGATION.UPDATEUSERCODE, NAVIGATION.UPDATEDATE, NAVIGATIONDESC.TITLE, NAVIGATIONDESC.DESCRIPTION FROM NAVIGATION NAVIGATION  LEFT JOIN NAVIGATIONDESC NAVIGATIONDESC ON NAVIGATIONDESC.CODE = NAVIGATION.CODE  AND NAVIGATIONDESC.LANGUAGEID = @:LANGUAGEID1", "NAVIGATION", "Linked.FrontOffice")
                    .AddParameter("LANGUAGEID1", DbType.AnsiString, 5, (NAVIGATIONDESCLANGUAGEID1 = String.Empty), NAVIGATIONDESCLANGUAGEID1)

                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.Unique_Key = index, .CODE = itemData.StringValue("CODE"), .PARENTCODE = itemData.StringValue("PARENTCODE"), .TYPE = itemData.NumericValue("TYPE"), .URLPATH = itemData.StringValue("URLPATH"), .SMALLIMAGE = itemData.StringValue("SMALLIMAGE"), .BIGIMAGE = itemData.StringValue("BIGIMAGE"), .SEQUENCE = itemData.NumericValue("SEQUENCE"), .URLHELP = itemData.StringValue("URLHELP"), .MODELID = itemData.StringValue("MODELID"), .ICONCSSCLASS = itemData.StringValue("ICONCSSCLASS"), .RECORDSTATUS = itemData.NumericValue("RECORDSTATUS"), .TITLE = itemData.StringValue("TITLE"), .DESCRIPTION = itemData.StringValue("DESCRIPTION")}
                            index += 1

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With
            
            If responseList.Count <> 0 Then          
		    
            End If
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "MainNavigation", "NAVIGATION_GridTblDataLoad", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function NAVIGATION_Grid1InsertCommandActionNAVIGATION(CODE1 As String, PARENTCODE2 As String, TYPE3 As Decimal, URLPATH4 As String, SMALLIMAGE5 As String, BIGIMAGE6 As String, SEQUENCE7 As Decimal, URLHELP8 As String, MODELID9 As String, ICONCSSCLASS10 As String, RECORDSTATUS11 As Decimal, CREATORUSERCODE11 As Decimal, UPDATEUSERCODE13 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                With New DataManagerFactory("INSERT INTO FRONTOFFICE.NAVIGATION (CODE, PARENTCODE, TYPE, URLPATH, SMALLIMAGE, BIGIMAGE, SEQUENCE, URLHELP, MODELID, ICONCSSCLASS, RECORDSTATUS, CREATORUSERCODE, CREATIONDATE, UPDATEUSERCODE, UPDATEDATE) VALUES (@:CODE1, @:PARENTCODE2, @:TYPE3, @:URLPATH4, @:SMALLIMAGE5, @:BIGIMAGE6, @:SEQUENCE7, @:URLHELP8, @:MODELID9, @:ICONCSSCLASS10, @:RECORDSTATUS11, @:CREATORUSERCODE11, @:CREATIONDATE12, @:UPDATEUSERCODE13, @:UPDATEDATE14)", "NAVIGATION", "Linked.FrontOffice")
                    .AddParameter("CODE1", DbType.AnsiStringFixedLength, 0, (CODE1 = String.Empty), CODE1)
                    .AddParameter("PARENTCODE2", DbType.AnsiStringFixedLength, 0, (PARENTCODE2 = String.Empty), PARENTCODE2)
                    .AddParameter("TYPE3", DbType.Decimal, 0, False, TYPE3)
                    .AddParameter("URLPATH4", DbType.AnsiString, 0, (URLPATH4 = String.Empty), URLPATH4)
                    .AddParameter("SMALLIMAGE5", DbType.AnsiString, 0, (SMALLIMAGE5 = String.Empty), SMALLIMAGE5)
                    .AddParameter("BIGIMAGE6", DbType.AnsiString, 0, (BIGIMAGE6 = String.Empty), BIGIMAGE6)
                    .AddParameter("SEQUENCE7", DbType.Decimal, 0, False, SEQUENCE7)
                    .AddParameter("URLHELP8", DbType.AnsiString, 0, (URLHELP8 = String.Empty), URLHELP8)
                    .AddParameter("MODELID9", DbType.AnsiStringFixedLength, 0, (MODELID9 = String.Empty), MODELID9)
                    .AddParameter("ICONCSSCLASS10", DbType.AnsiString, 0, (ICONCSSCLASS10 = String.Empty), ICONCSSCLASS10)
                    .AddParameter("RECORDSTATUS11", DbType.Decimal, 0, False, RECORDSTATUS11)
                    .AddParameter("CREATORUSERCODE11", DbType.Decimal, 0, False, CREATORUSERCODE11)
                    .AddParameter("CREATIONDATE12", DbType.DateTime, 0, False, Date.Now)
                    .AddParameter("UPDATEUSERCODE13", DbType.Decimal, 0, False, UPDATEUSERCODE13)
                    .AddParameter("UPDATEDATE14", DbType.DateTime, 0, False, Date.Now)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "MainNavigation", "NAVIGATION_Grid1InsertCommandActionNAVIGATION", String.Empty)
            End Try
            
            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function NAVIGATION_Grid3InsertCommandActionNAVIGATIONDESC(CODE1 As String, LANGUAGEID1 As Decimal, TITLE3 As String, DESCRIPTION4 As String, CREATORUSERCODE4 As Decimal, UPDATEUSERCODE6 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                    With New DataManagerFactory("INSERT INTO FRONTOFFICE.NAVIGATIONDESC (CODE, LANGUAGEID, TITLE, DESCRIPTION, CREATORUSERCODE, CREATIONDATE, UPDATEUSERCODE, UPDATEDATE) VALUES (@:CODE1, @:LANGUAGEID1, @:TITLE3, @:DESCRIPTION4, @:CREATORUSERCODE4, @:CREATIONDATE5, @:UPDATEUSERCODE6, @:UPDATEDATE7)", "NAVIGATIONDESC", "Linked.FrontOffice")
                    .AddParameter("CODE1", DbType.AnsiStringFixedLength, 0, (CODE1 = String.Empty), CODE1)
                    .AddParameter("LANGUAGEID1", DbType.Decimal, 0, False, LANGUAGEID1)
                    .AddParameter("TITLE3", DbType.AnsiString, 0, (TITLE3 = String.Empty), TITLE3)
                    .AddParameter("DESCRIPTION4", DbType.AnsiString, 0, (DESCRIPTION4 = String.Empty), DESCRIPTION4)
                    .AddParameter("CREATORUSERCODE4", DbType.Decimal, 0, False, CREATORUSERCODE4)
                    .AddParameter("CREATIONDATE5", DbType.DateTime, 0, False, Date.Now)
                    .AddParameter("UPDATEUSERCODE6", DbType.Decimal, 0, False, UPDATEUSERCODE6)
                    .AddParameter("UPDATEDATE7", DbType.DateTime, 0, False, Date.Now)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "MainNavigation", "NAVIGATION_Grid3InsertCommandActionNAVIGATIONDESC", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function NAVIGATION_Grid1UpdateCommandActionNAVIGATION(PARENTCODE1 As String, TYPE2 As Decimal, URLPATH3 As String, SMALLIMAGE4 As String, BIGIMAGE5 As String, SEQUENCE6 As Decimal, URLHELP7 As String, MODELID8 As String, ICONCSSCLASS9 As String, RECORDSTATUS10 As Decimal, UPDATEUSERCODE10 As Decimal, NAVIGATIONCODE13 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                With New DataManagerFactory("UPDATE FRONTOFFICE.NAVIGATION SET PARENTCODE = @:PARENTCODE1, TYPE = @:TYPE2, URLPATH = @:URLPATH3, SMALLIMAGE = @:SMALLIMAGE4, BIGIMAGE = @:BIGIMAGE5, SEQUENCE = @:SEQUENCE6, URLHELP = @:URLHELP7, MODELID = @:MODELID8, ICONCSSCLASS = @:ICONCSSCLASS9, RECORDSTATUS = @:RECORDSTATUS10, UPDATEUSERCODE = @:UPDATEUSERCODE10, UPDATEDATE = @:UPDATEDATE11 WHERE NAVIGATION.CODE = @:CODE13", "NAVIGATION", "Linked.FrontOffice")
                    .AddParameter("PARENTCODE1", DbType.AnsiStringFixedLength, 0, (PARENTCODE1 = String.Empty), PARENTCODE1)
                    .AddParameter("TYPE2", DbType.Decimal, 0, False, TYPE2)
                    .AddParameter("URLPATH3", DbType.AnsiString, 0, (URLPATH3 = String.Empty), URLPATH3)
                    .AddParameter("SMALLIMAGE4", DbType.AnsiString, 0, (SMALLIMAGE4 = String.Empty), SMALLIMAGE4)
                    .AddParameter("BIGIMAGE5", DbType.AnsiString, 0, (BIGIMAGE5 = String.Empty), BIGIMAGE5)
                    .AddParameter("SEQUENCE6", DbType.Decimal, 0, False, SEQUENCE6)
                    .AddParameter("URLHELP7", DbType.AnsiString, 0, (URLHELP7 = String.Empty), URLHELP7)
                    .AddParameter("MODELID8", DbType.AnsiStringFixedLength, 0, (MODELID8 = String.Empty), MODELID8)
                    .AddParameter("ICONCSSCLASS9", DbType.AnsiString, 0, (ICONCSSCLASS9 = String.Empty), ICONCSSCLASS9)
                    .AddParameter("RECORDSTATUS10", DbType.Decimal, 0, False, RECORDSTATUS10)
                    .AddParameter("UPDATEUSERCODE10", DbType.Decimal, 0, False, UPDATEUSERCODE10)
                    .AddParameter("UPDATEDATE11", DbType.DateTime, 0, False, Date.Now)
                    .AddParameter("CODE13", DbType.AnsiStringFixedLength, 0, (NAVIGATIONCODE13 = String.Empty), NAVIGATIONCODE13)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "MainNavigation", "NAVIGATION_Grid1UpdateCommandActionNAVIGATION", String.Empty)
            End Try
            
            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function NAVIGATION_Grid3SelectCommandActionNAVIGATIONDESC(NAVIGATIONDESCCODE1 As String, NAVIGATIONDESCLANGUAGEID2 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}
            Dim responseList As New List(Of Object)
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")

                With New DataManagerFactory("Select COUNT(NAVIGATIONDESC.CODE) CODE FROM NAVIGATIONDESC NAVIGATIONDESC  WHERE NAVIGATIONDESC.CODE = @:CODE1 AND NAVIGATIONDESC.LANGUAGEID = @:LANGUAGEID2", "NAVIGATIONDESC", "Linked.FrontOffice")
                    .AddParameter("CODE1", DbType.AnsiStringFixedLength, 0, (NAVIGATIONDESCCODE1 = String.Empty), NAVIGATIONDESCCODE1)
                    .AddParameter("LANGUAGEID2", DbType.Decimal, 0, False, NAVIGATIONDESCLANGUAGEID2)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With
            
            If responseList.Count <> 0 Then          
		    
            End If
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "MainNavigation", "NAVIGATION_Grid3SelectCommandActionNAVIGATIONDESC", String.Empty)
            End Try
            
            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function NAVIGATION_Grid5InsertCommandActionNAVIGATIONDESC(CODE1 As String, LANGUAGEID1 As Decimal, TITLE3 As String, DESCRIPTION4 As String, CREATORUSERCODE4 As Decimal, UPDATEUSERCODE6 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                        With New DataManagerFactory("INSERT INTO FRONTOFFICE.NAVIGATIONDESC (CODE, LANGUAGEID, TITLE, DESCRIPTION, CREATORUSERCODE, CREATIONDATE, UPDATEUSERCODE, UPDATEDATE) VALUES (@:CODE1, @:LANGUAGEID1, @:TITLE3, @:DESCRIPTION4, @:CREATORUSERCODE4, @:CREATIONDATE5, @:UPDATEUSERCODE6, @:UPDATEDATE7)", "NAVIGATIONDESC", "Linked.FrontOffice")
                    .AddParameter("CODE1", DbType.AnsiStringFixedLength, 0, (CODE1 = String.Empty), CODE1)
                    .AddParameter("LANGUAGEID1", DbType.Decimal, 0, False, LANGUAGEID1)
                    .AddParameter("TITLE3", DbType.AnsiString, 0, (TITLE3 = String.Empty), TITLE3)
                    .AddParameter("DESCRIPTION4", DbType.AnsiString, 0, (DESCRIPTION4 = String.Empty), DESCRIPTION4)
                    .AddParameter("CREATORUSERCODE4", DbType.Decimal, 0, False, CREATORUSERCODE4)
                    .AddParameter("CREATIONDATE5", DbType.DateTime, 0, False, Date.Now)
                    .AddParameter("UPDATEUSERCODE6", DbType.Decimal, 0, False, UPDATEUSERCODE6)
                    .AddParameter("UPDATEDATE7", DbType.DateTime, 0, False, Date.Now)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "MainNavigation", "NAVIGATION_Grid5InsertCommandActionNAVIGATIONDESC", String.Empty)
            End Try
            
            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function NAVIGATION_Grid6UpdateCommandActionNAVIGATIONDESC(TITLE1 As String, DESCRIPTION2 As String, UPDATEUSERCODE2 As Decimal, NAVIGATIONDESCCODE5 As String, NAVIGATIONDESCLANGUAGEID6 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                        With New DataManagerFactory("UPDATE FRONTOFFICE.NAVIGATIONDESC SET TITLE = @:TITLE1, DESCRIPTION = @:DESCRIPTION2, UPDATEUSERCODE = @:UPDATEUSERCODE2, UPDATEDATE = @:UPDATEDATE3 WHERE NAVIGATIONDESC.CODE = @:CODE5 AND NAVIGATIONDESC.LANGUAGEID = @:LANGUAGEID6", "NAVIGATIONDESC", "Linked.FrontOffice")
                    .AddParameter("TITLE1", DbType.AnsiString, 0, (TITLE1 = String.Empty), TITLE1)
                    .AddParameter("DESCRIPTION2", DbType.AnsiString, 0, (DESCRIPTION2 = String.Empty), DESCRIPTION2)
                    .AddParameter("UPDATEUSERCODE2", DbType.Decimal, 0, False, UPDATEUSERCODE2)
                    .AddParameter("UPDATEDATE3", DbType.DateTime, 0, False, Date.Now)
                    .AddParameter("CODE5", DbType.AnsiStringFixedLength, 0, (NAVIGATIONDESCCODE5 = String.Empty), NAVIGATIONDESCCODE5)
                    .AddParameter("LANGUAGEID6", DbType.Decimal, 0, False, NAVIGATIONDESCLANGUAGEID6)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "MainNavigation", "NAVIGATION_Grid6UpdateCommandActionNAVIGATIONDESC", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function NAVIGATION_Grid1DeleteCommandActionNAVIGATIONDESC(NAVIGATIONDESCCODE1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                With New DataManagerFactory("DELETE FROM FRONTOFFICE.NAVIGATIONDESC WHERE NAVIGATIONDESC.CODE = @:CODE1", "NAVIGATIONDESC", "Linked.FrontOffice")
                    .AddParameter("CODE1", DbType.AnsiStringFixedLength, 0, (NAVIGATIONDESCCODE1 = String.Empty), NAVIGATIONDESCCODE1)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "MainNavigation", "NAVIGATION_Grid1DeleteCommandActionNAVIGATIONDESC", String.Empty)
            End Try
            
            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function NAVIGATION_Grid3DeleteCommandActionNAVIGATION(NAVIGATIONCODE1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                    With New DataManagerFactory("DELETE FROM FRONTOFFICE.NAVIGATION WHERE NAVIGATION.CODE = @:CODE1", "NAVIGATION", "Linked.FrontOffice")
                    .AddParameter("CODE1", DbType.AnsiStringFixedLength, 0, (NAVIGATIONCODE1 = String.Empty), NAVIGATIONCODE1)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "MainNavigation", "NAVIGATION_Grid3DeleteCommandActionNAVIGATION", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function NAVIGATIONTranslator_GridTblDataLoad(filter As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Unique_Key = 0, .CODE = String.Empty, .PARENTCODE = String.Empty, .TYPE = 0, .URLPATH = String.Empty, .RECORDSTATUS = 0, .LANGUAGEID = 0, .TITLE = String.Empty, .DESCRIPTION = String.Empty}
            Dim index as integer = 1
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)
            
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")

                With New DataManagerFactory("SELECT NAVIGATION.CODE, NAVIGATION.PARENTCODE, NAVIGATION.TYPE, NAVIGATION.URLPATH, NAVIGATION.SMALLIMAGE, NAVIGATION.BIGIMAGE, NAVIGATION.SEQUENCE, NAVIGATION.URLHELP, NAVIGATION.MODELID, NAVIGATION.ICONCSSCLASS, NAVIGATION.RECORDSTATUS, NAVIGATION.CREATORUSERCODE, NAVIGATION.CREATIONDATE, NAVIGATION.UPDATEUSERCODE, NAVIGATION.UPDATEDATE, NAVIGATIONDESC.LANGUAGEID, NAVIGATIONDESC.TITLE, NAVIGATIONDESC.DESCRIPTION FROM NAVIGATION NAVIGATION  LEFT JOIN NAVIGATIONDESC NAVIGATIONDESC ON NAVIGATIONDESC.CODE = NAVIGATION.CODE ", "NAVIGATION", "Linked.FrontOffice")

                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.Unique_Key = index, .CODE = itemData.StringValue("CODE"), .PARENTCODE = itemData.StringValue("PARENTCODE"), .TYPE = itemData.NumericValue("TYPE"), .URLPATH = itemData.StringValue("URLPATH"), .RECORDSTATUS = itemData.NumericValue("RECORDSTATUS"), .LANGUAGEID = itemData.NumericValue("LANGUAGEID"), .TITLE = itemData.StringValue("TITLE"), .DESCRIPTION = itemData.StringValue("DESCRIPTION")}
                            index += 1

                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With
            
            If responseList.Count <> 0 Then          
		    
            End If
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "MainNavigation", "NAVIGATIONTranslator_GridTblDataLoad", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function NAVIGATIONTranslator_Grid1UpdateCommandActionNAVIGATIONDESC(TITLE1 As String, DESCRIPTION2 As String, UPDATEUSERCODE2 As Decimal, NAVIGATIONDESCCODE5 As String, NAVIGATIONDESCLANGUAGEID6 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                With New DataManagerFactory("UPDATE FRONTOFFICE.NAVIGATIONDESC SET TITLE = @:TITLE1, DESCRIPTION = @:DESCRIPTION2, UPDATEUSERCODE = @:UPDATEUSERCODE2, UPDATEDATE = @:UPDATEDATE3 WHERE NAVIGATIONDESC.CODE = @:CODE5 AND NAVIGATIONDESC.LANGUAGEID = @:LANGUAGEID6", "NAVIGATIONDESC", "Linked.FrontOffice")
                    .AddParameter("TITLE1", DbType.AnsiString, 0, (TITLE1 = String.Empty), TITLE1)
                    .AddParameter("DESCRIPTION2", DbType.AnsiString, 0, (DESCRIPTION2 = String.Empty), DESCRIPTION2)
                    .AddParameter("UPDATEUSERCODE2", DbType.Decimal, 0, False, UPDATEUSERCODE2)
                    .AddParameter("UPDATEDATE3", DbType.DateTime, 0, False, Date.Now)
                    .AddParameter("CODE5", DbType.AnsiStringFixedLength, 0, (NAVIGATIONDESCCODE5 = String.Empty), NAVIGATIONDESCCODE5)
                    .AddParameter("LANGUAGEID6", DbType.Decimal, 0, False, NAVIGATIONDESCLANGUAGEID6)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "MainNavigation", "NAVIGATIONTranslator_Grid1UpdateCommandActionNAVIGATIONDESC", String.Empty)
            End Try
            
            Return resultData
        End Function


#End Region

#Region "Lookups Web Methods"


        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForPARENTCODE(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                 
                Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TRIM(NAVIGATION.CODE) CODE, NAVIGATIONDESC.TITLE FROM NAVIGATION NAVIGATION JOIN NAVIGATIONDESC NAVIGATIONDESC ON NAVIGATIONDESC.CODE = NAVIGATION.CODE  WHERE NAVIGATIONDESC.LANGUAGEID = {0} AND  ( NAVIGATION.TYPE = {1} OR NAVIGATION.TYPE = {2} )   AND NOT NAVIGATIONDESC.TITLE IS NULL ORDER BY TITLE", InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId(), 100, 101), 
                                            "NAVIGATION", "Linked.FrontOffice")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.StringValue("CODE"),
                                                                                            .Description = item.StringValue("TITLE")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "MainNavigation", "LookUpForPARENTCODE", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForRECORDSTATUS(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                 
                Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  LOOKUP.CODE, LOOKUP.DESCRIPTION FROM LOOKUP LOOKUP  WHERE LOOKUP.LOOKUPID = {0} AND LOOKUP.LANGUAGEID = {1} AND LOOKUP.RECORDSTATUS = {2}  AND NOT LOOKUP.DESCRIPTION IS NULL ORDER BY DESCRIPTION", 2, InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId(), 1), 
                                            "LOOKUP", "Linked.FrontOffice")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("CODE"),
                                                                                            .Description = item.StringValue("DESCRIPTION")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "MainNavigation", "LookUpForRECORDSTATUS", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForPARENTCODETranslator(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                 
                Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TRIM(NAVIGATION.CODE) CODE, NAVIGATIONDESC.TITLE FROM NAVIGATION NAVIGATION JOIN NAVIGATIONDESC NAVIGATIONDESC ON NAVIGATIONDESC.CODE = NAVIGATION.CODE  WHERE NAVIGATIONDESC.LANGUAGEID = {0} AND  ( NAVIGATION.TYPE = {1} OR NAVIGATION.TYPE = {2} )   AND NOT NAVIGATIONDESC.TITLE IS NULL ORDER BY TITLE", InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId(), 100, 101), 
                                            "NAVIGATION", "Linked.FrontOffice")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.StringValue("CODE"),
                                                                                            .Description = item.StringValue("TITLE")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "MainNavigation", "LookUpForPARENTCODETranslator", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForRECORDSTATUSTranslator(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                 
                Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  LOOKUP.CODE, LOOKUP.DESCRIPTION FROM LOOKUP LOOKUP  WHERE LOOKUP.LOOKUPID = {0} AND LOOKUP.LANGUAGEID = {1} AND LOOKUP.RECORDSTATUS = {2}  AND NOT LOOKUP.DESCRIPTION IS NULL ORDER BY DESCRIPTION", 2, InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId(), 1), 
                                            "LOOKUP", "Linked.FrontOffice")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("CODE"),
                                                                                            .Description = item.StringValue("DESCRIPTION")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "MainNavigation", "LookUpForRECORDSTATUSTranslator", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForLANGUAGEIDTranslator(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                 
                Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  LOOKUP.CODE, LOOKUP.DESCRIPTION FROM LOOKUP LOOKUP  WHERE LOOKUP.LOOKUPID = {0} AND LOOKUP.LANGUAGEID = {1} AND LOOKUP.RECORDSTATUS = {2}  AND NOT LOOKUP.DESCRIPTION IS NULL ORDER BY DESCRIPTION", 1, InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId(), 1), 
                                            "LOOKUP", "Linked.FrontOffice")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("CODE"),
                                                                                            .Description = item.StringValue("DESCRIPTION")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "MainNavigation", "LookUpForLANGUAGEIDTranslator", String.Empty)
            End Try
                        
            Return result
        End Function

#End Region

#Region "Form Actions"


#End Region





#Region "Common Utilities"

        Private Shared Sub SetDefaultValuesFromQueryString(formData As EntryData)

        End Sub	


#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property NAVIGATIONCollectionTYPE As System.Double
            <DataMember()> Public Property NAVIGATIONCollectionCODE As System.String
            <DataMember()> Public Property NAVIGATIONCollectionPARENTCODE As System.String
            <DataMember()> Public Property NAVIGATIONCollectionTITLE As System.String
            <DataMember()> Public Property NAVIGATIONCollectionDESCRIPTION As System.String
            <DataMember()> Public Property NAVIGATIONCollectionURLPATH As System.String
            <DataMember()> Public Property NAVIGATIONCollectionRECORDSTATUS As System.Double
            <DataMember()> Public Property NAVIGATIONCollectionSMALLIMAGE As System.String
            <DataMember()> Public Property NAVIGATIONCollectionBIGIMAGE As System.String
            <DataMember()> Public Property NAVIGATIONCollectionSEQUENCE As System.Double
            <DataMember()> Public Property NAVIGATIONCollectionURLHELP As System.String
            <DataMember()> Public Property NAVIGATIONCollectionICONCSSCLASS As System.String
            <DataMember()> Public Property NAVIGATIONCollectionMODELID As System.String
            <DataMember()> Public Property NAVIGATION_Grid_NAVIGATION_Item As List(Of NAVIGATION_Grid_NAVIGATION_ItemItem)
            <DataMember()> Public Property NAVIGATIONCollectionLANGUAGEID As System.Double
            <DataMember()> Public Property NAVIGATIONTranslator_Grid_NAVIGATION_Item As List(Of NAVIGATIONTranslator_Grid_NAVIGATION_ItemItem)

        End Class

        <Serializable()>
        <DataContract()>
        Public Class NAVIGATION_Grid_NAVIGATION_ItemItem

            <DataMember()> Public Property Unique_Key As System.Int32
            <DataMember()> Public Property TYPE As System.Double
            <DataMember()> Public Property CODE As System.String
            <DataMember()> Public Property PARENTCODE As System.String
            <DataMember()> Public Property TITLE As System.String
            <DataMember()> Public Property DESCRIPTION As System.String
            <DataMember()> Public Property URLPATH As System.String
            <DataMember()> Public Property RECORDSTATUS As System.Double
            <DataMember()> Public Property SMALLIMAGE As System.String
            <DataMember()> Public Property BIGIMAGE As System.String
            <DataMember()> Public Property SEQUENCE As System.Double
            <DataMember()> Public Property URLHELP As System.String
            <DataMember()> Public Property ICONCSSCLASS As System.String
            <DataMember()> Public Property MODELID As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class NAVIGATIONTranslator_Grid_NAVIGATION_ItemItem

            <DataMember()> Public Property Unique_Key As System.Int32
            <DataMember()> Public Property TYPE As System.Double
            <DataMember()> Public Property CODE As System.String
            <DataMember()> Public Property PARENTCODE As System.String
            <DataMember()> Public Property TITLE As System.String
            <DataMember()> Public Property DESCRIPTION As System.String
            <DataMember()> Public Property URLPATH As System.String
            <DataMember()> Public Property RECORDSTATUS As System.Double
            <DataMember()> Public Property LANGUAGEID As System.Double

        End Class


#End Region

    End Class

End Namespace

