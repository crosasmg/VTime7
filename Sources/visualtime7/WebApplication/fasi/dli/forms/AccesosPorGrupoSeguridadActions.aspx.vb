'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Form Designer v7.3.39.1 at 2020/04/20 01:49:33 PM model release 7, Form Generator v1.0.37.52
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Net
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class AccesosPorGrupoSeguridadActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"

       <WebMethod(EnableSession:=True)>
        Public Shared Function Initialization(id As String, urlid As String, fromid As String) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim instance As New EntryData With {.InstanceFormId = id}
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim currentAction As String = String.Empty
            
            
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                
                If id.IsEmpty AndAlso urlid.IsEmpty Then
                    instance.InstanceFormId = System.Guid.NewGuid().ToString
                  
                
                Else
                    instance.InstanceFormId = id.IfEmpty(urlid)
                End If             
             
                With resultData
                    .Success = True
                    .Data = New With {.Instance = instance, .LookUps = LoadLookupsList()}
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "AccesosPorGrupoSeguridad", "Initialization", currentAction)
            End Try
            
            Return resultData
        End Function
  

        Public Shared Function LoadLookupsList() As List(Of InMotionGIT.Common.DataType.LookUpPackage)
            Dim result As New List(Of InMotionGIT.Common.DataType.LookUpPackage)
            
            Dim dataFactory As New DataManagerFactory("PackageExecuteToLookUp", "LOOKUPS", "")
            Dim dataCommand As InMotionGIT.Common.Services.Contracts.DataCommand = Nothing
            
            dataCommand = dataFactory.AddCommand(String.Format(CultureInfo.CurrentCulture, "SELECT  ACCESO.ID_ACCESO, TRIM(ACCESO.DESCRIPCION) DESCRIPCION FROM ACCESO ACCESO    WHERE NOT ACCESO.DESCRIPCION IS NULL ORDER BY DESCRIPCION", ""), New InMotionGIT.Common.DataType.LookUpValue With {.Code = "Id_Acceso", .Description = "Descripcion"}, "Id_Acceso", "Acceso", "Linked.Seguridad")

            dataCommand = dataFactory.AddCommand(String.Format(CultureInfo.CurrentCulture, "SELECT  GRUPO_ACCESO.ID_GRUPO_ACCESO, TRIM(GRUPO_ACCESO.DESCRIPCION) DESCRIPCION FROM GRUPO_ACCESO GRUPO_ACCESO    WHERE NOT GRUPO_ACCESO.DESCRIPCION IS NULL ORDER BY DESCRIPCION", ""), New InMotionGIT.Common.DataType.LookUpValue With {.Code = "Id_Grupo_Acceso", .Description = "Descripcion"}, "Id_Grupo_Acceso", "Grupo_Acceso", "Linked.Seguridad")
            
            result = dataFactory.PackageExecuteToLookUp()
	
            Return result
        End Function



        <WebMethod()>
        Public Shared Function AccesoXGrupo_GridTblDataLoad(filter As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Id_Acceso = 0, .Id_Grupo_Acceso = 0}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)
            
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")

                With New DataManagerFactory("SELECT ACCESOXGRUPO.ID_ACCESO, ACCESOXGRUPO.ID_GRUPO_ACCESO FROM ACCESOXGRUPO ACCESOXGRUPO ", "AccesoXGrupo", "Linked.Seguridad")

                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.Id_Acceso = itemData.NumericValue("ID_ACCESO"), .Id_Grupo_Acceso = itemData.NumericValue("ID_GRUPO_ACCESO")}
                            
                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With
            
            If responseList.Count <> 0 Then          
		    
            End If
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "AccesosPorGrupoSeguridad", "AccesoXGrupo_GridTblDataLoad", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function AccesoXGrupo_Grid1InsertCommandActionAccesoXGrupo(ID_ACCESO1 As Decimal, ID_GRUPO_ACCESO2 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                With New DataManagerFactory("INSERT INTO AccesoXGrupo (ID_ACCESO, ID_GRUPO_ACCESO) VALUES (@:ID_ACCESO1, @:ID_GRUPO_ACCESO2)", "AccesoXGrupo", "Linked.Seguridad")
                    .AddParameter("ID_ACCESO1", DbType.Decimal, 0, False, ID_ACCESO1)
                    .AddParameter("ID_GRUPO_ACCESO2", DbType.Decimal, 0, False, ID_GRUPO_ACCESO2)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "AccesosPorGrupoSeguridad", "AccesoXGrupo_Grid1InsertCommandActionAccesoXGrupo", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function AccesoXGrupo_Grid1UpdateCommandActionAccesoXGrupo(ID_ACCESO1 As Decimal, ID_GRUPO_ACCESO2 As Decimal, AccesoXGrupoIdAcceso3 As Decimal, AccesoXGrupoIdGrupoAcceso4 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                With New DataManagerFactory("UPDATE Seguridad.AccesoXGrupo SET ID_ACCESO = @:ID_ACCESO1, ID_GRUPO_ACCESO = @:ID_GRUPO_ACCESO2 WHERE ACCESOXGRUPO.ID_ACCESO = @:ID_ACCESO3 AND ACCESOXGRUPO.ID_GRUPO_ACCESO = @:ID_GRUPO_ACCESO4", "AccesoXGrupo", "Linked.Seguridad")
                    .AddParameter("ID_ACCESO1", DbType.Decimal, 10, False, ID_ACCESO1)
                    .AddParameter("ID_GRUPO_ACCESO2", DbType.Decimal, 10, False, ID_GRUPO_ACCESO2)
                    .AddParameter("ID_ACCESO3", DbType.Decimal, 0, False, AccesoXGrupoIdAcceso3)
                    .AddParameter("ID_GRUPO_ACCESO4", DbType.Decimal, 0, False, AccesoXGrupoIdGrupoAcceso4)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "AccesosPorGrupoSeguridad", "AccesoXGrupo_Grid1UpdateCommandActionAccesoXGrupo", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function AccesoXGrupo_Grid1DeleteCommandActionAccesoXGrupo(AccesoXGrupoIdAcceso1 As Decimal, AccesoXGrupoIdGrupoAcceso2 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                With New DataManagerFactory("DELETE FROM AccesoXGrupo WHERE ACCESOXGRUPO.ID_ACCESO = @:ID_ACCESO1 AND ACCESOXGRUPO.ID_GRUPO_ACCESO = @:ID_GRUPO_ACCESO2", "AccesoXGrupo", "Linked.Seguridad")
                    .AddParameter("ID_ACCESO1", DbType.Decimal, 0, False, AccesoXGrupoIdAcceso1)
                    .AddParameter("ID_GRUPO_ACCESO2", DbType.Decimal, 0, False, AccesoXGrupoIdGrupoAcceso2)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "AccesosPorGrupoSeguridad", "AccesoXGrupo_Grid1DeleteCommandActionAccesoXGrupo", String.Empty)
            End Try
            
            Return resultData
        End Function


#End Region

#Region "Lookups Web Methods"


        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForId_Acceso(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                 
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  ACCESO.ID_ACCESO, TRIM(ACCESO.DESCRIPCION) DESCRIPCION FROM ACCESO ACCESO    WHERE NOT ACCESO.DESCRIPCION IS NULL ORDER BY DESCRIPCION", ""), 
                                            "Acceso", "Linked.Seguridad")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("Id_Acceso"),
                                                                                            .Description = item.StringValue("Descripcion")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "AccesosPorGrupoSeguridad", "LookUpForId_Acceso", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForId_Grupo_Acceso(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                 
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  GRUPO_ACCESO.ID_GRUPO_ACCESO, TRIM(GRUPO_ACCESO.DESCRIPCION) DESCRIPCION FROM GRUPO_ACCESO GRUPO_ACCESO    WHERE NOT GRUPO_ACCESO.DESCRIPCION IS NULL ORDER BY DESCRIPCION", ""), 
                                            "Grupo_Acceso", "Linked.Seguridad")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("Id_Grupo_Acceso"),
                                                                                            .Description = item.StringValue("Descripcion")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "AccesosPorGrupoSeguridad", "LookUpForId_Grupo_Acceso", String.Empty)
            End Try
                        
            Return result
        End Function

#End Region

#Region "Form Actions"


#End Region





#Region "Common Utilities"

        Private Shared Sub SetDefaultValuesFromQueryString(formData As EntryData)

        End Sub	


#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property AccesoXGrupoCollectionId_Acceso As System.Double
            <DataMember()> Public Property AccesoXGrupoCollectionId_Grupo_Acceso As System.Double
            <DataMember()> Public Property AccesoXGrupo_Grid_AccesoXGrupo_Item As List(Of AccesoXGrupo_Grid_AccesoXGrupo_ItemItem)

        End Class

        <Serializable()>
        <DataContract()>
        Public Class AccesoXGrupo_Grid_AccesoXGrupo_ItemItem

            <DataMember()> Public Property Id_Acceso As System.Double
            <DataMember()> Public Property Id_Grupo_Acceso As System.Double

        End Class


#End Region

    End Class

End Namespace

