'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Form Designer v7.3.36.1 at 2020-03-18 09:23:23 AM model release 2, Form Generator v1.0.37.37
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Net
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class CustomMenuActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"

       <WebMethod(EnableSession:=True)>
        Public Shared Function Initialization(id As String, urlid As String, fromid As String) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim instance As New EntryData With {.InstanceFormId = id}
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim currentAction As String = String.Empty
            
            
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                
                If id.IsEmpty AndAlso urlid.IsEmpty Then
                    instance.InstanceFormId = System.Guid.NewGuid().ToString
                  
                
                Else
                    instance.InstanceFormId = id.IfEmpty(urlid)
                End If             
             
                With resultData
                    .Success = True
                    .Data = New With {.Instance = instance, .LookUps = LoadLookupsList()}
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "CustomMenu", "Initialization", currentAction)
            End Try
            
            Return resultData
        End Function
  

        Public Shared Function LoadLookupsList() As List(Of InMotionGIT.Common.DataType.LookUpPackage)
            Dim result As New List(Of InMotionGIT.Common.DataType.LookUpPackage)
            
            Dim dataFactory As New DataManagerFactory("PackageExecuteToLookUp", "LOOKUPS", "")
            Dim dataCommand As InMotionGIT.Common.Services.Contracts.DataCommand = Nothing
            
            dataCommand = dataFactory.AddCommand(String.Format(CultureInfo.CurrentCulture, "SELECT  TRIM(WINDOWS.SCODISPL) SCODISPL, TRIM(WINDOWS.SDESCRIPT) SDESCRIPT FROM WINDOWS WINDOWS  WHERE WINDOWS.SSTATREGT = '{0}' AND WINDOWS.SDIRECTGO = '{1}' AND  ( WINDOWS.NWINDOWTY <> {2} AND WINDOWS.NWINDOWTY <> {3} )   ORDER BY WINDOWS.SDESCRIPT ASC", "1", "1", 11, 8), New InMotionGIT.Common.DataType.LookUpValue With {.Code = "SCODISPL", .Description = "SDESCRIPT"}, "Codispl", "WINDOWS", "Linked.LatCombined")
            
            result = dataFactory.PackageExecuteToLookUp()
	
            Return result
        End Function


        <WebMethod()>
        Public Shared Function UserCustomMenu_GridTblDataLoad(filter As String, UserCustomMenuUserID1 As Int64) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Codispl = String.Empty, .OptionOrder = 0}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)
            
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")

                With New DataManagerFactory("SELECT USERCUSTOMMENU.USERID, USERCUSTOMMENU.CODISPL, USERCUSTOMMENU.OPTIONORDER FROM USERCUSTOMMENU USERCUSTOMMENU  WHERE USERCUSTOMMENU.USERID = @:USERID1", "UserCustomMenu", "Linked.FrontOffice")
                    .AddParameter("USERID1", DbType.Int64, 9, False, UserCustomMenuUserID1)

                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.Codispl = itemData.StringValue("CODISPL"), .OptionOrder = itemData.NumericValue("OPTIONORDER")}
                            
                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With
            
            If responseList.Count <> 0 Then          
		    
            End If
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "CustomMenu", "UserCustomMenu_GridTblDataLoad", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function UserCustomMenu_Grid1InsertCommandActionUserCustomMenu(USERID0 As Decimal, CODISPL2 As String, OPTIONORDER3 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                With New DataManagerFactory("INSERT INTO FRONTOFFICE.UserCustomMenu (USERID, CODISPL, OPTIONORDER) VALUES (@:USERID0, @:CODISPL2, @:OPTIONORDER3)", "UserCustomMenu", "Linked.FrontOffice")
                    .AddParameter("USERID0", DbType.Decimal, 9, False, USERID0)
                    .AddParameter("CODISPL2", DbType.AnsiString, 10, (CODISPL2 = String.Empty), CODISPL2)
                    .AddParameter("OPTIONORDER3", DbType.Decimal, 3, False, OPTIONORDER3)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "CustomMenu", "UserCustomMenu_Grid1InsertCommandActionUserCustomMenu", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function UserCustomMenu_Grid1UpdateCommandActionUserCustomMenu(OPTIONORDER1 As Decimal, UserCustomMenuUserID2 As Decimal, UserCustomMenuCodispl3 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                With New DataManagerFactory("UPDATE FRONTOFFICE.UserCustomMenu SET OPTIONORDER = @:OPTIONORDER1 WHERE USERCUSTOMMENU.USERID = @:USERID2 AND USERCUSTOMMENU.CODISPL = @:CODISPL3", "UserCustomMenu", "Linked.FrontOffice")
                    .AddParameter("OPTIONORDER1", DbType.Decimal, 3, False, OPTIONORDER1)
                    .AddParameter("USERID2", DbType.Decimal, 0, False, UserCustomMenuUserID2)
                    .AddParameter("CODISPL3", DbType.AnsiString, 0, (UserCustomMenuCodispl3 = String.Empty), UserCustomMenuCodispl3)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "CustomMenu", "UserCustomMenu_Grid1UpdateCommandActionUserCustomMenu", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function UserCustomMenu_Grid1DeleteCommandActionUserCustomMenu(UserCustomMenuUserID1 As Decimal, UserCustomMenuCodispl2 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                With New DataManagerFactory("DELETE FROM FRONTOFFICE.UserCustomMenu WHERE USERCUSTOMMENU.USERID = @:USERID1 AND USERCUSTOMMENU.CODISPL = @:CODISPL2", "UserCustomMenu", "Linked.FrontOffice")
                    .AddParameter("USERID1", DbType.Decimal, 0, False, UserCustomMenuUserID1)
                    .AddParameter("CODISPL2", DbType.AnsiString, 0, (UserCustomMenuCodispl2 = String.Empty), UserCustomMenuCodispl2)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "CustomMenu", "UserCustomMenu_Grid1DeleteCommandActionUserCustomMenu", String.Empty)
            End Try
            
            Return resultData
        End Function


#End Region

#Region "Lookups Web Methods"


        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForCodispl(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                 
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TRIM(WINDOWS.SCODISPL) SCODISPL, TRIM(WINDOWS.SDESCRIPT) SDESCRIPT FROM WINDOWS WINDOWS  WHERE WINDOWS.SSTATREGT = '{0}' AND WINDOWS.SDIRECTGO = '{1}' AND  ( WINDOWS.NWINDOWTY <> {2} AND WINDOWS.NWINDOWTY <> {3} )   ORDER BY WINDOWS.SDESCRIPT ASC", "1", "1", 11, 8), 
                                            "WINDOWS", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.StringValue("SCODISPL"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "CustomMenu", "LookUpForCodispl", String.Empty)
            End Try
                        
            Return result
        End Function

#End Region

#Region "Form Actions"


#End Region





#Region "Common Utilities"

        Private Shared Sub SetDefaultValuesFromQueryString(formData As EntryData)

        End Sub	


#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property UserCustomMenuCollectionCodispl As System.String
            <DataMember()> Public Property UserCustomMenuCollectionOptionOrder As System.Double
            <DataMember()> Public Property UserCustomMenu_Grid_UserCustomMenu_Item As List(Of UserCustomMenu_Grid_UserCustomMenu_ItemItem)

        End Class

        <Serializable()>
        <DataContract()>
        Public Class UserCustomMenu_Grid_UserCustomMenu_ItemItem

            <DataMember()> Public Property Codispl As System.String
            <DataMember()> Public Property OptionOrder As System.Double

        End Class


#End Region

    End Class

End Namespace

