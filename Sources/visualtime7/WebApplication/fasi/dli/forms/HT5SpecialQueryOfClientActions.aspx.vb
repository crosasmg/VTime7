'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Form Designer v7.3.45.1 at 2020-05-27 01:07:29 p. m. model release 6, Form Generator v1.0.37.67
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Net
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class HT5SpecialQueryOfClientActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"

       <WebMethod(EnableSession:=True)>
        Public Shared Function Initialization(id As String, urlid As String, fromid As String) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim instance As New EntryData With {.InstanceFormId = id}
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim currentAction As String = String.Empty
            
            Dim HT5SpecialQueryOfClientParametersInstance As HT5SpecialQueryOfClientParameters = Nothing

            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                
                If id.IsEmpty AndAlso urlid.IsEmpty Then
                    instance.InstanceFormId = System.Guid.NewGuid().ToString
                    
                    With instance

                    End With                
                    
                    HT5SpecialQueryOfClientParametersInstance = EntryDataToClass(HT5SpecialQueryOfClientParametersInstance, instance)
                    SetDefaultValuesFromQueryString(HT5SpecialQueryOfClientParametersInstance)
                    
                    If fromid.IsNotEmpty Then
                        GetTransferParameters(HT5SpecialQueryOfClientParametersInstance, fromid)
                        ValidateParametersInstance(HT5SpecialQueryOfClientParametersInstance)
                    End If
                Else       
                    instance.InstanceFormId = id.IfEmpty(urlid)
                    HT5SpecialQueryOfClientParametersInstance = RetrieveFormInformationFromSession(instance.InstanceFormId)
         
                    If IsNothing(HT5SpecialQueryOfClientParametersInstance) then
                        HT5SpecialQueryOfClientParametersInstance = EntryDataToClass(HT5SpecialQueryOfClientParametersInstance, instance)                        
                    End If
                    
                    SetDefaultValuesFromQueryString(HT5SpecialQueryOfClientParametersInstance)
                End If

                HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath"))) = String.Empty

                If id.IsEmpty AndAlso urlid.IsEmpty Then
                    Form_Initialization(currentAction, HT5SpecialQueryOfClientParametersInstance, resultData)
                End If


                instance = ClassToEntryData(instance, HT5SpecialQueryOfClientParametersInstance) 
		        StoreFormInformationOnSession(HT5SpecialQueryOfClientParametersInstance)
                
                                
                With resultData
                    .Success = True
                    .Data = New With {.Instance = instance, .LookUps = Nothing}
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "HT5SpecialQueryOfClient", "Initialization", currentAction)
            End Try
            
            Return resultData
        End Function
  

        <WebMethod(EnableSession:=True)>
        Public Shared Function ClientIDChange(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5SpecialQueryOfClientParametersInstance As HT5SpecialQueryOfClientParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                HT5SpecialQueryOfClientParametersInstance = RetrieveFormInformationFromSession(instance.InstanceFormId)
                
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("ClientIDClick")
                HT5SpecialQueryOfClientParametersInstance = EntryDataToClass(HT5SpecialQueryOfClientParametersInstance, instance)
                currentAction = SessionTrace("1. Call 'ClienteH5' query with transferring parameters")
                                HttpContext.Current.Session(HT5SpecialQueryOfClientParametersInstance.InternalId) = HT5SpecialQueryOfClientParametersInstance
                HttpContext.Current.Session("fromid") = HT5SpecialQueryOfClientParametersInstance.InternalId
    
                With resultData
                    .AddRedirect(String.Format(CultureInfo.InvariantCulture, "/fasi/dli/queries/ConsultadelainformacióndeunclientePopup.html?Client={0}&accept={1}&notheader={2}",HT5SpecialQueryOfClientParametersInstance.ClientID, "true", "true"))
                End With

                instance = ClassToEntryData(instance, HT5SpecialQueryOfClientParametersInstance)
                StoreFormInformationOnSession(HT5SpecialQueryOfClientParametersInstance)
                
                With resultData
                    .Success = True
                    .Data = New With {.Instance = instance, .LookUps = Nothing}
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "HT5SpecialQueryOfClient", "ClientIDChange", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function button1Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5SpecialQueryOfClientParametersInstance As HT5SpecialQueryOfClientParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                HT5SpecialQueryOfClientParametersInstance = RetrieveFormInformationFromSession(instance.InstanceFormId)
                
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button1Click")
                HT5SpecialQueryOfClientParametersInstance = EntryDataToClass(HT5SpecialQueryOfClientParametersInstance, instance)
                currentAction = SessionTrace("1. HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord = 0...")
                currentAction = SessionTrace("1.1. HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord = 0...")

                HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord = 0

                currentAction = SessionTrace("2. HT5SpecialQueryOfClientParametersInstance.ClientCollection = nothing...")
                currentAction = SessionTrace("2.1. HT5SpecialQueryOfClientParametersInstance.ClientCollection = nothing...")
                                If IsNothing(HT5SpecialQueryOfClientParametersInstance.ClientCollection) Then
                    HT5SpecialQueryOfClientParametersInstance.ClientCollection = New InMotionGIT.Client.Entity.Contracts.ClientCollection
                End If

                HT5SpecialQueryOfClientParametersInstance.ClientCollection = nothing

                currentAction = SessionTrace("3. If HT5SpecialQueryOfClientParametersInstance.TipoDeBusqueda = 1 Then")
                If HT5SpecialQueryOfClientParametersInstance.TipoDeBusqueda = 1 Then

                    currentAction = SessionTrace("4. SELECT ADDRESS.NRECOWNER, ADDRESS.SCLIENT, ADDRESS.SE_MAIL FROM ADDRESS... WHERE ADDRESS.NRECOWNER = 2 AND ADDRESS.SE_MAIL = HT5SpecialQueryOfClientParametersInstance.eMail AND ADDRESS.SRECTYPE = 1 )")
                    isFoundData = False
                                               With New DataManagerFactory("SELECT DISTINCT COUNT(ADDRESS.SE_MAIL) SE_MAIL FROM ADDRESS ADDRESS  WHERE ADDRESS.NRECOWNER = 2 AND ADDRESS.SE_MAIL = @:ADDRESSSE_MAIL1 AND ADDRESS.SRECTYPE = '1'", "ADDRESS", "Linked.LatCombined")
.AddParameter("ADDRESSSE_MAIL1", DbType.AnsiStringFixedLength, 60, (HT5SpecialQueryOfClientParametersInstance.eMail = String.Empty), HT5SpecialQueryOfClientParametersInstance.eMail)
 
            HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord = .QueryExecuteScalarToInteger()  
        End With

                    currentAction = SessionTrace("5. If HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord Not Is Null Or Not Empty  AND HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord > 0 Then")
                    If Not IsNothing(HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord) AndAlso HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord > 0 Then

                        currentAction = SessionTrace("6. SELECT ADDRESS.NRECOWNER, ADDRESS.SCLIENT, ADDRESS.SE_MAIL FROM ADDRESS... WHERE ADDRESS.NRECOWNER = 2 AND ADDRESS.SE_MAIL = HT5SpecialQueryOfClientParametersInstance.eMail AND ADDRESS.SRECTYPE = 1 )")
                        isFoundData = False
                               With New DataManagerFactory("SELECT ADDRESS.NRECOWNER, ADDRESS.SCLIENT, ADDRESS.SE_MAIL, ADDRESS.SRECTYPE, CLIENT.SCLIENAME FROM ADDRESS ADDRESS  JOIN CLIENT CLIENT ON CLIENT.SCLIENT = ADDRESS.SCLIENT  WHERE ADDRESS.NRECOWNER = 2 AND ADDRESS.SE_MAIL = @:ADDRESSSE_MAIL1 AND ADDRESS.SRECTYPE = '1'", "ADDRESS", "Linked.LatCombined")
.AddParameter("ADDRESSSE_MAIL1", DbType.AnsiStringFixedLength, 60, (HT5SpecialQueryOfClientParametersInstance.eMail = String.Empty), HT5SpecialQueryOfClientParametersInstance.eMail)
 
            selectDataTableItem = .QueryExecuteToTable(True)  
        End With
                        With selectDataTableItem
                                If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                                    isFoundData = True 
                                    HT5SpecialQueryOfClientParametersInstance.ClientCollection = New InMotionGIT.Client.Entity.Contracts.ClientCollection 
                                    Dim newItem As InMotionGIT.Client.Entity.Contracts.Client 
                                    For Each itemData As DataRow In .Rows
                                         newItem = New InMotionGIT.Client.Entity.Contracts.Client
                        newItem.ClientID = itemData.StringValue("SCLIENT") 
                        newItem.CompleteClientName = itemData.StringValue("SCLIENAME") 

                                          HT5SpecialQueryOfClientParametersInstance.ClientCollection.Add(newItem)
                                    Next
                                End If
                        End With

                            End If
                        End If
                currentAction = SessionTrace("7. If HT5SpecialQueryOfClientParametersInstance.TipoDeBusqueda = 2 Then")
                If HT5SpecialQueryOfClientParametersInstance.TipoDeBusqueda = 2 Then

                    currentAction = SessionTrace("8. SELECT BK_ACCOUNT.SACCOUNT FROM BK_ACCOUNT... WHERE BK_ACCOUNT.SACCOUNT = HT5SpecialQueryOfClientParametersInstance.ClientBankAccount.BankAccount )")
                    isFoundData = False
                                               With New DataManagerFactory("SELECT DISTINCT COUNT(BK_ACCOUNT.SACCOUNT) SACCOUNT FROM BK_ACCOUNT BK_ACCOUNT  WHERE BK_ACCOUNT.SACCOUNT = @:BK_ACCOUNTSACCOUNT0", "BK_ACCOUNT", "Linked.LatCombined")
.AddParameter("BK_ACCOUNTSACCOUNT0", DbType.AnsiStringFixedLength, 25, (HT5SpecialQueryOfClientParametersInstance.ClientBankAccount.BankAccount = String.Empty), HT5SpecialQueryOfClientParametersInstance.ClientBankAccount.BankAccount)
 
            HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord = .QueryExecuteScalarToInteger()  
        End With

                    currentAction = SessionTrace("9. If HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord Not Is Null Or Not Empty  AND HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord > 0 Then")
                    If Not IsNothing(HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord) AndAlso HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord > 0 Then

                        currentAction = SessionTrace("10. SELECT BK_ACCOUNT.SACCOUNT, BK_ACCOUNT.SCLIENT FROM BK_ACCOUNT... WHERE BK_ACCOUNT.SACCOUNT = HT5SpecialQueryOfClientParametersInstance.ClientBankAccount.BankAccount )")
                        isFoundData = False
                               With New DataManagerFactory("SELECT BK_ACCOUNT.SACCOUNT, BK_ACCOUNT.SCLIENT, CLIENT.SCLIENAME FROM BK_ACCOUNT BK_ACCOUNT  JOIN CLIENT CLIENT ON CLIENT.SCLIENT = BK_ACCOUNT.SCLIENT  WHERE BK_ACCOUNT.SACCOUNT = @:BK_ACCOUNTSACCOUNT0", "BK_ACCOUNT", "Linked.LatCombined")
.AddParameter("BK_ACCOUNTSACCOUNT0", DbType.AnsiStringFixedLength, 25, (HT5SpecialQueryOfClientParametersInstance.ClientBankAccount.BankAccount = String.Empty), HT5SpecialQueryOfClientParametersInstance.ClientBankAccount.BankAccount)
 
            selectDataTableItem = .QueryExecuteToTable(True)  
        End With
                        With selectDataTableItem
                                If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                                    isFoundData = True 
                                    HT5SpecialQueryOfClientParametersInstance.ClientCollection = New InMotionGIT.Client.Entity.Contracts.ClientCollection 
                                    Dim newItem As InMotionGIT.Client.Entity.Contracts.Client 
                                    For Each itemData As DataRow In .Rows
                                         newItem = New InMotionGIT.Client.Entity.Contracts.Client
                        newItem.eMailAddressDefault = itemData.StringValue("SACCOUNT") 
                        newItem.ClientID = itemData.StringValue("SCLIENT") 
                        newItem.CompleteClientName = itemData.StringValue("SCLIENAME") 

                                          HT5SpecialQueryOfClientParametersInstance.ClientCollection.Add(newItem)
                                    Next
                                End If
                        End With

                                    End If
                                End If
                currentAction = SessionTrace("11. If HT5SpecialQueryOfClientParametersInstance.TipoDeBusqueda = 3 Then")
                If HT5SpecialQueryOfClientParametersInstance.TipoDeBusqueda = 3 Then

                    currentAction = SessionTrace("12. SELECT CRED_CARD.SCREDI_CARD FROM CRED_CARD... WHERE CRED_CARD.SCREDI_CARD = HT5SpecialQueryOfClientParametersInstance.CreditCard.CreditCardNumber )")
                    isFoundData = False
                                               With New DataManagerFactory("SELECT DISTINCT COUNT(CRED_CARD.SCREDI_CARD) SCREDI_CARD FROM CRED_CARD CRED_CARD  WHERE CRED_CARD.SCREDI_CARD = @:CRED_CARDSCREDI_CARD0", "CRED_CARD", "Linked.LatCombined")
.AddParameter("CRED_CARDSCREDI_CARD0", DbType.AnsiStringFixedLength, 20, (HT5SpecialQueryOfClientParametersInstance.CreditCard.CreditCardNumber = String.Empty), HT5SpecialQueryOfClientParametersInstance.CreditCard.CreditCardNumber)
 
            HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord = .QueryExecuteScalarToInteger()  
        End With

                    currentAction = SessionTrace("13. If HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord Not Is Null Or Not Empty  AND HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord > 0 Then")
                    If Not IsNothing(HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord) AndAlso HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord > 0 Then

                        currentAction = SessionTrace("14. SELECT CRED_CARD.SCREDI_CARD FROM CRED_CARD... WHERE CRED_CARD.SCREDI_CARD = HT5SpecialQueryOfClientParametersInstance.CreditCard.CreditCardNumber )")
                        isFoundData = False
                               With New DataManagerFactory("SELECT CRED_CARD.SCREDI_CARD, CLIENT.SCLIENT, CLIENT.SCLIENAME FROM CRED_CARD CRED_CARD  JOIN CLIENT CLIENT ON CLIENT.SCLIENT = CRED_CARD.SCLIENT  WHERE CRED_CARD.SCREDI_CARD = @:CRED_CARDSCREDI_CARD0", "CRED_CARD", "Linked.LatCombined")
.AddParameter("CRED_CARDSCREDI_CARD0", DbType.AnsiStringFixedLength, 20, (HT5SpecialQueryOfClientParametersInstance.CreditCard.CreditCardNumber = String.Empty), HT5SpecialQueryOfClientParametersInstance.CreditCard.CreditCardNumber)
 
            selectDataTableItem = .QueryExecuteToTable(True)  
        End With
                        With selectDataTableItem
                                If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                                    isFoundData = True 
                                    HT5SpecialQueryOfClientParametersInstance.ClientCollection = New InMotionGIT.Client.Entity.Contracts.ClientCollection 
                                    Dim newItem As InMotionGIT.Client.Entity.Contracts.Client 
                                    For Each itemData As DataRow In .Rows
                                         newItem = New InMotionGIT.Client.Entity.Contracts.Client
                        newItem.eMailAddressDefault = itemData.StringValue("SCREDI_CARD") 
                        newItem.ClientID = itemData.StringValue("SCLIENT") 
                        newItem.CompleteClientName = itemData.StringValue("SCLIENAME") 

                                          HT5SpecialQueryOfClientParametersInstance.ClientCollection.Add(newItem)
                                    Next
                                End If
                        End With

                                            End If
                                        End If
                currentAction = SessionTrace("15. If HT5SpecialQueryOfClientParametersInstance.TipoDeBusqueda = 4 Then")
                If HT5SpecialQueryOfClientParametersInstance.TipoDeBusqueda = 4 Then

                    currentAction = SessionTrace("16. SELECT CLIENT.SCLIENT, CLIENT.DBIRTHDAT, CLIENT.SBLOCKADE FROM CLIENT... WHERE CLIENT.DBIRTHDAT = HT5SpecialQueryOfClientParametersInstance.Client.BirthDate AND CLIENT.SBLOCKADE Is Empty  OR CLIENT.SBLOCKADE = 2 )")
                    isFoundData = False
                                               With New DataManagerFactory("SELECT DISTINCT COUNT(CLIENT.SCLIENT) SCLIENT FROM CLIENT CLIENT  WHERE CLIENT.DBIRTHDAT = @:CLIENTDBIRTHDAT0 AND (CLIENT.SBLOCKADE IS NULL OR CLIENT.SBLOCKADE = '2')", "CLIENT", "Linked.LatCombined")
.AddParameter("CLIENTDBIRTHDAT0", DbType.DateTime, 0, (HT5SpecialQueryOfClientParametersInstance.Client.BirthDate = Date.MinValue), HT5SpecialQueryOfClientParametersInstance.Client.BirthDate)
 
            HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord = .QueryExecuteScalarToInteger()  
        End With

                    currentAction = SessionTrace("17. If HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord Not Is Null Or Not Empty  AND HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord > 0 Then")
                    If Not IsNothing(HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord) AndAlso HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord > 0 Then

                        currentAction = SessionTrace("18. SELECT CLIENT.SCLIENT, CLIENT.DBIRTHDAT, CLIENT.SBLOCKADE FROM CLIENT... WHERE CLIENT.DBIRTHDAT = HT5SpecialQueryOfClientParametersInstance.Client.BirthDate AND CLIENT.SBLOCKADE Is Empty  OR CLIENT.SBLOCKADE = 2 )")
                        isFoundData = False
                               With New DataManagerFactory("SELECT CLIENT.SCLIENT, CLIENT.DBIRTHDAT, CLIENT.SBLOCKADE, CLIENT.SCLIENAME FROM CLIENT CLIENT  WHERE CLIENT.DBIRTHDAT = @:CLIENTDBIRTHDAT0 AND (CLIENT.SBLOCKADE IS NULL OR CLIENT.SBLOCKADE = '2')", "CLIENT", "Linked.LatCombined")
.AddParameter("CLIENTDBIRTHDAT0", DbType.DateTime, 0, (HT5SpecialQueryOfClientParametersInstance.Client.BirthDate = Date.MinValue), HT5SpecialQueryOfClientParametersInstance.Client.BirthDate)
 
            selectDataTableItem = .QueryExecuteToTable(True)  
        End With
                        With selectDataTableItem
                                If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                                    isFoundData = True 
                                    HT5SpecialQueryOfClientParametersInstance.ClientCollection = New InMotionGIT.Client.Entity.Contracts.ClientCollection 
                                    Dim newItem As InMotionGIT.Client.Entity.Contracts.Client 
                                    For Each itemData As DataRow In .Rows
                                         newItem = New InMotionGIT.Client.Entity.Contracts.Client
                        newItem.ClientID = itemData.StringValue("SCLIENT") 
                        newItem.CompleteClientName = itemData.StringValue("SCLIENAME") 

                                          HT5SpecialQueryOfClientParametersInstance.ClientCollection.Add(newItem)
                                    Next
                                End If
                        End With

                                                    End If
                                                End If
                currentAction = SessionTrace("19. If HT5SpecialQueryOfClientParametersInstance.TipoDeBusqueda = 5 Then")
                If HT5SpecialQueryOfClientParametersInstance.TipoDeBusqueda = 5 Then

                    currentAction = SessionTrace("20. SELECT CLIENT.SCLIENT, CLIENT.DBIRTHDAT, CLIENT.SBLOCKADE FROM CLIENT... WHERE CLIENT.SBLOCKADE Is Empty  OR CLIENT.SBLOCKADE = 2 AND )")
                    isFoundData = False
                                               With New DataManagerFactory("SELECT DISTINCT COUNT(CLIENT.SCLIENT) CODCLIENT FROM CLIENT CLIENT  JOIN ADDRESS ADDRESS ON ADDRESS.SCLIENT = CLIENT.SCLIENT  WHERE (CLIENT.SBLOCKADE IS NULL OR CLIENT.SBLOCKADE = '2') AND ADDRESS.NZIP_CODE LIKE @:ADDRESSNZIP_CODE2", "CLIENT", "Linked.LatCombined")
.AddParameter("ADDRESSNZIP_CODE2", DbType.Int64, 10, False, HT5SpecialQueryOfClientParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.ZipCode)
 
            HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord = .QueryExecuteScalarToInteger()  
        End With

                    currentAction = SessionTrace("21. If HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord Not Is Null Or Not Empty  AND HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord > 0 Then")
                    If Not IsNothing(HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord) AndAlso HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord > 0 Then

                        currentAction = SessionTrace("22. SELECT CLIENT.SCLIENT, CLIENT.SBLOCKADE, CLIENT.SCLIENAME FROM CLIENT... WHERE CLIENT.SBLOCKADE Is Empty  OR CLIENT.SBLOCKADE = 2 AND )")
                        isFoundData = False
                               With New DataManagerFactory("SELECT DISTINCT CLIENT.SCLIENT, CLIENT.SCLIENAME FROM CLIENT CLIENT  JOIN ADDRESS ADDRESS ON ADDRESS.SCLIENT = CLIENT.SCLIENT  WHERE (CLIENT.SBLOCKADE IS NULL OR CLIENT.SBLOCKADE = '2') AND ADDRESS.NZIP_CODE LIKE @:ADDRESSNZIP_CODE2", "CLIENT", "Linked.LatCombined")
.AddParameter("ADDRESSNZIP_CODE2", DbType.Int64, 10, False, HT5SpecialQueryOfClientParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.ZipCode)
 
            selectDataTableItem = .QueryExecuteToTable(True)  
        End With
                        With selectDataTableItem
                                If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                                    isFoundData = True 
                                    HT5SpecialQueryOfClientParametersInstance.ClientCollection = New InMotionGIT.Client.Entity.Contracts.ClientCollection 
                                    Dim newItem As InMotionGIT.Client.Entity.Contracts.Client 
                                    For Each itemData As DataRow In .Rows
                                         newItem = New InMotionGIT.Client.Entity.Contracts.Client
                        newItem.ClientID = itemData.StringValue("SCLIENT") 
                        newItem.CompleteClientName = itemData.StringValue("SCLIENAME") 

                                          HT5SpecialQueryOfClientParametersInstance.ClientCollection.Add(newItem)
                                    Next
                                End If
                        End With

                                                            End If
                                                        End If
                currentAction = SessionTrace("23. If HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord Not Is Null Or Not Empty  AND HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord > 0 Then")
                If Not IsNothing(HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord) AndAlso HT5SpecialQueryOfClientParametersInstance.QuantityOfRecord > 0 Then

                    currentAction = SessionTrace("25. button3.Visible = true, zone1.Visible = true")
                    currentAction = SessionTrace("25.1. button3.Visible = true...")
                    resultData.AddControlBehavior("button3", "show")
                    currentAction = SessionTrace("25.2. zone1.Visible = true...")
                    resultData.AddControlBehavior("zone1", "show")

                                                            Else
                    currentAction = SessionTrace("26. HT5SpecialQueryOfClientParametersInstance.ClientID = nothing...")
                    currentAction = SessionTrace("26.1. HT5SpecialQueryOfClientParametersInstance.ClientID = nothing...")

                    HT5SpecialQueryOfClientParametersInstance.ClientID = nothing

                    currentAction = SessionTrace("27. button3.Visible = false")
                    currentAction = SessionTrace("27.1. button3.Visible = false...")
                    resultData.AddControlBehavior("button3", "hide")

                    currentAction = SessionTrace("28. HT5SpecialQueryOfClientParametersInstance.TipoDeBusqueda = 0...")
                    currentAction = SessionTrace("28.1. HT5SpecialQueryOfClientParametersInstance.TipoDeBusqueda = 0...")

                    HT5SpecialQueryOfClientParametersInstance.TipoDeBusqueda = 0

                    currentAction = SessionTrace("29. The message 'No se encontraron cl...' will displayed as 'Popup'")
                    ParametersToDictionary(HT5SpecialQueryOfClientParametersInstance, parametersDictionary)
                    messageAction = InMotionGIT.FASI.Support.utils.JSONResources.LocalResource(HttpContext.Current.Server.MapPath(""), "HT5SpecialQueryOfClient", HttpContext.Current.Request.Headers("Accept-Language"), "app.form.button1_Message_29", "Por favor espere...")
                    messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                    resultData.AddNotifyPopup(messageAction)
                                                                End If

                instance = ClassToEntryData(instance, HT5SpecialQueryOfClientParametersInstance)
                StoreFormInformationOnSession(HT5SpecialQueryOfClientParametersInstance)
                
                With resultData
                    .Success = True
                    .Data = New With {.Instance = instance, .LookUps = Nothing}
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "HT5SpecialQueryOfClient", "button1Click", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function button3Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5SpecialQueryOfClientParametersInstance As HT5SpecialQueryOfClientParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                HT5SpecialQueryOfClientParametersInstance = RetrieveFormInformationFromSession(instance.InstanceFormId)
                
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button3Click")
                HT5SpecialQueryOfClientParametersInstance = EntryDataToClass(HT5SpecialQueryOfClientParametersInstance, instance)
                currentAction = SessionTrace("1. zone1.Visible = false, eMail.Visible = false, BankAccount.Visible = false...")
                currentAction = SessionTrace("1.1. zone1.Visible = false...")
                resultData.AddControlBehavior("zone1", "hide")
                currentAction = SessionTrace("1.2. eMail.Visible = false...")
                resultData.AddControlBehavior("eMail", "hide")
                currentAction = SessionTrace("1.3. BankAccount.Visible = false...")
                resultData.AddControlBehavior("BankAccount", "hide")
                currentAction = SessionTrace("1.4. CreditCardNumber.Visible = false...")
                resultData.AddControlBehavior("CreditCardNumber", "hide")
                currentAction = SessionTrace("1.5. BirthDate.Visible = false...")
                resultData.AddControlBehavior("BirthDate:Date", "hide")
                currentAction = SessionTrace("1.6. button3.Visible = false...")
                resultData.AddControlBehavior("button3", "hide")
                currentAction = SessionTrace("1.7. button1.Visible = false...")
                resultData.AddControlBehavior("button1", "hide")

                currentAction = SessionTrace("2. HT5SpecialQueryOfClientParametersInstance.TipoDeBusqueda = 0...")
                currentAction = SessionTrace("2.1. HT5SpecialQueryOfClientParametersInstance.TipoDeBusqueda = 0...")

                HT5SpecialQueryOfClientParametersInstance.TipoDeBusqueda = 0


                instance = ClassToEntryData(instance, HT5SpecialQueryOfClientParametersInstance)
                StoreFormInformationOnSession(HT5SpecialQueryOfClientParametersInstance)
                
                With resultData
                    .Success = True
                    .Data = New With {.Instance = instance, .LookUps = Nothing}
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "HT5SpecialQueryOfClient", "button3Click", currentAction)
            End Try
            
            Return resultData
        End Function

#End Region

#Region "Lookups Web Methods"


        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForCode(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                Dim HT5SpecialQueryOfClientParametersInstance As HT5SpecialQueryOfClientParameters = RetrieveFormInformationFromSession(id) 
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE66.NCOUNTRY, TABLE66.SDESCRIPT FROM TABLE66 TABLE66  WHERE TABLE66.SSTATREGT = '{0}'  ORDER BY TABLE66.SDESCRIPT ASC", "1"), 
                                            "TABLE66", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.StringValue("NCOUNTRY"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "HT5SpecialQueryOfClient", "LookUpForCode", String.Empty)
            End Try
                        
            Return result
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForClientID(formId As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)            
            
            Try                
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("EASE1,Suscriptor")
                Dim HT5SpecialQueryOfClientParametersInstance As HT5SpecialQueryOfClientParameters = RetrieveFormInformationFromSession(formId)
                
                If Not IsNothing(HT5SpecialQueryOfClientParametersInstance) AndAlso Not IsNothing(HT5SpecialQueryOfClientParametersInstance.ClientCollection) Then
                    For Each item As InMotionGIT.Client.Entity.Contracts.Client In HT5SpecialQueryOfClientParametersInstance.ClientCollection
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.ClientID,
                                                                                            .Description = item.CompleteClientName})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "HT5SpecialQueryOfClient", "LookUpForClientID", String.Empty)
            End Try
            
            Return result
        End Function

#End Region

#Region "Form Actions"

        Private Shared Sub Form_Initialization(ByRef currentAction As String, ByRef HT5SpecialQueryOfClientParametersInstance As HT5SpecialQueryOfClientParameters, ByRef resultData As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult)
            Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
            
            Dim formContext As New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                        HT5SpecialQueryOfClientParametersInstance.InternalId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                                     .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                                     .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                                     .AccessToken = HttpContext.Current.Session("AccessToken")}
            Dim selectDataTableItem As DataTable = Nothing
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim messageAction As String = String.Empty
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            currentAction = SessionTrace("Form_Initialization")

            currentAction = SessionTrace("1. HT5SpecialQueryOfClientParametersInstance.TipoDeBusqueda = 0...")
            currentAction = SessionTrace("1.1. HT5SpecialQueryOfClientParametersInstance.TipoDeBusqueda = 0...")

            HT5SpecialQueryOfClientParametersInstance.TipoDeBusqueda = 0
            currentAction = SessionTrace("1.2. HT5SpecialQueryOfClientParametersInstance.eMail =  nothing...")

            HT5SpecialQueryOfClientParametersInstance.eMail =  nothing
            currentAction = SessionTrace("1.3. HT5SpecialQueryOfClientParametersInstance.ClientBankAccount.BankAccount =  nothing...")
                            If IsNothing(HT5SpecialQueryOfClientParametersInstance.ClientBankAccount) Then
                    HT5SpecialQueryOfClientParametersInstance.ClientBankAccount = New InMotionGIT.Client.Entity.Contracts.ClientBankAccount
                End If

            HT5SpecialQueryOfClientParametersInstance.ClientBankAccount.BankAccount =  nothing
            currentAction = SessionTrace("1.4. HT5SpecialQueryOfClientParametersInstance.CreditCard.CreditCardNumber =  nothing...")
                            If IsNothing(HT5SpecialQueryOfClientParametersInstance.CreditCard) Then
                    HT5SpecialQueryOfClientParametersInstance.CreditCard = New InMotionGIT.Client.Entity.Contracts.CreditCard
                End If

            HT5SpecialQueryOfClientParametersInstance.CreditCard.CreditCardNumber =  nothing
            currentAction = SessionTrace("1.5. HT5SpecialQueryOfClientParametersInstance.Client.BirthDate = nothing...")
                            If IsNothing(HT5SpecialQueryOfClientParametersInstance.Client) Then
                    HT5SpecialQueryOfClientParametersInstance.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

            HT5SpecialQueryOfClientParametersInstance.Client.BirthDate = nothing


            
        End Sub

#End Region
#Region "Utilities"

        Private Shared Sub ParametersToDictionary(formData As HT5SpecialQueryOfClientParameters, ByRef target As Dictionary(Of String, Object))
            If IsNothing(target) Then
                target = New Dictionary(Of String, Object)

                target.Add("eMail", formData.eMail)
                target.Add("ClientID", formData.ClientID)
                target.Add("ClientCollection", formData.ClientCollection)
                target.Add("TipoDeBusqueda", formData.TipoDeBusqueda)
                target.Add("NombreDelClienteConsultar", formData.NombreDelClienteConsultar)
                target.Add("CreditCard", formData.CreditCard)
                target.Add("ClientBankAccount", formData.ClientBankAccount)
                target.Add("QuantityOfRecord", formData.QuantityOfRecord)
                target.Add("Client", formData.Client)
                target.Add("ConsumerInformation", formData.ConsumerInformation)
                target.Add("BuscarMail", formData.BuscarMail)
                target.Add("BuscarCheques", formData.BuscarCheques)
                target.Add("BuscarTarjeta", formData.BuscarTarjeta)
                target.Add("BuscarNacimiento", formData.BuscarNacimiento)
                target.Add("AddressPhysicalAddressDLI", formData.AddressPhysicalAddressDLI)
                target.Add("CodigoPostal", formData.CodigoPostal)
            Else
                target("eMail") = formData.eMail
                target("ClientID") = formData.ClientID
                target("ClientCollection") = formData.ClientCollection
                target("TipoDeBusqueda") = formData.TipoDeBusqueda
                target("NombreDelClienteConsultar") = formData.NombreDelClienteConsultar
                target("CreditCard") = formData.CreditCard
                target("ClientBankAccount") = formData.ClientBankAccount
                target("QuantityOfRecord") = formData.QuantityOfRecord
                target("Client") = formData.Client
                target("ConsumerInformation") = formData.ConsumerInformation
                target("BuscarMail") = formData.BuscarMail
                target("BuscarCheques") = formData.BuscarCheques
                target("BuscarTarjeta") = formData.BuscarTarjeta
                target("BuscarNacimiento") = formData.BuscarNacimiento
                target("AddressPhysicalAddressDLI") = formData.AddressPhysicalAddressDLI
                target("CodigoPostal") = formData.CodigoPostal
            End If
        End Sub

        Private Shared Sub GetTransferParameters(parametersData As HT5SpecialQueryOfClientParameters, fromid As String)
            Dim fromDocumentCache As Object = Nothing

            If Not String.IsNullOrEmpty(fromid) Then
                fromDocumentCache = HttpContext.Current.Session(fromid)
                HttpContext.Current.Session.Remove(fromid)

            Else
                fromDocumentCache = HttpContext.Current.Session(HttpContext.Current.Session("fromid"))
                HttpContext.Current.Session.Remove(HttpContext.Current.Session("fromid"))
                HttpContext.Current.Session.Remove("fromid")
            End If

            If Not IsNothing(fromDocumentCache) Then
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("eMail", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClientID", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClientCollection", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("TipoDeBusqueda", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("NombreDelClienteConsultar", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CreditCard", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClientBankAccount", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("QuantityOfRecord", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Client", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ConsumerInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("BuscarMail", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("BuscarCheques", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("BuscarTarjeta", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("BuscarNacimiento", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AddressPhysicalAddressDLI", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CodigoPostal", fromDocumentCache, parametersData)
            End If
        End Sub

        Private Shared Function SessionTrace(message As String) As String

            If Not IsNothing(HttpContext.Current.Session("Form.Track")) AndAlso HttpContext.Current.Session("Form.Track").ToString.ToLower = "true" Then
                Dim tracelog As String = HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath")))

                tracelog += String.Format(CultureInfo.InvariantCulture, "{0} {1}<br>{2}", Now.ToString("hh:mm:ss.fff"), message, vbCrLf)
                HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath"))) = tracelog
            End If

            Return message
        End Function

#End Region
#Region "Storage Session Methods"

        Private Shared Function RetrieveFormInformationFromSession(id As String) As HT5SpecialQueryOfClientParameters
            
            Dim source As String = HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.Storage.{0}", id))
            Dim instance As HT5SpecialQueryOfClientParameters = Nothing

            If Not String.IsNullOrEmpty(source) Then
                instance = Serialize.Deserialize(Of HT5SpecialQueryOfClientParameters)(source)
            End If
            
            Return instance
        End Function

        Private Shared Sub StoreFormInformationOnSession(instance As HT5SpecialQueryOfClientParameters)
            
            If Not IsNothing(instance) Then
                HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.Storage.{0}", instance.InternalId)) = Serialize.Serialize(Of HT5SpecialQueryOfClientParameters)(instance)
                HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.Title.{0}", instance.InternalId)) = "HT5Búsqueda especial de cliente"
              
                If Not IsNothing(HttpContext.Current.Session("Form.Track")) AndAlso
                   HttpContext.Current.Session("Form.Track").ToString.ToLower = "true" Then

                    HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.HT5SpecialQueryOfClient", instance.InternalId)) = instance
                End If

                If Not IsNothing(HttpContext.Current.Session("Form.Track.Parameters")) AndAlso
                   HttpContext.Current.Session("Form.Track.Parameters").ToString.ToLower = "true" Then

                    If Not IsNothing(HttpContext.Current.Session("Form.Track")) AndAlso HttpContext.Current.Session("Form.Track").ToString.ToLower = "true" Then
                        InMotionGIT.Common.Helpers.FileHandler.SaveContent(String.Format(CultureInfo.InvariantCulture, "{0}\{1}.HT5SpecialQueryOfClient.txt",
                                                                                         ConfigurationManager.AppSettings("Path.Logs"), instance.InternalId),
                                                                                          HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture,
                                                                                                                     "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath"))))
                    End If

                    InMotionGIT.Common.Helpers.Serialize.SerializeToFile(Of HT5SpecialQueryOfClientParameters)(instance,
                                                                                                String.Format(CultureInfo.InvariantCulture,
                                                                                                              "{0}\{1}.HT5SpecialQueryOfClient.xml", ConfigurationManager.AppSettings("Path.Logs"), instance.InternalId), True)
                End If			
            End If
            
        End Sub

#End Region


#Region "Contracts Mappers"

        Private Shared Function EntryDataToClass(parametersData As HT5SpecialQueryOfClientParameters, formData As EntryData) As HT5SpecialQueryOfClientParameters
            If IsNothing(parametersData) Then
                parametersData = New HT5SpecialQueryOfClientParameters
            End If

            If IsNothing(parametersData.ClientBankAccount) Then
                parametersData.ClientBankAccount = New InMotionGIT.Client.Entity.Contracts.ClientBankAccount
            End If
            If IsNothing(parametersData.CreditCard) Then
                parametersData.CreditCard = New InMotionGIT.Client.Entity.Contracts.CreditCard
            End If
            If IsNothing(parametersData.Client) Then
                parametersData.Client = New InMotionGIT.Client.Entity.Contracts.Client
            End If
            If IsNothing(parametersData.AddressPhysicalAddressDLI) Then
                parametersData.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
            End If
            If IsNothing(parametersData.AddressPhysicalAddressDLI.PhysicalAddress) Then
                parametersData.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
            End If
            If IsNothing(parametersData.AddressPhysicalAddressDLI.PhysicalAddress.Country) Then
                parametersData.AddressPhysicalAddressDLI.PhysicalAddress.Country = New InMotionGIT.Common.DataType.LookUpValueExtend
            End If

            With parametersData
                .InternalId = formData.InstanceFormId
                .TipoDeBusqueda = formData.TipoDeBusqueda
                .eMail = formData.eMail
                .ClientBankAccount.BankAccount = formData.ClientBankAccountBankAccount
                .CreditCard.CreditCardNumber = formData.CreditCardCreditCardNumber
                .Client.BirthDate = formData.ClientBirthDate
                .AddressPhysicalAddressDLI.PhysicalAddress.Country.Code = formData.AddressPhysicalAddressDLIPhysicalAddressCountryCode
                .AddressPhysicalAddressDLI.PhysicalAddress.ZipCode = formData.AddressPhysicalAddressDLIPhysicalAddressZipCode
                .ClientID = formData.ClientID
            End With

            Return parametersData
        End Function

        Private Shared Function ClassToEntryData(formData As EntryData, parametersData As HT5SpecialQueryOfClientParameters) As EntryData
            formData = New EntryData

            With formData
                .InstanceFormId = parametersData.InternalId
                .TipoDeBusqueda = parametersData.TipoDeBusqueda
                .eMail = parametersData.eMail
                If Not IsNothing(parametersData.ClientBankAccount) Then
                    .ClientBankAccountBankAccount = parametersData.ClientBankAccount.BankAccount
                End If
                If Not IsNothing(parametersData.CreditCard) Then
                    .CreditCardCreditCardNumber = parametersData.CreditCard.CreditCardNumber
                End If
                If Not IsNothing(parametersData.Client) Then
                    .ClientBirthDate = parametersData.Client.BirthDate
                End If
                If Not IsNothing(parametersData.AddressPhysicalAddressDLI) AndAlso Not IsNothing(parametersData.AddressPhysicalAddressDLI.PhysicalAddress) AndAlso Not IsNothing(parametersData.AddressPhysicalAddressDLI.PhysicalAddress.Country) Then
                    .AddressPhysicalAddressDLIPhysicalAddressCountryCode = parametersData.AddressPhysicalAddressDLI.PhysicalAddress.Country.Code
                End If
                If Not IsNothing(parametersData.AddressPhysicalAddressDLI) AndAlso Not IsNothing(parametersData.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    .AddressPhysicalAddressDLIPhysicalAddressZipCode = parametersData.AddressPhysicalAddressDLI.PhysicalAddress.ZipCode
                End If
                .ClientID = parametersData.ClientID
            End With

            Return formData
        End Function

#End Region

#Region "Common Utilities"

        Private Shared Sub SetDefaultValuesFromQueryString(formData As HT5SpecialQueryOfClientParameters)
            If HttpContext.Current.Request.QueryString("eMail").IsNotEmpty Then
                formData.eMail = HttpContext.Current.Request.QueryString("eMail")
            End If
            If HttpContext.Current.Request.QueryString("ClientID").IsNotEmpty Then
                formData.ClientID = HttpContext.Current.Request.QueryString("ClientID")
            End If
            If HttpContext.Current.Request.QueryString("TipoDeBusqueda").IsNotEmpty Then
                formData.TipoDeBusqueda = HttpContext.Current.Request.QueryString("TipoDeBusqueda")
            End If
            If HttpContext.Current.Request.QueryString("NombreDelClienteConsultar").IsNotEmpty Then
                formData.NombreDelClienteConsultar = HttpContext.Current.Request.QueryString("NombreDelClienteConsultar")
            End If
            If HttpContext.Current.Request.QueryString("QuantityOfRecord").IsNotEmpty Then
                formData.QuantityOfRecord = HttpContext.Current.Request.QueryString("QuantityOfRecord")
            End If
            If HttpContext.Current.Request.QueryString("BuscarMail").IsNotEmpty Then
                formData.BuscarMail = HttpContext.Current.Request.QueryString("BuscarMail")
            End If
            If HttpContext.Current.Request.QueryString("BuscarCheques").IsNotEmpty Then
                formData.BuscarCheques = HttpContext.Current.Request.QueryString("BuscarCheques")
            End If
            If HttpContext.Current.Request.QueryString("BuscarTarjeta").IsNotEmpty Then
                formData.BuscarTarjeta = HttpContext.Current.Request.QueryString("BuscarTarjeta")
            End If
            If HttpContext.Current.Request.QueryString("BuscarNacimiento").IsNotEmpty Then
                formData.BuscarNacimiento = HttpContext.Current.Request.QueryString("BuscarNacimiento")
            End If
            If HttpContext.Current.Request.QueryString("CodigoPostal").IsNotEmpty Then
                formData.CodigoPostal = HttpContext.Current.Request.QueryString("CodigoPostal")
            End If
        End Sub	

        Private Shared Sub ValidateParametersInstance(ByRef formData As HT5SpecialQueryOfClientParameters)
            If IsNothing(formData.ClientBankAccount) Then
                formData.ClientBankAccount = New InMotionGIT.Client.Entity.Contracts.ClientBankAccount
            End If
            If IsNothing(formData.CreditCard) Then
                formData.CreditCard = New InMotionGIT.Client.Entity.Contracts.CreditCard
            End If
            If IsNothing(formData.Client) Then
                formData.Client = New InMotionGIT.Client.Entity.Contracts.Client
            End If
            If IsNothing(formData.AddressPhysicalAddressDLI) Then
                formData.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
            End If
            If IsNothing(formData.AddressPhysicalAddressDLI.PhysicalAddress) Then
                formData.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
            End If
            If IsNothing(formData.AddressPhysicalAddressDLI.PhysicalAddress.Country) Then
                formData.AddressPhysicalAddressDLI.PhysicalAddress.Country = New InMotionGIT.Common.DataType.LookUpValueExtend
            End If

        End Sub

#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property TipoDeBusqueda As Int32
            <DataMember()> Public Property eMail As String
            <DataMember()> Public Property ClientBankAccountBankAccount As System.String
            <DataMember()> Public Property CreditCardCreditCardNumber As System.String
            <DataMember()> Public Property ClientBirthDate As System.DateTime
            <DataMember()> Public Property AddressPhysicalAddressDLIPhysicalAddressCountryCode As System.String
            <DataMember()> Public Property AddressPhysicalAddressDLIPhysicalAddressZipCode As System.String
            <DataMember()> Public Property ClientID As String

        End Class

        <Serializable()>
        Public Class HT5SpecialQueryOfClientParameters
            Inherits InMotionGIT.FrontOffice.Support.DataType.FormBase(Of HT5SpecialQueryOfClientParameters)

            Public Property eMail As String
            Public Property ClientID As String
            Public Property ClientCollection As InMotionGIT.Client.Entity.Contracts.ClientCollection
            Public Property TipoDeBusqueda As Int32
            Public Property NombreDelClienteConsultar As String
            Public Property CreditCard As InMotionGIT.Client.Entity.Contracts.CreditCard
            Public Property ClientBankAccount As InMotionGIT.Client.Entity.Contracts.ClientBankAccount
            Public Property QuantityOfRecord As Int32
            Public Property Client As InMotionGIT.Client.Entity.Contracts.Client
            Public Property ConsumerInformation As InMotionGIT.Common.Contracts.Process.ConsumerInformation
            Public Property BuscarMail As Int32
            Public Property BuscarCheques As Int32
            Public Property BuscarTarjeta As Int32
            Public Property BuscarNacimiento As Int32
            Public Property AddressPhysicalAddressDLI As InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
            Public Property CodigoPostal As String

        End Class
#End Region

    End Class

End Namespace

