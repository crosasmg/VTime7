'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Form Designer v7.1.212.1 at 2018/11/07 11:06:09 a.m. model release 2, Form Generator v1.0.33.2
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class HT5NNCotizacionPolizaHogar3AdicionalActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"

       <WebMethod(EnableSession:=True)>
        Public Shared Function Initialization(id As String, urlid As String, fromid As String) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim instance As New EntryData With {.InstanceFormId = id}
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim currentAction As String = String.Empty
            Dim HT5NNCotizacionPolizaHogar3AdicionalParametersInstance As HT5NNCotizacionPolizaHogar3AdicionalParameters = Nothing

            Try
                If id.IsEmpty AndAlso urlid.IsEmpty Then
                    instance.InstanceFormId = System.Guid.NewGuid().ToString
                    
                    With instance

                    End With                
                    
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance = EntryDataToClass(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance, instance)
                    SetDefaultValuesFromQueryString(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance)
                    
                    If fromid.IsNotEmpty Then
                        GetTransferParameters(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance, fromid)
                    End If
                Else          
                    instance.InstanceFormId = id.IfEmpty(urlid)
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                End If

                HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath"))) = String.Empty

                If id.IsEmpty AndAlso urlid.IsEmpty Then
                    Form_Initialization(currentAction, HT5NNCotizacionPolizaHogar3AdicionalParametersInstance, resultData)
                Else
                    Form_Load(currentAction, HT5NNCotizacionPolizaHogar3AdicionalParametersInstance, resultData)
                End If


                instance = ClassToEntryData(instance, HT5NNCotizacionPolizaHogar3AdicionalParametersInstance) 
		        
                StoreFormInformation(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogar3Adicional", "Initialization", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
   
        <WebMethod(EnableSession:=True)>
        Public Shared Function AnotherPolicyIndicatorChange(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionPolizaHogar3AdicionalParametersInstance As HT5NNCotizacionPolizaHogar3AdicionalParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionPolizaHogar3AdicionalParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("AnotherPolicyIndicatorClick")
                HT5NNCotizacionPolizaHogar3AdicionalParametersInstance = EntryDataToClass(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance, instance)
                currentAction = SessionTrace("1. If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.HomeLineOfBusiness.AnotherPolicyIndicator = true Then")
                If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.HomeLineOfBusiness.AnotherPolicyIndicator = true Then

                    currentAction = SessionTrace("2. Enable 'Otra póliza' control")
                    resultData.AddControlBehavior("zone7", "enabled")

                    Else
                    currentAction = SessionTrace("3. Disable 'Otra póliza' control")
                    resultData.AddControlBehavior("zone7", "disabled")

                    currentAction = SessionTrace("4. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.HomeLineOfBusiness.CurrencyOtherPolicy = nothing...")
                    currentAction = SessionTrace("4.1. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.HomeLineOfBusiness.CurrencyOtherPolicy = nothing...")
                                    If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.HomeLineOfBusiness) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.HomeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness
                End If

                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.HomeLineOfBusiness.CurrencyOtherPolicy = nothing
                    currentAction = SessionTrace("4.2. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.HomeLineOfBusiness.ExpirationOfTheOtherPolicy = nothing...")
                                    If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.HomeLineOfBusiness) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.HomeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness
                End If

                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.HomeLineOfBusiness.ExpirationOfTheOtherPolicy = nothing
                    currentAction = SessionTrace("4.3. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.HomeLineOfBusiness.InsuredAmountOfTheOtherPolicy = nothing...")
                                    If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.HomeLineOfBusiness) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.HomeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness
                End If

                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.HomeLineOfBusiness.InsuredAmountOfTheOtherPolicy = nothing

                        End If

                instance = ClassToEntryData(instance, HT5NNCotizacionPolizaHogar3AdicionalParametersInstance)
                
                StoreFormInformation(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogar3Adicional", "AnotherPolicyIndicatorClick", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function button3Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionPolizaHogar3AdicionalParametersInstance As HT5NNCotizacionPolizaHogar3AdicionalParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionPolizaHogar3AdicionalParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button3Click")
                HT5NNCotizacionPolizaHogar3AdicionalParametersInstance = EntryDataToClass(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance, instance)
Dim errors As InMotionGIT.Common.DataType.Notify
                currentAction = SessionTrace("1. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ShowAdditionalInformation = true...")
                currentAction = SessionTrace("1.1. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ShowAdditionalInformation = true...")

                HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ShowAdditionalInformation = true

                currentAction = SessionTrace("4. Call 'HT5Póliza Hogar Seguro' form with transferring parameters")
                                HttpContext.Current.Session(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.InternalId) = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance
                HttpContext.Current.Session("fromid") = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.InternalId
    
                With resultData
                    .AddRedirect(String.Format(CultureInfo.InvariantCulture, "{0}/HT5NNCotizacionPolizaHogar4Pago.aspx?fromid={1}", "/fasi/dli/forms", HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.InternalId, ""))
                End With

                instance = ClassToEntryData(instance, HT5NNCotizacionPolizaHogar3AdicionalParametersInstance)
                
                StoreFormInformation(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogar3Adicional", "button3Click", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function

#End Region

#Region "Lookups Web Methods"


        <WebMethod()>
        Public Shared Function LookUpForProductCode(id As String, RiskInformationLineOfBusiness As System.Int32) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  PRODMASTER.NBRANCH, PRODMASTER.NPRODUCT, PRODMASTER.SDESCRIPT, PRODMASTER.SSTATREGT FROM PRODMASTER PRODMASTER  WHERE PRODMASTER.SSTATREGT = '{0}'  AND (PRODMASTER.NBRANCH = @:PRODMASTERNBRANCHDependen)  ORDER BY PRODMASTER.SDESCRIPT ASC", "1"), 
                                            "PRODMASTER", "Linked.LatCombined")
                    .AddParameter("PRODMASTERNBRANCHDependen", DbType.Int32, 0, False, RiskInformationLineOfBusiness)

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NPRODUCT"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogar3Adicional", "LookUpForProductCode", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForProductCode")
                End With
            End Try
            Return result
        End Function

        <WebMethod()>
        Public Shared Function LookUpForLineOfBusiness(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE10.NBRANCH, TABLE10.SDESCRIPT, TABLE10.SSTATREGT FROM TABLE10 TABLE10  WHERE TABLE10.SSTATREGT = 1  AND NOT SDESCRIPT IS NULL ORDER BY SDESCRIPT", "1"), 
                                            "TABLE10", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NBRANCH"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogar3Adicional", "LookUpForLineOfBusiness", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForLineOfBusiness")
                End With
            End Try
            Return result
        End Function

        <WebMethod()>
        Public Shared Function LookUpForOwnership(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE6005.NOWNERSHIP, TABLE6005.SDESCRIPT FROM TABLE6005 TABLE6005  WHERE TABLE6005.SSTATREGT = '{0}'  ORDER BY TABLE6005.SDESCRIPT ASC", "1"), 
                                            "TABLE6005", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NOWNERSHIP"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogar3Adicional", "LookUpForOwnership", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForOwnership")
                End With
            End Try
            Return result
        End Function

        <WebMethod()>
        Public Shared Function LookUpForCurrencyOfPurchasePrice(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE11.NCODIGINT, TABLE11.SDESCRIPT, TABLE11.SSTATREGT FROM TABLE11 TABLE11  WHERE TABLE11.SSTATREGT = '{0}'  ORDER BY TABLE11.SDESCRIPT ASC", "1"), 
                                            "TABLE11", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NCODIGINT"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogar3Adicional", "LookUpForCurrencyOfPurchasePrice", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForCurrencyOfPurchasePrice")
                End With
            End Try
            Return result
        End Function

        <WebMethod()>
        Public Shared Function LookUpForRoofType(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE7038.NROOFTYPE, TABLE7038.SDESCRIPT FROM TABLE7038 TABLE7038  WHERE TABLE7038.SSTATREGT = '{0}'  ORDER BY TABLE7038.SDESCRIPT ASC", "1"), 
                                            "TABLE7038", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NROOFTYPE"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogar3Adicional", "LookUpForRoofType", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForRoofType")
                End With
            End Try
            Return result
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForRoofYear(formId As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            Dim HT5NNCotizacionPolizaHogar3AdicionalParametersInstance As HT5NNCotizacionPolizaHogar3AdicionalParameters = RetrieveFormInformationFromDatabase(formId)

            Try
                If Not IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.YearCollection) Then
                    For Each item As InMotionGIT.Common.Contracts.Errors.Error In HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.YearCollection
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.ErrorId,
                                                                                            .Description = item.ErrorId})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogar3Adicional", "LookUpForRoofYear", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForRoofYear")
                End With
            End Try
            Return result
        End Function

        <WebMethod()>
        Public Shared Function LookUpForCurrencyOtherPolicy(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE11.NCODIGINT, TABLE11.SDESCRIPT, TABLE11.SSTATREGT FROM TABLE11 TABLE11  WHERE TABLE11.SSTATREGT = '{0}'  ORDER BY TABLE11.SDESCRIPT ASC", "1"), 
                                            "TABLE11", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NCODIGINT"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogar3Adicional", "LookUpForCurrencyOtherPolicy", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForCurrencyOtherPolicy")
                End With
            End Try
            Return result
        End Function

        <WebMethod()>
        Public Shared Function LookUpForAirConditioningType(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE6001.NAIRTYPE, TABLE6001.SDESCRIPT FROM TABLE6001 TABLE6001  WHERE TABLE6001.SSTATREGT = '{0}'  ORDER BY TABLE6001.SDESCRIPT ASC", "1"), 
                                            "TABLE6001", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NAIRTYPE"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogar3Adicional", "LookUpForAirConditioningType", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForAirConditioningType")
                End With
            End Try
            Return result
        End Function

        <WebMethod()>
        Public Shared Function LookUpForHeating(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE6002.NALT_HEATING, TABLE6002.SDESCRIPT FROM TABLE6002 TABLE6002  WHERE TABLE6002.SSTATREGT = '{0}'  ORDER BY TABLE6002.SDESCRIPT ASC", "1"), 
                                            "TABLE6002", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NALT_HEATING"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogar3Adicional", "LookUpForHeating", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForHeating")
                End With
            End Try
            Return result
        End Function

        <WebMethod()>
        Public Shared Function LookUpForUbicationOfSwimmingPool(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE6004.NSWIMPOOL, TABLE6004.SDESCRIPT, TABLE6004.SSTATREGT FROM TABLE6004 TABLE6004  WHERE TABLE6004.SSTATREGT = '{0}'  ORDER BY TABLE6004.SDESCRIPT ASC", "1"), 
                                            "TABLE6004", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NSWIMPOOL"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogar3Adicional", "LookUpForUbicationOfSwimmingPool", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForUbicationOfSwimmingPool")
                End With
            End Try
            Return result
        End Function

        <WebMethod()>
        Public Shared Function LookUpForClientRole(id As String, RiskInformationLineOfBusiness As System.Int32, RiskInformationProductCode As System.Int32) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE12.NROLE, TRIM(TABLE12.SDESCRIPT) SDESCRIPT, CLIALLOPRO.NBRANCH, CLIALLOPRO.NPRODUCT, TRIM(CLIALLOPRO.SPOLITYPE) SPOLITYPE FROM TABLE12 TABLE12 JOIN CLIALLOPRO CLIALLOPRO ON CLIALLOPRO.NROLE = TABLE12.NROLE  WHERE TABLE12.SSTATREGT = '{0}' AND CLIALLOPRO.SPOLITYPE = '{1}'  AND (CLIALLOPRO.NBRANCH = @:CLIALLOPRONBRANCHDependen AND CLIALLOPRO.NPRODUCT = @:CLIALLOPRONPRODUCTDepende)  ORDER BY TABLE12.SDESCRIPT ASC", "1", "1"), 
                                            "TABLE12", "Linked.LatCombined")
                    .AddParameter("CLIALLOPRONBRANCHDependen", DbType.Int32, 0, False, RiskInformationLineOfBusiness)
                    .AddParameter("CLIALLOPRONPRODUCTDepende", DbType.Int32, 0, False, RiskInformationProductCode)

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NROLE"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionPolizaHogar3Adicional", "LookUpForClientRole", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForClientRole")
                End With
            End Try
            Return result
        End Function

#End Region

#Region "Form Actions"

        Private Shared Sub Form_Initialization(ByRef currentAction As String, ByRef HT5NNCotizacionPolizaHogar3AdicionalParametersInstance As HT5NNCotizacionPolizaHogar3AdicionalParameters, ByRef resultData As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult)
            Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
            Dim formContext As New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.InternalId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
            Dim selectDataTableItem As DataTable = Nothing
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim messageAction As String = String.Empty
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            Dim errors As InMotionGIT.Common.DataType.Notify
            currentAction = SessionTrace("Form_Initialization")

            currentAction = SessionTrace("2. If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ShowBasicInformation = true Then")
            If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ShowBasicInformation = true Then

                currentAction = SessionTrace("3. NNCotizacionPolizaHogarSecuencia.button31.Visible = true, NNCotizacionPolizaHogarSecuencia.button34.Visible = true")
                currentAction = SessionTrace("3.1. NNCotizacionPolizaHogarSecuencia.button31.Visible = true...")
                resultData.AddControlBehavior("button31", "show")
                currentAction = SessionTrace("3.2. NNCotizacionPolizaHogarSecuencia.button34.Visible = true...")
                resultData.AddControlBehavior("button34", "show")

                End If
            currentAction = SessionTrace("4. If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ShowAddressInformation = true Then")
            If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ShowAddressInformation = true Then

                currentAction = SessionTrace("5. NNCotizacionPolizaHogarSecuencia.button34.Visible = true, NNCotizacionPolizaHogarSecuencia.button32.Visible = true")
                currentAction = SessionTrace("5.1. NNCotizacionPolizaHogarSecuencia.button34.Visible = true...")
                resultData.AddControlBehavior("button34", "show")
                currentAction = SessionTrace("5.2. NNCotizacionPolizaHogarSecuencia.button32.Visible = true...")
                resultData.AddControlBehavior("button32", "show")

                    End If
            currentAction = SessionTrace("6. If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ShowAdditionalInformation = true Then")
            If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ShowAdditionalInformation = true Then

                currentAction = SessionTrace("7. NNCotizacionPolizaHogarSecuencia.button32.Visible = true, NNCotizacionPolizaHogarSecuencia.button36.Visible = true")
                currentAction = SessionTrace("7.1. NNCotizacionPolizaHogarSecuencia.button32.Visible = true...")
                resultData.AddControlBehavior("button32", "show")
                currentAction = SessionTrace("7.2. NNCotizacionPolizaHogarSecuencia.button36.Visible = true...")
                resultData.AddControlBehavior("button36", "show")

                currentAction = SessionTrace("8. NNCotizacionPolizaHogarSecuencia.button19.Visible = true, NNCotizacionPolizaHogarSecuencia.EnviarCotizacionEmail.Visible = true, NNCotizacionPolizaHogarSecuencia.eMail.Visible = true")
                currentAction = SessionTrace("8.1. NNCotizacionPolizaHogarSecuencia.button19.Visible = true...")
                resultData.AddControlBehavior("button19", "show")
                currentAction = SessionTrace("8.2. NNCotizacionPolizaHogarSecuencia.EnviarCotizacionEmail.Visible = true...")
                resultData.AddControlBehavior("EnviarCotizacionEmail", "show")
                currentAction = SessionTrace("8.3. NNCotizacionPolizaHogarSecuencia.eMail.Visible = true...")
                resultData.AddControlBehavior("eMail", "show")

                currentAction = SessionTrace("9. zone0.Enabled = false, zone3.Enabled = false, zone4.Enabled = false...")
                currentAction = SessionTrace("9.1. zone0.Enabled = false...")
                resultData.AddControlBehavior("zone0", "disabled")
                currentAction = SessionTrace("9.2. zone3.Enabled = false...")
                resultData.AddControlBehavior("zone3", "disabled")
                currentAction = SessionTrace("9.3. zone4.Enabled = false...")
                resultData.AddControlBehavior("zone4", "disabled")
                currentAction = SessionTrace("9.4. zone6.Enabled = false...")
                resultData.AddControlBehavior("zone6", "disabled")
                currentAction = SessionTrace("9.5. zone2.Visible = false...")
                resultData.AddControlBehavior("zone2", "hide")

                        End If
            currentAction = SessionTrace("10. If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ShowPaymentInformation = true Then")
            If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ShowPaymentInformation = true Then

                currentAction = SessionTrace("11. NNCotizacionPolizaHogarSecuencia.button36.Visible = true")
                currentAction = SessionTrace("11.1. NNCotizacionPolizaHogarSecuencia.button36.Visible = true...")
                resultData.AddControlBehavior("button36", "show")

                currentAction = SessionTrace("12. NNCotizacionPolizaHogarSecuencia.button19.Visible = true, NNCotizacionPolizaHogarSecuencia.EnviarCotizacionEmail.Visible = true, NNCotizacionPolizaHogarSecuencia.eMail.Visible = true")
                currentAction = SessionTrace("12.1. NNCotizacionPolizaHogarSecuencia.button19.Visible = true...")
                resultData.AddControlBehavior("button19", "show")
                currentAction = SessionTrace("12.2. NNCotizacionPolizaHogarSecuencia.EnviarCotizacionEmail.Visible = true...")
                resultData.AddControlBehavior("EnviarCotizacionEmail", "show")
                currentAction = SessionTrace("12.3. NNCotizacionPolizaHogarSecuencia.eMail.Visible = true...")
                resultData.AddControlBehavior("eMail", "show")

                            End If
            currentAction = SessionTrace("13. If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ShowGeneral = true Then")
            If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ShowGeneral = true Then

                currentAction = SessionTrace("14. NNCotizacionPolizaHogarSecuencia.Accept.Visible = true")
                currentAction = SessionTrace("14.1. NNCotizacionPolizaHogarSecuencia.Accept.Visible = true...")
                resultData.AddControlBehavior("Accept", "show")

                                End If
            currentAction = SessionTrace("15. If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ErrorsFound = true Then")
            If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ErrorsFound = true Then

                currentAction = SessionTrace("16. FinalMessageLabel.Visible = true")
                currentAction = SessionTrace("16.1. FinalMessageLabel.Visible = true...")
                resultData.AddControlBehavior("FinalMessageLabel", "show")

                currentAction = SessionTrace("17. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ErrorsFound = false...")
                currentAction = SessionTrace("17.1. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ErrorsFound = false...")

                HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ErrorsFound = false

                                    End If
            currentAction = SessionTrace("18. If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.frompanel = true Then")
            If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.frompanel = true Then

                currentAction = SessionTrace("19. NNCotizacionPolizaHogarSecuencia.Accept.Visible = false, NNCotizacionPolizaHogarSecuencia.button31.Visible = true, NNCotizacionPolizaHogarSecuencia.button32.Visible = true...")
                currentAction = SessionTrace("19.1. NNCotizacionPolizaHogarSecuencia.Accept.Visible = false...")
                resultData.AddControlBehavior("Accept", "hide")
                currentAction = SessionTrace("19.2. NNCotizacionPolizaHogarSecuencia.button31.Visible = true...")
                resultData.AddControlBehavior("button31", "show")
                currentAction = SessionTrace("19.3. NNCotizacionPolizaHogarSecuencia.button32.Visible = true...")
                resultData.AddControlBehavior("button32", "show")
                currentAction = SessionTrace("19.4. NNCotizacionPolizaHogarSecuencia.button34.Visible = true...")
                resultData.AddControlBehavior("button34", "show")
                currentAction = SessionTrace("19.5. NNCotizacionPolizaHogarSecuencia.button36.Visible = true...")
                resultData.AddControlBehavior("button36", "show")
                currentAction = SessionTrace("19.6. NNCotizacionPolizaHogarSecuencia.button19.Visible = false...")
                resultData.AddControlBehavior("button19", "hide")
                currentAction = SessionTrace("19.7. NNCotizacionPolizaHogarSecuencia.EnviarCotizacionEmail.Visible = false...")
                resultData.AddControlBehavior("EnviarCotizacionEmail", "hide")
                currentAction = SessionTrace("19.8. NNCotizacionPolizaHogarSecuencia.eMail.Visible = false...")
                resultData.AddControlBehavior("eMail", "hide")
                currentAction = SessionTrace("19.9. zone0.Enabled = false...")
                resultData.AddControlBehavior("zone0", "disabled")
                currentAction = SessionTrace("19.10. zone3.Enabled = false...")
                resultData.AddControlBehavior("zone3", "disabled")
                currentAction = SessionTrace("19.11. zone4.Enabled = false...")
                resultData.AddControlBehavior("zone4", "disabled")
                currentAction = SessionTrace("19.12. zone6.Enabled = false...")
                resultData.AddControlBehavior("zone6", "disabled")

                                        End If

        End Sub
	
        Private Shared Sub Form_Load(ByRef currentAction As String, ByRef HT5NNCotizacionPolizaHogar3AdicionalParametersInstance As HT5NNCotizacionPolizaHogar3AdicionalParameters, ByRef resultData As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult)
            Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
            Dim formContext As New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.InternalId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
            Dim selectDataTableItem As DataTable = Nothing
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim messageAction As String = String.Empty
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            currentAction = SessionTrace("Form_Load")

            currentAction = SessionTrace("1. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RecoveryCaseIndicator = true...")
            currentAction = SessionTrace("1.1. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RecoveryCaseIndicator = true...")

            HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RecoveryCaseIndicator = true

            currentAction = SessionTrace("2. Call Shared Function 'Retrieve Underwriting Case' with parameters (Case ID, Effective Date)")
            Dim _UnderwritingCase_daee39e5584d4e9fa4241c3c5b698287 As InMotionGIT.Underwriting.Contracts.UnderwritingCase
            _UnderwritingCase_daee39e5584d4e9fa4241c3c5b698287 = InMotionGIT.Underwriting.Proxy.Manager.Retrieve(underwritingCaseID:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.uwcaseid, atDate:=Date.Today)
            HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.UnderwritingCase = _UnderwritingCase_daee39e5584d4e9fa4241c3c5b698287
            isNullResult = (IsNothing(_UnderwritingCase_daee39e5584d4e9fa4241c3c5b698287))

            currentAction = SessionTrace("3. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.UnderwritingCase.RiskInfo...")
            currentAction = SessionTrace("3.1. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.UnderwritingCase.RiskInfo...")
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If

            HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.UnderwritingCase.RiskInformation

            currentAction = SessionTrace("4. Call Shared Sub 'Clear Form Errors' without parameters")
            
        HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.Errors.Clear()
	formContext.Errors.Clear()
    

            currentAction = SessionTrace("5. Call Shared Function 'Retrieve Client' with parameters (Client Identification)")
            Dim _Client_4445145ead2b45918138ff29a7924076 As InMotionGIT.Client.Entity.Contracts.Client
            
      _Client_4445145ead2b45918138ff29a7924076 = (New InMotionGIT.Client.Services.ClientManager).Retrieve(clientId:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID, atDate:=Date.Today, childFilter:= "All")
      isNullResult = (IsNothing(_Client_4445145ead2b45918138ff29a7924076))
      isFoundData  = Not isNullResult
    
            HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.PrimaryInsured.Client = _Client_4445145ead2b45918138ff29a7924076

            currentAction = SessionTrace("6. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ClientExistInDB = true...")
            currentAction = SessionTrace("6.1. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ClientExistInDB = true...")

            HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ClientExistInDB = true

            currentAction = SessionTrace("7. uwcaseid.Visible = true")
            currentAction = SessionTrace("7.1. uwcaseid.Visible = true...")
            resultData.AddControlBehavior("uwcaseid", "show")

            currentAction = SessionTrace("8. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation.CompanyId = 1...")
            currentAction = SessionTrace("8.1. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation.CompanyId = 1...")
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If

            HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation.CompanyId = 1
            currentAction = SessionTrace("8.2. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation.Country = 58...")
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If

            HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation.Country = 58
            currentAction = SessionTrace("8.3. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation.Security.Usercode = 9998...")
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation.Security) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation.Security = New InMotionGIT.Common.Contracts.Process.SecurityInformation
                End If

            HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation.Security.Usercode = 9998

            currentAction = SessionTrace("9. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Cont...")
            currentAction = SessionTrace("9.1. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Cont...")
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If

            HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
            currentAction = SessionTrace("9.2. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Cont...")
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.eMailAddress) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Contract.General.eMailAddress
                End If

            HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Contract.General.eMailAddress
            currentAction = SessionTrace("9.3. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Cont...")
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

            HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address

            currentAction = SessionTrace("10. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.PrimaryIn...")
            currentAction = SessionTrace("10.1. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.PrimaryIn...")
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

            HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID
            currentAction = SessionTrace("10.2. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1...")
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

            HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1
            currentAction = SessionTrace("10.3. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.PrimaryIn...")
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

            HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID

            currentAction = SessionTrace("11. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.RecordOwnerID = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.PrimaryIn...")
            currentAction = SessionTrace("11.1. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.RecordOwnerID = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.PrimaryIn...")
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

            HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.RecordOwnerID = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID
            currentAction = SessionTrace("11.2. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1...")
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

            HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1
            currentAction = SessionTrace("11.3. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.AddressID = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.PrimaryIn...")
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

            HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.AddressID = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID

            currentAction = SessionTrace("12. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1...")
            currentAction = SessionTrace("12.1. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1...")
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

            HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1
            currentAction = SessionTrace("12.2. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.TypeOfAddress = 3...")
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.TypeOfAddress) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.TypeOfAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfAddress
                End If

            HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.TypeOfAddress = 3
            currentAction = SessionTrace("12.3. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.UserCompany.Code = 1...")
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.UserCompany) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.UserCompany = New InMotionGIT.Common.DataType.LookUpValueExtend
                End If

            HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.UserCompany.Code = 1
            currentAction = SessionTrace("12.4. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 6...")
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                            If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

            HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 6

            currentAction = SessionTrace("13. If (HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID Is Null Or Empty  OR HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID = 0) Then")
            If (IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID) OrElse HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID = 0) Then

                currentAction = SessionTrace("14. Call Function 'Retrieve addresses by owner' with parameters (Process date, User company of the address, Record owner type, Record owner id, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                Dim _AddressDLICollection_0ab4330fbd014ae09d4fb05ce3d171a2 As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                _AddressDLICollection_0ab4330fbd014ae09d4fb05ce3d171a2 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesDLI(processDate:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.EffectiveDate, userCompany:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.UserCompany, recordOwnerType:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.RecordOwnerType, recordOwnerId:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.RecordOwnerID, consumer:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation, typeOfAddress:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection = _AddressDLICollection_0ab4330fbd014ae09d4fb05ce3d171a2
                isNullResult = (IsNothing(_AddressDLICollection_0ab4330fbd014ae09d4fb05ce3d171a2))

                currentAction = SessionTrace("15. If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection.Count <> 0 Then")
                If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection.Count <> 0 Then

                    currentAction = SessionTrace("16. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.AddressID = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection(0).A...")
                    currentAction = SessionTrace("16.1. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.AddressID = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection(0).A...")
                                    If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                    If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.AddressID = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection(0).AddressID
                    currentAction = SessionTrace("16.2. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.InternalAddressKey = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection(0).I...")
                                    If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                    If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.InternalAddressKey = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection(0).InternalAddressKey

                    currentAction = SessionTrace("17. Call Function 'Retrieve an email address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                    Dim _AddresseMailDLI_0c07b7cf33bd477e975bd21a547597a0 As InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                    _AddresseMailDLI_0c07b7cf33bd477e975bd21a547597a0 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveeMailDLI(processDate:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.EffectiveDate, addressId:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.AddressID, internalAddressKey:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.InternalAddressKey, consumer:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation)
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI = _AddresseMailDLI_0c07b7cf33bd477e975bd21a547597a0
                    isNullResult = (IsNothing(_AddresseMailDLI_0c07b7cf33bd477e975bd21a547597a0))

                        End If
                currentAction = SessionTrace("18. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1...")
                currentAction = SessionTrace("18.1. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1...")
                                If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfAddress
                End If

                HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1
                currentAction = SessionTrace("18.2. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1...")
                                If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1
                currentAction = SessionTrace("18.3. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany.Code = 1...")
                                If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany = New InMotionGIT.Common.DataType.LookUpValueExtend
                End If

                HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany.Code = 1
                currentAction = SessionTrace("18.4. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1...")
                                If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

                HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1

                currentAction = SessionTrace("19. Call Function 'Retrieve addresses by owner' with parameters (Process date, User company of the address, Record owner type, Record owner id, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                Dim _AddressDLICollection_7a3bfdfbcc9b4447adc751dcaa9e52b9 As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                _AddressDLICollection_7a3bfdfbcc9b4447adc751dcaa9e52b9 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesDLI(processDate:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.EffectiveDate, userCompany:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany, recordOwnerType:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType, recordOwnerId:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID, consumer:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation, typeOfAddress:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection = _AddressDLICollection_7a3bfdfbcc9b4447adc751dcaa9e52b9
                isNullResult = (IsNothing(_AddressDLICollection_7a3bfdfbcc9b4447adc751dcaa9e52b9))

                currentAction = SessionTrace("20. If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection.Count <> 0 Then")
                If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection.Count <> 0 Then

                    currentAction = SessionTrace("21. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection(0).A...")
                    currentAction = SessionTrace("21.1. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection(0).A...")
                                    If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection(0).AddressID
                    currentAction = SessionTrace("21.2. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection(0).I...")
                                    If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection(0).InternalAddressKey

                    currentAction = SessionTrace("22. Call Function 'Retrieve a physical address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                    Dim _AddressPhysicalAddressDLI_3f5045348222404a8c5fd0aedeea6429 As InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                    _AddressPhysicalAddressDLI_3f5045348222404a8c5fd0aedeea6429 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrievePhysicalAddressDLI(processDate:=Date.Today, addressId:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, internalAddressKey:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey, consumer:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation)
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI = _AddressPhysicalAddressDLI_3f5045348222404a8c5fd0aedeea6429
                    isNullResult = (IsNothing(_AddressPhysicalAddressDLI_3f5045348222404a8c5fd0aedeea6429))

                            Else
                    currentAction = SessionTrace("23. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2...")
                    currentAction = SessionTrace("23.1. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2...")
                                    If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                    If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2

                    currentAction = SessionTrace("24. Call Function 'Retrieve addresses by owner' with parameters (Process date, User company of the address, Record owner type, Record owner id, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                    Dim _AddressDLICollection_1534ef83996e49ee8139642a9f4c95fc As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                    _AddressDLICollection_1534ef83996e49ee8139642a9f4c95fc = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesDLI(processDate:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.EffectiveDate, userCompany:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany, recordOwnerType:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType, recordOwnerId:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID, consumer:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation, typeOfAddress:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection = _AddressDLICollection_1534ef83996e49ee8139642a9f4c95fc
                    isNullResult = (IsNothing(_AddressDLICollection_1534ef83996e49ee8139642a9f4c95fc))

                    currentAction = SessionTrace("25. If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection.Count <> 0 Then")
                    If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection.Count <> 0 Then

                                    Else
                        currentAction = SessionTrace("26. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection(0).A...")
                        currentAction = SessionTrace("26.1. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection(0).A...")
                                        If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                        If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                        HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection(0).AddressID
                        currentAction = SessionTrace("26.2. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection(0).I...")
                                        If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                        If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                        HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection(0).InternalAddressKey

                        currentAction = SessionTrace("27. Call Function 'Retrieve a physical address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                        Dim _AddressPhysicalAddressDLI_b8adcd6de1c94589bd9f30a6b657f728 As InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                        _AddressPhysicalAddressDLI_b8adcd6de1c94589bd9f30a6b657f728 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrievePhysicalAddressDLI(processDate:=Date.Today, addressId:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, internalAddressKey:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey, consumer:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation)
                        HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI = _AddressPhysicalAddressDLI_b8adcd6de1c94589bd9f30a6b657f728
                        isNullResult = (IsNothing(_AddressPhysicalAddressDLI_b8adcd6de1c94589bd9f30a6b657f728))

                                        End If
                                    End If
                                End If
            currentAction = SessionTrace("28. If (HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID Not Is Null Or Not Empty  AND HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID <> 0) Then")
            If (Not IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID) AndAlso HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID <> 0) Then

                currentAction = SessionTrace("29. Call Function 'Retrieve addresses by id' with parameters (Process date, User company of the address, Id value of the address, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                Dim _AddressDLICollection_f46589ed723149c0905796b1bdf37cc4 As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                _AddressDLICollection_f46589ed723149c0905796b1bdf37cc4 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesByIdDLI(processDate:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.EffectiveDate, userCompany:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.UserCompany, addressId:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.AddressID, consumer:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation, typeOfAddress:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection = _AddressDLICollection_f46589ed723149c0905796b1bdf37cc4
                isNullResult = (IsNothing(_AddressDLICollection_f46589ed723149c0905796b1bdf37cc4))

                currentAction = SessionTrace("30. If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection.Count <> 0 Then")
                If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection.Count <> 0 Then

                    currentAction = SessionTrace("31. Cotizar.Enabled = false, Acepto.Enabled = false, RiskInformationEffectiveDate.Enabled = false...")
                    currentAction = SessionTrace("31.1. Cotizar.Enabled = false...")
                    resultData.AddControlBehavior("Cotizar", "disabled")
                    currentAction = SessionTrace("31.2. Acepto.Enabled = false...")
                    resultData.AddControlBehavior("Acepto", "disabled")
                    currentAction = SessionTrace("31.3. RiskInformationEffectiveDate.Enabled = false...")
                    resultData.AddControlBehavior("RiskInformationEffectiveDate", "disabled")
                    currentAction = SessionTrace("31.4. PaymentFrequency.Enabled = false...")
                    resultData.AddControlBehavior("PaymentFrequency", "disabled")

                    currentAction = SessionTrace("32. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.InternalAddressKey = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection(0).I...")
                    currentAction = SessionTrace("32.1. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.InternalAddressKey = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection(0).I...")
                                    If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                    If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.InternalAddressKey = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection(0).InternalAddressKey

                    currentAction = SessionTrace("33. Call Function 'Retrieve an email address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                    Dim _AddresseMailDLI_c2a89a9d46bf49248762d944e17b1baf As InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                    _AddresseMailDLI_c2a89a9d46bf49248762d944e17b1baf = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveeMailDLI(processDate:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.EffectiveDate, addressId:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.AddressID, internalAddressKey:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI.Address.InternalAddressKey, consumer:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation)
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddresseMailDLI = _AddresseMailDLI_c2a89a9d46bf49248762d944e17b1baf
                    isNullResult = (IsNothing(_AddresseMailDLI_c2a89a9d46bf49248762d944e17b1baf))

                                            End If
                currentAction = SessionTrace("34. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1...")
                currentAction = SessionTrace("34.1. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1...")
                                If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfAddress
                End If

                HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1
                currentAction = SessionTrace("34.2. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1...")
                                If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1
                currentAction = SessionTrace("34.3. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany.Code = 1...")
                                If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany = New InMotionGIT.Common.DataType.LookUpValueExtend
                End If

                HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany.Code = 1
                currentAction = SessionTrace("34.4. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1...")
                                If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

                HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1

                currentAction = SessionTrace("35. Call Function 'Retrieve addresses by id' with parameters (Process date, User company of the address, Id value of the address, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                Dim _AddressDLICollection_457e74c7e8ce42cfadfd4498d09d5658 As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                _AddressDLICollection_457e74c7e8ce42cfadfd4498d09d5658 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesByIdDLI(processDate:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.EffectiveDate, userCompany:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany, addressId:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, consumer:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation, typeOfAddress:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection = _AddressDLICollection_457e74c7e8ce42cfadfd4498d09d5658
                isNullResult = (IsNothing(_AddressDLICollection_457e74c7e8ce42cfadfd4498d09d5658))

                currentAction = SessionTrace("36. If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection.Count <> 0 Then")
                If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection.Count <> 0 Then

                    currentAction = SessionTrace("37. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection(0).I...")
                    currentAction = SessionTrace("37.1. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection(0).I...")
                                    If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection(0).InternalAddressKey

                    currentAction = SessionTrace("38. Call Function 'Retrieve a physical address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                    Dim _AddressPhysicalAddressDLI_fb65e18a367d4cc48f3afa836229c68a As InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                    _AddressPhysicalAddressDLI_fb65e18a367d4cc48f3afa836229c68a = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrievePhysicalAddressDLI(processDate:=Date.Today, addressId:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, internalAddressKey:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey, consumer:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation)
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI = _AddressPhysicalAddressDLI_fb65e18a367d4cc48f3afa836229c68a
                    isNullResult = (IsNothing(_AddressPhysicalAddressDLI_fb65e18a367d4cc48f3afa836229c68a))

                                                Else
                    currentAction = SessionTrace("39. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2...")
                    currentAction = SessionTrace("39.1. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2...")
                                    If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                    If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2

                    currentAction = SessionTrace("40. Call Function 'Retrieve addresses by id' with parameters (Process date, User company of the address, Id value of the address, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                    Dim _AddressDLICollection_06a703372f15454e89a65782baf0821c As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                    _AddressDLICollection_06a703372f15454e89a65782baf0821c = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesByIdDLI(processDate:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.RiskInformation.EffectiveDate, userCompany:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany, addressId:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, consumer:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation, typeOfAddress:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection = _AddressDLICollection_06a703372f15454e89a65782baf0821c
                    isNullResult = (IsNothing(_AddressDLICollection_06a703372f15454e89a65782baf0821c))

                    currentAction = SessionTrace("41. If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection.Count <> 0 Then")
                    If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection.Count <> 0 Then

                                                        Else
                        currentAction = SessionTrace("42. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection(0).I...")
                        currentAction = SessionTrace("42.1. HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection(0).I...")
                                        If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                        If IsNothing(HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                        HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressDLICollection(0).InternalAddressKey

                        currentAction = SessionTrace("43. Call Function 'Retrieve a physical address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                        Dim _AddressPhysicalAddressDLI_062f9775c515497ca59de679e0825c0a As InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                        _AddressPhysicalAddressDLI_062f9775c515497ca59de679e0825c0a = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrievePhysicalAddressDLI(processDate:=Date.Today, addressId:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, internalAddressKey:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey, consumer:=HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.ConsumerInformation)
                        HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.AddressPhysicalAddressDLI = _AddressPhysicalAddressDLI_062f9775c515497ca59de679e0825c0a
                        isNullResult = (IsNothing(_AddressPhysicalAddressDLI_062f9775c515497ca59de679e0825c0a))

                                                            End If
                                                        End If
                                                    End If
            currentAction = SessionTrace("44. If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.frompanel = True Then")
            If HT5NNCotizacionPolizaHogar3AdicionalParametersInstance.frompanel = True Then

                currentAction = SessionTrace("45. TabGeneral.Visible = true, zone0.Enabled = false, zone2.Enabled = false...")
                currentAction = SessionTrace("45.1. TabGeneral.Visible = true...")
                resultData.AddControlBehavior("TabGeneral", "show")
                currentAction = SessionTrace("45.2. zone0.Enabled = false...")
                resultData.AddControlBehavior("zone0", "disabled")
                currentAction = SessionTrace("45.3. zone2.Enabled = false...")
                resultData.AddControlBehavior("zone2", "disabled")
                currentAction = SessionTrace("45.4. ZoneModulosCoberturas.Enabled = false...")
                resultData.AddControlBehavior("ZoneModulosCoberturas", "disabled")
                currentAction = SessionTrace("45.5. zone13.Visible = false...")
                resultData.AddControlBehavior("zone13", "hide")
                currentAction = SessionTrace("45.6. tab5Cliente.Visible = true...")
                resultData.AddControlBehavior("tab5Cliente", "show")
                currentAction = SessionTrace("45.7. tab1Zone.Enabled = false...")
                resultData.AddControlBehavior("tab1Zone", "disabled")
                currentAction = SessionTrace("45.8. zone34.Enabled = false...")
                resultData.AddControlBehavior("zone34", "disabled")
                currentAction = SessionTrace("45.9. zone5.Enabled = false...")
                resultData.AddControlBehavior("zone5", "disabled")
                currentAction = SessionTrace("45.10. zone16.Visible = false...")
                resultData.AddControlBehavior("zone16", "hide")
                currentAction = SessionTrace("45.11. tab0.Visible = true...")
                resultData.AddControlBehavior("tab0", "show")
                currentAction = SessionTrace("45.12. zone3.Enabled = false...")
                resultData.AddControlBehavior("zone3", "disabled")
                currentAction = SessionTrace("45.13. zone4.Enabled = false...")
                resultData.AddControlBehavior("zone4", "disabled")
                currentAction = SessionTrace("45.14. zone6.Enabled = false...")
                resultData.AddControlBehavior("zone6", "disabled")
                currentAction = SessionTrace("45.15. zone11.Visible = false...")
                resultData.AddControlBehavior("zone11", "hide")
                currentAction = SessionTrace("45.16. zoneAccept.Visible = false...")
                resultData.AddControlBehavior("zoneAccept", "hide")
                currentAction = SessionTrace("45.17. botonesMenu.Visible = false...")
                resultData.AddControlBehavior("botonesMenu", "hide")
                currentAction = SessionTrace("45.18. ModuleSelected.Visible = true...")
                resultData.AddControlBehavior("ModuleSelected", "show")
                currentAction = SessionTrace("45.19. label20.Visible = false...")
                resultData.AddControlBehavior("label20", "hide")

                                                        End If

        End Sub
#End Region
#Region "Utilities"


        Private Shared Sub GetTransferParameters(parametersData As HT5NNCotizacionPolizaHogar3AdicionalParameters, fromid As String)
            Dim fromDocumentCache As Object = Nothing

            If Not String.IsNullOrEmpty(fromid) Then
                fromDocumentCache = HttpContext.Current.Session(fromid)
                HttpContext.Current.Session.Remove(fromid)

            Else
                fromDocumentCache = HttpContext.Current.Session(HttpContext.Current.Session("fromid"))
                HttpContext.Current.Session.Remove(HttpContext.Current.Session("fromid"))
                HttpContext.Current.Session.Remove("fromid")
            End If

            If Not IsNothing(fromDocumentCache) Then
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("RiskInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CantidadMascotas", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("RamoPorDefecto", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProductoporDefecto", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Module1", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Module2", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Module3", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Module4", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Module5", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Module6", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Module7", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Module8", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Module9", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Module10", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Module11", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Module12", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProductMaster", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PrimaTotal", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("eMail", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProducerClientID", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PlanType", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClientExistInDB", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Age", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("SendMailIndicator", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("MailToProducerIndicator", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("uwcaseid", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("RecoveryCaseIndicator", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("StatusRun", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("StatusCase", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClientName", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OnLinePrintIndicator", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PolicyDocument", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OnLinePrintResult", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("YearCollection", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("BasicInsuredAmountEstructura", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("BasicInsuredAmountContenido", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CapitalEstructura", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CapitalContenido", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProductMasterDescription", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PreviousPayment", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AddresseMailDLI", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AddressPhysicalAddressDLI", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AddressDLICollection", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ConsumerInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UsercodeBO", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PlanillaModificacion", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PlanillaVisualizacion", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UsercodeFASI", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ErrorsFound", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClienteIndicado", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ModuleBasico", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UnderwritingCase", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("frompanel", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowGeneral", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowBasicInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowAdditionalInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowPaymentInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowAddressInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowMoreInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("DireccionMostrar", fromDocumentCache, parametersData)
            End If
        End Sub

        Private Shared Function SessionTrace(message As String) As String

            If Not IsNothing(HttpContext.Current.Session("Form.Track")) AndAlso HttpContext.Current.Session("Form.Track").ToString.ToLower = "true" Then
                Dim tracelog As String = HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath")))

                tracelog += String.Format(CultureInfo.InvariantCulture, "{0} {1}<br>{2}", Now.ToString("hh:mm:ss.fff"), message, vbCrLf)
                HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath"))) = tracelog
            End If

            Return message
        End Function

#End Region


#Region "Storage Database Methods"

      Private Shared Sub StoreFormInformation(formData As HT5NNCotizacionPolizaHogar3AdicionalParameters)
            If Not IsNothing(formData) Then
                Dim foundData As Boolean

                If formData.InternalId.IsEmpty Then
                    formData.InternalId = Guid.NewGuid.ToString
                Else
                    With New DataManagerFactory("SELECT COUNT(FormId) FROM FrontOffice.DocumentCache WHERE FormId = @:FormId",
                                 "FrontOffice.DocumentCache", "FrontOfficeConnectionString")
                        .AddParameter("FormId", DbType.AnsiStringFixedLength, 36, False, formData.InternalId)
                        foundData = .QueryExecuteScalarToInteger > 0
                    End With
                End If

                If foundData Then
                    UpdateStorageData(formData)
                Else
                    InsertStorageData(formData)
                End If

                If Not IsNothing(HttpContext.Current.Session("Form.Track")) AndAlso
                    HttpContext.Current.Session("Form.Track").ToString.ToLower = "true" Then
                    HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.HT5NNCotizacionPolizaHogar3Adicional", formData.InternalId)) = formData
                End If

                If Not IsNothing(HttpContext.Current.Session("Form.Track.Parameters")) AndAlso
                    HttpContext.Current.Session("Form.Track.Parameters").ToString.ToLower = "true" Then

                    If Not IsNothing(HttpContext.Current.Session("Form.Track")) AndAlso HttpContext.Current.Session("Form.Track").ToString.ToLower = "true" Then
                        InMotionGIT.Common.Helpers.FileHandler.SaveContent(String.Format(CultureInfo.InvariantCulture, 
                                                                                         "{0}\{1}.HT5NNCotizacionPolizaHogar3Adicional.txt", ConfigurationManager.AppSettings("Path.Logs"), formData.InternalId), 
                                                                                         HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", 
                                                                                                                                   IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath"))))
                    End If

                    InMotionGIT.Common.Helpers.Serialize.SerializeToFile(Of HT5NNCotizacionPolizaHogar3AdicionalParameters)(formData, String.Format(CultureInfo.InvariantCulture, "{0}\{1}.HT5NNCotizacionPolizaHogar3Adicional.xml", 
                                                                                                                        ConfigurationManager.AppSettings("Path.Logs"), formData.InternalId), True)
                End If
            End If
        End Sub

        Private Shared Function RetrieveFormInformationFromDatabase(instanceFormId As String) As HT5NNCotizacionPolizaHogar3AdicionalParameters
            Dim result As HT5NNCotizacionPolizaHogar3AdicionalParameters = Nothing
            Dim records As DataTable = Nothing

            With New DataManagerFactory("SELECT Content FROM FrontOffice.DocumentCache WHERE FormId = @:FormId",
                                        "FrontOffice.DocumentCache", "FrontOfficeConnectionString")

            .AddParameter("FormId", DbType.AnsiStringFixedLength, 36, False, instanceFormId)
                records = .QueryExecuteToTable(True)
            End With

            If records.Rows.Count > 0 Then
                result = Serialize.Deserialize(Of HT5NNCotizacionPolizaHogar3AdicionalParameters)(records.FirstRow.Item("Content"))
            End If

            Return result
        End Function

        Private Shared Sub InsertStorageData(formData As HT5NNCotizacionPolizaHogar3AdicionalParameters)
            Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
	    
            With New DataManagerFactory("INSERT INTO FrontOffice.DocumentCache (FormId, ModelId, UserId, Page, Content, CreationDate, UpdateDate) VALUES(@:FormId, @:ModelId, @:UserId, @:Page, @:Content, @:CreationDate, @:UpdateDate)",
                                        "FrontOffice.DocumentCache", "FrontOfficeConnectionString")

                .AddParameter("FormId", DbType.AnsiStringFixedLength, 36, False, formData.InternalId)
                .AddParameter("ModelId", DbType.AnsiStringFixedLength, 36, False, "1eba596c-a63f-479f-a86c-2d9ede7ddf13")
                .AddParameter("UserId", DbType.AnsiString, 256, False, UserInfo.UserId)
            .AddParameter("Page", DbType.AnsiString, 255, False, "Me.AppRelativeVirtualPath")
            .AddParameter("Content", DbType.Xml, 1, False, Serialize.Serialize(Of HT5NNCotizacionPolizaHogar3AdicionalParameters)(formData))
            .AddParameter("CreationDate", DbType.DateTime, 20, False, Now)
            .AddParameter("UpdateDate", DbType.DateTime, 20, False, Now)

                .CommandExecute()
            End With
        End Sub

        Private Shared Sub UpdateStorageData(formData As HT5NNCotizacionPolizaHogar3AdicionalParameters)
            Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
	    
            With New DataManagerFactory("UPDATE FrontOffice.DocumentCache SET ModelId = @:ModelId, UserId = @:UserId, Page = @:Page, Content = @:Content, UpdateDate = @:UpdateDate WHERE FormId = @:FormId",
                                        "FrontOffice.DocumentCache", "FrontOfficeConnectionString")

                .AddParameter("ModelId", DbType.AnsiStringFixedLength, 36, False, "1eba596c-a63f-479f-a86c-2d9ede7ddf13")
                .AddParameter("UserId", DbType.AnsiString, 256, False, UserInfo.UserId)
            .AddParameter("Page", DbType.AnsiString, 255, False, "Me.AppRelativeVirtualPath")
            .AddParameter("Content", DbType.Xml, 1, False, Serialize.Serialize(Of HT5NNCotizacionPolizaHogar3AdicionalParameters)(formData))
            .AddParameter("UpdateDate", DbType.DateTime, 20, False, Now)
            .AddParameter("FormId", DbType.AnsiStringFixedLength, 36, False, formData.InternalId)

                .CommandExecute()
            End With
        End Sub

#End Region


#Region "Contracts Mappers"

        Private Shared Function EntryDataToClass(parametersData As HT5NNCotizacionPolizaHogar3AdicionalParameters, formData As EntryData) As HT5NNCotizacionPolizaHogar3AdicionalParameters
            If IsNothing(parametersData) Then
                parametersData = New HT5NNCotizacionPolizaHogar3AdicionalParameters
            End If

            If IsNothing(parametersData.RiskInformation) Then
                parametersData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
            End If
            If IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                parametersData.RiskInformation.HomeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness
            End If
            If IsNothing(parametersData.RiskInformation.Roles) Then
                parametersData.RiskInformation.Roles = New InMotionGIT.Policy.Entity.Contracts.RoleCollection
            End If

            With parametersData
                .InternalId = formData.InstanceFormId
                .RiskInformation.EffectiveDate = formData.RiskInformationEffectiveDate
                .RiskInformation.ProductCode = formData.RiskInformationProductCode
                .RiskInformation.LineOfBusiness = formData.RiskInformationLineOfBusiness
                .RiskInformation.HomeLineOfBusiness.Ownership = formData.RiskInformationHomeLineOfBusinessOwnership
                .RiskInformation.HomeLineOfBusiness.HomePurchasedCoverage = formData.RiskInformationHomeLineOfBusinessHomePurchasedCoverage
                .RiskInformation.HomeLineOfBusiness.PurchasePrice = formData.RiskInformationHomeLineOfBusinessPurchasePrice
                .RiskInformation.HomeLineOfBusiness.CurrencyOfPurchasePrice = formData.RiskInformationHomeLineOfBusinessCurrencyOfPurchasePrice
                .RiskInformation.HomeLineOfBusiness.DateOfPurchase = formData.RiskInformationHomeLineOfBusinessDateOfPurchase
                .RiskInformation.HomeLineOfBusiness.OtherConstructionMaterials = formData.RiskInformationHomeLineOfBusinessOtherConstructionMaterials
                .RiskInformation.HomeLineOfBusiness.RoofType = formData.RiskInformationHomeLineOfBusinessRoofType
                .RiskInformation.HomeLineOfBusiness.RoofYear = formData.RiskInformationHomeLineOfBusinessRoofYear
                .RiskInformation.HomeLineOfBusiness.AnotherPolicyIndicator = formData.RiskInformationHomeLineOfBusinessAnotherPolicyIndicator
                .RiskInformation.HomeLineOfBusiness.InsuredAmountOfTheOtherPolicy = formData.RiskInformationHomeLineOfBusinessInsuredAmountOfTheOtherPolicy
                .RiskInformation.HomeLineOfBusiness.CurrencyOtherPolicy = formData.RiskInformationHomeLineOfBusinessCurrencyOtherPolicy
                .RiskInformation.HomeLineOfBusiness.ExpirationOfTheOtherPolicy = formData.RiskInformationHomeLineOfBusinessExpirationOfTheOtherPolicy
                .RiskInformation.HomeLineOfBusiness.NumberOfCars = formData.RiskInformationHomeLineOfBusinessNumberOfCars
                .RiskInformation.HomeLineOfBusiness.Chimneys = formData.RiskInformationHomeLineOfBusinessChimneys
                .RiskInformation.HomeLineOfBusiness.Bedrooms = formData.RiskInformationHomeLineOfBusinessBedrooms
                .RiskInformation.HomeLineOfBusiness.FullBathrooms = formData.RiskInformationHomeLineOfBusinessFullBathrooms
                .RiskInformation.HomeLineOfBusiness.HalfBathrooms = formData.RiskInformationHomeLineOfBusinessHalfBathrooms
                .RiskInformation.HomeLineOfBusiness.AirConditioningType = formData.RiskInformationHomeLineOfBusinessAirConditioningType
                .RiskInformation.HomeLineOfBusiness.GasolineTank = formData.RiskInformationHomeLineOfBusinessGasolineTank
                .RiskInformation.HomeLineOfBusiness.Heating = formData.RiskInformationHomeLineOfBusinessHeating
                .RiskInformation.HomeLineOfBusiness.Sprinklers = formData.RiskInformationHomeLineOfBusinessSprinklers
                .RiskInformation.HomeLineOfBusiness.DistanceToFireHydrant = formData.RiskInformationHomeLineOfBusinessDistanceToFireHydrant
                .RiskInformation.HomeLineOfBusiness.CompanyMonitoringTheAlarm = formData.RiskInformationHomeLineOfBusinessCompanyMonitoringTheAlarm
                .RiskInformation.HomeLineOfBusiness.SmokingAllowed = formData.RiskInformationHomeLineOfBusinessSmokingAllowed
                .RiskInformation.HomeLineOfBusiness.DistanceToFireDepartment = formData.RiskInformationHomeLineOfBusinessDistanceToFireDepartment
                .RiskInformation.HomeLineOfBusiness.NearestFireDepartmentName = formData.RiskInformationHomeLineOfBusinessNearestFireDepartmentName
                .RiskInformation.HomeLineOfBusiness.UbicationOfSwimmingPool = formData.RiskInformationHomeLineOfBusinessUbicationOfSwimmingPool
                .RiskInformation.HomeLineOfBusiness.FencedPool = formData.RiskInformationHomeLineOfBusinessFencedPool
                .RiskInformation.HomeLineOfBusiness.FenceHeight = formData.RiskInformationHomeLineOfBusinessFenceHeight
                .RiskInformation.HomeLineOfBusiness.Trampoline = formData.RiskInformationHomeLineOfBusinessTrampoline
                .RiskInformation.HomeLineOfBusiness.PetsOrLivestock = formData.RiskInformationHomeLineOfBusinessPetsOrLivestock
                .CantidadMascotas = formData.CantidadMascotas
                .RiskInformation.HomeLineOfBusiness.AnimalsDescriptions = formData.RiskInformationHomeLineOfBusinessAnimalsDescriptions
                .RiskInformation.HomeLineOfBusiness.PreviousAttack = formData.RiskInformationHomeLineOfBusinessPreviousAttack
                If formData.RolesRole_Role.IsNotEmpty Then
                    Dim currentItem As InMotionGIT.Policy.Entity.Contracts.Role
                  
	            For Each itemData As RolesRole_RoleItem In formData.RolesRole_Role
                        currentItem = (From _x In parametersData.RiskInformation.Roles Where _x.ClientID = itemData.ClientID Select _x).FirstOrDefault()
                     
	                If currentItem.IsEmpty Then
                            currentItem = New InMotionGIT.Policy.Entity.Contracts.Role
                  
                            With currentItem
                                .Client = New InMotionGIT.Client.Entity.Contracts.Client

                                .Client.FirstName = itemData.ClientFirstName
                                .Client.LastName = itemData.ClientLastName
                                .Client.LastName2 = itemData.ClientLastName2
                                .ClientRole = itemData.ClientRole
                                .ClientID = itemData.ClientID
                            End With
                        
                            parametersData.RiskInformation.Roles.Add(currentItem)
                     
	                Else
                            With currentItem
                                If IsNothing(.Client) Then
                                    .Client = New InMotionGIT.Client.Entity.Contracts.Client
                                End If

                                .Client.FirstName = itemData.ClientFirstName
                                .Client.LastName = itemData.ClientLastName
                                .Client.LastName2 = itemData.ClientLastName2
                                .ClientRole = itemData.ClientRole
                                .ClientID = itemData.ClientID
                            End With
                        End If
                    Next
                End If
            End With

            Return parametersData
        End Function

        Private Shared Function ClassToEntryData(formData As EntryData, parametersData As HT5NNCotizacionPolizaHogar3AdicionalParameters) As EntryData
            formData = New EntryData

            With formData
                .InstanceFormId = parametersData.InternalId
                If Not IsNothing(parametersData.RiskInformation) Then
                    .RiskInformationEffectiveDate = parametersData.RiskInformation.EffectiveDate
                End If
                If Not IsNothing(parametersData.RiskInformation) Then
                    .RiskInformationProductCode = parametersData.RiskInformation.ProductCode
                End If
                .uwcaseid = parametersData.uwcaseid
                If Not IsNothing(parametersData.RiskInformation) Then
                    .RiskInformationLineOfBusiness = parametersData.RiskInformation.LineOfBusiness
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessOwnership = parametersData.RiskInformation.HomeLineOfBusiness.Ownership
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessHomePurchasedCoverage = parametersData.RiskInformation.HomeLineOfBusiness.HomePurchasedCoverage
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessPurchasePrice = parametersData.RiskInformation.HomeLineOfBusiness.PurchasePrice
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessCurrencyOfPurchasePrice = parametersData.RiskInformation.HomeLineOfBusiness.CurrencyOfPurchasePrice
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessDateOfPurchase = parametersData.RiskInformation.HomeLineOfBusiness.DateOfPurchase
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessOtherConstructionMaterials = parametersData.RiskInformation.HomeLineOfBusiness.OtherConstructionMaterials
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessRoofType = parametersData.RiskInformation.HomeLineOfBusiness.RoofType
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessRoofYear = parametersData.RiskInformation.HomeLineOfBusiness.RoofYear
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessAnotherPolicyIndicator = parametersData.RiskInformation.HomeLineOfBusiness.AnotherPolicyIndicator
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessInsuredAmountOfTheOtherPolicy = parametersData.RiskInformation.HomeLineOfBusiness.InsuredAmountOfTheOtherPolicy
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessCurrencyOtherPolicy = parametersData.RiskInformation.HomeLineOfBusiness.CurrencyOtherPolicy
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessExpirationOfTheOtherPolicy = parametersData.RiskInformation.HomeLineOfBusiness.ExpirationOfTheOtherPolicy
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessNumberOfCars = parametersData.RiskInformation.HomeLineOfBusiness.NumberOfCars
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessChimneys = parametersData.RiskInformation.HomeLineOfBusiness.Chimneys
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessBedrooms = parametersData.RiskInformation.HomeLineOfBusiness.Bedrooms
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessFullBathrooms = parametersData.RiskInformation.HomeLineOfBusiness.FullBathrooms
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessHalfBathrooms = parametersData.RiskInformation.HomeLineOfBusiness.HalfBathrooms
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessAirConditioningType = parametersData.RiskInformation.HomeLineOfBusiness.AirConditioningType
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessGasolineTank = parametersData.RiskInformation.HomeLineOfBusiness.GasolineTank
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessHeating = parametersData.RiskInformation.HomeLineOfBusiness.Heating
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessSprinklers = parametersData.RiskInformation.HomeLineOfBusiness.Sprinklers
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessDistanceToFireHydrant = parametersData.RiskInformation.HomeLineOfBusiness.DistanceToFireHydrant
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessCompanyMonitoringTheAlarm = parametersData.RiskInformation.HomeLineOfBusiness.CompanyMonitoringTheAlarm
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessSmokingAllowed = parametersData.RiskInformation.HomeLineOfBusiness.SmokingAllowed
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessDistanceToFireDepartment = parametersData.RiskInformation.HomeLineOfBusiness.DistanceToFireDepartment
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessNearestFireDepartmentName = parametersData.RiskInformation.HomeLineOfBusiness.NearestFireDepartmentName
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessUbicationOfSwimmingPool = parametersData.RiskInformation.HomeLineOfBusiness.UbicationOfSwimmingPool
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessFencedPool = parametersData.RiskInformation.HomeLineOfBusiness.FencedPool
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessFenceHeight = parametersData.RiskInformation.HomeLineOfBusiness.FenceHeight
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessTrampoline = parametersData.RiskInformation.HomeLineOfBusiness.Trampoline
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessPetsOrLivestock = parametersData.RiskInformation.HomeLineOfBusiness.PetsOrLivestock
                End If
                .CantidadMascotas = parametersData.CantidadMascotas
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessAnimalsDescriptions = parametersData.RiskInformation.HomeLineOfBusiness.AnimalsDescriptions
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HomeLineOfBusiness) Then
                    .RiskInformationHomeLineOfBusinessPreviousAttack = parametersData.RiskInformation.HomeLineOfBusiness.PreviousAttack
                End If
                .RolesRole_Role = New List(Of RolesRole_RoleItem)

                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.Roles) Then
                    Dim newItem as RolesRole_RoleItem
                    
                    For Each itemData As InMotionGIT.Policy.Entity.Contracts.Role In parametersData.RiskInformation.Roles
                        newItem = New RolesRole_RoleItem
                        
                        With newItem
                            If Not IsNothing(itemData.Client) Then
                                .ClientFirstName = itemData.Client.FirstName
                            End If
                            If Not IsNothing(itemData.Client) Then
                                .ClientLastName = itemData.Client.LastName
                            End If
                            If Not IsNothing(itemData.Client) Then
                                .ClientLastName2 = itemData.Client.LastName2
                            End If
                            .ClientRole = itemData.ClientRole
                            .ClientID = itemData.ClientID                        
                        End With
                        
                        .RolesRole_Role.Add(newItem)
                    Next
                End If


            End With

            Return formData
        End Function

#End Region

#Region "Common Utilities"

        Private Shared Sub SetDefaultValuesFromQueryString(formData As HT5NNCotizacionPolizaHogar3AdicionalParameters)
            If HttpContext.Current.Request.QueryString("CantidadMascotas").IsNotEmpty Then
                formData.CantidadMascotas = HttpContext.Current.Request.QueryString("CantidadMascotas")
            End If
            If HttpContext.Current.Request.QueryString("RamoPorDefecto").IsNotEmpty Then
                formData.RamoPorDefecto = HttpContext.Current.Request.QueryString("RamoPorDefecto")
            End If
            If HttpContext.Current.Request.QueryString("ProductoporDefecto").IsNotEmpty Then
                formData.ProductoporDefecto = HttpContext.Current.Request.QueryString("ProductoporDefecto")
            End If
            If HttpContext.Current.Request.QueryString("Module1").IsNotEmpty Then
                formData.Module1 = HttpContext.Current.Request.QueryString("Module1")
            End If
            If HttpContext.Current.Request.QueryString("Module2").IsNotEmpty Then
                formData.Module2 = HttpContext.Current.Request.QueryString("Module2")
            End If
            If HttpContext.Current.Request.QueryString("Module3").IsNotEmpty Then
                formData.Module3 = HttpContext.Current.Request.QueryString("Module3")
            End If
            If HttpContext.Current.Request.QueryString("Module4").IsNotEmpty Then
                formData.Module4 = HttpContext.Current.Request.QueryString("Module4")
            End If
            If HttpContext.Current.Request.QueryString("Module5").IsNotEmpty Then
                formData.Module5 = HttpContext.Current.Request.QueryString("Module5")
            End If
            If HttpContext.Current.Request.QueryString("Module6").IsNotEmpty Then
                formData.Module6 = HttpContext.Current.Request.QueryString("Module6")
            End If
            If HttpContext.Current.Request.QueryString("Module7").IsNotEmpty Then
                formData.Module7 = HttpContext.Current.Request.QueryString("Module7")
            End If
            If HttpContext.Current.Request.QueryString("Module8").IsNotEmpty Then
                formData.Module8 = HttpContext.Current.Request.QueryString("Module8")
            End If
            If HttpContext.Current.Request.QueryString("Module9").IsNotEmpty Then
                formData.Module9 = HttpContext.Current.Request.QueryString("Module9")
            End If
            If HttpContext.Current.Request.QueryString("Module10").IsNotEmpty Then
                formData.Module10 = HttpContext.Current.Request.QueryString("Module10")
            End If
            If HttpContext.Current.Request.QueryString("Module11").IsNotEmpty Then
                formData.Module11 = HttpContext.Current.Request.QueryString("Module11")
            End If
            If HttpContext.Current.Request.QueryString("Module12").IsNotEmpty Then
                formData.Module12 = HttpContext.Current.Request.QueryString("Module12")
            End If
            If HttpContext.Current.Request.QueryString("PrimaTotal").IsNotEmpty Then
                formData.PrimaTotal = HttpContext.Current.Request.QueryString("PrimaTotal")
            End If
            If HttpContext.Current.Request.QueryString("eMail").IsNotEmpty Then
                formData.eMail = HttpContext.Current.Request.QueryString("eMail")
            End If
            If HttpContext.Current.Request.QueryString("ProducerClientID").IsNotEmpty Then
                formData.ProducerClientID = HttpContext.Current.Request.QueryString("ProducerClientID")
            End If
            If HttpContext.Current.Request.QueryString("PlanType").IsNotEmpty Then
                formData.PlanType = HttpContext.Current.Request.QueryString("PlanType")
            End If
            If HttpContext.Current.Request.QueryString("ClientExistInDB").IsNotEmpty Then
                formData.ClientExistInDB = HttpContext.Current.Request.QueryString("ClientExistInDB")
            End If
            If HttpContext.Current.Request.QueryString("Age").IsNotEmpty Then
                formData.Age = HttpContext.Current.Request.QueryString("Age")
            End If
            If HttpContext.Current.Request.QueryString("SendMailIndicator").IsNotEmpty Then
                formData.SendMailIndicator = HttpContext.Current.Request.QueryString("SendMailIndicator")
            End If
            If HttpContext.Current.Request.QueryString("MailToProducerIndicator").IsNotEmpty Then
                formData.MailToProducerIndicator = HttpContext.Current.Request.QueryString("MailToProducerIndicator")
            End If
            If HttpContext.Current.Request.QueryString("uwcaseid").IsNotEmpty Then
                formData.uwcaseid = HttpContext.Current.Request.QueryString("uwcaseid")
            End If
            If HttpContext.Current.Request.QueryString("RecoveryCaseIndicator").IsNotEmpty Then
                formData.RecoveryCaseIndicator = HttpContext.Current.Request.QueryString("RecoveryCaseIndicator")
            End If
            If HttpContext.Current.Request.QueryString("StatusRun").IsNotEmpty Then
                formData.StatusRun = HttpContext.Current.Request.QueryString("StatusRun")
            End If
            If HttpContext.Current.Request.QueryString("StatusCase").IsNotEmpty Then
                formData.StatusCase = HttpContext.Current.Request.QueryString("StatusCase")
            End If
            If HttpContext.Current.Request.QueryString("ClientName").IsNotEmpty Then
                formData.ClientName = HttpContext.Current.Request.QueryString("ClientName")
            End If
            If HttpContext.Current.Request.QueryString("OnLinePrintIndicator").IsNotEmpty Then
                formData.OnLinePrintIndicator = HttpContext.Current.Request.QueryString("OnLinePrintIndicator")
            End If
            If HttpContext.Current.Request.QueryString("PolicyDocument").IsNotEmpty Then
                formData.PolicyDocument = HttpContext.Current.Request.QueryString("PolicyDocument")
            End If
            If HttpContext.Current.Request.QueryString("OnLinePrintResult").IsNotEmpty Then
                formData.OnLinePrintResult = HttpContext.Current.Request.QueryString("OnLinePrintResult")
            End If
            If HttpContext.Current.Request.QueryString("CapitalEstructura").IsNotEmpty Then
                formData.CapitalEstructura = HttpContext.Current.Request.QueryString("CapitalEstructura")
            End If
            If HttpContext.Current.Request.QueryString("CapitalContenido").IsNotEmpty Then
                formData.CapitalContenido = HttpContext.Current.Request.QueryString("CapitalContenido")
            End If
            If HttpContext.Current.Request.QueryString("ProductMasterDescription").IsNotEmpty Then
                formData.ProductMasterDescription = HttpContext.Current.Request.QueryString("ProductMasterDescription")
            End If
            If HttpContext.Current.Request.QueryString("PreviousPayment").IsNotEmpty Then
                formData.PreviousPayment = HttpContext.Current.Request.QueryString("PreviousPayment")
            End If
            If HttpContext.Current.Request.QueryString("UsercodeBO").IsNotEmpty Then
                formData.UsercodeBO = HttpContext.Current.Request.QueryString("UsercodeBO")
            End If
            If HttpContext.Current.Request.QueryString("PlanillaModificacion").IsNotEmpty Then
                formData.PlanillaModificacion = HttpContext.Current.Request.QueryString("PlanillaModificacion")
            End If
            If HttpContext.Current.Request.QueryString("PlanillaVisualizacion").IsNotEmpty Then
                formData.PlanillaVisualizacion = HttpContext.Current.Request.QueryString("PlanillaVisualizacion")
            End If
            If HttpContext.Current.Request.QueryString("UsercodeFASI").IsNotEmpty Then
                formData.UsercodeFASI = HttpContext.Current.Request.QueryString("UsercodeFASI")
            End If
            If HttpContext.Current.Request.QueryString("ErrorsFound").IsNotEmpty Then
                formData.ErrorsFound = HttpContext.Current.Request.QueryString("ErrorsFound")
            End If
            If HttpContext.Current.Request.QueryString("ClienteIndicado").IsNotEmpty Then
                formData.ClienteIndicado = HttpContext.Current.Request.QueryString("ClienteIndicado")
            End If
            If HttpContext.Current.Request.QueryString("frompanel").IsNotEmpty Then
                formData.frompanel = HttpContext.Current.Request.QueryString("frompanel")
            End If
            If HttpContext.Current.Request.QueryString("ShowGeneral").IsNotEmpty Then
                formData.ShowGeneral = HttpContext.Current.Request.QueryString("ShowGeneral")
            End If
            If HttpContext.Current.Request.QueryString("ShowBasicInformation").IsNotEmpty Then
                formData.ShowBasicInformation = HttpContext.Current.Request.QueryString("ShowBasicInformation")
            End If
            If HttpContext.Current.Request.QueryString("ShowAdditionalInformation").IsNotEmpty Then
                formData.ShowAdditionalInformation = HttpContext.Current.Request.QueryString("ShowAdditionalInformation")
            End If
            If HttpContext.Current.Request.QueryString("ShowPaymentInformation").IsNotEmpty Then
                formData.ShowPaymentInformation = HttpContext.Current.Request.QueryString("ShowPaymentInformation")
            End If
            If HttpContext.Current.Request.QueryString("ShowAddressInformation").IsNotEmpty Then
                formData.ShowAddressInformation = HttpContext.Current.Request.QueryString("ShowAddressInformation")
            End If
            If HttpContext.Current.Request.QueryString("ShowMoreInformation").IsNotEmpty Then
                formData.ShowMoreInformation = HttpContext.Current.Request.QueryString("ShowMoreInformation")
            End If
            If HttpContext.Current.Request.QueryString("DireccionMostrar").IsNotEmpty Then
                formData.DireccionMostrar = HttpContext.Current.Request.QueryString("DireccionMostrar")
            End If
        End Sub	

        Private Sub ValidateParametersInstance(ByRef formData As HT5NNCotizacionPolizaHogar3AdicionalParameters)
            If IsNothing(formData.RiskInformation) Then
                formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
            End If
            If IsNothing(formData.RiskInformation.HomeLineOfBusiness) Then
                formData.RiskInformation.HomeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness
            End If
            If IsNothing(formData.RiskInformation.Roles) Then
                formData.RiskInformation.Roles = New InMotionGIT.Policy.Entity.Contracts.RoleCollection
            End If

        End Sub

#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property RiskInformationEffectiveDate As System.DateTime
            <DataMember()> Public Property RiskInformationProductCode As System.Int32
            <DataMember()> Public Property uwcaseid As Int64
            <DataMember()> Public Property RiskInformationLineOfBusiness As System.Int32
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessOwnership As System.Int32
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessHomePurchasedCoverage As System.Boolean
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessPurchasePrice As System.Decimal
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessCurrencyOfPurchasePrice As System.Int32
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessDateOfPurchase As System.DateTime
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessOtherConstructionMaterials As System.String
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessRoofType As System.Int32
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessRoofYear As System.Int32
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessAnotherPolicyIndicator As System.Boolean
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessInsuredAmountOfTheOtherPolicy As System.Int64
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessCurrencyOtherPolicy As System.Int32
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessExpirationOfTheOtherPolicy As System.DateTime
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessNumberOfCars As System.Int32
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessChimneys As System.Int32
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessBedrooms As System.Int32
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessFullBathrooms As System.Int32
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessHalfBathrooms As System.Int32
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessAirConditioningType As System.Int32
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessGasolineTank As System.Boolean
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessHeating As System.Int32
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessSprinklers As System.Boolean
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessDistanceToFireHydrant As System.Decimal
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessCompanyMonitoringTheAlarm As System.String
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessSmokingAllowed As System.Boolean
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessDistanceToFireDepartment As System.Decimal
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessNearestFireDepartmentName As System.String
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessUbicationOfSwimmingPool As System.Int32
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessFencedPool As System.Boolean
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessFenceHeight As System.Int32
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessTrampoline As System.Boolean
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessPetsOrLivestock As System.Boolean
            <DataMember()> Public Property CantidadMascotas As Int32
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessAnimalsDescriptions As System.String
            <DataMember()> Public Property RiskInformationHomeLineOfBusinessPreviousAttack As System.Boolean
            <DataMember()> Public Property RiskInformationRolesClientFirstName As System.String
            <DataMember()> Public Property RiskInformationRolesClientLastName As System.String
            <DataMember()> Public Property RiskInformationRolesClientLastName2 As System.String
            <DataMember()> Public Property RiskInformationRolesClientRole As System.Int32
            <DataMember()> Public Property RolesRole_Role As List(Of RolesRole_RoleItem)

        End Class

        <Serializable()>
        <DataContract()>
        Public Class RolesRole_RoleItem

            <DataMember()> Public Property ClientFirstName As System.String
            <DataMember()> Public Property ClientLastName As System.String
            <DataMember()> Public Property ClientLastName2 As System.String
            <DataMember()> Public Property ClientRole As System.Int32
            '<DataMember()> Public Property ClientID As 
            <DataMember()> Public Property ClientID As System.String

        End Class

        <Serializable()>
        Public Class HT5NNCotizacionPolizaHogar3AdicionalParameters
            Inherits InMotionGIT.FrontOffice.Support.DataType.FormBase(Of HT5NNCotizacionPolizaHogar3AdicionalParameters)

            Public Property RiskInformation As InMotionGIT.Policy.Entity.Contracts.RiskInformation
            Public Property CantidadMascotas As Int32
            Public Property RamoPorDefecto As Int32
            Public Property ProductoporDefecto As Int32
            Public Property Module1 As Boolean
            Public Property Module2 As Boolean
            Public Property Module3 As Boolean
            Public Property Module4 As Boolean
            Public Property Module5 As Boolean
            Public Property Module6 As Boolean
            Public Property Module7 As Boolean
            Public Property Module8 As Boolean
            Public Property Module9 As Boolean
            Public Property Module10 As Boolean
            Public Property Module11 As Boolean
            Public Property Module12 As Boolean
            Public Property ProductMaster As InMotionGIT.Product.Entity.Contracts.ProductMaster
            Public Property PrimaTotal As Decimal
            Public Property eMail As String
            Public Property ProducerClientID As String
            Public Property PlanType As Int32
            Public Property ClientExistInDB As Boolean
            Public Property Age As Int32
            Public Property SendMailIndicator As Boolean
            Public Property MailToProducerIndicator As Boolean
            Public Property uwcaseid As Int64
            Public Property RecoveryCaseIndicator As Boolean
            Public Property StatusRun As Boolean
            Public Property StatusCase As Int32
            Public Property ClientName As String
            Public Property OnLinePrintIndicator As Boolean
            Public Property PolicyDocument As String
            Public Property OnLinePrintResult As Int32
            Public Property YearCollection As InMotionGIT.Common.Contracts.Errors.ErrorCollection
            Public Property BasicInsuredAmountEstructura As InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount
            Public Property BasicInsuredAmountContenido As InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount
            Public Property CapitalEstructura As Decimal
            Public Property CapitalContenido As Decimal
            Public Property ProductMasterDescription As String
            Public Property PreviousPayment As Boolean
            Public Property AddresseMailDLI As InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
            Public Property AddressPhysicalAddressDLI As InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
            Public Property AddressDLICollection As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
            Public Property ConsumerInformation As InMotionGIT.Common.Contracts.Process.ConsumerInformation
            Public Property UsercodeBO As Int32
            Public Property PlanillaModificacion As String
            Public Property PlanillaVisualizacion As String
            Public Property UsercodeFASI As Int32
            Public Property ErrorsFound As Boolean
            Public Property ClienteIndicado As String
            Public Property ModuleBasico As InMotionGIT.Policy.Entity.Contracts.Module
            Public Property UnderwritingCase As InMotionGIT.Underwriting.Contracts.UnderwritingCase
            Public Property frompanel As Boolean
            Public Property ShowGeneral As Boolean
            Public Property ShowBasicInformation As Boolean
            Public Property ShowAdditionalInformation As Boolean
            Public Property ShowPaymentInformation As Boolean
            Public Property ShowAddressInformation As Boolean
            Public Property ShowMoreInformation As Boolean
            Public Property DireccionMostrar As String

        End Class
#End Region

    End Class

End Namespace