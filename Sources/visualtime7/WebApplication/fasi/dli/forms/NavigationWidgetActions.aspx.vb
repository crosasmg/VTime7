'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Form Designer v7.3.36.1 at 2020-03-18 09:54:53 AM model release 8, Form Generator v1.0.37.37
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Net
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class NavigationWidgetActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"

       <WebMethod(EnableSession:=True)>
        Public Shared Function Initialization(id As String, urlid As String, fromid As String) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim instance As New EntryData With {.InstanceFormId = id}
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim currentAction As String = String.Empty
            
            
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                
                If id.IsEmpty AndAlso urlid.IsEmpty Then
                    instance.InstanceFormId = System.Guid.NewGuid().ToString
                  
                
                Else
                    instance.InstanceFormId = id.IfEmpty(urlid)
                End If             
             
                With resultData
                    .Success = True
                    .Data = New With {.Instance = instance, .LookUps = LoadLookupsList()}
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "NavigationWidget", "Initialization", currentAction)
            End Try
            
            Return resultData
        End Function
  

        Public Shared Function LoadLookupsList() As List(Of InMotionGIT.Common.DataType.LookUpPackage)
            Dim result As New List(Of InMotionGIT.Common.DataType.LookUpPackage)
            
            Dim dataFactory As New DataManagerFactory("PackageExecuteToLookUp", "LOOKUPS", "")
            Dim dataCommand As InMotionGIT.Common.Services.Contracts.DataCommand = Nothing
            
            dataCommand = dataFactory.AddCommand(String.Format(CultureInfo.CurrentCulture, "SELECT  LOOKUP.CODE, LOOKUP.DESCRIPTION FROM LOOKUP LOOKUP  WHERE LOOKUP.LOOKUPID = {0} AND LOOKUP.LANGUAGEID = {1} AND LOOKUP.RECORDSTATUS = {2}  AND NOT LOOKUP.DESCRIPTION IS NULL ORDER BY DESCRIPTION", 21, InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId(), 1), New InMotionGIT.Common.DataType.LookUpValue With {.Code = "CODE", .Description = "DESCRIPTION"}, "CATEGORYCODE", "LOOKUP", "Linked.FrontOffice")

            dataCommand = dataFactory.AddCommand(String.Format(CultureInfo.CurrentCulture, "SELECT  LOOKUP.CODE, LOOKUP.DESCRIPTION FROM LOOKUP LOOKUP  WHERE LOOKUP.LOOKUPID = {0} AND LOOKUP.LANGUAGEID = {1} AND LOOKUP.RECORDSTATUS = {2}  AND NOT LOOKUP.DESCRIPTION IS NULL ORDER BY DESCRIPTION", 2, InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId(), 1), New InMotionGIT.Common.DataType.LookUpValue With {.Code = "CODE", .Description = "DESCRIPTION"}, "STATUS", "LOOKUP", "Linked.FrontOffice")

            dataCommand = dataFactory.AddCommand(String.Format(CultureInfo.CurrentCulture, "SELECT  LOOKUP.CODE, LOOKUP.DESCRIPTION FROM LOOKUP LOOKUP  WHERE LOOKUP.LOOKUPID = {0} AND LOOKUP.LANGUAGEID = {1} AND LOOKUP.RECORDSTATUS = {2}  AND NOT LOOKUP.DESCRIPTION IS NULL ORDER BY DESCRIPTION", 21, InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId(), 1), New InMotionGIT.Common.DataType.LookUpValue With {.Code = "CODE", .Description = "DESCRIPTION"}, "CATEGORYCODETranslator", "LOOKUP", "Linked.FrontOffice")

            dataCommand = dataFactory.AddCommand(String.Format(CultureInfo.CurrentCulture, "SELECT  LOOKUP.CODE, LOOKUP.DESCRIPTION FROM LOOKUP LOOKUP  WHERE LOOKUP.LOOKUPID = {0} AND LOOKUP.LANGUAGEID = {1} AND LOOKUP.RECORDSTATUS = {2}  AND NOT LOOKUP.DESCRIPTION IS NULL ORDER BY DESCRIPTION", 2, InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId(), 1), New InMotionGIT.Common.DataType.LookUpValue With {.Code = "CODE", .Description = "DESCRIPTION"}, "STATUSTranslator", "LOOKUP", "Linked.FrontOffice")

            dataCommand = dataFactory.AddCommand(String.Format(CultureInfo.CurrentCulture, "SELECT  LOOKUP.CODE, LOOKUP.DESCRIPTION FROM LOOKUP LOOKUP  WHERE LOOKUP.LOOKUPID = {0} AND LOOKUP.LANGUAGEID = {1} AND LOOKUP.RECORDSTATUS = {2}  AND NOT LOOKUP.DESCRIPTION IS NULL ORDER BY DESCRIPTION", 1, InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId(), 1), New InMotionGIT.Common.DataType.LookUpValue With {.Code = "CODE", .Description = "DESCRIPTION"}, "LANGUAGEIDTranslator", "LOOKUP", "Linked.FrontOffice")
            
            result = dataFactory.PackageExecuteToLookUp()
	
            Return result
        End Function


        <WebMethod()>
        Public Shared Function NAVIGATIONDIRECTORY_GridTblDataLoad(filter As String, NAVIGATIONDIRECTORYDESCLANGUAGEID1 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.ID = 0, .NAME = String.Empty, .URLPATH = String.Empty, .CATEGORYCODE = 0, .IMAGEFILE = String.Empty, .MODELID = String.Empty, .STATUS = 0, .TITLE = String.Empty, .DESCRIPTION = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)
            
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")

                With New DataManagerFactory("SELECT NAVIGATIONDIRECTORY.ID, NAVIGATIONDIRECTORY.NAME, NAVIGATIONDIRECTORY.URLPATH, NAVIGATIONDIRECTORY.DOCUMENTTYPE, NAVIGATIONDIRECTORY.CATEGORYCODE, NAVIGATIONDIRECTORY.IMAGEFILE, NAVIGATIONDIRECTORY.DATAPUBLISHED, NAVIGATIONDIRECTORY.ALLOWROLES, NAVIGATIONDIRECTORY.MODELID, NAVIGATIONDIRECTORY.STATUS, NAVIGATIONDIRECTORY.CREATORUSERCODE, NAVIGATIONDIRECTORY.CREATIONDATE, NAVIGATIONDIRECTORY.UPDATEUSERCODE, NAVIGATIONDIRECTORY.UPDATEDATE, NAVIGATIONDIRECTORYDESC.TITLE, NAVIGATIONDIRECTORYDESC.DESCRIPTION FROM NAVIGATIONDIRECTORY NAVIGATIONDIRECTORY  LEFT JOIN NAVIGATIONDIRECTORYDESC NAVIGATIONDIRECTORYDESC ON NAVIGATIONDIRECTORYDESC.ID = NAVIGATIONDIRECTORY.ID  AND NAVIGATIONDIRECTORYDESC.LANGUAGEID = @:LANGUAGEID1", "NAVIGATIONDIRECTORY", "Linked.FrontOffice")
                    .AddParameter("LANGUAGEID1", DbType.AnsiString, 1, (NAVIGATIONDIRECTORYDESCLANGUAGEID1 = String.Empty), NAVIGATIONDIRECTORYDESCLANGUAGEID1)

                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.ID = itemData.NumericValue("ID"), .NAME = itemData.StringValue("NAME"), .URLPATH = itemData.StringValue("URLPATH"), .CATEGORYCODE = itemData.NumericValue("CATEGORYCODE"), .IMAGEFILE = itemData.StringValue("IMAGEFILE"), .MODELID = itemData.StringValue("MODELID"), .STATUS = itemData.NumericValue("STATUS"), .TITLE = itemData.StringValue("TITLE"), .DESCRIPTION = itemData.StringValue("DESCRIPTION")}
                            
                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With
            
            If responseList.Count <> 0 Then          
		    
            End If
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "NavigationWidget", "NAVIGATIONDIRECTORY_GridTblDataLoad", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function NAVIGATIONDIRECTORY_Grid1InsertCommandActionNAVIGATIONDIRECTORY(ID1 As Decimal, NAME2 As String, URLPATH3 As String, CATEGORYCODE4 As Decimal, IMAGEFILE5 As String, STATUS7 As Decimal, CREATORUSERCODE7 As String, UPDATEUSERCODE9 As String, MODELID12 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                With New DataManagerFactory("INSERT INTO FRONTOFFICE.NAVIGATIONDIRECTORY (ID, NAME, URLPATH, CATEGORYCODE, IMAGEFILE, DATAPUBLISHED, STATUS, CREATORUSERCODE, CREATIONDATE, UPDATEUSERCODE, UPDATEDATE, MODELID) VALUES (@:ID1, @:NAME2, @:URLPATH3, @:CATEGORYCODE4, @:IMAGEFILE5, @:DATAPUBLISHED5, @:STATUS7, @:CREATORUSERCODE7, @:CREATIONDATE8, @:UPDATEUSERCODE9, @:UPDATEDATE10, @:MODELID12)", "NAVIGATIONDIRECTORY", "Linked.FrontOffice")
                    .AddParameter("ID1", DbType.Decimal, 9, False, ID1)
                    .AddParameter("NAME2", DbType.AnsiString, 255, (NAME2 = String.Empty), NAME2)
                    .AddParameter("URLPATH3", DbType.AnsiString, 255, (URLPATH3 = String.Empty), URLPATH3)
                    .AddParameter("CATEGORYCODE4", DbType.Decimal, 5, False, CATEGORYCODE4)
                    .AddParameter("IMAGEFILE5", DbType.AnsiString, 50, (IMAGEFILE5 = String.Empty), IMAGEFILE5)
                    .AddParameter("DATAPUBLISHED5", DbType.DateTime, 7, False, Date.Now)
                    .AddParameter("STATUS7", DbType.Decimal, 5, False, STATUS7)
                    .AddParameter("CREATORUSERCODE7", DbType.AnsiString, 20, (CREATORUSERCODE7 = String.Empty), CREATORUSERCODE7)
                    .AddParameter("CREATIONDATE8", DbType.DateTime, 7, False, Date.Now)
                    .AddParameter("UPDATEUSERCODE9", DbType.AnsiString, 20, (UPDATEUSERCODE9 = String.Empty), UPDATEUSERCODE9)
                    .AddParameter("UPDATEDATE10", DbType.DateTime, 7, False, Date.Now)
                    .AddParameter("MODELID12", DbType.AnsiStringFixedLength, 36, (MODELID12 = String.Empty), MODELID12)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "NavigationWidget", "NAVIGATIONDIRECTORY_Grid1InsertCommandActionNAVIGATIONDIRECTORY", String.Empty)
            End Try
            
            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function NAVIGATIONDIRECTORY_Grid3InsertCommandActionNAVIGATIONDIRECTORYDESC(ID1 As Decimal, LANGUAGEID1 As Decimal, TITLE3 As String, DESCRIPTION4 As String, CREATORUSERCODE5 As String, UPDATEUSERCODE6 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                    With New DataManagerFactory("INSERT INTO FRONTOFFICE.NAVIGATIONDIRECTORYDESC (ID, LANGUAGEID, TITLE, DESCRIPTION, CREATIONDATE, CREATORUSERCODE, UPDATEUSERCODE, UPDATEDATE) VALUES (@:ID1, @:LANGUAGEID1, @:TITLE3, @:DESCRIPTION4, @:CREATIONDATE4, @:CREATORUSERCODE5, @:UPDATEUSERCODE6, @:UPDATEDATE7)", "NAVIGATIONDIRECTORYDESC", "Linked.FrontOffice")
                    .AddParameter("ID1", DbType.Decimal, 9, False, ID1)
                    .AddParameter("LANGUAGEID1", DbType.Decimal, 1, False, LANGUAGEID1)
                    .AddParameter("TITLE3", DbType.AnsiString, 120, (TITLE3 = String.Empty), TITLE3)
                    .AddParameter("DESCRIPTION4", DbType.AnsiString, 255, (DESCRIPTION4 = String.Empty), DESCRIPTION4)
                    .AddParameter("CREATIONDATE4", DbType.DateTime, 7, False, Date.Now)
                    .AddParameter("CREATORUSERCODE5", DbType.AnsiString, 20, (CREATORUSERCODE5 = String.Empty), CREATORUSERCODE5)
                    .AddParameter("UPDATEUSERCODE6", DbType.AnsiString, 20, (UPDATEUSERCODE6 = String.Empty), UPDATEUSERCODE6)
                    .AddParameter("UPDATEDATE7", DbType.DateTime, 7, False, Date.Now)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "NavigationWidget", "NAVIGATIONDIRECTORY_Grid3InsertCommandActionNAVIGATIONDIRECTORYDESC", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function NAVIGATIONDIRECTORY_Grid1UpdateCommandActionNAVIGATIONDIRECTORY(NAME1 As String, URLPATH2 As String, CATEGORYCODE3 As Decimal, IMAGEFILE4 As String, STATUS6 As Decimal, UPDATEUSERCODE6 As String, MODELID9 As String, NAVIGATIONDIRECTORYID10 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                With New DataManagerFactory("UPDATE FRONTOFFICE.NAVIGATIONDIRECTORY SET NAME = @:NAME1, URLPATH = @:URLPATH2, CATEGORYCODE = @:CATEGORYCODE3, IMAGEFILE = @:IMAGEFILE4, DATAPUBLISHED = @:DATAPUBLISHED4, STATUS = @:STATUS6, UPDATEUSERCODE = @:UPDATEUSERCODE6, UPDATEDATE = @:UPDATEDATE7, MODELID = @:MODELID9 WHERE NAVIGATIONDIRECTORY.ID = @:ID10", "NAVIGATIONDIRECTORY", "Linked.FrontOffice")
                    .AddParameter("NAME1", DbType.AnsiString, 255, (NAME1 = String.Empty), NAME1)
                    .AddParameter("URLPATH2", DbType.AnsiString, 255, (URLPATH2 = String.Empty), URLPATH2)
                    .AddParameter("CATEGORYCODE3", DbType.Decimal, 5, False, CATEGORYCODE3)
                    .AddParameter("IMAGEFILE4", DbType.AnsiString, 50, (IMAGEFILE4 = String.Empty), IMAGEFILE4)
                    .AddParameter("DATAPUBLISHED4", DbType.DateTime, 7, False, Date.Now)
                    .AddParameter("STATUS6", DbType.Decimal, 5, False, STATUS6)
                    .AddParameter("UPDATEUSERCODE6", DbType.AnsiString, 20, (UPDATEUSERCODE6 = String.Empty), UPDATEUSERCODE6)
                    .AddParameter("UPDATEDATE7", DbType.DateTime, 7, False, Date.Now)
                    .AddParameter("MODELID9", DbType.AnsiStringFixedLength, 36, (MODELID9 = String.Empty), MODELID9)
                    .AddParameter("ID10", DbType.Decimal, 0, False, NAVIGATIONDIRECTORYID10)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "NavigationWidget", "NAVIGATIONDIRECTORY_Grid1UpdateCommandActionNAVIGATIONDIRECTORY", String.Empty)
            End Try
            
            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function NAVIGATIONDIRECTORY_Grid3SelectCommandActionNAVIGATIONDIRECTORYDESC(NAVIGATIONDIRECTORYDESCID1 As Decimal, NAVIGATIONDIRECTORYDESCLANGUAGEID2 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}
            Dim responseList As New List(Of Object)
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")

                With New DataManagerFactory("Select COUNT(NAVIGATIONDIRECTORYDESC.ID) ID FROM NAVIGATIONDIRECTORYDESC NAVIGATIONDIRECTORYDESC  WHERE NAVIGATIONDIRECTORYDESC.ID = @:ID1 AND NAVIGATIONDIRECTORYDESC.LANGUAGEID = @:LANGUAGEID2", "NAVIGATIONDIRECTORYDESC", "Linked.FrontOffice")
                    .AddParameter("ID1", DbType.Decimal, 0, False, NAVIGATIONDIRECTORYDESCID1)
                    .AddParameter("LANGUAGEID2", DbType.Decimal, 0, False, NAVIGATIONDIRECTORYDESCLANGUAGEID2)

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With
            
            If responseList.Count <> 0 Then          
		    
            End If
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "NavigationWidget", "NAVIGATIONDIRECTORY_Grid3SelectCommandActionNAVIGATIONDIRECTORYDESC", String.Empty)
            End Try
            
            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function NAVIGATIONDIRECTORY_Grid5InsertCommandActionNAVIGATIONDIRECTORYDESC(ID1 As Decimal, LANGUAGEID1 As Decimal, TITLE3 As String, DESCRIPTION4 As String, CREATORUSERCODE4 As String, UPDATEUSERCODE6 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                        With New DataManagerFactory("INSERT INTO FRONTOFFICE.NAVIGATIONDIRECTORYDESC (ID, LANGUAGEID, TITLE, DESCRIPTION, CREATORUSERCODE, CREATIONDATE, UPDATEUSERCODE, UPDATEDATE) VALUES (@:ID1, @:LANGUAGEID1, @:TITLE3, @:DESCRIPTION4, @:CREATORUSERCODE4, @:CREATIONDATE5, @:UPDATEUSERCODE6, @:UPDATEDATE7)", "NAVIGATIONDIRECTORYDESC", "Linked.FrontOffice")
                    .AddParameter("ID1", DbType.Decimal, 9, False, ID1)
                    .AddParameter("LANGUAGEID1", DbType.Decimal, 1, False, LANGUAGEID1)
                    .AddParameter("TITLE3", DbType.AnsiString, 120, (TITLE3 = String.Empty), TITLE3)
                    .AddParameter("DESCRIPTION4", DbType.AnsiString, 255, (DESCRIPTION4 = String.Empty), DESCRIPTION4)
                    .AddParameter("CREATORUSERCODE4", DbType.AnsiString, 20, (CREATORUSERCODE4 = String.Empty), CREATORUSERCODE4)
                    .AddParameter("CREATIONDATE5", DbType.DateTime, 7, False, Date.Now)
                    .AddParameter("UPDATEUSERCODE6", DbType.AnsiString, 20, (UPDATEUSERCODE6 = String.Empty), UPDATEUSERCODE6)
                    .AddParameter("UPDATEDATE7", DbType.DateTime, 7, False, Date.Now)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "NavigationWidget", "NAVIGATIONDIRECTORY_Grid5InsertCommandActionNAVIGATIONDIRECTORYDESC", String.Empty)
            End Try
            
            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function NAVIGATIONDIRECTORY_Grid6UpdateCommandActionNAVIGATIONDIRECTORYDESC(TITLE1 As String, DESCRIPTION2 As String, UPDATEUSERCODE2 As String, NAVIGATIONDIRECTORYDESCID5 As Decimal, NAVIGATIONDIRECTORYDESCLANGUAGEID6 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                        With New DataManagerFactory("UPDATE FRONTOFFICE.NAVIGATIONDIRECTORYDESC SET TITLE = @:TITLE1, DESCRIPTION = @:DESCRIPTION2, UPDATEUSERCODE = @:UPDATEUSERCODE2, UPDATEDATE = @:UPDATEDATE3 WHERE NAVIGATIONDIRECTORYDESC.ID = @:ID5 AND NAVIGATIONDIRECTORYDESC.LANGUAGEID = @:LANGUAGEID6", "NAVIGATIONDIRECTORYDESC", "Linked.FrontOffice")
                    .AddParameter("TITLE1", DbType.AnsiString, 0, (TITLE1 = String.Empty), TITLE1)
                    .AddParameter("DESCRIPTION2", DbType.AnsiString, 0, (DESCRIPTION2 = String.Empty), DESCRIPTION2)
                    .AddParameter("UPDATEUSERCODE2", DbType.AnsiString, 0, (UPDATEUSERCODE2 = String.Empty), UPDATEUSERCODE2)
                    .AddParameter("UPDATEDATE3", DbType.DateTime, 0, False, Date.Now)
                    .AddParameter("ID5", DbType.Decimal, 0, False, NAVIGATIONDIRECTORYDESCID5)
                    .AddParameter("LANGUAGEID6", DbType.Decimal, 0, False, NAVIGATIONDIRECTORYDESCLANGUAGEID6)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "NavigationWidget", "NAVIGATIONDIRECTORY_Grid6UpdateCommandActionNAVIGATIONDIRECTORYDESC", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function NAVIGATIONDIRECTORY_Grid1DeleteCommandActionNAVIGATIONDIRECTORYDESC(NAVIGATIONDIRECTORYDESCID1 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                With New DataManagerFactory("DELETE FROM FRONTOFFICE.NAVIGATIONDIRECTORYDESC WHERE NAVIGATIONDIRECTORYDESC.ID = @:ID1", "NAVIGATIONDIRECTORYDESC", "Linked.FrontOffice")
                    .AddParameter("ID1", DbType.Decimal, 0, False, NAVIGATIONDIRECTORYDESCID1)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "NavigationWidget", "NAVIGATIONDIRECTORY_Grid1DeleteCommandActionNAVIGATIONDIRECTORYDESC", String.Empty)
            End Try
            
            Return resultData
        End Function
        <WebMethod()>
        Public Shared Function NAVIGATIONDIRECTORY_Grid3DeleteCommandActionNAVIGATIONDIRECTORY(NAVIGATIONDIRECTORYID1 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                    With New DataManagerFactory("DELETE FROM FRONTOFFICE.NAVIGATIONDIRECTORY WHERE NAVIGATIONDIRECTORY.ID = @:ID1", "NAVIGATIONDIRECTORY", "Linked.FrontOffice")
                    .AddParameter("ID1", DbType.Decimal, 0, False, NAVIGATIONDIRECTORYID1)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "NavigationWidget", "NAVIGATIONDIRECTORY_Grid3DeleteCommandActionNAVIGATIONDIRECTORY", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function NAVIGATIONDIRECTORY_Grid2SelectCommandActionNAVIGATIONDIRECTORY() As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}
            Dim responseList As New List(Of Object)
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")

                With New DataManagerFactory("Select MAX(NVL(NAVIGATIONDIRECTORY.ID, 0)) ID FROM NAVIGATIONDIRECTORY NAVIGATIONDIRECTORY ", "NAVIGATIONDIRECTORY", "Linked.FrontOffice")

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With
            
            If responseList.Count <> 0 Then          
		    
            End If
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "NavigationWidget", "NAVIGATIONDIRECTORY_Grid2SelectCommandActionNAVIGATIONDIRECTORY", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function NAVIGATIONDIRECTORYTranslator_GridTblDataLoad(filter As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.ID = 0, .NAME = String.Empty, .URLPATH = String.Empty, .CATEGORYCODE = 0, .IMAGEFILE = String.Empty, .MODELID = String.Empty, .STATUS = 0, .LANGUAGEID = 0, .TITLE = String.Empty, .DESCRIPTION = String.Empty}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)
            
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")

                With New DataManagerFactory("SELECT NAVIGATIONDIRECTORY.ID, NAVIGATIONDIRECTORY.NAME, NAVIGATIONDIRECTORY.URLPATH, NAVIGATIONDIRECTORY.DOCUMENTTYPE, NAVIGATIONDIRECTORY.CATEGORYCODE, NAVIGATIONDIRECTORY.IMAGEFILE, NAVIGATIONDIRECTORY.DATAPUBLISHED, NAVIGATIONDIRECTORY.ALLOWROLES, NAVIGATIONDIRECTORY.MODELID, NAVIGATIONDIRECTORY.STATUS, NAVIGATIONDIRECTORY.CREATORUSERCODE, NAVIGATIONDIRECTORY.CREATIONDATE, NAVIGATIONDIRECTORY.UPDATEUSERCODE, NAVIGATIONDIRECTORY.UPDATEDATE, NAVIGATIONDIRECTORYDESC.LANGUAGEID, NAVIGATIONDIRECTORYDESC.TITLE, NAVIGATIONDIRECTORYDESC.DESCRIPTION FROM NAVIGATIONDIRECTORY NAVIGATIONDIRECTORY  LEFT JOIN NAVIGATIONDIRECTORYDESC NAVIGATIONDIRECTORYDESC ON NAVIGATIONDIRECTORYDESC.ID = NAVIGATIONDIRECTORY.ID ", "NAVIGATIONDIRECTORY", "Linked.FrontOffice")

                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.ID = itemData.NumericValue("ID"), .NAME = itemData.StringValue("NAME"), .URLPATH = itemData.StringValue("URLPATH"), .CATEGORYCODE = itemData.NumericValue("CATEGORYCODE"), .IMAGEFILE = itemData.StringValue("IMAGEFILE"), .MODELID = itemData.StringValue("MODELID"), .STATUS = itemData.NumericValue("STATUS"), .LANGUAGEID = itemData.NumericValue("LANGUAGEID"), .TITLE = itemData.StringValue("TITLE"), .DESCRIPTION = itemData.StringValue("DESCRIPTION")}
                            
                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With
            
            If responseList.Count <> 0 Then          
		    
            End If
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "NavigationWidget", "NAVIGATIONDIRECTORYTranslator_GridTblDataLoad", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function NAVIGATIONDIRECTORYTranslator_Grid1UpdateCommandActionNAVIGATIONDIRECTORYDESC(TITLE1 As String, DESCRIPTION2 As String, UPDATEUSERCODE2 As String, NAVIGATIONDIRECTORYDESCID5 As Decimal, NAVIGATIONDIRECTORYDESCLANGUAGEID6 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                With New DataManagerFactory("UPDATE FRONTOFFICE.NAVIGATIONDIRECTORYDESC SET TITLE = @:TITLE1, DESCRIPTION = @:DESCRIPTION2, UPDATEUSERCODE = @:UPDATEUSERCODE2, UPDATEDATE = @:UPDATEDATE3 WHERE NAVIGATIONDIRECTORYDESC.ID = @:ID5 AND NAVIGATIONDIRECTORYDESC.LANGUAGEID = @:LANGUAGEID6", "NAVIGATIONDIRECTORYDESC", "Linked.FrontOffice")
                    .AddParameter("TITLE1", DbType.AnsiString, 0, (TITLE1 = String.Empty), TITLE1)
                    .AddParameter("DESCRIPTION2", DbType.AnsiString, 0, (DESCRIPTION2 = String.Empty), DESCRIPTION2)
                    .AddParameter("UPDATEUSERCODE2", DbType.AnsiString, 0, (UPDATEUSERCODE2 = String.Empty), UPDATEUSERCODE2)
                    .AddParameter("UPDATEDATE3", DbType.DateTime, 0, False, Date.Now)
                    .AddParameter("ID5", DbType.Decimal, 0, False, NAVIGATIONDIRECTORYDESCID5)
                    .AddParameter("LANGUAGEID6", DbType.Decimal, 0, False, NAVIGATIONDIRECTORYDESCLANGUAGEID6)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "NavigationWidget", "NAVIGATIONDIRECTORYTranslator_Grid1UpdateCommandActionNAVIGATIONDIRECTORYDESC", String.Empty)
            End Try
            
            Return resultData
        End Function


#End Region

#Region "Lookups Web Methods"


        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForCATEGORYCODE(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                 
                Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  LOOKUP.CODE, LOOKUP.DESCRIPTION FROM LOOKUP LOOKUP  WHERE LOOKUP.LOOKUPID = {0} AND LOOKUP.LANGUAGEID = {1} AND LOOKUP.RECORDSTATUS = {2}  AND NOT LOOKUP.DESCRIPTION IS NULL ORDER BY DESCRIPTION", 21, InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId(), 1), 
                                            "LOOKUP", "Linked.FrontOffice")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("CODE"),
                                                                                            .Description = item.StringValue("DESCRIPTION")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "NavigationWidget", "LookUpForCATEGORYCODE", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForSTATUS(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                 
                Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  LOOKUP.CODE, LOOKUP.DESCRIPTION FROM LOOKUP LOOKUP  WHERE LOOKUP.LOOKUPID = {0} AND LOOKUP.LANGUAGEID = {1} AND LOOKUP.RECORDSTATUS = {2}  AND NOT LOOKUP.DESCRIPTION IS NULL ORDER BY DESCRIPTION", 2, InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId(), 1), 
                                            "LOOKUP", "Linked.FrontOffice")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("CODE"),
                                                                                            .Description = item.StringValue("DESCRIPTION")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "NavigationWidget", "LookUpForSTATUS", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForCATEGORYCODETranslator(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                 
                Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  LOOKUP.CODE, LOOKUP.DESCRIPTION FROM LOOKUP LOOKUP  WHERE LOOKUP.LOOKUPID = {0} AND LOOKUP.LANGUAGEID = {1} AND LOOKUP.RECORDSTATUS = {2}  AND NOT LOOKUP.DESCRIPTION IS NULL ORDER BY DESCRIPTION", 21, InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId(), 1), 
                                            "LOOKUP", "Linked.FrontOffice")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("CODE"),
                                                                                            .Description = item.StringValue("DESCRIPTION")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "NavigationWidget", "LookUpForCATEGORYCODETranslator", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForSTATUSTranslator(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                 
                Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  LOOKUP.CODE, LOOKUP.DESCRIPTION FROM LOOKUP LOOKUP  WHERE LOOKUP.LOOKUPID = {0} AND LOOKUP.LANGUAGEID = {1} AND LOOKUP.RECORDSTATUS = {2}  AND NOT LOOKUP.DESCRIPTION IS NULL ORDER BY DESCRIPTION", 2, InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId(), 1), 
                                            "LOOKUP", "Linked.FrontOffice")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("CODE"),
                                                                                            .Description = item.StringValue("DESCRIPTION")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "NavigationWidget", "LookUpForSTATUSTranslator", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForLANGUAGEIDTranslator(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                 
                Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  LOOKUP.CODE, LOOKUP.DESCRIPTION FROM LOOKUP LOOKUP  WHERE LOOKUP.LOOKUPID = {0} AND LOOKUP.LANGUAGEID = {1} AND LOOKUP.RECORDSTATUS = {2}  AND NOT LOOKUP.DESCRIPTION IS NULL ORDER BY DESCRIPTION", 1, InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId(), 1), 
                                            "LOOKUP", "Linked.FrontOffice")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("CODE"),
                                                                                            .Description = item.StringValue("DESCRIPTION")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "NavigationWidget", "LookUpForLANGUAGEIDTranslator", String.Empty)
            End Try
                        
            Return result
        End Function

#End Region

#Region "Form Actions"


#End Region





#Region "Common Utilities"

        Private Shared Sub SetDefaultValuesFromQueryString(formData As EntryData)

        End Sub	


#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property NAVIGATIONDIRECTORYCollectionID As System.Double
            <DataMember()> Public Property NAVIGATIONDIRECTORYCollectionNAME As System.String
            <DataMember()> Public Property NAVIGATIONDIRECTORYCollectionTITLE As System.String
            <DataMember()> Public Property NAVIGATIONDIRECTORYCollectionDESCRIPTION As System.String
            <DataMember()> Public Property NAVIGATIONDIRECTORYCollectionURLPATH As System.String
            <DataMember()> Public Property NAVIGATIONDIRECTORYCollectionCATEGORYCODE As System.Double
            <DataMember()> Public Property NAVIGATIONDIRECTORYCollectionIMAGEFILE As System.String
            <DataMember()> Public Property NAVIGATIONDIRECTORYCollectionSTATUS As System.Double
            <DataMember()> Public Property NAVIGATIONDIRECTORYCollectionMODELID As System.String
            <DataMember()> Public Property NAVIGATIONDIRECTORY_Grid_NAVIGATIONDIRECTORY_Item As List(Of NAVIGATIONDIRECTORY_Grid_NAVIGATIONDIRECTORY_ItemItem)
            <DataMember()> Public Property NAVIGATIONDIRECTORYCollectionLANGUAGEID As System.Double
            <DataMember()> Public Property NAVIGATIONDIRECTORYTranslator_Grid_NAVIGATIONDIRECTORY_Item As List(Of NAVIGATIONDIRECTORYTranslator_Grid_NAVIGATIONDIRECTORY_ItemItem)

        End Class

        <Serializable()>
        <DataContract()>
        Public Class NAVIGATIONDIRECTORY_Grid_NAVIGATIONDIRECTORY_ItemItem

            <DataMember()> Public Property ID As System.Double
            <DataMember()> Public Property NAME As System.String
            <DataMember()> Public Property TITLE As System.String
            <DataMember()> Public Property DESCRIPTION As System.String
            <DataMember()> Public Property URLPATH As System.String
            <DataMember()> Public Property CATEGORYCODE As System.Double
            <DataMember()> Public Property IMAGEFILE As System.String
            <DataMember()> Public Property STATUS As System.Double
            <DataMember()> Public Property MODELID As System.String

        End Class

        <Serializable()>
        <DataContract()>
        Public Class NAVIGATIONDIRECTORYTranslator_Grid_NAVIGATIONDIRECTORY_ItemItem

            <DataMember()> Public Property ID As System.Double
            <DataMember()> Public Property NAME As System.String
            <DataMember()> Public Property TITLE As System.String
            <DataMember()> Public Property DESCRIPTION As System.String
            <DataMember()> Public Property URLPATH As System.String
            <DataMember()> Public Property CATEGORYCODE As System.Double
            <DataMember()> Public Property IMAGEFILE As System.String
            <DataMember()> Public Property STATUS As System.Double
            <DataMember()> Public Property LANGUAGEID As System.Double
            <DataMember()> Public Property MODELID As System.String

        End Class


#End Region

    End Class

End Namespace

