'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Form Designer v7.3.39.1 at 2020/04/20 03:52:10 PM model release 9, Form Generator v1.0.37.52
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Net
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class GrupoAccesoSeguridadActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"

       <WebMethod(EnableSession:=True)>
        Public Shared Function Initialization(id As String, urlid As String, fromid As String) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim instance As New EntryData With {.InstanceFormId = id}
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim currentAction As String = String.Empty
            
            
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                
                If id.IsEmpty AndAlso urlid.IsEmpty Then
                    instance.InstanceFormId = System.Guid.NewGuid().ToString
                  
                
                Else
                    instance.InstanceFormId = id.IfEmpty(urlid)
                End If             
             
                With resultData
                    .Success = True
                    .Data = New With {.Instance = instance, .LookUps = LoadLookupsList()}
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "GrupoAccesoSeguridad", "Initialization", currentAction)
            End Try
            
            Return resultData
        End Function
  

        Public Shared Function LoadLookupsList() As List(Of InMotionGIT.Common.DataType.LookUpPackage)
            Dim result As New List(Of InMotionGIT.Common.DataType.LookUpPackage)
            
            Dim dataFactory As New DataManagerFactory("PackageExecuteToLookUp", "LOOKUPS", "")
            Dim dataCommand As InMotionGIT.Common.Services.Contracts.DataCommand = Nothing
            
            dataCommand = dataFactory.AddCommand(String.Format(CultureInfo.CurrentCulture, "SELECT TRIM(ENUMRECORDSTATUS.RECORDSTATUS) RECORDSTATUS, ETRANRECORDSTATUS.DESCRIPTION FROM ENUMRECORDSTATUS ENUMRECORDSTATUS JOIN ETRANRECORDSTATUS ETRANRECORDSTATUS ON ETRANRECORDSTATUS.RECORDSTATUS = ENUMRECORDSTATUS.RECORDSTATUS WHERE ENUMRECORDSTATUS.RECORDSTATUSCODE = '{0}' AND ETRANRECORDSTATUS.LANGUAGEID = {1} ORDER BY ETranRecordStatus.Description ASC", "1", InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId()), New InMotionGIT.Common.DataType.LookUpValue With {.Code = "RecordStatus", .Description = "Description"}, "Estado_Registro", "EnumRecordStatus", "Linked.Common")
            
            result = dataFactory.PackageExecuteToLookUp()
	
            Return result
        End Function



        <WebMethod()>
        Public Shared Function Grupo_Acceso_GridTblDataLoad(filter As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Id_Grupo_Acceso = 0, .Descripcion = String.Empty, .Descripcion_Corta = String.Empty, .Estado_Registro = String.Empty, .CreationDate = Date.MinValue, .CreatorUserCode = 0, .UpdateDate = Date.MinValue, .UpdateUserCode = 0}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)
            
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")

                With New DataManagerFactory("SELECT GRUPO_ACCESO.ID_GRUPO_ACCESO, GRUPO_ACCESO.DESCRIPCION, GRUPO_ACCESO.DESCRIPCION_CORTA, GRUPO_ACCESO.ESTADO_REGISTRO, GRUPO_ACCESO.CREATIONDATE, GRUPO_ACCESO.CREATORUSERCODE, GRUPO_ACCESO.UPDATEDATE, GRUPO_ACCESO.UPDATEUSERCODE FROM GRUPO_ACCESO GRUPO_ACCESO ", "Grupo_Acceso", "Linked.Seguridad")

                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.Id_Grupo_Acceso = itemData.NumericValue("ID_GRUPO_ACCESO"), .Descripcion = itemData.StringValue("DESCRIPCION"), .Descripcion_Corta = itemData.StringValue("DESCRIPCION_CORTA"), .Estado_Registro = itemData.StringValue("ESTADO_REGISTRO"), .CreationDate = itemData.DateTimeValue("CREATIONDATE"), .CreatorUserCode = itemData.NumericValue("CREATORUSERCODE"), .UpdateDate = itemData.DateTimeValue("UPDATEDATE"), .UpdateUserCode = itemData.NumericValue("UPDATEUSERCODE")}
                            
                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With
            
            If responseList.Count <> 0 Then          
		    
            End If
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "GrupoAccesoSeguridad", "Grupo_Acceso_GridTblDataLoad", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function Grupo_Acceso_Grid1InsertCommandActionGrupo_Acceso(ID_GRUPO_ACCESO1 As Decimal, DESCRIPCION2 As String, DESCRIPCION_CORTA3 As String, ESTADO_REGISTRO4 As String, CREATORUSERCODE5 As Decimal, UPDATEUSERCODE7 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                With New DataManagerFactory("INSERT INTO Grupo_Acceso (ID_GRUPO_ACCESO, DESCRIPCION, DESCRIPCION_CORTA, ESTADO_REGISTRO, CREATIONDATE, CREATORUSERCODE, UPDATEDATE, UPDATEUSERCODE) VALUES (@:ID_GRUPO_ACCESO1, @:DESCRIPCION2, @:DESCRIPCION_CORTA3, @:ESTADO_REGISTRO4, @:CREATIONDATE4, @:CREATORUSERCODE5, @:UPDATEDATE6, @:UPDATEUSERCODE7)", "Grupo_Acceso", "Linked.Seguridad")
                    .AddParameter("ID_GRUPO_ACCESO1", DbType.Decimal, 0, False, ID_GRUPO_ACCESO1)
                    .AddParameter("DESCRIPCION2", DbType.AnsiString, 0, (DESCRIPCION2 = String.Empty), DESCRIPCION2)
                    .AddParameter("DESCRIPCION_CORTA3", DbType.AnsiString, 0, (DESCRIPCION_CORTA3 = String.Empty), DESCRIPCION_CORTA3)
                    .AddParameter("ESTADO_REGISTRO4", DbType.AnsiStringFixedLength, 0, (ESTADO_REGISTRO4 = String.Empty), ESTADO_REGISTRO4)
                    .AddParameter("CREATIONDATE4", DbType.DateTime, 0, False, Date.Now)
                    .AddParameter("CREATORUSERCODE5", DbType.Decimal, 0, False, CREATORUSERCODE5)
                    .AddParameter("UPDATEDATE6", DbType.DateTime, 0, False, Date.Now)
                    .AddParameter("UPDATEUSERCODE7", DbType.Decimal, 0, False, UPDATEUSERCODE7)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "GrupoAccesoSeguridad", "Grupo_Acceso_Grid1InsertCommandActionGrupo_Acceso", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function Grupo_Acceso_Grid1UpdateCommandActionGrupo_Acceso(DESCRIPCION1 As String, DESCRIPCION_CORTA2 As String, ESTADO_REGISTRO3 As String, UPDATEUSERCODE4 As Decimal, GrupoAccesoIdGrupoAcceso6 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                With New DataManagerFactory("UPDATE Grupo_Acceso SET DESCRIPCION = @:DESCRIPCION1, DESCRIPCION_CORTA = @:DESCRIPCION_CORTA2, ESTADO_REGISTRO = @:ESTADO_REGISTRO3, UPDATEDATE = @:UPDATEDATE3, UPDATEUSERCODE = @:UPDATEUSERCODE4 WHERE GRUPO_ACCESO.ID_GRUPO_ACCESO = @:ID_GRUPO_ACCESO6", "Grupo_Acceso", "Linked.Seguridad")
                    .AddParameter("DESCRIPCION1", DbType.AnsiString, 0, (DESCRIPCION1 = String.Empty), DESCRIPCION1)
                    .AddParameter("DESCRIPCION_CORTA2", DbType.AnsiString, 0, (DESCRIPCION_CORTA2 = String.Empty), DESCRIPCION_CORTA2)
                    .AddParameter("ESTADO_REGISTRO3", DbType.AnsiStringFixedLength, 0, (ESTADO_REGISTRO3 = String.Empty), ESTADO_REGISTRO3)
                    .AddParameter("UPDATEDATE3", DbType.DateTime, 0, False, Date.Now)
                    .AddParameter("UPDATEUSERCODE4", DbType.Decimal, 0, False, UPDATEUSERCODE4)
                    .AddParameter("ID_GRUPO_ACCESO6", DbType.Decimal, 0, False, GrupoAccesoIdGrupoAcceso6)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "GrupoAccesoSeguridad", "Grupo_Acceso_Grid1UpdateCommandActionGrupo_Acceso", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function Grupo_Acceso_Grid1DeleteCommandActionGrupo_Acceso(GrupoAccesoIdGrupoAcceso1 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                With New DataManagerFactory("DELETE FROM Grupo_Acceso WHERE GRUPO_ACCESO.ID_GRUPO_ACCESO = @:ID_GRUPO_ACCESO1", "Grupo_Acceso", "Linked.Seguridad")
                    .AddParameter("ID_GRUPO_ACCESO1", DbType.Decimal, 0, False, GrupoAccesoIdGrupoAcceso1)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "GrupoAccesoSeguridad", "Grupo_Acceso_Grid1DeleteCommandActionGrupo_Acceso", String.Empty)
            End Try
            
            Return resultData
        End Function


#End Region

#Region "Lookups Web Methods"


        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForEstado_Registro(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("Administrador")
                 
                Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT TRIM(ENUMRECORDSTATUS.RECORDSTATUS) RECORDSTATUS, ETRANRECORDSTATUS.DESCRIPTION FROM ENUMRECORDSTATUS ENUMRECORDSTATUS JOIN ETRANRECORDSTATUS ETRANRECORDSTATUS ON ETRANRECORDSTATUS.RECORDSTATUS = ENUMRECORDSTATUS.RECORDSTATUS WHERE ENUMRECORDSTATUS.RECORDSTATUSCODE = '{0}' AND ETRANRECORDSTATUS.LANGUAGEID = {1} ORDER BY ETranRecordStatus.Description ASC", "1", InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId()), 
                                            "EnumRecordStatus", "Linked.Common")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.StringValue("RecordStatus"),
                                                                                            .Description = item.StringValue("Description")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "GrupoAccesoSeguridad", "LookUpForEstado_Registro", String.Empty)
            End Try
                        
            Return result
        End Function

#End Region

#Region "Form Actions"


#End Region





#Region "Common Utilities"

        Private Shared Sub SetDefaultValuesFromQueryString(formData As EntryData)

        End Sub	


#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property Grupo_AccesoCollectionId_Grupo_Acceso As System.Double
            <DataMember()> Public Property Grupo_AccesoCollectionDescripcion As System.String
            <DataMember()> Public Property Grupo_AccesoCollectionDescripcion_Corta As System.String
            <DataMember()> Public Property Grupo_AccesoCollectionEstado_Registro As System.String
            <DataMember()> Public Property Grupo_AccesoCollectionCreationDate As System.DateTime
            <DataMember()> Public Property Grupo_AccesoCollectionCreatorUserCode As System.Double
            <DataMember()> Public Property Grupo_AccesoCollectionUpdateDate As System.DateTime
            <DataMember()> Public Property Grupo_AccesoCollectionUpdateUserCode As System.Double
            <DataMember()> Public Property Grupo_Acceso_Grid_Grupo_Acceso_Item As List(Of Grupo_Acceso_Grid_Grupo_Acceso_ItemItem)

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Grupo_Acceso_Grid_Grupo_Acceso_ItemItem

            <DataMember()> Public Property Id_Grupo_Acceso As System.Double
            <DataMember()> Public Property Descripcion As System.String
            <DataMember()> Public Property Descripcion_Corta As System.String
            <DataMember()> Public Property Estado_Registro As System.String
            <DataMember()> Public Property CreationDate As System.DateTime
            <DataMember()> Public Property CreatorUserCode As System.Double
            <DataMember()> Public Property UpdateDate As System.DateTime
            <DataMember()> Public Property UpdateUserCode As System.Double

        End Class


#End Region

    End Class

End Namespace

