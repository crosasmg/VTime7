'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Form Designer v7.3.36.1 at 2020-03-18 09:47:32 AM model release 5, Form Generator v1.0.37.37
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Net
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class LookupMasterActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"

       <WebMethod(EnableSession:=True)>
        Public Shared Function Initialization(id As String, urlid As String, fromid As String) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim instance As New EntryData With {.InstanceFormId = id}
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim currentAction As String = String.Empty
            
            
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                
                If id.IsEmpty AndAlso urlid.IsEmpty Then
                    instance.InstanceFormId = System.Guid.NewGuid().ToString
                  
                
                Else
                    instance.InstanceFormId = id.IfEmpty(urlid)
                End If             
             
                With resultData
                    .Success = True
                    .Data = New With {.Instance = instance, .LookUps = LoadLookupsList()}
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "LookupMaster", "Initialization", currentAction)
            End Try
            
            Return resultData
        End Function
  

        Public Shared Function LoadLookupsList() As List(Of InMotionGIT.Common.DataType.LookUpPackage)
            Dim result As New List(Of InMotionGIT.Common.DataType.LookUpPackage)
            
            Dim dataFactory As New DataManagerFactory("PackageExecuteToLookUp", "LOOKUPS", "")
            Dim dataCommand As InMotionGIT.Common.Services.Contracts.DataCommand = Nothing
            
            dataCommand = dataFactory.AddCommand(String.Format(CultureInfo.CurrentCulture, "SELECT  LOOKUP.CODE, LOOKUP.DESCRIPTION FROM LOOKUP LOOKUP  WHERE LOOKUP.LOOKUPID = {0} AND LOOKUP.LANGUAGEID = {1} AND LOOKUP.RECORDSTATUS = {2}  AND NOT LOOKUP.DESCRIPTION IS NULL ORDER BY DESCRIPTION", 2, InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId(), 1), New InMotionGIT.Common.DataType.LookUpValue With {.Code = "CODE", .Description = "DESCRIPTION"}, "RECORDSTATUS", "LOOKUP", "Linked.FrontOffice")
            
            result = dataFactory.PackageExecuteToLookUp()
	
            Return result
        End Function


        <WebMethod()>
        Public Shared Function LOOKUPMASTER_GridTblDataLoad(filter As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.LOOKUPID = 0, .KEY = String.Empty, .DESCRIPTION = String.Empty, .RECORDSTATUS = 0, .LASTUPDATEDBY = String.Empty, .LASTUPDATEDON = Date.MinValue}
            Dim selectDataTableItem As DataTable
            Dim responseList As New List(Of Object)
            
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")

                With New DataManagerFactory("SELECT LOOKUPMASTER.LOOKUPID, LOOKUPMASTER.KEY, LOOKUPMASTER.DESCRIPTION, LOOKUPMASTER.RECORDSTATUS, LOOKUPMASTER.LASTUPDATEDBY, LOOKUPMASTER.LASTUPDATEDON FROM LOOKUPMASTER LOOKUPMASTER  ORDER BY LOOKUPMASTER.LOOKUPID", "LOOKUPMASTER", "Linked.FrontOffice")

                    selectDataTableItem = .QueryExecuteToTable(True)
                End With
                With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        For Each itemData As DataRow In .Rows
                            response = New With {.LOOKUPID = itemData.NumericValue("LOOKUPID"), .KEY = itemData.StringValue("KEY"), .DESCRIPTION = itemData.StringValue("DESCRIPTION"), .RECORDSTATUS = itemData.NumericValue("RECORDSTATUS"), .LASTUPDATEDBY = itemData.StringValue("LASTUPDATEDBY"), .LASTUPDATEDON = itemData.DateTimeValue("LASTUPDATEDON")}
                            
                            responseList.Add(response)
                        Next

                        With resultData
                            .Count = responseList.Count
                            .Data = responseList
                        End With
                    End If
                End With
            
            If responseList.Count <> 0 Then          
		    
            End If
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "LookupMaster", "LOOKUPMASTER_GridTblDataLoad", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function LOOKUPMASTER_Grid1InsertCommandActionLOOKUPMASTER(LOOKUPID1 As Decimal, KEY2 As String, DESCRIPTION3 As String, RECORDSTATUS4 As Decimal, LASTUPDATEDBY4 As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                With New DataManagerFactory("INSERT INTO FRONTOFFICE.LOOKUPMASTER (LOOKUPID, KEY, DESCRIPTION, RECORDSTATUS, LASTUPDATEDBY, LASTUPDATEDON) VALUES (@:LOOKUPID1, @:KEY2, @:DESCRIPTION3, @:RECORDSTATUS4, @:LASTUPDATEDBY4, @:LASTUPDATEDON5)", "LOOKUPMASTER", "Linked.FrontOffice")
                    .AddParameter("LOOKUPID1", DbType.Decimal, 0, False, LOOKUPID1)
                    .AddParameter("KEY2", DbType.AnsiString, 0, (KEY2 = String.Empty), KEY2)
                    .AddParameter("DESCRIPTION3", DbType.AnsiString, 0, (DESCRIPTION3 = String.Empty), DESCRIPTION3)
                    .AddParameter("RECORDSTATUS4", DbType.Decimal, 0, False, RECORDSTATUS4)
                    .AddParameter("LASTUPDATEDBY4", DbType.AnsiString, 0, (LASTUPDATEDBY4 = String.Empty), LASTUPDATEDBY4)
                    .AddParameter("LASTUPDATEDON5", DbType.DateTime, 0, False, Date.Now)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "LookupMaster", "LOOKUPMASTER_Grid1InsertCommandActionLOOKUPMASTER", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function LOOKUPMASTER_Grid1UpdateCommandActionLOOKUPMASTER(KEY1 As String, DESCRIPTION2 As String, RECORDSTATUS3 As Decimal, LASTUPDATEDBY3 As String, LOOKUPMASTERLOOKUPID6 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                With New DataManagerFactory("UPDATE FRONTOFFICE.LOOKUPMASTER SET KEY = @:KEY1, DESCRIPTION = @:DESCRIPTION2, RECORDSTATUS = @:RECORDSTATUS3, LASTUPDATEDBY = @:LASTUPDATEDBY3, LASTUPDATEDON = @:LASTUPDATEDON4 WHERE LOOKUPMASTER.LOOKUPID = @:LOOKUPID6", "LOOKUPMASTER", "Linked.FrontOffice")
                    .AddParameter("KEY1", DbType.AnsiString, 0, (KEY1 = String.Empty), KEY1)
                    .AddParameter("DESCRIPTION2", DbType.AnsiString, 0, (DESCRIPTION2 = String.Empty), DESCRIPTION2)
                    .AddParameter("RECORDSTATUS3", DbType.Decimal, 0, False, RECORDSTATUS3)
                    .AddParameter("LASTUPDATEDBY3", DbType.AnsiString, 0, (LASTUPDATEDBY3 = String.Empty), LASTUPDATEDBY3)
                    .AddParameter("LASTUPDATEDON4", DbType.DateTime, 0, False, Date.Now)
                    .AddParameter("LOOKUPID6", DbType.Decimal, 0, False, LOOKUPMASTERLOOKUPID6)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "LookupMaster", "LOOKUPMASTER_Grid1UpdateCommandActionLOOKUPMASTER", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function LOOKUPMASTER_Grid1DeleteCommandActionLOOKUPMASTER(LOOKUPMASTERLOOKUPID1 As Decimal) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                With New DataManagerFactory("DELETE FROM FRONTOFFICE.LOOKUPMASTER WHERE LOOKUPMASTER.LOOKUPID = @:LOOKUPID1", "LOOKUPMASTER", "Linked.FrontOffice")
                    .AddParameter("LOOKUPID1", DbType.Decimal, 0, False, LOOKUPMASTERLOOKUPID1)
 
                    .CommandExecute()
              End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "LookupMaster", "LOOKUPMASTER_Grid1DeleteCommandActionLOOKUPMASTER", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function LOOKUPMASTER_Grid2SelectCommandActionLOOKUPMASTER() As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = New With {.Result = 0}
            Dim responseList As New List(Of Object)
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")

                With New DataManagerFactory("Select MAX(LOOKUPMASTER.LOOKUPID) LOOKUPID FROM LOOKUPMASTER LOOKUPMASTER ", "LOOKUPMASTER", "Linked.FrontOffice")

                    response.Result = .QueryExecuteScalarToInteger()
                End With
                With resultData
                    .Count = 1
                    .Data = response
                End With
            
            If responseList.Count <> 0 Then          
		    
            End If
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "LookupMaster", "LOOKUPMASTER_Grid2SelectCommandActionLOOKUPMASTER", String.Empty)
            End Try
            
            Return resultData
        End Function


#End Region

#Region "Lookups Web Methods"


        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForRECORDSTATUS(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                 
                Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  LOOKUP.CODE, LOOKUP.DESCRIPTION FROM LOOKUP LOOKUP  WHERE LOOKUP.LOOKUPID = {0} AND LOOKUP.LANGUAGEID = {1} AND LOOKUP.RECORDSTATUS = {2}  AND NOT LOOKUP.DESCRIPTION IS NULL ORDER BY DESCRIPTION", 2, InMotionGIT.FASI.Support.Handlers.LanguageHandler.ContextLanguageId(), 1), 
                                            "LOOKUP", "Linked.FrontOffice")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("CODE"),
                                                                                            .Description = item.StringValue("DESCRIPTION")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "LookupMaster", "LookUpForRECORDSTATUS", String.Empty)
            End Try
                        
            Return result
        End Function

#End Region

#Region "Form Actions"


#End Region





#Region "Common Utilities"

        Private Shared Sub SetDefaultValuesFromQueryString(formData As EntryData)

        End Sub	


#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property LOOKUPMASTERCollectionKEY As System.String
            <DataMember()> Public Property LOOKUPMASTERCollectionLASTUPDATEDBY As System.String
            <DataMember()> Public Property LOOKUPMASTER_Grid_LOOKUPMASTER_Item As List(Of LOOKUPMASTER_Grid_LOOKUPMASTER_ItemItem)

        End Class

        <Serializable()>
        <DataContract()>
        Public Class LOOKUPMASTER_Grid_LOOKUPMASTER_ItemItem

            <DataMember()> Public Property LOOKUPID As System.Double
            <DataMember()> Public Property KEY As System.String
            <DataMember()> Public Property RECORDSTATUS As System.Double
            <DataMember()> Public Property LASTUPDATEDBY As System.String

        End Class


#End Region

    End Class

End Namespace

