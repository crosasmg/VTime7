'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Form Designer v7.3.45.1 at 2020-05-29 08:22:42 AM model release 23, Form Generator v1.0.37.69
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Net
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class WidgetsByRoleManagerActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"

       <WebMethod(EnableSession:=True)>
        Public Shared Function Initialization(id As String, urlid As String, fromid As String) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim instance As New EntryData With {.InstanceFormId = id}
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim currentAction As String = String.Empty
            
            
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                
                If id.IsEmpty AndAlso urlid.IsEmpty Then
                    instance.InstanceFormId = System.Guid.NewGuid().ToString
                  
                
                Else
                    instance.InstanceFormId = id.IfEmpty(urlid)
                End If             
             
                With resultData
                    .Success = True
                    .Data = New With {.Instance = instance, .LookUps = Nothing}
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "WidgetsByRoleManager", "Initialization", currentAction)
            End Try
            
            Return resultData
        End Function
  

        <WebMethod()>
        Public Shared Function Removec71871ebc4cd4fe2a856d1cf959d07eb(KEY As System.String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = Nothing
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
InMotionGIT.FASI.Support.Handlers.CacheHandler.Remove(Key:=KEY) 
 

                With resultData
                    .Success = True
                    .Data = response
                End With
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "WidgetsByRoleManager", "Removec71871ebc4cd4fe2a856d1cf959d07eb", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function Remove6c95e9703e9c4056b98e9d27a73720b2(KEY As System.String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = Nothing
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
InMotionGIT.FASI.Support.Handlers.CacheHandler.Remove(Key:=KEY) 
 

                With resultData
                    .Success = True
                    .Data = response
                End With
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "WidgetsByRoleManager", "Remove6c95e9703e9c4056b98e9d27a73720b2", String.Empty)
            End Try
            
            Return resultData
        End Function

        <WebMethod()>
        Public Shared Function Remove8da251281f784319a3cbc3dcada0755e(KEY As System.String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True, .Count = 0}
            Dim response As Object = Nothing
            
            Try
               InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
InMotionGIT.FASI.Support.Handlers.CacheHandler.Remove(Key:=KEY) 
 

                With resultData
                    .Success = True
                    .Data = response
                End With
                
            Catch ex As Exception            
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "WidgetsByRoleManager", "Remove8da251281f784319a3cbc3dcada0755e", String.Empty)
            End Try
            
            Return resultData
        End Function


#End Region

#Region "Lookups Web Methods"




#End Region

#Region "Form Actions"


#End Region





#Region "Common Utilities"


#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property RoleWidgetListId As System.Int32
            <DataMember()> Public Property RoleWidgetListRoleId As System.Int32
            <DataMember()> Public Property RoleWidgetListWidgetId As System.Int32
            <DataMember()> Public Property RoleWidgetListSecuense As System.Int32
            <DataMember()> Public Property RoleWidgetListIsDefault As System.Boolean
            <DataMember()> Public Property RoleWidgetListIsEditAllow As System.Boolean
            <DataMember()> Public Property RoleWidgetListIsEditAlowTitle As System.Boolean
            <DataMember()> Public Property RoleWidget_RoleWidget As List(Of RoleWidget_RoleWidgetItem)
            <DataMember()> Public Property languageId As Int32
            <DataMember()> Public Property RolFilter As Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class RoleWidget_RoleWidgetItem

            <DataMember()> Public Property Id As System.Int32
            <DataMember()> Public Property RoleId As System.Int32
            <DataMember()> Public Property WidgetId As System.Int32
            <DataMember()> Public Property Secuense As System.Int32
            <DataMember()> Public Property IsDefault As System.Boolean
            <DataMember()> Public Property IsEditAllow As System.Boolean
            <DataMember()> Public Property IsEditAlowTitle As System.Boolean

        End Class


#End Region

    End Class

End Namespace

