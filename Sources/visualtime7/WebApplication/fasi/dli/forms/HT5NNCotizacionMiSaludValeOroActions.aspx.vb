'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Form Designer v7.1.212.1 at 2018/11/08 10:57:31 AM model release 1, Form Generator v1.0.33.3
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class HT5NNCotizacionMiSaludValeOroActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"

       <WebMethod(EnableSession:=True)>
        Public Shared Function Initialization(id As String, urlid As String, fromid As String) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim instance As New EntryData With {.InstanceFormId = id}
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim currentAction As String = String.Empty
            Dim HT5NNCotizacionMiSaludValeOroParametersInstance As HT5NNCotizacionMiSaludValeOroParameters = Nothing

            Try
                If id.IsEmpty AndAlso urlid.IsEmpty Then
                    instance.InstanceFormId = System.Guid.NewGuid().ToString
                    
                    With instance

                    End With                
                    
                    HT5NNCotizacionMiSaludValeOroParametersInstance = EntryDataToClass(HT5NNCotizacionMiSaludValeOroParametersInstance, instance)
                    SetDefaultValuesFromQueryString(HT5NNCotizacionMiSaludValeOroParametersInstance)
                    
                    If fromid.IsNotEmpty Then
                        GetTransferParameters(HT5NNCotizacionMiSaludValeOroParametersInstance, fromid)
                    End If
                Else          
                    instance.InstanceFormId = id.IfEmpty(urlid)
                    HT5NNCotizacionMiSaludValeOroParametersInstance = RetrieveFormInformationFromSession(instance.InstanceFormId)
                End If

                HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath"))) = String.Empty

                If id.IsEmpty AndAlso urlid.IsEmpty Then
                    Form_Initialization(currentAction, HT5NNCotizacionMiSaludValeOroParametersInstance, resultData)
                Else
                    Form_Load(currentAction, HT5NNCotizacionMiSaludValeOroParametersInstance, resultData)
                End If


                instance = ClassToEntryData(instance, HT5NNCotizacionMiSaludValeOroParametersInstance) 
		        StoreFormInformationOnSession(HT5NNCotizacionMiSaludValeOroParametersInstance)
                
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "Initialization", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
   
        <WebMethod(EnableSession:=True)>
        Public Shared Function btnEliAAClick(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionMiSaludValeOroParametersInstance As HT5NNCotizacionMiSaludValeOroParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionMiSaludValeOroParametersInstance = RetrieveFormInformationFromSession(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("btnEliAAClick")
                HT5NNCotizacionMiSaludValeOroParametersInstance = EntryDataToClass(HT5NNCotizacionMiSaludValeOroParametersInstance, instance)
                currentAction = SessionTrace("1. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false...")
                currentAction = SessionTrace("1.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false...")

                HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false

                currentAction = SessionTrace("2. Coverages.Visible = false, Acepto.Visible = false, label1.Visible = true...")
                currentAction = SessionTrace("2.1. Coverages.Visible = false...")
                resultData.AddControlBehavior("Coverages", "hide")
                currentAction = SessionTrace("2.2. Acepto.Visible = false...")
                resultData.AddControlBehavior("Acepto", "hide")
                currentAction = SessionTrace("2.3. label1.Visible = true...")
                resultData.AddControlBehavior("label1", "show")
                currentAction = SessionTrace("2.4. label6.Visible = false...")
                resultData.AddControlBehavior("label6", "hide")

                currentAction = SessionTrace("3. HT5NNCotizacionMiSaludValeOroParametersInstance.AccionEjecutarAA = 1...")
                currentAction = SessionTrace("3.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AccionEjecutarAA = 1...")

                HT5NNCotizacionMiSaludValeOroParametersInstance.AccionEjecutarAA = 1

                currentAction = SessionTrace("4. If HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoProcesar Is Null Or Empty  OR HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoProcesar = 0 Then")
                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoProcesar) OrElse HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoProcesar = 0 Then

                    currentAction = SessionTrace("5. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = true...")
                    currentAction = SessionTrace("5.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = true...")

                    HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = true

                    currentAction = SessionTrace("6. The message 'Debe seleccionar el ...' will displayed as 'Popup'")
                    ParametersToDictionary(HT5NNCotizacionMiSaludValeOroParametersInstance, parametersDictionary)
                    messageAction = "Debe seleccionar el asegurado adicional a eliminar"
                    messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                    resultData.AddNotifyPopup(messageAction)
                    Else
                    currentAction = SessionTrace("7. 'HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional' = New 'InMotionGIT.Policy.Entity'...'")
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional = New InMotionGIT.Policy.Entity.Contracts.Role

                    currentAction = SessionTrace("8. For Each roleEliItem As 'InMotionGIT.Policy.Entity...' In 'HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCollection...'")
                    For Each roleEliItem As InMotionGIT.Policy.Entity.Contracts.Role In HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCollection

                        currentAction = SessionTrace("9. If roleEliItem.UserCode = HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoProcesar Then")
                        If roleEliItem.UserCode = HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoProcesar Then

                            currentAction = SessionTrace("10. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional = roleEliItem...")
                            currentAction = SessionTrace("10.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional = roleEliItem...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional = roleEliItem

                                        End If
                                    Next
                                End If
                currentAction = SessionTrace("11. If HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("12. zCRUDaa.Visible = false, zone19.Visible = true, ClientRolea.Enabled = false...")
                    currentAction = SessionTrace("12.1. zCRUDaa.Visible = false...")
                    resultData.AddControlBehavior("zCRUDaa", "hide")
                    currentAction = SessionTrace("12.2. zone19.Visible = true...")
                    resultData.AddControlBehavior("zone19", "show")
                    currentAction = SessionTrace("12.3. ClientRolea.Enabled = false...")
                    resultData.AddControlBehavior("ClientRolea", "disabled")
                    currentAction = SessionTrace("12.4. BirthDatea.Enabled = false...")
                    resultData.AddControlBehavior("BirthDatea", "disabled")
                    currentAction = SessionTrace("12.5. Gendera.Enabled = false...")
                    resultData.AddControlBehavior("Gendera", "disabled")

                                    End If

                instance = ClassToEntryData(instance, HT5NNCotizacionMiSaludValeOroParametersInstance)
                StoreFormInformationOnSession(HT5NNCotizacionMiSaludValeOroParametersInstance)
                
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "btnEliAAClick", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function btnModAAClick(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionMiSaludValeOroParametersInstance As HT5NNCotizacionMiSaludValeOroParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionMiSaludValeOroParametersInstance = RetrieveFormInformationFromSession(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("btnModAAClick")
                HT5NNCotizacionMiSaludValeOroParametersInstance = EntryDataToClass(HT5NNCotizacionMiSaludValeOroParametersInstance, instance)
                currentAction = SessionTrace("1. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false...")
                currentAction = SessionTrace("1.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false...")

                HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false

                currentAction = SessionTrace("2. Coverages.Visible = false, Acepto.Visible = false, label1.Visible = true...")
                currentAction = SessionTrace("2.1. Coverages.Visible = false...")
                resultData.AddControlBehavior("Coverages", "hide")
                currentAction = SessionTrace("2.2. Acepto.Visible = false...")
                resultData.AddControlBehavior("Acepto", "hide")
                currentAction = SessionTrace("2.3. label1.Visible = true...")
                resultData.AddControlBehavior("label1", "show")
                currentAction = SessionTrace("2.4. label6.Visible = false...")
                resultData.AddControlBehavior("label6", "hide")

                currentAction = SessionTrace("3. HT5NNCotizacionMiSaludValeOroParametersInstance.AccionEjecutarAA = 2...")
                currentAction = SessionTrace("3.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AccionEjecutarAA = 2...")

                HT5NNCotizacionMiSaludValeOroParametersInstance.AccionEjecutarAA = 2

                currentAction = SessionTrace("4. If HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoProcesar Is Null Or Empty  OR HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoProcesar = 0 Then")
                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoProcesar) OrElse HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoProcesar = 0 Then

                    currentAction = SessionTrace("5. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = true...")
                    currentAction = SessionTrace("5.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = true...")

                    HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = true

                    currentAction = SessionTrace("6. The message 'Debe seleccionar el ...' will displayed as 'Popup'")
                    ParametersToDictionary(HT5NNCotizacionMiSaludValeOroParametersInstance, parametersDictionary)
                    messageAction = "Debe seleccionar el asegurado adicional a modificar"
                    messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                    resultData.AddNotifyPopup(messageAction)
                    Else
                    currentAction = SessionTrace("7. 'HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional' = New 'InMotionGIT.Policy.Entity'...'")
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional = New InMotionGIT.Policy.Entity.Contracts.Role

                    currentAction = SessionTrace("8. For Each roleIModItem As 'InMotionGIT.Policy.Entity...' In 'HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCollection...'")
                    For Each roleIModItem As InMotionGIT.Policy.Entity.Contracts.Role In HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCollection

                        currentAction = SessionTrace("9. If roleIModItem.UserCode = HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoProcesar Then")
                        If roleIModItem.UserCode = HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoProcesar Then

                            currentAction = SessionTrace("10. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional = roleIModItem...")
                            currentAction = SessionTrace("10.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional = roleIModItem...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional = roleIModItem

                                        End If
                                    Next
                                End If
                currentAction = SessionTrace("11. If HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("12. zCRUDaa.Visible = false, zone19.Visible = true, ClientRolea.Enabled = true...")
                    currentAction = SessionTrace("12.1. zCRUDaa.Visible = false...")
                    resultData.AddControlBehavior("zCRUDaa", "hide")
                    currentAction = SessionTrace("12.2. zone19.Visible = true...")
                    resultData.AddControlBehavior("zone19", "show")
                    currentAction = SessionTrace("12.3. ClientRolea.Enabled = true...")
                    resultData.AddControlBehavior("ClientRolea", "enabled")
                    currentAction = SessionTrace("12.4. ClientRolea.Enabled = true...")
                    resultData.AddControlBehavior("ClientRolea", "enabled")
                    currentAction = SessionTrace("12.5. Gendera.Enabled = true...")
                    resultData.AddControlBehavior("Gendera", "enabled")

                                    End If

                instance = ClassToEntryData(instance, HT5NNCotizacionMiSaludValeOroParametersInstance)
                StoreFormInformationOnSession(HT5NNCotizacionMiSaludValeOroParametersInstance)
                
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "btnModAAClick", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function btnAgrAAClick(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionMiSaludValeOroParametersInstance As HT5NNCotizacionMiSaludValeOroParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionMiSaludValeOroParametersInstance = RetrieveFormInformationFromSession(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("btnAgrAAClick")
                HT5NNCotizacionMiSaludValeOroParametersInstance = EntryDataToClass(HT5NNCotizacionMiSaludValeOroParametersInstance, instance)
                currentAction = SessionTrace("1. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false...")
                currentAction = SessionTrace("1.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false...")

                HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false

                currentAction = SessionTrace("2. HT5NNCotizacionMiSaludValeOroParametersInstance.AccionEjecutarAA = 3...")
                currentAction = SessionTrace("2.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AccionEjecutarAA = 3...")

                HT5NNCotizacionMiSaludValeOroParametersInstance.AccionEjecutarAA = 3

                currentAction = SessionTrace("3. Coverages.Visible = false, Acepto.Visible = false, label1.Visible = true...")
                currentAction = SessionTrace("3.1. Coverages.Visible = false...")
                resultData.AddControlBehavior("Coverages", "hide")
                currentAction = SessionTrace("3.2. Acepto.Visible = false...")
                resultData.AddControlBehavior("Acepto", "hide")
                currentAction = SessionTrace("3.3. label1.Visible = true...")
                resultData.AddControlBehavior("label1", "show")
                currentAction = SessionTrace("3.4. label6.Visible = false...")
                resultData.AddControlBehavior("label6", "hide")
                currentAction = SessionTrace("3.5. zCRUDaa.Visible = false...")
                resultData.AddControlBehavior("zCRUDaa", "hide")
                currentAction = SessionTrace("3.6. zone19.Visible = true...")
                resultData.AddControlBehavior("zone19", "show")
                currentAction = SessionTrace("3.7. ClientRolea.Enabled = true...")
                resultData.AddControlBehavior("ClientRolea", "enabled")
                currentAction = SessionTrace("3.8. BirthDatea.Enabled = true...")
                resultData.AddControlBehavior("BirthDatea", "enabled")
                currentAction = SessionTrace("3.9. Gendera.Enabled = true...")
                resultData.AddControlBehavior("Gendera", "enabled")

                currentAction = SessionTrace("4. 'HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional' = New 'InMotionGIT.Policy.Entity'...'")
                HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional = New InMotionGIT.Policy.Entity.Contracts.Role


                instance = ClassToEntryData(instance, HT5NNCotizacionMiSaludValeOroParametersInstance)
                StoreFormInformationOnSession(HT5NNCotizacionMiSaludValeOroParametersInstance)
                
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "btnAgrAAClick", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function btnRechAgrClick(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionMiSaludValeOroParametersInstance As HT5NNCotizacionMiSaludValeOroParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionMiSaludValeOroParametersInstance = RetrieveFormInformationFromSession(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("btnRechAgrClick")
                HT5NNCotizacionMiSaludValeOroParametersInstance = EntryDataToClass(HT5NNCotizacionMiSaludValeOroParametersInstance, instance)
                currentAction = SessionTrace("1. 'HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional' = New 'InMotionGIT.Policy.Entity'...'")
                HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional = New InMotionGIT.Policy.Entity.Contracts.Role

                currentAction = SessionTrace("2. Coverages.Visible = false, Acepto.Visible = false, label1.Visible = true...")
                currentAction = SessionTrace("2.1. Coverages.Visible = false...")
                resultData.AddControlBehavior("Coverages", "hide")
                currentAction = SessionTrace("2.2. Acepto.Visible = false...")
                resultData.AddControlBehavior("Acepto", "hide")
                currentAction = SessionTrace("2.3. label1.Visible = true...")
                resultData.AddControlBehavior("label1", "show")
                currentAction = SessionTrace("2.4. label6.Visible = false...")
                resultData.AddControlBehavior("label6", "hide")
                currentAction = SessionTrace("2.5. zone19.Visible = false...")
                resultData.AddControlBehavior("zone19", "hide")
                currentAction = SessionTrace("2.6. zCRUDaa.Visible = true...")
                resultData.AddControlBehavior("zCRUDaa", "show")


                instance = ClassToEntryData(instance, HT5NNCotizacionMiSaludValeOroParametersInstance)
                StoreFormInformationOnSession(HT5NNCotizacionMiSaludValeOroParametersInstance)
                
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "btnRechAgrClick", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function btnListoAAClick(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionMiSaludValeOroParametersInstance As HT5NNCotizacionMiSaludValeOroParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionMiSaludValeOroParametersInstance = RetrieveFormInformationFromSession(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("btnListoAAClick")
                HT5NNCotizacionMiSaludValeOroParametersInstance = EntryDataToClass(HT5NNCotizacionMiSaludValeOroParametersInstance, instance)
                currentAction = SessionTrace("1. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false...")
                currentAction = SessionTrace("1.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false...")

                HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false

                currentAction = SessionTrace("2. If HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.BirthDate > HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.BirthDate > HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate Then

                    currentAction = SessionTrace("3. The message 'Fecha de nacimiento ...' will displayed as 'Popup'")
                    ParametersToDictionary(HT5NNCotizacionMiSaludValeOroParametersInstance, parametersDictionary)
                    messageAction = "Fecha de nacimiento debe ser anterior a la fecha de inicio de vigencia de la solicitud..."
                    messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                    resultData.AddNotifyPopup(messageAction)
                    currentAction = SessionTrace("4. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = true...")
                    currentAction = SessionTrace("4.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = true...")

                    HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = true

                    End If
                currentAction = SessionTrace("5. If HT5NNCotizacionMiSaludValeOroParametersInstance.AccionEjecutarAA = 3 AND HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.AccionEjecutarAA = 3 AndAlso HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("6. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.UserCode = HT5NNCotizacionMiSaludValeOroParametersInstance.UltimoCertificado...")
                    currentAction = SessionTrace("6.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.UserCode = HT5NNCotizacionMiSaludValeOroParametersInstance.UltimoCertificado...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.UserCode = HT5NNCotizacionMiSaludValeOroParametersInstance.UltimoCertificado
                    currentAction = SessionTrace("6.2. HT5NNCotizacionMiSaludValeOroParametersInstance.CodigoString = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.Gend...")

                    HT5NNCotizacionMiSaludValeOroParametersInstance.CodigoString = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.Gender
                    currentAction = SessionTrace("6.3. HT5NNCotizacionMiSaludValeOroParametersInstance.CodigoNumerico = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.ClientRole...")

                    HT5NNCotizacionMiSaludValeOroParametersInstance.CodigoNumerico = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.ClientRole
                    currentAction = SessionTrace("6.4. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.BirthDate = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.Birt...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.BirthDate = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.BirthDate
                    currentAction = SessionTrace("6.5. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Gender = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.Gend...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Gender = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.Gender

                    currentAction = SessionTrace("7. SELECT TABLE18.SDESCRIPT, TABLE18.SSEXCLIEN, TABLE18.SSTATREGT FROM TABLE18... WHERE TABLE18.SSTATREGT = 1 AND TABLE18.SSEXCLIEN = HT5NNCotizacionMiSaludValeOroParametersInstance.CodigoString )")
                    isFoundData = False
                                               With New DataManagerFactory("SELECT TRIM(TABLE18.SDESCRIPT) SDESCRIPT, TRIM(TABLE18.SSEXCLIEN) SSEXCLIEN FROM TABLE18 TABLE18  WHERE TABLE18.SSTATREGT = '1' AND TABLE18.SSEXCLIEN = @:TABLE18SSEXCLIEN1 ORDER BY TABLE18.SDESCRIPT ASC", "TABLE18", "Linked.LatCombined")
.AddParameter("TABLE18SSEXCLIEN1", DbType.AnsiStringFixedLength, 1, (HT5NNCotizacionMiSaludValeOroParametersInstance.CodigoString = String.Empty), HT5NNCotizacionMiSaludValeOroParametersInstance.CodigoString)
 
            HT5NNCotizacionMiSaludValeOroParametersInstance.Descripcion = .QueryExecuteScalarToString()  
        End With

                    currentAction = SessionTrace("8. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.GenderDescription = HT5NNCotizacionMiSaludValeOroParametersInstance.Descripcion...")
                    currentAction = SessionTrace("8.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.GenderDescription = HT5NNCotizacionMiSaludValeOroParametersInstance.Descripcion...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.GenderDescription = HT5NNCotizacionMiSaludValeOroParametersInstance.Descripcion

                    currentAction = SessionTrace("9. SELECT TABLE12.SDESCRIPT, TABLE12.NROLE, TABLE12.SSTATREGT FROM TABLE12... WHERE TABLE12.SSTATREGT = 1 AND TABLE12.NROLE = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.ClientRole )")
                    isFoundData = False
                                               With New DataManagerFactory("SELECT TRIM(TABLE12.SDESCRIPT) SDESCRIPT, TABLE12.NROLE FROM TABLE12 TABLE12  WHERE TABLE12.SSTATREGT = '1' AND TABLE12.NROLE = @:TABLE12NROLE1 ORDER BY TABLE12.SDESCRIPT ASC", "TABLE12", "Linked.LatCombined")
.AddParameter("TABLE12NROLE1", DbType.Int32, 5, False, HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.ClientRole)
 
            HT5NNCotizacionMiSaludValeOroParametersInstance.Descripcion = .QueryExecuteScalarToString()  
        End With

                    currentAction = SessionTrace("10. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.ClientRoleDescription = HT5NNCotizacionMiSaludValeOroParametersInstance.Descripcion...")
                    currentAction = SessionTrace("10.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.ClientRoleDescription = HT5NNCotizacionMiSaludValeOroParametersInstance.Descripcion...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.ClientRoleDescription = HT5NNCotizacionMiSaludValeOroParametersInstance.Descripcion

                    currentAction = SessionTrace("11. 'HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Roles'.Add('HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional')")
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Roles.Add(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional)

                    currentAction = SessionTrace("12. 'HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCollection'.Add('HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional')")
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCollection.Add(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional)

                    currentAction = SessionTrace("13. 'HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional' = New 'InMotionGIT.Policy.Entity'...'")
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional = New InMotionGIT.Policy.Entity.Contracts.Role

                    currentAction = SessionTrace("14. HT5NNCotizacionMiSaludValeOroParametersInstance.UltimoCertificado = HT5NNCotizacionMiSaludValeOroParametersInstance.UltimoCertificado + 1...")
                    currentAction = SessionTrace("14.1. HT5NNCotizacionMiSaludValeOroParametersInstance.UltimoCertificado = HT5NNCotizacionMiSaludValeOroParametersInstance.UltimoCertificado + 1...")

                    HT5NNCotizacionMiSaludValeOroParametersInstance.UltimoCertificado = HT5NNCotizacionMiSaludValeOroParametersInstance.UltimoCertificado + 1

                    currentAction = SessionTrace("15. AseguradoProcesar.Visible = true")
                    currentAction = SessionTrace("15.1. AseguradoProcesar.Visible = true...")
                    resultData.AddControlBehavior("AseguradoProcesar", "show")

                        End If
                currentAction = SessionTrace("16. If HT5NNCotizacionMiSaludValeOroParametersInstance.AccionEjecutarAA = 1 AND HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.AccionEjecutarAA = 1 AndAlso HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("17. 'HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCollection' = New 'InMotionGIT.Policy.Entity'...'")
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCollection = New InMotionGIT.Policy.Entity.Contracts.RoleCollection

                    currentAction = SessionTrace("18. For Each roleRIEliItem As 'InMotionGIT.Policy.Entity...' In 'HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation...'")
                    For Each roleRIEliItem As InMotionGIT.Policy.Entity.Contracts.Role In HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Roles

                        currentAction = SessionTrace("19. If roleRIEliItem.UserCode = HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoProcesar Then")
                        If roleRIEliItem.UserCode = HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoProcesar Then

                            currentAction = SessionTrace("20. roleRIEliItem.IsDeletedMark = true...")
                            currentAction = SessionTrace("20.1. roleRIEliItem.IsDeletedMark = true...")

                            roleRIEliItem.IsDeletedMark = true

                                            Else
                            currentAction = SessionTrace("21. 'HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCollection'.Add('roleRIEliItem')")
                            HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCollection.Add(roleRIEliItem)

                                                End If
                                            Next
                                        End If
                currentAction = SessionTrace("22. If HT5NNCotizacionMiSaludValeOroParametersInstance.AccionEjecutarAA = 2 AND HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.AccionEjecutarAA = 2 AndAlso HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("23. HT5NNCotizacionMiSaludValeOroParametersInstance.CodigoString = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.Gend...")
                    currentAction = SessionTrace("23.1. HT5NNCotizacionMiSaludValeOroParametersInstance.CodigoString = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.Gend...")

                    HT5NNCotizacionMiSaludValeOroParametersInstance.CodigoString = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.Gender
                    currentAction = SessionTrace("23.2. HT5NNCotizacionMiSaludValeOroParametersInstance.CodigoNumerico = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.ClientRole...")

                    HT5NNCotizacionMiSaludValeOroParametersInstance.CodigoNumerico = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.ClientRole
                    currentAction = SessionTrace("23.3. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.BirthDate = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.Birt...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.BirthDate = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.BirthDate
                    currentAction = SessionTrace("23.4. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Gender = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.Gend...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Gender = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.Gender

                    currentAction = SessionTrace("24. SELECT TABLE18.SDESCRIPT, TABLE18.SSEXCLIEN, TABLE18.SSTATREGT FROM TABLE18... WHERE TABLE18.SSTATREGT = 1 AND TABLE18.SSEXCLIEN = HT5NNCotizacionMiSaludValeOroParametersInstance.CodigoString )")
                    isFoundData = False
                                               With New DataManagerFactory("SELECT TRIM(TABLE18.SDESCRIPT) SDESCRIPT, TRIM(TABLE18.SSEXCLIEN) SSEXCLIEN FROM TABLE18 TABLE18  WHERE TABLE18.SSTATREGT = '1' AND TABLE18.SSEXCLIEN = @:TABLE18SSEXCLIEN1 ORDER BY TABLE18.SDESCRIPT ASC", "TABLE18", "Linked.LatCombined")
.AddParameter("TABLE18SSEXCLIEN1", DbType.AnsiStringFixedLength, 1, (HT5NNCotizacionMiSaludValeOroParametersInstance.CodigoString = String.Empty), HT5NNCotizacionMiSaludValeOroParametersInstance.CodigoString)
 
            HT5NNCotizacionMiSaludValeOroParametersInstance.Descripcion = .QueryExecuteScalarToString()  
        End With

                    currentAction = SessionTrace("25. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.GenderDescription = HT5NNCotizacionMiSaludValeOroParametersInstance.Descripcion...")
                    currentAction = SessionTrace("25.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.GenderDescription = HT5NNCotizacionMiSaludValeOroParametersInstance.Descripcion...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.GenderDescription = HT5NNCotizacionMiSaludValeOroParametersInstance.Descripcion

                    currentAction = SessionTrace("26. SELECT TABLE12.SDESCRIPT, TABLE12.NROLE, TABLE12.SSTATREGT FROM TABLE12... WHERE TABLE12.SSTATREGT = 1 AND TABLE12.NROLE = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.ClientRole )")
                    isFoundData = False
                                               With New DataManagerFactory("SELECT TRIM(TABLE12.SDESCRIPT) SDESCRIPT, TABLE12.NROLE FROM TABLE12 TABLE12  WHERE TABLE12.SSTATREGT = '1' AND TABLE12.NROLE = @:TABLE12NROLE1 ORDER BY TABLE12.SDESCRIPT ASC", "TABLE12", "Linked.LatCombined")
.AddParameter("TABLE12NROLE1", DbType.Int32, 5, False, HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.ClientRole)
 
            HT5NNCotizacionMiSaludValeOroParametersInstance.Descripcion = .QueryExecuteScalarToString()  
        End With

                    currentAction = SessionTrace("27. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.ClientRoleDescription = HT5NNCotizacionMiSaludValeOroParametersInstance.Descripcion...")
                    currentAction = SessionTrace("27.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.ClientRoleDescription = HT5NNCotizacionMiSaludValeOroParametersInstance.Descripcion...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.ClientRoleDescription = HT5NNCotizacionMiSaludValeOroParametersInstance.Descripcion

                    currentAction = SessionTrace("28. For Each roleRIModItem As 'InMotionGIT.Policy.Entity...' In 'HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation...'")
                    For Each roleRIModItem As InMotionGIT.Policy.Entity.Contracts.Role In HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Roles

                        currentAction = SessionTrace("29. If roleRIModItem.UserCode = HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoProcesar Then")
                        If roleRIModItem.UserCode = HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoProcesar Then

                            currentAction = SessionTrace("30. roleRIModItem.Client.BirthDate = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.Birt...")
                            currentAction = SessionTrace("30.1. roleRIModItem.Client.BirthDate = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.Birt...")

                            roleRIModItem.Client.BirthDate = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.BirthDate
                            currentAction = SessionTrace("30.2. roleRIModItem.Client.Gender = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.Gend...")

                            roleRIModItem.Client.Gender = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.Gender
                            currentAction = SessionTrace("30.3. roleRIModItem.BirthDate = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.Birt...")

                            roleRIModItem.BirthDate = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.BirthDate
                            currentAction = SessionTrace("30.4. roleRIModItem.Gender = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.Gend...")

                            roleRIModItem.Gender = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.Gender
                            currentAction = SessionTrace("30.5. roleRIModItem.ClientRole = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.ClientRole...")

                            roleRIModItem.ClientRole = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.ClientRole

                                                            End If
                                                        Next
                    currentAction = SessionTrace("31. For Each roleTmpModItem As 'InMotionGIT.Policy.Entity...' In 'HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCollection...'")
                    For Each roleTmpModItem As InMotionGIT.Policy.Entity.Contracts.Role In HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCollection

                        currentAction = SessionTrace("32. If roleTmpModItem.UserCode = HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoProcesar Then")
                        If roleTmpModItem.UserCode = HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoProcesar Then

                            currentAction = SessionTrace("33. roleTmpModItem.Client.BirthDate = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.Birt...")
                            currentAction = SessionTrace("33.1. roleTmpModItem.Client.BirthDate = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.Birt...")

                            roleTmpModItem.Client.BirthDate = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.BirthDate
                            currentAction = SessionTrace("33.2. roleTmpModItem.Client.Gender = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.Gend...")

                            roleTmpModItem.Client.Gender = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.Gender
                            currentAction = SessionTrace("33.3. roleTmpModItem.BirthDate = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.Birt...")

                            roleTmpModItem.BirthDate = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.BirthDate
                            currentAction = SessionTrace("33.4. roleTmpModItem.Gender = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.Gend...")

                            roleTmpModItem.Gender = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.Client.Gender
                            currentAction = SessionTrace("33.5. roleTmpModItem.ClientRole = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.ClientRole...")

                            roleTmpModItem.ClientRole = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleAdicional.ClientRole

                                                                    End If
                                                                Next
                                                            End If
                currentAction = SessionTrace("34. If HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("35. HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoProcesar = 0...")
                    currentAction = SessionTrace("35.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoProcesar = 0...")

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoProcesar = 0

                    currentAction = SessionTrace("36. zone19.Visible = false, zCRUDaa.Visible = true")
                    currentAction = SessionTrace("36.1. zone19.Visible = false...")
                    resultData.AddControlBehavior("zone19", "hide")
                    currentAction = SessionTrace("36.2. zCRUDaa.Visible = true...")
                    resultData.AddControlBehavior("zCRUDaa", "show")

                                                                End If
                currentAction = SessionTrace("37. Coverages.Visible = false, Acepto.Visible = false, label1.Visible = true...")
                currentAction = SessionTrace("37.1. Coverages.Visible = false...")
                resultData.AddControlBehavior("Coverages", "hide")
                currentAction = SessionTrace("37.2. Acepto.Visible = false...")
                resultData.AddControlBehavior("Acepto", "hide")
                currentAction = SessionTrace("37.3. label1.Visible = true...")
                resultData.AddControlBehavior("label1", "show")
                currentAction = SessionTrace("37.4. label6.Visible = false...")
                resultData.AddControlBehavior("label6", "hide")


                instance = ClassToEntryData(instance, HT5NNCotizacionMiSaludValeOroParametersInstance)
                StoreFormInformationOnSession(HT5NNCotizacionMiSaludValeOroParametersInstance)
                
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "btnListoAAClick", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function CotizarClick(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionMiSaludValeOroParametersInstance As HT5NNCotizacionMiSaludValeOroParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionMiSaludValeOroParametersInstance = RetrieveFormInformationFromSession(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("CotizarClick")
                HT5NNCotizacionMiSaludValeOroParametersInstance = EntryDataToClass(HT5NNCotizacionMiSaludValeOroParametersInstance, instance)
                currentAction = SessionTrace("1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate = HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.BirthDate...")
                currentAction = SessionTrace("1.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate = HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.BirthDate...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate = HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.BirthDate
                currentAction = SessionTrace("1.2. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.Gender = HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.Gender...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.Gender = HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.Gender
                currentAction = SessionTrace("1.3. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.SmokerIndicator = HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.SmokerIndi...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.SmokerIndicator = HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.SmokerIndicator

                currentAction = SessionTrace("2. HT5NNCotizacionMiSaludValeOroParametersInstance.InRuleErros = False...")
                currentAction = SessionTrace("2.1. HT5NNCotizacionMiSaludValeOroParametersInstance.InRuleErros = False...")

                HT5NNCotizacionMiSaludValeOroParametersInstance.InRuleErros = False

                currentAction = SessionTrace("3. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.LifeLineOfBusiness.ActuarialAge = year(Date.Today) - year(HT5NNCotizacionMiSaludValeOroParametersInstance.R...")
                currentAction = SessionTrace("3.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.LifeLineOfBusiness.ActuarialAge = year(Date.Today) - year(HT5NNCotizacionMiSaludValeOroParametersInstance.R...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.LifeLineOfBusiness) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.LifeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.LifeLineOfBusiness.ActuarialAge = year(Date.Today) - year(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate)

                currentAction = SessionTrace("4. If HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.LifeLineOfBusiness.ActuarialAge < 18 Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.LifeLineOfBusiness.ActuarialAge < 18 Then

                    currentAction = SessionTrace("5. The message 'El solicitante del s...' will displayed as 'Popup'")
                    ParametersToDictionary(HT5NNCotizacionMiSaludValeOroParametersInstance, parametersDictionary)
                    messageAction = "El solicitante del seguro debe ser mayor de edad ({ Value /RiskInformation/LifeLineOfBusiness/ActuarialAge })"
                    messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                    resultData.AddNotifyPopup(messageAction)
                    currentAction = SessionTrace("6. HT5NNCotizacionMiSaludValeOroParametersInstance.InRuleErros = True...")
                    currentAction = SessionTrace("6.1. HT5NNCotizacionMiSaludValeOroParametersInstance.InRuleErros = True...")

                    HT5NNCotizacionMiSaludValeOroParametersInstance.InRuleErros = True

                    End If
                currentAction = SessionTrace("7. If HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.HealthLineOfBusiness.InsuredAmount = 0 AND HT5NNCotizacionMiSaludValeOroParametersInstance.InRuleErros = false Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.HealthLineOfBusiness.InsuredAmount = 0 AndAlso HT5NNCotizacionMiSaludValeOroParametersInstance.InRuleErros = false Then

                    currentAction = SessionTrace("8. The message 'Indique la suma aseg...' will displayed as 'Popup'")
                    ParametersToDictionary(HT5NNCotizacionMiSaludValeOroParametersInstance, parametersDictionary)
                    messageAction = "Indique la suma asegurada"
                    messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                    resultData.AddNotifyPopup(messageAction)
                    currentAction = SessionTrace("9. HT5NNCotizacionMiSaludValeOroParametersInstance.InRuleErros = True...")
                    currentAction = SessionTrace("9.1. HT5NNCotizacionMiSaludValeOroParametersInstance.InRuleErros = True...")

                    HT5NNCotizacionMiSaludValeOroParametersInstance.InRuleErros = True

                        End If
                currentAction = SessionTrace("10. If HT5NNCotizacionMiSaludValeOroParametersInstance.InRuleErros = False Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.InRuleErros = False Then

                    currentAction = SessionTrace("11. Coverages.Visible = true")
                    currentAction = SessionTrace("11.1. Coverages.Visible = true...")
                    resultData.AddControlBehavior("Coverages", "show")

                    currentAction = SessionTrace("12. Acepto.Visible = true")
                    currentAction = SessionTrace("12.1. Acepto.Visible = true...")
                    resultData.AddControlBehavior("Acepto", "show")

                    currentAction = SessionTrace("13. label6.Visible = true, label1.Visible = false")
                    currentAction = SessionTrace("13.1. label6.Visible = true...")
                    resultData.AddControlBehavior("label6", "show")
                    currentAction = SessionTrace("13.2. label1.Visible = false...")
                    resultData.AddControlBehavior("label1", "hide")

                    currentAction = SessionTrace("14. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Currency = HT5NNCotizacionMiSaludValeOroParametersInstance.Currency...")
                    currentAction = SessionTrace("14.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Currency = HT5NNCotizacionMiSaludValeOroParametersInstance.Currency...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Currency = HT5NNCotizacionMiSaludValeOroParametersInstance.Currency

                    currentAction = SessionTrace("15. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.RiskType = 1...")
                    currentAction = SessionTrace("15.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.RiskType = 1...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.RiskType = 1

                    currentAction = SessionTrace("16. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.ClientRole = 2...")
                    currentAction = SessionTrace("16.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.ClientRole = 2...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.ClientRole = 2

                    currentAction = SessionTrace("17. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded...")
                    currentAction = SessionTrace("17.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded

                            End If
                currentAction = SessionTrace("18. If HT5NNCotizacionMiSaludValeOroParametersInstance.InRuleErros = false Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.InRuleErros = false Then

                    currentAction = SessionTrace("19. Call 'Asigna módulos seleccionados por defecto' workflow in Synchronous mode with tracking")
                    WorkflowInArguments = New Dictionary(Of String, Object)

                    With WorkflowInArguments
                    .Add("context", formContext)
                    .Add("ModulosRiskInformation", HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Modules)
                    .Add("ProcessDate", HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate)
                    .Add("LineOfBusiness", HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.LineOfBusiness)
                    .Add("ProductCode", HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.ProductCode)
                    .Add("Currency", HT5NNCotizacionMiSaludValeOroParametersInstance.Currency)
                    End With

                    WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("AsignaModulosPorDefecto", "f7b4e740-4915-411e-bc5b-a5027c73d125", 1, WorkflowInArguments, True, True, "Me.AppRelativeVirtualPath", HT5NNCotizacionMiSaludValeOroParametersInstance.InternalId)

                    currentAction += "'Mapping Outputs'"
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Modules = WorkflowOutArguments("ModulosRiskInformation")

                    currentAction = SessionTrace("20. Call Shared Sub 'Coverage Rating' with parameters (RiskInformation Object, Error List)")
InMotionGIT.PolicyManager.Services.Rating.Calculate.Process(riskInformation:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation, errors:=HT5NNCotizacionMiSaludValeOroParametersInstance.ErroresActualizacion)

                    currentAction = SessionTrace("22. Call Shared Sub 'Clear Form Errors' without parameters")
                    
        HT5NNCotizacionMiSaludValeOroParametersInstance.Errors.Clear()
	formContext.Errors.Clear()
    

                                End If
                currentAction = SessionTrace("23. If HT5NNCotizacionMiSaludValeOroParametersInstance.AccumulatedAmount <> 0 Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.AccumulatedAmount <> 0 Then

                    currentAction = SessionTrace("24. zone11.Visible = True")
                    currentAction = SessionTrace("24.1. zone11.Visible = True...")
                    resultData.AddControlBehavior("zone11", "show")

                                    End If
                currentAction = SessionTrace("25. HT5NNCotizacionMiSaludValeOroParametersInstance.FormStatus = 1...")
                currentAction = SessionTrace("25.1. HT5NNCotizacionMiSaludValeOroParametersInstance.FormStatus = 1...")

                HT5NNCotizacionMiSaludValeOroParametersInstance.FormStatus = 1

                currentAction = SessionTrace("26. If HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = true Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = true Then

                    currentAction = SessionTrace("27. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                    currentAction = SessionTrace("27.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID

                                        Else
                    currentAction = SessionTrace("28. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = 0...")
                    currentAction = SessionTrace("28.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = 0...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = 0
                    currentAction = SessionTrace("28.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0

                                            End If
                currentAction = SessionTrace("29. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                currentAction = SessionTrace("29.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID


                instance = ClassToEntryData(instance, HT5NNCotizacionMiSaludValeOroParametersInstance)
                StoreFormInformationOnSession(HT5NNCotizacionMiSaludValeOroParametersInstance)
                
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "CotizarClick", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function AceptoClick(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionMiSaludValeOroParametersInstance As HT5NNCotizacionMiSaludValeOroParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionMiSaludValeOroParametersInstance = RetrieveFormInformationFromSession(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("AceptoClick")
                HT5NNCotizacionMiSaludValeOroParametersInstance = EntryDataToClass(HT5NNCotizacionMiSaludValeOroParametersInstance, instance)
                currentAction = SessionTrace("1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.InsuredAmount = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.HealthLin...")
                currentAction = SessionTrace("1.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.InsuredAmount = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.HealthLin...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.InsuredAmount = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.HealthLineOfBusiness.InsuredAmount

                currentAction = SessionTrace("2. If HT5NNCotizacionMiSaludValeOroParametersInstance.ProducerClientID Not Is Null Or Not Empty '' Then")
                If Not String.IsNullOrEmpty(HT5NNCotizacionMiSaludValeOroParametersInstance.ProducerClientID) Then

                    currentAction = SessionTrace("3. Show 'zona' control")
                    resultData.AddControlBehavior("zone7", "show")

                    End If
                currentAction = SessionTrace("4. Show 'Dirección comercial' control")
                resultData.AddControlBehavior("zone10", "show")

                currentAction = SessionTrace("5. Hide 'Cuestionario básico de salud' control")
                resultData.AddControlBehavior("zone4", "hide")

                currentAction = SessionTrace("6. If HT5NNCotizacionMiSaludValeOroParametersInstance.PlanType <> 1 Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.PlanType <> 1 Then

                    currentAction = SessionTrace("7. Show 'Cuestionario básico de salud' control")
                    resultData.AddControlBehavior("zone4", "show")

                        Else
                    currentAction = SessionTrace("8. If HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation >= 50000 Then")
                    If HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation >= 50000 Then

                        currentAction = SessionTrace("9. Show 'Cuestionario básico de salud' control")
                        resultData.AddControlBehavior("zone4", "show")

                                    End If
                                End If
                currentAction = SessionTrace("10. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false...")
                currentAction = SessionTrace("10.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false...")

                HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false

                currentAction = SessionTrace("11. HT5NNCotizacionMiSaludValeOroParametersInstance.CantAsegAdicionales = 0...")
                currentAction = SessionTrace("11.1. HT5NNCotizacionMiSaludValeOroParametersInstance.CantAsegAdicionales = 0...")

                HT5NNCotizacionMiSaludValeOroParametersInstance.CantAsegAdicionales = 0

                currentAction = SessionTrace("12. For Each ValCliRoleItem As 'InMotionGIT.Policy.Entity...' In 'HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation...'")
                For Each ValCliRoleItem As InMotionGIT.Policy.Entity.Contracts.Role In HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Roles

                    currentAction = SessionTrace("13. If (ValCliRoleItem.ClientRole <> 1 AND ValCliRoleItem.ClientRole <> 2 AND ... Then")
                    If (ValCliRoleItem.ClientRole <> 1 AndAlso ValCliRoleItem.ClientRole <> 2 AndAlso ValCliRoleItem.ClientRole <> 13 AndAlso Not IsNothing(ValCliRoleItem.BirthDate) AndAlso ValCliRoleItem.BirthDate <> Date.MinValue) Then

                        currentAction = SessionTrace("14. HT5NNCotizacionMiSaludValeOroParametersInstance.CantAsegAdicionales = HT5NNCotizacionMiSaludValeOroParametersInstance.CantAsegAdicionales + 1...")
                        currentAction = SessionTrace("14.1. HT5NNCotizacionMiSaludValeOroParametersInstance.CantAsegAdicionales = HT5NNCotizacionMiSaludValeOroParametersInstance.CantAsegAdicionales + 1...")

                        HT5NNCotizacionMiSaludValeOroParametersInstance.CantAsegAdicionales = HT5NNCotizacionMiSaludValeOroParametersInstance.CantAsegAdicionales + 1

                                            End If
                                        Next
                currentAction = SessionTrace("15. If HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("16. tab13.Visible = true, zonegeneral.Visible = false, zone2.Visible = true...")
                    currentAction = SessionTrace("16.1. tab13.Visible = true...")
                    resultData.AddControlBehavior("tab13", "show")
                    currentAction = SessionTrace("16.2. zonegeneral.Visible = false...")
                    resultData.AddControlBehavior("zonegeneral", "hide")
                    currentAction = SessionTrace("16.3. zone2.Visible = true...")
                    resultData.AddControlBehavior("zone2", "show")
                    currentAction = SessionTrace("16.4. Cotizar.Visible = false...")
                    resultData.AddControlBehavior("Cotizar", "hide")
                    currentAction = SessionTrace("16.5. tab13.Enabled = true...")
                    resultData.AddControlBehavior("tab13", "enabled")
                    currentAction = SessionTrace("16.6. Acepto.Visible = false...")
                    resultData.AddControlBehavior("Acepto", "hide")
                    currentAction = SessionTrace("16.7. Currency.Enabled = false...")
                    resultData.AddControlBehavior("Currency", "disabled")
                    currentAction = SessionTrace("16.8. Coverages.Enabled = false...")
                    resultData.AddControlBehavior("Coverages", "disabled")
                    currentAction = SessionTrace("16.9. label6.Visible = false...")
                    resultData.AddControlBehavior("label6", "hide")
                    currentAction = SessionTrace("16.10. zone18.Visible = true...")
                    resultData.AddControlBehavior("zone18", "show")
                    currentAction = SessionTrace("16.11. tab13.Visible = true...")
                    resultData.AddControlBehavior("tab13", "show")
                    currentAction = SessionTrace("16.12. tabcontainer0.ActiveTab = tab13...")
                    resultData.AddControlBehavior("tab13", "active")
                    currentAction = SessionTrace("16.13. label1.Visible = false...")
                    resultData.AddControlBehavior("label1", "hide")
                    currentAction = SessionTrace("16.14. RiskInformationEffectiveDate.Enabled = false...")
                    resultData.AddControlBehavior("RiskInformationEffectiveDate", "disabled")
                    currentAction = SessionTrace("16.15. PaymentFrequency.Enabled = false...")
                    resultData.AddControlBehavior("PaymentFrequency", "disabled")
                    currentAction = SessionTrace("16.16. zone8.Visible = true...")
                    resultData.AddControlBehavior("zone8", "show")
                    currentAction = SessionTrace("16.17. zone6.Enabled = false...")
                    resultData.AddControlBehavior("zone6", "disabled")
                    currentAction = SessionTrace("16.18. zCRUDaa.Visible = false...")
                    resultData.AddControlBehavior("zCRUDaa", "hide")
                    currentAction = SessionTrace("16.19. label7.Visible = false...")
                    resultData.AddControlBehavior("label7", "hide")
                    currentAction = SessionTrace("16.20. zone6.Visible = false...")
                    resultData.AddControlBehavior("zone6", "hide")

                                            End If
                currentAction = SessionTrace("17. HT5NNCotizacionMiSaludValeOroParametersInstance.FormStatus = 2...")
                currentAction = SessionTrace("17.1. HT5NNCotizacionMiSaludValeOroParametersInstance.FormStatus = 2...")

                HT5NNCotizacionMiSaludValeOroParametersInstance.FormStatus = 2

                currentAction = SessionTrace("18. HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.CompanyId = 1...")
                currentAction = SessionTrace("18.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.CompanyId = 1...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.CompanyId = 1
                currentAction = SessionTrace("18.2. HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Country = 58...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Country = 58
                currentAction = SessionTrace("18.3. HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Security.Usercode = 9998...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Security) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Security = New InMotionGIT.Common.Contracts.Process.SecurityInformation
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Security.Usercode = 9998

                currentAction = SessionTrace("19. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Cont...")
                currentAction = SessionTrace("19.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Cont...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                currentAction = SessionTrace("19.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Cont...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.eMailAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Contract.General.eMailAddress
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Contract.General.eMailAddress
                currentAction = SessionTrace("19.3. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Cont...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address

                currentAction = SessionTrace("20. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1...")
                currentAction = SessionTrace("20.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1

                currentAction = SessionTrace("21. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1...")
                currentAction = SessionTrace("21.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1

                currentAction = SessionTrace("22. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1...")
                currentAction = SessionTrace("22.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1
                currentAction = SessionTrace("22.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.TypeOfAddress = 3...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.TypeOfAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.TypeOfAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfAddress
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.TypeOfAddress = 3
                currentAction = SessionTrace("22.3. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.UserCompany.Code = 1...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.UserCompany) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.UserCompany = New InMotionGIT.Common.DataType.LookUpValueExtend
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.UserCompany.Code = 1
                currentAction = SessionTrace("22.4. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 6...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 6

                currentAction = SessionTrace("23. HT5NNCotizacionMiSaludValeOroParametersInstance.CurrentYear = year(Date.Today)...")
                currentAction = SessionTrace("23.1. HT5NNCotizacionMiSaludValeOroParametersInstance.CurrentYear = year(Date.Today)...")

                HT5NNCotizacionMiSaludValeOroParametersInstance.CurrentYear = year(Date.Today)

                currentAction = SessionTrace("24. HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.CompanyId = 1...")
                currentAction = SessionTrace("24.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.CompanyId = 1...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.CompanyId = 1
                currentAction = SessionTrace("24.2. HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Country = 58...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Country = 58
                currentAction = SessionTrace("24.3. HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Security.Usercode = 9998...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Security) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Security = New InMotionGIT.Common.Contracts.Process.SecurityInformation
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Security.Usercode = 9998

                currentAction = SessionTrace("25. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Cont...")
                currentAction = SessionTrace("25.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Cont...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                currentAction = SessionTrace("25.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Cont...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.eMailAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Contract.General.eMailAddress
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Contract.General.eMailAddress
                currentAction = SessionTrace("25.3. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Cont...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address

                currentAction = SessionTrace("26. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                currentAction = SessionTrace("26.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID
                currentAction = SessionTrace("26.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1
                currentAction = SessionTrace("26.3. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID

                currentAction = SessionTrace("27. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                currentAction = SessionTrace("27.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID
                currentAction = SessionTrace("27.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1
                currentAction = SessionTrace("27.3. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID

                currentAction = SessionTrace("28. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1...")
                currentAction = SessionTrace("28.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1
                currentAction = SessionTrace("28.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.TypeOfAddress = 3...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.TypeOfAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.TypeOfAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfAddress
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.TypeOfAddress = 3
                currentAction = SessionTrace("28.3. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.UserCompany.Code = 1...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.UserCompany) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.UserCompany = New InMotionGIT.Common.DataType.LookUpValueExtend
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.UserCompany.Code = 1
                currentAction = SessionTrace("28.4. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 6...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 6

                currentAction = SessionTrace("29. If (HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID Is Null Or Empty  OR HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID = 0) Then")
                If (IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID) OrElse HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID = 0) Then

                    currentAction = SessionTrace("30. Call Function 'Retrieve addresses by owner' with parameters (Process date, User company of the address, Record owner type, Record owner id, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                    Dim _AddressDLICollection_390baf2e57cf4e7593d41b1ebdffed14 As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                    _AddressDLICollection_390baf2e57cf4e7593d41b1ebdffed14 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesDLI(processDate:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate, userCompany:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.UserCompany, recordOwnerType:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType, recordOwnerId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerID, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation, typeOfAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection = _AddressDLICollection_390baf2e57cf4e7593d41b1ebdffed14
                    isNullResult = (IsNothing(_AddressDLICollection_390baf2e57cf4e7593d41b1ebdffed14))

                    currentAction = SessionTrace("31. If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then")
                    If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then

                        currentAction = SessionTrace("32. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).A...")
                        currentAction = SessionTrace("32.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).A...")
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).AddressID
                        currentAction = SessionTrace("32.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).InternalAddressKey

                        currentAction = SessionTrace("33. Call Function 'Retrieve an email address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                        Dim _AddresseMailDLI_91a5d57ce8a64536895d5889dc48e2e7 As InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                        _AddresseMailDLI_91a5d57ce8a64536895d5889dc48e2e7 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveeMailDLI(processDate:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.AddressID, internalAddressKey:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.InternalAddressKey, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation)
                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = _AddresseMailDLI_91a5d57ce8a64536895d5889dc48e2e7
                        isNullResult = (IsNothing(_AddresseMailDLI_91a5d57ce8a64536895d5889dc48e2e7))

                                                        End If
                    currentAction = SessionTrace("34. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1...")
                    currentAction = SessionTrace("34.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfAddress
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1
                    currentAction = SessionTrace("34.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1
                    currentAction = SessionTrace("34.3. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany.Code = 1...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany = New InMotionGIT.Common.DataType.LookUpValueExtend
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany.Code = 1
                    currentAction = SessionTrace("34.4. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1

                    currentAction = SessionTrace("35. Call Function 'Retrieve addresses by owner' with parameters (Process date, User company of the address, Record owner type, Record owner id, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                    Dim _AddressDLICollection_3b719709c96c4cb1acdc8f9a451ee993 As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                    _AddressDLICollection_3b719709c96c4cb1acdc8f9a451ee993 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesDLI(processDate:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate, userCompany:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany, recordOwnerType:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType, recordOwnerId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation, typeOfAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection = _AddressDLICollection_3b719709c96c4cb1acdc8f9a451ee993
                    isNullResult = (IsNothing(_AddressDLICollection_3b719709c96c4cb1acdc8f9a451ee993))

                    currentAction = SessionTrace("36. If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then")
                    If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then

                        currentAction = SessionTrace("37. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).A...")
                        currentAction = SessionTrace("37.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).A...")
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).AddressID
                        currentAction = SessionTrace("37.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).InternalAddressKey

                        currentAction = SessionTrace("38. Call Function 'Retrieve a physical address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                        Dim _AddressPhysicalAddressDLI_57ea6c0ccbaa4c03baa043abc05b4a0d As InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                        _AddressPhysicalAddressDLI_57ea6c0ccbaa4c03baa043abc05b4a0d = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrievePhysicalAddressDLI(processDate:=Date.Today, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, internalAddressKey:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation)
                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = _AddressPhysicalAddressDLI_57ea6c0ccbaa4c03baa043abc05b4a0d
                        isNullResult = (IsNothing(_AddressPhysicalAddressDLI_57ea6c0ccbaa4c03baa043abc05b4a0d))

                                                            Else
                        currentAction = SessionTrace("39. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2...")
                        currentAction = SessionTrace("39.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2...")
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2

                        currentAction = SessionTrace("40. Call Function 'Retrieve addresses by owner' with parameters (Process date, User company of the address, Record owner type, Record owner id, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                        Dim _AddressDLICollection_63cb1944d0c34af3b4831a35d1262b4b As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                        _AddressDLICollection_63cb1944d0c34af3b4831a35d1262b4b = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesDLI(processDate:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate, userCompany:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany, recordOwnerType:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType, recordOwnerId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation, typeOfAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection = _AddressDLICollection_63cb1944d0c34af3b4831a35d1262b4b
                        isNullResult = (IsNothing(_AddressDLICollection_63cb1944d0c34af3b4831a35d1262b4b))

                        currentAction = SessionTrace("41. If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then")
                        If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then

                            currentAction = SessionTrace("42. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).A...")
                            currentAction = SessionTrace("42.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).A...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).AddressID
                            currentAction = SessionTrace("42.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).InternalAddressKey

                            currentAction = SessionTrace("43. Call Function 'Retrieve a physical address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                            Dim _AddressPhysicalAddressDLI_719e32600a2147beb273af4ac8dda673 As InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                            _AddressPhysicalAddressDLI_719e32600a2147beb273af4ac8dda673 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrievePhysicalAddressDLI(processDate:=Date.Today, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, internalAddressKey:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation)
                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = _AddressPhysicalAddressDLI_719e32600a2147beb273af4ac8dda673
                            isNullResult = (IsNothing(_AddressPhysicalAddressDLI_719e32600a2147beb273af4ac8dda673))

                                                                        Else
                            currentAction = SessionTrace("44. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0...")
                            currentAction = SessionTrace("44.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0
                            currentAction = SessionTrace("44.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1

                            currentAction = SessionTrace("45. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = 0...")
                            currentAction = SessionTrace("45.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = 0...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = 0
                            currentAction = SessionTrace("45.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0
                            currentAction = SessionTrace("45.3. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1
                            currentAction = SessionTrace("45.4. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfRoute = 1...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfRoute) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfRoute = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfRoute
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfRoute = 1

                                                                            End If
                                                                        End If
                                                                    End If
                currentAction = SessionTrace("46. If (HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID Not Is Null Or Not Empty  AND HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID <> 0) Then")
                If (Not IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID) AndAlso HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID <> 0) Then

                    currentAction = SessionTrace("47. Call Function 'Retrieve addresses by id' with parameters (Process date, User company of the address, Id value of the address, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                    Dim _AddressDLICollection_c929efb972f442aab030bf9dbaf672b1 As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                    _AddressDLICollection_c929efb972f442aab030bf9dbaf672b1 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesByIdDLI(processDate:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate, userCompany:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.UserCompany, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.AddressID, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation, typeOfAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection = _AddressDLICollection_c929efb972f442aab030bf9dbaf672b1
                    isNullResult = (IsNothing(_AddressDLICollection_c929efb972f442aab030bf9dbaf672b1))

                    currentAction = SessionTrace("48. If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then")
                    If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then

                        currentAction = SessionTrace("49. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                        currentAction = SessionTrace("49.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).InternalAddressKey

                        currentAction = SessionTrace("50. Call Function 'Retrieve an email address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                        Dim _AddresseMailDLI_e0bccb622e204d1eba6ca38e3434b91e As InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                        _AddresseMailDLI_e0bccb622e204d1eba6ca38e3434b91e = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveeMailDLI(processDate:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.AddressID, internalAddressKey:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.InternalAddressKey, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation)
                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = _AddresseMailDLI_e0bccb622e204d1eba6ca38e3434b91e
                        isNullResult = (IsNothing(_AddresseMailDLI_e0bccb622e204d1eba6ca38e3434b91e))

                                                                                End If
                    currentAction = SessionTrace("51. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1...")
                    currentAction = SessionTrace("51.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfAddress
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1
                    currentAction = SessionTrace("51.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1
                    currentAction = SessionTrace("51.3. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany.Code = 1...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany = New InMotionGIT.Common.DataType.LookUpValueExtend
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany.Code = 1
                    currentAction = SessionTrace("51.4. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1

                    currentAction = SessionTrace("52. Call Function 'Retrieve addresses by id' with parameters (Process date, User company of the address, Id value of the address, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                    Dim _AddressDLICollection_dc0ac992853e4584840b020116722b0c As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                    _AddressDLICollection_dc0ac992853e4584840b020116722b0c = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesByIdDLI(processDate:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate, userCompany:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation, typeOfAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection = _AddressDLICollection_dc0ac992853e4584840b020116722b0c
                    isNullResult = (IsNothing(_AddressDLICollection_dc0ac992853e4584840b020116722b0c))

                    currentAction = SessionTrace("53. If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then")
                    If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then

                        currentAction = SessionTrace("54. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                        currentAction = SessionTrace("54.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).InternalAddressKey

                        currentAction = SessionTrace("55. Call Function 'Retrieve a physical address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                        Dim _AddressPhysicalAddressDLI_bb104c67711340b2b97ca09a35558e35 As InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                        _AddressPhysicalAddressDLI_bb104c67711340b2b97ca09a35558e35 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrievePhysicalAddressDLI(processDate:=Date.Today, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, internalAddressKey:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation)
                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = _AddressPhysicalAddressDLI_bb104c67711340b2b97ca09a35558e35
                        isNullResult = (IsNothing(_AddressPhysicalAddressDLI_bb104c67711340b2b97ca09a35558e35))

                                                                                    Else
                        currentAction = SessionTrace("56. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2...")
                        currentAction = SessionTrace("56.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2...")
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2

                        currentAction = SessionTrace("57. Call Function 'Retrieve addresses by id' with parameters (Process date, User company of the address, Id value of the address, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                        Dim _AddressDLICollection_7f1d666ca5f447108ff2c5a65cf06e36 As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                        _AddressDLICollection_7f1d666ca5f447108ff2c5a65cf06e36 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesByIdDLI(processDate:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate, userCompany:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation, typeOfAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection = _AddressDLICollection_7f1d666ca5f447108ff2c5a65cf06e36
                        isNullResult = (IsNothing(_AddressDLICollection_7f1d666ca5f447108ff2c5a65cf06e36))

                        currentAction = SessionTrace("58. If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then")
                        If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then

                            currentAction = SessionTrace("59. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                            currentAction = SessionTrace("59.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).InternalAddressKey

                            currentAction = SessionTrace("60. Call Function 'Retrieve a physical address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                            Dim _AddressPhysicalAddressDLI_4f5c27a2bc884d35a3432cf48850aa7e As InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                            _AddressPhysicalAddressDLI_4f5c27a2bc884d35a3432cf48850aa7e = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrievePhysicalAddressDLI(processDate:=Date.Today, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, internalAddressKey:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation)
                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = _AddressPhysicalAddressDLI_4f5c27a2bc884d35a3432cf48850aa7e
                            isNullResult = (IsNothing(_AddressPhysicalAddressDLI_4f5c27a2bc884d35a3432cf48850aa7e))

                                                                                                Else
                            currentAction = SessionTrace("61. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = 0...")
                            currentAction = SessionTrace("61.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = 0...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = 0
                            currentAction = SessionTrace("61.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0
                            currentAction = SessionTrace("61.3. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1
                            currentAction = SessionTrace("61.4. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfRoute = 1...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfRoute) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfRoute = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfRoute
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfRoute = 1

                            currentAction = SessionTrace("62. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0...")
                            currentAction = SessionTrace("62.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0
                            currentAction = SessionTrace("62.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1

                                                                                                    End If
                                                                                                End If
                                                                                            End If
                currentAction = SessionTrace("63. Call 'Valida asegurados adicionales' workflow in Synchronous mode with tracking")
                WorkflowInArguments = New Dictionary(Of String, Object)

                With WorkflowInArguments
                .Add("context", formContext)
                .Add("RolesPolicy", HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Roles)
                .Add("ErrorsFound", HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound)
                .Add("ValidaAsegurado", false)
                End With

                WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("ValidaAseguradosAdicionales", "f7ec8523-1d50-4529-be56-8b698db10c87", 4, WorkflowInArguments, True, True, "Me.AppRelativeVirtualPath", HT5NNCotizacionMiSaludValeOroParametersInstance.InternalId)

                currentAction += "'Mapping Outputs'"
                HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Roles = WorkflowOutArguments("RolesPolicy")
                HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = WorkflowOutArguments("ErrorsFound")


                instance = ClassToEntryData(instance, HT5NNCotizacionMiSaludValeOroParametersInstance)
                StoreFormInformationOnSession(HT5NNCotizacionMiSaludValeOroParametersInstance)
                
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "AceptoClick", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function ClientIDChange(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionMiSaludValeOroParametersInstance As HT5NNCotizacionMiSaludValeOroParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionMiSaludValeOroParametersInstance = RetrieveFormInformationFromSession(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("ClientIDClick")
                HT5NNCotizacionMiSaludValeOroParametersInstance = EntryDataToClass(HT5NNCotizacionMiSaludValeOroParametersInstance, instance)
                currentAction = SessionTrace("1. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false...")
                currentAction = SessionTrace("1.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false...")

                HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false

                currentAction = SessionTrace("2. HT5NNCotizacionMiSaludValeOroParametersInstance.ClienteIndicado = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                currentAction = SessionTrace("2.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ClienteIndicado = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")

                HT5NNCotizacionMiSaludValeOroParametersInstance.ClienteIndicado = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID

                currentAction = SessionTrace("3. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.ClientID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                currentAction = SessionTrace("3.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.ClientID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.ClientID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID

                currentAction = SessionTrace("4. Call Shared Function 'Retrieve Client' with parameters (Client Identification)")
                Dim _Client_976744ed62f34587996d79c84eb46c7e As InMotionGIT.Client.Entity.Contracts.Client
                
      _Client_976744ed62f34587996d79c84eb46c7e = (New InMotionGIT.Client.Services.ClientManager).Retrieve(clientId:=HT5NNCotizacionMiSaludValeOroParametersInstance.ClienteIndicado, atDate:=Date.Today, childFilter:= "All")
      isNullResult = (IsNothing(_Client_976744ed62f34587996d79c84eb46c7e))
      isFoundData  = Not isNullResult
    
                HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = _Client_976744ed62f34587996d79c84eb46c7e

                currentAction = SessionTrace("5. If Form.IsNullResult = true Then")
                If isNullResult = true Then

                    currentAction = SessionTrace("6. HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = false...")
                    currentAction = SessionTrace("6.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = false...")

                    HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = false
                    currentAction = SessionTrace("6.2. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured = Nothing...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured = Nothing

                    currentAction = SessionTrace("7. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID = HT5NNCotizacionMiSaludValeOroParametersInstance.ClienteIndicado...")
                    currentAction = SessionTrace("7.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID = HT5NNCotizacionMiSaludValeOroParametersInstance.ClienteIndicado...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID = HT5NNCotizacionMiSaludValeOroParametersInstance.ClienteIndicado

                    currentAction = SessionTrace("8. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate = HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.BirthDate...")
                    currentAction = SessionTrace("8.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate = HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.BirthDate...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate = HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.BirthDate
                    currentAction = SessionTrace("8.2. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.Gender = HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.Gender...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.Gender = HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.Gender
                    currentAction = SessionTrace("8.3. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.SmokerIndicator = HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.SmokerIndi...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.SmokerIndicator = HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.SmokerIndicator

                    currentAction = SessionTrace("9. Height.Enabled = true, Weight.Enabled = true, FirstName.Enabled = true...")
                    currentAction = SessionTrace("9.1. Height.Enabled = true...")
                    resultData.AddControlBehavior("Height", "enabled")
                    currentAction = SessionTrace("9.2. Weight.Enabled = true...")
                    resultData.AddControlBehavior("Weight", "enabled")
                    currentAction = SessionTrace("9.3. FirstName.Enabled = true...")
                    resultData.AddControlBehavior("FirstName", "enabled")
                    currentAction = SessionTrace("9.4. LastName.Enabled = true...")
                    resultData.AddControlBehavior("LastName", "enabled")
                    currentAction = SessionTrace("9.5. LastName2.Enabled = true...")
                    resultData.AddControlBehavior("LastName2", "enabled")

                    currentAction = SessionTrace("10. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.IsNew = true...")
                    currentAction = SessionTrace("10.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.IsNew = true...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.IsNew = true
                    currentAction = SessionTrace("10.2. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.TypeOfPerson = 1...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.TypeOfPerson = 1

                    Else
                    currentAction = SessionTrace("11. HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = true...")
                    currentAction = SessionTrace("11.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = true...")

                    HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = true

                    currentAction = SessionTrace("12. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.IsNew = false...")
                    currentAction = SessionTrace("12.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.IsNew = false...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.IsNew = false

                    currentAction = SessionTrace("13. FirstName.Enabled = false, LastName.Enabled = false, LastName2.Enabled = false")
                    currentAction = SessionTrace("13.1. FirstName.Enabled = false...")
                    resultData.AddControlBehavior("FirstName", "disabled")
                    currentAction = SessionTrace("13.2. LastName.Enabled = false...")
                    resultData.AddControlBehavior("LastName", "disabled")
                    currentAction = SessionTrace("13.3. LastName2.Enabled = false...")
                    resultData.AddControlBehavior("LastName2", "disabled")

                        End If
                currentAction = SessionTrace("14. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.ClientID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                currentAction = SessionTrace("14.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.ClientID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.ClientID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID

                currentAction = SessionTrace("15. If HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = true Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = true Then

                    currentAction = SessionTrace("16. If HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate Is Null Or Empty '' Then")
                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate) OrElse HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate = Date.MinValue Then

                        currentAction = SessionTrace("17. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.IsDirty = True...")
                        currentAction = SessionTrace("17.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.IsDirty = True...")
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                        HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.IsDirty = True

                        currentAction = SessionTrace("18. BirthDate.Enabled = true")
                        currentAction = SessionTrace("18.1. BirthDate.Enabled = true...")
                        resultData.AddControlBehavior("BirthDate", "enabled")

                                    Else
                        currentAction = SessionTrace("19. If HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.BirthDate <> HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate Then")
                        If HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.BirthDate <> HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate Then

                            currentAction = SessionTrace("20. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = true...")
                            currentAction = SessionTrace("20.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = true...")

                            HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = true

                            currentAction = SessionTrace("21. The message 'El cliente indicado ...' will displayed as 'Popup'")
                            ParametersToDictionary(HT5NNCotizacionMiSaludValeOroParametersInstance, parametersDictionary)
                            messageAction = "El cliente indicado está registrado en el sistema y la fecha de nacimiento incluida NO coincide con la fecha de nacimiento previamente registrada... No se puede continuar con la cotización..."
                            messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                            resultData.AddNotifyPopup(messageAction)
                            currentAction = SessionTrace("22. BirthDate.Enabled = true, Gender.Enabled = true")
                            currentAction = SessionTrace("22.1. BirthDate.Enabled = true...")
                            resultData.AddControlBehavior("BirthDate", "enabled")
                            currentAction = SessionTrace("22.2. Gender.Enabled = true...")
                            resultData.AddControlBehavior("Gender", "enabled")

                                                Else
                            currentAction = SessionTrace("23. BirthDate.Enabled = false")
                            currentAction = SessionTrace("23.1. BirthDate.Enabled = false...")
                            resultData.AddControlBehavior("BirthDate", "disabled")

                                                    End If
                                                End If
                                            End If
                currentAction = SessionTrace("24. If HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = true AND HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = true AndAlso HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("25. If HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.Gender Is Null Or Empty '' OR HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.Gender = 3 Then")
                    If String.IsNullOrEmpty(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.Gender) OrElse HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.Gender = 3 Then

                        currentAction = SessionTrace("26. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.IsDirty = True...")
                        currentAction = SessionTrace("26.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.IsDirty = True...")
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                        HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.IsDirty = True

                        currentAction = SessionTrace("27. Gender.Enabled = true")
                        currentAction = SessionTrace("27.1. Gender.Enabled = true...")
                        resultData.AddControlBehavior("Gender", "enabled")

                                                        Else
                        currentAction = SessionTrace("28. If HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.Gender <> HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.Gender Then")
                        If HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.Gender <> HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.Gender Then

                            currentAction = SessionTrace("29. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = true...")
                            currentAction = SessionTrace("29.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = true...")

                            HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = true

                            currentAction = SessionTrace("30. The message 'El cliente indicado ...' will displayed as 'Popup'")
                            ParametersToDictionary(HT5NNCotizacionMiSaludValeOroParametersInstance, parametersDictionary)
                            messageAction = "El cliente indicado está registrado en el sistema y el género incluido NO coincide con el género previamente registrado... No se puede continuar con la cotización..."
                            messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                            resultData.AddNotifyPopup(messageAction)
                            currentAction = SessionTrace("31. Gender.Enabled = true, BirthDate.Enabled = true")
                            currentAction = SessionTrace("31.1. Gender.Enabled = true...")
                            resultData.AddControlBehavior("Gender", "enabled")
                            currentAction = SessionTrace("31.2. BirthDate.Enabled = true...")
                            resultData.AddControlBehavior("BirthDate", "enabled")

                                                                    Else
                            currentAction = SessionTrace("32. Gender.Enabled = false")
                            currentAction = SessionTrace("32.1. Gender.Enabled = false...")
                            resultData.AddControlBehavior("Gender", "disabled")

                                                                        End If
                                                                    End If
                                                                End If
                currentAction = SessionTrace("33. HT5NNCotizacionMiSaludValeOroParametersInstance.AccumulatedAmount = 0...")
                currentAction = SessionTrace("33.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AccumulatedAmount = 0...")

                HT5NNCotizacionMiSaludValeOroParametersInstance.AccumulatedAmount = 0

                currentAction = SessionTrace("34. If HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = True AND HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = True AndAlso HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("35. Call 'Get the face amount of the Life policies of the insured person' workflow in Synchronous mode with tracking")
                    WorkflowInArguments = New Dictionary(Of String, Object)

                    With WorkflowInArguments
                    .Add("context", formContext)
                    .Add("ClientID", HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID)
                    .Add("CurrencyID", HT5NNCotizacionMiSaludValeOroParametersInstance.Currency)
                    .Add("Amount", HT5NNCotizacionMiSaludValeOroParametersInstance.AccumulatedAmount)
                    .Add("ProcessDate", HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate)
                    End With

                    WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("GetFaceAmountOfLifePoliciesOfTheInsuredPerson", "a240a822-d493-4dff-a365-ccb17551e006", 2, WorkflowInArguments, True, True, "Me.AppRelativeVirtualPath", HT5NNCotizacionMiSaludValeOroParametersInstance.InternalId)

                    currentAction += "'Mapping Outputs'"
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID = WorkflowOutArguments("ClientID")
                    HT5NNCotizacionMiSaludValeOroParametersInstance.Currency = WorkflowOutArguments("CurrencyID")
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AccumulatedAmount = WorkflowOutArguments("Amount")
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate = WorkflowOutArguments("ProcessDate")

                    currentAction = SessionTrace("36. HT5NNCotizacionMiSaludValeOroParametersInstance.CancelledPoliciesQuantity = 0...")
                    currentAction = SessionTrace("36.1. HT5NNCotizacionMiSaludValeOroParametersInstance.CancelledPoliciesQuantity = 0...")

                    HT5NNCotizacionMiSaludValeOroParametersInstance.CancelledPoliciesQuantity = 0

                    currentAction = SessionTrace("37. SELECT CERTIFICAT.SCERTYPE, CERTIFICAT.NBRANCH, CERTIFICAT.NPRODUCT FROM CERTIFICAT... WHERE CERTIFICAT.SCERTYPE = 2 AND CERTIFICAT.SSTATUSVA <> 3 AND CERTIFICAT.NNULLCODE <> 2 AND )")
                    isFoundData = False
                                               With New DataManagerFactory("SELECT DISTINCT COUNT(CERTIFICAT.NPOLICY) NPOLICY FROM CERTIFICAT CERTIFICAT JOIN ROLES ROLES ON ROLES.SCERTYPE = CERTIFICAT.SCERTYPE  AND ROLES.NBRANCH = CERTIFICAT.NBRANCH  AND ROLES.NPRODUCT = CERTIFICAT.NPRODUCT  AND ROLES.NPOLICY = CERTIFICAT.NPOLICY  AND ROLES.NCERTIF = CERTIFICAT.NCERTIF  WHERE CERTIFICAT.SCERTYPE = '2' AND CERTIFICAT.SSTATUSVA <> '3' AND ROLES.NROLE = 2 AND ROLES.SCLIENT = @:ROLESSCLIENT3 AND (CERTIFICAT.NNULLCODE <> 2 AND CERTIFICAT.NNULLCODE <> 3 AND CERTIFICAT.NNULLCODE <> 0 AND CERTIFICAT.NNULLCODE IS NOT NULL)", "CERTIFICAT", "Linked.LatCombined")
.AddParameter("ROLESSCLIENT3", DbType.AnsiStringFixedLength, 14, (HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID = String.Empty), HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID)
 
            HT5NNCotizacionMiSaludValeOroParametersInstance.CancelledPoliciesQuantity = .QueryExecuteScalarToInteger()  
        End With

                    currentAction = SessionTrace("38. HT5NNCotizacionMiSaludValeOroParametersInstance.OtherPoliciesSameRiskQuantity = 0...")
                    currentAction = SessionTrace("38.1. HT5NNCotizacionMiSaludValeOroParametersInstance.OtherPoliciesSameRiskQuantity = 0...")

                    HT5NNCotizacionMiSaludValeOroParametersInstance.OtherPoliciesSameRiskQuantity = 0

                    currentAction = SessionTrace("39. SELECT CERTIFICAT.SCERTYPE, CERTIFICAT.NBRANCH, CERTIFICAT.NPRODUCT FROM CERTIFICAT... WHERE CERTIFICAT.SCERTYPE = 2 AND CERTIFICAT.SSTATUSVA <> 3 AND CERTIFICAT.NBRANCH = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.LineOfBusiness AND )")
                    isFoundData = False
                                               With New DataManagerFactory("SELECT DISTINCT COUNT(CERTIFICAT.NPOLICY) NPOLICY FROM CERTIFICAT CERTIFICAT JOIN ROLES ROLES ON ROLES.SCERTYPE = CERTIFICAT.SCERTYPE  AND ROLES.NBRANCH = CERTIFICAT.NBRANCH  AND ROLES.NPRODUCT = CERTIFICAT.NPRODUCT  AND ROLES.NPOLICY = CERTIFICAT.NPOLICY  AND ROLES.NCERTIF = CERTIFICAT.NCERTIF  WHERE CERTIFICAT.SCERTYPE = '2' AND CERTIFICAT.SSTATUSVA <> '3' AND ROLES.NROLE = 2 AND ROLES.SCLIENT = @:ROLESSCLIENT3 AND CERTIFICAT.NBRANCH = @:CERTIFICATNBRANCH4 AND CERTIFICAT.NNULLCODE IS NULL", "CERTIFICAT", "Linked.LatCombined")
.AddParameter("ROLESSCLIENT3", DbType.AnsiStringFixedLength, 14, (HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID = String.Empty), HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID)
.AddParameter("CERTIFICATNBRANCH4", DbType.Int32, 5, False, HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.LineOfBusiness)
 
            HT5NNCotizacionMiSaludValeOroParametersInstance.OtherPoliciesSameRiskQuantity = .QueryExecuteScalarToInteger()  
        End With

                    currentAction = SessionTrace("40. If (HT5NNCotizacionMiSaludValeOroParametersInstance.CancelledPoliciesQuantity <> 0) Then")
                    If (HT5NNCotizacionMiSaludValeOroParametersInstance.CancelledPoliciesQuantity <> 0) Then

                        currentAction = SessionTrace("41. The message 'Existe(n) poliza(s) ...' will displayed as 'Popup'")
                        ParametersToDictionary(HT5NNCotizacionMiSaludValeOroParametersInstance, parametersDictionary)
                        messageAction = "Existe(n) poliza(s) anulada(s) para el cliente."
                        messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                        resultData.AddNotifyPopup(messageAction)
                                                                            End If
                                                                        End If
                currentAction = SessionTrace("42. Acepto.Visible = false")
                currentAction = SessionTrace("42.1. Acepto.Visible = false...")
                resultData.AddControlBehavior("Acepto", "hide")

                currentAction = SessionTrace("43. If HT5NNCotizacionMiSaludValeOroParametersInstance.AccumulatedAmount <> 0 AND HT5NNCotizacionMiSaludValeOroParametersInstance.AccumulatedAmount Not Is Null Or Not Empty  AND ... Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.AccumulatedAmount <> 0 AndAlso Not IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AccumulatedAmount) AndAlso HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("44. zone3Cumulo.Visible = true")
                    currentAction = SessionTrace("44.1. zone3Cumulo.Visible = true...")
                    resultData.AddControlBehavior("zone3Cumulo", "show")

                                                                            Else
                    currentAction = SessionTrace("45. zone3Cumulo.Visible = false")
                    currentAction = SessionTrace("45.1. zone3Cumulo.Visible = false...")
                    resultData.AddControlBehavior("zone3Cumulo", "hide")

                                                                                End If
                currentAction = SessionTrace("46. If HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = true Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = true Then

                    currentAction = SessionTrace("47. tab13.Visible = false, tabcontainer0.ActiveTab = InfBasica, zone17.Enabled = true...")
                    currentAction = SessionTrace("47.1. tab13.Visible = false...")
                    resultData.AddControlBehavior("tab13", "hide")
                    currentAction = SessionTrace("47.2. tabcontainer0.ActiveTab = InfBasica...")
                    resultData.AddControlBehavior("InfBasica", "active")
                    currentAction = SessionTrace("47.3. zone17.Enabled = true...")
                    resultData.AddControlBehavior("zone17", "enabled")
                    currentAction = SessionTrace("47.4. Cotizar.Visible = true...")
                    resultData.AddControlBehavior("Cotizar", "show")
                    currentAction = SessionTrace("47.5. label1.Visible = true...")
                    resultData.AddControlBehavior("label1", "show")
                    currentAction = SessionTrace("47.6. label6.Visible = false...")
                    resultData.AddControlBehavior("label6", "hide")
                    currentAction = SessionTrace("47.7. Acepto.Visible = false...")
                    resultData.AddControlBehavior("Acepto", "hide")
                    currentAction = SessionTrace("47.8. Cotizar.Enabled = true...")
                    resultData.AddControlBehavior("Cotizar", "enabled")
                    currentAction = SessionTrace("47.9. Acepto.Enabled = true...")
                    resultData.AddControlBehavior("Acepto", "enabled")
                    currentAction = SessionTrace("47.10. RiskInformationEffectiveDate.Enabled = true...")
                    resultData.AddControlBehavior("RiskInformationEffectiveDate", "enabled")
                    currentAction = SessionTrace("47.11. PaymentFrequency.Enabled = true...")
                    resultData.AddControlBehavior("PaymentFrequency", "enabled")

                    currentAction = SessionTrace("48. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contr...")
                    currentAction = SessionTrace("48.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contr...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client

                    currentAction = SessionTrace("49. zoneAS2.Enabled = false, zone10.Enabled = false")
                    currentAction = SessionTrace("49.1. zoneAS2.Enabled = false...")
                    resultData.AddControlBehavior("zoneAS2", "disabled")
                    currentAction = SessionTrace("49.2. zone10.Enabled = false...")
                    resultData.AddControlBehavior("zone10", "disabled")

                                                                                    Else
                    currentAction = SessionTrace("50. zoneAS2.Enabled = true, zone10.Enabled = true, PaymentFrequency.Enabled = false")
                    currentAction = SessionTrace("50.1. zoneAS2.Enabled = true...")
                    resultData.AddControlBehavior("zoneAS2", "enabled")
                    currentAction = SessionTrace("50.2. zone10.Enabled = true...")
                    resultData.AddControlBehavior("zone10", "enabled")
                    currentAction = SessionTrace("50.3. PaymentFrequency.Enabled = false...")
                    resultData.AddControlBehavior("PaymentFrequency", "disabled")

                                                                                        End If
                currentAction = SessionTrace("51. HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.CompanyId = 1...")
                currentAction = SessionTrace("51.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.CompanyId = 1...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.CompanyId = 1
                currentAction = SessionTrace("51.2. HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Country = 58...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Country = 58
                currentAction = SessionTrace("51.3. HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Security.Usercode = 9998...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Security) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Security = New InMotionGIT.Common.Contracts.Process.SecurityInformation
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Security.Usercode = 9998

                currentAction = SessionTrace("52. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Cont...")
                currentAction = SessionTrace("52.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Cont...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                currentAction = SessionTrace("52.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Cont...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.eMailAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Contract.General.eMailAddress
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Contract.General.eMailAddress
                currentAction = SessionTrace("52.3. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Cont...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address

                currentAction = SessionTrace("53. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                currentAction = SessionTrace("53.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID
                currentAction = SessionTrace("53.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1
                currentAction = SessionTrace("53.3. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID

                currentAction = SessionTrace("54. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                currentAction = SessionTrace("54.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID
                currentAction = SessionTrace("54.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1
                currentAction = SessionTrace("54.3. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID

                currentAction = SessionTrace("55. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1...")
                currentAction = SessionTrace("55.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1
                currentAction = SessionTrace("55.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.TypeOfAddress = 3...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.TypeOfAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.TypeOfAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfAddress
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.TypeOfAddress = 3
                currentAction = SessionTrace("55.3. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.UserCompany.Code = 1...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.UserCompany) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.UserCompany = New InMotionGIT.Common.DataType.LookUpValueExtend
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.UserCompany.Code = 1
                currentAction = SessionTrace("55.4. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 6...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 6

                currentAction = SessionTrace("56. If (HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID Is Null Or Empty  OR HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID = 0) AND ... Then")
                If (IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID) OrElse HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID = 0) AndAlso (HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false) Then

                    currentAction = SessionTrace("57. Call Function 'Retrieve addresses by owner' with parameters (Process date, User company of the address, Record owner type, Record owner id, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                    Dim _AddressDLICollection_e918ba8d1da842ec979c70bbc77dbab4 As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                    _AddressDLICollection_e918ba8d1da842ec979c70bbc77dbab4 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesDLI(processDate:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate, userCompany:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.UserCompany, recordOwnerType:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType, recordOwnerId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerID, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation, typeOfAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection = _AddressDLICollection_e918ba8d1da842ec979c70bbc77dbab4
                    isNullResult = (IsNothing(_AddressDLICollection_e918ba8d1da842ec979c70bbc77dbab4))

                    currentAction = SessionTrace("58. If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then")
                    If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then

                        currentAction = SessionTrace("59. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).A...")
                        currentAction = SessionTrace("59.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).A...")
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).AddressID
                        currentAction = SessionTrace("59.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).InternalAddressKey

                        currentAction = SessionTrace("60. Call Function 'Retrieve an email address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                        Dim _AddresseMailDLI_2e47cb7589ba45cf924351d2932999b1 As InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                        _AddresseMailDLI_2e47cb7589ba45cf924351d2932999b1 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveeMailDLI(processDate:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.AddressID, internalAddressKey:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.InternalAddressKey, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation)
                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = _AddresseMailDLI_2e47cb7589ba45cf924351d2932999b1
                        isNullResult = (IsNothing(_AddresseMailDLI_2e47cb7589ba45cf924351d2932999b1))

                                                                                                    End If
                    currentAction = SessionTrace("61. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1...")
                    currentAction = SessionTrace("61.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfAddress
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1
                    currentAction = SessionTrace("61.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1
                    currentAction = SessionTrace("61.3. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany.Code = 1...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany = New InMotionGIT.Common.DataType.LookUpValueExtend
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany.Code = 1
                    currentAction = SessionTrace("61.4. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1

                    currentAction = SessionTrace("62. Call Function 'Retrieve addresses by owner' with parameters (Process date, User company of the address, Record owner type, Record owner id, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                    Dim _AddressDLICollection_18d88f351ab44b9b828bbcf6de7857b0 As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                    _AddressDLICollection_18d88f351ab44b9b828bbcf6de7857b0 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesDLI(processDate:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate, userCompany:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany, recordOwnerType:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType, recordOwnerId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation, typeOfAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection = _AddressDLICollection_18d88f351ab44b9b828bbcf6de7857b0
                    isNullResult = (IsNothing(_AddressDLICollection_18d88f351ab44b9b828bbcf6de7857b0))

                    currentAction = SessionTrace("63. If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then")
                    If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then

                        currentAction = SessionTrace("64. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).A...")
                        currentAction = SessionTrace("64.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).A...")
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).AddressID
                        currentAction = SessionTrace("64.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).InternalAddressKey

                        currentAction = SessionTrace("65. Call Function 'Retrieve a physical address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                        Dim _AddressPhysicalAddressDLI_60de93325d994efdbb08841e14cdab8c As InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                        _AddressPhysicalAddressDLI_60de93325d994efdbb08841e14cdab8c = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrievePhysicalAddressDLI(processDate:=Date.Today, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, internalAddressKey:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation)
                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = _AddressPhysicalAddressDLI_60de93325d994efdbb08841e14cdab8c
                        isNullResult = (IsNothing(_AddressPhysicalAddressDLI_60de93325d994efdbb08841e14cdab8c))

                                                                                                        Else
                        currentAction = SessionTrace("66. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2...")
                        currentAction = SessionTrace("66.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2...")
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2

                        currentAction = SessionTrace("67. Call Function 'Retrieve addresses by owner' with parameters (Process date, User company of the address, Record owner type, Record owner id, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                        Dim _AddressDLICollection_0f0660adac13480eac79993af1de0b95 As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                        _AddressDLICollection_0f0660adac13480eac79993af1de0b95 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesDLI(processDate:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate, userCompany:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany, recordOwnerType:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType, recordOwnerId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation, typeOfAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection = _AddressDLICollection_0f0660adac13480eac79993af1de0b95
                        isNullResult = (IsNothing(_AddressDLICollection_0f0660adac13480eac79993af1de0b95))

                        currentAction = SessionTrace("68. If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then")
                        If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then

                            currentAction = SessionTrace("69. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).A...")
                            currentAction = SessionTrace("69.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).A...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).AddressID
                            currentAction = SessionTrace("69.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).InternalAddressKey

                            currentAction = SessionTrace("70. Call Function 'Retrieve a physical address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                            Dim _AddressPhysicalAddressDLI_a707725ed4fe447e80445ae79a6f0cef As InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                            _AddressPhysicalAddressDLI_a707725ed4fe447e80445ae79a6f0cef = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrievePhysicalAddressDLI(processDate:=Date.Today, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, internalAddressKey:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation)
                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = _AddressPhysicalAddressDLI_a707725ed4fe447e80445ae79a6f0cef
                            isNullResult = (IsNothing(_AddressPhysicalAddressDLI_a707725ed4fe447e80445ae79a6f0cef))

                                                                                                                    Else
                            currentAction = SessionTrace("71. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0...")
                            currentAction = SessionTrace("71.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0
                            currentAction = SessionTrace("71.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1

                            currentAction = SessionTrace("72. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = 0...")
                            currentAction = SessionTrace("72.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = 0...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = 0
                            currentAction = SessionTrace("72.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0
                            currentAction = SessionTrace("72.3. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1
                            currentAction = SessionTrace("72.4. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfRoute = 1...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfRoute) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfRoute = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfRoute
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfRoute = 1

                                                                                                                        End If
                                                                                                                    End If
                                                                                                                End If
                currentAction = SessionTrace("73. If (HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID Not Is Null Or Not Empty  AND HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID <> 0 AND ... Then")
                If (Not IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID) AndAlso HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID <> 0 AndAlso HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false) Then

                    currentAction = SessionTrace("74. Call Function 'Retrieve addresses by id' with parameters (Process date, User company of the address, Id value of the address, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                    Dim _AddressDLICollection_a799c4d3b5bb40f2871f71d67dad0641 As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                    _AddressDLICollection_a799c4d3b5bb40f2871f71d67dad0641 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesByIdDLI(processDate:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate, userCompany:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.UserCompany, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.AddressID, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation, typeOfAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection = _AddressDLICollection_a799c4d3b5bb40f2871f71d67dad0641
                    isNullResult = (IsNothing(_AddressDLICollection_a799c4d3b5bb40f2871f71d67dad0641))

                    currentAction = SessionTrace("75. If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then")
                    If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then

                        currentAction = SessionTrace("76. Cotizar.Enabled = false, Acepto.Enabled = false, RiskInformationEffectiveDate.Enabled = false...")
                        currentAction = SessionTrace("76.1. Cotizar.Enabled = false...")
                        resultData.AddControlBehavior("Cotizar", "disabled")
                        currentAction = SessionTrace("76.2. Acepto.Enabled = false...")
                        resultData.AddControlBehavior("Acepto", "disabled")
                        currentAction = SessionTrace("76.3. RiskInformationEffectiveDate.Enabled = false...")
                        resultData.AddControlBehavior("RiskInformationEffectiveDate", "disabled")
                        currentAction = SessionTrace("76.4. PaymentFrequency.Enabled = false...")
                        resultData.AddControlBehavior("PaymentFrequency", "disabled")

                        currentAction = SessionTrace("77. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                        currentAction = SessionTrace("77.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).InternalAddressKey

                        currentAction = SessionTrace("78. Call Function 'Retrieve an email address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                        Dim _AddresseMailDLI_b95379e92c3a4dcda1b12038f092fb66 As InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                        _AddresseMailDLI_b95379e92c3a4dcda1b12038f092fb66 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveeMailDLI(processDate:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.AddressID, internalAddressKey:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.InternalAddressKey, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation)
                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = _AddresseMailDLI_b95379e92c3a4dcda1b12038f092fb66
                        isNullResult = (IsNothing(_AddresseMailDLI_b95379e92c3a4dcda1b12038f092fb66))

                                                                                                                            End If
                    currentAction = SessionTrace("79. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1...")
                    currentAction = SessionTrace("79.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfAddress
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1
                    currentAction = SessionTrace("79.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1
                    currentAction = SessionTrace("79.3. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany.Code = 1...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany = New InMotionGIT.Common.DataType.LookUpValueExtend
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany.Code = 1
                    currentAction = SessionTrace("79.4. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1

                    currentAction = SessionTrace("80. Call Function 'Retrieve addresses by id' with parameters (Process date, User company of the address, Id value of the address, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                    Dim _AddressDLICollection_cd4455498aed4ba49e9a8602e25b28b4 As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                    _AddressDLICollection_cd4455498aed4ba49e9a8602e25b28b4 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesByIdDLI(processDate:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate, userCompany:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation, typeOfAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection = _AddressDLICollection_cd4455498aed4ba49e9a8602e25b28b4
                    isNullResult = (IsNothing(_AddressDLICollection_cd4455498aed4ba49e9a8602e25b28b4))

                    currentAction = SessionTrace("81. If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then")
                    If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then

                        currentAction = SessionTrace("82. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                        currentAction = SessionTrace("82.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).InternalAddressKey

                        currentAction = SessionTrace("83. Call Function 'Retrieve a physical address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                        Dim _AddressPhysicalAddressDLI_dd7fb8aa3d9f481ba09b226a1806e81b As InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                        _AddressPhysicalAddressDLI_dd7fb8aa3d9f481ba09b226a1806e81b = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrievePhysicalAddressDLI(processDate:=Date.Today, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, internalAddressKey:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation)
                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = _AddressPhysicalAddressDLI_dd7fb8aa3d9f481ba09b226a1806e81b
                        isNullResult = (IsNothing(_AddressPhysicalAddressDLI_dd7fb8aa3d9f481ba09b226a1806e81b))

                                                                                                                                Else
                        currentAction = SessionTrace("84. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2...")
                        currentAction = SessionTrace("84.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2...")
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2

                        currentAction = SessionTrace("85. Call Function 'Retrieve addresses by id' with parameters (Process date, User company of the address, Id value of the address, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                        Dim _AddressDLICollection_72cd4d48739e409a83042e08a8711910 As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                        _AddressDLICollection_72cd4d48739e409a83042e08a8711910 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesByIdDLI(processDate:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate, userCompany:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation, typeOfAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection = _AddressDLICollection_72cd4d48739e409a83042e08a8711910
                        isNullResult = (IsNothing(_AddressDLICollection_72cd4d48739e409a83042e08a8711910))

                        currentAction = SessionTrace("86. If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then")
                        If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then

                            currentAction = SessionTrace("87. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                            currentAction = SessionTrace("87.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).InternalAddressKey

                            currentAction = SessionTrace("88. Call Function 'Retrieve a physical address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                            Dim _AddressPhysicalAddressDLI_35bcc31c36044b3eacf1a9bfbf3d5e16 As InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                            _AddressPhysicalAddressDLI_35bcc31c36044b3eacf1a9bfbf3d5e16 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrievePhysicalAddressDLI(processDate:=Date.Today, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, internalAddressKey:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation)
                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = _AddressPhysicalAddressDLI_35bcc31c36044b3eacf1a9bfbf3d5e16
                            isNullResult = (IsNothing(_AddressPhysicalAddressDLI_35bcc31c36044b3eacf1a9bfbf3d5e16))

                                                                                                                                            Else
                            currentAction = SessionTrace("89. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = 0...")
                            currentAction = SessionTrace("89.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = 0...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = 0
                            currentAction = SessionTrace("89.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0
                            currentAction = SessionTrace("89.3. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1
                            currentAction = SessionTrace("89.4. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfRoute = 1...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfRoute) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfRoute = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfRoute
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfRoute = 1

                            currentAction = SessionTrace("90. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0...")
                            currentAction = SessionTrace("90.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0
                            currentAction = SessionTrace("90.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1

                                                                                                                                                End If
                                                                                                                                            End If
                                                                                                                                        End If

                instance = ClassToEntryData(instance, HT5NNCotizacionMiSaludValeOroParametersInstance)
                StoreFormInformationOnSession(HT5NNCotizacionMiSaludValeOroParametersInstance)
                
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "ClientIDClick", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function button8Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionMiSaludValeOroParametersInstance As HT5NNCotizacionMiSaludValeOroParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionMiSaludValeOroParametersInstance = RetrieveFormInformationFromSession(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button8Click")
                HT5NNCotizacionMiSaludValeOroParametersInstance = EntryDataToClass(HT5NNCotizacionMiSaludValeOroParametersInstance, instance)
                currentAction = SessionTrace("1. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false...")
                currentAction = SessionTrace("1.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false...")

                HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false

                currentAction = SessionTrace("2. If HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("3. Show 'Correo electrónico' control")
                    resultData.AddControlBehavior("eMail", "show")

                    currentAction = SessionTrace("4. button8.Visible = false")
                    currentAction = SessionTrace("4.1. button8.Visible = false...")
                    resultData.AddControlBehavior("button8", "hide")

                    currentAction = SessionTrace("5. If HT5NNCotizacionMiSaludValeOroParametersInstance.eMail Is Null Or Empty '' Then")
                    If String.IsNullOrEmpty(HT5NNCotizacionMiSaludValeOroParametersInstance.eMail) Then

                        currentAction = SessionTrace("6. HT5NNCotizacionMiSaludValeOroParametersInstance.eMail = HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.eMailAddr...")
                        currentAction = SessionTrace("6.1. HT5NNCotizacionMiSaludValeOroParametersInstance.eMail = HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.eMailAddr...")

                        HT5NNCotizacionMiSaludValeOroParametersInstance.eMail = HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.eMailAddress.eMail

                            End If
                    currentAction = SessionTrace("7. zone2.Enabled = false")
                    currentAction = SessionTrace("7.1. zone2.Enabled = false...")
                    resultData.AddControlBehavior("zone2", "disabled")

                    currentAction = SessionTrace("8. OnLinePrintIndicator.Visible = false")
                    currentAction = SessionTrace("8.1. OnLinePrintIndicator.Visible = false...")
                    resultData.AddControlBehavior("OnLinePrintIndicator", "hide")

                    currentAction = SessionTrace("9. Call 'Crea/Actualiza el cliente y su dirección de correo en el servicio Address' workflow in Synchronous mode with tracking")
                    WorkflowInArguments = New Dictionary(Of String, Object)

                    With WorkflowInArguments
                    .Add("ClientExistInDB", HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB)
                    .Add("context", formContext)
                    .Add("eMailAddress", HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI)
                    .Add("ConsumerInformation", HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation)
                    .Add("Cliente", HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client)
                    .Add("FechaProceso", Date.Today)
                    End With

                    WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("CreaActualizaClienteDireccionCorreo", "c1106af3-4449-4701-ac19-c3c114538405", 1, WorkflowInArguments, True, True, "Me.AppRelativeVirtualPath", HT5NNCotizacionMiSaludValeOroParametersInstance.InternalId)

                    currentAction += "'Mapping Outputs'"
                    HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = WorkflowOutArguments("ClientExistInDB")
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = WorkflowOutArguments("Cliente")

                    currentAction = SessionTrace("10. If HT5NNCotizacionMiSaludValeOroParametersInstance.CantAsegAdicionales <> 0 Then")
                    If HT5NNCotizacionMiSaludValeOroParametersInstance.CantAsegAdicionales <> 0 Then

                        currentAction = SessionTrace("11. tabAsegAd.Visible = true, tabcontainer0.ActiveTab = tabAsegAd")
                        currentAction = SessionTrace("11.1. tabAsegAd.Visible = true...")
                        resultData.AddControlBehavior("tabAsegAd", "show")
                        currentAction = SessionTrace("11.2. tabcontainer0.ActiveTab = tabAsegAd...")
                        resultData.AddControlBehavior("tabAsegAd", "active")

                        currentAction = SessionTrace("12. Call 'Ubica el código de un asegurado para completar su información' workflow in Synchronous mode with tracking")
                        WorkflowInArguments = New Dictionary(Of String, Object)

                        With WorkflowInArguments
                        .Add("context", formContext)
                        .Add("RolesCompletar", HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Roles)
                        End With

                        WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("UbicaAseguradoEnLista", "db038cad-6aa3-4c1d-927f-63f565e4eb6d", 0, WorkflowInArguments, True, True, "Me.AppRelativeVirtualPath", HT5NNCotizacionMiSaludValeOroParametersInstance.InternalId)

                        currentAction += "'Mapping Outputs'"
                        HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoCompletar = WorkflowOutArguments("InsuredPersonID")

                                Else
                        currentAction = SessionTrace("13. tab17.Visible = true, tabcontainer0.ActiveTab = tab17")
                        currentAction = SessionTrace("13.1. tab17.Visible = true...")
                        resultData.AddControlBehavior("tab17", "show")
                        currentAction = SessionTrace("13.2. tabcontainer0.ActiveTab = tab17...")
                        resultData.AddControlBehavior("tab17", "active")

                        currentAction = SessionTrace("14. 'HT5NNCotizacionMiSaludValeOroParametersInstance.HealthQuestionnaires' = New 'InMotionGIT.Questionnaire'...'")
                        HT5NNCotizacionMiSaludValeOroParametersInstance.HealthQuestionnaires = New InMotionGIT.Questionnaires.HealthQuestionnaires

                        currentAction = SessionTrace("15. Call 'Llena la colección de asegurados de una solicitud (para efectos del cuestionario de salud)' workflow in Synchronous mode with tracking")
                        WorkflowInArguments = New Dictionary(Of String, Object)

                        With WorkflowInArguments
                        .Add("context", formContext)
                        .Add("RiskInformationRoles", HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Roles)
                        End With

                        WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("LlenaColeccionAseguradosSalud", "54a909f9-5e06-4c1b-a9e5-2256146839c8", 0, WorkflowInArguments, True, True, "Me.AppRelativeVirtualPath", HT5NNCotizacionMiSaludValeOroParametersInstance.InternalId)

                        currentAction += "'Mapping Outputs'"
                        HT5NNCotizacionMiSaludValeOroParametersInstance.HealthQuestionnaires.QuestionnaireByInsuredPersons = WorkflowOutArguments("QuestionnaireByInsuredPersonCollection")

                                    End If
                                End If
                currentAction = SessionTrace("16. Call Shared Sub 'Clear Form Errors' without parameters")
                
        HT5NNCotizacionMiSaludValeOroParametersInstance.Errors.Clear()
	formContext.Errors.Clear()
    


                instance = ClassToEntryData(instance, HT5NNCotizacionMiSaludValeOroParametersInstance)
                StoreFormInformationOnSession(HT5NNCotizacionMiSaludValeOroParametersInstance)
                
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "button8Click", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function ClientIDcompChange(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionMiSaludValeOroParametersInstance As HT5NNCotizacionMiSaludValeOroParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionMiSaludValeOroParametersInstance = RetrieveFormInformationFromSession(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("ClientIDcompClick")
                HT5NNCotizacionMiSaludValeOroParametersInstance = EntryDataToClass(HT5NNCotizacionMiSaludValeOroParametersInstance, instance)
                currentAction = SessionTrace("1. The message 'asasasas { Value /Ri...' will displayed as 'Popup'")
                ParametersToDictionary(HT5NNCotizacionMiSaludValeOroParametersInstance, parametersDictionary)
                messageAction = "asasasas { Value /RiskInformation/Roles/UserCode }"
                messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                resultData.AddNotifyPopup(messageAction)

                instance = ClassToEntryData(instance, HT5NNCotizacionMiSaludValeOroParametersInstance)
                StoreFormInformationOnSession(HT5NNCotizacionMiSaludValeOroParametersInstance)
                
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "ClientIDcompClick", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function btnCompletarClick(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionMiSaludValeOroParametersInstance As HT5NNCotizacionMiSaludValeOroParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionMiSaludValeOroParametersInstance = RetrieveFormInformationFromSession(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("btnCompletarClick")
                HT5NNCotizacionMiSaludValeOroParametersInstance = EntryDataToClass(HT5NNCotizacionMiSaludValeOroParametersInstance, instance)
                currentAction = SessionTrace("1. If HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoCompletar Is Null Or Empty  OR HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoCompletar = 0 Then")
                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoCompletar) OrElse HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoCompletar = 0 Then

                    currentAction = SessionTrace("2. The message 'Seleccione el client...' will displayed as 'Popup'")
                    ParametersToDictionary(HT5NNCotizacionMiSaludValeOroParametersInstance, parametersDictionary)
                    messageAction = "Seleccione el cliente a completar"
                    messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                    resultData.AddNotifyPopup(messageAction)
                    Else
                    currentAction = SessionTrace("3. zone30.Visible = true, zCompletarAA.Visible = false")
                    currentAction = SessionTrace("3.1. zone30.Visible = true...")
                    resultData.AddControlBehavior("zone30", "show")
                    currentAction = SessionTrace("3.2. zCompletarAA.Visible = false...")
                    resultData.AddControlBehavior("zCompletarAA", "hide")

                    currentAction = SessionTrace("4. For Each roleCompletarItem As 'InMotionGIT.Policy.Entity...' In 'HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCollection...'")
                    For Each roleCompletarItem As InMotionGIT.Policy.Entity.Contracts.Role In HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCollection

                        currentAction = SessionTrace("5. If roleCompletarItem.UserCode = HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoCompletar Then")
                        If roleCompletarItem.UserCode = HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoCompletar Then

                            currentAction = SessionTrace("6. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar = roleCompletarItem...")
                            currentAction = SessionTrace("6.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar = roleCompletarItem...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar = roleCompletarItem

                                        End If
                                    Next
                                End If

                instance = ClassToEntryData(instance, HT5NNCotizacionMiSaludValeOroParametersInstance)
                StoreFormInformationOnSession(HT5NNCotizacionMiSaludValeOroParametersInstance)
                
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "btnCompletarClick", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function ClientIDCompletarChange(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionMiSaludValeOroParametersInstance As HT5NNCotizacionMiSaludValeOroParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionMiSaludValeOroParametersInstance = RetrieveFormInformationFromSession(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("ClientIDCompletarClick")
                HT5NNCotizacionMiSaludValeOroParametersInstance = EntryDataToClass(HT5NNCotizacionMiSaludValeOroParametersInstance, instance)
                currentAction = SessionTrace("1. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false...")
                currentAction = SessionTrace("1.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false...")

                HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false

                currentAction = SessionTrace("2. HT5NNCotizacionMiSaludValeOroParametersInstance.ClienteIndicado = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.Clie...")
                currentAction = SessionTrace("2.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ClienteIndicado = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.Clie...")

                HT5NNCotizacionMiSaludValeOroParametersInstance.ClienteIndicado = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.ClientID

                currentAction = SessionTrace("3. Call 'LLena ceros a la izquierda' workflow in Synchronous mode with tracking")
                WorkflowInArguments = New Dictionary(Of String, Object)

                With WorkflowInArguments
                .Add("context", formContext)
                .Add("CodigoCliente", HT5NNCotizacionMiSaludValeOroParametersInstance.ClienteIndicado)
                .Add("LargoCodigo", 14)
                End With

                WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("LlenaCerosIzquierdaCodigo", "97e5264d-cb53-46a3-a786-fbcc3bb10ff2", 2, WorkflowInArguments, True, True, "Me.AppRelativeVirtualPath", HT5NNCotizacionMiSaludValeOroParametersInstance.InternalId)

                currentAction += "'Mapping Outputs'"
                HT5NNCotizacionMiSaludValeOroParametersInstance.ClienteIndicado = WorkflowOutArguments("CodigoCliente")

                currentAction = SessionTrace("4. Call Shared Function 'Retrieve Client' with parameters (Client Identification)")
                Dim _ClientIncluded_369fb27bee3b46d78c50a50be7a67413 As InMotionGIT.Client.Entity.Contracts.Client
                
      _ClientIncluded_369fb27bee3b46d78c50a50be7a67413 = (New InMotionGIT.Client.Services.ClientManager).Retrieve(clientId:=HT5NNCotizacionMiSaludValeOroParametersInstance.ClienteIndicado, atDate:=Date.Today, childFilter:= "All")
      isNullResult = (IsNothing(_ClientIncluded_369fb27bee3b46d78c50a50be7a67413))
      isFoundData  = Not isNullResult
    
                HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded = _ClientIncluded_369fb27bee3b46d78c50a50be7a67413

                currentAction = SessionTrace("5. If Form.IsNullResult = true Then")
                If isNullResult = true Then

                    currentAction = SessionTrace("6. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.IsNew = true...")
                    currentAction = SessionTrace("6.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.IsNew = true...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.IsNew = true
                    currentAction = SessionTrace("6.2. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.ClientID = HT5NNCotizacionMiSaludValeOroParametersInstance.ClienteIndicado...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.ClientID = HT5NNCotizacionMiSaludValeOroParametersInstance.ClienteIndicado

                    currentAction = SessionTrace("7. FirstNameCompletar.Enabled = true, LastNameCompletar.Enabled = true, LastName2Completar.Enabled = true")
                    currentAction = SessionTrace("7.1. FirstNameCompletar.Enabled = true...")
                    resultData.AddControlBehavior("FirstNameCompletar", "enabled")
                    currentAction = SessionTrace("7.2. LastNameCompletar.Enabled = true...")
                    resultData.AddControlBehavior("LastNameCompletar", "enabled")
                    currentAction = SessionTrace("7.3. LastName2Completar.Enabled = true...")
                    resultData.AddControlBehavior("LastName2Completar", "enabled")

                    Else
                    currentAction = SessionTrace("8. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.IsNew = false...")
                    currentAction = SessionTrace("8.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.IsNew = false...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.IsNew = false
                    currentAction = SessionTrace("8.2. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.TypeOfPerson = 1...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.TypeOfPerson = 1

                    currentAction = SessionTrace("9. FirstNameCompletar.Enabled = false, LastNameCompletar.Enabled = false, LastName2Completar.Enabled = false")
                    currentAction = SessionTrace("9.1. FirstNameCompletar.Enabled = false...")
                    resultData.AddControlBehavior("FirstNameCompletar", "disabled")
                    currentAction = SessionTrace("9.2. LastNameCompletar.Enabled = false...")
                    resultData.AddControlBehavior("LastNameCompletar", "disabled")
                    currentAction = SessionTrace("9.3. LastName2Completar.Enabled = false...")
                    resultData.AddControlBehavior("LastName2Completar", "disabled")

                        End If
                currentAction = SessionTrace("10. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.ClientID = HT5NNCotizacionMiSaludValeOroParametersInstance.ClienteIndicado...")
                currentAction = SessionTrace("10.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.ClientID = HT5NNCotizacionMiSaludValeOroParametersInstance.ClienteIndicado...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.ClientID = HT5NNCotizacionMiSaludValeOroParametersInstance.ClienteIndicado

                currentAction = SessionTrace("11. If HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.IsNew = false Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.IsNew = false Then

                    currentAction = SessionTrace("12. If HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.BirthDate <> HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.BirthDate AND HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.BirthDate Not Is Null Or Not Empty '' Then")
                    If HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.BirthDate <> HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.BirthDate AndAlso Not IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.BirthDate) AndAlso HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.BirthDate <> Date.MinValue Then

                        currentAction = SessionTrace("13. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = true...")
                        currentAction = SessionTrace("13.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = true...")

                        HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = true
                        currentAction = SessionTrace("13.2. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.ClientID = Nothing...")
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                        HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.ClientID = Nothing

                        currentAction = SessionTrace("14. The message 'El cliente está regi...' will displayed as 'Popup'")
                        ParametersToDictionary(HT5NNCotizacionMiSaludValeOroParametersInstance, parametersDictionary)
                        messageAction = "El cliente está registrado en el sistema y la fecha de nacimiento NO coincide"
                        messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                        resultData.AddNotifyPopup(messageAction)
                                    End If
                                End If
                currentAction = SessionTrace("15. If HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("16. If HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.IsNew = false Then")
                    If HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.IsNew = false Then

                        currentAction = SessionTrace("17. If HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.Gender <> HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.Gender AND HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.Gender Not Is Null Or Not Empty '' Then")
                        If HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.Gender <> HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.Gender AndAlso Not String.IsNullOrEmpty(HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.Gender) Then

                            currentAction = SessionTrace("18. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = true...")
                            currentAction = SessionTrace("18.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = true...")

                            HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = true
                            currentAction = SessionTrace("18.2. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.ClientID = Nothing...")
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                            HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.ClientID = Nothing

                            currentAction = SessionTrace("19. The message 'El cliente está regi...' will displayed as 'Popup'")
                            ParametersToDictionary(HT5NNCotizacionMiSaludValeOroParametersInstance, parametersDictionary)
                            messageAction = "El cliente está registrado en el sistema y el género NO coincide"
                            messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                            resultData.AddNotifyPopup(messageAction)
                                                    End If
                                                End If
                                            End If
                currentAction = SessionTrace("20. If HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("21. If HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.IsNew = false Then")
                    If HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.IsNew = false Then

                        currentAction = SessionTrace("22. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.FirstName = HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.FirstName...")
                        currentAction = SessionTrace("22.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.FirstName = HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.FirstName...")
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                        HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.FirstName = HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.FirstName
                        currentAction = SessionTrace("22.2. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.LastName = HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.LastName...")
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                        HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.LastName = HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.LastName
                        currentAction = SessionTrace("22.3. HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.LastName2 = HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.LastName2...")
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                        HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.LastName2 = HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded.LastName2

                                                        End If
                                                    End If

                instance = ClassToEntryData(instance, HT5NNCotizacionMiSaludValeOroParametersInstance)
                StoreFormInformationOnSession(HT5NNCotizacionMiSaludValeOroParametersInstance)
                
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "ClientIDCompletarClick", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function button38Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionMiSaludValeOroParametersInstance As HT5NNCotizacionMiSaludValeOroParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionMiSaludValeOroParametersInstance = RetrieveFormInformationFromSession(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button38Click")
                HT5NNCotizacionMiSaludValeOroParametersInstance = EntryDataToClass(HT5NNCotizacionMiSaludValeOroParametersInstance, instance)
                currentAction = SessionTrace("1. For Each roleCompRIItem As 'InMotionGIT.Policy.Entity...' In 'HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation...'")
                For Each roleCompRIItem As InMotionGIT.Policy.Entity.Contracts.Role In HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Roles

                    currentAction = SessionTrace("2. If roleCompRIItem.UserCode = HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoCompletar Then")
                    If roleCompRIItem.UserCode = HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoCompletar Then

                        currentAction = SessionTrace("3. roleCompRIItem.Client.ClientID = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.Clie...")
                        currentAction = SessionTrace("3.1. roleCompRIItem.Client.ClientID = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.Clie...")

                        roleCompRIItem.Client.ClientID = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.ClientID
                        currentAction = SessionTrace("3.2. roleCompRIItem.Client.FirstName = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.Firs...")

                        roleCompRIItem.Client.FirstName = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.FirstName
                        currentAction = SessionTrace("3.3. roleCompRIItem.Client.LastName = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.Last...")

                        roleCompRIItem.Client.LastName = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.LastName
                        currentAction = SessionTrace("3.4. roleCompRIItem.Client.LastName2 = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.Last...")

                        roleCompRIItem.Client.LastName2 = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.LastName2
                        currentAction = SessionTrace("3.5. roleCompRIItem.ClientID = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.Clie...")

                        roleCompRIItem.ClientID = HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCompletar.Client.ClientID

                            End If
                        Next
                currentAction = SessionTrace("4. zone30.Visible = false, zCompletarAA.Visible = true")
                currentAction = SessionTrace("4.1. zone30.Visible = false...")
                resultData.AddControlBehavior("zone30", "hide")
                currentAction = SessionTrace("4.2. zCompletarAA.Visible = true...")
                resultData.AddControlBehavior("zCompletarAA", "show")

                currentAction = SessionTrace("5. Call 'Ubica el código de un asegurado para completar su información' workflow in Synchronous mode with tracking")
                WorkflowInArguments = New Dictionary(Of String, Object)

                With WorkflowInArguments
                .Add("context", formContext)
                .Add("RolesCompletar", HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Roles)
                End With

                WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("UbicaAseguradoEnLista", "db038cad-6aa3-4c1d-927f-63f565e4eb6d", 0, WorkflowInArguments, True, True, "Me.AppRelativeVirtualPath", HT5NNCotizacionMiSaludValeOroParametersInstance.InternalId)

                currentAction += "'Mapping Outputs'"
                HT5NNCotizacionMiSaludValeOroParametersInstance.AseguradoCompletar = WorkflowOutArguments("InsuredPersonID")


                instance = ClassToEntryData(instance, HT5NNCotizacionMiSaludValeOroParametersInstance)
                StoreFormInformationOnSession(HT5NNCotizacionMiSaludValeOroParametersInstance)
                
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "button38Click", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function btdAAGySClick(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionMiSaludValeOroParametersInstance As HT5NNCotizacionMiSaludValeOroParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionMiSaludValeOroParametersInstance = RetrieveFormInformationFromSession(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("btdAAGySClick")
                HT5NNCotizacionMiSaludValeOroParametersInstance = EntryDataToClass(HT5NNCotizacionMiSaludValeOroParametersInstance, instance)
                currentAction = SessionTrace("1. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false...")
                currentAction = SessionTrace("1.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false...")

                HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false

                currentAction = SessionTrace("2. If HT5NNCotizacionMiSaludValeOroParametersInstance.CantAsegAdicionales <> 0 Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.CantAsegAdicionales <> 0 Then

                    currentAction = SessionTrace("3. Call 'Valida asegurados adicionales' workflow in Synchronous mode with tracking")
                    WorkflowInArguments = New Dictionary(Of String, Object)

                    With WorkflowInArguments
                    .Add("context", formContext)
                    .Add("RolesPolicy", HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Roles)
                    .Add("ErrorsFound", HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound)
                    .Add("ValidaAsegurado", true)
                    End With

                    WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("ValidaAseguradosAdicionales", "f7ec8523-1d50-4529-be56-8b698db10c87", 11, WorkflowInArguments, True, True, "Me.AppRelativeVirtualPath", HT5NNCotizacionMiSaludValeOroParametersInstance.InternalId)

                    currentAction += "'Mapping Outputs'"
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Roles = WorkflowOutArguments("RolesPolicy")
                    HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = WorkflowOutArguments("ErrorsFound")

                    End If
                currentAction = SessionTrace("4. If HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("5. HT5NNCotizacionMiSaludValeOroParametersInstance.ListaAsegurados = ''...")
                    currentAction = SessionTrace("5.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ListaAsegurados = ''...")

                    HT5NNCotizacionMiSaludValeOroParametersInstance.ListaAsegurados = ""

                    currentAction = SessionTrace("6. For Each roleMailItem As 'InMotionGIT.Policy.Entity...' In 'HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation...'")
                    For Each roleMailItem As InMotionGIT.Policy.Entity.Contracts.Role In HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Roles

                        currentAction = SessionTrace("7. roleMailItem.Client.ClientID = roleMailItem.ClientID...")
                        currentAction = SessionTrace("7.1. roleMailItem.Client.ClientID = roleMailItem.ClientID...")

                        roleMailItem.Client.ClientID = roleMailItem.ClientID

                        currentAction = SessionTrace("8. If roleMailItem.ClientRole <> 1 AND roleMailItem.ClientRole <> 13 Then")
                        If roleMailItem.ClientRole <> 1 AndAlso roleMailItem.ClientRole <> 13 Then

                            currentAction = SessionTrace("9. HT5NNCotizacionMiSaludValeOroParametersInstance.Codigo = roleMailItem.ClientRole...")
                            currentAction = SessionTrace("9.1. HT5NNCotizacionMiSaludValeOroParametersInstance.Codigo = roleMailItem.ClientRole...")

                            HT5NNCotizacionMiSaludValeOroParametersInstance.Codigo = roleMailItem.ClientRole

                            currentAction = SessionTrace("10. SELECT TABLE12.SDESCRIPT, TABLE12.NROLE, TABLE12.SSTATREGT FROM TABLE12... WHERE TABLE12.SSTATREGT = 1 AND TABLE12.NROLE = HT5NNCotizacionMiSaludValeOroParametersInstance.Codigo )")
                            isFoundData = False
                                                               With New DataManagerFactory("SELECT TABLE12.SDESCRIPT FROM TABLE12 TABLE12  WHERE (TABLE12.SSTATREGT = '1' AND TABLE12.NROLE = @:TABLE12NROLE1)", "TABLE12", "Linked.LatCombined")
.AddParameter("TABLE12NROLE1", DbType.Int32, 5, False, HT5NNCotizacionMiSaludValeOroParametersInstance.Codigo)
 
            HT5NNCotizacionMiSaludValeOroParametersInstance.Descripcion = .QueryExecuteScalarToString()  
        End With

                            currentAction = SessionTrace("11. HT5NNCotizacionMiSaludValeOroParametersInstance.ListaAsegurados = HT5NNCotizacionMiSaludValeOroParametersInstance.ListaAsegurados &  '<p>' ...")
                            currentAction = SessionTrace("11.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ListaAsegurados = HT5NNCotizacionMiSaludValeOroParametersInstance.ListaAsegurados &  '<p>' ...")

                            HT5NNCotizacionMiSaludValeOroParametersInstance.ListaAsegurados = HT5NNCotizacionMiSaludValeOroParametersInstance.ListaAsegurados &  "<p>" & HT5NNCotizacionMiSaludValeOroParametersInstance.Descripcion & "-" & roleMailItem.Client.FirstName & " "  & roleMailItem.Client.LastName & " "  & roleMailItem.Client.LastName2 & ".  F.Nacimiento:" &  roleMailItem.Client.BirthDate.ToString("dd/MM/yyyy") & "</p>"

                                        End If
                                    Next
                                End If
                currentAction = SessionTrace("12. If HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = true Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = true Then

                    currentAction = SessionTrace("13. The message 'Por favor complete l...' will displayed as 'Popup'")
                    ParametersToDictionary(HT5NNCotizacionMiSaludValeOroParametersInstance, parametersDictionary)
                    messageAction = "Por favor complete los datos de todos los asegurados adicionales"
                    messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                    resultData.AddNotifyPopup(messageAction)
                                    Else
                    currentAction = SessionTrace("14. Call 'Crea/Actualiza asegurados adicionales' workflow in Synchronous mode with tracking")
                    WorkflowInArguments = New Dictionary(Of String, Object)

                    With WorkflowInArguments
                    .Add("context", formContext)
                    .Add("RolesPolicy", HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Roles)
                    .Add("FechaProceso", Date.Today)
                    .Add("ProcesaAsegurado", false)
                    .Add("UsercodeBO", HT5NNCotizacionMiSaludValeOroParametersInstance.UsercodeBO)
                    End With

                    WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("ActualizaAseguradosAdicionales", "5bcb938d-643d-490a-8a55-e12b3121eb23", 11, WorkflowInArguments, True, True, "Me.AppRelativeVirtualPath", HT5NNCotizacionMiSaludValeOroParametersInstance.InternalId)

                    currentAction += "'Mapping Outputs'"
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Roles = WorkflowOutArguments("RolesPolicy")

                    currentAction = SessionTrace("15. tab17.Visible = true, tabcontainer0.ActiveTab = tab17, zone23.Visible = false...")
                    currentAction = SessionTrace("15.1. tab17.Visible = true...")
                    resultData.AddControlBehavior("tab17", "show")
                    currentAction = SessionTrace("15.2. tabcontainer0.ActiveTab = tab17...")
                    resultData.AddControlBehavior("tab17", "active")
                    currentAction = SessionTrace("15.3. zone23.Visible = false...")
                    resultData.AddControlBehavior("zone23", "hide")
                    currentAction = SessionTrace("15.4. zone22.Enabled = false...")
                    resultData.AddControlBehavior("zone22", "disabled")
                    currentAction = SessionTrace("15.5. zone25.Visible = false...")
                    resultData.AddControlBehavior("zone25", "hide")

                    currentAction = SessionTrace("16. Call Shared Sub 'Clear Form Errors' without parameters")
                    
        HT5NNCotizacionMiSaludValeOroParametersInstance.Errors.Clear()
	formContext.Errors.Clear()
    

                                        End If
                currentAction = SessionTrace("17. 'HT5NNCotizacionMiSaludValeOroParametersInstance.HealthQuestionnaires' = New 'InMotionGIT.Questionnaire'...'")
                HT5NNCotizacionMiSaludValeOroParametersInstance.HealthQuestionnaires = New InMotionGIT.Questionnaires.HealthQuestionnaires

                currentAction = SessionTrace("18. Call 'Llena la colección de asegurados de una solicitud (para efectos del cuestionario de salud)' workflow in Synchronous mode with tracking")
                WorkflowInArguments = New Dictionary(Of String, Object)

                With WorkflowInArguments
                .Add("context", formContext)
                .Add("RiskInformationRoles", HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Roles)
                End With

                WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("LlenaColeccionAseguradosSalud", "54a909f9-5e06-4c1b-a9e5-2256146839c8", 2, WorkflowInArguments, True, True, "Me.AppRelativeVirtualPath", HT5NNCotizacionMiSaludValeOroParametersInstance.InternalId)

                currentAction += "'Mapping Outputs'"
                HT5NNCotizacionMiSaludValeOroParametersInstance.HealthQuestionnaires.QuestionnaireByInsuredPersons = WorkflowOutArguments("QuestionnaireByInsuredPersonCollection")


                instance = ClassToEntryData(instance, HT5NNCotizacionMiSaludValeOroParametersInstance)
                StoreFormInformationOnSession(HT5NNCotizacionMiSaludValeOroParametersInstance)
                
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "btdAAGySClick", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function btnSaludGSClick(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionMiSaludValeOroParametersInstance As HT5NNCotizacionMiSaludValeOroParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionMiSaludValeOroParametersInstance = RetrieveFormInformationFromSession(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("btnSaludGSClick")
                HT5NNCotizacionMiSaludValeOroParametersInstance = EntryDataToClass(HT5NNCotizacionMiSaludValeOroParametersInstance, instance)
                currentAction = SessionTrace("1. zone26.Visible = false, zonegeneral.Visible = true, zone4.Enabled = false...")
                currentAction = SessionTrace("1.1. zone26.Visible = false...")
                resultData.AddControlBehavior("zone26", "hide")
                currentAction = SessionTrace("1.2. zonegeneral.Visible = true...")
                resultData.AddControlBehavior("zonegeneral", "show")
                currentAction = SessionTrace("1.3. zone4.Enabled = false...")
                resultData.AddControlBehavior("zone4", "disabled")
                currentAction = SessionTrace("1.4. zone24.Enabled = false...")
                resultData.AddControlBehavior("zone24", "disabled")


                instance = ClassToEntryData(instance, HT5NNCotizacionMiSaludValeOroParametersInstance)
                StoreFormInformationOnSession(HT5NNCotizacionMiSaludValeOroParametersInstance)
                
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "btnSaludGSClick", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function button14Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionMiSaludValeOroParametersInstance As HT5NNCotizacionMiSaludValeOroParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionMiSaludValeOroParametersInstance = RetrieveFormInformationFromSession(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button14Click")
                HT5NNCotizacionMiSaludValeOroParametersInstance = EntryDataToClass(HT5NNCotizacionMiSaludValeOroParametersInstance, instance)
                currentAction = SessionTrace("1. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false...")
                currentAction = SessionTrace("1.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false...")

                HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false

                currentAction = SessionTrace("2. If HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("3. HT5NNCotizacionMiSaludValeOroParametersInstance.PreviousPayment = false...")
                    currentAction = SessionTrace("3.1. HT5NNCotizacionMiSaludValeOroParametersInstance.PreviousPayment = false...")

                    HT5NNCotizacionMiSaludValeOroParametersInstance.PreviousPayment = false

                    End If
                currentAction = SessionTrace("4. If HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("5. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.InsuredAmount = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.HealthLin...")
                    currentAction = SessionTrace("5.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.InsuredAmount = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.HealthLin...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.InsuredAmount = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.HealthLineOfBusiness.InsuredAmount

                        End If
                currentAction = SessionTrace("6. If HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("7. HT5NNCotizacionMiSaludValeOroParametersInstance.OnLinePrintIndicator = false...")
                    currentAction = SessionTrace("7.1. HT5NNCotizacionMiSaludValeOroParametersInstance.OnLinePrintIndicator = false...")

                    HT5NNCotizacionMiSaludValeOroParametersInstance.OnLinePrintIndicator = false

                    currentAction = SessionTrace("9. Call 'Main Process Of Health  Request' workflow in Asynchronous mode with tracking")
                    WorkflowInArguments = New Dictionary(Of String, Object)

                    With WorkflowInArguments
                    .Add("RiskInformation", HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation)
                    .Add("eMail", HT5NNCotizacionMiSaludValeOroParametersInstance.eMail)
                    .Add("Currency", HT5NNCotizacionMiSaludValeOroParametersInstance.Currency)
                    .Add("ClientExistInDB", HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB)
                    .Add("ProducerClientID", HT5NNCotizacionMiSaludValeOroParametersInstance.ProducerClientID)
                    .Add("BeneficiaryType", HT5NNCotizacionMiSaludValeOroParametersInstance.BeneficiaryType)
                    .Add("context", formContext)
                    .Add("SendMailIndicator", HT5NNCotizacionMiSaludValeOroParametersInstance.SendMailIndicator)
                    .Add("PlanType", HT5NNCotizacionMiSaludValeOroParametersInstance.PlanType)
                    .Add("MailToProducerIndicator", HT5NNCotizacionMiSaludValeOroParametersInstance.MailToProducerIndicator)
                    .Add("OnLinePrintIndicator", HT5NNCotizacionMiSaludValeOroParametersInstance.OnLinePrintIndicator)
                    .Add("uwCaseID", HT5NNCotizacionMiSaludValeOroParametersInstance.uwcaseid)
                    .Add("PreviousPayment", HT5NNCotizacionMiSaludValeOroParametersInstance.PreviousPayment)
                    .Add("ConsumerInformation", HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation)
                    .Add("PhysicalAddress", HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI)
                    .Add("ServiceResultData", HT5NNCotizacionMiSaludValeOroParametersInstance.ServiceResultData)
                    .Add("eMailAddress", HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI)
                    .Add("VerificarCuestionariosIndicador", HT5NNCotizacionMiSaludValeOroParametersInstance.VerificarCuestionariosIndicador)
                    .Add("PlanillaModificacion", HT5NNCotizacionMiSaludValeOroParametersInstance.PlanillaModificacion)
                    .Add("PlanillaVisualizacion", HT5NNCotizacionMiSaludValeOroParametersInstance.PlanillaVisualizacion)
                    .Add("ListaAsegurados", HT5NNCotizacionMiSaludValeOroParametersInstance.ListaAsegurados)
                    .Add("BadHealth", HT5NNCotizacionMiSaludValeOroParametersInstance.BadHealth)
                    .Add("UsercodeBO", HT5NNCotizacionMiSaludValeOroParametersInstance.UsercodeBO)
                    .Add("UsercodeFASI", HT5NNCotizacionMiSaludValeOroParametersInstance.UsercodeFASI)
                    End With

                    WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("ProcessMainRequestOfHealthPolicyNN", "0a178285-3bc8-47fa-be03-de557ef2a8cc", 5, WorkflowInArguments, True, False, "Me.AppRelativeVirtualPath", HT5NNCotizacionMiSaludValeOroParametersInstance.InternalId)


                    currentAction = SessionTrace("10. The message 'Sr/Sra. { Value /Ris...' will displayed as 'Splash'")
                    ParametersToDictionary(HT5NNCotizacionMiSaludValeOroParametersInstance, parametersDictionary)
                    messageAction = "Sr/Sra. { Value /RiskInformation/PrimaryInsured/Client/FirstName } { Value /RiskInformation/PrimaryInsured/Client/LastName } { Value /RiskInformation/PrimaryInsured/Client/LastName2 }, pronto estará recibiendo noticias nuestras...Gracias por visitarnos..."
                    messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                    resultData.AddNotifySplash(messageAction)
                            End If

                instance = ClassToEntryData(instance, HT5NNCotizacionMiSaludValeOroParametersInstance)
                StoreFormInformationOnSession(HT5NNCotizacionMiSaludValeOroParametersInstance)
                
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "button14Click", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function RechazarClick(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim HT5NNCotizacionMiSaludValeOroParametersInstance As HT5NNCotizacionMiSaludValeOroParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            Try
                HT5NNCotizacionMiSaludValeOroParametersInstance = RetrieveFormInformationFromSession(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("RechazarClick")
                HT5NNCotizacionMiSaludValeOroParametersInstance = EntryDataToClass(HT5NNCotizacionMiSaludValeOroParametersInstance, instance)
                currentAction = SessionTrace("1. The message 'No se continua con e...' will displayed as 'Splash'")
                ParametersToDictionary(HT5NNCotizacionMiSaludValeOroParametersInstance, parametersDictionary)
                messageAction = "No se continua con el proceso... No deje de visitarnos en otra oportunidad..."
                messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                resultData.AddNotifySplash(messageAction)
                currentAction = SessionTrace("2. HT5NNCotizacionMiSaludValeOroParametersInstance.FormStatus = 99...")
                currentAction = SessionTrace("2.1. HT5NNCotizacionMiSaludValeOroParametersInstance.FormStatus = 99...")

                HT5NNCotizacionMiSaludValeOroParametersInstance.FormStatus = 99


                instance = ClassToEntryData(instance, HT5NNCotizacionMiSaludValeOroParametersInstance)
                StoreFormInformationOnSession(HT5NNCotizacionMiSaludValeOroParametersInstance)
                
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "RechazarClick", ex)

                With resultData
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, currentAction)
                End With
            End Try

            Return resultData
        End Function

#End Region

#Region "Lookups Web Methods"


        <WebMethod()>
        Public Shared Function LookUpForCurrency(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE11.NCODIGINT, TABLE11.SDESCRIPT, TABLE11.SSTATREGT, TABLE11.SSHORT_DES FROM TABLE11 TABLE11  WHERE TABLE11.SSTATREGT = 1  ORDER BY TABLE11.SDESCRIPT ASC", "1"), 
                                            "TABLE11", "Linked.LatCombined")

                    .Cache = InMotionGIT.Common.Enumerations.EnumCache.CacheWithCommand
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NCODIGINT"),
                                                                                            .Description = item.StringValue("SSHORT_DES")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "LookUpForCurrency", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForCurrency")
                End With
            End Try
            Return result
        End Function

        <WebMethod()>
        Public Shared Function LookUpForPaymentFrequency(id As String, RiskInformationLineOfBusiness As System.Int32, RiskInformationProductCode As System.Int32, RiskInformationPaymentMethod As System.Int32) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE36.NPAYFREQ, TABLE36.SSTATREGT, TABLE36.SDESCRIPT, PAY_FRACTI.NBRANCH, PAY_FRACTI.NPRODUCT, PAY_FRACTI.DNULLDATE, WAY_PAY_PROD.NWAY_PAY, WAY_PAY_PROD.DNULLDATE FROM TABLE36 TABLE36 JOIN PAY_FRACTI PAY_FRACTI ON PAY_FRACTI.NPAYFREQ = TABLE36.NPAYFREQ JOIN WAY_PAY_PROD WAY_PAY_PROD ON WAY_PAY_PROD.NBRANCH = PAY_FRACTI.NBRANCH  AND WAY_PAY_PROD.NPRODUCT = PAY_FRACTI.NPRODUCT  WHERE  ( TABLE36.SSTATREGT = '{0}' AND PAY_FRACTI.SSTATREGT = '{1}' AND PAY_FRACTI.DNULLDATE IS NULL AND WAY_PAY_PROD.DNULLDATE IS NULL )   AND (PAY_FRACTI.NBRANCH = @:PAY_FRACTINBRANCHDependen AND PAY_FRACTI.NPRODUCT = @:PAY_FRACTINPRODUCTDepende AND WAY_PAY_PROD.NWAY_PAY = @:WAY_PAY_PRODNWAY_PAYDepen AND NOT SDESCRIPT IS NULL) ORDER BY SDESCRIPT ", "1", "1"), 
                                            "TABLE36", "Linked.LatCombined")
                    .AddParameter("PAY_FRACTINBRANCHDependen", DbType.Int32, 0, False, RiskInformationLineOfBusiness)
                    .AddParameter("PAY_FRACTINPRODUCTDepende", DbType.Int32, 0, False, RiskInformationProductCode)
                    .AddParameter("WAY_PAY_PRODNWAY_PAYDepen", DbType.Int32, 0, False, RiskInformationPaymentMethod)

                    .Cache = InMotionGIT.Common.Enumerations.EnumCache.CacheWithCommand
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NPAYFREQ"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "LookUpForPaymentFrequency", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForPaymentFrequency")
                End With
            End Try
            Return result
        End Function

        <WebMethod()>
        Public Shared Function LookUpForPaymentMethod(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE5002.NWAY_PAY, TABLE5002.SSTATREGT, TABLE5002.SDESCRIPT FROM TABLE5002 TABLE5002  WHERE TABLE5002.SSTATREGT = '{0}'  AND NOT SDESCRIPT IS NULL ORDER BY SDESCRIPT", "1"), 
                                            "TABLE5002", "Linked.LatCombined")

                    .Cache = InMotionGIT.Common.Enumerations.EnumCache.CacheWithCommand
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NWAY_PAY"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "LookUpForPaymentMethod", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForPaymentMethod")
                End With
            End Try
            Return result
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForClientRolegrid(formId As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            Dim HT5NNCotizacionMiSaludValeOroParametersInstance As HT5NNCotizacionMiSaludValeOroParameters = RetrieveFormInformationFromSession(formId)

            Try
                If Not IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.ProductMaster.ClientAllowedInPolicyPerProducts) Then
                    For Each item As InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct In HT5NNCotizacionMiSaludValeOroParametersInstance.ProductMaster.ClientAllowedInPolicyPerProducts
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.ClientRole,
                                                                                            .Description = item.Description})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "LookUpForClientRolegrid", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForClientRolegrid")
                End With
            End Try
            Return result
        End Function

        <WebMethod()>
        Public Shared Function LookUpForGendergg(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE18.SSEXCLIEN, TABLE18.SSTATREGT, TABLE18.SDESCRIPT FROM TABLE18 TABLE18  WHERE TABLE18.SSTATREGT = '{0}' AND TABLE18.SSEXCLIEN <> '{1}'  AND NOT SDESCRIPT IS NULL ORDER BY SDESCRIPT", "1", "3"), 
                                            "TABLE18", "Linked.LatCombined")

                    .Cache = InMotionGIT.Common.Enumerations.EnumCache.CacheWithCommand
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.StringValue("SSEXCLIEN"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "LookUpForGendergg", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForGendergg")
                End With
            End Try
            Return result
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForAseguradoProcesar(formId As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            Dim HT5NNCotizacionMiSaludValeOroParametersInstance As HT5NNCotizacionMiSaludValeOroParameters = RetrieveFormInformationFromSession(formId)

            Try
                If Not IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCollection) Then
                    For Each item As InMotionGIT.Policy.Entity.Contracts.Role In HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCollection
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.UserCode,
                                                                                            .Description = item.BirthDate})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "LookUpForAseguradoProcesar", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForAseguradoProcesar")
                End With
            End Try
            Return result
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForClientRolea(formId As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            Dim HT5NNCotizacionMiSaludValeOroParametersInstance As HT5NNCotizacionMiSaludValeOroParameters = RetrieveFormInformationFromSession(formId)

            Try
                If Not IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.ProductMaster.ClientAllowedInPolicyPerProducts) Then
                    For Each item As InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct In HT5NNCotizacionMiSaludValeOroParametersInstance.ProductMaster.ClientAllowedInPolicyPerProducts
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.ClientRole,
                                                                                            .Description = item.Description})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "LookUpForClientRolea", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForClientRolea")
                End With
            End Try
            Return result
        End Function

        <WebMethod()>
        Public Shared Function LookUpForGendera(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE18.SSEXCLIEN, TABLE18.SSTATREGT, TABLE18.SDESCRIPT FROM TABLE18 TABLE18  WHERE TABLE18.SSTATREGT = '{0}' AND TABLE18.SSEXCLIEN <= '{1}'  AND NOT SDESCRIPT IS NULL ORDER BY SDESCRIPT", "1", "2"), 
                                            "TABLE18", "Linked.LatCombined")

                    .Cache = InMotionGIT.Common.Enumerations.EnumCache.CacheWithCommand
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.StringValue("SSEXCLIEN"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "LookUpForGendera", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForGendera")
                End With
            End Try
            Return result
        End Function

        <WebMethod()>
        Public Shared Function LookUpForClientRolecompt(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE12.NROLE, TABLE12.SSTATREGT, TABLE12.SDESCRIPT FROM TABLE12 TABLE12  WHERE TABLE12.SSTATREGT = '{0}'  AND NOT SDESCRIPT IS NULL ORDER BY SDESCRIPT", "1"), 
                                            "TABLE12", "Linked.LatCombined")

                    .Cache = InMotionGIT.Common.Enumerations.EnumCache.CacheWithCommand
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NROLE"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "LookUpForClientRolecompt", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForClientRolecompt")
                End With
            End Try
            Return result
        End Function

        <WebMethod()>
        Public Shared Function LookUpForGendercomp(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE18.SSEXCLIEN, TABLE18.SSTATREGT, TABLE18.SDESCRIPT FROM TABLE18 TABLE18  WHERE TABLE18.SSTATREGT = '{0}'  AND NOT SDESCRIPT IS NULL ORDER BY SDESCRIPT", "1"), 
                                            "TABLE18", "Linked.LatCombined")

                    .Cache = InMotionGIT.Common.Enumerations.EnumCache.CacheWithCommand
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.StringValue("SSEXCLIEN"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "LookUpForGendercomp", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForGendercomp")
                End With
            End Try
            Return result
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForAseguradoCompletar(formId As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            Dim HT5NNCotizacionMiSaludValeOroParametersInstance As HT5NNCotizacionMiSaludValeOroParameters = RetrieveFormInformationFromSession(formId)

            Try
                If Not IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCollection) Then
                    For Each item As InMotionGIT.Policy.Entity.Contracts.Role In HT5NNCotizacionMiSaludValeOroParametersInstance.RoleCollection
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.UserCode,
                                                                                            .Description = item.BirthDate})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "LookUpForAseguradoCompletar", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForAseguradoCompletar")
                End With
            End Try
            Return result
        End Function

        <WebMethod()>
        Public Shared Function LookUpForClientRoleCompletar(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE12.NROLE, TABLE12.SSTATREGT, TABLE12.SDESCRIPT FROM TABLE12 TABLE12  WHERE TABLE12.SSTATREGT = '{0}'  AND NOT SDESCRIPT IS NULL ORDER BY SDESCRIPT", "1"), 
                                            "TABLE12", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NROLE"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "LookUpForClientRoleCompletar", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForClientRoleCompletar")
                End With
            End Try
            Return result
        End Function

        <WebMethod()>
        Public Shared Function LookUpForGenderCompletar(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE18.SSEXCLIEN, TABLE18.SSTATREGT, TABLE18.SDESCRIPT FROM TABLE18 TABLE18  WHERE TABLE18.SSTATREGT = '{0}'  AND NOT SDESCRIPT IS NULL ORDER BY SDESCRIPT", "1"), 
                                            "TABLE18", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.StringValue("SSEXCLIEN"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "LookUpForGenderCompletar", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForGenderCompletar")
                End With
            End Try
            Return result
        End Function

        <WebMethod()>
        Public Shared Function LookUpForLineOfBusiness(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE10.NBRANCH, TABLE10.SDESCRIPT FROM TABLE10 TABLE10  WHERE TABLE10.SSTATREGT = '{0}'  AND NOT SDESCRIPT IS NULL ORDER BY SDESCRIPT", "1"), 
                                            "TABLE10", "Linked.LatCombined")

                    .Cache = InMotionGIT.Common.Enumerations.EnumCache.CacheWithCommand
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NBRANCH"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "LookUpForLineOfBusiness", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForLineOfBusiness")
                End With
            End Try
            Return result
        End Function

        <WebMethod()>
        Public Shared Function LookUpForProductCode(id As String, RiskInformationLineOfBusiness As System.Int32) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
            
            
            Try
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  PRODMASTER.NPRODUCT, PRODMASTER.NBRANCH, PRODMASTER.SDESCRIPT FROM PRODMASTER PRODMASTER  WHERE PRODMASTER.SSTATREGT = '{0}'  AND (PRODMASTER.NBRANCH = @:PRODMASTERNBRANCHDependen AND NOT SDESCRIPT IS NULL) ORDER BY SDESCRIPT ", "1"), 
                                            "PRODMASTER", "Linked.LatCombined")
                    .AddParameter("PRODMASTERNBRANCHDependen", DbType.Int32, 0, False, RiskInformationLineOfBusiness)

                    .Cache = InMotionGIT.Common.Enumerations.EnumCache.CacheWithCommand
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NPRODUCT"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                LogHandler.ErrorLog("HT5NNCotizacionMiSaludValeOro", "LookUpForProductCode", ex)

                With result
                    .Success = False
                    .Reason = String.Format(CultureInfo.InvariantCulture, "{0} ({1})", ex.Message, "LookUpForProductCode")
                End With
            End Try
            Return result
        End Function

#End Region

#Region "Form Actions"

        Private Shared Sub Form_Initialization(ByRef currentAction As String, ByRef HT5NNCotizacionMiSaludValeOroParametersInstance As HT5NNCotizacionMiSaludValeOroParameters, ByRef resultData As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult)
            Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
            Dim formContext As New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, HT5NNCotizacionMiSaludValeOroParametersInstance.InternalId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
            Dim selectDataTableItem As DataTable = Nothing
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim messageAction As String = String.Empty
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            currentAction = SessionTrace("Form_Initialization")

            currentAction = SessionTrace("1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate = Date.Today...")
            currentAction = SessionTrace("1.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate = Date.Today...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate = Date.Today

            currentAction = SessionTrace("2. HT5NNCotizacionMiSaludValeOroParametersInstance.PlanillaModificacion = 'NNCotizacionMiSaludValeOroEdit'...")
            currentAction = SessionTrace("2.1. HT5NNCotizacionMiSaludValeOroParametersInstance.PlanillaModificacion = 'NNCotizacionMiSaludValeOroEdit'...")

            HT5NNCotizacionMiSaludValeOroParametersInstance.PlanillaModificacion = "NNCotizacionMiSaludValeOroEdit"
            currentAction = SessionTrace("2.2. HT5NNCotizacionMiSaludValeOroParametersInstance.PlanillaVisualizacion = 'NNCotizacionMiSaludValeOroView'...")

            HT5NNCotizacionMiSaludValeOroParametersInstance.PlanillaVisualizacion = "NNCotizacionMiSaludValeOroView"

            currentAction = SessionTrace("3. If HT5NNCotizacionMiSaludValeOroParametersInstance.StatusRun <> true Then")
            If HT5NNCotizacionMiSaludValeOroParametersInstance.StatusRun <> true Then

                currentAction = SessionTrace("4. The message 'You are not authoriz...' will displayed as 'Splash'")
                ParametersToDictionary(HT5NNCotizacionMiSaludValeOroParametersInstance, parametersDictionary)
                messageAction = "You are not authorized to execute this transaction"
                messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                resultData.AddNotifySplash(messageAction)
                currentAction = SessionTrace("5. HT5NNCotizacionMiSaludValeOroParametersInstance.ClienteIndicado = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                currentAction = SessionTrace("5.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ClienteIndicado = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")

                HT5NNCotizacionMiSaludValeOroParametersInstance.ClienteIndicado = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID

                End If
            currentAction = SessionTrace("6. HT5NNCotizacionMiSaludValeOroParametersInstance.RecoveryCaseIndicator = false...")
            currentAction = SessionTrace("6.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RecoveryCaseIndicator = false...")

            HT5NNCotizacionMiSaludValeOroParametersInstance.RecoveryCaseIndicator = false

            currentAction = SessionTrace("7. HT5NNCotizacionMiSaludValeOroParametersInstance.InRuleErros = False...")
            currentAction = SessionTrace("7.1. HT5NNCotizacionMiSaludValeOroParametersInstance.InRuleErros = False...")

            HT5NNCotizacionMiSaludValeOroParametersInstance.InRuleErros = False

            currentAction = SessionTrace("8. HT5NNCotizacionMiSaludValeOroParametersInstance.SendMailIndicator = True...")
            currentAction = SessionTrace("8.1. HT5NNCotizacionMiSaludValeOroParametersInstance.SendMailIndicator = True...")

            HT5NNCotizacionMiSaludValeOroParametersInstance.SendMailIndicator = True

            currentAction = SessionTrace("9. If HT5NNCotizacionMiSaludValeOroParametersInstance.uwcaseid <> '0' AND HT5NNCotizacionMiSaludValeOroParametersInstance.uwcaseid Not Is Null Or Not Empty  Then")
            If HT5NNCotizacionMiSaludValeOroParametersInstance.uwcaseid <> "0" AndAlso Not IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.uwcaseid) Then

                currentAction = SessionTrace("10. HT5NNCotizacionMiSaludValeOroParametersInstance.RecoveryCaseIndicator = true...")
                currentAction = SessionTrace("10.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RecoveryCaseIndicator = true...")

                HT5NNCotizacionMiSaludValeOroParametersInstance.RecoveryCaseIndicator = true

                currentAction = SessionTrace("11. Call 'Retrieve Case Information for Request of policy' workflow in Synchronous mode with tracking")
                WorkflowInArguments = New Dictionary(Of String, Object)

                With WorkflowInArguments
                .Add("uwcaseid", HT5NNCotizacionMiSaludValeOroParametersInstance.uwcaseid)
                .Add("ClientName", HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.CompleteClientName)
                .Add("StatusCase", HT5NNCotizacionMiSaludValeOroParametersInstance.StatusCase)
                .Add("RiskInformation", HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation)
                .Add("Identifier", "RequestLifePolicy")
                .Add("context", formContext)
                End With

                WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("RetrieveCaseInformationRequestPolicy", "3967f9a8-6bc2-41d6-8672-ad0ede452cf2", 10, WorkflowInArguments, True, True, "Me.AppRelativeVirtualPath", HT5NNCotizacionMiSaludValeOroParametersInstance.InternalId)

                currentAction += "'Mapping Outputs'"
                HT5NNCotizacionMiSaludValeOroParametersInstance.uwcaseid = WorkflowOutArguments("uwcaseid")
                HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.CompleteClientName = WorkflowOutArguments("ClientName")
                HT5NNCotizacionMiSaludValeOroParametersInstance.StatusCase = WorkflowOutArguments("StatusCase")
                HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = WorkflowOutArguments("RiskInformation")

                currentAction = SessionTrace("12. Call Shared Function 'Retrieve Client' with parameters (Client Identification)")
                Dim _Client_cd4c0b866de94b2eba54cdc5ad01015b As InMotionGIT.Client.Entity.Contracts.Client
                
      _Client_cd4c0b866de94b2eba54cdc5ad01015b = (New InMotionGIT.Client.Services.ClientManager).Retrieve(clientId:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID, atDate:=Date.Today, childFilter:= "All")
      isNullResult = (IsNothing(_Client_cd4c0b866de94b2eba54cdc5ad01015b))
      isFoundData  = Not isNullResult
    
                HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = _Client_cd4c0b866de94b2eba54cdc5ad01015b

                currentAction = SessionTrace("13. Acepto.Visible = true, Coverages.Visible = true")
                currentAction = SessionTrace("13.1. Acepto.Visible = true...")
                resultData.AddControlBehavior("Acepto", "show")
                currentAction = SessionTrace("13.2. Coverages.Visible = true...")
                resultData.AddControlBehavior("Coverages", "show")

                currentAction = SessionTrace("14. HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = true...")
                currentAction = SessionTrace("14.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = true...")

                HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = true

                currentAction = SessionTrace("15. uwcaseid.Visible = true")
                currentAction = SessionTrace("15.1. uwcaseid.Visible = true...")
                resultData.AddControlBehavior("uwcaseid", "show")

                    Else
                currentAction = SessionTrace("16. Coverages.Visible = false, uwcaseid.Visible = false")
                currentAction = SessionTrace("16.1. Coverages.Visible = false...")
                resultData.AddControlBehavior("Coverages", "hide")
                currentAction = SessionTrace("16.2. uwcaseid.Visible = false...")
                resultData.AddControlBehavior("uwcaseid", "hide")

                        End If
            currentAction = SessionTrace("17. Enable 'zonegeneral' control")
            resultData.AddControlBehavior("zonegeneral", "enabled")

            currentAction = SessionTrace("18. Hide 'Detalle de beneficiarios' control")
            resultData.AddControlBehavior("ShowBeneficiary", "hide")

            currentAction = SessionTrace("19. Hide 'Suma asegurada' control")
            resultData.AddControlBehavior("InsuredAmountForCalculation", "hide")

            currentAction = SessionTrace("20. HT5NNCotizacionMiSaludValeOroParametersInstance.AccumulatedAmount = 0...")
            currentAction = SessionTrace("20.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AccumulatedAmount = 0...")

            HT5NNCotizacionMiSaludValeOroParametersInstance.AccumulatedAmount = 0

            currentAction = SessionTrace("21. If HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = True Then")
            If HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = True Then

                currentAction = SessionTrace("22. zoneAS2.Enabled = true, FirstName.Enabled = false, LastName.Enabled = false...")
                currentAction = SessionTrace("22.1. zoneAS2.Enabled = true...")
                resultData.AddControlBehavior("zoneAS2", "enabled")
                currentAction = SessionTrace("22.2. FirstName.Enabled = false...")
                resultData.AddControlBehavior("FirstName", "disabled")
                currentAction = SessionTrace("22.3. LastName.Enabled = false...")
                resultData.AddControlBehavior("LastName", "disabled")
                currentAction = SessionTrace("22.4. LastName2.Enabled = false...")
                resultData.AddControlBehavior("LastName2", "disabled")
                currentAction = SessionTrace("22.5. zone10.Enabled = true...")
                resultData.AddControlBehavior("zone10", "enabled")

                currentAction = SessionTrace("23. ClientID.Enabled = false")
                currentAction = SessionTrace("23.1. ClientID.Enabled = false...")
                resultData.AddControlBehavior("ClientID", "disabled")

                            End If
            currentAction = SessionTrace("24. If HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = false Then")
            If HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = false Then

                currentAction = SessionTrace("25. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = Nothing...")
                currentAction = SessionTrace("25.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = Nothing...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = Nothing

                currentAction = SessionTrace("26. ClientID.Enabled = true")
                currentAction = SessionTrace("26.1. ClientID.Enabled = true...")
                resultData.AddControlBehavior("ClientID", "enabled")

                currentAction = SessionTrace("27. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID = 0...")
                currentAction = SessionTrace("27.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID = 0...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID = 0

                                Else
                currentAction = SessionTrace("28. Call Shared Function 'Retrieve Client' with parameters (Client Identification)")
                Dim _ClientIncluded_92d79c6265604555be2d91e66bfe3ff2 As InMotionGIT.Client.Entity.Contracts.Client
                
      _ClientIncluded_92d79c6265604555be2d91e66bfe3ff2 = (New InMotionGIT.Client.Services.ClientManager).Retrieve(clientId:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID, atDate:=Date.Today, childFilter:= "All")
      isNullResult = (IsNothing(_ClientIncluded_92d79c6265604555be2d91e66bfe3ff2))
      isFoundData  = Not isNullResult
    
                HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded = _ClientIncluded_92d79c6265604555be2d91e66bfe3ff2

                currentAction = SessionTrace("29. Cotizar.Enabled = true")
                currentAction = SessionTrace("29.1. Cotizar.Enabled = true...")
                resultData.AddControlBehavior("Cotizar", "enabled")

                                    End If
            currentAction = SessionTrace("30. If HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = true Then")
            If HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = true Then

                currentAction = SessionTrace("31. If HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate Is Null Or Empty '' Then")
                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate) OrElse HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate = Date.MinValue Then

                    currentAction = SessionTrace("32. Enable 'Fecha de nacimiento' control")
                    resultData.AddControlBehavior("BirthDate", "enabled")

                    currentAction = SessionTrace("33. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.IsDirty = True...")
                    currentAction = SessionTrace("33.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.IsDirty = True...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.IsDirty = True

                                                Else
                    currentAction = SessionTrace("34. BirthDate.Enabled = false")
                    currentAction = SessionTrace("34.1. BirthDate.Enabled = false...")
                    resultData.AddControlBehavior("BirthDate", "disabled")

                                                    End If
                                                End If
            currentAction = SessionTrace("35. If HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = true Then")
            If HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = true Then

                currentAction = SessionTrace("36. If HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.Gender Is Null Or Empty '' OR HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.Gender = 3 Then")
                If String.IsNullOrEmpty(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.Gender) OrElse HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.Gender = 3 Then

                    currentAction = SessionTrace("37. Enable 'Sexo' control")
                    resultData.AddControlBehavior("Gender", "enabled")

                    currentAction = SessionTrace("38. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.IsDirty = True...")
                    currentAction = SessionTrace("38.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.IsDirty = True...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.IsDirty = True

                                                            Else
                    currentAction = SessionTrace("39. Gender.Enabled = false")
                    currentAction = SessionTrace("39.1. Gender.Enabled = false...")
                    resultData.AddControlBehavior("Gender", "disabled")

                                                                End If
                                                            End If
            currentAction = SessionTrace("40. Show 'Suma asegurada' control")
            resultData.AddControlBehavior("InsuredAmountForCalculation", "show")

            currentAction = SessionTrace("41. HT5NNCotizacionMiSaludValeOroParametersInstance.InRuleErros = False...")
            currentAction = SessionTrace("41.1. HT5NNCotizacionMiSaludValeOroParametersInstance.InRuleErros = False...")

            HT5NNCotizacionMiSaludValeOroParametersInstance.InRuleErros = False

            currentAction = SessionTrace("42. HT5NNCotizacionMiSaludValeOroParametersInstance.FormStatus = 0...")
            currentAction = SessionTrace("42.1. HT5NNCotizacionMiSaludValeOroParametersInstance.FormStatus = 0...")

            HT5NNCotizacionMiSaludValeOroParametersInstance.FormStatus = 0

            currentAction = SessionTrace("43. HT5NNCotizacionMiSaludValeOroParametersInstance.OnLinePrint = 0...")
            currentAction = SessionTrace("43.1. HT5NNCotizacionMiSaludValeOroParametersInstance.OnLinePrint = 0...")

            HT5NNCotizacionMiSaludValeOroParametersInstance.OnLinePrint = 0

            currentAction = SessionTrace("44. HT5NNCotizacionMiSaludValeOroParametersInstance.OnLinePrintIndicator = true...")
            currentAction = SessionTrace("44.1. HT5NNCotizacionMiSaludValeOroParametersInstance.OnLinePrintIndicator = true...")

            HT5NNCotizacionMiSaludValeOroParametersInstance.OnLinePrintIndicator = true

            currentAction = SessionTrace("45. HT5NNCotizacionMiSaludValeOroParametersInstance.PreviousPayment = false...")
            currentAction = SessionTrace("45.1. HT5NNCotizacionMiSaludValeOroParametersInstance.PreviousPayment = false...")

            HT5NNCotizacionMiSaludValeOroParametersInstance.PreviousPayment = false

            currentAction = SessionTrace("46. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Cont...")
            currentAction = SessionTrace("46.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Cont...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
            currentAction = SessionTrace("46.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Cont...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
            currentAction = SessionTrace("46.3. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Cont...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress

            currentAction = SessionTrace("47. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1...")
            currentAction = SessionTrace("47.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1
            currentAction = SessionTrace("47.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.EffectiveDate = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Effective...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.EffectiveDate = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate

            currentAction = SessionTrace("48. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.DateOfLastSuccesfulContactAtThisAddress = today...")
            currentAction = SessionTrace("48.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.DateOfLastSuccesfulContactAtThisAddress = today...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.DateOfLastSuccesfulContactAtThisAddress = today

            currentAction = SessionTrace("49. HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Pr...")
            currentAction = SessionTrace("49.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Pr...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
            currentAction = SessionTrace("49.2. HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.CompanyId = 1...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.CompanyId = 1
            currentAction = SessionTrace("49.3. HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Security.Usercode = HT5NNCotizacionMiSaludValeOroParametersInstance.UsercodeBO...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Security) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Security = New InMotionGIT.Common.Contracts.Process.SecurityInformation
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Security.Usercode = HT5NNCotizacionMiSaludValeOroParametersInstance.UsercodeBO

            currentAction = SessionTrace("50. HT5NNCotizacionMiSaludValeOroParametersInstance.VerificarCuestionariosIndicador = true...")
            currentAction = SessionTrace("50.1. HT5NNCotizacionMiSaludValeOroParametersInstance.VerificarCuestionariosIndicador = true...")

            HT5NNCotizacionMiSaludValeOroParametersInstance.VerificarCuestionariosIndicador = true

            currentAction = SessionTrace("51. If HT5NNCotizacionMiSaludValeOroParametersInstance.AccumulatedAmount <> 0 AND HT5NNCotizacionMiSaludValeOroParametersInstance.AccumulatedAmount Not Is Null Or Not Empty  Then")
            If HT5NNCotizacionMiSaludValeOroParametersInstance.AccumulatedAmount <> 0 AndAlso Not IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AccumulatedAmount) Then

                currentAction = SessionTrace("52. zone3Cumulo.Visible = true")
                currentAction = SessionTrace("52.1. zone3Cumulo.Visible = true...")
                resultData.AddControlBehavior("zone3Cumulo", "show")

                                                                Else
                currentAction = SessionTrace("53. zone3Cumulo.Visible = false")
                currentAction = SessionTrace("53.1. zone3Cumulo.Visible = false...")
                resultData.AddControlBehavior("zone3Cumulo", "hide")

                                                                    End If
            currentAction = SessionTrace("54. SELECT CLIALLOPRO.NBRANCH, CLIALLOPRO.NPRODUCT, CLIALLOPRO.SPOLITYPE FROM CLIALLOPRO... WHERE CLIALLOPRO.NBRANCH = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.LineOfBusiness AND CLIALLOPRO.NPRODUCT = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.ProductCode AND CLIALLOPRO.SPOLITYPE = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Policy.PolicyType AND )")
            isFoundData = False
                   With New DataManagerFactory("SELECT CLIALLOPRO.NBRANCH, CLIALLOPRO.NPRODUCT, CLIALLOPRO.SPOLITYPE, CLIALLOPRO.SCOMPON, CLIALLOPRO.NROLE, CLIALLOPRO.SDEFAULTI, TABLE12.SDESCRIPT FROM CLIALLOPRO CLIALLOPRO JOIN TABLE12 TABLE12 ON TABLE12.NROLE = CLIALLOPRO.NROLE  WHERE (CLIALLOPRO.NBRANCH = @:CLIALLOPRONBRANCH0 AND CLIALLOPRO.NPRODUCT = @:CLIALLOPRONPRODUCT1 AND CLIALLOPRO.SPOLITYPE = @:CLIALLOPROSPOLITYPE2 AND CLIALLOPRO.SCOMPON = '1' AND CLIALLOPRO.NROLE <> 1 AND CLIALLOPRO.NROLE <> 2 AND CLIALLOPRO.NROLE <> 13 AND CLIALLOPRO.NROLE <> 16)", "CLIALLOPRO", "Linked.LatCombined")
.AddParameter("CLIALLOPRONBRANCH0", DbType.Int32, 5, False, HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.LineOfBusiness)
.AddParameter("CLIALLOPRONPRODUCT1", DbType.Int32, 5, False, HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.ProductCode)
.AddParameter("CLIALLOPROSPOLITYPE2", DbType.AnsiStringFixedLength, 1, (HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Policy.PolicyType = String.Empty), HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Policy.PolicyType)
 
            selectDataTableItem = .QueryExecuteToTable(True)  
        End With
            With selectDataTableItem
                    If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                        isFoundData = True 
                                  If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.ProductMaster) Then
              HT5NNCotizacionMiSaludValeOroParametersInstance.ProductMaster = New InMotionGIT.Product.Entity.Contracts.ProductMaster
          End If 
HT5NNCotizacionMiSaludValeOroParametersInstance.ProductMaster.ClientAllowedInPolicyPerProducts = New InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProductCollection 
                        Dim newItem As InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct 
                        For Each itemData As DataRow In .Rows
                             newItem = New InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct
                        newItem.ClientRole = itemData.NumericValue("NROLE") 
                        newItem.Description = itemData.StringValue("SDESCRIPT") 

                              HT5NNCotizacionMiSaludValeOroParametersInstance.ProductMaster.ClientAllowedInPolicyPerProducts.Add(newItem)
                        Next
                    End If
            End With

            currentAction = SessionTrace("55. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.UserCode = HT5NNCotizacionMiSaludValeOroParametersInstance.UsercodeBO...")
            currentAction = SessionTrace("55.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.UserCode = HT5NNCotizacionMiSaludValeOroParametersInstance.UsercodeBO...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.UserCode = HT5NNCotizacionMiSaludValeOroParametersInstance.UsercodeBO

            currentAction = SessionTrace("56. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PaymentFrequency = HT5NNCotizacionMiSaludValeOroParametersInstance.ProductMaster.ProductGene...")
            currentAction = SessionTrace("56.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PaymentFrequency = HT5NNCotizacionMiSaludValeOroParametersInstance.ProductMaster.ProductGene...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PaymentFrequency = HT5NNCotizacionMiSaludValeOroParametersInstance.ProductMaster.ProductGeneralInformation.PaymentFrequency
            currentAction = SessionTrace("56.2. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Policy.PaymentFrequency = HT5NNCotizacionMiSaludValeOroParametersInstance.ProductMaster.ProductGene...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Policy) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Policy = New InMotionGIT.Policy.Entity.Contracts.Policy
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Policy.PaymentFrequency = HT5NNCotizacionMiSaludValeOroParametersInstance.ProductMaster.ProductGeneralInformation.PaymentFrequency
            currentAction = SessionTrace("56.3. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PaymentMethod = HT5NNCotizacionMiSaludValeOroParametersInstance.ProductMaster.ProductGene...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PaymentMethod = HT5NNCotizacionMiSaludValeOroParametersInstance.ProductMaster.ProductGeneralInformation.PaymentMethod

            currentAction = SessionTrace("57. HT5NNCotizacionMiSaludValeOroParametersInstance.UltimoCertificado = 1...")
            currentAction = SessionTrace("57.1. HT5NNCotizacionMiSaludValeOroParametersInstance.UltimoCertificado = 1...")

            HT5NNCotizacionMiSaludValeOroParametersInstance.UltimoCertificado = 1


        End Sub
	
        Private Shared Sub Form_Load(ByRef currentAction As String, ByRef HT5NNCotizacionMiSaludValeOroParametersInstance As HT5NNCotizacionMiSaludValeOroParameters, ByRef resultData As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult)
            Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
            Dim formContext As New InMotionGIT.Common.Contracts.Context(UserInfo.LanguageId, HT5NNCotizacionMiSaludValeOroParametersInstance.InternalId) With {.UserId = HttpContext.Current.Session("UserId"), .UserCode = HttpContext.Current.Session("nUsercode"), .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), .AccessToken = HttpContext.Current.Session("AccessToken")}
            Dim selectDataTableItem As DataTable = Nothing
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim messageAction As String = String.Empty
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            currentAction = SessionTrace("Form_Load")

            currentAction = SessionTrace("1. tab13.Visible = true, tab17.Visible = true, zone17.Enabled = false...")
            currentAction = SessionTrace("1.1. tab13.Visible = true...")
            resultData.AddControlBehavior("tab13", "show")
            currentAction = SessionTrace("1.2. tab17.Visible = true...")
            resultData.AddControlBehavior("tab17", "show")
            currentAction = SessionTrace("1.3. zone17.Enabled = false...")
            resultData.AddControlBehavior("zone17", "disabled")
            currentAction = SessionTrace("1.4. zone5.Visible = false...")
            resultData.AddControlBehavior("zone5", "hide")
            currentAction = SessionTrace("1.5. Coverages.Visible = true...")
            resultData.AddControlBehavior("Coverages", "show")
            currentAction = SessionTrace("1.6. zone2.Enabled = false...")
            resultData.AddControlBehavior("zone2", "disabled")
            currentAction = SessionTrace("1.7. zone15.Visible = false...")
            resultData.AddControlBehavior("zone15", "hide")
            currentAction = SessionTrace("1.8. zone4.Enabled = false...")
            resultData.AddControlBehavior("zone4", "disabled")
            currentAction = SessionTrace("1.9. zone7.Visible = false...")
            resultData.AddControlBehavior("zone7", "hide")
            currentAction = SessionTrace("1.10. zone6.Enabled = false...")
            resultData.AddControlBehavior("zone6", "disabled")
            currentAction = SessionTrace("1.11. zone22.Enabled = false...")
            resultData.AddControlBehavior("zone22", "disabled")
            currentAction = SessionTrace("1.12. zone19.Visible = false...")
            resultData.AddControlBehavior("zone19", "hide")
            currentAction = SessionTrace("1.13. zonegeneral.Visible = false...")
            resultData.AddControlBehavior("zonegeneral", "hide")
            currentAction = SessionTrace("1.14. zone4.Visible = true...")
            resultData.AddControlBehavior("zone4", "show")
            currentAction = SessionTrace("1.15. zone20.Visible = false...")
            resultData.AddControlBehavior("zone20", "hide")

            currentAction = SessionTrace("2. uwcaseid.Visible = true, label7.Visible = false, zone6.Visible = true...")
            currentAction = SessionTrace("2.1. uwcaseid.Visible = true...")
            resultData.AddControlBehavior("uwcaseid", "show")
            currentAction = SessionTrace("2.2. label7.Visible = false...")
            resultData.AddControlBehavior("label7", "hide")
            currentAction = SessionTrace("2.3. zone6.Visible = true...")
            resultData.AddControlBehavior("zone6", "show")
            currentAction = SessionTrace("2.4. zone25.Visible = false...")
            resultData.AddControlBehavior("zone25", "hide")
            currentAction = SessionTrace("2.5. tabAsegAd.Visible = false...")
            resultData.AddControlBehavior("tabAsegAd", "hide")
            currentAction = SessionTrace("2.6. zCRUDaa.Visible = false...")
            resultData.AddControlBehavior("zCRUDaa", "hide")
            currentAction = SessionTrace("2.7. zone19.Visible = false...")
            resultData.AddControlBehavior("zone19", "hide")

            currentAction = SessionTrace("3. HT5NNCotizacionMiSaludValeOroParametersInstance.RecoveryCaseIndicator = true...")
            currentAction = SessionTrace("3.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RecoveryCaseIndicator = true...")

            HT5NNCotizacionMiSaludValeOroParametersInstance.RecoveryCaseIndicator = true

            currentAction = SessionTrace("4. Call Shared Function 'Retrieve Underwriting Case' with parameters (Case ID, Effective Date)")
            Dim _UnderwritingCase_e4c6680b75ed449484b935daa2cb030c As InMotionGIT.Underwriting.Contracts.UnderwritingCase
            _UnderwritingCase_e4c6680b75ed449484b935daa2cb030c = InMotionGIT.Underwriting.Proxy.Manager.Retrieve(underwritingCaseID:=HT5NNCotizacionMiSaludValeOroParametersInstance.uwcaseid, atDate:=Date.Today)
            HT5NNCotizacionMiSaludValeOroParametersInstance.UnderwritingCase = _UnderwritingCase_e4c6680b75ed449484b935daa2cb030c
            isNullResult = (IsNothing(_UnderwritingCase_e4c6680b75ed449484b935daa2cb030c))

            currentAction = SessionTrace("5. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = HT5NNCotizacionMiSaludValeOroParametersInstance.UnderwritingCase.RiskInfo...")
            currentAction = SessionTrace("5.1. HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = HT5NNCotizacionMiSaludValeOroParametersInstance.UnderwritingCase.RiskInfo...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation = HT5NNCotizacionMiSaludValeOroParametersInstance.UnderwritingCase.RiskInformation

            currentAction = SessionTrace("7. Call Shared Sub 'Clear Form Errors' without parameters")
            
        HT5NNCotizacionMiSaludValeOroParametersInstance.Errors.Clear()
	formContext.Errors.Clear()
    

            currentAction = SessionTrace("8. Call Shared Function 'Retrieve Client' with parameters (Client Identification)")
            Dim _Client_edba566bbc91418ca15943fe3331ba90 As InMotionGIT.Client.Entity.Contracts.Client
            
      _Client_edba566bbc91418ca15943fe3331ba90 = (New InMotionGIT.Client.Services.ClientManager).Retrieve(clientId:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID, atDate:=Date.Today, childFilter:= "All")
      isNullResult = (IsNothing(_Client_edba566bbc91418ca15943fe3331ba90))
      isFoundData  = Not isNullResult
    
            HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client = _Client_edba566bbc91418ca15943fe3331ba90

            currentAction = SessionTrace("9. HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
            currentAction = SessionTrace("9.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded = New InMotionGIT.Client.Entity.Contracts.Client
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.ClientIncluded = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client

            currentAction = SessionTrace("10. HT5NNCotizacionMiSaludValeOroParametersInstance.InsuredAmountSelected = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.LifeLineO...")
            currentAction = SessionTrace("10.1. HT5NNCotizacionMiSaludValeOroParametersInstance.InsuredAmountSelected = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.LifeLineO...")

            HT5NNCotizacionMiSaludValeOroParametersInstance.InsuredAmountSelected = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation
            currentAction = SessionTrace("10.2. HT5NNCotizacionMiSaludValeOroParametersInstance.InsuredAmount = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.LifeLineO...")

            HT5NNCotizacionMiSaludValeOroParametersInstance.InsuredAmount = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation
            currentAction = SessionTrace("10.3. HT5NNCotizacionMiSaludValeOroParametersInstance.eMail = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")

            HT5NNCotizacionMiSaludValeOroParametersInstance.eMail = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.eMailAddressDefault
            currentAction = SessionTrace("10.4. HT5NNCotizacionMiSaludValeOroParametersInstance.Currency = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Currency...")

            HT5NNCotizacionMiSaludValeOroParametersInstance.Currency = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Currency

            currentAction = SessionTrace("11. HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = true...")
            currentAction = SessionTrace("11.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = true...")

            HT5NNCotizacionMiSaludValeOroParametersInstance.ClientExistInDB = true

            currentAction = SessionTrace("12. Call 'Get the face amount of the Life policies of the insured person' workflow in Synchronous mode with tracking")
            WorkflowInArguments = New Dictionary(Of String, Object)

            With WorkflowInArguments
            .Add("context", formContext)
            .Add("ClientID", HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID)
            .Add("CurrencyID", HT5NNCotizacionMiSaludValeOroParametersInstance.Currency)
            .Add("Amount", HT5NNCotizacionMiSaludValeOroParametersInstance.AccumulatedAmount)
            .Add("ProcessDate", HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate)
            End With

            WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("GetFaceAmountOfLifePoliciesOfTheInsuredPerson", "a240a822-d493-4dff-a365-ccb17551e006", 2, WorkflowInArguments, True, True, "Me.AppRelativeVirtualPath", HT5NNCotizacionMiSaludValeOroParametersInstance.InternalId)

            currentAction += "'Mapping Outputs'"
            HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID = WorkflowOutArguments("ClientID")
            HT5NNCotizacionMiSaludValeOroParametersInstance.Currency = WorkflowOutArguments("CurrencyID")
            HT5NNCotizacionMiSaludValeOroParametersInstance.AccumulatedAmount = WorkflowOutArguments("Amount")
            HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate = WorkflowOutArguments("ProcessDate")

            currentAction = SessionTrace("13. HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.CompanyId = 1...")
            currentAction = SessionTrace("13.1. HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.CompanyId = 1...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.CompanyId = 1
            currentAction = SessionTrace("13.2. HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Country = 58...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Country = 58
            currentAction = SessionTrace("13.3. HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Security.Usercode = 9998...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Security) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Security = New InMotionGIT.Common.Contracts.Process.SecurityInformation
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation.Security.Usercode = 9998

            currentAction = SessionTrace("14. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Cont...")
            currentAction = SessionTrace("14.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Cont...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
            currentAction = SessionTrace("14.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Cont...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.eMailAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Contract.General.eMailAddress
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Contract.General.eMailAddress
            currentAction = SessionTrace("14.3. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Cont...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address

            currentAction = SessionTrace("15. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
            currentAction = SessionTrace("15.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID
            currentAction = SessionTrace("15.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1
            currentAction = SessionTrace("15.3. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID

            currentAction = SessionTrace("16. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
            currentAction = SessionTrace("16.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID
            currentAction = SessionTrace("16.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1
            currentAction = SessionTrace("16.3. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryIn...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID

            currentAction = SessionTrace("17. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1...")
            currentAction = SessionTrace("17.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1
            currentAction = SessionTrace("17.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.TypeOfAddress = 3...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.TypeOfAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.TypeOfAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfAddress
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.TypeOfAddress = 3
            currentAction = SessionTrace("17.3. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.UserCompany.Code = 1...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.UserCompany) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.UserCompany = New InMotionGIT.Common.DataType.LookUpValueExtend
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.UserCompany.Code = 1
            currentAction = SessionTrace("17.4. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 6...")
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                            If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

            HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 6

            currentAction = SessionTrace("18. If (HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID Is Null Or Empty  OR HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID = 0) Then")
            If (IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID) OrElse HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID = 0) Then

                currentAction = SessionTrace("19. Call Function 'Retrieve addresses by owner' with parameters (Process date, User company of the address, Record owner type, Record owner id, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                Dim _AddressDLICollection_ed78486e24914b0584aea3ba445c5318 As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                _AddressDLICollection_ed78486e24914b0584aea3ba445c5318 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesDLI(processDate:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate, userCompany:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.UserCompany, recordOwnerType:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerType, recordOwnerId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.RecordOwnerID, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation, typeOfAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection = _AddressDLICollection_ed78486e24914b0584aea3ba445c5318
                isNullResult = (IsNothing(_AddressDLICollection_ed78486e24914b0584aea3ba445c5318))

                currentAction = SessionTrace("20. If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then

                    currentAction = SessionTrace("21. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).A...")
                    currentAction = SessionTrace("21.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).A...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).AddressID
                    currentAction = SessionTrace("21.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).InternalAddressKey

                    currentAction = SessionTrace("22. Call Function 'Retrieve an email address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                    Dim _AddresseMailDLI_f2e2613597804f8a928ec87022b5e94c As InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                    _AddresseMailDLI_f2e2613597804f8a928ec87022b5e94c = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveeMailDLI(processDate:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.AddressID, internalAddressKey:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.InternalAddressKey, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation)
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = _AddresseMailDLI_f2e2613597804f8a928ec87022b5e94c
                    isNullResult = (IsNothing(_AddresseMailDLI_f2e2613597804f8a928ec87022b5e94c))

                        End If
                currentAction = SessionTrace("23. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1...")
                currentAction = SessionTrace("23.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfAddress
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1
                currentAction = SessionTrace("23.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1
                currentAction = SessionTrace("23.3. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany.Code = 1...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany = New InMotionGIT.Common.DataType.LookUpValueExtend
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany.Code = 1
                currentAction = SessionTrace("23.4. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1

                currentAction = SessionTrace("24. Call Function 'Retrieve addresses by owner' with parameters (Process date, User company of the address, Record owner type, Record owner id, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                Dim _AddressDLICollection_65bc8f51287f4154bd544a50ded0c3e0 As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                _AddressDLICollection_65bc8f51287f4154bd544a50ded0c3e0 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesDLI(processDate:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate, userCompany:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany, recordOwnerType:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType, recordOwnerId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation, typeOfAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection = _AddressDLICollection_65bc8f51287f4154bd544a50ded0c3e0
                isNullResult = (IsNothing(_AddressDLICollection_65bc8f51287f4154bd544a50ded0c3e0))

                currentAction = SessionTrace("25. If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then

                    currentAction = SessionTrace("26. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).A...")
                    currentAction = SessionTrace("26.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).A...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).AddressID
                    currentAction = SessionTrace("26.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).InternalAddressKey

                    currentAction = SessionTrace("27. Call Function 'Retrieve a physical address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                    Dim _AddressPhysicalAddressDLI_39fdad47814a461d97b0d7e3cb1607e1 As InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                    _AddressPhysicalAddressDLI_39fdad47814a461d97b0d7e3cb1607e1 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrievePhysicalAddressDLI(processDate:=Date.Today, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, internalAddressKey:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation)
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = _AddressPhysicalAddressDLI_39fdad47814a461d97b0d7e3cb1607e1
                    isNullResult = (IsNothing(_AddressPhysicalAddressDLI_39fdad47814a461d97b0d7e3cb1607e1))

                            Else
                    currentAction = SessionTrace("28. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2...")
                    currentAction = SessionTrace("28.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2

                    currentAction = SessionTrace("29. Call Function 'Retrieve addresses by owner' with parameters (Process date, User company of the address, Record owner type, Record owner id, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                    Dim _AddressDLICollection_ccea44b146e040e8b0e0667fcc132a52 As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                    _AddressDLICollection_ccea44b146e040e8b0e0667fcc132a52 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesDLI(processDate:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate, userCompany:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany, recordOwnerType:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType, recordOwnerId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation, typeOfAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection = _AddressDLICollection_ccea44b146e040e8b0e0667fcc132a52
                    isNullResult = (IsNothing(_AddressDLICollection_ccea44b146e040e8b0e0667fcc132a52))

                    currentAction = SessionTrace("30. If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then")
                    If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then

                        currentAction = SessionTrace("31. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).A...")
                        currentAction = SessionTrace("31.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).A...")
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).AddressID
                        currentAction = SessionTrace("31.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).InternalAddressKey

                        currentAction = SessionTrace("32. Call Function 'Retrieve a physical address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                        Dim _AddressPhysicalAddressDLI_41935267e6e046e7b0562d88dea73ec1 As InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                        _AddressPhysicalAddressDLI_41935267e6e046e7b0562d88dea73ec1 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrievePhysicalAddressDLI(processDate:=Date.Today, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, internalAddressKey:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation)
                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = _AddressPhysicalAddressDLI_41935267e6e046e7b0562d88dea73ec1
                        isNullResult = (IsNothing(_AddressPhysicalAddressDLI_41935267e6e046e7b0562d88dea73ec1))

                                        End If
                                    End If
                                End If
            currentAction = SessionTrace("33. If (HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID Not Is Null Or Not Empty  AND HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID <> 0) Then")
            If (Not IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID) AndAlso HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID <> 0) Then

                currentAction = SessionTrace("34. Call Function 'Retrieve addresses by id' with parameters (Process date, User company of the address, Id value of the address, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                Dim _AddressDLICollection_1cb37bc658ea4a9fa6b3f235ec537516 As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                _AddressDLICollection_1cb37bc658ea4a9fa6b3f235ec537516 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesByIdDLI(processDate:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate, userCompany:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.UserCompany, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.AddressID, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation, typeOfAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection = _AddressDLICollection_1cb37bc658ea4a9fa6b3f235ec537516
                isNullResult = (IsNothing(_AddressDLICollection_1cb37bc658ea4a9fa6b3f235ec537516))

                currentAction = SessionTrace("35. If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then

                    currentAction = SessionTrace("36. Cotizar.Enabled = false, Acepto.Enabled = false, RiskInformationEffectiveDate.Enabled = false...")
                    currentAction = SessionTrace("36.1. Cotizar.Enabled = false...")
                    resultData.AddControlBehavior("Cotizar", "disabled")
                    currentAction = SessionTrace("36.2. Acepto.Enabled = false...")
                    resultData.AddControlBehavior("Acepto", "disabled")
                    currentAction = SessionTrace("36.3. RiskInformationEffectiveDate.Enabled = false...")
                    resultData.AddControlBehavior("RiskInformationEffectiveDate", "disabled")
                    currentAction = SessionTrace("36.4. PaymentFrequency.Enabled = false...")
                    resultData.AddControlBehavior("PaymentFrequency", "disabled")

                    currentAction = SessionTrace("37. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                    currentAction = SessionTrace("37.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).InternalAddressKey

                    currentAction = SessionTrace("38. Call Function 'Retrieve an email address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                    Dim _AddresseMailDLI_4fc89748e55c41f0bc043b982e6bf89a As InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                    _AddresseMailDLI_4fc89748e55c41f0bc043b982e6bf89a = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveeMailDLI(processDate:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.AddressID, internalAddressKey:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI.Address.InternalAddressKey, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation)
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddresseMailDLI = _AddresseMailDLI_4fc89748e55c41f0bc043b982e6bf89a
                    isNullResult = (IsNothing(_AddresseMailDLI_4fc89748e55c41f0bc043b982e6bf89a))

                                            End If
                currentAction = SessionTrace("39. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1...")
                currentAction = SessionTrace("39.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfAddress
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1
                currentAction = SessionTrace("39.2. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1
                currentAction = SessionTrace("39.3. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany.Code = 1...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany = New InMotionGIT.Common.DataType.LookUpValueExtend
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany.Code = 1
                currentAction = SessionTrace("39.4. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1...")
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

                HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1

                currentAction = SessionTrace("40. Call Function 'Retrieve addresses by id' with parameters (Process date, User company of the address, Id value of the address, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                Dim _AddressDLICollection_0f4753c2ec2b4cb3862aaac531b5588e As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                _AddressDLICollection_0f4753c2ec2b4cb3862aaac531b5588e = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesByIdDLI(processDate:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate, userCompany:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation, typeOfAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection = _AddressDLICollection_0f4753c2ec2b4cb3862aaac531b5588e
                isNullResult = (IsNothing(_AddressDLICollection_0f4753c2ec2b4cb3862aaac531b5588e))

                currentAction = SessionTrace("41. If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then")
                If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then

                    currentAction = SessionTrace("42. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                    currentAction = SessionTrace("42.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).InternalAddressKey

                    currentAction = SessionTrace("43. Call Function 'Retrieve a physical address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                    Dim _AddressPhysicalAddressDLI_5d0811327dce4e478e5057e55e7230c9 As InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                    _AddressPhysicalAddressDLI_5d0811327dce4e478e5057e55e7230c9 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrievePhysicalAddressDLI(processDate:=Date.Today, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, internalAddressKey:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation)
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = _AddressPhysicalAddressDLI_5d0811327dce4e478e5057e55e7230c9
                    isNullResult = (IsNothing(_AddressPhysicalAddressDLI_5d0811327dce4e478e5057e55e7230c9))

                                                Else
                    currentAction = SessionTrace("44. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2...")
                    currentAction = SessionTrace("44.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2...")
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                    If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2

                    currentAction = SessionTrace("45. Call Function 'Retrieve addresses by id' with parameters (Process date, User company of the address, Id value of the address, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                    Dim _AddressDLICollection_201e32ad018844188004c74eac1aede3 As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                    _AddressDLICollection_201e32ad018844188004c74eac1aede3 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesByIdDLI(processDate:=HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.EffectiveDate, userCompany:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation, typeOfAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection = _AddressDLICollection_201e32ad018844188004c74eac1aede3
                    isNullResult = (IsNothing(_AddressDLICollection_201e32ad018844188004c74eac1aede3))

                    currentAction = SessionTrace("46. If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then")
                    If HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection.Count <> 0 Then

                        currentAction = SessionTrace("47. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                        currentAction = SessionTrace("47.1. HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).I...")
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                        If IsNothing(HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = HT5NNCotizacionMiSaludValeOroParametersInstance.AddressDLICollection(0).InternalAddressKey

                        currentAction = SessionTrace("48. Call Function 'Retrieve a physical address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                        Dim _AddressPhysicalAddressDLI_775f8bef550a48dcafb1b6435ff560ca As InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                        _AddressPhysicalAddressDLI_775f8bef550a48dcafb1b6435ff560ca = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrievePhysicalAddressDLI(processDate:=Date.Today, addressId:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, internalAddressKey:=HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey, consumer:=HT5NNCotizacionMiSaludValeOroParametersInstance.ConsumerInformation)
                        HT5NNCotizacionMiSaludValeOroParametersInstance.AddressPhysicalAddressDLI = _AddressPhysicalAddressDLI_775f8bef550a48dcafb1b6435ff560ca
                        isNullResult = (IsNothing(_AddressPhysicalAddressDLI_775f8bef550a48dcafb1b6435ff560ca))

                                                            End If
                                                        End If
                                                    End If
            currentAction = SessionTrace("49. HT5NNCotizacionMiSaludValeOroParametersInstance.CantAsegAdicionales = 0...")
            currentAction = SessionTrace("49.1. HT5NNCotizacionMiSaludValeOroParametersInstance.CantAsegAdicionales = 0...")

            HT5NNCotizacionMiSaludValeOroParametersInstance.CantAsegAdicionales = 0

            currentAction = SessionTrace("50. For Each ValCliRoleItemA As 'InMotionGIT.Policy.Entity...' In 'HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation...'")
            For Each ValCliRoleItemA As InMotionGIT.Policy.Entity.Contracts.Role In HT5NNCotizacionMiSaludValeOroParametersInstance.RiskInformation.Roles

                currentAction = SessionTrace("51. If (ValCliRoleItemA.ClientRole <> 1 AND ValCliRoleItemA.ClientRole <> 2 AND ... Then")
                If (ValCliRoleItemA.ClientRole <> 1 AndAlso ValCliRoleItemA.ClientRole <> 2 AndAlso ValCliRoleItemA.ClientRole <> 13 AndAlso ValCliRoleItemA.ClientRole <> 16) Then

                    currentAction = SessionTrace("52. HT5NNCotizacionMiSaludValeOroParametersInstance.CantAsegAdicionales = HT5NNCotizacionMiSaludValeOroParametersInstance.CantAsegAdicionales + 1...")
                    currentAction = SessionTrace("52.1. HT5NNCotizacionMiSaludValeOroParametersInstance.CantAsegAdicionales = HT5NNCotizacionMiSaludValeOroParametersInstance.CantAsegAdicionales + 1...")

                    HT5NNCotizacionMiSaludValeOroParametersInstance.CantAsegAdicionales = HT5NNCotizacionMiSaludValeOroParametersInstance.CantAsegAdicionales + 1

                                                                End If
                                                            Next
            currentAction = SessionTrace("53. If HT5NNCotizacionMiSaludValeOroParametersInstance.CantAsegAdicionales <> 0 Then")
            If HT5NNCotizacionMiSaludValeOroParametersInstance.CantAsegAdicionales <> 0 Then

                currentAction = SessionTrace("54. tabAsegAd.Visible = true")
                currentAction = SessionTrace("54.1. tabAsegAd.Visible = true...")
                resultData.AddControlBehavior("tabAsegAd", "show")

                                                                End If

        End Sub
#End Region
#Region "Utilities"

        Private Shared Sub ParametersToDictionary(formData As HT5NNCotizacionMiSaludValeOroParameters, ByRef target As Dictionary(Of String, Object))
            If IsNothing(target) Then
                target = New Dictionary(Of String, Object)

                target.Add("RiskInformation", formData.RiskInformation)
                target.Add("uwcaseid", formData.uwcaseid)
                target.Add("uwreqid", formData.uwreqid)
                target.Add("InsuredAmount", formData.InsuredAmount)
                target.Add("InsuredAmountSelected", formData.InsuredAmountSelected)
                target.Add("PlanType", formData.PlanType)
                target.Add("ClientExistInDB", formData.ClientExistInDB)
                target.Add("eMail", formData.eMail)
                target.Add("Currency", formData.Currency)
                target.Add("QueryType", formData.QueryType)
                target.Add("MasaCorporal", formData.MasaCorporal)
                target.Add("Age", formData.Age)
                target.Add("MessagePopUp", formData.MessagePopUp)
                target.Add("MessageIndicator", formData.MessageIndicator)
                target.Add("ProducerClientID", formData.ProducerClientID)
                target.Add("BeneficiaryType", formData.BeneficiaryType)
                target.Add("DefaultAddresses", formData.DefaultAddresses)
                target.Add("LaboratoryRequired", formData.LaboratoryRequired)
                target.Add("LaboratorySelectedByUser", formData.LaboratorySelectedByUser)
                target.Add("PrimaryInsured", formData.PrimaryInsured)
                target.Add("SendMailIndicator", formData.SendMailIndicator)
                target.Add("MailToProducerIndicator", formData.MailToProducerIndicator)
                target.Add("InRuleErros", formData.InRuleErros)
                target.Add("AccumulatedAmount", formData.AccumulatedAmount)
                target.Add("CancelledPoliciesQuantity", formData.CancelledPoliciesQuantity)
                target.Add("OtherPoliciesSameRiskQuantity", formData.OtherPoliciesSameRiskQuantity)
                target.Add("InRuleMessage", formData.InRuleMessage)
                target.Add("ConsumerInformation", formData.ConsumerInformation)
                target.Add("OnLinePrintIndicator", formData.OnLinePrintIndicator)
                target.Add("OnLinePrintResult", formData.OnLinePrintResult)
                target.Add("PolicyDocument", formData.PolicyDocument)
                target.Add("ErrorsFound", formData.ErrorsFound)
                target.Add("ReportURL", formData.ReportURL)
                target.Add("FormStatus", formData.FormStatus)
                target.Add("OnLinePrint", formData.OnLinePrint)
                target.Add("StatusRun", formData.StatusRun)
                target.Add("StatusCase", formData.StatusCase)
                target.Add("RecoveryCaseIndicator", formData.RecoveryCaseIndicator)
                target.Add("AnswerDiabetes", formData.AnswerDiabetes)
                target.Add("AnswerHeart", formData.AnswerHeart)
                target.Add("AnswerCancer", formData.AnswerCancer)
                target.Add("SumInsuredToOffer", formData.SumInsuredToOffer)
                target.Add("PaymentMethod", formData.PaymentMethod)
                target.Add("ProductMasterDescription", formData.ProductMasterDescription)
                target.Add("AddressPhysicalAddressDLI", formData.AddressPhysicalAddressDLI)
                target.Add("PreviousPayment", formData.PreviousPayment)
                target.Add("ClienteIndicado", formData.ClienteIndicado)
                target.Add("ServiceResultData", formData.ServiceResultData)
                target.Add("CompleteAddress", formData.CompleteAddress)
                target.Add("AddresseMailDLI", formData.AddresseMailDLI)
                target.Add("AddressDLICollection", formData.AddressDLICollection)
                target.Add("ErroresActualizacion", formData.ErroresActualizacion)
                target.Add("ModulePoliza", formData.ModulePoliza)
                target.Add("VerificarCuestionariosIndicador", formData.VerificarCuestionariosIndicador)
                target.Add("PlanillaModificacion", formData.PlanillaModificacion)
                target.Add("PlanillaVisualizacion", formData.PlanillaVisualizacion)
                target.Add("ProductDescription", formData.ProductDescription)
                target.Add("PrimaTotalAnual", formData.PrimaTotalAnual)
                target.Add("PrimaRecibo", formData.PrimaRecibo)
                target.Add("PremiumDetailCollection", formData.PremiumDetailCollection)
                target.Add("MonedaRecibo", formData.MonedaRecibo)
                target.Add("CurrentYear", formData.CurrentYear)
                target.Add("MesTarjeta", formData.MesTarjeta)
                target.Add("AnoTarjeta", formData.AnoTarjeta)
                target.Add("ClientIncluded", formData.ClientIncluded)
                target.Add("ImagenMostrada", formData.ImagenMostrada)
                target.Add("ImagenIncluida", formData.ImagenIncluida)
                target.Add("IsAnonymous", formData.IsAnonymous)
                target.Add("UnderwritingCase", formData.UnderwritingCase)
                target.Add("RiskInformationCollection", formData.RiskInformationCollection)
                target.Add("Certificado", formData.Certificado)
                target.Add("ProductMaster", formData.ProductMaster)
                target.Add("PolicyID", formData.PolicyID)
                target.Add("PolicyOwner", formData.PolicyOwner)
                target.Add("RoleAdicional", formData.RoleAdicional)
                target.Add("CantAsegAdicionales", formData.CantAsegAdicionales)
                target.Add("AsegExistInDB", formData.AsegExistInDB)
                target.Add("UltimoCertificado", formData.UltimoCertificado)
                target.Add("AgregarAsegurado", formData.AgregarAsegurado)
                target.Add("ListaAsegurados", formData.ListaAsegurados)
                target.Add("Descripcion", formData.Descripcion)
                target.Add("Codigo", formData.Codigo)
                target.Add("UsercodeBO", formData.UsercodeBO)
                target.Add("UsercodeFASI", formData.UsercodeFASI)
                target.Add("AseguradoProcesar", formData.AseguradoProcesar)
                target.Add("CodigoNumerico", formData.CodigoNumerico)
                target.Add("CodigoString", formData.CodigoString)
                target.Add("AccionEjecutarAA", formData.AccionEjecutarAA)
                target.Add("RoleCollection", formData.RoleCollection)
                target.Add("RoleCompletar", formData.RoleCompletar)
                target.Add("AseguradoCompletar", formData.AseguradoCompletar)
                target.Add("HealthQuestionnaires", formData.HealthQuestionnaires)
                target.Add("BadHealth", formData.BadHealth)
                target.Add("Consecutivo", formData.Consecutivo)
            Else
                target("RiskInformation") = formData.RiskInformation
                target("uwcaseid") = formData.uwcaseid
                target("uwreqid") = formData.uwreqid
                target("InsuredAmount") = formData.InsuredAmount
                target("InsuredAmountSelected") = formData.InsuredAmountSelected
                target("PlanType") = formData.PlanType
                target("ClientExistInDB") = formData.ClientExistInDB
                target("eMail") = formData.eMail
                target("Currency") = formData.Currency
                target("QueryType") = formData.QueryType
                target("MasaCorporal") = formData.MasaCorporal
                target("Age") = formData.Age
                target("MessagePopUp") = formData.MessagePopUp
                target("MessageIndicator") = formData.MessageIndicator
                target("ProducerClientID") = formData.ProducerClientID
                target("BeneficiaryType") = formData.BeneficiaryType
                target("DefaultAddresses") = formData.DefaultAddresses
                target("LaboratoryRequired") = formData.LaboratoryRequired
                target("LaboratorySelectedByUser") = formData.LaboratorySelectedByUser
                target("PrimaryInsured") = formData.PrimaryInsured
                target("SendMailIndicator") = formData.SendMailIndicator
                target("MailToProducerIndicator") = formData.MailToProducerIndicator
                target("InRuleErros") = formData.InRuleErros
                target("AccumulatedAmount") = formData.AccumulatedAmount
                target("CancelledPoliciesQuantity") = formData.CancelledPoliciesQuantity
                target("OtherPoliciesSameRiskQuantity") = formData.OtherPoliciesSameRiskQuantity
                target("InRuleMessage") = formData.InRuleMessage
                target("ConsumerInformation") = formData.ConsumerInformation
                target("OnLinePrintIndicator") = formData.OnLinePrintIndicator
                target("OnLinePrintResult") = formData.OnLinePrintResult
                target("PolicyDocument") = formData.PolicyDocument
                target("ErrorsFound") = formData.ErrorsFound
                target("ReportURL") = formData.ReportURL
                target("FormStatus") = formData.FormStatus
                target("OnLinePrint") = formData.OnLinePrint
                target("StatusRun") = formData.StatusRun
                target("StatusCase") = formData.StatusCase
                target("RecoveryCaseIndicator") = formData.RecoveryCaseIndicator
                target("AnswerDiabetes") = formData.AnswerDiabetes
                target("AnswerHeart") = formData.AnswerHeart
                target("AnswerCancer") = formData.AnswerCancer
                target("SumInsuredToOffer") = formData.SumInsuredToOffer
                target("PaymentMethod") = formData.PaymentMethod
                target("ProductMasterDescription") = formData.ProductMasterDescription
                target("AddressPhysicalAddressDLI") = formData.AddressPhysicalAddressDLI
                target("PreviousPayment") = formData.PreviousPayment
                target("ClienteIndicado") = formData.ClienteIndicado
                target("ServiceResultData") = formData.ServiceResultData
                target("CompleteAddress") = formData.CompleteAddress
                target("AddresseMailDLI") = formData.AddresseMailDLI
                target("AddressDLICollection") = formData.AddressDLICollection
                target("ErroresActualizacion") = formData.ErroresActualizacion
                target("ModulePoliza") = formData.ModulePoliza
                target("VerificarCuestionariosIndicador") = formData.VerificarCuestionariosIndicador
                target("PlanillaModificacion") = formData.PlanillaModificacion
                target("PlanillaVisualizacion") = formData.PlanillaVisualizacion
                target("ProductDescription") = formData.ProductDescription
                target("PrimaTotalAnual") = formData.PrimaTotalAnual
                target("PrimaRecibo") = formData.PrimaRecibo
                target("PremiumDetailCollection") = formData.PremiumDetailCollection
                target("MonedaRecibo") = formData.MonedaRecibo
                target("CurrentYear") = formData.CurrentYear
                target("MesTarjeta") = formData.MesTarjeta
                target("AnoTarjeta") = formData.AnoTarjeta
                target("ClientIncluded") = formData.ClientIncluded
                target("ImagenMostrada") = formData.ImagenMostrada
                target("ImagenIncluida") = formData.ImagenIncluida
                target("IsAnonymous") = formData.IsAnonymous
                target("UnderwritingCase") = formData.UnderwritingCase
                target("RiskInformationCollection") = formData.RiskInformationCollection
                target("Certificado") = formData.Certificado
                target("ProductMaster") = formData.ProductMaster
                target("PolicyID") = formData.PolicyID
                target("PolicyOwner") = formData.PolicyOwner
                target("RoleAdicional") = formData.RoleAdicional
                target("CantAsegAdicionales") = formData.CantAsegAdicionales
                target("AsegExistInDB") = formData.AsegExistInDB
                target("UltimoCertificado") = formData.UltimoCertificado
                target("AgregarAsegurado") = formData.AgregarAsegurado
                target("ListaAsegurados") = formData.ListaAsegurados
                target("Descripcion") = formData.Descripcion
                target("Codigo") = formData.Codigo
                target("UsercodeBO") = formData.UsercodeBO
                target("UsercodeFASI") = formData.UsercodeFASI
                target("AseguradoProcesar") = formData.AseguradoProcesar
                target("CodigoNumerico") = formData.CodigoNumerico
                target("CodigoString") = formData.CodigoString
                target("AccionEjecutarAA") = formData.AccionEjecutarAA
                target("RoleCollection") = formData.RoleCollection
                target("RoleCompletar") = formData.RoleCompletar
                target("AseguradoCompletar") = formData.AseguradoCompletar
                target("HealthQuestionnaires") = formData.HealthQuestionnaires
                target("BadHealth") = formData.BadHealth
                target("Consecutivo") = formData.Consecutivo
            End If
        End Sub

        Private Shared Sub GetTransferParameters(parametersData As HT5NNCotizacionMiSaludValeOroParameters, fromid As String)
            Dim fromDocumentCache As Object = Nothing

            If Not String.IsNullOrEmpty(fromid) Then
                fromDocumentCache = HttpContext.Current.Session(fromid)
                HttpContext.Current.Session.Remove(fromid)

            Else
                fromDocumentCache = HttpContext.Current.Session(HttpContext.Current.Session("fromid"))
                HttpContext.Current.Session.Remove(HttpContext.Current.Session("fromid"))
                HttpContext.Current.Session.Remove("fromid")
            End If

            If Not IsNothing(fromDocumentCache) Then
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("RiskInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("uwcaseid", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("uwreqid", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("InsuredAmount", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("InsuredAmountSelected", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PlanType", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClientExistInDB", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("eMail", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Currency", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("QueryType", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("MasaCorporal", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Age", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("MessagePopUp", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("MessageIndicator", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProducerClientID", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("BeneficiaryType", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("DefaultAddresses", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("LaboratoryRequired", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("LaboratorySelectedByUser", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PrimaryInsured", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("SendMailIndicator", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("MailToProducerIndicator", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("InRuleErros", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AccumulatedAmount", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CancelledPoliciesQuantity", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OtherPoliciesSameRiskQuantity", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("InRuleMessage", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ConsumerInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OnLinePrintIndicator", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OnLinePrintResult", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PolicyDocument", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ErrorsFound", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ReportURL", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("FormStatus", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OnLinePrint", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("StatusRun", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("StatusCase", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("RecoveryCaseIndicator", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AnswerDiabetes", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AnswerHeart", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AnswerCancer", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("SumInsuredToOffer", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PaymentMethod", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProductMasterDescription", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AddressPhysicalAddressDLI", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PreviousPayment", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClienteIndicado", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ServiceResultData", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CompleteAddress", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AddresseMailDLI", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AddressDLICollection", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ErroresActualizacion", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ModulePoliza", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("VerificarCuestionariosIndicador", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PlanillaModificacion", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PlanillaVisualizacion", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProductDescription", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PrimaTotalAnual", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PrimaRecibo", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PremiumDetailCollection", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("MonedaRecibo", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CurrentYear", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("MesTarjeta", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AnoTarjeta", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClientIncluded", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ImagenMostrada", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ImagenIncluida", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("IsAnonymous", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UnderwritingCase", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("RiskInformationCollection", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Certificado", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProductMaster", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PolicyID", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PolicyOwner", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("RoleAdicional", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CantAsegAdicionales", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AsegExistInDB", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UltimoCertificado", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AgregarAsegurado", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ListaAsegurados", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Descripcion", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Codigo", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UsercodeBO", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UsercodeFASI", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AseguradoProcesar", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CodigoNumerico", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CodigoString", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AccionEjecutarAA", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("RoleCollection", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("RoleCompletar", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AseguradoCompletar", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("HealthQuestionnaires", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("BadHealth", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Consecutivo", fromDocumentCache, parametersData)
            End If
        End Sub

        Private Shared Function SessionTrace(message As String) As String

            If Not IsNothing(HttpContext.Current.Session("Form.Track")) AndAlso HttpContext.Current.Session("Form.Track").ToString.ToLower = "true" Then
                Dim tracelog As String = HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath")))

                tracelog += String.Format(CultureInfo.InvariantCulture, "{0} {1}<br>{2}", Now.ToString("hh:mm:ss.fff"), message, vbCrLf)
                HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath"))) = tracelog
            End If

            Return message
        End Function

#End Region
#Region "Storage Session Methods"

        Private Shared Function RetrieveFormInformationFromSession(id As String) As HT5NNCotizacionMiSaludValeOroParameters
            Dim source As String = HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.Storage.{0}", id))
            Dim instance As HT5NNCotizacionMiSaludValeOroParameters = Nothing

            If Not String.IsNullOrEmpty(source) Then
                instance = Serialize.Deserialize(Of HT5NNCotizacionMiSaludValeOroParameters)(source)
            End If

            Return instance
        End Function

        Private Shared Sub StoreFormInformationOnSession(instance As HT5NNCotizacionMiSaludValeOroParameters)
            If Not IsNothing(instance) Then
                HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.Storage.{0}", instance.InternalId)) = Serialize.Serialize(Of HT5NNCotizacionMiSaludValeOroParameters)(instance)
                HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.Title.{0}", instance.InternalId)) = "HT5Mi Salud Vale Oro"
              
                If Not IsNothing(HttpContext.Current.Session("Form.Track")) AndAlso
                   HttpContext.Current.Session("Form.Track").ToString.ToLower = "true" Then

                    HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.HT5NNCotizacionMiSaludValeOro", instance.InternalId)) = instance
                End If

                If Not IsNothing(HttpContext.Current.Session("Form.Track.Parameters")) AndAlso
                   HttpContext.Current.Session("Form.Track.Parameters").ToString.ToLower = "true" Then

                    If Not IsNothing(HttpContext.Current.Session("Form.Track")) AndAlso HttpContext.Current.Session("Form.Track").ToString.ToLower = "true" Then
                        InMotionGIT.Common.Helpers.FileHandler.SaveContent(String.Format(CultureInfo.InvariantCulture, "{0}\{1}.HT5NNCotizacionMiSaludValeOro.txt",
                                                                                         ConfigurationManager.AppSettings("Path.Logs"), instance.InternalId),
                                                                                          HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture,
                                                                                                                     "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath"))))
                    End If

                    InMotionGIT.Common.Helpers.Serialize.SerializeToFile(Of HT5NNCotizacionMiSaludValeOroParameters)(instance,
                                                                                                String.Format(CultureInfo.InvariantCulture,
                                                                                                              "{0}\{1}.HT5NNCotizacionMiSaludValeOro.xml", ConfigurationManager.AppSettings("Path.Logs"), instance.InternalId), True)
                End If			
            End If
        End Sub

#End Region


#Region "Contracts Mappers"

        Private Shared Function EntryDataToClass(parametersData As HT5NNCotizacionMiSaludValeOroParameters, formData As EntryData) As HT5NNCotizacionMiSaludValeOroParameters
            If IsNothing(parametersData) Then
                parametersData = New HT5NNCotizacionMiSaludValeOroParameters
            End If

            If IsNothing(parametersData.RiskInformation) Then
                parametersData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
            End If
            If IsNothing(parametersData.RiskInformation.HealthLineOfBusiness) Then
                parametersData.RiskInformation.HealthLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness
            End If
            If IsNothing(parametersData.RiskInformation.Policy) Then
                parametersData.RiskInformation.Policy = New InMotionGIT.Policy.Entity.Contracts.Policy
            End If
            If IsNothing(parametersData.ClientIncluded) Then
                parametersData.ClientIncluded = New InMotionGIT.Client.Entity.Contracts.Client
            End If
            If IsNothing(parametersData.RiskInformation.Roles) Then
                parametersData.RiskInformation.Roles = New InMotionGIT.Policy.Entity.Contracts.RoleCollection
            End If
            If IsNothing(parametersData.RoleAdicional) Then
                parametersData.RoleAdicional = New InMotionGIT.Policy.Entity.Contracts.Role
            End If
            If IsNothing(parametersData.RoleAdicional.Client) Then
                parametersData.RoleAdicional.Client = New InMotionGIT.Client.Entity.Contracts.Client
            End If
            If IsNothing(parametersData.RiskInformation.CoveragesWithCalculatedPremium) Then
                parametersData.RiskInformation.CoveragesWithCalculatedPremium = New InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremiumCollection
            End If
            If IsNothing(parametersData.RiskInformation.PrimaryInsured) Then
                parametersData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
            End If
            If IsNothing(parametersData.RiskInformation.PrimaryInsured.Client) Then
                parametersData.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
            End If
            If IsNothing(parametersData.AddresseMailDLI) Then
                parametersData.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
            End If
            If IsNothing(parametersData.AddresseMailDLI.eMailAddress) Then
                parametersData.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Contract.General.eMailAddress
            End If
            If IsNothing(parametersData.RoleCompletar) Then
                parametersData.RoleCompletar = New InMotionGIT.Policy.Entity.Contracts.Role
            End If
            If IsNothing(parametersData.RoleCompletar.Client) Then
                parametersData.RoleCompletar.Client = New InMotionGIT.Client.Entity.Contracts.Client
            End If
            If IsNothing(parametersData.HealthQuestionnaires) Then
                parametersData.HealthQuestionnaires = New InMotionGIT.Questionnaires.HealthQuestionnaires
            End If
            If IsNothing(parametersData.HealthQuestionnaires.QuestionnaireByInsuredPersons) Then
                parametersData.HealthQuestionnaires.QuestionnaireByInsuredPersons = New InMotionGIT.Questionnaires.QuestionnaireByInsuredPersonCollection
            End If

            With parametersData
                .InternalId = formData.InstanceFormId
                .RiskInformation.EffectiveDate = formData.RiskInformationEffectiveDate
                .uwcaseid = formData.uwcaseid
                .RiskInformation.HealthLineOfBusiness.InsuredAmount = formData.RiskInformationHealthLineOfBusinessInsuredAmount
                .Currency = formData.Currency
                .RiskInformation.Policy.PaymentFrequency = formData.RiskInformationPolicyPaymentFrequency
                .RiskInformation.PaymentMethod = formData.RiskInformationPaymentMethod
                .ClientIncluded.Gender = formData.ClientIncludedGender
                .ClientIncluded.SmokerIndicator = formData.ClientIncludedSmokerIndicator
                .ClientIncluded.BirthDate = formData.ClientIncludedBirthDate

                .AseguradoProcesar = formData.AseguradoProcesar
                .RoleAdicional.ClientRole = formData.RoleAdicionalClientRole
                .RoleAdicional.Client.BirthDate = formData.RoleAdicionalClientBirthDate
                .RoleAdicional.Client.Gender = formData.RoleAdicionalClientGender

                .RiskInformation.PrimaryInsured.Client.ClientID = formData.RiskInformationPrimaryInsuredClientClientID
                .RiskInformation.PrimaryInsured.Client.FirstName = formData.RiskInformationPrimaryInsuredClientFirstName
                .RiskInformation.PrimaryInsured.Client.LastName = formData.RiskInformationPrimaryInsuredClientLastName
                .RiskInformation.PrimaryInsured.Client.LastName2 = formData.RiskInformationPrimaryInsuredClientLastName2
                .AddresseMailDLI.eMailAddress.eMail = formData.AddresseMailDLIeMailAddresseMail

                .AseguradoCompletar = formData.AseguradoCompletar
                .RoleCompletar.ClientRole = formData.RoleCompletarClientRole
                .RoleCompletar.Client.BirthDate = formData.RoleCompletarClientBirthDate
                .RoleCompletar.Client.Gender = formData.RoleCompletarClientGender
                .RoleCompletar.Client.ClientID = formData.RoleCompletarClientClientID
                .RoleCompletar.Client.FirstName = formData.RoleCompletarClientFirstName
                .RoleCompletar.Client.LastName = formData.RoleCompletarClientLastName
                .RoleCompletar.Client.LastName2 = formData.RoleCompletarClientLastName2

                .BadHealth = formData.BadHealth
                .RiskInformation.LineOfBusiness = formData.RiskInformationLineOfBusiness
                .RiskInformation.ProductCode = formData.RiskInformationProductCode
            End With

            Return parametersData
        End Function

        Private Shared Function ClassToEntryData(formData As EntryData, parametersData As HT5NNCotizacionMiSaludValeOroParameters) As EntryData
            formData = New EntryData

            With formData
                .InstanceFormId = parametersData.InternalId
                .ProductMasterDescription = parametersData.ProductMasterDescription
                If Not IsNothing(parametersData.RiskInformation) Then
                    .RiskInformationEffectiveDate = parametersData.RiskInformation.EffectiveDate
                End If
                .uwcaseid = parametersData.uwcaseid
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.HealthLineOfBusiness) Then
                    .RiskInformationHealthLineOfBusinessInsuredAmount = parametersData.RiskInformation.HealthLineOfBusiness.InsuredAmount
                End If
                .Currency = parametersData.Currency
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.Policy) Then
                    .RiskInformationPolicyPaymentFrequency = parametersData.RiskInformation.Policy.PaymentFrequency
                End If
                If Not IsNothing(parametersData.RiskInformation) Then
                    .RiskInformationPaymentMethod = parametersData.RiskInformation.PaymentMethod
                End If
                If Not IsNothing(parametersData.ClientIncluded) Then
                    .ClientIncludedGender = parametersData.ClientIncluded.Gender
                End If
                If Not IsNothing(parametersData.ClientIncluded) Then
                    .ClientIncludedSmokerIndicator = parametersData.ClientIncluded.SmokerIndicator
                End If
                If Not IsNothing(parametersData.ClientIncluded) Then
                    .ClientIncludedBirthDate = parametersData.ClientIncluded.BirthDate
                End If
                .Rolegrid_Role = New List(Of Rolegrid_RoleItem)

                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.Roles) Then
                    Dim newItem as Rolegrid_RoleItem
                    
                    For Each itemData As InMotionGIT.Policy.Entity.Contracts.Role In parametersData.RiskInformation.Roles
                        newItem = New Rolegrid_RoleItem
                        
                        With newItem
                            .ClientRole = itemData.ClientRole
                            .BirthDate = itemData.BirthDate
                            If Not IsNothing(itemData.Client) Then
                                .ClientGender = itemData.Client.Gender
                            End If
                            .UserCode = itemData.UserCode
                            .IsDeletedMark = itemData.IsDeletedMark                        
                        End With
                        
                        .Rolegrid_Role.Add(newItem)
                    Next
                End If


                .AseguradoProcesar = parametersData.AseguradoProcesar
                If Not IsNothing(parametersData.RoleAdicional) Then
                    .RoleAdicionalClientRole = parametersData.RoleAdicional.ClientRole
                End If
                If Not IsNothing(parametersData.RoleAdicional) AndAlso Not IsNothing(parametersData.RoleAdicional.Client) Then
                    .RoleAdicionalClientBirthDate = parametersData.RoleAdicional.Client.BirthDate
                End If
                If Not IsNothing(parametersData.RoleAdicional) AndAlso Not IsNothing(parametersData.RoleAdicional.Client) Then
                    .RoleAdicionalClientGender = parametersData.RoleAdicional.Client.Gender
                End If
                .CoverageWithCalculatedPremium_CoverageWithCalculatedPremium = New List(Of CoverageWithCalculatedPremium_CoverageWithCalculatedPremiumItem)

                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.CoveragesWithCalculatedPremium) Then
                    Dim newItem as CoverageWithCalculatedPremium_CoverageWithCalculatedPremiumItem
                    
                    For Each itemData As InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium In parametersData.RiskInformation.CoveragesWithCalculatedPremium
                        newItem = New CoverageWithCalculatedPremium_CoverageWithCalculatedPremiumItem
                        
                        With newItem
                            .Description = itemData.Description
                            .InsuredAmount = itemData.InsuredAmount
                            .AnnualPremium = itemData.AnnualPremium
                            .SelectedByDefault = itemData.SelectedByDefault
                            .CoverageCode = itemData.CoverageCode                        
                        End With
                        
                        .CoverageWithCalculatedPremium_CoverageWithCalculatedPremium.Add(newItem)
                    Next
                End If


                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured.Client) Then
                    .RiskInformationPrimaryInsuredClientClientID = parametersData.RiskInformation.PrimaryInsured.Client.ClientID
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured.Client) Then
                    .RiskInformationPrimaryInsuredClientFirstName = parametersData.RiskInformation.PrimaryInsured.Client.FirstName
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured.Client) Then
                    .RiskInformationPrimaryInsuredClientLastName = parametersData.RiskInformation.PrimaryInsured.Client.LastName
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured.Client) Then
                    .RiskInformationPrimaryInsuredClientLastName2 = parametersData.RiskInformation.PrimaryInsured.Client.LastName2
                End If
                If Not IsNothing(parametersData.AddresseMailDLI) AndAlso Not IsNothing(parametersData.AddresseMailDLI.eMailAddress) Then
                    .AddresseMailDLIeMailAddresseMail = parametersData.AddresseMailDLI.eMailAddress.eMail
                End If
                .RoleCompletar_Role = New List(Of RoleCompletar_RoleItem)

                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.Roles) Then
                    Dim newItem as RoleCompletar_RoleItem
                    
                    For Each itemData As InMotionGIT.Policy.Entity.Contracts.Role In parametersData.RiskInformation.Roles
                        newItem = New RoleCompletar_RoleItem
                        
                        With newItem
                            .ClientRole = itemData.ClientRole
                            .ClientID = itemData.ClientID
                            If Not IsNothing(itemData.Client) Then
                                .ClientFirstName = itemData.Client.FirstName
                            End If
                            If Not IsNothing(itemData.Client) Then
                                .ClientLastName = itemData.Client.LastName
                            End If
                            If Not IsNothing(itemData.Client) Then
                                .ClientLastName2 = itemData.Client.LastName2
                            End If
                            .BirthDate = itemData.BirthDate
                            If Not IsNothing(itemData.Client) Then
                                .ClientGender = itemData.Client.Gender
                            End If
                            .UserCode = itemData.UserCode                        
                        End With
                        
                        .RoleCompletar_Role.Add(newItem)
                    Next
                End If


                .AseguradoCompletar = parametersData.AseguradoCompletar
                If Not IsNothing(parametersData.RoleCompletar) Then
                    .RoleCompletarClientRole = parametersData.RoleCompletar.ClientRole
                End If
                If Not IsNothing(parametersData.RoleCompletar) AndAlso Not IsNothing(parametersData.RoleCompletar.Client) Then
                    .RoleCompletarClientBirthDate = parametersData.RoleCompletar.Client.BirthDate
                End If
                If Not IsNothing(parametersData.RoleCompletar) AndAlso Not IsNothing(parametersData.RoleCompletar.Client) Then
                    .RoleCompletarClientGender = parametersData.RoleCompletar.Client.Gender
                End If
                If Not IsNothing(parametersData.RoleCompletar) AndAlso Not IsNothing(parametersData.RoleCompletar.Client) Then
                    .RoleCompletarClientClientID = parametersData.RoleCompletar.Client.ClientID
                End If
                If Not IsNothing(parametersData.RoleCompletar) AndAlso Not IsNothing(parametersData.RoleCompletar.Client) Then
                    .RoleCompletarClientFirstName = parametersData.RoleCompletar.Client.FirstName
                End If
                If Not IsNothing(parametersData.RoleCompletar) AndAlso Not IsNothing(parametersData.RoleCompletar.Client) Then
                    .RoleCompletarClientLastName = parametersData.RoleCompletar.Client.LastName
                End If
                If Not IsNothing(parametersData.RoleCompletar) AndAlso Not IsNothing(parametersData.RoleCompletar.Client) Then
                    .RoleCompletarClientLastName2 = parametersData.RoleCompletar.Client.LastName2
                End If
                .QuestionnaireByInsuredPerson_QuestionnaireByInsuredPerson = New List(Of QuestionnaireByInsuredPerson_QuestionnaireByInsuredPersonItem)

                If Not IsNothing(parametersData.HealthQuestionnaires) AndAlso Not IsNothing(parametersData.HealthQuestionnaires.QuestionnaireByInsuredPersons) Then
                    Dim newItem as QuestionnaireByInsuredPerson_QuestionnaireByInsuredPersonItem
                    
                    For Each itemData As InMotionGIT.Questionnaires.QuestionnaireByInsuredPerson In parametersData.HealthQuestionnaires.QuestionnaireByInsuredPersons
                        newItem = New QuestionnaireByInsuredPerson_QuestionnaireByInsuredPersonItem
                        
                        With newItem
                            .CompleteCliename = itemData.CompleteCliename
                            .ClientID = itemData.ClientID                        
                        End With
                        
                        .QuestionnaireByInsuredPerson_QuestionnaireByInsuredPerson.Add(newItem)
                    Next
                End If


                .BadHealth = parametersData.BadHealth
                If Not IsNothing(parametersData.RiskInformation) Then
                    .RiskInformationLineOfBusiness = parametersData.RiskInformation.LineOfBusiness
                End If
                If Not IsNothing(parametersData.RiskInformation) Then
                    .RiskInformationProductCode = parametersData.RiskInformation.ProductCode
                End If
            End With

            Return formData
        End Function

#End Region

#Region "Common Utilities"

        Private Shared Sub SetDefaultValuesFromQueryString(formData As HT5NNCotizacionMiSaludValeOroParameters)
            If HttpContext.Current.Request.QueryString("uwcaseid").IsNotEmpty Then
                formData.uwcaseid = HttpContext.Current.Request.QueryString("uwcaseid")
            End If
            If HttpContext.Current.Request.QueryString("uwreqid").IsNotEmpty Then
                formData.uwreqid = HttpContext.Current.Request.QueryString("uwreqid")
            End If
            If HttpContext.Current.Request.QueryString("InsuredAmount").IsNotEmpty Then
                formData.InsuredAmount = HttpContext.Current.Request.QueryString("InsuredAmount")
            End If
            If HttpContext.Current.Request.QueryString("InsuredAmountSelected").IsNotEmpty Then
                formData.InsuredAmountSelected = HttpContext.Current.Request.QueryString("InsuredAmountSelected")
            End If
            If HttpContext.Current.Request.QueryString("PlanType").IsNotEmpty Then
                formData.PlanType = HttpContext.Current.Request.QueryString("PlanType")
            End If
            If HttpContext.Current.Request.QueryString("ClientExistInDB").IsNotEmpty Then
                formData.ClientExistInDB = HttpContext.Current.Request.QueryString("ClientExistInDB")
            End If
            If HttpContext.Current.Request.QueryString("eMail").IsNotEmpty Then
                formData.eMail = HttpContext.Current.Request.QueryString("eMail")
            End If
            If HttpContext.Current.Request.QueryString("Currency").IsNotEmpty Then
                formData.Currency = HttpContext.Current.Request.QueryString("Currency")
            End If
            If HttpContext.Current.Request.QueryString("QueryType").IsNotEmpty Then
                formData.QueryType = HttpContext.Current.Request.QueryString("QueryType")
            End If
            If HttpContext.Current.Request.QueryString("MasaCorporal").IsNotEmpty Then
                formData.MasaCorporal = HttpContext.Current.Request.QueryString("MasaCorporal")
            End If
            If HttpContext.Current.Request.QueryString("Age").IsNotEmpty Then
                formData.Age = HttpContext.Current.Request.QueryString("Age")
            End If
            If HttpContext.Current.Request.QueryString("MessagePopUp").IsNotEmpty Then
                formData.MessagePopUp = HttpContext.Current.Request.QueryString("MessagePopUp")
            End If
            If HttpContext.Current.Request.QueryString("MessageIndicator").IsNotEmpty Then
                formData.MessageIndicator = HttpContext.Current.Request.QueryString("MessageIndicator")
            End If
            If HttpContext.Current.Request.QueryString("ProducerClientID").IsNotEmpty Then
                formData.ProducerClientID = HttpContext.Current.Request.QueryString("ProducerClientID")
            End If
            If HttpContext.Current.Request.QueryString("BeneficiaryType").IsNotEmpty Then
                formData.BeneficiaryType = HttpContext.Current.Request.QueryString("BeneficiaryType")
            End If
            If HttpContext.Current.Request.QueryString("DefaultAddresses").IsNotEmpty Then
                formData.DefaultAddresses = HttpContext.Current.Request.QueryString("DefaultAddresses")
            End If
            If HttpContext.Current.Request.QueryString("LaboratoryRequired").IsNotEmpty Then
                formData.LaboratoryRequired = HttpContext.Current.Request.QueryString("LaboratoryRequired")
            End If
            If HttpContext.Current.Request.QueryString("LaboratorySelectedByUser").IsNotEmpty Then
                formData.LaboratorySelectedByUser = HttpContext.Current.Request.QueryString("LaboratorySelectedByUser")
            End If
            If HttpContext.Current.Request.QueryString("PrimaryInsured").IsNotEmpty Then
                formData.PrimaryInsured = HttpContext.Current.Request.QueryString("PrimaryInsured")
            End If
            If HttpContext.Current.Request.QueryString("SendMailIndicator").IsNotEmpty Then
                formData.SendMailIndicator = HttpContext.Current.Request.QueryString("SendMailIndicator")
            End If
            If HttpContext.Current.Request.QueryString("MailToProducerIndicator").IsNotEmpty Then
                formData.MailToProducerIndicator = HttpContext.Current.Request.QueryString("MailToProducerIndicator")
            End If
            If HttpContext.Current.Request.QueryString("InRuleErros").IsNotEmpty Then
                formData.InRuleErros = HttpContext.Current.Request.QueryString("InRuleErros")
            End If
            If HttpContext.Current.Request.QueryString("AccumulatedAmount").IsNotEmpty Then
                formData.AccumulatedAmount = HttpContext.Current.Request.QueryString("AccumulatedAmount")
            End If
            If HttpContext.Current.Request.QueryString("CancelledPoliciesQuantity").IsNotEmpty Then
                formData.CancelledPoliciesQuantity = HttpContext.Current.Request.QueryString("CancelledPoliciesQuantity")
            End If
            If HttpContext.Current.Request.QueryString("OtherPoliciesSameRiskQuantity").IsNotEmpty Then
                formData.OtherPoliciesSameRiskQuantity = HttpContext.Current.Request.QueryString("OtherPoliciesSameRiskQuantity")
            End If
            If HttpContext.Current.Request.QueryString("InRuleMessage").IsNotEmpty Then
                formData.InRuleMessage = HttpContext.Current.Request.QueryString("InRuleMessage")
            End If
            If HttpContext.Current.Request.QueryString("OnLinePrintIndicator").IsNotEmpty Then
                formData.OnLinePrintIndicator = HttpContext.Current.Request.QueryString("OnLinePrintIndicator")
            End If
            If HttpContext.Current.Request.QueryString("OnLinePrintResult").IsNotEmpty Then
                formData.OnLinePrintResult = HttpContext.Current.Request.QueryString("OnLinePrintResult")
            End If
            If HttpContext.Current.Request.QueryString("PolicyDocument").IsNotEmpty Then
                formData.PolicyDocument = HttpContext.Current.Request.QueryString("PolicyDocument")
            End If
            If HttpContext.Current.Request.QueryString("ErrorsFound").IsNotEmpty Then
                formData.ErrorsFound = HttpContext.Current.Request.QueryString("ErrorsFound")
            End If
            If HttpContext.Current.Request.QueryString("ReportURL").IsNotEmpty Then
                formData.ReportURL = HttpContext.Current.Request.QueryString("ReportURL")
            End If
            If HttpContext.Current.Request.QueryString("FormStatus").IsNotEmpty Then
                formData.FormStatus = HttpContext.Current.Request.QueryString("FormStatus")
            End If
            If HttpContext.Current.Request.QueryString("StatusRun").IsNotEmpty Then
                formData.StatusRun = HttpContext.Current.Request.QueryString("StatusRun")
            End If
            If HttpContext.Current.Request.QueryString("StatusCase").IsNotEmpty Then
                formData.StatusCase = HttpContext.Current.Request.QueryString("StatusCase")
            End If
            If HttpContext.Current.Request.QueryString("RecoveryCaseIndicator").IsNotEmpty Then
                formData.RecoveryCaseIndicator = HttpContext.Current.Request.QueryString("RecoveryCaseIndicator")
            End If
            If HttpContext.Current.Request.QueryString("AnswerDiabetes").IsNotEmpty Then
                formData.AnswerDiabetes = HttpContext.Current.Request.QueryString("AnswerDiabetes")
            End If
            If HttpContext.Current.Request.QueryString("AnswerHeart").IsNotEmpty Then
                formData.AnswerHeart = HttpContext.Current.Request.QueryString("AnswerHeart")
            End If
            If HttpContext.Current.Request.QueryString("AnswerCancer").IsNotEmpty Then
                formData.AnswerCancer = HttpContext.Current.Request.QueryString("AnswerCancer")
            End If
            If HttpContext.Current.Request.QueryString("PaymentMethod").IsNotEmpty Then
                formData.PaymentMethod = HttpContext.Current.Request.QueryString("PaymentMethod")
            End If
            If HttpContext.Current.Request.QueryString("ProductMasterDescription").IsNotEmpty Then
                formData.ProductMasterDescription = HttpContext.Current.Request.QueryString("ProductMasterDescription")
            End If
            If HttpContext.Current.Request.QueryString("PreviousPayment").IsNotEmpty Then
                formData.PreviousPayment = HttpContext.Current.Request.QueryString("PreviousPayment")
            End If
            If HttpContext.Current.Request.QueryString("ClienteIndicado").IsNotEmpty Then
                formData.ClienteIndicado = HttpContext.Current.Request.QueryString("ClienteIndicado")
            End If
            If HttpContext.Current.Request.QueryString("CompleteAddress").IsNotEmpty Then
                formData.CompleteAddress = HttpContext.Current.Request.QueryString("CompleteAddress")
            End If
            If HttpContext.Current.Request.QueryString("VerificarCuestionariosIndicador").IsNotEmpty Then
                formData.VerificarCuestionariosIndicador = HttpContext.Current.Request.QueryString("VerificarCuestionariosIndicador")
            End If
            If HttpContext.Current.Request.QueryString("PlanillaModificacion").IsNotEmpty Then
                formData.PlanillaModificacion = HttpContext.Current.Request.QueryString("PlanillaModificacion")
            End If
            If HttpContext.Current.Request.QueryString("PlanillaVisualizacion").IsNotEmpty Then
                formData.PlanillaVisualizacion = HttpContext.Current.Request.QueryString("PlanillaVisualizacion")
            End If
            If HttpContext.Current.Request.QueryString("ProductDescription").IsNotEmpty Then
                formData.ProductDescription = HttpContext.Current.Request.QueryString("ProductDescription")
            End If
            If HttpContext.Current.Request.QueryString("PrimaTotalAnual").IsNotEmpty Then
                formData.PrimaTotalAnual = HttpContext.Current.Request.QueryString("PrimaTotalAnual")
            End If
            If HttpContext.Current.Request.QueryString("PrimaRecibo").IsNotEmpty Then
                formData.PrimaRecibo = HttpContext.Current.Request.QueryString("PrimaRecibo")
            End If
            If HttpContext.Current.Request.QueryString("MonedaRecibo").IsNotEmpty Then
                formData.MonedaRecibo = HttpContext.Current.Request.QueryString("MonedaRecibo")
            End If
            If HttpContext.Current.Request.QueryString("CurrentYear").IsNotEmpty Then
                formData.CurrentYear = HttpContext.Current.Request.QueryString("CurrentYear")
            End If
            If HttpContext.Current.Request.QueryString("MesTarjeta").IsNotEmpty Then
                formData.MesTarjeta = HttpContext.Current.Request.QueryString("MesTarjeta")
            End If
            If HttpContext.Current.Request.QueryString("AnoTarjeta").IsNotEmpty Then
                formData.AnoTarjeta = HttpContext.Current.Request.QueryString("AnoTarjeta")
            End If
            If HttpContext.Current.Request.QueryString("ImagenMostrada").IsNotEmpty Then
                formData.ImagenMostrada = HttpContext.Current.Request.QueryString("ImagenMostrada")
            End If
            If HttpContext.Current.Request.QueryString("ImagenIncluida").IsNotEmpty Then
                formData.ImagenIncluida = HttpContext.Current.Request.QueryString("ImagenIncluida")
            End If
            If HttpContext.Current.Request.QueryString("IsAnonymous").IsNotEmpty Then
                formData.IsAnonymous = HttpContext.Current.Request.QueryString("IsAnonymous")
            End If
            If HttpContext.Current.Request.QueryString("Certificado").IsNotEmpty Then
                formData.Certificado = HttpContext.Current.Request.QueryString("Certificado")
            End If
            If HttpContext.Current.Request.QueryString("PolicyID").IsNotEmpty Then
                formData.PolicyID = HttpContext.Current.Request.QueryString("PolicyID")
            End If
            If HttpContext.Current.Request.QueryString("CantAsegAdicionales").IsNotEmpty Then
                formData.CantAsegAdicionales = HttpContext.Current.Request.QueryString("CantAsegAdicionales")
            End If
            If HttpContext.Current.Request.QueryString("AsegExistInDB").IsNotEmpty Then
                formData.AsegExistInDB = HttpContext.Current.Request.QueryString("AsegExistInDB")
            End If
            If HttpContext.Current.Request.QueryString("UltimoCertificado").IsNotEmpty Then
                formData.UltimoCertificado = HttpContext.Current.Request.QueryString("UltimoCertificado")
            End If
            If HttpContext.Current.Request.QueryString("AgregarAsegurado").IsNotEmpty Then
                formData.AgregarAsegurado = HttpContext.Current.Request.QueryString("AgregarAsegurado")
            End If
            If HttpContext.Current.Request.QueryString("ListaAsegurados").IsNotEmpty Then
                formData.ListaAsegurados = HttpContext.Current.Request.QueryString("ListaAsegurados")
            End If
            If HttpContext.Current.Request.QueryString("Descripcion").IsNotEmpty Then
                formData.Descripcion = HttpContext.Current.Request.QueryString("Descripcion")
            End If
            If HttpContext.Current.Request.QueryString("Codigo").IsNotEmpty Then
                formData.Codigo = HttpContext.Current.Request.QueryString("Codigo")
            End If
            If HttpContext.Current.Request.QueryString("UsercodeBO").IsNotEmpty Then
                formData.UsercodeBO = HttpContext.Current.Request.QueryString("UsercodeBO")
            End If
            If HttpContext.Current.Request.QueryString("UsercodeFASI").IsNotEmpty Then
                formData.UsercodeFASI = HttpContext.Current.Request.QueryString("UsercodeFASI")
            End If
            If HttpContext.Current.Request.QueryString("AseguradoProcesar").IsNotEmpty Then
                formData.AseguradoProcesar = HttpContext.Current.Request.QueryString("AseguradoProcesar")
            End If
            If HttpContext.Current.Request.QueryString("CodigoNumerico").IsNotEmpty Then
                formData.CodigoNumerico = HttpContext.Current.Request.QueryString("CodigoNumerico")
            End If
            If HttpContext.Current.Request.QueryString("CodigoString").IsNotEmpty Then
                formData.CodigoString = HttpContext.Current.Request.QueryString("CodigoString")
            End If
            If HttpContext.Current.Request.QueryString("AccionEjecutarAA").IsNotEmpty Then
                formData.AccionEjecutarAA = HttpContext.Current.Request.QueryString("AccionEjecutarAA")
            End If
            If HttpContext.Current.Request.QueryString("AseguradoCompletar").IsNotEmpty Then
                formData.AseguradoCompletar = HttpContext.Current.Request.QueryString("AseguradoCompletar")
            End If
            If HttpContext.Current.Request.QueryString("BadHealth").IsNotEmpty Then
                formData.BadHealth = HttpContext.Current.Request.QueryString("BadHealth")
            End If
            If HttpContext.Current.Request.QueryString("Consecutivo").IsNotEmpty Then
                formData.Consecutivo = HttpContext.Current.Request.QueryString("Consecutivo")
            End If
        End Sub	

        Private Sub ValidateParametersInstance(ByRef formData As HT5NNCotizacionMiSaludValeOroParameters)
            If IsNothing(formData.RiskInformation) Then
                formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
            End If
            If IsNothing(formData.RiskInformation.HealthLineOfBusiness) Then
                formData.RiskInformation.HealthLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness
            End If
            If IsNothing(formData.RiskInformation.Policy) Then
                formData.RiskInformation.Policy = New InMotionGIT.Policy.Entity.Contracts.Policy
            End If
            If IsNothing(formData.ClientIncluded) Then
                formData.ClientIncluded = New InMotionGIT.Client.Entity.Contracts.Client
            End If
            If IsNothing(formData.RiskInformation.Roles) Then
                formData.RiskInformation.Roles = New InMotionGIT.Policy.Entity.Contracts.RoleCollection
            End If
            If IsNothing(formData.RoleAdicional) Then
                formData.RoleAdicional = New InMotionGIT.Policy.Entity.Contracts.Role
            End If
            If IsNothing(formData.RoleAdicional.Client) Then
                formData.RoleAdicional.Client = New InMotionGIT.Client.Entity.Contracts.Client
            End If
            If IsNothing(formData.RiskInformation.CoveragesWithCalculatedPremium) Then
                formData.RiskInformation.CoveragesWithCalculatedPremium = New InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremiumCollection
            End If
            If IsNothing(formData.RiskInformation.PrimaryInsured) Then
                formData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
            End If
            If IsNothing(formData.RiskInformation.PrimaryInsured.Client) Then
                formData.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
            End If
            If IsNothing(formData.AddresseMailDLI) Then
                formData.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
            End If
            If IsNothing(formData.AddresseMailDLI.eMailAddress) Then
                formData.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Contract.General.eMailAddress
            End If
            If IsNothing(formData.RoleCompletar) Then
                formData.RoleCompletar = New InMotionGIT.Policy.Entity.Contracts.Role
            End If
            If IsNothing(formData.RoleCompletar.Client) Then
                formData.RoleCompletar.Client = New InMotionGIT.Client.Entity.Contracts.Client
            End If
            If IsNothing(formData.HealthQuestionnaires) Then
                formData.HealthQuestionnaires = New InMotionGIT.Questionnaires.HealthQuestionnaires
            End If
            If IsNothing(formData.HealthQuestionnaires.QuestionnaireByInsuredPersons) Then
                formData.HealthQuestionnaires.QuestionnaireByInsuredPersons = New InMotionGIT.Questionnaires.QuestionnaireByInsuredPersonCollection
            End If

        End Sub

#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property ProductMasterDescription As String
            <DataMember()> Public Property RiskInformationEffectiveDate As System.DateTime
            <DataMember()> Public Property uwcaseid As Int64
            <DataMember()> Public Property RiskInformationHealthLineOfBusinessInsuredAmount As System.Int64
            <DataMember()> Public Property Currency As Int32
            <DataMember()> Public Property RiskInformationPolicyPaymentFrequency As System.Int32
            <DataMember()> Public Property RiskInformationPaymentMethod As System.Int32
            <DataMember()> Public Property ClientIncludedGender As System.String
            <DataMember()> Public Property ClientIncludedSmokerIndicator As System.String
            <DataMember()> Public Property ClientIncludedBirthDate As System.DateTime
            <DataMember()> Public Property RiskInformationRolesClientRole As System.Int32
            <DataMember()> Public Property RiskInformationRolesClientBirthDate As System.DateTime
            <DataMember()> Public Property RiskInformationRolesClientGender As System.String
            <DataMember()> Public Property Rolegrid_Role As List(Of Rolegrid_RoleItem)
            <DataMember()> Public Property AseguradoProcesar As Int32
            <DataMember()> Public Property RoleAdicionalClientRole As System.Int32
            <DataMember()> Public Property RoleAdicionalClientBirthDate As System.DateTime
            <DataMember()> Public Property RoleAdicionalClientGender As System.String
            <DataMember()> Public Property RiskInformationCoveragesWithCalculatedPremiumDescription As System.String
            <DataMember()> Public Property RiskInformationCoveragesWithCalculatedPremiumInsuredAmount As System.Decimal
            <DataMember()> Public Property RiskInformationCoveragesWithCalculatedPremiumAnnualPremium As System.Decimal
            <DataMember()> Public Property CoverageWithCalculatedPremium_CoverageWithCalculatedPremium As List(Of CoverageWithCalculatedPremium_CoverageWithCalculatedPremiumItem)
            <DataMember()> Public Property RiskInformationPrimaryInsuredClientClientID As System.String
            <DataMember()> Public Property RiskInformationPrimaryInsuredClientFirstName As System.String
            <DataMember()> Public Property RiskInformationPrimaryInsuredClientLastName As System.String
            <DataMember()> Public Property RiskInformationPrimaryInsuredClientLastName2 As System.String
            <DataMember()> Public Property AddressPhysicalAddressDLI As InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
            <DataMember()> Public Property AddresseMailDLIeMailAddresseMail As System.String
            <DataMember()> Public Property RiskInformationRolesClientID As System.String
            <DataMember()> Public Property RiskInformationRolesClientFirstName As System.String
            <DataMember()> Public Property RiskInformationRolesClientLastName As System.String
            <DataMember()> Public Property RiskInformationRolesClientLastName2 As System.String
            <DataMember()> Public Property RoleCompletar_Role As List(Of RoleCompletar_RoleItem)
            <DataMember()> Public Property AseguradoCompletar As Int32
            <DataMember()> Public Property RoleCompletarClientRole As System.Int32
            <DataMember()> Public Property RoleCompletarClientBirthDate As System.DateTime
            <DataMember()> Public Property RoleCompletarClientGender As System.String
            <DataMember()> Public Property RoleCompletarClientClientID As System.String
            <DataMember()> Public Property RoleCompletarClientFirstName As System.String
            <DataMember()> Public Property RoleCompletarClientLastName As System.String
            <DataMember()> Public Property RoleCompletarClientLastName2 As System.String
            <DataMember()> Public Property HealthQuestionnairesQuestionnaireByInsuredPersonsCompleteCliename As System.String
            <DataMember()> Public Property QuestionnaireByInsuredPerson_QuestionnaireByInsuredPerson As List(Of QuestionnaireByInsuredPerson_QuestionnaireByInsuredPersonItem)
            <DataMember()> Public Property BadHealth As Boolean
            <DataMember()> Public Property RiskInformationLineOfBusiness As System.Int32
            <DataMember()> Public Property RiskInformationProductCode As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Rolegrid_RoleItem

            <DataMember()> Public Property ClientRole As System.Int32
            <DataMember()> Public Property BirthDate As System.DateTime
            <DataMember()> Public Property ClientGender As System.String
            <DataMember()> Public Property UserCode As System.Int32
            <DataMember()> Public Property IsDeletedMark As System.Boolean

        End Class

        <Serializable()>
        <DataContract()>
        Public Class CoverageWithCalculatedPremium_CoverageWithCalculatedPremiumItem

            <DataMember()> Public Property Description As System.String
            <DataMember()> Public Property InsuredAmount As System.Decimal
            <DataMember()> Public Property AnnualPremium As System.Decimal
            <DataMember()> Public Property SelectedByDefault As System.Boolean
            <DataMember()> Public Property CoverageCode As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class RoleCompletar_RoleItem

            <DataMember()> Public Property ClientRole As System.Int32
            <DataMember()> Public Property ClientID As System.String
            <DataMember()> Public Property ClientFirstName As System.String
            <DataMember()> Public Property ClientLastName As System.String
            <DataMember()> Public Property ClientLastName2 As System.String
            <DataMember()> Public Property BirthDate As System.DateTime
            <DataMember()> Public Property ClientGender As System.String
            <DataMember()> Public Property UserCode As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class QuestionnaireByInsuredPerson_QuestionnaireByInsuredPersonItem

            <DataMember()> Public Property CompleteCliename As System.String
            <DataMember()> Public Property ClientID As System.String

        End Class

        <Serializable()>
        Public Class HT5NNCotizacionMiSaludValeOroParameters
            Inherits InMotionGIT.FrontOffice.Support.DataType.FormBase(Of HT5NNCotizacionMiSaludValeOroParameters)

            Public Property RiskInformation As InMotionGIT.Policy.Entity.Contracts.RiskInformation
            Public Property uwcaseid As Int64
            Public Property uwreqid As Int64
            Public Property InsuredAmount As Decimal
            Public Property InsuredAmountSelected As Decimal
            Public Property PlanType As Int32
            Public Property ClientExistInDB As Boolean
            Public Property eMail As String
            Public Property Currency As Int32
            Public Property QueryType As Int32
            Public Property MasaCorporal As Decimal
            Public Property Age As Int32
            Public Property MessagePopUp As String
            Public Property MessageIndicator As Boolean
            Public Property ProducerClientID As String
            Public Property BeneficiaryType As Int32
            Public Property DefaultAddresses As Boolean
            Public Property LaboratoryRequired As Boolean
            Public Property LaboratorySelectedByUser As Boolean
            Public Property PrimaryInsured As String
            Public Property SendMailIndicator As Boolean
            Public Property MailToProducerIndicator As Boolean
            Public Property InRuleErros As Boolean
            Public Property AccumulatedAmount As Decimal
            Public Property CancelledPoliciesQuantity As Int32
            Public Property OtherPoliciesSameRiskQuantity As Int32
            Public Property InRuleMessage As String
            Public Property ConsumerInformation As InMotionGIT.Common.Contracts.Process.ConsumerInformation
            Public Property OnLinePrintIndicator As Boolean
            Public Property OnLinePrintResult As Int32
            Public Property PolicyDocument As String
            Public Property ErrorsFound As Boolean
            Public Property ReportURL As String
            Public Property FormStatus As Int32
            Public Property OnLinePrint As Int32
            Public Property StatusRun As Boolean
            Public Property StatusCase As Int32
            Public Property RecoveryCaseIndicator As Boolean
            Public Property AnswerDiabetes As String
            Public Property AnswerHeart As String
            Public Property AnswerCancer As String
            Public Property SumInsuredToOffer As InMotionGIT.Policy.Entity.Contracts.RequestCollection
            Public Property PaymentMethod As Int32
            Public Property ProductMasterDescription As String
            Public Property AddressPhysicalAddressDLI As InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
            Public Property PreviousPayment As Boolean
            Public Property ClienteIndicado As String
            Public Property ServiceResultData As InMotionGIT.Common.Contracts.ServiceResultData
            Public Property CompleteAddress As String
            Public Property AddresseMailDLI As InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
            Public Property AddressDLICollection As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
            Public Property ErroresActualizacion As InMotionGIT.Common.Contracts.Errors.ErrorCollection
            Public Property ModulePoliza As InMotionGIT.Policy.Entity.Contracts.Module
            Public Property VerificarCuestionariosIndicador As Boolean
            Public Property PlanillaModificacion As String
            Public Property PlanillaVisualizacion As String
            Public Property ProductDescription As String
            Public Property PrimaTotalAnual As Decimal
            Public Property PrimaRecibo As Decimal
            Public Property PremiumDetailCollection As InMotionGIT.Bill.Entity.Contracts.PremiumDetailCollection
            Public Property MonedaRecibo As Int32
            Public Property CurrentYear As Int32
            Public Property MesTarjeta As Int32
            Public Property AnoTarjeta As Int32
            Public Property ClientIncluded As InMotionGIT.Client.Entity.Contracts.Client
            Public Property ImagenMostrada As String
            Public Property ImagenIncluida As String
            Public Property IsAnonymous As Boolean
            Public Property UnderwritingCase As InMotionGIT.Underwriting.Contracts.UnderwritingCase
            Public Property RiskInformationCollection As InMotionGIT.Policy.Entity.Contracts.RiskInformationCollection
            Public Property Certificado As Int64
            Public Property ProductMaster As InMotionGIT.Product.Entity.Contracts.ProductMaster
            Public Property PolicyID As Int64
            Public Property PolicyOwner As InMotionGIT.Policy.Entity.Contracts.Role
            Public Property RoleAdicional As InMotionGIT.Policy.Entity.Contracts.Role
            Public Property CantAsegAdicionales As Int32
            Public Property AsegExistInDB As Boolean
            Public Property UltimoCertificado As Int64
            Public Property AgregarAsegurado As Boolean
            Public Property ListaAsegurados As String
            Public Property Descripcion As String
            Public Property Codigo As Int32
            Public Property UsercodeBO As Int32
            Public Property UsercodeFASI As Int32
            Public Property AseguradoProcesar As Int32
            Public Property CodigoNumerico As Int32
            Public Property CodigoString As String
            Public Property AccionEjecutarAA As Int32
            Public Property RoleCollection As InMotionGIT.Policy.Entity.Contracts.RoleCollection
            Public Property RoleCompletar As InMotionGIT.Policy.Entity.Contracts.Role
            Public Property AseguradoCompletar As Int32
            Public Property HealthQuestionnaires As InMotionGIT.Questionnaires.HealthQuestionnaires
            Public Property BadHealth As Boolean
            Public Property Consecutivo As Int32

        End Class
#End Region

    End Class

End Namespace