'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Form Designer v7.1.223.1 at 2019-04-03 12:57:42 PM model release 8, Form Generator v1.0.34.31
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class H5CotizacionMiAutoaDoradoActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"

       <WebMethod(EnableSession:=True)>
        Public Shared Function Initialization(id As String, urlid As String, fromid As String) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim instance As New EntryData With {.InstanceFormId = id}
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim currentAction As String = String.Empty
            
            Dim H5CotizacionMiAutoaDoradoParametersInstance As H5CotizacionMiAutoaDoradoParameters = Nothing

            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                
                If id.IsEmpty AndAlso urlid.IsEmpty Then
                    instance.InstanceFormId = System.Guid.NewGuid().ToString
                    
                    With instance

                    End With                
                    
                    H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                    SetDefaultValuesFromQueryString(H5CotizacionMiAutoaDoradoParametersInstance)
                    
                    If fromid.IsNotEmpty Then
                        GetTransferParameters(H5CotizacionMiAutoaDoradoParametersInstance, fromid)
                        ValidateParametersInstance(H5CotizacionMiAutoaDoradoParametersInstance)
                    End If
                Else       
                    instance.InstanceFormId = id.IfEmpty(urlid)
                    H5CotizacionMiAutoaDoradoParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
    
                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance) then
                        H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                        SetDefaultValuesFromQueryString(H5CotizacionMiAutoaDoradoParametersInstance)
                    End If
                End If

                HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath"))) = String.Empty

                If id.IsEmpty AndAlso urlid.IsEmpty Then
                    Form_Initialization(currentAction, H5CotizacionMiAutoaDoradoParametersInstance, resultData)
                Else
                    Form_Load(currentAction, H5CotizacionMiAutoaDoradoParametersInstance, resultData)
                End If


                instance = ClassToEntryData(instance, H5CotizacionMiAutoaDoradoParametersInstance) 
		        
                StoreFormInformation(H5CotizacionMiAutoaDoradoParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5CotizacionMiAutoaDorado", "Initialization", currentAction)
            End Try
            
            Return resultData
        End Function
   
        <WebMethod(EnableSession:=True)>
        Public Shared Function YearOfManufacturedChange(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5CotizacionMiAutoaDoradoParametersInstance As H5CotizacionMiAutoaDoradoParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5CotizacionMiAutoaDoradoParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
    
                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance) then
                        H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                        SetDefaultValuesFromQueryString(H5CotizacionMiAutoaDoradoParametersInstance)
                    End If
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("YearOfManufacturedClick")
                H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                currentAction = SessionTrace("1. If H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.YearOfManufactured Not Is Null Or Not Empty  AND H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.VehicleCode Not Is Null Or Not Empty '' AND ... Then")
                If Not IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.YearOfManufactured) AndAlso Not String.IsNullOrEmpty(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.VehicleCode) AndAlso (IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.ValueOfTheVehicle) OrElse H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.ValueOfTheVehicle = 0) Then

                    currentAction = SessionTrace("2. SELECT TAB_AU_VAL.SVEHCODE, TAB_AU_VAL.NYEAR, TAB_AU_VAL.NCAPITAL FROM TAB_AU_VAL... WHERE TAB_AU_VAL.SVEHCODE = H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.VehicleCode AND TAB_AU_VAL.NYEAR = H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.YearOfManufactured )")
                    isFoundData = False
                              If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation) Then
              H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness) Then
              H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness
          End If 
                           With New DataManagerFactory("SELECT TAB_AU_VAL.NCAPITAL FROM TAB_AU_VAL TAB_AU_VAL  WHERE (TAB_AU_VAL.SVEHCODE = @:TAB_AU_VALSVEHCODE0 AND TAB_AU_VAL.NYEAR = @:TAB_AU_VALNYEAR1)", "TAB_AU_VAL", "Linked.LatCombined")
.AddParameter("TAB_AU_VALSVEHCODE0", DbType.AnsiStringFixedLength, 6, (H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.VehicleCode = String.Empty), H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.VehicleCode)
.AddParameter("TAB_AU_VALNYEAR1", DbType.Int32, 5, False, H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.YearOfManufactured)
 
            H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.ValueOfTheVehicle = .QueryExecuteScalarToDecimal()  
        End With

                    currentAction = SessionTrace("3. If (H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.ValueOfTheVehicle Is Null Or Empty  OR H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.ValueOfTheVehicle = 0) Then")
                    If (IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.ValueOfTheVehicle) OrElse H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.ValueOfTheVehicle = 0) Then

                        currentAction = SessionTrace("4. The message 'No existe valor aseg...' will displayed as 'Popup'")
                        ParametersToDictionary(H5CotizacionMiAutoaDoradoParametersInstance, parametersDictionary)
                        messageAction = "No existe valor asegurado para el año-vehículo indicado"
                        messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                        resultData.AddNotifyPopup(messageAction)
                            End If
                        End If

                instance = ClassToEntryData(instance, H5CotizacionMiAutoaDoradoParametersInstance)
                
                StoreFormInformation(H5CotizacionMiAutoaDoradoParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5CotizacionMiAutoaDorado", "YearOfManufacturedChange", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function VehicleCodeChange(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5CotizacionMiAutoaDoradoParametersInstance As H5CotizacionMiAutoaDoradoParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5CotizacionMiAutoaDoradoParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
    
                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance) then
                        H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                        SetDefaultValuesFromQueryString(H5CotizacionMiAutoaDoradoParametersInstance)
                    End If
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("VehicleCodeClick")
                H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                currentAction = SessionTrace("1. If H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.YearOfManufactured Not Is Null Or Not Empty  AND H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.VehicleCode Not Is Null Or Not Empty '' AND ... Then")
                If Not IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.YearOfManufactured) AndAlso Not String.IsNullOrEmpty(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.VehicleCode) AndAlso (IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.ValueOfTheVehicle) OrElse H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.ValueOfTheVehicle = 0) Then

                    currentAction = SessionTrace("2. SELECT TAB_AU_VAL.SVEHCODE, TAB_AU_VAL.NYEAR, TAB_AU_VAL.NCAPITAL FROM TAB_AU_VAL... WHERE TAB_AU_VAL.SVEHCODE = H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.VehicleCode AND TAB_AU_VAL.NYEAR = H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.YearOfManufactured )")
                    isFoundData = False
                              If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation) Then
              H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness) Then
              H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness
          End If 
                           With New DataManagerFactory("SELECT TAB_AU_VAL.NCAPITAL FROM TAB_AU_VAL TAB_AU_VAL  WHERE (TAB_AU_VAL.SVEHCODE = @:TAB_AU_VALSVEHCODE0 AND TAB_AU_VAL.NYEAR = @:TAB_AU_VALNYEAR1)", "TAB_AU_VAL", "Linked.LatCombined")
.AddParameter("TAB_AU_VALSVEHCODE0", DbType.AnsiStringFixedLength, 6, (H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.VehicleCode = String.Empty), H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.VehicleCode)
.AddParameter("TAB_AU_VALNYEAR1", DbType.Int32, 5, False, H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.YearOfManufactured)
 
            H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.ValueOfTheVehicle = .QueryExecuteScalarToDecimal()  
        End With

                    currentAction = SessionTrace("3. If (H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.ValueOfTheVehicle Is Null Or Empty  OR H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.ValueOfTheVehicle = 0) Then")
                    If (IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.ValueOfTheVehicle) OrElse H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.ValueOfTheVehicle = 0) Then

                        currentAction = SessionTrace("4. The message 'No existe valor aseg...' will displayed as 'Popup'")
                        ParametersToDictionary(H5CotizacionMiAutoaDoradoParametersInstance, parametersDictionary)
                        messageAction = "No existe valor asegurado para el año-vehículo indicado"
                        messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                        resultData.AddNotifyPopup(messageAction)
                            End If
                        End If

                instance = ClassToEntryData(instance, H5CotizacionMiAutoaDoradoParametersInstance)
                
                StoreFormInformation(H5CotizacionMiAutoaDoradoParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5CotizacionMiAutoaDorado", "VehicleCodeChange", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function CotizarClick(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5CotizacionMiAutoaDoradoParametersInstance As H5CotizacionMiAutoaDoradoParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5CotizacionMiAutoaDoradoParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
    
                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance) then
                        H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                        SetDefaultValuesFromQueryString(H5CotizacionMiAutoaDoradoParametersInstance)
                    End If
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("CotizarClick")
                H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                currentAction = SessionTrace("1. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false...")
                currentAction = SessionTrace("1.1. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false...")

                H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false

                currentAction = SessionTrace("2. H5CotizacionMiAutoaDoradoParametersInstance.Age = year(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.Effe...")
                currentAction = SessionTrace("2.1. H5CotizacionMiAutoaDoradoParametersInstance.Age = year(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.Effe...")

                H5CotizacionMiAutoaDoradoParametersInstance.Age = year(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.EffectiveDate)-year(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate)

                currentAction = SessionTrace("3. If H5CotizacionMiAutoaDoradoParametersInstance.Age < 18 Then")
                If H5CotizacionMiAutoaDoradoParametersInstance.Age < 18 Then

                    currentAction = SessionTrace("4. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true...")
                    currentAction = SessionTrace("4.1. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true...")

                    H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true

                    currentAction = SessionTrace("5. The message 'No está permitido qu...' will displayed as 'Splash'")
                    ParametersToDictionary(H5CotizacionMiAutoaDoradoParametersInstance, parametersDictionary)
                    messageAction = "No está permitido que un menor de edad realice una solicitud de póliza via Internet. Por favor diríjase con su representante legal a nuestras oficinas para realizar la solicitud correspondiente."
                    messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                    resultData.AddNotifySplash(messageAction)
                    End If
                currentAction = SessionTrace("6. If H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false Then")
                If H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("7. If H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.YearOfManufactured = 0 OR H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.VehicleCode Is Null Or Empty '' OR ... Then")
                    If H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.YearOfManufactured = 0 OrElse String.IsNullOrEmpty(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.VehicleCode) OrElse H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.ValueOfTheVehicle = 0 Then

                        currentAction = SessionTrace("8. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true...")
                        currentAction = SessionTrace("8.1. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true...")

                        H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true

                        currentAction = SessionTrace("9. The message 'Debe incluir el año,...' will displayed as 'Popup'")
                        ParametersToDictionary(H5CotizacionMiAutoaDoradoParametersInstance, parametersDictionary)
                        messageAction = "Debe incluir el año, el código y el valor del vehículo a asegurar"
                        messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                        resultData.AddNotifyPopup(messageAction)
                                End If
                            End If
                currentAction = SessionTrace("10. If H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false Then")
                If H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("12. Call Shared Sub 'Coverage Rating' with parameters (RiskInformation Object, Error List)")
InMotionGIT.PolicyManager.Services.Rating.Calculate.Process(riskInformation:=H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation, errors:=formContext.Errors)

                    currentAction = SessionTrace("13. Continuar.Visible = true")
                    currentAction = SessionTrace("13.1. Continuar.Visible = true...")
                    resultData.AddControlBehavior("Continuar", "show")

                    currentAction = SessionTrace("14. TcoverCollection.Visible = true, label7.Visible = false")
                    currentAction = SessionTrace("14.1. TcoverCollection.Visible = true...")
                    resultData.AddControlBehavior("TcoverCollection", "show")
                    currentAction = SessionTrace("14.2. label7.Visible = false...")
                    resultData.AddControlBehavior("label7", "hide")

                    currentAction = SessionTrace("15. zone5.Visible = true")
                    currentAction = SessionTrace("15.1. zone5.Visible = true...")
                    resultData.AddControlBehavior("zone5", "show")

                                Else
                    currentAction = SessionTrace("16. TcoverCollection.Visible = false, label7.Visible = true")
                    currentAction = SessionTrace("16.1. TcoverCollection.Visible = false...")
                    resultData.AddControlBehavior("TcoverCollection", "hide")
                    currentAction = SessionTrace("16.2. label7.Visible = true...")
                    resultData.AddControlBehavior("label7", "show")

                    currentAction = SessionTrace("17. Continuar.Visible = false, Cotizar.Enabled = true")
                    currentAction = SessionTrace("17.1. Continuar.Visible = false...")
                    resultData.AddControlBehavior("Continuar", "hide")
                    currentAction = SessionTrace("17.2. Cotizar.Enabled = true...")
                    resultData.AddControlBehavior("Cotizar", "enabled")

                    currentAction = SessionTrace("18. zone5.Visible = false")
                    currentAction = SessionTrace("18.1. zone5.Visible = false...")
                    resultData.AddControlBehavior("zone5", "hide")

                                    End If

                instance = ClassToEntryData(instance, H5CotizacionMiAutoaDoradoParametersInstance)
                
                StoreFormInformation(H5CotizacionMiAutoaDoradoParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5CotizacionMiAutoaDorado", "CotizarClick", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function ContinuarClick(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5CotizacionMiAutoaDoradoParametersInstance As H5CotizacionMiAutoaDoradoParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5CotizacionMiAutoaDoradoParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
    
                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance) then
                        H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                        SetDefaultValuesFromQueryString(H5CotizacionMiAutoaDoradoParametersInstance)
                    End If
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("ContinuarClick")
                H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                currentAction = SessionTrace("1. IBAsegurado.Enabled = false, IBVehiculo.Enabled = false, TcoverCollection.Enabled = false")
                currentAction = SessionTrace("1.1. IBAsegurado.Enabled = false...")
                resultData.AddControlBehavior("IBAsegurado", "disabled")
                currentAction = SessionTrace("1.2. IBVehiculo.Enabled = false...")
                resultData.AddControlBehavior("IBVehiculo", "disabled")
                currentAction = SessionTrace("1.3. TcoverCollection.Enabled = false...")
                resultData.AddControlBehavior("TcoverCollection", "disabled")

                currentAction = SessionTrace("2. tab0.Visible = true, tabcontainer0.ActiveTab = tab0")
                currentAction = SessionTrace("2.1. tab0.Visible = true...")
                resultData.AddControlBehavior("tab0", "show")
                currentAction = SessionTrace("2.2. tabcontainer0.ActiveTab = tab0...")
                resultData.AddControlBehavior("tab0", "active")

                currentAction = SessionTrace("3. If H5CotizacionMiAutoaDoradoParametersInstance.ProducerClientID Not Is Null Or Not Empty '' Then")
                If Not String.IsNullOrEmpty(H5CotizacionMiAutoaDoradoParametersInstance.ProducerClientID) Then

                    currentAction = SessionTrace("4. zone1.Visible = true")
                    currentAction = SessionTrace("4.1. zone1.Visible = true...")
                    resultData.AddControlBehavior("zone1", "show")

                    End If
                currentAction = SessionTrace("5. Cotizar.Visible = false, Continuar.Visible = false")
                currentAction = SessionTrace("5.1. Cotizar.Visible = false...")
                resultData.AddControlBehavior("Cotizar", "hide")
                currentAction = SessionTrace("5.2. Continuar.Visible = false...")
                resultData.AddControlBehavior("Continuar", "hide")

                currentAction = SessionTrace("6. If H5CotizacionMiAutoaDoradoParametersInstance.ClientExistInDB = false Then")
                If H5CotizacionMiAutoaDoradoParametersInstance.ClientExistInDB = false Then

                    currentAction = SessionTrace("7. Gender.Enabled = true, BirthDate.Enabled = true, FirstName.Enabled = true...")
                    currentAction = SessionTrace("7.1. Gender.Enabled = true...")
                    resultData.AddControlBehavior("GenderWrap", "enabled")
                    currentAction = SessionTrace("7.2. BirthDate.Enabled = true...")
                    resultData.AddControlBehavior("BirthDate", "enabled")
                    currentAction = SessionTrace("7.3. FirstName.Enabled = true...")
                    resultData.AddControlBehavior("FirstName", "enabled")
                    currentAction = SessionTrace("7.4. LastName.Enabled = true...")
                    resultData.AddControlBehavior("LastName", "enabled")
                    currentAction = SessionTrace("7.5. LastName2.Enabled = true...")
                    resultData.AddControlBehavior("LastName2", "enabled")

                        Else
                    currentAction = SessionTrace("8. Gender.Enabled = false, BirthDate.Enabled = false, FirstName.Enabled = false...")
                    currentAction = SessionTrace("8.1. Gender.Enabled = false...")
                    resultData.AddControlBehavior("GenderWrap", "disabled")
                    currentAction = SessionTrace("8.2. BirthDate.Enabled = false...")
                    resultData.AddControlBehavior("BirthDate", "disabled")
                    currentAction = SessionTrace("8.3. FirstName.Enabled = false...")
                    resultData.AddControlBehavior("FirstName", "disabled")
                    currentAction = SessionTrace("8.4. LastName.Enabled = false...")
                    resultData.AddControlBehavior("LastName", "disabled")
                    currentAction = SessionTrace("8.5. LastName2.Enabled = false...")
                    resultData.AddControlBehavior("LastName2", "disabled")

                            End If

                instance = ClassToEntryData(instance, H5CotizacionMiAutoaDoradoParametersInstance)
                
                StoreFormInformation(H5CotizacionMiAutoaDoradoParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5CotizacionMiAutoaDorado", "ContinuarClick", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function ClientIDChange(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5CotizacionMiAutoaDoradoParametersInstance As H5CotizacionMiAutoaDoradoParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5CotizacionMiAutoaDoradoParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
    
                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance) then
                        H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                        SetDefaultValuesFromQueryString(H5CotizacionMiAutoaDoradoParametersInstance)
                    End If
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("ClientIDClick")
                H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                currentAction = SessionTrace("1. H5CotizacionMiAutoaDoradoParametersInstance.ClienteIndicado = H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryIn...")
                currentAction = SessionTrace("1.1. H5CotizacionMiAutoaDoradoParametersInstance.ClienteIndicado = H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryIn...")

                H5CotizacionMiAutoaDoradoParametersInstance.ClienteIndicado = H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID

                currentAction = SessionTrace("2. Call 'LLena ceros a la izquierda' workflow in Synchronous mode with tracking")
                WorkflowInArguments = New Dictionary(Of String, Object)

                With WorkflowInArguments
                .Add("context", formContext)
                .Add("CodigoCliente", H5CotizacionMiAutoaDoradoParametersInstance.ClienteIndicado)
                .Add("LargoCodigo", 14)
                End With

                WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("LlenaCerosIzquierdaCodigo", "97e5264d-cb53-46a3-a786-fbcc3bb10ff2", 3, WorkflowInArguments, True, True, HttpContext.Current.Request.UrlReferrer.AbsolutePath, H5CotizacionMiAutoaDoradoParametersInstance.InternalId)

                currentAction += "'Mapping Outputs'"
                H5CotizacionMiAutoaDoradoParametersInstance.ClienteIndicado = WorkflowOutArguments("CodigoCliente")

                currentAction = SessionTrace("3. Call Shared Function 'Retrieve Client' with parameters (Client Identification)")
                If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If

                If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                Dim _Client_ff26db9ad3224b61a8d1b8af29d4a658 As InMotionGIT.Client.Entity.Contracts.Client
                
      _Client_ff26db9ad3224b61a8d1b8af29d4a658 = (New InMotionGIT.Client.Services.ClientManager).Retrieve(clientId:=H5CotizacionMiAutoaDoradoParametersInstance.ClienteIndicado, atDate:=Date.Today, childFilter:= "All")
      isNullResult = (IsNothing(_Client_ff26db9ad3224b61a8d1b8af29d4a658))
      isFoundData  = Not isNullResult
    
                H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client = _Client_ff26db9ad3224b61a8d1b8af29d4a658

                currentAction = SessionTrace("4. If Form.IsNullResult = true Then")
                If isNullResult = true Then

                    currentAction = SessionTrace("5. H5CotizacionMiAutoaDoradoParametersInstance.ClientExistInDB = false...")
                    currentAction = SessionTrace("5.1. H5CotizacionMiAutoaDoradoParametersInstance.ClientExistInDB = false...")

                    H5CotizacionMiAutoaDoradoParametersInstance.ClientExistInDB = false
                    currentAction = SessionTrace("5.2. H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured = Nothing...")
                                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured = Nothing

                    currentAction = SessionTrace("6. H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID = H5CotizacionMiAutoaDoradoParametersInstance.ClienteIndicado...")
                    currentAction = SessionTrace("6.1. H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID = H5CotizacionMiAutoaDoradoParametersInstance.ClienteIndicado...")
                                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID = H5CotizacionMiAutoaDoradoParametersInstance.ClienteIndicado
                    currentAction = SessionTrace("6.2. H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.TypeOfPerson = 1...")
                                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.TypeOfPerson = 1
                    currentAction = SessionTrace("6.3. H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.IsNew = true...")
                                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.IsNew = true
                    currentAction = SessionTrace("6.4. H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate = H5CotizacionMiAutoaDoradoParametersInstance.BirthdateIncluded...")
                                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate = H5CotizacionMiAutoaDoradoParametersInstance.BirthdateIncluded

                    currentAction = SessionTrace("7. FirstName.Enabled = true, LastName.Enabled = true, LastName2.Enabled = true...")
                    currentAction = SessionTrace("7.1. FirstName.Enabled = true...")
                    resultData.AddControlBehavior("FirstName", "enabled")
                    currentAction = SessionTrace("7.2. LastName.Enabled = true...")
                    resultData.AddControlBehavior("LastName", "enabled")
                    currentAction = SessionTrace("7.3. LastName2.Enabled = true...")
                    resultData.AddControlBehavior("LastName2", "enabled")
                    currentAction = SessionTrace("7.4. Gender.Enabled = true...")
                    resultData.AddControlBehavior("GenderWrap", "enabled")

                    Else
                    currentAction = SessionTrace("8. H5CotizacionMiAutoaDoradoParametersInstance.ClientExistInDB = true...")
                    currentAction = SessionTrace("8.1. H5CotizacionMiAutoaDoradoParametersInstance.ClientExistInDB = true...")

                    H5CotizacionMiAutoaDoradoParametersInstance.ClientExistInDB = true
                    currentAction = SessionTrace("8.2. H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.IsNew = false...")
                                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.IsNew = false
                    currentAction = SessionTrace("8.3. H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.IsDirty = true...")
                                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.IsDirty = true

                    currentAction = SessionTrace("9. FirstName.Enabled = false, LastName.Enabled = false, LastName2.Enabled = false...")
                    currentAction = SessionTrace("9.1. FirstName.Enabled = false...")
                    resultData.AddControlBehavior("FirstName", "disabled")
                    currentAction = SessionTrace("9.2. LastName.Enabled = false...")
                    resultData.AddControlBehavior("LastName", "disabled")
                    currentAction = SessionTrace("9.3. LastName2.Enabled = false...")
                    resultData.AddControlBehavior("LastName2", "disabled")
                    currentAction = SessionTrace("9.4. Gender.Enabled = false...")
                    resultData.AddControlBehavior("GenderWrap", "disabled")

                        End If
                currentAction = SessionTrace("10. If H5CotizacionMiAutoaDoradoParametersInstance.ClientExistInDB = true Then")
                If H5CotizacionMiAutoaDoradoParametersInstance.ClientExistInDB = true Then

                    currentAction = SessionTrace("11. If H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate Not Is Null Or Not Empty '' AND H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate <> H5CotizacionMiAutoaDoradoParametersInstance.BirthdateIncluded Then")
                    If Not IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate) AndAlso H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate <> Date.MinValue AndAlso H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate <> H5CotizacionMiAutoaDoradoParametersInstance.BirthdateIncluded Then

                        currentAction = SessionTrace("12. The message 'La información del c...' will displayed as 'Popup'")
                        ParametersToDictionary(H5CotizacionMiAutoaDoradoParametersInstance, parametersDictionary)
                        messageAction = "La información del cliente seleccionado NO coincide con la información del cliente previamente indicado"
                        messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                        resultData.AddNotifyPopup(messageAction)
                        currentAction = SessionTrace("13. tab0.Visible = false, tabcontainer0.ActiveTab = tab1, Continuar.Visible = false")
                        currentAction = SessionTrace("13.1. tab0.Visible = false...")
                        resultData.AddControlBehavior("tab0", "hide")
                        currentAction = SessionTrace("13.2. tabcontainer0.ActiveTab = tab1...")
                        resultData.AddControlBehavior("tab1", "active")
                        currentAction = SessionTrace("13.3. Continuar.Visible = false...")
                        resultData.AddControlBehavior("Continuar", "hide")

                        currentAction = SessionTrace("14. IBAsegurado.Enabled = true, IBVehiculo.Enabled = true, TcoverCollection.Enabled = true...")
                        currentAction = SessionTrace("14.1. IBAsegurado.Enabled = true...")
                        resultData.AddControlBehavior("IBAsegurado", "enabled")
                        currentAction = SessionTrace("14.2. IBVehiculo.Enabled = true...")
                        resultData.AddControlBehavior("IBVehiculo", "enabled")
                        currentAction = SessionTrace("14.3. TcoverCollection.Enabled = true...")
                        resultData.AddControlBehavior("TcoverCollection", "enabled")
                        currentAction = SessionTrace("14.4. Cotizar.Visible = true...")
                        resultData.AddControlBehavior("Cotizar", "show")

                        currentAction = SessionTrace("15. 'H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client' = New 'InMotionGIT.Client.Entity'...'")
                        H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client

                                    End If
                                End If

                instance = ClassToEntryData(instance, H5CotizacionMiAutoaDoradoParametersInstance)
                
                StoreFormInformation(H5CotizacionMiAutoaDoradoParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5CotizacionMiAutoaDorado", "ClientIDChange", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function button3Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5CotizacionMiAutoaDoradoParametersInstance As H5CotizacionMiAutoaDoradoParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5CotizacionMiAutoaDoradoParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
    
                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance) then
                        H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                        SetDefaultValuesFromQueryString(H5CotizacionMiAutoaDoradoParametersInstance)
                    End If
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button3Click")
                H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                currentAction = SessionTrace("1. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false...")
                currentAction = SessionTrace("1.1. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false...")

                H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false

                currentAction = SessionTrace("2. H5CotizacionMiAutoaDoradoParametersInstance.CountRecords = 0...")
                currentAction = SessionTrace("2.1. H5CotizacionMiAutoaDoradoParametersInstance.CountRecords = 0...")

                H5CotizacionMiAutoaDoradoParametersInstance.CountRecords = 0

                currentAction = SessionTrace("3. SELECT AUTO.SCERTYPE, AUTO.SCHASSIS, AUTO.SMOTOR FROM AUTO... WHERE AUTO.SCERTYPE = 2 AND AUTO.SCHASSIS = H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.Chassis OR AUTO.SMOTOR = H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.EngineSerialNumber OR )")
                isFoundData = False
                                       With New DataManagerFactory("SELECT DISTINCT COUNT(AUTO.SCERTYPE) SCERTYPE FROM AUTO AUTO  JOIN CERTIFICAT CERTIFICAT ON CERTIFICAT.SCERTYPE = AUTO.SCERTYPE AND CERTIFICAT.NBRANCH = AUTO.NBRANCH AND CERTIFICAT.NPRODUCT = AUTO.NPRODUCT AND CERTIFICAT.NPOLICY = AUTO.NPOLICY AND CERTIFICAT.NCERTIF = AUTO.NCERTIF WHERE AUTO.SCERTYPE = '2' AND (AUTO.SCHASSIS = @:AUTOSCHASSIS1 OR AUTO.SMOTOR = @:AUTOSMOTOR2 OR AUTO.SREGIST = @:AUTOSREGIST3) AND AUTO.DNULLDATE IS NULL AND CERTIFICAT.SSTATUSVA <> '3'", "AUTO", "Linked.LatCombined")
.AddParameter("AUTOSCHASSIS1", DbType.AnsiStringFixedLength, 40, (H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.Chassis = String.Empty), H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.Chassis)
.AddParameter("AUTOSMOTOR2", DbType.AnsiStringFixedLength, 40, (H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.EngineSerialNumber = String.Empty), H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.EngineSerialNumber)
.AddParameter("AUTOSREGIST3", DbType.AnsiStringFixedLength, 10, (H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.LicensePlate = String.Empty), H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.LicensePlate)
 
            H5CotizacionMiAutoaDoradoParametersInstance.CountRecords = .QueryExecuteScalarToInteger()  
        End With

                currentAction = SessionTrace("4. If H5CotizacionMiAutoaDoradoParametersInstance.CountRecords Not Is Null Or Not Empty  AND H5CotizacionMiAutoaDoradoParametersInstance.CountRecords <> 0 Then")
                If Not IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.CountRecords) AndAlso H5CotizacionMiAutoaDoradoParametersInstance.CountRecords <> 0 Then

                    currentAction = SessionTrace("5. The message 'El vehículo ya se en...' will displayed as 'Popup'")
                    ParametersToDictionary(H5CotizacionMiAutoaDoradoParametersInstance, parametersDictionary)
                    messageAction = "El vehículo ya se encuentra asegurado en otra póliza"
                    messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                    resultData.AddNotifyPopup(messageAction)
                    currentAction = SessionTrace("6. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true...")
                    currentAction = SessionTrace("6.1. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true...")

                    H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true

                    Else
                    currentAction = SessionTrace("7. button3.Visible = false, tab2Direccion.Visible = true, tabcontainer0.ActiveTab = tab2Direccion...")
                    currentAction = SessionTrace("7.1. button3.Visible = false...")
                    resultData.AddControlBehavior("button3", "hide")
                    currentAction = SessionTrace("7.2. tab2Direccion.Visible = true...")
                    resultData.AddControlBehavior("tab2Direccion", "show")
                    currentAction = SessionTrace("7.3. tabcontainer0.ActiveTab = tab2Direccion...")
                    resultData.AddControlBehavior("tab2Direccion", "active")
                    currentAction = SessionTrace("7.4. IAAsegurado.Enabled = false...")
                    resultData.AddControlBehavior("IAAsegurado", "disabled")
                    currentAction = SessionTrace("7.5. IAVehiculo.Enabled = false...")
                    resultData.AddControlBehavior("IAVehiculo", "disabled")

                        End If
                currentAction = SessionTrace("8. H5CotizacionMiAutoaDoradoParametersInstance.CurrentYear = year(Date.Today)...")
                currentAction = SessionTrace("8.1. H5CotizacionMiAutoaDoradoParametersInstance.CurrentYear = year(Date.Today)...")

                H5CotizacionMiAutoaDoradoParametersInstance.CurrentYear = year(Date.Today)


                instance = ClassToEntryData(instance, H5CotizacionMiAutoaDoradoParametersInstance)
                
                StoreFormInformation(H5CotizacionMiAutoaDoradoParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5CotizacionMiAutoaDorado", "button3Click", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function buttonGSdireccionClick(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5CotizacionMiAutoaDoradoParametersInstance As H5CotizacionMiAutoaDoradoParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5CotizacionMiAutoaDoradoParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
    
                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance) then
                        H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                        SetDefaultValuesFromQueryString(H5CotizacionMiAutoaDoradoParametersInstance)
                    End If
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("buttonGSdireccionClick")
                H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                currentAction = SessionTrace("1. buttonGSdireccion.Visible = false, tab2Pago.Visible = true, tabcontainer0.ActiveTab = tab2Pago")
                currentAction = SessionTrace("1.1. buttonGSdireccion.Visible = false...")
                resultData.AddControlBehavior("buttonGSdireccion", "hide")
                currentAction = SessionTrace("1.2. tab2Pago.Visible = true...")
                resultData.AddControlBehavior("tab2Pago", "show")
                currentAction = SessionTrace("1.3. tabcontainer0.ActiveTab = tab2Pago...")
                resultData.AddControlBehavior("tab2Pago", "active")

                currentAction = SessionTrace("2. zone4.Visible = true, button4.Visible = false, OnLinePrintIndicator.Visible = false")
                currentAction = SessionTrace("2.1. zone4.Visible = true...")
                resultData.AddControlBehavior("zone4", "show")
                currentAction = SessionTrace("2.2. button4.Visible = false...")
                resultData.AddControlBehavior("button4", "hide")
                currentAction = SessionTrace("2.3. OnLinePrintIndicator.Visible = false...")
                resultData.AddControlBehavior("OnLinePrintIndicatorWrap", "hide")

                currentAction = SessionTrace("3. zone12.Enabled = false, zone11.Enabled = false")
                currentAction = SessionTrace("3.1. zone12.Enabled = false...")
                resultData.AddControlBehavior("zone12", "disabled")
                currentAction = SessionTrace("3.2. zone11.Enabled = false...")
                resultData.AddControlBehavior("zone11", "disabled")

                currentAction = SessionTrace("4. If H5CotizacionMiAutoaDoradoParametersInstance.eMail Is Null Or Empty '' Then")
                If String.IsNullOrEmpty(H5CotizacionMiAutoaDoradoParametersInstance.eMail) Then

                    currentAction = SessionTrace("5. H5CotizacionMiAutoaDoradoParametersInstance.eMail = H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryIn...")
                    currentAction = SessionTrace("5.1. H5CotizacionMiAutoaDoradoParametersInstance.eMail = H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryIn...")

                    H5CotizacionMiAutoaDoradoParametersInstance.eMail = H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.eMailAddressDefault

                    End If

                instance = ClassToEntryData(instance, H5CotizacionMiAutoaDoradoParametersInstance)
                
                StoreFormInformation(H5CotizacionMiAutoaDoradoParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5CotizacionMiAutoaDorado", "buttonGSdireccionClick", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function AcceptClick(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5CotizacionMiAutoaDoradoParametersInstance As H5CotizacionMiAutoaDoradoParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5CotizacionMiAutoaDoradoParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
    
                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance) then
                        H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                        SetDefaultValuesFromQueryString(H5CotizacionMiAutoaDoradoParametersInstance)
                    End If
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("AcceptClick")
                H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                currentAction = SessionTrace("1. Accept.Visible = false, zone2.Enabled = false")
                currentAction = SessionTrace("1.1. Accept.Visible = false...")
                resultData.AddControlBehavior("Accept", "hide")
                currentAction = SessionTrace("1.2. zone2.Enabled = false...")
                resultData.AddControlBehavior("zone2", "disabled")

                currentAction = SessionTrace("2. zone4.Visible = true, zone5.Visible = true, zone8.Visible = true...")
                currentAction = SessionTrace("2.1. zone4.Visible = true...")
                resultData.AddControlBehavior("zone4", "show")
                currentAction = SessionTrace("2.2. zone5.Visible = true...")
                resultData.AddControlBehavior("zone5", "show")
                currentAction = SessionTrace("2.3. zone8.Visible = true...")
                resultData.AddControlBehavior("zone8", "show")
                currentAction = SessionTrace("2.4. zone6.Visible = true...")
                resultData.AddControlBehavior("zone6", "show")
                currentAction = SessionTrace("2.5. button4.Visible = true...")
                resultData.AddControlBehavior("button4", "show")

                currentAction = SessionTrace("3. H5CotizacionMiAutoaDoradoParametersInstance.PreviousPayment = true...")
                currentAction = SessionTrace("3.1. H5CotizacionMiAutoaDoradoParametersInstance.PreviousPayment = true...")

                H5CotizacionMiAutoaDoradoParametersInstance.PreviousPayment = true

                currentAction = SessionTrace("4. If H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.AutomobileInformation.Mileage > 1000 Then")
                If H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.AutomobileInformation.Mileage > 1000 Then

                    currentAction = SessionTrace("5. H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintIndicator = false...")
                    currentAction = SessionTrace("5.1. H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintIndicator = false...")

                    H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintIndicator = false

                    Else
                    currentAction = SessionTrace("6. OnLinePrintIndicator.Visible = true")
                    currentAction = SessionTrace("6.1. OnLinePrintIndicator.Visible = true...")
                    resultData.AddControlBehavior("OnLinePrintIndicatorWrap", "show")

                        End If

                instance = ClassToEntryData(instance, H5CotizacionMiAutoaDoradoParametersInstance)
                
                StoreFormInformation(H5CotizacionMiAutoaDoradoParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5CotizacionMiAutoaDorado", "AcceptClick", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function button1Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5CotizacionMiAutoaDoradoParametersInstance As H5CotizacionMiAutoaDoradoParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5CotizacionMiAutoaDoradoParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
    
                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance) then
                        H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                        SetDefaultValuesFromQueryString(H5CotizacionMiAutoaDoradoParametersInstance)
                    End If
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button1Click")
                H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                currentAction = SessionTrace("1. H5CotizacionMiAutoaDoradoParametersInstance.PrimaTotalAnual = 0...")
                currentAction = SessionTrace("1.1. H5CotizacionMiAutoaDoradoParametersInstance.PrimaTotalAnual = 0...")

                H5CotizacionMiAutoaDoradoParametersInstance.PrimaTotalAnual = 0

                currentAction = SessionTrace("2. For Each CoverPT As 'InMotionGIT.Policy.Entity...' In 'H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation...'")
                For Each CoverPT As InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium In H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.CoveragesWithCalculatedPremium

                    currentAction = SessionTrace("3. If CoverPT.SelectedByDefault = true Then")
                    If CoverPT.SelectedByDefault = true Then

                        currentAction = SessionTrace("4. H5CotizacionMiAutoaDoradoParametersInstance.PrimaTotalAnual = H5CotizacionMiAutoaDoradoParametersInstance.PrimaTotalAnual+CoverPT.A...")
                        currentAction = SessionTrace("4.1. H5CotizacionMiAutoaDoradoParametersInstance.PrimaTotalAnual = H5CotizacionMiAutoaDoradoParametersInstance.PrimaTotalAnual+CoverPT.A...")

                        H5CotizacionMiAutoaDoradoParametersInstance.PrimaTotalAnual = H5CotizacionMiAutoaDoradoParametersInstance.PrimaTotalAnual+CoverPT.AnnualPremium

                            End If
                        Next
                currentAction = SessionTrace("5. Call 'Envía cotización de automóvil por correo' workflow in Asynchronous mode with tracking")
                WorkflowInArguments = New Dictionary(Of String, Object)

                With WorkflowInArguments
                .Add("context", formContext)
                .Add("RiskInformation", H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation)
                .Add("CorreoMail", H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.eMailAddressDefault)
                .Add("ProductMasterDescription", H5CotizacionMiAutoaDoradoParametersInstance.ProductMasterDescription)
                .Add("PrimaTotalAnual", H5CotizacionMiAutoaDoradoParametersInstance.PrimaTotalAnual)
                End With

                WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("EnviaCotizacionMailAutomovilV2", "5b5fc259-ff70-4f44-8939-a5f069eed28c", 0, WorkflowInArguments, True, False, HttpContext.Current.Request.UrlReferrer.AbsolutePath, H5CotizacionMiAutoaDoradoParametersInstance.InternalId)


                currentAction = SessionTrace("6. The message 'El resumen de la cot...' will displayed as 'Popup'")
                ParametersToDictionary(H5CotizacionMiAutoaDoradoParametersInstance, parametersDictionary)
                messageAction = "El resumen de la cotización ha sido enviado al correo indicado { Value /RiskInformation/PrimaryInsured/Client/eMailAddressDefault }."
                messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                resultData.AddNotifyPopup(messageAction)

                instance = ClassToEntryData(instance, H5CotizacionMiAutoaDoradoParametersInstance)
                
                StoreFormInformation(H5CotizacionMiAutoaDoradoParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5CotizacionMiAutoaDorado", "button1Click", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function button0Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5CotizacionMiAutoaDoradoParametersInstance As H5CotizacionMiAutoaDoradoParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5CotizacionMiAutoaDoradoParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
    
                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance) then
                        H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                        SetDefaultValuesFromQueryString(H5CotizacionMiAutoaDoradoParametersInstance)
                    End If
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button0Click")
                H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                currentAction = SessionTrace("1. Call 'Mi Auto aDorado - Resumen' form with transferring parameters")
                                HttpContext.Current.Session(H5CotizacionMiAutoaDoradoParametersInstance.InternalId) = H5CotizacionMiAutoaDoradoParametersInstance
                HttpContext.Current.Session("fromid") = H5CotizacionMiAutoaDoradoParametersInstance.InternalId
    
                With resultData
                    .AddRedirect(String.Format(CultureInfo.InvariantCulture, "{0}/H5CotizacionAutoResumenPopup.html?fromid={1}", "/fasi/dli/forms", H5CotizacionMiAutoaDoradoParametersInstance.InternalId, ""), "scrollbars=no,resizable=yes,toolbar=no,location=no,directories=no,status=yes,menubar=no,copyhistory=no,width=1000,height=1000,left=100,top=100")
                End With

                instance = ClassToEntryData(instance, H5CotizacionMiAutoaDoradoParametersInstance)
                
                StoreFormInformation(H5CotizacionMiAutoaDoradoParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5CotizacionMiAutoaDorado", "button0Click", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function button2Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5CotizacionMiAutoaDoradoParametersInstance As H5CotizacionMiAutoaDoradoParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5CotizacionMiAutoaDoradoParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
    
                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance) then
                        H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                        SetDefaultValuesFromQueryString(H5CotizacionMiAutoaDoradoParametersInstance)
                    End If
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button2Click")
                H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                currentAction = SessionTrace("1. H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.eMailAddressDefault = H5CotizacionMiAutoaDoradoParametersInstance.eMail...")
                currentAction = SessionTrace("1.1. H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.eMailAddressDefault = H5CotizacionMiAutoaDoradoParametersInstance.eMail...")
                                If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.eMailAddressDefault = H5CotizacionMiAutoaDoradoParametersInstance.eMail

                currentAction = SessionTrace("2. H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.InsuredAmount = H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.Automobil...")
                currentAction = SessionTrace("2.1. H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.InsuredAmount = H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.Automobil...")
                                If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If

                H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.InsuredAmount = H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.ValueOfTheVehicle

                currentAction = SessionTrace("3. Call 'Guardar el caso de manera temporal' workflow in Synchronous mode with tracking")
                WorkflowInArguments = New Dictionary(Of String, Object)

                With WorkflowInArguments
                .Add("RiskInformation", H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation)
                .Add("eMail", H5CotizacionMiAutoaDoradoParametersInstance.eMail)
                .Add("ProducerClientID", H5CotizacionMiAutoaDoradoParametersInstance.ProducerClientID)
                .Add("context", formContext)
                .Add("SendMailIndicator", H5CotizacionMiAutoaDoradoParametersInstance.SendMailIndicator)
                .Add("MailToProducerIndicator", H5CotizacionMiAutoaDoradoParametersInstance.MailToProducerIndicator)
                .Add("uwCaseID", H5CotizacionMiAutoaDoradoParametersInstance.uwcaseid)
                .Add("ClientExistInDB", H5CotizacionMiAutoaDoradoParametersInstance.ClientExistInDB)
                .Add("PlanType", H5CotizacionMiAutoaDoradoParametersInstance.PlanType)
                .Add("PlanillaModificacion", H5CotizacionMiAutoaDoradoParametersInstance.PlanillaModificacion)
                .Add("PlanillaVisualizacion", H5CotizacionMiAutoaDoradoParametersInstance.PlanillaVisualizacion)
                .Add("UsercodeBO", H5CotizacionMiAutoaDoradoParametersInstance.UsercodeBO)
                .Add("UsercodeFASI", H5CotizacionMiAutoaDoradoParametersInstance.UsercodeFASI)
                .Add("UsingVT", True)
                End With

                WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("TemporaryCaseSaveV2", "44f9fb6a-1221-4be2-a226-ba4ff92077ad", 0, WorkflowInArguments, True, True, HttpContext.Current.Request.UrlReferrer.AbsolutePath, H5CotizacionMiAutoaDoradoParametersInstance.InternalId)

                currentAction += "'Mapping Outputs'"
                H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation = WorkflowOutArguments("RiskInformation")
                H5CotizacionMiAutoaDoradoParametersInstance.uwcaseid = WorkflowOutArguments("uwCaseID")

                currentAction = SessionTrace("4. The message 'Se ha generado el si...' will displayed as 'Splash'")
                ParametersToDictionary(H5CotizacionMiAutoaDoradoParametersInstance, parametersDictionary)
                messageAction = "Se ha generado el siguiente caso: { Value /uwcaseid }, en los próximos 3 dias puede recuperar la información y continuar con el proceso de compra. Muchas gracias por visitarnos."
                messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                resultData.AddNotifySplash(messageAction)

                instance = ClassToEntryData(instance, H5CotizacionMiAutoaDoradoParametersInstance)
                
                StoreFormInformation(H5CotizacionMiAutoaDoradoParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5CotizacionMiAutoaDorado", "button2Click", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function button4Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5CotizacionMiAutoaDoradoParametersInstance As H5CotizacionMiAutoaDoradoParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5CotizacionMiAutoaDoradoParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
    
                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance) then
                        H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                        SetDefaultValuesFromQueryString(H5CotizacionMiAutoaDoradoParametersInstance)
                    End If
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button4Click")
                H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                currentAction = SessionTrace("1. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false...")
                currentAction = SessionTrace("1.1. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false...")

                H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false

                currentAction = SessionTrace("2. H5CotizacionMiAutoaDoradoParametersInstance.Age = year(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.Effe...")
                currentAction = SessionTrace("2.1. H5CotizacionMiAutoaDoradoParametersInstance.Age = year(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.Effe...")

                H5CotizacionMiAutoaDoradoParametersInstance.Age = year(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.EffectiveDate)-year(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate)

                currentAction = SessionTrace("3. If H5CotizacionMiAutoaDoradoParametersInstance.Age < 18 Then")
                If H5CotizacionMiAutoaDoradoParametersInstance.Age < 18 Then

                    currentAction = SessionTrace("4. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true...")
                    currentAction = SessionTrace("4.1. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true...")

                    H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true

                    currentAction = SessionTrace("5. The message 'No está permitido qu...' will displayed as 'Splash'")
                    ParametersToDictionary(H5CotizacionMiAutoaDoradoParametersInstance, parametersDictionary)
                    messageAction = "No está permitido que un menor de edad realice una solicitud de póliza via Internet. Por favor diríjase con su representante legal a nuestras oficinas para realizar la solicitud correspondiente."
                    messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                    resultData.AddNotifySplash(messageAction)
                    End If
                currentAction = SessionTrace("6. If H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false Then")
                If H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("7. If H5CotizacionMiAutoaDoradoParametersInstance.MonthCard > 12 Then")
                    If H5CotizacionMiAutoaDoradoParametersInstance.MonthCard > 12 Then

                        currentAction = SessionTrace("8. The message 'Mes de vencimiento i...' will displayed as 'Popup'")
                        ParametersToDictionary(H5CotizacionMiAutoaDoradoParametersInstance, parametersDictionary)
                        messageAction = "Mes de vencimiento inválido..."
                        messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                        resultData.AddNotifyPopup(messageAction)
                        currentAction = SessionTrace("9. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true...")
                        currentAction = SessionTrace("9.1. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true...")

                        H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true

                                End If
                            End If
                currentAction = SessionTrace("10. If H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false Then")
                If H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("11. If H5CotizacionMiAutoaDoradoParametersInstance.YearCard <= H5CotizacionMiAutoaDoradoParametersInstance.CurrentYear Then")
                    If H5CotizacionMiAutoaDoradoParametersInstance.YearCard <= H5CotizacionMiAutoaDoradoParametersInstance.CurrentYear Then

                        currentAction = SessionTrace("12. The message 'Año de vencimiento i...' will displayed as 'Popup'")
                        ParametersToDictionary(H5CotizacionMiAutoaDoradoParametersInstance, parametersDictionary)
                        messageAction = "Año de vencimiento inválido... Debe ser posterior al año actual"
                        messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                        resultData.AddNotifyPopup(messageAction)
                        currentAction = SessionTrace("13. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true...")
                        currentAction = SessionTrace("13.1. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true...")

                        H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true

                                        End If
                                    End If
                currentAction = SessionTrace("14. If H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false Then")
                If H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("15. H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomaticPaymentPolicy.ExpirationDate = New Date(H5CotizacionMiAutoaDoradoParametersInstance.YearCard, _formD...")
                    currentAction = SessionTrace("15.1. H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomaticPaymentPolicy.ExpirationDate = New Date(H5CotizacionMiAutoaDoradoParametersInstance.YearCard, _formD...")
                                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomaticPaymentPolicy) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomaticPaymentPolicy = New InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy
                End If

                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomaticPaymentPolicy.ExpirationDate = New Date(H5CotizacionMiAutoaDoradoParametersInstance.YearCard, H5CotizacionMiAutoaDoradoParametersInstance.MonthCard, 28)

                                        End If
                currentAction = SessionTrace("16. If H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false Then")
                If H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("17. If H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.YearOfManufactured = 0 OR H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.VehicleCode Is Null Or Empty '' OR ... Then")
                    If H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.YearOfManufactured = 0 OrElse String.IsNullOrEmpty(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.VehicleCode) OrElse H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.ValueOfTheVehicle = 0 Then

                        currentAction = SessionTrace("18. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true...")
                        currentAction = SessionTrace("18.1. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true...")

                        H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true

                        currentAction = SessionTrace("19. The message 'Debe incluir el año,...' will displayed as 'Popup'")
                        ParametersToDictionary(H5CotizacionMiAutoaDoradoParametersInstance, parametersDictionary)
                        messageAction = "Debe incluir el año, el código y el valor del vehículo a asegurar"
                        messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                        resultData.AddNotifyPopup(messageAction)
                                                    End If
                                                End If
                currentAction = SessionTrace("20. If H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false Then")
                If H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("21. H5CotizacionMiAutoaDoradoParametersInstance.CountRecords = 0...")
                    currentAction = SessionTrace("21.1. H5CotizacionMiAutoaDoradoParametersInstance.CountRecords = 0...")

                    H5CotizacionMiAutoaDoradoParametersInstance.CountRecords = 0

                    currentAction = SessionTrace("22. SELECT AUTO.SCERTYPE, AUTO.SCHASSIS, AUTO.SMOTOR FROM AUTO... WHERE AUTO.SCERTYPE = 2 AND AUTO.SCHASSIS = H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.AutomobileInformation.Chassis AND AUTO.SMOTOR = H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.AutomobileInformation.EngineSerialNumber AND )")
                    isFoundData = False
                                               With New DataManagerFactory("SELECT DISTINCT COUNT(AUTO.SCERTYPE) SCERTYPE FROM AUTO AUTO  WHERE AUTO.SCERTYPE = '2' AND AUTO.SCHASSIS = @:AUTOSCHASSIS1 AND AUTO.SMOTOR = @:AUTOSMOTOR2 AND AUTO.DNULLDATE IS NULL", "AUTO", "Linked.LatCombined")
.AddParameter("AUTOSCHASSIS1", DbType.AnsiStringFixedLength, 40, (H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.AutomobileInformation.Chassis = String.Empty), H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.AutomobileInformation.Chassis)
.AddParameter("AUTOSMOTOR2", DbType.AnsiStringFixedLength, 40, (H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.AutomobileInformation.EngineSerialNumber = String.Empty), H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.AutomobileInformation.EngineSerialNumber)
 
            H5CotizacionMiAutoaDoradoParametersInstance.CountRecords = .QueryExecuteScalarToInteger()  
        End With

                    currentAction = SessionTrace("23. If H5CotizacionMiAutoaDoradoParametersInstance.CountRecords Not Is Null Or Not Empty  AND H5CotizacionMiAutoaDoradoParametersInstance.CountRecords <> 0 Then")
                    If Not IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.CountRecords) AndAlso H5CotizacionMiAutoaDoradoParametersInstance.CountRecords <> 0 Then

                        currentAction = SessionTrace("24. The message 'El vehículo ya se en...' will displayed as 'Popup'")
                        ParametersToDictionary(H5CotizacionMiAutoaDoradoParametersInstance, parametersDictionary)
                        messageAction = "El vehículo ya se encuentra asegurado en otra póliza"
                        messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                        resultData.AddNotifyPopup(messageAction)
                        currentAction = SessionTrace("25. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true...")
                        currentAction = SessionTrace("25.1. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true...")

                        H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true

                                                            End If
                                                        End If
                currentAction = SessionTrace("26. If H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false Then")
                If H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("27. If H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintIndicator = true AND H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.AutomobileInformation.Mileage > 1000 Then")
                    If H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintIndicator = true AndAlso H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.AutomobileInformation.Mileage > 1000 Then

                        currentAction = SessionTrace("28. The message 'No puede solicitar i...' will displayed as 'Popup'")
                        ParametersToDictionary(H5CotizacionMiAutoaDoradoParametersInstance, parametersDictionary)
                        messageAction = "No puede solicitar impresión en linea, el asegurado debe proporcionar información adicional (requerimientos) por kilometraje del vehiculo superior a 1.000"
                        messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                        resultData.AddNotifyPopup(messageAction)
                        currentAction = SessionTrace("29. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true...")
                        currentAction = SessionTrace("29.1. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true...")

                        H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true

                                                                    End If
                                                                End If
                currentAction = SessionTrace("30. If H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false Then")
                If H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("32. Call Shared Sub 'Clear Form Errors' without parameters")
                    
        H5CotizacionMiAutoaDoradoParametersInstance.Errors.Clear()
	formContext.Errors.Clear()
    

                    currentAction = SessionTrace("34. If H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintIndicator = true Then")
                    If H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintIndicator = true Then

                        currentAction = SessionTrace("35. Call 'Main Process Of Automobile Request - v2' workflow in Synchronous mode with tracking")
                        WorkflowInArguments = New Dictionary(Of String, Object)

                        With WorkflowInArguments
                        .Add("RiskInformation", H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation)
                        .Add("eMail", H5CotizacionMiAutoaDoradoParametersInstance.eMail)
                        .Add("Currency", H5CotizacionMiAutoaDoradoParametersInstance.Currency)
                        .Add("ClientExistInDB", H5CotizacionMiAutoaDoradoParametersInstance.ClientExistInDB)
                        .Add("ProducerClientID", H5CotizacionMiAutoaDoradoParametersInstance.ProducerClientID)
                        .Add("context", formContext)
                        .Add("SendMailIndicator", H5CotizacionMiAutoaDoradoParametersInstance.SendMailIndicator)
                        .Add("PlanType", H5CotizacionMiAutoaDoradoParametersInstance.PlanType)
                        .Add("MailToProducerIndicator", H5CotizacionMiAutoaDoradoParametersInstance.MailToProducerIndicator)
                        .Add("OnLinePrintIndicator", H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintIndicator)
                        .Add("uwCaseID", H5CotizacionMiAutoaDoradoParametersInstance.uwcaseid)
                        .Add("PreviousPayment", H5CotizacionMiAutoaDoradoParametersInstance.PreviousPayment)
                        .Add("PlanillaModificacion", H5CotizacionMiAutoaDoradoParametersInstance.PlanillaModificacion)
                        .Add("PlanillaVisualizacion", H5CotizacionMiAutoaDoradoParametersInstance.PlanillaVisualizacion)
                        .Add("UsercodeBO", H5CotizacionMiAutoaDoradoParametersInstance.UsercodeBO)
                        .Add("UsercodeFASI", H5CotizacionMiAutoaDoradoParametersInstance.UsercodeFASI)
                        End With

                        WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("ProcessMainRequestOfAutoPolicyNNv2", "4c743819-5680-4932-802b-dced76d21784", 0, WorkflowInArguments, True, True, HttpContext.Current.Request.UrlReferrer.AbsolutePath, H5CotizacionMiAutoaDoradoParametersInstance.InternalId)

                        currentAction += "'Mapping Outputs'"
                        H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation = WorkflowOutArguments("RiskInformation")
                        H5CotizacionMiAutoaDoradoParametersInstance.eMail = WorkflowOutArguments("eMail")
                        H5CotizacionMiAutoaDoradoParametersInstance.Currency = WorkflowOutArguments("Currency")
                        H5CotizacionMiAutoaDoradoParametersInstance.ClientExistInDB = WorkflowOutArguments("ClientExistInDB")
                        H5CotizacionMiAutoaDoradoParametersInstance.ProducerClientID = WorkflowOutArguments("ProducerClientID")
                        H5CotizacionMiAutoaDoradoParametersInstance.PlanType = WorkflowOutArguments("PlanType")
                        H5CotizacionMiAutoaDoradoParametersInstance.MailToProducerIndicator = WorkflowOutArguments("MailToProducerIndicator")
                        H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintResult = WorkflowOutArguments("OnLinePrintResult")
                        H5CotizacionMiAutoaDoradoParametersInstance.PolicyDocument = WorkflowOutArguments("PolicyDocument")
                        H5CotizacionMiAutoaDoradoParametersInstance.uwcaseid = WorkflowOutArguments("uwCaseID")

                                                                            Else
                        currentAction = SessionTrace("36. Call 'Main Process Of Automobile Request - v2' workflow in Asynchronous mode with tracking")
                        WorkflowInArguments = New Dictionary(Of String, Object)

                        With WorkflowInArguments
                        .Add("RiskInformation", H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation)
                        .Add("eMail", H5CotizacionMiAutoaDoradoParametersInstance.eMail)
                        .Add("Currency", H5CotizacionMiAutoaDoradoParametersInstance.Currency)
                        .Add("ClientExistInDB", H5CotizacionMiAutoaDoradoParametersInstance.ClientExistInDB)
                        .Add("ProducerClientID", H5CotizacionMiAutoaDoradoParametersInstance.ProducerClientID)
                        .Add("context", formContext)
                        .Add("SendMailIndicator", H5CotizacionMiAutoaDoradoParametersInstance.SendMailIndicator)
                        .Add("PlanType", H5CotizacionMiAutoaDoradoParametersInstance.PlanType)
                        .Add("MailToProducerIndicator", H5CotizacionMiAutoaDoradoParametersInstance.MailToProducerIndicator)
                        .Add("OnLinePrintIndicator", H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintIndicator)
                        .Add("uwCaseID", H5CotizacionMiAutoaDoradoParametersInstance.uwcaseid)
                        .Add("PreviousPayment", H5CotizacionMiAutoaDoradoParametersInstance.PreviousPayment)
                        .Add("PlanillaModificacion", H5CotizacionMiAutoaDoradoParametersInstance.PlanillaModificacion)
                        .Add("PlanillaVisualizacion", H5CotizacionMiAutoaDoradoParametersInstance.PlanillaVisualizacion)
                        .Add("UsercodeBO", H5CotizacionMiAutoaDoradoParametersInstance.UsercodeBO)
                        .Add("UsercodeFASI", H5CotizacionMiAutoaDoradoParametersInstance.UsercodeFASI)
                        End With

                        WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("ProcessMainRequestOfAutoPolicyNNv2", "4c743819-5680-4932-802b-dced76d21784", 0, WorkflowInArguments, True, False, HttpContext.Current.Request.UrlReferrer.AbsolutePath, H5CotizacionMiAutoaDoradoParametersInstance.InternalId)


                        currentAction = SessionTrace("37. The message 'Sr/Sra. { Value /Ris...' will displayed as 'Splash'")
                        ParametersToDictionary(H5CotizacionMiAutoaDoradoParametersInstance, parametersDictionary)
                        messageAction = "Sr/Sra. { Value /RiskInformation/PrimaryInsured/Client/FirstName } { Value /RiskInformation/PrimaryInsured/Client/LastName } { Value /RiskInformation/PrimaryInsured/Client/LastName2 }, pronto estará recibiendo noticias nuestras...Gracias por visitarnos..."
                        messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                        resultData.AddNotifySplash(messageAction)
                                                                                End If
                                                                            End If
                currentAction = SessionTrace("38. If H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false Then")
                If H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("39. If H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintIndicator = true Then")
                    If H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintIndicator = true Then

                        currentAction = SessionTrace("40. If H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintResult = 1 Then")
                        If H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintResult = 1 Then

                            currentAction = SessionTrace("41. The message 'No puede obteber la ...' will displayed as 'Splash'")
                            ParametersToDictionary(H5CotizacionMiAutoaDoradoParametersInstance, parametersDictionary)
                            messageAction = "No puede obteber la póliza en linea, el asegurado debe proporcionar información adicional (requerimientos)... Sr/Sra. { Value /RiskInformation/PrimaryInsured/Client/FirstName } { Value /RiskInformation/PrimaryInsured/Client/LastName } { Value /RiskInformation/PrimaryInsured/Client/LastName2 }, pronto estará recibiendo noticias nuestras...Gracias por visitarnos..."
                            messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                            resultData.AddNotifySplash(messageAction)
                            currentAction = SessionTrace("42. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true...")
                            currentAction = SessionTrace("42.1. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true...")

                            H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true

                            currentAction = SessionTrace("43. H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.IsNew = false...")
                            currentAction = SessionTrace("43.1. H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.IsNew = false...")
                                            If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                            If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                            If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                            H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.IsNew = false
                            currentAction = SessionTrace("43.2. H5CotizacionMiAutoaDoradoParametersInstance.ClientExistInDB = true...")

                            H5CotizacionMiAutoaDoradoParametersInstance.ClientExistInDB = true

                                                                                                End If
                                                                                            End If
                                                                                        End If
                currentAction = SessionTrace("44. If H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false Then")
                If H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("45. If H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintIndicator = true Then")
                    If H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintIndicator = true Then

                        currentAction = SessionTrace("46. If H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintResult <> 0 Then")
                        If H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintResult <> 0 Then

                            currentAction = SessionTrace("47. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true...")
                            currentAction = SessionTrace("47.1. H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true...")

                            H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = true

                            currentAction = SessionTrace("48. The message 'Error en la impresió...' will displayed as 'Splash'")
                            ParametersToDictionary(H5CotizacionMiAutoaDoradoParametersInstance, parametersDictionary)
                            messageAction = "Error en la impresión (Error { Value /OnLinePrintResult })"
                            messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                            resultData.AddNotifySplash(messageAction)
                                                                                                            End If
                                                                                                        End If
                                                                                                    End If
                currentAction = SessionTrace("49. If H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false Then")
                If H5CotizacionMiAutoaDoradoParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("50. If H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintIndicator = true Then")
                    If H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintIndicator = true Then

                        currentAction = SessionTrace("51. If H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintResult = 0 Then")
                        If H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintResult = 0 Then

                            currentAction = SessionTrace("52. Call Shared Function 'Retrieve Underwriting Case' with parameters (Case ID, Effective Date)")
                            Dim _UnderwritingCase_c67ad8e840624406880cc86e979c0f31 As InMotionGIT.Underwriting.Contracts.UnderwritingCase
                            _UnderwritingCase_c67ad8e840624406880cc86e979c0f31 = InMotionGIT.Underwriting.Proxy.Manager.Retrieve(underwritingCaseID:=H5CotizacionMiAutoaDoradoParametersInstance.uwcaseid, atDate:=Date.Today)
                            H5CotizacionMiAutoaDoradoParametersInstance.UnderwritingCase = _UnderwritingCase_c67ad8e840624406880cc86e979c0f31
                            isNullResult = (IsNothing(_UnderwritingCase_c67ad8e840624406880cc86e979c0f31))

                            currentAction = SessionTrace("53. H5CotizacionMiAutoaDoradoParametersInstance.ReportURL = 'CAL001_GENERAL.rpt' 'url mode displayed in the editor'...'")
                            Dim reportParameters53 As New List(Of String)
                            Dim procedureParameters53 As New List(Of String)
                            procedureParameters53.Add("2")
                            procedureParameters53.Add(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.LineOfBusiness)
                            procedureParameters53.Add(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.ProductCode)
                            procedureParameters53.Add(H5CotizacionMiAutoaDoradoParametersInstance.UnderwritingCase.PolicyID)
                            procedureParameters53.Add(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.CertificateID)
                            procedureParameters53.Add(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.EffectiveDate.ToString("yyyy/MM/dd"))
                            H5CotizacionMiAutoaDoradoParametersInstance.ReportURL = InMotionGIT.Report.Crystal.Proxy.Client.Execute("CAL001_GENERAL", True, False, reportParameters53, procedureParameters53)

                            currentAction = SessionTrace("54. If H5CotizacionMiAutoaDoradoParametersInstance.ReportURL Is Null Or Empty '' Then")
                            If String.IsNullOrEmpty(H5CotizacionMiAutoaDoradoParametersInstance.ReportURL) Then

                                currentAction = SessionTrace("55. The message 'Póliza generada { Va...' will displayed as 'Splash'")
                                ParametersToDictionary(H5CotizacionMiAutoaDoradoParametersInstance, parametersDictionary)
                                messageAction = "Póliza generada { Value /UnderwritingCase/PolicyID }. Por los momentos no se puede emitir el cuadro de póliza... Por favor contacte a su asesor de seguros..."
                                messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                                resultData.AddNotifySplash(messageAction)
                                                                                                                                Else
                                currentAction = SessionTrace("56. The message '<a href='{ Value /Re...' will displayed as 'Splash'")
                                ParametersToDictionary(H5CotizacionMiAutoaDoradoParametersInstance, parametersDictionary)
                                messageAction = "<a href=""{ Value /ReportURL }"">Presione aquí para ver el documento... Póliza { Value /UnderwritingCase/PolicyID }</a>"
                                messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                                resultData.AddNotifySplash(messageAction)
                                                                                                                                    End If
                                                                                                                                End If
                                                                                                                            End If
                                                                                                                        End If

                instance = ClassToEntryData(instance, H5CotizacionMiAutoaDoradoParametersInstance)
                
                StoreFormInformation(H5CotizacionMiAutoaDoradoParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5CotizacionMiAutoaDorado", "button4Click", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function MailToProducerIndicatorChange(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5CotizacionMiAutoaDoradoParametersInstance As H5CotizacionMiAutoaDoradoParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5CotizacionMiAutoaDoradoParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
    
                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance) then
                        H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                        SetDefaultValuesFromQueryString(H5CotizacionMiAutoaDoradoParametersInstance)
                    End If
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("MailToProducerIndicatorClick")
                H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                currentAction = SessionTrace("1. If H5CotizacionMiAutoaDoradoParametersInstance.MailToProducerIndicator = True Then")
                If H5CotizacionMiAutoaDoradoParametersInstance.MailToProducerIndicator = True Then

                    currentAction = SessionTrace("2. If H5CotizacionMiAutoaDoradoParametersInstance.MailToProducerIndicator = True AND H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryProducer.Client.eMailAddressDefault Is Null Or Empty '' Then")
                    If H5CotizacionMiAutoaDoradoParametersInstance.MailToProducerIndicator = True AndAlso String.IsNullOrEmpty(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryProducer.Client.eMailAddressDefault) Then

                        currentAction = SessionTrace("3. The message 'El intermediario no ...' will displayed as 'Popup'")
                        ParametersToDictionary(H5CotizacionMiAutoaDoradoParametersInstance, parametersDictionary)
                        messageAction = "El intermediario no tiene una dirección de correo asociada, no se puede seleccionar esta opción."
                        messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                        resultData.AddNotifyPopup(messageAction)
                        currentAction = SessionTrace("4. Hide 'Correo electrónico' control")
                        resultData.AddControlBehavior("eMailAddressDefaultProducer", "hide")

                        currentAction = SessionTrace("5. H5CotizacionMiAutoaDoradoParametersInstance.MailToProducerIndicator = False...")
                        currentAction = SessionTrace("5.1. H5CotizacionMiAutoaDoradoParametersInstance.MailToProducerIndicator = False...")

                        H5CotizacionMiAutoaDoradoParametersInstance.MailToProducerIndicator = False

                            Else
                        currentAction = SessionTrace("6. Show 'Correo electrónico' control")
                        resultData.AddControlBehavior("eMailAddressDefaultProducer", "show")

                                End If
                            Else
                    currentAction = SessionTrace("7. Hide 'Correo electrónico' control")
                    resultData.AddControlBehavior("eMailAddressDefaultProducer", "hide")

                                End If

                instance = ClassToEntryData(instance, H5CotizacionMiAutoaDoradoParametersInstance)
                
                StoreFormInformation(H5CotizacionMiAutoaDoradoParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5CotizacionMiAutoaDorado", "MailToProducerIndicatorChange", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function CerrarClick(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5CotizacionMiAutoaDoradoParametersInstance As H5CotizacionMiAutoaDoradoParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5CotizacionMiAutoaDoradoParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
    
                    If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance) then
                        H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                        SetDefaultValuesFromQueryString(H5CotizacionMiAutoaDoradoParametersInstance)
                    End If
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("CerrarClick")
                H5CotizacionMiAutoaDoradoParametersInstance = EntryDataToClass(H5CotizacionMiAutoaDoradoParametersInstance, instance)
                currentAction = SessionTrace("1. The message 'No se continua con e...' will displayed as 'Splash'")
                ParametersToDictionary(H5CotizacionMiAutoaDoradoParametersInstance, parametersDictionary)
                messageAction = "No se continua con el proceso... No deje de visitarnos en otra oportunidad..."
                messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                resultData.AddNotifySplash(messageAction)

                instance = ClassToEntryData(instance, H5CotizacionMiAutoaDoradoParametersInstance)
                
                StoreFormInformation(H5CotizacionMiAutoaDoradoParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5CotizacionMiAutoaDorado", "CerrarClick", currentAction)
            End Try
            
            Return resultData
        End Function

#End Region

#Region "Lookups Web Methods"


        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForProductCode(id As String, RiskInformationLineOfBusiness As System.Int32) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
                        
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  PRODMASTER.NBRANCH, PRODMASTER.NPRODUCT, PRODMASTER.SDESCRIPT FROM PRODMASTER PRODMASTER  WHERE  ( PRODMASTER.SSTATREGT = 1 )   AND (PRODMASTER.NBRANCH = @:PRODMASTERNBRANCHDependen AND NOT SDESCRIPT IS NULL) ORDER BY SDESCRIPT ", "1"), 
                                            "PRODMASTER", "Linked.LatCombined")
                    .AddParameter("PRODMASTERNBRANCHDependen", DbType.Int32, 0, False, RiskInformationLineOfBusiness)

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NPRODUCT"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5CotizacionMiAutoaDorado", "LookUpForProductCode", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForLineOfBusiness(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
                        
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE10.NBRANCH, TABLE10.SDESCRIPT, TABLE10.SSTATREGT FROM TABLE10 TABLE10  WHERE TABLE10.SSTATREGT = 1  AND NOT SDESCRIPT IS NULL ORDER BY SDESCRIPT", "1"), 
                                            "TABLE10", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NBRANCH"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5CotizacionMiAutoaDorado", "LookUpForLineOfBusiness", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForVehicleCode(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
                        
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TAB_AU_VEH.SVEHCODE, TAB_AU_VEH.SDESCRIPT FROM TAB_AU_VEH TAB_AU_VEH  WHERE  ( TAB_AU_VEH.SSTATREGT = '{0}' )   AND NOT SDESCRIPT IS NULL ORDER BY SDESCRIPT", "1"), 
                                            "TAB_AU_VEH", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.StringValue("SVEHCODE"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5CotizacionMiAutoaDorado", "LookUpForVehicleCode", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForCurrency(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
                        
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE11.NCODIGINT, TABLE11.SDESCRIPT, TABLE11.SSTATREGT, TABLE11.SSHORT_DES FROM TABLE11 TABLE11  WHERE  ( TABLE11.SSTATREGT = 1 )   ORDER BY TABLE11.SDESCRIPT ASC", "1"), 
                                            "TABLE11", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NCODIGINT"),
                                                                                            .Description = item.StringValue("SSHORT_DES")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5CotizacionMiAutoaDorado", "LookUpForCurrency", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForDrivingZone(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
                        
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE224.NAUTOZONE, TABLE224.SDESCRIPT FROM TABLE224 TABLE224  WHERE TABLE224.SSTATREGT = '{0}'  ORDER BY TABLE224.SDESCRIPT ASC", "1"), 
                                            "TABLE224", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NAUTOZONE"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5CotizacionMiAutoaDorado", "LookUpForDrivingZone", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForUseOfVehicle(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
                        
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE6028.NGROUPVEH, TABLE6028.SDESCRIPT FROM TABLE6028 TABLE6028  WHERE TABLE6028.SSTATREGT = '{0}'  ORDER BY TABLE6028.SDESCRIPT ASC", "1"), 
                                            "TABLE6028", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NGROUPVEH"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5CotizacionMiAutoaDorado", "LookUpForUseOfVehicle", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForLicensePlateType(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
                        
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE80.SLICENSE_TY, TABLE80.SDESCRIPT FROM TABLE80 TABLE80  WHERE TABLE80.SSTATREGT = '{0}'  ORDER BY TABLE80.SDESCRIPT ASC", "1"), 
                                            "TABLE80", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.StringValue("SLICENSE_TY"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5CotizacionMiAutoaDorado", "LookUpForLicensePlateType", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForCreditCardType(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
                        
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE183.NCARD_TYPE, TABLE183.SSTATREGT, TABLE183.SDESCRIPT FROM TABLE183 TABLE183  WHERE TABLE183.SSTATREGT = 1  AND NOT SDESCRIPT IS NULL ORDER BY SDESCRIPT", "1"), 
                                            "TABLE183", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NCARD_TYPE"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5CotizacionMiAutoaDorado", "LookUpForCreditCardType", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForBankCode(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)
                        
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE7.NBANK_CODE, TABLE7.SSTATREGT, TABLE7.SDESCRIPT FROM TABLE7 TABLE7  WHERE TABLE7.SSTATREGT = '{0}'  AND NOT SDESCRIPT IS NULL ORDER BY SDESCRIPT", "1"), 
                                            "TABLE7", "Linked.LatCombined")

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NBANK_CODE"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5CotizacionMiAutoaDorado", "LookUpForBankCode", String.Empty)
            End Try
                        
            Return result
        End Function

#End Region

#Region "Form Actions"

        Private Shared Sub Form_Initialization(ByRef currentAction As String, ByRef H5CotizacionMiAutoaDoradoParametersInstance As H5CotizacionMiAutoaDoradoParameters, ByRef resultData As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult)
            Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
            Dim formContext As New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                        H5CotizacionMiAutoaDoradoParametersInstance.InternalId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                                     .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                                     .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                                     .AccessToken = HttpContext.Current.Session("AccessToken")}
            Dim selectDataTableItem As DataTable = Nothing
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim messageAction As String = String.Empty
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            currentAction = SessionTrace("Form_Initialization")

            currentAction = SessionTrace("1. H5CotizacionMiAutoaDoradoParametersInstance.RecoveryCaseIndicator = false...")
            currentAction = SessionTrace("1.1. H5CotizacionMiAutoaDoradoParametersInstance.RecoveryCaseIndicator = false...")

            H5CotizacionMiAutoaDoradoParametersInstance.RecoveryCaseIndicator = false

            currentAction = SessionTrace("2. H5CotizacionMiAutoaDoradoParametersInstance.PlanillaModificacion = 'H5NNCotizacionMiAutoaDoradoEditDS'...")
            currentAction = SessionTrace("2.1. H5CotizacionMiAutoaDoradoParametersInstance.PlanillaModificacion = 'H5NNCotizacionMiAutoaDoradoEditDS'...")

            H5CotizacionMiAutoaDoradoParametersInstance.PlanillaModificacion = "H5NNCotizacionMiAutoaDoradoEditDS"
            currentAction = SessionTrace("2.2. H5CotizacionMiAutoaDoradoParametersInstance.PlanillaVisualizacion = 'H5NNCotizacionMiAutoaDoradoView'...")

            H5CotizacionMiAutoaDoradoParametersInstance.PlanillaVisualizacion = "H5NNCotizacionMiAutoaDoradoView"

            currentAction = SessionTrace("3. If H5CotizacionMiAutoaDoradoParametersInstance.StatusRun <> true Then")
            If H5CotizacionMiAutoaDoradoParametersInstance.StatusRun <> true Then

                currentAction = SessionTrace("4. The message 'You are not authoriz...' will displayed as 'Splash'")
                ParametersToDictionary(H5CotizacionMiAutoaDoradoParametersInstance, parametersDictionary)
                messageAction = "You are not authorized to execute this transaction"
                messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                resultData.AddNotifySplash(messageAction)
                End If
            currentAction = SessionTrace("5. If H5CotizacionMiAutoaDoradoParametersInstance.uwcaseid Not Is Null Or Not Empty  AND H5CotizacionMiAutoaDoradoParametersInstance.uwcaseid <> 0 Then")
            If Not IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.uwcaseid) AndAlso H5CotizacionMiAutoaDoradoParametersInstance.uwcaseid <> 0 Then

                currentAction = SessionTrace("6. H5CotizacionMiAutoaDoradoParametersInstance.RecoveryCaseIndicator = true...")
                currentAction = SessionTrace("6.1. H5CotizacionMiAutoaDoradoParametersInstance.RecoveryCaseIndicator = true...")

                H5CotizacionMiAutoaDoradoParametersInstance.RecoveryCaseIndicator = true

                currentAction = SessionTrace("7. Call 'Retrieve Case Information for Request of policy' workflow in Synchronous mode with tracking")
                WorkflowInArguments = New Dictionary(Of String, Object)

                With WorkflowInArguments
                .Add("uwcaseid", H5CotizacionMiAutoaDoradoParametersInstance.uwcaseid)
                .Add("ClientName", H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.CompleteClientName)
                .Add("StatusCase", H5CotizacionMiAutoaDoradoParametersInstance.StatusCase)
                .Add("RiskInformation", H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation)
                .Add("Identifier", "Automobile")
                .Add("context", formContext)
                End With

                WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("RetrieveCaseInformationRequestPolicy", "3967f9a8-6bc2-41d6-8672-ad0ede452cf2", 7, WorkflowInArguments, True, True, HttpContext.Current.Request.UrlReferrer.AbsolutePath, H5CotizacionMiAutoaDoradoParametersInstance.InternalId)

                currentAction += "'Mapping Outputs'"
                H5CotizacionMiAutoaDoradoParametersInstance.uwcaseid = WorkflowOutArguments("uwcaseid")
                H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.CompleteClientName = WorkflowOutArguments("ClientName")
                H5CotizacionMiAutoaDoradoParametersInstance.StatusCase = WorkflowOutArguments("StatusCase")
                H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation = WorkflowOutArguments("RiskInformation")

                currentAction = SessionTrace("8. Call Shared Function 'Retrieve Client' with parameters (Client Identification)")
                If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If

                If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                Dim _Client_1b7a74ab44234738b19e3b5ab57e79c0 As InMotionGIT.Client.Entity.Contracts.Client
                
      _Client_1b7a74ab44234738b19e3b5ab57e79c0 = (New InMotionGIT.Client.Services.ClientManager).Retrieve(clientId:=H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID, atDate:=Date.Today, childFilter:= "All")
      isNullResult = (IsNothing(_Client_1b7a74ab44234738b19e3b5ab57e79c0))
      isFoundData  = Not isNullResult
    
                H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client = _Client_1b7a74ab44234738b19e3b5ab57e79c0

                currentAction = SessionTrace("9. Continuar.Visible = true, TcoverCollection.Visible = true, CoverageWithCalculatedPremium.Visible = true")
                currentAction = SessionTrace("9.1. Continuar.Visible = true...")
                resultData.AddControlBehavior("Continuar", "show")
                currentAction = SessionTrace("9.2. TcoverCollection.Visible = true...")
                resultData.AddControlBehavior("TcoverCollection", "show")
                currentAction = SessionTrace("9.3. CoverageWithCalculatedPremium.Visible = true...")
                resultData.AddControlBehavior("CoverageWithCalculatedPremiumContainer", "show")

                currentAction = SessionTrace("10. H5CotizacionMiAutoaDoradoParametersInstance.ClientExistInDB = true...")
                currentAction = SessionTrace("10.1. H5CotizacionMiAutoaDoradoParametersInstance.ClientExistInDB = true...")

                H5CotizacionMiAutoaDoradoParametersInstance.ClientExistInDB = true
                currentAction = SessionTrace("10.2. H5CotizacionMiAutoaDoradoParametersInstance.BirthdateIncluded = H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryIn...")

                H5CotizacionMiAutoaDoradoParametersInstance.BirthdateIncluded = H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate

                currentAction = SessionTrace("11. uwcaseid.Visible = true")
                currentAction = SessionTrace("11.1. uwcaseid.Visible = true...")
                resultData.AddControlBehavior("uwcaseid", "show")

                    Else
                currentAction = SessionTrace("12. TcoverCollection.Visible = false, uwcaseid.Visible = false")
                currentAction = SessionTrace("12.1. TcoverCollection.Visible = false...")
                resultData.AddControlBehavior("TcoverCollection", "hide")
                currentAction = SessionTrace("12.2. uwcaseid.Visible = false...")
                resultData.AddControlBehavior("uwcaseid", "hide")

                        End If
            currentAction = SessionTrace("13. H5CotizacionMiAutoaDoradoParametersInstance.SendMailIndicator = true...")
            currentAction = SessionTrace("13.1. H5CotizacionMiAutoaDoradoParametersInstance.SendMailIndicator = true...")

            H5CotizacionMiAutoaDoradoParametersInstance.SendMailIndicator = true

            currentAction = SessionTrace("14. H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintIndicator = false...")
            currentAction = SessionTrace("14.1. H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintIndicator = false...")

            H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintIndicator = false

            currentAction = SessionTrace("15. botonesmenu.Visible = true")
            currentAction = SessionTrace("15.1. botonesmenu.Visible = true...")
            resultData.AddControlBehavior("botonesmenu", "show")

            currentAction = SessionTrace("16. H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.ApplicationDate = Today...")
            currentAction = SessionTrace("16.1. H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.ApplicationDate = Today...")
                            If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If

            H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.ApplicationDate = Today

            currentAction = SessionTrace("17. H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.YearOfManufactured = year(Date.Today)...")
            currentAction = SessionTrace("17.1. H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.YearOfManufactured = year(Date.Today)...")
                            If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                            If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness
                End If

            H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.AutomobileLineOfBusiness.YearOfManufactured = year(Date.Today)

            currentAction = SessionTrace("18. If H5CotizacionMiAutoaDoradoParametersInstance.ClientExistInDB = true Then")
            If H5CotizacionMiAutoaDoradoParametersInstance.ClientExistInDB = true Then

                currentAction = SessionTrace("19. FirstName.Enabled = false, LastName.Enabled = false, LastName2.Enabled = false...")
                currentAction = SessionTrace("19.1. FirstName.Enabled = false...")
                resultData.AddControlBehavior("FirstName", "disabled")
                currentAction = SessionTrace("19.2. LastName.Enabled = false...")
                resultData.AddControlBehavior("LastName", "disabled")
                currentAction = SessionTrace("19.3. LastName2.Enabled = false...")
                resultData.AddControlBehavior("LastName2", "disabled")
                currentAction = SessionTrace("19.4. ClientID.Enabled = false...")
                resultData.AddControlBehavior("ClientID", "disabled")

                currentAction = SessionTrace("20. If H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate Not Is Null Or Not Empty '' Then")
                If Not IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate) AndAlso H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate <> Date.MinValue Then

                    currentAction = SessionTrace("21. BirthdateIncluded.Enabled = false")
                    currentAction = SessionTrace("21.1. BirthdateIncluded.Enabled = false...")
                    resultData.AddControlBehavior("BirthdateIncluded", "disabled")

                    currentAction = SessionTrace("22. H5CotizacionMiAutoaDoradoParametersInstance.BirthdateIncluded = H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryIn...")
                    currentAction = SessionTrace("22.1. H5CotizacionMiAutoaDoradoParametersInstance.BirthdateIncluded = H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryIn...")

                    H5CotizacionMiAutoaDoradoParametersInstance.BirthdateIncluded = H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate

                                    End If
                currentAction = SessionTrace("23. If H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.Gender Not Is Null Or Not Empty '' AND (H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.Gender = '1' OR ... Then")
                If Not String.IsNullOrEmpty(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.Gender) AndAlso (H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.Gender = "1" OrElse H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.Gender = "2") Then

                    currentAction = SessionTrace("24. Gender.Enabled = false")
                    currentAction = SessionTrace("24.1. Gender.Enabled = false...")
                    resultData.AddControlBehavior("GenderWrap", "disabled")

                                        End If
                                    Else
                currentAction = SessionTrace("25. H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID = nothing...")
                currentAction = SessionTrace("25.1. H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID = nothing...")
                                If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID = nothing

                                        End If
            currentAction = SessionTrace("26. H5CotizacionMiAutoaDoradoParametersInstance.CurrentYear = Date.Today.year...")
            currentAction = SessionTrace("26.1. H5CotizacionMiAutoaDoradoParametersInstance.CurrentYear = Date.Today.year...")

            H5CotizacionMiAutoaDoradoParametersInstance.CurrentYear = Date.Today.year

            currentAction = SessionTrace("27. H5CotizacionMiAutoaDoradoParametersInstance.PreviousPayment = false...")
            currentAction = SessionTrace("27.1. H5CotizacionMiAutoaDoradoParametersInstance.PreviousPayment = false...")

            H5CotizacionMiAutoaDoradoParametersInstance.PreviousPayment = false

            currentAction = SessionTrace("28. H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintIndicator = true...")
            currentAction = SessionTrace("28.1. H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintIndicator = true...")

            H5CotizacionMiAutoaDoradoParametersInstance.OnLinePrintIndicator = true

            currentAction = SessionTrace("30. If H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryProducer.Producer.ProducerCode Not Is Null Or Not Empty  Then")
            If Not IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryProducer.Producer.ProducerCode) Then

                currentAction = SessionTrace("31. zone1.Visible = true")
                currentAction = SessionTrace("31.1. zone1.Visible = true...")
                resultData.AddControlBehavior("zone1", "show")

                                            Else
                currentAction = SessionTrace("32. zone1.Visible = false")
                currentAction = SessionTrace("32.1. zone1.Visible = false...")
                resultData.AddControlBehavior("zone1", "hide")

                                                End If

        End Sub
	
        Private Shared Sub Form_Load(ByRef currentAction As String, ByRef H5CotizacionMiAutoaDoradoParametersInstance As H5CotizacionMiAutoaDoradoParameters, ByRef resultData As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult)
            Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
            Dim formContext As New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                        H5CotizacionMiAutoaDoradoParametersInstance.InternalId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                                     .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                                     .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                                     .AccessToken = HttpContext.Current.Session("AccessToken")}
            Dim selectDataTableItem As DataTable = Nothing
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim messageAction As String = String.Empty
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            currentAction = SessionTrace("Form_Load")

            currentAction = SessionTrace("1. H5CotizacionMiAutoaDoradoParametersInstance.RecoveryCaseIndicator = true...")
            currentAction = SessionTrace("1.1. H5CotizacionMiAutoaDoradoParametersInstance.RecoveryCaseIndicator = true...")

            H5CotizacionMiAutoaDoradoParametersInstance.RecoveryCaseIndicator = true

            currentAction = SessionTrace("2. Call Shared Function 'Retrieve Underwriting Case' with parameters (Case ID, Effective Date)")
            Dim _UnderwritingCase_b05415dbc81d40b3b64d3cd2805f68d6 As InMotionGIT.Underwriting.Contracts.UnderwritingCase
            _UnderwritingCase_b05415dbc81d40b3b64d3cd2805f68d6 = InMotionGIT.Underwriting.Proxy.Manager.Retrieve(underwritingCaseID:=H5CotizacionMiAutoaDoradoParametersInstance.uwcaseid, atDate:=Date.Today)
            H5CotizacionMiAutoaDoradoParametersInstance.UnderwritingCase = _UnderwritingCase_b05415dbc81d40b3b64d3cd2805f68d6
            isNullResult = (IsNothing(_UnderwritingCase_b05415dbc81d40b3b64d3cd2805f68d6))

            currentAction = SessionTrace("3. H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation = H5CotizacionMiAutoaDoradoParametersInstance.UnderwritingCase.RiskInfo...")
            currentAction = SessionTrace("3.1. H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation = H5CotizacionMiAutoaDoradoParametersInstance.UnderwritingCase.RiskInfo...")
                            If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If

            H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation = H5CotizacionMiAutoaDoradoParametersInstance.UnderwritingCase.RiskInformation

            currentAction = SessionTrace("4. Call Shared Sub 'Clear Form Errors' without parameters")
            
        H5CotizacionMiAutoaDoradoParametersInstance.Errors.Clear()
	formContext.Errors.Clear()
    

            currentAction = SessionTrace("5. Call Shared Function 'Retrieve Client' with parameters (Client Identification)")
                If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If

                If IsNothing(H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

            Dim _Client_39c5950675e241da8eb92b1c0619f07a As InMotionGIT.Client.Entity.Contracts.Client
            
      _Client_39c5950675e241da8eb92b1c0619f07a = (New InMotionGIT.Client.Services.ClientManager).Retrieve(clientId:=H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID, atDate:=Date.Today, childFilter:= "All")
      isNullResult = (IsNothing(_Client_39c5950675e241da8eb92b1c0619f07a))
      isFoundData  = Not isNullResult
    
            H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client = _Client_39c5950675e241da8eb92b1c0619f07a

            currentAction = SessionTrace("6. H5CotizacionMiAutoaDoradoParametersInstance.ClientExistInDB = true...")
            currentAction = SessionTrace("6.1. H5CotizacionMiAutoaDoradoParametersInstance.ClientExistInDB = true...")

            H5CotizacionMiAutoaDoradoParametersInstance.ClientExistInDB = true
            currentAction = SessionTrace("6.2. H5CotizacionMiAutoaDoradoParametersInstance.eMail = H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryIn...")

            H5CotizacionMiAutoaDoradoParametersInstance.eMail = H5CotizacionMiAutoaDoradoParametersInstance.RiskInformation.PrimaryInsured.Client.eMailAddressDefault

            currentAction = SessionTrace("7. uwcaseid.Visible = true")
            currentAction = SessionTrace("7.1. uwcaseid.Visible = true...")
            resultData.AddControlBehavior("uwcaseid", "show")

            currentAction = SessionTrace("8. If H5CotizacionMiAutoaDoradoParametersInstance.frompanel = True Then")
            If H5CotizacionMiAutoaDoradoParametersInstance.frompanel = True Then

                currentAction = SessionTrace("9. Genralinformation.Enabled = False, IBAsegurado.Enabled = False, IBVehiculo.Enabled = false...")
                currentAction = SessionTrace("9.1. Genralinformation.Enabled = False...")
                resultData.AddControlBehavior("Genralinformation", "disabled")
                currentAction = SessionTrace("9.2. IBAsegurado.Enabled = False...")
                resultData.AddControlBehavior("IBAsegurado", "disabled")
                currentAction = SessionTrace("9.3. IBVehiculo.Enabled = false...")
                resultData.AddControlBehavior("IBVehiculo", "disabled")
                currentAction = SessionTrace("9.4. TcoverCollection.Visible = true...")
                resultData.AddControlBehavior("TcoverCollection", "show")
                currentAction = SessionTrace("9.5. TcoverCollection.Enabled = false...")
                resultData.AddControlBehavior("TcoverCollection", "disabled")
                currentAction = SessionTrace("9.6. label7.Visible = false...")
                resultData.AddControlBehavior("label7", "hide")
                currentAction = SessionTrace("9.7. Cotizar.Visible = false...")
                resultData.AddControlBehavior("Cotizar", "hide")
                currentAction = SessionTrace("9.8. Continuar.Visible = false...")
                resultData.AddControlBehavior("Continuar", "hide")
                currentAction = SessionTrace("9.9. IABase.Enabled = false...")
                resultData.AddControlBehavior("IABase", "disabled")
                currentAction = SessionTrace("9.10. button3.Visible = false...")
                resultData.AddControlBehavior("button3", "hide")
                currentAction = SessionTrace("9.11. zone7.Enabled = false...")
                resultData.AddControlBehavior("zone7", "disabled")
                currentAction = SessionTrace("9.12. zone9.Visible = false...")
                resultData.AddControlBehavior("zone9", "hide")
                currentAction = SessionTrace("9.13. zone3.Enabled = false...")
                resultData.AddControlBehavior("zone3", "disabled")
                currentAction = SessionTrace("9.14. Accept.Visible = false...")
                resultData.AddControlBehavior("Accept", "hide")
                currentAction = SessionTrace("9.15. zone4.Visible = false...")
                resultData.AddControlBehavior("zone4", "hide")
                currentAction = SessionTrace("9.16. botonesmenu.Visible = false...")
                resultData.AddControlBehavior("botonesmenu", "hide")
                currentAction = SessionTrace("9.17. tab1.Visible = true...")
                resultData.AddControlBehavior("tab1", "show")
                currentAction = SessionTrace("9.18. tab0.Visible = true...")
                resultData.AddControlBehavior("tab0", "show")
                currentAction = SessionTrace("9.19. button3.Visible = true...")
                resultData.AddControlBehavior("button3", "show")
                currentAction = SessionTrace("9.20. tab2Pago.Visible = true...")
                resultData.AddControlBehavior("tab2Pago", "show")
                currentAction = SessionTrace("9.21. IBVehiculo.Visible = true...")
                resultData.AddControlBehavior("IBVehiculo", "show")
                currentAction = SessionTrace("9.22. tab2Direccion.Visible = true...")
                resultData.AddControlBehavior("tab2Direccion", "show")

                End If

        End Sub
#End Region
#Region "Utilities"

        Private Shared Sub ParametersToDictionary(formData As H5CotizacionMiAutoaDoradoParameters, ByRef target As Dictionary(Of String, Object))
            If IsNothing(target) Then
                target = New Dictionary(Of String, Object)

                target.Add("Age", formData.Age)
                target.Add("BirthdateIncluded", formData.BirthdateIncluded)
                target.Add("ClienteIndicado", formData.ClienteIndicado)
                target.Add("ClientExistInDB", formData.ClientExistInDB)
                target.Add("ClientIncluded", formData.ClientIncluded)
                target.Add("CountRecords", formData.CountRecords)
                target.Add("Currency", formData.Currency)
                target.Add("CurrentYear", formData.CurrentYear)
                target.Add("eMail", formData.eMail)
                target.Add("ErrorsFound", formData.ErrorsFound)
                target.Add("frompanel", formData.frompanel)
                target.Add("MailToProducerIndicator", formData.MailToProducerIndicator)
                target.Add("MonthCard", formData.MonthCard)
                target.Add("OnLinePrintIndicator", formData.OnLinePrintIndicator)
                target.Add("OnLinePrintResult", formData.OnLinePrintResult)
                target.Add("PlanillaModificacion", formData.PlanillaModificacion)
                target.Add("PlanillaVisualizacion", formData.PlanillaVisualizacion)
                target.Add("PlanType", formData.PlanType)
                target.Add("PolicyDocument", formData.PolicyDocument)
                target.Add("PreviousPayment", formData.PreviousPayment)
                target.Add("PrimaTotal", formData.PrimaTotal)
                target.Add("PrimaTotalAnual", formData.PrimaTotalAnual)
                target.Add("ProducerClientID", formData.ProducerClientID)
                target.Add("ProductDescription", formData.ProductDescription)
                target.Add("ProductMasterDescription", formData.ProductMasterDescription)
                target.Add("RecoveryCaseIndicator", formData.RecoveryCaseIndicator)
                target.Add("ReportURL", formData.ReportURL)
                target.Add("RiskInformation", formData.RiskInformation)
                target.Add("SendMailIndicator", formData.SendMailIndicator)
                target.Add("StatusCase", formData.StatusCase)
                target.Add("StatusRun", formData.StatusRun)
                target.Add("UnderwritingCase", formData.UnderwritingCase)
                target.Add("UsercodeBO", formData.UsercodeBO)
                target.Add("UsercodeFASI", formData.UsercodeFASI)
                target.Add("uwcaseid", formData.uwcaseid)
                target.Add("VehicleCodeInteger", formData.VehicleCodeInteger)
                target.Add("YearCard", formData.YearCard)
            Else
                target("Age") = formData.Age
                target("BirthdateIncluded") = formData.BirthdateIncluded
                target("ClienteIndicado") = formData.ClienteIndicado
                target("ClientExistInDB") = formData.ClientExistInDB
                target("ClientIncluded") = formData.ClientIncluded
                target("CountRecords") = formData.CountRecords
                target("Currency") = formData.Currency
                target("CurrentYear") = formData.CurrentYear
                target("eMail") = formData.eMail
                target("ErrorsFound") = formData.ErrorsFound
                target("frompanel") = formData.frompanel
                target("MailToProducerIndicator") = formData.MailToProducerIndicator
                target("MonthCard") = formData.MonthCard
                target("OnLinePrintIndicator") = formData.OnLinePrintIndicator
                target("OnLinePrintResult") = formData.OnLinePrintResult
                target("PlanillaModificacion") = formData.PlanillaModificacion
                target("PlanillaVisualizacion") = formData.PlanillaVisualizacion
                target("PlanType") = formData.PlanType
                target("PolicyDocument") = formData.PolicyDocument
                target("PreviousPayment") = formData.PreviousPayment
                target("PrimaTotal") = formData.PrimaTotal
                target("PrimaTotalAnual") = formData.PrimaTotalAnual
                target("ProducerClientID") = formData.ProducerClientID
                target("ProductDescription") = formData.ProductDescription
                target("ProductMasterDescription") = formData.ProductMasterDescription
                target("RecoveryCaseIndicator") = formData.RecoveryCaseIndicator
                target("ReportURL") = formData.ReportURL
                target("RiskInformation") = formData.RiskInformation
                target("SendMailIndicator") = formData.SendMailIndicator
                target("StatusCase") = formData.StatusCase
                target("StatusRun") = formData.StatusRun
                target("UnderwritingCase") = formData.UnderwritingCase
                target("UsercodeBO") = formData.UsercodeBO
                target("UsercodeFASI") = formData.UsercodeFASI
                target("uwcaseid") = formData.uwcaseid
                target("VehicleCodeInteger") = formData.VehicleCodeInteger
                target("YearCard") = formData.YearCard
            End If
        End Sub

        Private Shared Sub GetTransferParameters(parametersData As H5CotizacionMiAutoaDoradoParameters, fromid As String)
            Dim fromDocumentCache As Object = Nothing

            If Not String.IsNullOrEmpty(fromid) Then
                fromDocumentCache = HttpContext.Current.Session(fromid)
                HttpContext.Current.Session.Remove(fromid)

            Else
                fromDocumentCache = HttpContext.Current.Session(HttpContext.Current.Session("fromid"))
                HttpContext.Current.Session.Remove(HttpContext.Current.Session("fromid"))
                HttpContext.Current.Session.Remove("fromid")
            End If

            If Not IsNothing(fromDocumentCache) Then
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Age", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("BirthdateIncluded", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClienteIndicado", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClientExistInDB", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClientIncluded", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CountRecords", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Currency", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CurrentYear", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("eMail", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ErrorsFound", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("frompanel", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("MailToProducerIndicator", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("MonthCard", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OnLinePrintIndicator", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OnLinePrintResult", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PlanillaModificacion", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PlanillaVisualizacion", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PlanType", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PolicyDocument", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PreviousPayment", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PrimaTotal", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PrimaTotalAnual", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProducerClientID", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProductDescription", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProductMasterDescription", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("RecoveryCaseIndicator", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ReportURL", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("RiskInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("SendMailIndicator", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("StatusCase", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("StatusRun", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UnderwritingCase", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UsercodeBO", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UsercodeFASI", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("uwcaseid", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("VehicleCodeInteger", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("YearCard", fromDocumentCache, parametersData)
            End If
        End Sub

        Private Shared Function SessionTrace(message As String) As String

            If Not IsNothing(HttpContext.Current.Session("Form.Track")) AndAlso HttpContext.Current.Session("Form.Track").ToString.ToLower = "true" Then
                Dim tracelog As String = HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath")))

                tracelog += String.Format(CultureInfo.InvariantCulture, "{0} {1}<br>{2}", Now.ToString("hh:mm:ss.fff"), message, vbCrLf)
                HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath"))) = tracelog
            End If

            Return message
        End Function

#End Region


#Region "Storage Database Methods"

      Private Shared Sub StoreFormInformation(formData As H5CotizacionMiAutoaDoradoParameters)
            If Not IsNothing(formData) Then
                Dim foundData As Boolean

                If formData.InternalId.IsEmpty Then
                    formData.InternalId = Guid.NewGuid.ToString
                Else
                    With New DataManagerFactory("SELECT COUNT(FormId) FROM FrontOffice.DocumentCache WHERE FormId = @:FormId",
                                 "FrontOffice.DocumentCache", "FrontOfficeConnectionString")
                        .AddParameter("FormId", DbType.AnsiStringFixedLength, 36, False, formData.InternalId)
                        foundData = .QueryExecuteScalarToInteger > 0
                    End With
                End If

                If foundData Then
                    UpdateStorageData(formData)
                Else
                    InsertStorageData(formData)
                End If

                If Not IsNothing(HttpContext.Current.Session("Form.Track")) AndAlso
                    HttpContext.Current.Session("Form.Track").ToString.ToLower = "true" Then
                    HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.H5CotizacionMiAutoaDorado", formData.InternalId)) = formData
                End If

                If Not IsNothing(HttpContext.Current.Session("Form.Track.Parameters")) AndAlso
                    HttpContext.Current.Session("Form.Track.Parameters").ToString.ToLower = "true" Then

                    If Not IsNothing(HttpContext.Current.Session("Form.Track")) AndAlso HttpContext.Current.Session("Form.Track").ToString.ToLower = "true" Then
                        InMotionGIT.Common.Helpers.FileHandler.SaveContent(String.Format(CultureInfo.InvariantCulture, 
                                                                                         "{0}\{1}.H5CotizacionMiAutoaDorado.txt", ConfigurationManager.AppSettings("Path.Logs"), formData.InternalId), 
                                                                                         HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", 
                                                                                                                                   IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath"))))
                    End If

                    InMotionGIT.Common.Helpers.Serialize.SerializeToFile(Of H5CotizacionMiAutoaDoradoParameters)(formData, String.Format(CultureInfo.InvariantCulture, "{0}\{1}.H5CotizacionMiAutoaDorado.xml", 
                                                                                                                        ConfigurationManager.AppSettings("Path.Logs"), formData.InternalId), True)
                End If
            End If
        End Sub

        Private Shared Function RetrieveFormInformationFromDatabase(instanceFormId As String) As H5CotizacionMiAutoaDoradoParameters
            Dim result As H5CotizacionMiAutoaDoradoParameters = Nothing
            Dim records As DataTable = Nothing

            With New DataManagerFactory("SELECT Content FROM FrontOffice.DocumentCache WHERE FormId = @:FormId",
                                        "FrontOffice.DocumentCache", "FrontOfficeConnectionString")

            .AddParameter("FormId", DbType.AnsiStringFixedLength, 36, False, instanceFormId)
                records = .QueryExecuteToTable(True)
            End With

            If records.Rows.Count > 0 Then
                result = Serialize.Deserialize(Of H5CotizacionMiAutoaDoradoParameters)(records.FirstRow.Item("Content"))
            End If

            Return result
        End Function

        Private Shared Sub InsertStorageData(formData As H5CotizacionMiAutoaDoradoParameters)
            Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
	    
            With New DataManagerFactory("INSERT INTO FrontOffice.DocumentCache (FormId, ModelId, UserId, Page, Content, CreationDate, UpdateDate) VALUES(@:FormId, @:ModelId, @:UserId, @:Page, @:Content, @:CreationDate, @:UpdateDate)",
                                        "FrontOffice.DocumentCache", "FrontOfficeConnectionString")

                .AddParameter("FormId", DbType.AnsiStringFixedLength, 36, False, formData.InternalId)
                .AddParameter("ModelId", DbType.AnsiStringFixedLength, 36, False, "9d4219c5-efbf-49a6-95ab-9f875c339fd8")
                .AddParameter("UserId", DbType.AnsiString, 256, False, UserInfo.UserId)
            .AddParameter("Page", DbType.AnsiString, 255, False, HttpContext.Current.Request.UrlReferrer.AbsolutePath)
            .AddParameter("Content", DbType.Xml, 1, False, Serialize.Serialize(Of H5CotizacionMiAutoaDoradoParameters)(formData))
            .AddParameter("CreationDate", DbType.DateTime, 20, False, Now)
            .AddParameter("UpdateDate", DbType.DateTime, 20, False, Now)

                .CommandExecute()
            End With
        End Sub

        Private Shared Sub UpdateStorageData(formData As H5CotizacionMiAutoaDoradoParameters)
            Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
	    
            With New DataManagerFactory("UPDATE FrontOffice.DocumentCache SET ModelId = @:ModelId, UserId = @:UserId, Page = @:Page, Content = @:Content, UpdateDate = @:UpdateDate WHERE FormId = @:FormId",
                                        "FrontOffice.DocumentCache", "FrontOfficeConnectionString")

                .AddParameter("ModelId", DbType.AnsiStringFixedLength, 36, False, "9d4219c5-efbf-49a6-95ab-9f875c339fd8")
                .AddParameter("UserId", DbType.AnsiString, 256, False, UserInfo.UserId)
            .AddParameter("Page", DbType.AnsiString, 255, False, HttpContext.Current.Request.UrlReferrer.AbsolutePath)
            .AddParameter("Content", DbType.Xml, 1, False, Serialize.Serialize(Of H5CotizacionMiAutoaDoradoParameters)(formData))
            .AddParameter("UpdateDate", DbType.DateTime, 20, False, Now)
            .AddParameter("FormId", DbType.AnsiStringFixedLength, 36, False, formData.InternalId)

                .CommandExecute()
            End With
        End Sub

#End Region


#Region "Contracts Mappers"

        Private Shared Function EntryDataToClass(parametersData As H5CotizacionMiAutoaDoradoParameters, formData As EntryData) As H5CotizacionMiAutoaDoradoParameters
            If IsNothing(parametersData) Then
                parametersData = New H5CotizacionMiAutoaDoradoParameters
            End If

            If IsNothing(parametersData.RiskInformation) Then
                parametersData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
            End If
            If IsNothing(parametersData.RiskInformation.AutomobileLineOfBusiness) Then
                parametersData.RiskInformation.AutomobileLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness
            End If
            If IsNothing(parametersData.RiskInformation.CoveragesWithCalculatedPremium) Then
                parametersData.RiskInformation.CoveragesWithCalculatedPremium = New InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremiumCollection
            End If
            If IsNothing(parametersData.RiskInformation.PrimaryInsured) Then
                parametersData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
            End If
            If IsNothing(parametersData.RiskInformation.PrimaryInsured.Client) Then
                parametersData.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
            End If
            If IsNothing(parametersData.RiskInformation.AutomobileLineOfBusiness.AutomobileInformation) Then
                parametersData.RiskInformation.AutomobileLineOfBusiness.AutomobileInformation = New InMotionGIT.Policy.Entity.Contracts.AutomobileInformation
            End If
            If IsNothing(parametersData.RiskInformation.AutomaticPaymentPolicy) Then
                parametersData.RiskInformation.AutomaticPaymentPolicy = New InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy
            End If

            With parametersData
                .InternalId = formData.InstanceFormId
                .RiskInformation.ProductCode = formData.RiskInformationProductCode
                .RiskInformation.EffectiveDate = formData.RiskInformationEffectiveDate
                .RiskInformation.LineOfBusiness = formData.RiskInformationLineOfBusiness
                .BirthdateIncluded = formData.BirthdateIncluded
                .RiskInformation.AutomobileLineOfBusiness.YearOfManufactured = formData.RiskInformationAutomobileLineOfBusinessYearOfManufactured
                .RiskInformation.AutomobileLineOfBusiness.VehicleCode = formData.RiskInformationAutomobileLineOfBusinessVehicleCode
                .RiskInformation.AutomobileLineOfBusiness.ValueOfTheVehicle = formData.RiskInformationAutomobileLineOfBusinessValueOfTheVehicle
                .RiskInformation.Currency = formData.RiskInformationCurrency
                .RiskInformation.AutomobileLineOfBusiness.DrivingZone = formData.RiskInformationAutomobileLineOfBusinessDrivingZone
                .RiskInformation.AutomobileLineOfBusiness.UseOfVehicle = formData.RiskInformationAutomobileLineOfBusinessUseOfVehicle
                If formData.CoverageWithCalculatedPremium_CoverageWithCalculatedPremium.IsNotEmpty Then
                    Dim currentItem As InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium
                  
	            For Each itemData As CoverageWithCalculatedPremium_CoverageWithCalculatedPremiumItem In formData.CoverageWithCalculatedPremium_CoverageWithCalculatedPremium
                        currentItem = (From _x In parametersData.RiskInformation.CoveragesWithCalculatedPremium Where _x.CoverageCode = itemData.CoverageCode Select _x).FirstOrDefault()
                     
	                If currentItem.IsEmpty Then
                            currentItem = New InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium
                  
                            With currentItem

                                .SelectedByDefault = itemData.SelectedByDefault
                                .Description = itemData.Description
                                .InsuredAmount = itemData.InsuredAmount
                                .AnnualPremium = itemData.AnnualPremium
                                .CoverageCode = itemData.CoverageCode
                            End With
                        
                            parametersData.RiskInformation.CoveragesWithCalculatedPremium.Add(currentItem)
                     
	                Else
                            With currentItem

                                .SelectedByDefault = itemData.SelectedByDefault
                                .Description = itemData.Description
                                .InsuredAmount = itemData.InsuredAmount
                                .AnnualPremium = itemData.AnnualPremium
                                .CoverageCode = itemData.CoverageCode
                            End With
                        End If
                    Next
                End If
                .RiskInformation.PrimaryInsured.Client.ClientID = formData.RiskInformationPrimaryInsuredClientClientID
                .RiskInformation.PrimaryInsured.Client.FirstName = formData.RiskInformationPrimaryInsuredClientFirstName
                .RiskInformation.PrimaryInsured.Client.LastName = formData.RiskInformationPrimaryInsuredClientLastName
                .RiskInformation.PrimaryInsured.Client.LastName2 = formData.RiskInformationPrimaryInsuredClientLastName2
                .RiskInformation.PrimaryInsured.Client.Gender = formData.RiskInformationPrimaryInsuredClientGender
                .RiskInformation.AutomobileLineOfBusiness.LicensePlateType = formData.RiskInformationAutomobileLineOfBusinessLicensePlateType
                .RiskInformation.AutomobileLineOfBusiness.LicensePlate = formData.RiskInformationAutomobileLineOfBusinessLicensePlate
                .RiskInformation.AutomobileLineOfBusiness.Color = formData.RiskInformationAutomobileLineOfBusinessColor
                .RiskInformation.AutomobileLineOfBusiness.Chassis = formData.RiskInformationAutomobileLineOfBusinessChassis
                .RiskInformation.AutomobileLineOfBusiness.EngineSerialNumber = formData.RiskInformationAutomobileLineOfBusinessEngineSerialNumber
                .RiskInformation.AutomobileLineOfBusiness.AutomobileInformation.Mileage = formData.RiskInformationAutomobileLineOfBusinessAutomobileInformationMileage
                .RiskInformation.PrimaryInsured.Client.BusinessAddress = formData.BusinessAddress
                .RiskInformation.AutomaticPaymentPolicy.CreditCardType = formData.RiskInformationAutomaticPaymentPolicyCreditCardType
                .RiskInformation.AutomaticPaymentPolicy.BankCode = formData.RiskInformationAutomaticPaymentPolicyBankCode
                .RiskInformation.AutomaticPaymentPolicy.CreditCardNumber = formData.RiskInformationAutomaticPaymentPolicyCreditCardNumber
                .MonthCard = formData.MonthCard
                .YearCard = formData.YearCard
                .RiskInformation.AutomaticPaymentPolicy.AuthorizationNumber = formData.RiskInformationAutomaticPaymentPolicyAuthorizationNumber
                .eMail = formData.eMail
                .OnLinePrintIndicator = formData.OnLinePrintIndicator
                .MailToProducerIndicator = formData.MailToProducerIndicator
            End With

            Return parametersData
        End Function

        Private Shared Function ClassToEntryData(formData As EntryData, parametersData As H5CotizacionMiAutoaDoradoParameters) As EntryData
            formData = New EntryData

            With formData
                .InstanceFormId = parametersData.InternalId
                If Not IsNothing(parametersData.RiskInformation) Then
                    .RiskInformationProductCode = parametersData.RiskInformation.ProductCode
                End If
                If Not IsNothing(parametersData.RiskInformation) Then
                    .RiskInformationEffectiveDate = parametersData.RiskInformation.EffectiveDate
                End If
                .uwcaseid = parametersData.uwcaseid
                If Not IsNothing(parametersData.RiskInformation) Then
                    .RiskInformationLineOfBusiness = parametersData.RiskInformation.LineOfBusiness
                End If
                .BirthdateIncluded = parametersData.BirthdateIncluded
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.AutomobileLineOfBusiness) Then
                    .RiskInformationAutomobileLineOfBusinessYearOfManufactured = parametersData.RiskInformation.AutomobileLineOfBusiness.YearOfManufactured
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.AutomobileLineOfBusiness) Then
                    .RiskInformationAutomobileLineOfBusinessVehicleCode = parametersData.RiskInformation.AutomobileLineOfBusiness.VehicleCode
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.AutomobileLineOfBusiness) Then
                    .RiskInformationAutomobileLineOfBusinessValueOfTheVehicle = parametersData.RiskInformation.AutomobileLineOfBusiness.ValueOfTheVehicle
                End If
                If Not IsNothing(parametersData.RiskInformation) Then
                    .RiskInformationCurrency = parametersData.RiskInformation.Currency
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.AutomobileLineOfBusiness) Then
                    .RiskInformationAutomobileLineOfBusinessDrivingZone = parametersData.RiskInformation.AutomobileLineOfBusiness.DrivingZone
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.AutomobileLineOfBusiness) Then
                    .RiskInformationAutomobileLineOfBusinessUseOfVehicle = parametersData.RiskInformation.AutomobileLineOfBusiness.UseOfVehicle
                End If
                .CoverageWithCalculatedPremium_CoverageWithCalculatedPremium = New List(Of CoverageWithCalculatedPremium_CoverageWithCalculatedPremiumItem)

                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.CoveragesWithCalculatedPremium) Then
                    Dim newItem as CoverageWithCalculatedPremium_CoverageWithCalculatedPremiumItem
                    
                    For Each itemData As InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium In parametersData.RiskInformation.CoveragesWithCalculatedPremium
                        newItem = New CoverageWithCalculatedPremium_CoverageWithCalculatedPremiumItem
                        
                        With newItem
                            .SelectedByDefault = itemData.SelectedByDefault
                            .Description = itemData.Description
                            .InsuredAmount = itemData.InsuredAmount
                            .AnnualPremium = itemData.AnnualPremium
                            .CoverageCode = itemData.CoverageCode                        
                        End With
                        
                        .CoverageWithCalculatedPremium_CoverageWithCalculatedPremium.Add(newItem)
                    Next
                End If


                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured.Client) Then
                    .RiskInformationPrimaryInsuredClientClientID = parametersData.RiskInformation.PrimaryInsured.Client.ClientID
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured.Client) Then
                    .RiskInformationPrimaryInsuredClientFirstName = parametersData.RiskInformation.PrimaryInsured.Client.FirstName
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured.Client) Then
                    .RiskInformationPrimaryInsuredClientLastName = parametersData.RiskInformation.PrimaryInsured.Client.LastName
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured.Client) Then
                    .RiskInformationPrimaryInsuredClientLastName2 = parametersData.RiskInformation.PrimaryInsured.Client.LastName2
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured.Client) Then
                    .RiskInformationPrimaryInsuredClientGender = parametersData.RiskInformation.PrimaryInsured.Client.Gender
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.AutomobileLineOfBusiness) Then
                    .RiskInformationAutomobileLineOfBusinessLicensePlateType = parametersData.RiskInformation.AutomobileLineOfBusiness.LicensePlateType
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.AutomobileLineOfBusiness) Then
                    .RiskInformationAutomobileLineOfBusinessLicensePlate = parametersData.RiskInformation.AutomobileLineOfBusiness.LicensePlate
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.AutomobileLineOfBusiness) Then
                    .RiskInformationAutomobileLineOfBusinessColor = parametersData.RiskInformation.AutomobileLineOfBusiness.Color
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.AutomobileLineOfBusiness) Then
                    .RiskInformationAutomobileLineOfBusinessChassis = parametersData.RiskInformation.AutomobileLineOfBusiness.Chassis
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.AutomobileLineOfBusiness) Then
                    .RiskInformationAutomobileLineOfBusinessEngineSerialNumber = parametersData.RiskInformation.AutomobileLineOfBusiness.EngineSerialNumber
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.AutomobileLineOfBusiness) AndAlso Not IsNothing(parametersData.RiskInformation.AutomobileLineOfBusiness.AutomobileInformation) Then
                    .RiskInformationAutomobileLineOfBusinessAutomobileInformationMileage = parametersData.RiskInformation.AutomobileLineOfBusiness.AutomobileInformation.Mileage
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured.Client) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured.Client.BusinessAddress) Then
                    .BusinessAddress = parametersData.RiskInformation.PrimaryInsured.Client.BusinessAddress
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.AutomaticPaymentPolicy) Then
                    .RiskInformationAutomaticPaymentPolicyCreditCardType = parametersData.RiskInformation.AutomaticPaymentPolicy.CreditCardType
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.AutomaticPaymentPolicy) Then
                    .RiskInformationAutomaticPaymentPolicyBankCode = parametersData.RiskInformation.AutomaticPaymentPolicy.BankCode
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.AutomaticPaymentPolicy) Then
                    .RiskInformationAutomaticPaymentPolicyCreditCardNumber = parametersData.RiskInformation.AutomaticPaymentPolicy.CreditCardNumber
                End If
                .MonthCard = parametersData.MonthCard
                .YearCard = parametersData.YearCard
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.AutomaticPaymentPolicy) Then
                    .RiskInformationAutomaticPaymentPolicyAuthorizationNumber = parametersData.RiskInformation.AutomaticPaymentPolicy.AuthorizationNumber
                End If
                .eMail = parametersData.eMail
                .OnLinePrintIndicator = parametersData.OnLinePrintIndicator
                .MailToProducerIndicator = parametersData.MailToProducerIndicator
            End With

            Return formData
        End Function

#End Region

#Region "Common Utilities"

        Private Shared Sub SetDefaultValuesFromQueryString(formData As H5CotizacionMiAutoaDoradoParameters)
            If HttpContext.Current.Request.QueryString("Age").IsNotEmpty Then
                formData.Age = HttpContext.Current.Request.QueryString("Age")
            End If
            If HttpContext.Current.Request.QueryString("BirthdateIncluded").IsNotEmpty Then
                formData.BirthdateIncluded = HttpContext.Current.Request.QueryString("BirthdateIncluded")
            End If
            If HttpContext.Current.Request.QueryString("ClienteIndicado").IsNotEmpty Then
                formData.ClienteIndicado = HttpContext.Current.Request.QueryString("ClienteIndicado")
            End If
            If HttpContext.Current.Request.QueryString("ClientExistInDB").IsNotEmpty Then
                formData.ClientExistInDB = HttpContext.Current.Request.QueryString("ClientExistInDB")
            End If
            If HttpContext.Current.Request.QueryString("CountRecords").IsNotEmpty Then
                formData.CountRecords = HttpContext.Current.Request.QueryString("CountRecords")
            End If
            If HttpContext.Current.Request.QueryString("Currency").IsNotEmpty Then
                formData.Currency = HttpContext.Current.Request.QueryString("Currency")
            End If
            If HttpContext.Current.Request.QueryString("CurrentYear").IsNotEmpty Then
                formData.CurrentYear = HttpContext.Current.Request.QueryString("CurrentYear")
            End If
            If HttpContext.Current.Request.QueryString("eMail").IsNotEmpty Then
                formData.eMail = HttpContext.Current.Request.QueryString("eMail")
            End If
            If HttpContext.Current.Request.QueryString("ErrorsFound").IsNotEmpty Then
                formData.ErrorsFound = HttpContext.Current.Request.QueryString("ErrorsFound")
            End If
            If HttpContext.Current.Request.QueryString("frompanel").IsNotEmpty Then
                formData.frompanel = HttpContext.Current.Request.QueryString("frompanel")
            End If
            If HttpContext.Current.Request.QueryString("MailToProducerIndicator").IsNotEmpty Then
                formData.MailToProducerIndicator = HttpContext.Current.Request.QueryString("MailToProducerIndicator")
            End If
            If HttpContext.Current.Request.QueryString("MonthCard").IsNotEmpty Then
                formData.MonthCard = HttpContext.Current.Request.QueryString("MonthCard")
            End If
            If HttpContext.Current.Request.QueryString("OnLinePrintIndicator").IsNotEmpty Then
                formData.OnLinePrintIndicator = HttpContext.Current.Request.QueryString("OnLinePrintIndicator")
            End If
            If HttpContext.Current.Request.QueryString("OnLinePrintResult").IsNotEmpty Then
                formData.OnLinePrintResult = HttpContext.Current.Request.QueryString("OnLinePrintResult")
            End If
            If HttpContext.Current.Request.QueryString("PlanillaModificacion").IsNotEmpty Then
                formData.PlanillaModificacion = HttpContext.Current.Request.QueryString("PlanillaModificacion")
            End If
            If HttpContext.Current.Request.QueryString("PlanillaVisualizacion").IsNotEmpty Then
                formData.PlanillaVisualizacion = HttpContext.Current.Request.QueryString("PlanillaVisualizacion")
            End If
            If HttpContext.Current.Request.QueryString("PlanType").IsNotEmpty Then
                formData.PlanType = HttpContext.Current.Request.QueryString("PlanType")
            End If
            If HttpContext.Current.Request.QueryString("PolicyDocument").IsNotEmpty Then
                formData.PolicyDocument = HttpContext.Current.Request.QueryString("PolicyDocument")
            End If
            If HttpContext.Current.Request.QueryString("PreviousPayment").IsNotEmpty Then
                formData.PreviousPayment = HttpContext.Current.Request.QueryString("PreviousPayment")
            End If
            If HttpContext.Current.Request.QueryString("PrimaTotal").IsNotEmpty Then
                formData.PrimaTotal = HttpContext.Current.Request.QueryString("PrimaTotal")
            End If
            If HttpContext.Current.Request.QueryString("PrimaTotalAnual").IsNotEmpty Then
                formData.PrimaTotalAnual = HttpContext.Current.Request.QueryString("PrimaTotalAnual")
            End If
            If HttpContext.Current.Request.QueryString("ProducerClientID").IsNotEmpty Then
                formData.ProducerClientID = HttpContext.Current.Request.QueryString("ProducerClientID")
            End If
            If HttpContext.Current.Request.QueryString("ProductDescription").IsNotEmpty Then
                formData.ProductDescription = HttpContext.Current.Request.QueryString("ProductDescription")
            End If
            If HttpContext.Current.Request.QueryString("ProductMasterDescription").IsNotEmpty Then
                formData.ProductMasterDescription = HttpContext.Current.Request.QueryString("ProductMasterDescription")
            End If
            If HttpContext.Current.Request.QueryString("RecoveryCaseIndicator").IsNotEmpty Then
                formData.RecoveryCaseIndicator = HttpContext.Current.Request.QueryString("RecoveryCaseIndicator")
            End If
            If HttpContext.Current.Request.QueryString("ReportURL").IsNotEmpty Then
                formData.ReportURL = HttpContext.Current.Request.QueryString("ReportURL")
            End If
            If HttpContext.Current.Request.QueryString("SendMailIndicator").IsNotEmpty Then
                formData.SendMailIndicator = HttpContext.Current.Request.QueryString("SendMailIndicator")
            End If
            If HttpContext.Current.Request.QueryString("StatusCase").IsNotEmpty Then
                formData.StatusCase = HttpContext.Current.Request.QueryString("StatusCase")
            End If
            If HttpContext.Current.Request.QueryString("StatusRun").IsNotEmpty Then
                formData.StatusRun = HttpContext.Current.Request.QueryString("StatusRun")
            End If
            If HttpContext.Current.Request.QueryString("UsercodeBO").IsNotEmpty Then
                formData.UsercodeBO = HttpContext.Current.Request.QueryString("UsercodeBO")
            End If
            If HttpContext.Current.Request.QueryString("UsercodeFASI").IsNotEmpty Then
                formData.UsercodeFASI = HttpContext.Current.Request.QueryString("UsercodeFASI")
            End If
            If HttpContext.Current.Request.QueryString("uwcaseid").IsNotEmpty Then
                formData.uwcaseid = HttpContext.Current.Request.QueryString("uwcaseid")
            End If
            If HttpContext.Current.Request.QueryString("VehicleCodeInteger").IsNotEmpty Then
                formData.VehicleCodeInteger = HttpContext.Current.Request.QueryString("VehicleCodeInteger")
            End If
            If HttpContext.Current.Request.QueryString("YearCard").IsNotEmpty Then
                formData.YearCard = HttpContext.Current.Request.QueryString("YearCard")
            End If
        End Sub	

        Private Shared Sub ValidateParametersInstance(ByRef formData As H5CotizacionMiAutoaDoradoParameters)
            If IsNothing(formData.RiskInformation) Then
                formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
            End If
            If IsNothing(formData.RiskInformation.AutomobileLineOfBusiness) Then
                formData.RiskInformation.AutomobileLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness
            End If
            If IsNothing(formData.RiskInformation.CoveragesWithCalculatedPremium) Then
                formData.RiskInformation.CoveragesWithCalculatedPremium = New InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremiumCollection
            End If
            If IsNothing(formData.RiskInformation.PrimaryInsured) Then
                formData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
            End If
            If IsNothing(formData.RiskInformation.PrimaryInsured.Client) Then
                formData.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
            End If
            If IsNothing(formData.RiskInformation.AutomobileLineOfBusiness.AutomobileInformation) Then
                formData.RiskInformation.AutomobileLineOfBusiness.AutomobileInformation = New InMotionGIT.Policy.Entity.Contracts.AutomobileInformation
            End If
            If IsNothing(formData.RiskInformation.AutomaticPaymentPolicy) Then
                formData.RiskInformation.AutomaticPaymentPolicy = New InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy
            End If

        End Sub

#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property RiskInformationProductCode As System.Int32
            <DataMember()> Public Property RiskInformationEffectiveDate As System.DateTime
            <DataMember()> Public Property uwcaseid As Int64
            <DataMember()> Public Property RiskInformationLineOfBusiness As System.Int32
            <DataMember()> Public Property BirthdateIncluded As DateTime
            <DataMember()> Public Property RiskInformationAutomobileLineOfBusinessYearOfManufactured As System.Int32
            <DataMember()> Public Property RiskInformationAutomobileLineOfBusinessVehicleCode As System.String
            <DataMember()> Public Property RiskInformationAutomobileLineOfBusinessValueOfTheVehicle As System.Decimal
            <DataMember()> Public Property RiskInformationCurrency As System.Int32
            <DataMember()> Public Property RiskInformationAutomobileLineOfBusinessDrivingZone As System.Int64
            <DataMember()> Public Property RiskInformationAutomobileLineOfBusinessUseOfVehicle As System.Int32
            <DataMember()> Public Property RiskInformationCoveragesWithCalculatedPremiumSelectedByDefault As System.Boolean
            <DataMember()> Public Property RiskInformationCoveragesWithCalculatedPremiumDescription As System.String
            <DataMember()> Public Property RiskInformationCoveragesWithCalculatedPremiumInsuredAmount As System.Decimal
            <DataMember()> Public Property RiskInformationCoveragesWithCalculatedPremiumAnnualPremium As System.Decimal
            <DataMember()> Public Property CoverageWithCalculatedPremium_CoverageWithCalculatedPremium As List(Of CoverageWithCalculatedPremium_CoverageWithCalculatedPremiumItem)
            <DataMember()> Public Property RiskInformationPrimaryInsuredClientClientID As System.String
            <DataMember()> Public Property RiskInformationPrimaryInsuredClientFirstName As System.String
            <DataMember()> Public Property RiskInformationPrimaryInsuredClientLastName As System.String
            <DataMember()> Public Property RiskInformationPrimaryInsuredClientLastName2 As System.String
            <DataMember()> Public Property RiskInformationPrimaryInsuredClientGender As System.String
            <DataMember()> Public Property RiskInformationAutomobileLineOfBusinessLicensePlateType As System.String
            <DataMember()> Public Property RiskInformationAutomobileLineOfBusinessLicensePlate As System.String
            <DataMember()> Public Property RiskInformationAutomobileLineOfBusinessColor As System.String
            <DataMember()> Public Property RiskInformationAutomobileLineOfBusinessChassis As System.String
            <DataMember()> Public Property RiskInformationAutomobileLineOfBusinessEngineSerialNumber As System.String
            <DataMember()> Public Property RiskInformationAutomobileLineOfBusinessAutomobileInformationMileage As System.Int64
            <DataMember()> Public Property BusinessAddress As New InMotionGIT.General.Entity.Contracts.Address.Address
            <DataMember()> Public Property RiskInformationAutomaticPaymentPolicyCreditCardType As System.Int32
            <DataMember()> Public Property RiskInformationAutomaticPaymentPolicyBankCode As System.Int64
            <DataMember()> Public Property RiskInformationAutomaticPaymentPolicyCreditCardNumber As System.String
            <DataMember()> Public Property MonthCard As Int32
            <DataMember()> Public Property YearCard As Int32
            <DataMember()> Public Property RiskInformationAutomaticPaymentPolicyAuthorizationNumber As System.String
            <DataMember()> Public Property eMail As String
            <DataMember()> Public Property OnLinePrintIndicator As Boolean
            <DataMember()> Public Property MailToProducerIndicator As Boolean

        End Class

        <Serializable()>
        <DataContract()>
        Public Class CoverageWithCalculatedPremium_CoverageWithCalculatedPremiumItem

            <DataMember()> Public Property SelectedByDefault As System.Boolean
            <DataMember()> Public Property Description As System.String
            <DataMember()> Public Property InsuredAmount As System.Decimal
            <DataMember()> Public Property AnnualPremium As System.Decimal
            <DataMember()> Public Property CoverageCode As System.Int32

        End Class

        <Serializable()>
        Public Class H5CotizacionMiAutoaDoradoParameters
            Inherits InMotionGIT.FrontOffice.Support.DataType.FormBase(Of H5CotizacionMiAutoaDoradoParameters)

            Public Property Age As Int32
            Public Property BirthdateIncluded As DateTime
            Public Property ClienteIndicado As String
            Public Property ClientExistInDB As Boolean
            Public Property ClientIncluded As InMotionGIT.Client.Entity.Contracts.Client
            Public Property CountRecords As Int32
            Public Property Currency As Int32
            Public Property CurrentYear As Int32
            Public Property eMail As String
            Public Property ErrorsFound As Boolean
            Public Property frompanel As Boolean
            Public Property MailToProducerIndicator As Boolean
            Public Property MonthCard As Int32
            Public Property OnLinePrintIndicator As Boolean
            Public Property OnLinePrintResult As Int32
            Public Property PlanillaModificacion As String
            Public Property PlanillaVisualizacion As String
            Public Property PlanType As Int32
            Public Property PolicyDocument As String
            Public Property PreviousPayment As Boolean
            Public Property PrimaTotal As Decimal
            Public Property PrimaTotalAnual As Decimal
            Public Property ProducerClientID As String
            Public Property ProductDescription As String
            Public Property ProductMasterDescription As String
            Public Property RecoveryCaseIndicator As Boolean
            Public Property ReportURL As String
            Public Property RiskInformation As InMotionGIT.Policy.Entity.Contracts.RiskInformation
            Public Property SendMailIndicator As Boolean
            Public Property StatusCase As Int32
            Public Property StatusRun As Boolean
            Public Property UnderwritingCase As InMotionGIT.Underwriting.Contracts.UnderwritingCase
            Public Property UsercodeBO As Int32
            Public Property UsercodeFASI As Int32
            Public Property uwcaseid As Int64
            Public Property VehicleCodeInteger As Int32
            Public Property YearCard As Int32

        End Class
#End Region

    End Class

End Namespace