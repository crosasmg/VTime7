'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Form Designer v7.3.18.1 at 2019/09/12 03:52:00  model release 59, Form Generator v1.0.36.21
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"

Imports System.Data
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Web.Script.Services
Imports System.Web.Services
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.FrontOffice.Support

#End Region

Namespace dli.forms

    Public Class H5NNNCotizacionMiVidaValeActions
        Inherits System.Web.UI.Page

#Region "Actions Methods"

       <WebMethod(EnableSession:=True)>
        Public Shared Function Initialization(id As String, urlid As String, fromid As String) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim instance As New EntryData With {.InstanceFormId = id}
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim lookups As New List(Of Object)
            Dim currentAction As String = String.Empty
            
            Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = Nothing

            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                
                If id.IsEmpty AndAlso urlid.IsEmpty Then
                    instance.InstanceFormId = System.Guid.NewGuid().ToString
                    
                    With instance

                    End With                
                    
                    H5NNNCotizacionMiVidaValeParametersInstance = EntryDataToClass(H5NNNCotizacionMiVidaValeParametersInstance, instance)
                    SetDefaultValuesFromQueryString(H5NNNCotizacionMiVidaValeParametersInstance)
                    
                    If fromid.IsNotEmpty Then
                        GetTransferParameters(H5NNNCotizacionMiVidaValeParametersInstance, fromid)
                        ValidateParametersInstance(H5NNNCotizacionMiVidaValeParametersInstance)
                    End If
                Else       
                    instance.InstanceFormId = id.IfEmpty(urlid)
                    H5NNNCotizacionMiVidaValeParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
    
                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance) then
                        H5NNNCotizacionMiVidaValeParametersInstance = EntryDataToClass(H5NNNCotizacionMiVidaValeParametersInstance, instance)                        
                    End If
                    
                    SetDefaultValuesFromQueryString(H5NNNCotizacionMiVidaValeParametersInstance)
                End If

                HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath"))) = String.Empty

                If id.IsEmpty AndAlso urlid.IsEmpty Then
                    Form_Initialization(currentAction, H5NNNCotizacionMiVidaValeParametersInstance, resultData)
                Else
                    Form_Load(currentAction, H5NNNCotizacionMiVidaValeParametersInstance, resultData)
                End If


                instance = ClassToEntryData(instance, H5NNNCotizacionMiVidaValeParametersInstance) 
		        
                StoreFormInformation(H5NNNCotizacionMiVidaValeParametersInstance)
                
                With lookups
                
                End With
                
                With resultData
                    .Success = True
                    .Data = New With {.Instance = instance, .LookUps = lookups}
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5NNNCotizacionMiVidaVale", "Initialization", currentAction)
            End Try
            
            Return resultData
        End Function
   
        <WebMethod(EnableSession:=True)>
        Public Shared Function InsuredAmountSelectedChange(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5NNNCotizacionMiVidaValeParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("InsuredAmountSelectedClick")
                H5NNNCotizacionMiVidaValeParametersInstance = EntryDataToClass(H5NNNCotizacionMiVidaValeParametersInstance, instance)
                currentAction = SessionTrace("1. Coverages.Visible = False")
                currentAction = SessionTrace("1.1. Coverages.Visible = False...")
                resultData.AddControlBehavior("Coverages", "hide")

                currentAction = SessionTrace("2. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmount = H5NNNCotizacionMiVidaValeParametersInstance.InsuredAmountSelected...")
                currentAction = SessionTrace("2.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmount = H5NNNCotizacionMiVidaValeParametersInstance.InsuredAmountSelected...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmount = H5NNNCotizacionMiVidaValeParametersInstance.InsuredAmountSelected
                currentAction = SessionTrace("2.2. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation = H5NNNCotizacionMiVidaValeParametersInstance.InsuredAmountSelected...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation = H5NNNCotizacionMiVidaValeParametersInstance.InsuredAmountSelected

                currentAction = SessionTrace("3. 'H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AmendmentInformation' = New 'InMotionGIT.Policy.Entity'...'")
                H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AmendmentInformation = New InMotionGIT.Policy.Entity.Contracts.AmendmentInformation

                currentAction = SessionTrace("4. 'H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Coverages' = New 'InMotionGIT.Policy.Entity'...'")
                H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Coverages = New InMotionGIT.Policy.Entity.Contracts.CoverageCollection


                instance = ClassToEntryData(instance, H5NNNCotizacionMiVidaValeParametersInstance)
                
                StoreFormInformation(H5NNNCotizacionMiVidaValeParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5NNNCotizacionMiVidaVale", "InsuredAmountSelectedChange", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function CotizarClick(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5NNNCotizacionMiVidaValeParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("CotizarClick")
                H5NNNCotizacionMiVidaValeParametersInstance = EntryDataToClass(H5NNNCotizacionMiVidaValeParametersInstance, instance)
                currentAction = SessionTrace("1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.BirthDate...")
                currentAction = SessionTrace("1.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.BirthDate...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.BirthDate
                currentAction = SessionTrace("1.2. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.Gender = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.Gender...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.Gender = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.Gender
                currentAction = SessionTrace("1.3. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.SmokerIndicator = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.SmokerIndi...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.SmokerIndicator = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.SmokerIndicator

                currentAction = SessionTrace("2. 'H5NNNCotizacionMiVidaValeParametersInstance.LookUpValueCollection' = New 'InMotionGIT.Common.DataTy'...'")
                H5NNNCotizacionMiVidaValeParametersInstance.LookUpValueCollection = New InMotionGIT.Common.DataType.LookUpValueCollection

                currentAction = SessionTrace("3. H5NNNCotizacionMiVidaValeParametersInstance.InRuleErros = False...")
                currentAction = SessionTrace("3.1. H5NNNCotizacionMiVidaValeParametersInstance.InRuleErros = False...")

                H5NNNCotizacionMiVidaValeParametersInstance.InRuleErros = False

                currentAction = SessionTrace("4. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.ActuarialAge = year(Date.Today) - year(H5NNNCotizacionMiVidaValeParametersInstance.R...")
                currentAction = SessionTrace("4.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.ActuarialAge = year(Date.Today) - year(H5NNNCotizacionMiVidaValeParametersInstance.R...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.ActuarialAge = year(Date.Today) - year(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate)

                currentAction = SessionTrace("5. If H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.ActuarialAge < 18 Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.ActuarialAge < 18 Then

                    currentAction = SessionTrace("6. The message 'El solicitante del s...' will displayed as 'Splash'")
                    ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                    messageAction = "El solicitante del seguro debe ser mayor de edad ({ Value /RiskInformation/LifeLineOfBusiness/ActuarialAge })"
                    messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                    resultData.AddNotifySplash(messageAction)
                    currentAction = SessionTrace("7. H5NNNCotizacionMiVidaValeParametersInstance.InRuleErros = True...")
                    currentAction = SessionTrace("7.1. H5NNNCotizacionMiVidaValeParametersInstance.InRuleErros = True...")

                    H5NNNCotizacionMiVidaValeParametersInstance.InRuleErros = True

                    currentAction = SessionTrace("8. 'H5NNNCotizacionMiVidaValeParametersInstance.LookUpValue' = New 'InMotionGIT.Common.DataTy'...'")
                    H5NNNCotizacionMiVidaValeParametersInstance.LookUpValue = New InMotionGIT.Common.DataType.LookUpValue

                    currentAction = SessionTrace("9. H5NNNCotizacionMiVidaValeParametersInstance.LookUpValue.Code = 1...")
                    currentAction = SessionTrace("9.1. H5NNNCotizacionMiVidaValeParametersInstance.LookUpValue.Code = 1...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.LookUpValue) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.LookUpValue = New InMotionGIT.Common.DataType.LookUpValue
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.LookUpValue.Code = 1
                    currentAction = SessionTrace("9.2. H5NNNCotizacionMiVidaValeParametersInstance.LookUpValue.Description = 'El solicitante del seguro debe ser...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.LookUpValue) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.LookUpValue = New InMotionGIT.Common.DataType.LookUpValue
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.LookUpValue.Description = "El solicitante del seguro debe ser mayor de edad (" & H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.ActuarialAge &")"

                    currentAction = SessionTrace("10. 'H5NNNCotizacionMiVidaValeParametersInstance.LookUpValueCollection'.Add('H5NNNCotizacionMiVidaValeParametersInstance.LookUpValue')")
                    H5NNNCotizacionMiVidaValeParametersInstance.LookUpValueCollection.Add(H5NNNCotizacionMiVidaValeParametersInstance.LookUpValue)

                    End If
                currentAction = SessionTrace("11. If H5NNNCotizacionMiVidaValeParametersInstance.InRuleErros = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.InRuleErros = false Then

                    currentAction = SessionTrace("12. If H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation Is Null Or Empty  OR H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation = 0 Then")
                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation) OrElse H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation = 0 Then

                        currentAction = SessionTrace("13. The message 'Indique la suma aseg...' will displayed as 'Popup'")
                        ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                        messageAction = "Indique la suma asegurada"
                        messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                        resultData.AddNotifyPopup(messageAction)
                        currentAction = SessionTrace("14. H5NNNCotizacionMiVidaValeParametersInstance.InRuleErros = true...")
                        currentAction = SessionTrace("14.1. H5NNNCotizacionMiVidaValeParametersInstance.InRuleErros = true...")

                        H5NNNCotizacionMiVidaValeParametersInstance.InRuleErros = true

                                End If
                            End If
                currentAction = SessionTrace("15. If H5NNNCotizacionMiVidaValeParametersInstance.InRuleErros = False Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.InRuleErros = False Then

                    currentAction = SessionTrace("16. Coverages.Visible = true")
                    currentAction = SessionTrace("16.1. Coverages.Visible = true...")
                    resultData.AddControlBehavior("Coverages", "show")

                    currentAction = SessionTrace("17. button2.Visible = true")
                    currentAction = SessionTrace("17.1. button2.Visible = true...")
                    resultData.AddControlBehavior("button2", "show")

                    currentAction = SessionTrace("18. label6.Visible = true, label1.Visible = false")
                    currentAction = SessionTrace("18.1. label6.Visible = true...")
                    resultData.AddControlBehavior("label6", "show")
                    currentAction = SessionTrace("18.2. label1.Visible = false...")
                    resultData.AddControlBehavior("label1", "hide")

                    currentAction = SessionTrace("19. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Currency = H5NNNCotizacionMiVidaValeParametersInstance.Currency...")
                    currentAction = SessionTrace("19.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Currency = H5NNNCotizacionMiVidaValeParametersInstance.Currency...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Currency = H5NNNCotizacionMiVidaValeParametersInstance.Currency

                    currentAction = SessionTrace("20. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.RiskType = 1...")
                    currentAction = SessionTrace("20.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.RiskType = 1...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.RiskType = 1

                    currentAction = SessionTrace("21. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.ClientRole = 2...")
                    currentAction = SessionTrace("21.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.ClientRole = 2...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.ClientRole = 2

                    currentAction = SessionTrace("22. TotalOriginalAnnualPremium.Visible = False")
                    currentAction = SessionTrace("22.1. TotalOriginalAnnualPremium.Visible = False...")
                    resultData.AddControlBehavior("TotalOriginalAnnualPremium", "hide")

                                End If
                currentAction = SessionTrace("23. If H5NNNCotizacionMiVidaValeParametersInstance.PlanType = 1 Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.PlanType = 1 Then

                    currentAction = SessionTrace("24. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation = H5NNNCotizacionMiVidaValeParametersInstance.InsuredAmountSelected...")
                    currentAction = SessionTrace("24.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation = H5NNNCotizacionMiVidaValeParametersInstance.InsuredAmountSelected...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation = H5NNNCotizacionMiVidaValeParametersInstance.InsuredAmountSelected
                    currentAction = SessionTrace("24.2. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountCalculation = H5NNNCotizacionMiVidaValeParametersInstance.InsuredAmountSelected...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountCalculation = H5NNNCotizacionMiVidaValeParametersInstance.InsuredAmountSelected

                                    End If
                currentAction = SessionTrace("25. If H5NNNCotizacionMiVidaValeParametersInstance.InRuleErros = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.InRuleErros = false Then

                    currentAction = SessionTrace("26. 'H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AmendmentInformation' = New 'InMotionGIT.Policy.Entity'...'")
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AmendmentInformation = New InMotionGIT.Policy.Entity.Contracts.AmendmentInformation

                    currentAction = SessionTrace("27. 'H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Coverages' = New 'InMotionGIT.Policy.Entity'...'")
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Coverages = New InMotionGIT.Policy.Entity.Contracts.CoverageCollection

                    currentAction = SessionTrace("28. Call 'Asigna módulos seleccionados por defecto' workflow in Synchronous mode with tracking")
                    WorkflowInArguments = New Dictionary(Of String, Object)

                    With WorkflowInArguments
                    .Add("context", formContext)
                    .Add("ModulosRiskInformation", H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Modules)
                    .Add("ProcessDate", H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.EffectiveDate)
                    .Add("LineOfBusiness", H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LineOfBusiness)
                    .Add("ProductCode", H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.ProductCode)
                    .Add("Currency", H5NNNCotizacionMiVidaValeParametersInstance.Currency)
                    End With

                    WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("AsignaModulosPorDefecto", "f7b4e740-4915-411e-bc5b-a5027c73d125", 0, WorkflowInArguments, True, True, HttpContext.Current.Request.UrlReferrer.AbsolutePath, H5NNNCotizacionMiVidaValeParametersInstance.InternalId)

                    currentAction += "'Mapping Outputs'"
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Modules = WorkflowOutArguments("ModulosRiskInformation")

currentAction = SessionTrace("30. Call 'Calculo de coberturas de una póliza' library")
                Dim _RiskInformation_35faaa51da48440db3449c2d9bfca16e As InMotionGIT.Policy.Entity.Contracts.RiskInformation 
                _RiskInformation_35faaa51da48440db3449c2d9bfca16e = (New InMotionGIT.PolicyManager.Proxy.Manager).RatingCalculateProcess(riskInformation:=H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation, errors:=formContext.Errors, transaction:=0, atDate:=Date.Today, accessToken:=HttpContext.Current.Session("AccessToken"), provider:="CORE", companyID:=1) 
 
                isNullResult = (IsNothing(_RiskInformation_35faaa51da48440db3449c2d9bfca16e)) 
                If Not isNullResult Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = _RiskInformation_35faaa51da48440db3449c2d9bfca16e
                End If

currentAction = SessionTrace("33. Call 'Prepara los objetos asociados a cambiar en RiskInformation.' library")
                Dim _RiskInformation_1b80826b679a40af863c8827b4b4c992 As InMotionGIT.Policy.Entity.Contracts.RiskInformation 
                _RiskInformation_1b80826b679a40af863c8827b4b4c992 = (New InMotionGIT.PolicyManager.Proxy.Manager).AmendmentSetup(risk:=H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation, atDate:=Date.Today, accessToken:=HttpContext.Current.Session("AccessToken"), provider:="CORE") 
 
                isNullResult = (IsNothing(_RiskInformation_1b80826b679a40af863c8827b4b4c992)) 
                If Not isNullResult Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = _RiskInformation_1b80826b679a40af863c8827b4b4c992
                End If

                    currentAction = SessionTrace("34. Call Shared Sub 'Clear Form Errors' without parameters")
                    
        H5NNNCotizacionMiVidaValeParametersInstance.Errors.Clear()
	formContext.Errors.Clear()
    

                                        End If
                currentAction = SessionTrace("35. If H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount <> 0 Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount <> 0 Then

                    currentAction = SessionTrace("36. zone11.Visible = True")
                    currentAction = SessionTrace("36.1. zone11.Visible = True...")
                    resultData.AddControlBehavior("zone11", "show")

                                            End If
                currentAction = SessionTrace("37. H5NNNCotizacionMiVidaValeParametersInstance.FormStatus = 1...")
                currentAction = SessionTrace("37.1. H5NNNCotizacionMiVidaValeParametersInstance.FormStatus = 1...")

                H5NNNCotizacionMiVidaValeParametersInstance.FormStatus = 1


                instance = ClassToEntryData(instance, H5NNNCotizacionMiVidaValeParametersInstance)
                
                StoreFormInformation(H5NNNCotizacionMiVidaValeParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5NNNCotizacionMiVidaVale", "CotizarClick", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function button2Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5NNNCotizacionMiVidaValeParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button2Click")
                H5NNNCotizacionMiVidaValeParametersInstance = EntryDataToClass(H5NNNCotizacionMiVidaValeParametersInstance, instance)
                currentAction = SessionTrace("1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false...")
                currentAction = SessionTrace("1.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false...")

                H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false

                currentAction = SessionTrace("2. If H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation Is Null Or Empty  OR H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation = 0 Then")
                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation) OrElse H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation = 0 Then

                    currentAction = SessionTrace("3. The message 'Indique la suma aseg...' will displayed as 'Popup'")
                    ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                    messageAction = "Indique la suma asegurada"
                    messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                    resultData.AddNotifyPopup(messageAction)
                    currentAction = SessionTrace("4. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")
                    currentAction = SessionTrace("4.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")

                    H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true

                    currentAction = SessionTrace("5. label1.Visible = true, Cotizar.Visible = true, label6.Visible = true...")
                    currentAction = SessionTrace("5.1. label1.Visible = true...")
                    resultData.AddControlBehavior("label1", "show")
                    currentAction = SessionTrace("5.2. Cotizar.Visible = true...")
                    resultData.AddControlBehavior("Cotizar", "show")
                    currentAction = SessionTrace("5.3. label6.Visible = true...")
                    resultData.AddControlBehavior("label6", "show")
                    currentAction = SessionTrace("5.4. button2.Visible = true...")
                    resultData.AddControlBehavior("button2", "show")

                    End If
                currentAction = SessionTrace("6. If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("7. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.InsuredAmount = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineO...")
                    currentAction = SessionTrace("7.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.InsuredAmount = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineO...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.InsuredAmount = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation

                    currentAction = SessionTrace("8. InsuredAmountSelected.Enabled = false, InsuredAmountForCalculation.Enabled = false, tab18.Visible = true...")
                    currentAction = SessionTrace("8.1. InsuredAmountSelected.Enabled = false...")
                    resultData.AddControlBehavior("InsuredAmountSelected", "disabled")
                    currentAction = SessionTrace("8.2. InsuredAmountForCalculation.Enabled = false...")
                    resultData.AddControlBehavior("InsuredAmountForCalculation", "disabled")
                    currentAction = SessionTrace("8.3. tab18.Visible = true...")
                    resultData.AddControlBehavior("tab18", "show")
                    currentAction = SessionTrace("8.4. zone8.Visible = true...")
                    resultData.AddControlBehavior("zone8", "show")
                    currentAction = SessionTrace("8.5. zone5.Visible = false...")
                    resultData.AddControlBehavior("zone5", "hide")
                    currentAction = SessionTrace("8.6. zone18.Visible = true...")
                    resultData.AddControlBehavior("zone18", "show")
                    currentAction = SessionTrace("8.7. RiskInformationEffectiveDate.Enabled = false...")
                    resultData.AddControlBehavior("RiskInformationEffectiveDate", "disabled")
                    currentAction = SessionTrace("8.8. PaymentFrequency.Visible = false...")
                    resultData.AddControlBehavior("PaymentFrequency", "hide")

                    currentAction = SessionTrace("9. H5NNNCotizacionMiVidaValeParametersInstance.FormStatus = 2...")
                    currentAction = SessionTrace("9.1. H5NNNCotizacionMiVidaValeParametersInstance.FormStatus = 2...")

                    H5NNNCotizacionMiVidaValeParametersInstance.FormStatus = 2

                    currentAction = SessionTrace("10. H5NNNCotizacionMiVidaValeParametersInstance.CurrentYear = year(Date.Today)...")
                    currentAction = SessionTrace("10.1. H5NNNCotizacionMiVidaValeParametersInstance.CurrentYear = year(Date.Today)...")

                    H5NNNCotizacionMiVidaValeParametersInstance.CurrentYear = year(Date.Today)

                        End If
                currentAction = SessionTrace("11. If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("12. If H5NNNCotizacionMiVidaValeParametersInstance.IsAnonymous = true Then")
                    If H5NNNCotizacionMiVidaValeParametersInstance.IsAnonymous = true Then

                        currentAction = SessionTrace("13. tab1Autenticacion.Visible = true, zonegeneral.Visible = false, zone2.Visible = true...")
                        currentAction = SessionTrace("13.1. tab1Autenticacion.Visible = true...")
                        resultData.AddControlBehavior("tab1Autenticacion", "show")
                        currentAction = SessionTrace("13.2. zonegeneral.Visible = false...")
                        resultData.AddControlBehavior("zonegeneral", "hide")
                        currentAction = SessionTrace("13.3. zone2.Visible = true...")
                        resultData.AddControlBehavior("zone2", "show")
                        currentAction = SessionTrace("13.4. Cotizar.Visible = false...")
                        resultData.AddControlBehavior("Cotizar", "hide")
                        currentAction = SessionTrace("13.5. button2.Visible = false...")
                        resultData.AddControlBehavior("button2", "hide")
                        currentAction = SessionTrace("13.6. InsuredAmountForCalculation.Enabled = false...")
                        resultData.AddControlBehavior("InsuredAmountForCalculation", "disabled")
                        currentAction = SessionTrace("13.7. Currency.Enabled = false...")
                        resultData.AddControlBehavior("Currency", "disabled")
                        currentAction = SessionTrace("13.8. InsuredAmountSelected.Enabled = false...")
                        resultData.AddControlBehavior("InsuredAmountSelected", "disabled")
                        currentAction = SessionTrace("13.9. Coverages.Enabled = false...")
                        resultData.AddControlBehavior("Coverages", "disabled")
                        currentAction = SessionTrace("13.10. tabcontainer0.ActiveTab = tab1Autenticacion...")
                        resultData.AddControlBehavior("tab1Autenticacion", "active")

                                    Else
                        currentAction = SessionTrace("14. tab13.Visible = true, zonegeneral.Visible = false, zone2.Visible = true...")
                        currentAction = SessionTrace("14.1. tab13.Visible = true...")
                        resultData.AddControlBehavior("tab13", "show")
                        currentAction = SessionTrace("14.2. zonegeneral.Visible = false...")
                        resultData.AddControlBehavior("zonegeneral", "hide")
                        currentAction = SessionTrace("14.3. zone2.Visible = true...")
                        resultData.AddControlBehavior("zone2", "show")
                        currentAction = SessionTrace("14.4. Cotizar.Visible = false...")
                        resultData.AddControlBehavior("Cotizar", "hide")
                        currentAction = SessionTrace("14.5. tab13.Enabled = true...")
                        resultData.AddControlBehavior("tab13", "enabled")
                        currentAction = SessionTrace("14.6. button2.Visible = false...")
                        resultData.AddControlBehavior("button2", "hide")
                        currentAction = SessionTrace("14.7. InsuredAmountForCalculation.Enabled = false...")
                        resultData.AddControlBehavior("InsuredAmountForCalculation", "disabled")
                        currentAction = SessionTrace("14.8. Currency.Enabled = false...")
                        resultData.AddControlBehavior("Currency", "disabled")
                        currentAction = SessionTrace("14.9. InsuredAmountSelected.Enabled = false...")
                        resultData.AddControlBehavior("InsuredAmountSelected", "disabled")
                        currentAction = SessionTrace("14.10. Coverages.Enabled = false...")
                        resultData.AddControlBehavior("Coverages", "disabled")
                        currentAction = SessionTrace("14.11. tabcontainer0.ActiveTab = tab13...")
                        resultData.AddControlBehavior("tab13", "active")

                                        End If
                                    End If

                instance = ClassToEntryData(instance, H5NNNCotizacionMiVidaValeParametersInstance)
                
                StoreFormInformation(H5NNNCotizacionMiVidaValeParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5NNNCotizacionMiVidaVale", "button2Click", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function btnAutenticarClick(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5NNNCotizacionMiVidaValeParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("btnAutenticarClick")
                H5NNNCotizacionMiVidaValeParametersInstance = EntryDataToClass(H5NNNCotizacionMiVidaValeParametersInstance, instance)
                currentAction = SessionTrace("1. H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = false...")
                currentAction = SessionTrace("1.1. H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = false...")

                H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = false

                currentAction = SessionTrace("2. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false...")
                currentAction = SessionTrace("2.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false...")

                H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false

                currentAction = SessionTrace("3. If H5NNNCotizacionMiVidaValeParametersInstance.ClienteInformaEsUsuario = true Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ClienteInformaEsUsuario = true Then

                    currentAction = SessionTrace("4. zone38.Visible = true")
                    currentAction = SessionTrace("4.1. zone38.Visible = true...")
                    resultData.AddControlBehavior("zone38", "show")

                    End If
                currentAction = SessionTrace("5. If H5NNNCotizacionMiVidaValeParametersInstance.ClienteInformaEsUsuario = true Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ClienteInformaEsUsuario = true Then

                    currentAction = SessionTrace("6. H5NNNCotizacionMiVidaValeParametersInstance.QRegistros = 0...")
                    currentAction = SessionTrace("6.1. H5NNNCotizacionMiVidaValeParametersInstance.QRegistros = 0...")

                    H5NNNCotizacionMiVidaValeParametersInstance.QRegistros = 0

                    currentAction = SessionTrace("7. SELECT USERMEMBER.EMAIL FROM USERMEMBER... WHERE USERMEMBER.EMAIL = H5NNNCotizacionMiVidaValeParametersInstance.UsuarioClaveEntrada )")
                    isFoundData = False
                                               With New DataManagerFactory("SELECT COUNT(UPPER(TRIM(USERMEMBER.EMAIL))) EMAIL FROM USERMEMBER USERMEMBER  WHERE UPPER(USERMEMBER.EMAIL) = @:USERMEMBEREMAIL0", "USERMEMBER", "Linked.FrontOffice")
.AddParameter("USERMEMBEREMAIL0", DbType.AnsiString, 255, (H5NNNCotizacionMiVidaValeParametersInstance.UsuarioClaveEntrada = String.Empty), H5NNNCotizacionMiVidaValeParametersInstance.UsuarioClaveEntrada)
 
            H5NNNCotizacionMiVidaValeParametersInstance.QRegistros = .QueryExecuteScalarToInteger()  
        End With

                    currentAction = SessionTrace("8. If H5NNNCotizacionMiVidaValeParametersInstance.QRegistros Is Null Or Empty  OR H5NNNCotizacionMiVidaValeParametersInstance.QRegistros = 0 Then")
                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.QRegistros) OrElse H5NNNCotizacionMiVidaValeParametersInstance.QRegistros = 0 Then

                        currentAction = SessionTrace("9. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")
                        currentAction = SessionTrace("9.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")

                        H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true

                        currentAction = SessionTrace("10. The message 'Lo sentimos... No ha...' will displayed as 'Splash'")
                        ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                        messageAction = "Lo sentimos... No ha superado la autenticación del asegurado..."
                        messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                        resultData.AddNotifySplash(messageAction)
                                Else
                        currentAction = SessionTrace("11. SELECT USERMEMBER.EMAIL, USERMEMBER.CLIENTID FROM USERMEMBER... WHERE USERMEMBER.EMAIL = H5NNNCotizacionMiVidaValeParametersInstance.UsuarioClaveEntrada )")
                        isFoundData = False
                               With New DataManagerFactory("SELECT UPPER(TRIM(USERMEMBER.EMAIL)) EMAIL, TRIM(USERMEMBER.CLIENTID) CLIENTID FROM USERMEMBER USERMEMBER  WHERE UPPER(USERMEMBER.EMAIL) = @:USERMEMBEREMAIL0", "USERMEMBER", "Linked.FrontOffice")
.AddParameter("USERMEMBEREMAIL0", DbType.AnsiString, 255, (H5NNNCotizacionMiVidaValeParametersInstance.UsuarioClaveEntrada = String.Empty), H5NNNCotizacionMiVidaValeParametersInstance.UsuarioClaveEntrada)
 
            selectDataTableItem = .QueryExecuteToTable(True)  
        End With
                        With selectDataTableItem
                                If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                                    isFoundData = True
                                              If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.UserInformation) Then
              H5NNNCotizacionMiVidaValeParametersInstance.UserInformation = New InMotionGIT.FrontOffice.Proxy.UserService.UserInformation
          End If 
                                                            H5NNNCotizacionMiVidaValeParametersInstance.UserInformation.Email = .Rows(0).StringValue("EMAIL") 
                        H5NNNCotizacionMiVidaValeParametersInstance.UserInformation.ClientID = .Rows(0).StringValue("CLIENTID") 

                                End If
                        End With

currentAction = SessionTrace("13. Call 'Búsqueda de toda la información de un cliente' library")
                Dim _Client_ad826b19ed724c1ca88ac16aa313c131 As InMotionGIT.Client.Entity.Contracts.Client 
                _Client_ad826b19ed724c1ca88ac16aa313c131 = (New InMotionGIT.Client.Proxy.Manager).Retrieve(clientId:=H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID, atDate:=Date.Today, withLookupInformation:=True, childFilter:="All", accessToken:="String.Empty", provider:="CORE", companyID:=1) 
 
                isNullResult = (IsNothing(_Client_ad826b19ed724c1ca88ac16aa313c131)) 
                If Not isNullResult Then
                    H5NNNCotizacionMiVidaValeParametersInstance.ClientProvisional = _Client_ad826b19ed724c1ca88ac16aa313c131
                End If

                        currentAction = SessionTrace("14. H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true...")
                        currentAction = SessionTrace("14.1. H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true...")

                        H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true

                                    End If
                                End If
                currentAction = SessionTrace("15. If H5NNNCotizacionMiVidaValeParametersInstance.ClienteInformaExiste = true Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ClienteInformaExiste = true Then

                    currentAction = SessionTrace("16. H5NNNCotizacionMiVidaValeParametersInstance.QRegistros = 0...")
                    currentAction = SessionTrace("16.1. H5NNNCotizacionMiVidaValeParametersInstance.QRegistros = 0...")

                    H5NNNCotizacionMiVidaValeParametersInstance.QRegistros = 0

                    currentAction = SessionTrace("17. Call 'LLena ceros a la izquierda' workflow in Synchronous mode with tracking")
                    WorkflowInArguments = New Dictionary(Of String, Object)

                    With WorkflowInArguments
                    .Add("context", formContext)
                    .Add("CodigoCliente", H5NNNCotizacionMiVidaValeParametersInstance.ClientInsuredPerson.ClientID)
                    .Add("LargoCodigo", 14)
                    End With

                    WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("LlenaCerosIzquierdaCodigo", "97e5264d-cb53-46a3-a786-fbcc3bb10ff2", 1, WorkflowInArguments, True, True, HttpContext.Current.Request.UrlReferrer.AbsolutePath, H5NNNCotizacionMiVidaValeParametersInstance.InternalId)

                    currentAction += "'Mapping Outputs'"
                    H5NNNCotizacionMiVidaValeParametersInstance.ClientInsuredPerson.ClientID = WorkflowOutArguments("CodigoCliente")

                    currentAction = SessionTrace("18. SELECT CLIENT.SCLIENT FROM CLIENT... WHERE CLIENT.SCLIENT = H5NNNCotizacionMiVidaValeParametersInstance.ClientInsuredPerson.ClientID )")
                    isFoundData = False
                                               With New DataManagerFactory("SELECT COUNT(TRIM(CLIENT.SCLIENT)) SCLIENT FROM CLIENT CLIENT  WHERE CLIENT.SCLIENT = @:CLIENTSCLIENT0", "CLIENT", "Linked.LatCombined")
.AddParameter("CLIENTSCLIENT0", DbType.AnsiStringFixedLength, 14, (H5NNNCotizacionMiVidaValeParametersInstance.ClientInsuredPerson.ClientID = String.Empty), H5NNNCotizacionMiVidaValeParametersInstance.ClientInsuredPerson.ClientID)
 
            H5NNNCotizacionMiVidaValeParametersInstance.QRegistros = .QueryExecuteScalarToInteger()  
        End With

                    currentAction = SessionTrace("19. If H5NNNCotizacionMiVidaValeParametersInstance.QRegistros = 0 OR H5NNNCotizacionMiVidaValeParametersInstance.QRegistros Is Null Or Empty  Then")
                    If H5NNNCotizacionMiVidaValeParametersInstance.QRegistros = 0 OrElse IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.QRegistros) Then

                        currentAction = SessionTrace("20. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")
                        currentAction = SessionTrace("20.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")

                        H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true

                        currentAction = SessionTrace("21. The message 'Lo sentimos... No ha...' will displayed as 'Splash'")
                        ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                        messageAction = "Lo sentimos... No ha superado la autenticación del asegurado..."
                        messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                        resultData.AddNotifySplash(messageAction)
                                            Else
currentAction = SessionTrace("23. Call 'Búsqueda de toda la información de un cliente' library")
                Dim _Client_b20a581274c24cad988b6f1e4ccd6dbf As InMotionGIT.Client.Entity.Contracts.Client 
                _Client_b20a581274c24cad988b6f1e4ccd6dbf = (New InMotionGIT.Client.Proxy.Manager).Retrieve(clientId:=H5NNNCotizacionMiVidaValeParametersInstance.ClientInsuredPerson.ClientID, atDate:=Date.Today, withLookupInformation:=True, childFilter:="All", accessToken:="String.Empty", provider:="CORE", companyID:=1) 
 
                isNullResult = (IsNothing(_Client_b20a581274c24cad988b6f1e4ccd6dbf)) 
                If Not isNullResult Then
                    H5NNNCotizacionMiVidaValeParametersInstance.ClientProvisional = _Client_b20a581274c24cad988b6f1e4ccd6dbf
                End If

                        currentAction = SessionTrace("24. H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true...")
                        currentAction = SessionTrace("24.1. H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true...")

                        H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true

                                                End If
                                            End If
                currentAction = SessionTrace("25. If H5NNNCotizacionMiVidaValeParametersInstance.ClienteInformaEsUsuario <> true AND H5NNNCotizacionMiVidaValeParametersInstance.ClienteInformaExiste <> true Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ClienteInformaEsUsuario <> true AndAlso H5NNNCotizacionMiVidaValeParametersInstance.ClienteInformaExiste <> true Then

                    currentAction = SessionTrace("26. Call 'LLena ceros a la izquierda' workflow in Synchronous mode with tracking")
                    WorkflowInArguments = New Dictionary(Of String, Object)

                    With WorkflowInArguments
                    .Add("context", formContext)
                    .Add("CodigoCliente", H5NNNCotizacionMiVidaValeParametersInstance.ClientInsuredPerson.ClientID)
                    .Add("LargoCodigo", 14)
                    End With

                    WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("LlenaCerosIzquierdaCodigo", "97e5264d-cb53-46a3-a786-fbcc3bb10ff2", 2, WorkflowInArguments, True, True, HttpContext.Current.Request.UrlReferrer.AbsolutePath, H5NNNCotizacionMiVidaValeParametersInstance.InternalId)

                    currentAction += "'Mapping Outputs'"
                    H5NNNCotizacionMiVidaValeParametersInstance.ClientInsuredPerson.ClientID = WorkflowOutArguments("CodigoCliente")

currentAction = SessionTrace("28. Call 'Búsqueda de toda la información de un cliente' library")
                Dim _Client_bde69e15420746b29721f6fab2629320 As InMotionGIT.Client.Entity.Contracts.Client 
                _Client_bde69e15420746b29721f6fab2629320 = (New InMotionGIT.Client.Proxy.Manager).Retrieve(clientId:=H5NNNCotizacionMiVidaValeParametersInstance.ClientInsuredPerson.ClientID, atDate:=Date.Today, withLookupInformation:=True, childFilter:="All", accessToken:="String.Empty", provider:="CORE", companyID:=0) 
 
                isNullResult = (IsNothing(_Client_bde69e15420746b29721f6fab2629320)) 
                If Not isNullResult Then
                    H5NNNCotizacionMiVidaValeParametersInstance.ClientProvisional = _Client_bde69e15420746b29721f6fab2629320
                End If

                    currentAction = SessionTrace("29. If Form.IsNullResult = false Then")
                    If isNullResult = false Then

                        currentAction = SessionTrace("30. H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true...")
                        currentAction = SessionTrace("30.1. H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true...")

                        H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true

                        currentAction = SessionTrace("31. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = True...")
                        currentAction = SessionTrace("31.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = True...")

                        H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = True

                        currentAction = SessionTrace("32. The message 'Lo sentimos... No ha...' will displayed as 'Splash'")
                        ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                        messageAction = "Lo sentimos... No ha superado la autenticación del asegurado..."
                        messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                        resultData.AddNotifySplash(messageAction)
                                                        End If
                                                    End If
                currentAction = SessionTrace("33. If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("34. If H5NNNCotizacionMiVidaValeParametersInstance.ClienteInformaEsUsuario = true OR H5NNNCotizacionMiVidaValeParametersInstance.ClienteInformaExiste = true Then")
                    If H5NNNCotizacionMiVidaValeParametersInstance.ClienteInformaEsUsuario = true OrElse H5NNNCotizacionMiVidaValeParametersInstance.ClienteInformaExiste = true Then

                        currentAction = SessionTrace("35. If H5NNNCotizacionMiVidaValeParametersInstance.ClientProvisional.BirthDate Not Is Null Or Not Empty '' Then")
                        If Not IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.ClientProvisional.BirthDate) AndAlso H5NNNCotizacionMiVidaValeParametersInstance.ClientProvisional.BirthDate <> Date.MinValue Then

                            currentAction = SessionTrace("36. If H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.BirthDate <> H5NNNCotizacionMiVidaValeParametersInstance.ClientProvisional.BirthDate Then")
                            If H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.BirthDate <> H5NNNCotizacionMiVidaValeParametersInstance.ClientProvisional.BirthDate Then

                                currentAction = SessionTrace("37. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")
                                currentAction = SessionTrace("37.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")

                                H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true

                                currentAction = SessionTrace("38. The message 'Lo sentimos... No ha...' will displayed as 'Splash'")
                                ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                                messageAction = "Lo sentimos... No ha superado la autenticación del asegurado..."
                                messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                                resultData.AddNotifySplash(messageAction)
                                                                                End If
                                                                            End If
                                                                        End If
                                                                    End If
                currentAction = SessionTrace("39. If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("40. If H5NNNCotizacionMiVidaValeParametersInstance.ClienteInformaEsUsuario = true OR H5NNNCotizacionMiVidaValeParametersInstance.ClienteInformaExiste = true Then")
                    If H5NNNCotizacionMiVidaValeParametersInstance.ClienteInformaEsUsuario = true OrElse H5NNNCotizacionMiVidaValeParametersInstance.ClienteInformaExiste = true Then

                        currentAction = SessionTrace("41. If H5NNNCotizacionMiVidaValeParametersInstance.ClientProvisional.Gender Not Is Null Or Not Empty '' Then")
                        If Not String.IsNullOrEmpty(H5NNNCotizacionMiVidaValeParametersInstance.ClientProvisional.Gender) Then

                            currentAction = SessionTrace("42. If H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.Gender <> H5NNNCotizacionMiVidaValeParametersInstance.ClientProvisional.Gender Then")
                            If H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.Gender <> H5NNNCotizacionMiVidaValeParametersInstance.ClientProvisional.Gender Then

                                currentAction = SessionTrace("43. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")
                                currentAction = SessionTrace("43.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")

                                H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true

                                currentAction = SessionTrace("44. The message 'Lo sentimos... No ha...' will displayed as 'Splash'")
                                ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                                messageAction = "Lo sentimos... No ha superado la autenticación del asegurado..."
                                messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                                resultData.AddNotifySplash(messageAction)
                                                                                                End If
                                                                                            End If
                                                                                        End If
                                                                                    End If
                currentAction = SessionTrace("45. If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("46. If H5NNNCotizacionMiVidaValeParametersInstance.ClienteInformaExiste = true Then")
                    If H5NNNCotizacionMiVidaValeParametersInstance.ClienteInformaExiste = true Then

                        currentAction = SessionTrace("47. If H5NNNCotizacionMiVidaValeParametersInstance.ClientInsuredPerson.FirstName <> H5NNNCotizacionMiVidaValeParametersInstance.ClientProvisional.FirstName OR H5NNNCotizacionMiVidaValeParametersInstance.ClientInsuredPerson.LastName <> H5NNNCotizacionMiVidaValeParametersInstance.ClientProvisional.LastName OR ... Then")
                        If H5NNNCotizacionMiVidaValeParametersInstance.ClientInsuredPerson.FirstName <> H5NNNCotizacionMiVidaValeParametersInstance.ClientProvisional.FirstName OrElse H5NNNCotizacionMiVidaValeParametersInstance.ClientInsuredPerson.LastName <> H5NNNCotizacionMiVidaValeParametersInstance.ClientProvisional.LastName OrElse H5NNNCotizacionMiVidaValeParametersInstance.ClientInsuredPerson.LastName2 <> H5NNNCotizacionMiVidaValeParametersInstance.ClientProvisional.LastName2 Then

                            currentAction = SessionTrace("48. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")
                            currentAction = SessionTrace("48.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")

                            H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true

                            currentAction = SessionTrace("49. The message 'Lo sentimos... No ha...' will displayed as 'Splash'")
                            ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                            messageAction = "Lo sentimos... No ha superado la autenticación del asegurado..."
                            messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                            resultData.AddNotifySplash(messageAction)
                                                                                                        End If
                                                                                                    End If
                                                                                                End If
                currentAction = SessionTrace("50. If H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = false Then

                    currentAction = SessionTrace("51. H5NNNCotizacionMiVidaValeParametersInstance.ClientProvisional.TypeOfPerson = 1...")
                    currentAction = SessionTrace("51.1. H5NNNCotizacionMiVidaValeParametersInstance.ClientProvisional.TypeOfPerson = 1...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.ClientProvisional) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.ClientProvisional = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.ClientProvisional.TypeOfPerson = 1
                    currentAction = SessionTrace("51.2. H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.TypeOfPerson = 1...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.TypeOfPerson = 1

                                                                                                    End If
                currentAction = SessionTrace("52. If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("53. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = H5NNNCotizacionMiVidaValeParametersInstance.ClientInsuredPerson...")
                    currentAction = SessionTrace("53.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = H5NNNCotizacionMiVidaValeParametersInstance.ClientInsuredPerson...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = H5NNNCotizacionMiVidaValeParametersInstance.ClientInsuredPerson
                    currentAction = SessionTrace("53.2. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.BirthDate...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.BirthDate
                    currentAction = SessionTrace("53.3. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.Gender = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.Gender...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.Gender = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.Gender
                    currentAction = SessionTrace("53.4. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.SmokerIndicator = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.SmokerIndi...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.SmokerIndicator = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.SmokerIndicator
                    currentAction = SessionTrace("53.5. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.TypeOfPerson = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.TypeOfPers...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.TypeOfPerson = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.TypeOfPerson

                    currentAction = SessionTrace("54. tab13.Visible = true, zonegeneral.Visible = false, zone2.Visible = true...")
                    currentAction = SessionTrace("54.1. tab13.Visible = true...")
                    resultData.AddControlBehavior("tab13", "show")
                    currentAction = SessionTrace("54.2. zonegeneral.Visible = false...")
                    resultData.AddControlBehavior("zonegeneral", "hide")
                    currentAction = SessionTrace("54.3. zone2.Visible = true...")
                    resultData.AddControlBehavior("zone2", "show")
                    currentAction = SessionTrace("54.4. Cotizar.Visible = false...")
                    resultData.AddControlBehavior("Cotizar", "hide")
                    currentAction = SessionTrace("54.5. tab13.Enabled = true...")
                    resultData.AddControlBehavior("tab13", "enabled")
                    currentAction = SessionTrace("54.6. Acepto.Visible = false...")
                    resultData.AddControlBehavior("Acepto", "hide")
                    currentAction = SessionTrace("54.7. InsuredAmountForCalculation.Enabled = false...")
                    resultData.AddControlBehavior("InsuredAmountForCalculation", "disabled")
                    currentAction = SessionTrace("54.8. Currency.Enabled = false...")
                    resultData.AddControlBehavior("Currency", "disabled")
                    currentAction = SessionTrace("54.9. InsuredAmountSelected.Enabled = false...")
                    resultData.AddControlBehavior("InsuredAmountSelectedWrap", "disabled")
                    currentAction = SessionTrace("54.10. Coverages.Enabled = false...")
                    resultData.AddControlBehavior("Coverages", "disabled")

                    currentAction = SessionTrace("55. ClientID.Enabled = false, FirstName.Enabled = false, LastName.Enabled = false...")
                    currentAction = SessionTrace("55.1. ClientID.Enabled = false...")
                    resultData.AddControlBehavior("ClientID", "disabled")
                    currentAction = SessionTrace("55.2. FirstName.Enabled = false...")
                    resultData.AddControlBehavior("FirstName", "disabled")
                    currentAction = SessionTrace("55.3. LastName.Enabled = false...")
                    resultData.AddControlBehavior("LastName", "disabled")
                    currentAction = SessionTrace("55.4. LastName2.Enabled = false...")
                    resultData.AddControlBehavior("LastName2", "disabled")

                    currentAction = SessionTrace("56. tab1Autenticacion.Visible = false, tabcontainer0.ActiveTab = tab13")
                    currentAction = SessionTrace("56.1. tab1Autenticacion.Visible = false...")
                    resultData.AddControlBehavior("tab1Autenticacion", "hide")
                    currentAction = SessionTrace("56.2. tabcontainer0.ActiveTab = tab13...")
                    resultData.AddControlBehavior("tab13", "active")

                    currentAction = SessionTrace("57. zone10.Enabled = true")
                    currentAction = SessionTrace("57.1. zone10.Enabled = true...")
                    resultData.AddControlBehavior("zone10", "enabled")

                                                                                                        End If
                currentAction = SessionTrace("58. H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.CompanyId = 1...")
                currentAction = SessionTrace("58.1. H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.CompanyId = 1...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.CompanyId = 1
                currentAction = SessionTrace("58.2. H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.Country = 58...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.Country = 58
                currentAction = SessionTrace("58.3. H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.Security.Usercode = 9998...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.Security) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.Security = New InMotionGIT.Common.Contracts.Process.SecurityInformation
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.Security.Usercode = 9998


                instance = ClassToEntryData(instance, H5NNNCotizacionMiVidaValeParametersInstance)
                
                StoreFormInformation(H5NNNCotizacionMiVidaValeParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5NNNCotizacionMiVidaVale", "btnAutenticarClick", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function ClientIDChange(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5NNNCotizacionMiVidaValeParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("ClientIDClick")
                H5NNNCotizacionMiVidaValeParametersInstance = EntryDataToClass(H5NNNCotizacionMiVidaValeParametersInstance, instance)
Dim DayBirthDate As System.Int16
Dim MonthBirthDate As System.Int16
Dim YearBirthDate As System.Int16
Dim DayBirthDateFromBD As System.Int16
Dim MonthBirthDateFromBD As System.Int16
Dim YearBirthDateFromBD As System.Int16
                currentAction = SessionTrace("1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false...")
                currentAction = SessionTrace("1.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false...")

                H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false

                currentAction = SessionTrace("2. H5NNNCotizacionMiVidaValeParametersInstance.ClienteIndicado = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")
                currentAction = SessionTrace("2.1. H5NNNCotizacionMiVidaValeParametersInstance.ClienteIndicado = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")

                H5NNNCotizacionMiVidaValeParametersInstance.ClienteIndicado = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID

                currentAction = SessionTrace("3. Call 'LLena ceros a la izquierda' workflow in Synchronous mode with tracking")
                WorkflowInArguments = New Dictionary(Of String, Object)

                With WorkflowInArguments
                .Add("context", formContext)
                .Add("CodigoCliente", H5NNNCotizacionMiVidaValeParametersInstance.ClienteIndicado)
                .Add("LargoCodigo", 14)
                End With

                WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("LlenaCerosIzquierdaCodigo", "97e5264d-cb53-46a3-a786-fbcc3bb10ff2", 0, WorkflowInArguments, True, True, HttpContext.Current.Request.UrlReferrer.AbsolutePath, H5NNNCotizacionMiVidaValeParametersInstance.InternalId)

                currentAction += "'Mapping Outputs'"
                H5NNNCotizacionMiVidaValeParametersInstance.ClienteIndicado = WorkflowOutArguments("CodigoCliente")

                currentAction = SessionTrace("4. Call Shared Function 'Retrieve Client' with parameters (Client Identification)")
                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If

                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                Dim _Client_81e7f7e08ae6408d801991a77bdf077c As InMotionGIT.Client.Entity.Contracts.Client
                
      _Client_81e7f7e08ae6408d801991a77bdf077c = (New InMotionGIT.Client.Services.ClientManager).Retrieve(clientId:=H5NNNCotizacionMiVidaValeParametersInstance.ClienteIndicado, atDate:=Date.Today, childFilter:= "All")
      isNullResult = (IsNothing(_Client_81e7f7e08ae6408d801991a77bdf077c))
      isFoundData  = Not isNullResult
    
                H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = _Client_81e7f7e08ae6408d801991a77bdf077c

                currentAction = SessionTrace("5. If Form.IsNullResult = true Then")
                If isNullResult = true Then

                    currentAction = SessionTrace("6. H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = false...")
                    currentAction = SessionTrace("6.1. H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = false...")

                    H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = false
                    currentAction = SessionTrace("6.2. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = Nothing...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = Nothing
                    currentAction = SessionTrace("6.3. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.TypeOfPerson = 1...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.TypeOfPerson = 1

                    currentAction = SessionTrace("7. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID = H5NNNCotizacionMiVidaValeParametersInstance.ClienteIndicado...")
                    currentAction = SessionTrace("7.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID = H5NNNCotizacionMiVidaValeParametersInstance.ClienteIndicado...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID = H5NNNCotizacionMiVidaValeParametersInstance.ClienteIndicado

                    currentAction = SessionTrace("8. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.BirthDate...")
                    currentAction = SessionTrace("8.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.BirthDate...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.BirthDate
                    currentAction = SessionTrace("8.2. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.Gender = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.Gender...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.Gender = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.Gender
                    currentAction = SessionTrace("8.3. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.SmokerIndicator = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.SmokerIndi...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.SmokerIndicator = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.SmokerIndicator

                    currentAction = SessionTrace("9. Height.Enabled = true, Weight.Enabled = true, FirstName.Enabled = true...")
                    currentAction = SessionTrace("9.1. Height.Enabled = true...")
                    resultData.AddControlBehavior("Height", "enabled")
                    currentAction = SessionTrace("9.2. Weight.Enabled = true...")
                    resultData.AddControlBehavior("Weight", "enabled")
                    currentAction = SessionTrace("9.3. FirstName.Enabled = true...")
                    resultData.AddControlBehavior("FirstName", "enabled")
                    currentAction = SessionTrace("9.4. LastName.Enabled = true...")
                    resultData.AddControlBehavior("LastName", "enabled")
                    currentAction = SessionTrace("9.5. LastName2.Enabled = true...")
                    resultData.AddControlBehavior("LastName2", "enabled")

                    currentAction = SessionTrace("10. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.IsNew = true...")
                    currentAction = SessionTrace("10.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.IsNew = true...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.IsNew = true
                    currentAction = SessionTrace("10.2. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.TypeOfPerson = 1...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.TypeOfPerson = 1

                    currentAction = SessionTrace("11. FirstName.Enabled = true, LastName.Enabled = true, LastName2.Enabled = true...")
                    currentAction = SessionTrace("11.1. FirstName.Enabled = true...")
                    resultData.AddControlBehavior("FirstName", "enabled")
                    currentAction = SessionTrace("11.2. LastName.Enabled = true...")
                    resultData.AddControlBehavior("LastName", "enabled")
                    currentAction = SessionTrace("11.3. LastName2.Enabled = true...")
                    resultData.AddControlBehavior("LastName2", "enabled")
                    currentAction = SessionTrace("11.4. zone10.Enabled = true...")
                    resultData.AddControlBehavior("zone10", "enabled")

                    Else
                    currentAction = SessionTrace("12. H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true...")
                    currentAction = SessionTrace("12.1. H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true...")

                    H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true

                    currentAction = SessionTrace("13. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.IsNew = false...")
                    currentAction = SessionTrace("13.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.IsNew = false...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.IsNew = false

                    currentAction = SessionTrace("14. FirstName.Enabled = false, LastName.Enabled = false, LastName2.Enabled = false")
                    currentAction = SessionTrace("14.1. FirstName.Enabled = false...")
                    resultData.AddControlBehavior("FirstName", "disabled")
                    currentAction = SessionTrace("14.2. LastName.Enabled = false...")
                    resultData.AddControlBehavior("LastName", "disabled")
                    currentAction = SessionTrace("14.3. LastName2.Enabled = false...")
                    resultData.AddControlBehavior("LastName2", "disabled")

                        End If
                currentAction = SessionTrace("15. If H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true Then

                    currentAction = SessionTrace("16. If H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate Is Null Or Empty '' Then")
                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate) OrElse H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate = Date.MinValue Then

                        currentAction = SessionTrace("17. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.IsDirty = True...")
                        currentAction = SessionTrace("17.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.IsDirty = True...")
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                        H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.IsDirty = True

                        currentAction = SessionTrace("18. BirthDate.Enabled = true")
                        currentAction = SessionTrace("18.1. BirthDate.Enabled = true...")
                        resultData.AddControlBehavior("BirthDate", "enabled")

                                    Else
                        currentAction = SessionTrace("19. {DayBirthDate} = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.BirthDate....")
                        currentAction = SessionTrace("19.1. {DayBirthDate} = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.BirthDate....")

                        DayBirthDate = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.BirthDate.Day
                        currentAction = SessionTrace("19.2. {MonthBirthDate} = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.BirthDate....")

                        MonthBirthDate = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.BirthDate.Month
                        currentAction = SessionTrace("19.3. {YearBirthDate} = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.BirthDate....")

                        YearBirthDate = H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.BirthDate.Year
                        currentAction = SessionTrace("19.4. {DayBirthDateFromBD} = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")

                        DayBirthDateFromBD = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate.Day
                        currentAction = SessionTrace("19.5. {MonthBirthDateFromBD} = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")

                        MonthBirthDateFromBD = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate.Month
                        currentAction = SessionTrace("19.6. {YearBirthDateFromBD} = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")

                        YearBirthDateFromBD = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate.Year

                        currentAction = SessionTrace("20. If {DayBirthDate} <> DayBirthDateFromBD OR {MonthBirthDate} <> MonthBirthDateFromBD OR ... Then")
                        If DayBirthDate <> DayBirthDateFromBD OrElse MonthBirthDate <> MonthBirthDateFromBD OrElse YearBirthDate <> YearBirthDateFromBD Then

                            currentAction = SessionTrace("21. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")
                            currentAction = SessionTrace("21.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")

                            H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true

                            currentAction = SessionTrace("22. The message 'El cliente indicado ...' will displayed as 'Popup'")
                            ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                            messageAction = "El cliente indicado está registrado en el sistema y la fecha de nacimiento incluida NO coincide con la fecha de nacimiento previamente registrada... No se puede continuar con la cotización..."
                            messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                            resultData.AddNotifyPopup(messageAction)
                            currentAction = SessionTrace("23. BirthDate.Enabled = true, Gender.Enabled = true")
                            currentAction = SessionTrace("23.1. BirthDate.Enabled = true...")
                            resultData.AddControlBehavior("BirthDate", "enabled")
                            currentAction = SessionTrace("23.2. Gender.Enabled = true...")
                            resultData.AddControlBehavior("GenderWrap", "enabled")

                                                Else
                            currentAction = SessionTrace("24. BirthDate.Enabled = false")
                            currentAction = SessionTrace("24.1. BirthDate.Enabled = false...")
                            resultData.AddControlBehavior("BirthDate", "disabled")

                                                    End If
                                                End If
                                            End If
                currentAction = SessionTrace("25. If H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true AND H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true AndAlso H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("26. If H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.Gender Is Null Or Empty '' OR H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.Gender = 3 Then")
                    If String.IsNullOrEmpty(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.Gender) OrElse H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.Gender = 3 Then

                        currentAction = SessionTrace("27. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.IsDirty = True...")
                        currentAction = SessionTrace("27.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.IsDirty = True...")
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                        H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.IsDirty = True

                        currentAction = SessionTrace("28. Gender.Enabled = true")
                        currentAction = SessionTrace("28.1. Gender.Enabled = true...")
                        resultData.AddControlBehavior("GenderWrap", "enabled")

                                                        Else
                        currentAction = SessionTrace("29. If H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.Gender <> H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.Gender Then")
                        If H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded.Gender <> H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.Gender Then

                            currentAction = SessionTrace("30. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")
                            currentAction = SessionTrace("30.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")

                            H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true

                            currentAction = SessionTrace("31. The message 'El cliente indicado ...' will displayed as 'Popup'")
                            ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                            messageAction = "El cliente indicado está registrado en el sistema y el género incluido NO coincide con el género previamente registrado... No se puede continuar con la cotización..."
                            messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                            resultData.AddNotifyPopup(messageAction)
                            currentAction = SessionTrace("32. Gender.Enabled = true, BirthDate.Enabled = true")
                            currentAction = SessionTrace("32.1. Gender.Enabled = true...")
                            resultData.AddControlBehavior("GenderWrap", "enabled")
                            currentAction = SessionTrace("32.2. BirthDate.Enabled = true...")
                            resultData.AddControlBehavior("BirthDate", "enabled")

                                                                    Else
                            currentAction = SessionTrace("33. Gender.Enabled = false")
                            currentAction = SessionTrace("33.1. Gender.Enabled = false...")
                            resultData.AddControlBehavior("GenderWrap", "disabled")

                                                                        End If
                                                                    End If
                                                                End If
                currentAction = SessionTrace("34. H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount = 0...")
                currentAction = SessionTrace("34.1. H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount = 0...")

                H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount = 0

                currentAction = SessionTrace("35. If H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = True AND H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = True AndAlso H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("36. Call 'Get the face amount of the Life policies of the insured person' workflow in Synchronous mode with tracking")
                    WorkflowInArguments = New Dictionary(Of String, Object)

                    With WorkflowInArguments
                    .Add("context", formContext)
                    .Add("ClientID", H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID)
                    .Add("CurrencyID", H5NNNCotizacionMiVidaValeParametersInstance.Currency)
                    .Add("Amount", H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount)
                    .Add("ProcessDate", H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.EffectiveDate)
                    End With

                    WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("GetFaceAmountOfLifePoliciesOfTheInsuredPerson", "a240a822-d493-4dff-a365-ccb17551e006", 2, WorkflowInArguments, True, True, HttpContext.Current.Request.UrlReferrer.AbsolutePath, H5NNNCotizacionMiVidaValeParametersInstance.InternalId)

                    currentAction += "'Mapping Outputs'"
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID = WorkflowOutArguments("ClientID")
                    H5NNNCotizacionMiVidaValeParametersInstance.Currency = WorkflowOutArguments("CurrencyID")
                    H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount = WorkflowOutArguments("Amount")
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.EffectiveDate = WorkflowOutArguments("ProcessDate")

                    currentAction = SessionTrace("37. H5NNNCotizacionMiVidaValeParametersInstance.CancelledPoliciesQuantity = 0...")
                    currentAction = SessionTrace("37.1. H5NNNCotizacionMiVidaValeParametersInstance.CancelledPoliciesQuantity = 0...")

                    H5NNNCotizacionMiVidaValeParametersInstance.CancelledPoliciesQuantity = 0

                    currentAction = SessionTrace("38. SELECT CERTIFICAT.SCERTYPE, CERTIFICAT.NBRANCH, CERTIFICAT.NPRODUCT FROM CERTIFICAT... WHERE CERTIFICAT.SCERTYPE = 2 AND CERTIFICAT.SSTATUSVA <> 3 AND CERTIFICAT.NNULLCODE <> 2 AND )")
                    isFoundData = False
                                               With New DataManagerFactory("SELECT DISTINCT COUNT(CERTIFICAT.NPOLICY) NPOLICY FROM CERTIFICAT CERTIFICAT  JOIN ROLES ROLES ON ROLES.SCERTYPE = CERTIFICAT.SCERTYPE  AND ROLES.NBRANCH = CERTIFICAT.NBRANCH  AND ROLES.NPRODUCT = CERTIFICAT.NPRODUCT  AND ROLES.NPOLICY = CERTIFICAT.NPOLICY  AND ROLES.NCERTIF = CERTIFICAT.NCERTIF  WHERE CERTIFICAT.SCERTYPE = '2' AND CERTIFICAT.SSTATUSVA <> '3' AND ROLES.NROLE = 2 AND ROLES.SCLIENT = @:ROLESSCLIENT3 AND (CERTIFICAT.NNULLCODE <> 2 AND CERTIFICAT.NNULLCODE <> 3 AND CERTIFICAT.NNULLCODE <> 0 AND CERTIFICAT.NNULLCODE IS NOT NULL)", "CERTIFICAT", "Linked.LatCombined")
.AddParameter("ROLESSCLIENT3", DbType.AnsiStringFixedLength, 14, (H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID = String.Empty), H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID)
 
            H5NNNCotizacionMiVidaValeParametersInstance.CancelledPoliciesQuantity = .QueryExecuteScalarToInteger()  
        End With

                    currentAction = SessionTrace("39. H5NNNCotizacionMiVidaValeParametersInstance.OtherPoliciesSameRiskQuantity = 0...")
                    currentAction = SessionTrace("39.1. H5NNNCotizacionMiVidaValeParametersInstance.OtherPoliciesSameRiskQuantity = 0...")

                    H5NNNCotizacionMiVidaValeParametersInstance.OtherPoliciesSameRiskQuantity = 0

                    currentAction = SessionTrace("40. SELECT CERTIFICAT.SCERTYPE, CERTIFICAT.NBRANCH, CERTIFICAT.NPRODUCT FROM CERTIFICAT... WHERE CERTIFICAT.SCERTYPE = 2 AND CERTIFICAT.SSTATUSVA <> 3 AND CERTIFICAT.NBRANCH = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LineOfBusiness AND )")
                    isFoundData = False
                                               With New DataManagerFactory("SELECT DISTINCT COUNT(CERTIFICAT.NPOLICY) NPOLICY FROM CERTIFICAT CERTIFICAT  JOIN ROLES ROLES ON ROLES.SCERTYPE = CERTIFICAT.SCERTYPE  AND ROLES.NBRANCH = CERTIFICAT.NBRANCH  AND ROLES.NPRODUCT = CERTIFICAT.NPRODUCT  AND ROLES.NPOLICY = CERTIFICAT.NPOLICY  AND ROLES.NCERTIF = CERTIFICAT.NCERTIF  WHERE CERTIFICAT.SCERTYPE = '2' AND CERTIFICAT.SSTATUSVA <> '3' AND ROLES.NROLE = 2 AND ROLES.SCLIENT = @:ROLESSCLIENT3 AND CERTIFICAT.NBRANCH = @:CERTIFICATNBRANCH4 AND CERTIFICAT.NNULLCODE IS NULL", "CERTIFICAT", "Linked.LatCombined")
.AddParameter("ROLESSCLIENT3", DbType.AnsiStringFixedLength, 14, (H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID = String.Empty), H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID)
.AddParameter("CERTIFICATNBRANCH4", DbType.Int32, 5, False, H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LineOfBusiness)
 
            H5NNNCotizacionMiVidaValeParametersInstance.OtherPoliciesSameRiskQuantity = .QueryExecuteScalarToInteger()  
        End With

                    currentAction = SessionTrace("41. If (H5NNNCotizacionMiVidaValeParametersInstance.CancelledPoliciesQuantity <> 0) Then")
                    If (H5NNNCotizacionMiVidaValeParametersInstance.CancelledPoliciesQuantity <> 0) Then

                        currentAction = SessionTrace("42. The message 'Existe(n) poliza(s) ...' will displayed as 'Popup'")
                        ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                        messageAction = "Existe(n) poliza(s) anulada(s) para el cliente."
                        messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                        resultData.AddNotifyPopup(messageAction)
                                                                            End If
                                                                        End If
                currentAction = SessionTrace("43. Acepto.Visible = false")
                currentAction = SessionTrace("43.1. Acepto.Visible = false...")
                resultData.AddControlBehavior("Acepto", "hide")

                currentAction = SessionTrace("44. If H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount <> 0 AND H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount Not Is Null Or Not Empty  AND ... Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount <> 0 AndAlso Not IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount) AndAlso H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("45. zone3Cumulo.Visible = true")
                    currentAction = SessionTrace("45.1. zone3Cumulo.Visible = true...")
                    resultData.AddControlBehavior("zone3Cumulo", "show")

                                                                            Else
                    currentAction = SessionTrace("46. zone3Cumulo.Visible = false")
                    currentAction = SessionTrace("46.1. zone3Cumulo.Visible = false...")
                    resultData.AddControlBehavior("zone3Cumulo", "hide")

                                                                                End If
                currentAction = SessionTrace("47. If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true Then

                    currentAction = SessionTrace("48. tab13.Visible = false, tabcontainer0.ActiveTab = InfBasica, zone17.Enabled = true...")
                    currentAction = SessionTrace("48.1. tab13.Visible = false...")
                    resultData.AddControlBehavior("tab13", "hide")
                    currentAction = SessionTrace("48.2. tabcontainer0.ActiveTab = InfBasica...")
                    resultData.AddControlBehavior("InfBasica", "active")
                    currentAction = SessionTrace("48.3. zone17.Enabled = true...")
                    resultData.AddControlBehavior("zone17", "enabled")
                    currentAction = SessionTrace("48.4. Cotizar.Visible = true...")
                    resultData.AddControlBehavior("Cotizar", "show")
                    currentAction = SessionTrace("48.5. label1.Visible = true...")
                    resultData.AddControlBehavior("label1", "show")
                    currentAction = SessionTrace("48.6. label6.Visible = false...")
                    resultData.AddControlBehavior("label6", "hide")
                    currentAction = SessionTrace("48.7. Acepto.Visible = false...")
                    resultData.AddControlBehavior("Acepto", "hide")
                    currentAction = SessionTrace("48.8. Cotizar.Enabled = true...")
                    resultData.AddControlBehavior("Cotizar", "enabled")
                    currentAction = SessionTrace("48.9. Acepto.Enabled = true...")
                    resultData.AddControlBehavior("Acepto", "enabled")
                    currentAction = SessionTrace("48.10. RiskInformationEffectiveDate.Enabled = true...")
                    resultData.AddControlBehavior("RiskInformationEffectiveDate", "enabled")
                    currentAction = SessionTrace("48.11. PaymentFrequency.Enabled = true...")
                    resultData.AddControlBehavior("PaymentFrequency", "enabled")
                    currentAction = SessionTrace("48.12. zone5.Visible = true...")
                    resultData.AddControlBehavior("zone5", "show")
                    currentAction = SessionTrace("48.13. InsuredAmountForCalculation.Enabled = true...")
                    resultData.AddControlBehavior("InsuredAmountForCalculation", "enabled")
                    currentAction = SessionTrace("48.14. zone10.Enabled = false...")
                    resultData.AddControlBehavior("zone10", "disabled")

                    currentAction = SessionTrace("49. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contr...")
                    currentAction = SessionTrace("49.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contr...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client

                                                                                    Else
                    currentAction = SessionTrace("50. zone10.Enabled = true, PaymentFrequency.Enabled = false")
                    currentAction = SessionTrace("50.1. zone10.Enabled = true...")
                    resultData.AddControlBehavior("zone10", "enabled")
                    currentAction = SessionTrace("50.2. PaymentFrequency.Enabled = false...")
                    resultData.AddControlBehavior("PaymentFrequency", "disabled")

                                                                                        End If
                currentAction = SessionTrace("51. H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.CompanyId = 1...")
                currentAction = SessionTrace("51.1. H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.CompanyId = 1...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.CompanyId = 1
                currentAction = SessionTrace("51.2. H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.Country = 58...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.Country = 58
                currentAction = SessionTrace("51.3. H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.Security.Usercode = 9998...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.Security) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.Security = New InMotionGIT.Common.Contracts.Process.SecurityInformation
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.Security.Usercode = 9998

                currentAction = SessionTrace("52. H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Cont...")
                currentAction = SessionTrace("52.1. H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Cont...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                currentAction = SessionTrace("52.2. H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Cont...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.eMailAddress) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Contract.General.eMailAddress
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Contract.General.eMailAddress
                currentAction = SessionTrace("52.3. H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Cont...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address

                currentAction = SessionTrace("53. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")
                currentAction = SessionTrace("53.1. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID
                currentAction = SessionTrace("53.2. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1
                currentAction = SessionTrace("53.3. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID

                currentAction = SessionTrace("54. H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.RecordOwnerID = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")
                currentAction = SessionTrace("54.1. H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.RecordOwnerID = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.RecordOwnerID = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID
                currentAction = SessionTrace("54.2. H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.RecordOwnerType) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1
                currentAction = SessionTrace("54.3. H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.AddressID = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.AddressID = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID

                currentAction = SessionTrace("55. H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1...")
                currentAction = SessionTrace("55.1. H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.RecordOwnerType) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.RecordOwnerType = 1
                currentAction = SessionTrace("55.2. H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.TypeOfAddress = 3...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.TypeOfAddress) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.TypeOfAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfAddress
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.TypeOfAddress = 3
                currentAction = SessionTrace("55.3. H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.UserCompany.Code = 1...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.UserCompany) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.UserCompany = New InMotionGIT.Common.DataType.LookUpValueExtend
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.UserCompany.Code = 1
                currentAction = SessionTrace("55.4. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 6...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 6

                currentAction = SessionTrace("56. If (H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID Is Null Or Empty  OR H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID = 0) AND ... Then")
                If (IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID) OrElse H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID = 0) AndAlso (H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false) Then

                    currentAction = SessionTrace("57. Call Function 'Retrieve addresses by owner' with parameters (Process date, User company of the address, Record owner type, Record owner id, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                    Dim _AddressDLICollection_4ed4fdd81d114dbabfdb7abc2af79808 As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                    _AddressDLICollection_4ed4fdd81d114dbabfdb7abc2af79808 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesDLI(processDate:=H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.EffectiveDate, userCompany:=H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.UserCompany, recordOwnerType:=H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.RecordOwnerType, recordOwnerId:=H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.RecordOwnerID, consumer:=H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation, typeOfAddress:=H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection = _AddressDLICollection_4ed4fdd81d114dbabfdb7abc2af79808
                    isNullResult = (IsNothing(_AddressDLICollection_4ed4fdd81d114dbabfdb7abc2af79808))

                    currentAction = SessionTrace("58. If H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection.Count <> 0 Then")
                    If H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection.Count <> 0 Then

                        currentAction = SessionTrace("59. H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.AddressID = H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection(0).A...")
                        currentAction = SessionTrace("59.1. H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.AddressID = H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection(0).A...")
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                        H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.AddressID = H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection(0).AddressID
                        currentAction = SessionTrace("59.2. H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.InternalAddressKey = H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection(0).I...")
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                        H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.InternalAddressKey = H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection(0).InternalAddressKey

                        currentAction = SessionTrace("60. Call Function 'Retrieve an email address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                        Dim _AddresseMailDLI_57c3dcd1196a495ab4cdcab8bbc24827 As InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                        _AddresseMailDLI_57c3dcd1196a495ab4cdcab8bbc24827 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveeMailDLI(processDate:=H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.EffectiveDate, addressId:=H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.AddressID, internalAddressKey:=H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.InternalAddressKey, consumer:=H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation)
                        H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI = _AddresseMailDLI_57c3dcd1196a495ab4cdcab8bbc24827
                        isNullResult = (IsNothing(_AddresseMailDLI_57c3dcd1196a495ab4cdcab8bbc24827))

                                                                                                    End If
                    currentAction = SessionTrace("61. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1...")
                    currentAction = SessionTrace("61.1. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfAddress
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1
                    currentAction = SessionTrace("61.2. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1
                    currentAction = SessionTrace("61.3. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany.Code = 1...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany = New InMotionGIT.Common.DataType.LookUpValueExtend
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany.Code = 1
                    currentAction = SessionTrace("61.4. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1

                    currentAction = SessionTrace("62. Call Function 'Retrieve addresses by owner' with parameters (Process date, User company of the address, Record owner type, Record owner id, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                    Dim _AddressDLICollection_5fcc4f5608c44cf7a309209054449030 As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                    _AddressDLICollection_5fcc4f5608c44cf7a309209054449030 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesDLI(processDate:=H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.EffectiveDate, userCompany:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany, recordOwnerType:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType, recordOwnerId:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID, consumer:=H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation, typeOfAddress:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection = _AddressDLICollection_5fcc4f5608c44cf7a309209054449030
                    isNullResult = (IsNothing(_AddressDLICollection_5fcc4f5608c44cf7a309209054449030))

                    currentAction = SessionTrace("63. If H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection.Count <> 0 Then")
                    If H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection.Count <> 0 Then

                        currentAction = SessionTrace("64. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection(0).A...")
                        currentAction = SessionTrace("64.1. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection(0).A...")
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                        H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection(0).AddressID
                        currentAction = SessionTrace("64.2. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection(0).I...")
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                        H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection(0).InternalAddressKey

                        currentAction = SessionTrace("65. Call Function 'Retrieve a physical address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                        Dim _AddressPhysicalAddressDLI_2e245cc454db4cafa4fee39b6f0f2c18 As InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                        _AddressPhysicalAddressDLI_2e245cc454db4cafa4fee39b6f0f2c18 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrievePhysicalAddressDLI(processDate:=Date.Today, addressId:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, internalAddressKey:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey, consumer:=H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation)
                        H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = _AddressPhysicalAddressDLI_2e245cc454db4cafa4fee39b6f0f2c18
                        isNullResult = (IsNothing(_AddressPhysicalAddressDLI_2e245cc454db4cafa4fee39b6f0f2c18))

                                                                                                        Else
                        currentAction = SessionTrace("66. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2...")
                        currentAction = SessionTrace("66.1. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2...")
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                        H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2

                        currentAction = SessionTrace("67. Call Function 'Retrieve addresses by owner' with parameters (Process date, User company of the address, Record owner type, Record owner id, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                        Dim _AddressDLICollection_c690cbb0f2bb4ee2a34eab69f4541d9b As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                        _AddressDLICollection_c690cbb0f2bb4ee2a34eab69f4541d9b = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesDLI(processDate:=H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.EffectiveDate, userCompany:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany, recordOwnerType:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType, recordOwnerId:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerID, consumer:=H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation, typeOfAddress:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                        H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection = _AddressDLICollection_c690cbb0f2bb4ee2a34eab69f4541d9b
                        isNullResult = (IsNothing(_AddressDLICollection_c690cbb0f2bb4ee2a34eab69f4541d9b))

                        currentAction = SessionTrace("68. If H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection.Count <> 0 Then")
                        If H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection.Count <> 0 Then

                            currentAction = SessionTrace("69. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection(0).A...")
                            currentAction = SessionTrace("69.1. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection(0).A...")
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection(0).AddressID
                            currentAction = SessionTrace("69.2. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection(0).I...")
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection(0).InternalAddressKey

                            currentAction = SessionTrace("70. Call Function 'Retrieve a physical address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                            Dim _AddressPhysicalAddressDLI_90fc8dbec1624aab9c7cf90f505abe64 As InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                            _AddressPhysicalAddressDLI_90fc8dbec1624aab9c7cf90f505abe64 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrievePhysicalAddressDLI(processDate:=Date.Today, addressId:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, internalAddressKey:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey, consumer:=H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation)
                            H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = _AddressPhysicalAddressDLI_90fc8dbec1624aab9c7cf90f505abe64
                            isNullResult = (IsNothing(_AddressPhysicalAddressDLI_90fc8dbec1624aab9c7cf90f505abe64))

                                                                                                                    Else
                            currentAction = SessionTrace("71. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0...")
                            currentAction = SessionTrace("71.1. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0...")
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0
                            currentAction = SessionTrace("71.2. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1...")
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                            H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1

                            currentAction = SessionTrace("72. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = 0...")
                            currentAction = SessionTrace("72.1. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = 0...")
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = 0
                            currentAction = SessionTrace("72.2. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0...")
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0
                            currentAction = SessionTrace("72.3. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1...")
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                            H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1
                            currentAction = SessionTrace("72.4. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfRoute = 1...")
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfRoute) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfRoute = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfRoute
                End If

                            H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfRoute = 1

                                                                                                                        End If
                                                                                                                    End If
                                                                                                                End If
                currentAction = SessionTrace("73. If (H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID Not Is Null Or Not Empty  AND H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID <> 0 AND ... Then")
                If (Not IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID) AndAlso H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID <> 0 AndAlso H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false) Then

                    currentAction = SessionTrace("74. Call Function 'Retrieve addresses by id' with parameters (Process date, User company of the address, Id value of the address, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                    Dim _AddressDLICollection_0c786cb89fa8481b984ccf0956d23108 As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                    _AddressDLICollection_0c786cb89fa8481b984ccf0956d23108 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesByIdDLI(processDate:=H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.EffectiveDate, userCompany:=H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.UserCompany, addressId:=H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.AddressID, consumer:=H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation, typeOfAddress:=H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection = _AddressDLICollection_0c786cb89fa8481b984ccf0956d23108
                    isNullResult = (IsNothing(_AddressDLICollection_0c786cb89fa8481b984ccf0956d23108))

                    currentAction = SessionTrace("75. If H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection.Count <> 0 Then")
                    If H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection.Count <> 0 Then

                        currentAction = SessionTrace("76. Cotizar.Enabled = false, Acepto.Enabled = false, RiskInformationEffectiveDate.Enabled = false...")
                        currentAction = SessionTrace("76.1. Cotizar.Enabled = false...")
                        resultData.AddControlBehavior("Cotizar", "disabled")
                        currentAction = SessionTrace("76.2. Acepto.Enabled = false...")
                        resultData.AddControlBehavior("Acepto", "disabled")
                        currentAction = SessionTrace("76.3. RiskInformationEffectiveDate.Enabled = false...")
                        resultData.AddControlBehavior("RiskInformationEffectiveDate", "disabled")
                        currentAction = SessionTrace("76.4. PaymentFrequency.Enabled = false...")
                        resultData.AddControlBehavior("PaymentFrequency", "disabled")

                        currentAction = SessionTrace("77. H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.InternalAddressKey = H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection(0).I...")
                        currentAction = SessionTrace("77.1. H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.InternalAddressKey = H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection(0).I...")
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                End If
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                        H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.InternalAddressKey = H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection(0).InternalAddressKey

                        currentAction = SessionTrace("78. Call Function 'Retrieve an email address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                        Dim _AddresseMailDLI_ee55f660ba664f7ca5ba393a70aeb937 As InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
                        _AddresseMailDLI_ee55f660ba664f7ca5ba393a70aeb937 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveeMailDLI(processDate:=H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.EffectiveDate, addressId:=H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.AddressID, internalAddressKey:=H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI.Address.InternalAddressKey, consumer:=H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation)
                        H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI = _AddresseMailDLI_ee55f660ba664f7ca5ba393a70aeb937
                        isNullResult = (IsNothing(_AddresseMailDLI_ee55f660ba664f7ca5ba393a70aeb937))

                                                                                                                            End If
                    currentAction = SessionTrace("79. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1...")
                    currentAction = SessionTrace("79.1. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfAddress
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress = 1
                    currentAction = SessionTrace("79.2. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1
                    currentAction = SessionTrace("79.3. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany.Code = 1...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany = New InMotionGIT.Common.DataType.LookUpValueExtend
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany.Code = 1
                    currentAction = SessionTrace("79.4. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.RecordOwnerType = 1

                    currentAction = SessionTrace("80. Call Function 'Retrieve addresses by id' with parameters (Process date, User company of the address, Id value of the address, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                    Dim _AddressDLICollection_24a6eb537dee4c7da51d71e0644afdd7 As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                    _AddressDLICollection_24a6eb537dee4c7da51d71e0644afdd7 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesByIdDLI(processDate:=H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.EffectiveDate, userCompany:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany, addressId:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, consumer:=H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation, typeOfAddress:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection = _AddressDLICollection_24a6eb537dee4c7da51d71e0644afdd7
                    isNullResult = (IsNothing(_AddressDLICollection_24a6eb537dee4c7da51d71e0644afdd7))

                    currentAction = SessionTrace("81. If H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection.Count <> 0 Then")
                    If H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection.Count <> 0 Then

                        currentAction = SessionTrace("82. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection(0).I...")
                        currentAction = SessionTrace("82.1. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection(0).I...")
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                        H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection(0).InternalAddressKey

                        currentAction = SessionTrace("83. Call Function 'Retrieve a physical address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                        Dim _AddressPhysicalAddressDLI_c2778e3e4f6b40e49a6ac8bb5ab771cb As InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                        _AddressPhysicalAddressDLI_c2778e3e4f6b40e49a6ac8bb5ab771cb = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrievePhysicalAddressDLI(processDate:=Date.Today, addressId:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, internalAddressKey:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey, consumer:=H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation)
                        H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = _AddressPhysicalAddressDLI_c2778e3e4f6b40e49a6ac8bb5ab771cb
                        isNullResult = (IsNothing(_AddressPhysicalAddressDLI_c2778e3e4f6b40e49a6ac8bb5ab771cb))

                                                                                                                                Else
                        currentAction = SessionTrace("84. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2...")
                        currentAction = SessionTrace("84.1. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2...")
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                        H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 2

                        currentAction = SessionTrace("85. Call Function 'Retrieve addresses by id' with parameters (Process date, User company of the address, Id value of the address, Consumer Object/pass as null until completed, Type of address, Type of physical address)")
                        Dim _AddressDLICollection_e8c02d0197e2464e8b00d8b189c530d4 As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
                        _AddressDLICollection_e8c02d0197e2464e8b00d8b189c530d4 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrieveAddressesByIdDLI(processDate:=H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.EffectiveDate, userCompany:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.UserCompany, addressId:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, consumer:=H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation, typeOfAddress:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.TypeOfAddress, typeOfPhysicalAddress:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress)
                        H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection = _AddressDLICollection_e8c02d0197e2464e8b00d8b189c530d4
                        isNullResult = (IsNothing(_AddressDLICollection_e8c02d0197e2464e8b00d8b189c530d4))

                        currentAction = SessionTrace("86. If H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection.Count <> 0 Then")
                        If H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection.Count <> 0 Then

                                                                                                                                        Else
                            currentAction = SessionTrace("87. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection(0).I...")
                            currentAction = SessionTrace("87.1. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection(0).I...")
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = H5NNNCotizacionMiVidaValeParametersInstance.AddressDLICollection(0).InternalAddressKey

                            currentAction = SessionTrace("88. Call Function 'Retrieve a physical address' with parameters (Process date, Id value of the address, Internal and unique key of the address, Consumer Object/pass as null until completed)")
                            Dim _AddressPhysicalAddressDLI_f84deda782e347c19fc3058cc1fbe6e9 As InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                            _AddressPhysicalAddressDLI_f84deda782e347c19fc3058cc1fbe6e9 = (New InMotionGIT.AddressManager.Proxy.AddressManager.PublicClient).RetrievePhysicalAddressDLI(processDate:=Date.Today, addressId:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.AddressID, internalAddressKey:=H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey, consumer:=H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation)
                            H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = _AddressPhysicalAddressDLI_f84deda782e347c19fc3058cc1fbe6e9
                            isNullResult = (IsNothing(_AddressPhysicalAddressDLI_f84deda782e347c19fc3058cc1fbe6e9))

                            currentAction = SessionTrace("89. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = 0...")
                            currentAction = SessionTrace("89.1. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = 0...")
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.AddressID = 0
                            currentAction = SessionTrace("89.2. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0...")
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0
                            currentAction = SessionTrace("89.3. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1...")
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                            H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1
                            currentAction = SessionTrace("89.4. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfRoute = 1...")
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfRoute) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfRoute = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfRoute
                End If

                            H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfRoute = 1

                            currentAction = SessionTrace("90. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0...")
                            currentAction = SessionTrace("90.1. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0...")
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
                End If

                            H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.Address.InternalAddressKey = 0
                            currentAction = SessionTrace("90.2. H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1...")
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI = New InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress = New InMotionGIT.AddressManager.Contract.General.PhysicalAddress
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfPhysicalAddress
                End If

                            H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI.PhysicalAddress.TypeOfPhysicalAddress = 1

                                                                                                                                            End If
                                                                                                                                        End If
                                                                                                                                    End If

                instance = ClassToEntryData(instance, H5NNNCotizacionMiVidaValeParametersInstance)
                
                StoreFormInformation(H5NNNCotizacionMiVidaValeParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5NNNCotizacionMiVidaVale", "ClientIDChange", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function button8Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5NNNCotizacionMiVidaValeParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button8Click")
                H5NNNCotizacionMiVidaValeParametersInstance = EntryDataToClass(H5NNNCotizacionMiVidaValeParametersInstance, instance)
                currentAction = SessionTrace("1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false...")
                currentAction = SessionTrace("1.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false...")

                H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false

                currentAction = SessionTrace("2. H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccion = ''...")
                currentAction = SessionTrace("2.1. H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccion = ''...")

                H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccion = ""

                currentAction = SessionTrace("3. If H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BusinessAddress.Country Is Null Or Empty  OR H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BusinessAddress.Country <= 0 Then")
                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BusinessAddress.Country) OrElse H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BusinessAddress.Country <= 0 Then

                    currentAction = SessionTrace("4. H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccion = H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccio...")
                    currentAction = SessionTrace("4.1. H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccion = H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccio...")

                    H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccion = H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccion + "País: Campo requerido. <br>"

                    currentAction = SessionTrace("5. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")
                    currentAction = SessionTrace("5.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")

                    H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true

                    End If
                currentAction = SessionTrace("6. If H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BusinessAddress.StreetOrUrl Is Null Or Empty '' Then")
                If String.IsNullOrEmpty(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BusinessAddress.StreetOrUrl) Then

                    currentAction = SessionTrace("7. H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccion = H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccio...")
                    currentAction = SessionTrace("7.1. H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccion = H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccio...")

                    H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccion = H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccion + "Calle o URL: Campo requerido. <br>"

                    currentAction = SessionTrace("8. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")
                    currentAction = SessionTrace("8.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")

                    H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true

                        End If
                currentAction = SessionTrace("9. If H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BusinessAddress.ZipCode Is Null Or Empty  Then")
                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BusinessAddress.ZipCode) Then

                    currentAction = SessionTrace("10. H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccion = H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccio...")
                    currentAction = SessionTrace("10.1. H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccion = H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccio...")

                    H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccion = H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccion + "Código postal: Campo requerido. <br>"

                    currentAction = SessionTrace("11. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")
                    currentAction = SessionTrace("11.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")

                    H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true

                            End If
                currentAction = SessionTrace("12. If H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BusinessAddress.StateOrProvince Is Null Or Empty  OR H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BusinessAddress.StateOrProvince <= 0 Then")
                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BusinessAddress.StateOrProvince) OrElse H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BusinessAddress.StateOrProvince <= 0 Then

                    currentAction = SessionTrace("13. H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccion = H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccio...")
                    currentAction = SessionTrace("13.1. H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccion = H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccio...")

                    H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccion = H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccion + "Provincia: Campo requerido. <br>"

                    currentAction = SessionTrace("14. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")
                    currentAction = SessionTrace("14.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")

                    H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true

                                End If
                currentAction = SessionTrace("15. If H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BusinessAddress.Email Is Null Or Empty '' Then")
                If String.IsNullOrEmpty(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BusinessAddress.Email) Then

                    currentAction = SessionTrace("16. H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccion = H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccio...")
                    currentAction = SessionTrace("16.1. H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccion = H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccio...")

                    H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccion = H5NNNCotizacionMiVidaValeParametersInstance.MensajeValidacionDireccion + "Email: Campo requerido"

                    currentAction = SessionTrace("17. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")
                    currentAction = SessionTrace("17.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")

                    H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true

                                    End If
                currentAction = SessionTrace("18. If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true Then

                    currentAction = SessionTrace("19. The message '{ Value /MensajeVali...' will displayed as 'Popup'")
                    ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                    messageAction = "{ Value /MensajeValidacionDireccion }"
                    messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                    resultData.AddNotifyPopup(messageAction)
                                        End If
                currentAction = SessionTrace("20. If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("21. button8.Visible = false")
                    currentAction = SessionTrace("21.1. button8.Visible = false...")
                    resultData.AddControlBehavior("button8", "hide")

                    currentAction = SessionTrace("22. Show 'Correo electrónico' control")
                    resultData.AddControlBehavior("eMail", "show")

                                            End If
                currentAction = SessionTrace("23. If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("24. If H5NNNCotizacionMiVidaValeParametersInstance.eMail Is Null Or Empty '' Then")
                    If String.IsNullOrEmpty(H5NNNCotizacionMiVidaValeParametersInstance.eMail) Then

                        currentAction = SessionTrace("25. H5NNNCotizacionMiVidaValeParametersInstance.eMail = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")
                        currentAction = SessionTrace("25.1. H5NNNCotizacionMiVidaValeParametersInstance.eMail = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")

                        H5NNNCotizacionMiVidaValeParametersInstance.eMail = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BusinessAddress.Email

                                                        End If
                                                    End If
                currentAction = SessionTrace("26. If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("27. If H5NNNCotizacionMiVidaValeParametersInstance.PlanType <> 1 OR H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation > 50000 Then")
                    If H5NNNCotizacionMiVidaValeParametersInstance.PlanType <> 1 OrElse H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation > 50000 Then

                        currentAction = SessionTrace("28. tab17.Visible = true, tabcontainer0.ActiveTab = tab17")
                        currentAction = SessionTrace("28.1. tab17.Visible = true...")
                        resultData.AddControlBehavior("tab17", "show")
                        currentAction = SessionTrace("28.2. tabcontainer0.ActiveTab = tab17...")
                        resultData.AddControlBehavior("tab17", "active")

                        currentAction = SessionTrace("29. OnLinePrintIndicator.Visible = false")
                        currentAction = SessionTrace("29.1. OnLinePrintIndicator.Visible = false...")
                        resultData.AddControlBehavior("OnLinePrintIndicatorWrap", "hide")

                                                                Else
                        currentAction = SessionTrace("30. tab17.Visible = false, tab18.Visible = true, tabcontainer0.ActiveTab = tab18")
                        currentAction = SessionTrace("30.1. tab17.Visible = false...")
                        resultData.AddControlBehavior("tab17", "hide")
                        currentAction = SessionTrace("30.2. tab18.Visible = true...")
                        resultData.AddControlBehavior("tab18", "show")
                        currentAction = SessionTrace("30.3. tabcontainer0.ActiveTab = tab18...")
                        resultData.AddControlBehavior("tab18", "active")

                                                                    End If
                                                                End If
                currentAction = SessionTrace("31. If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("32. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.eMailAddressDefault = H5NNNCotizacionMiVidaValeParametersInstance.eMail...")
                    currentAction = SessionTrace("32.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.eMailAddressDefault = H5NNNCotizacionMiVidaValeParametersInstance.eMail...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.eMailAddressDefault = H5NNNCotizacionMiVidaValeParametersInstance.eMail

                    currentAction = SessionTrace("33. For Each roleItem As 'InMotionGIT.Policy.Entity...' In 'H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation...'")
                    For Each roleItem As InMotionGIT.Policy.Entity.Contracts.Role In H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Roles

                        currentAction = SessionTrace("34. If roleItem.ClientRole = 2 Then")
                        If roleItem.ClientRole = 2 Then

                            currentAction = SessionTrace("35. If roleItem.ClientID Is Null Or Empty '' Then")
                            If String.IsNullOrEmpty(roleItem.ClientID) Then

                                currentAction = SessionTrace("36. 'H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AmendmentInformation' = New 'InMotionGIT.Policy.Entity'...'")
                                H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AmendmentInformation = New InMotionGIT.Policy.Entity.Contracts.AmendmentInformation

                                currentAction = SessionTrace("37. 'H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Coverages' = New 'InMotionGIT.Policy.Entity'...'")
                                H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Coverages = New InMotionGIT.Policy.Entity.Contracts.CoverageCollection

currentAction = SessionTrace("39. Call 'Calculo de coberturas de una póliza' library")
                Dim _RiskInformation_8fb7f994aaa34eb09cb47765a228a864 As InMotionGIT.Policy.Entity.Contracts.RiskInformation 
                _RiskInformation_8fb7f994aaa34eb09cb47765a228a864 = (New InMotionGIT.PolicyManager.Proxy.Manager).RatingCalculateProcess(riskInformation:=H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation, errors:=formContext.Errors, transaction:=0, atDate:=Date.Today, accessToken:=HttpContext.Current.Session("AccessToken"), provider:="CORE", companyID:=1) 
 
                isNullResult = (IsNothing(_RiskInformation_8fb7f994aaa34eb09cb47765a228a864)) 
                If Not isNullResult Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = _RiskInformation_8fb7f994aaa34eb09cb47765a228a864
                End If

currentAction = SessionTrace("41. Call 'Prepara los objetos asociados a cambiar en RiskInformation.' library")
                Dim _RiskInformation_b01cc4442db94a5eb25f6bc103158680 As InMotionGIT.Policy.Entity.Contracts.RiskInformation 
                _RiskInformation_b01cc4442db94a5eb25f6bc103158680 = (New InMotionGIT.PolicyManager.Proxy.Manager).AmendmentSetup(risk:=H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation, atDate:=Date.Today, accessToken:=HttpContext.Current.Session("AccessToken"), provider:="CORE") 
 
                isNullResult = (IsNothing(_RiskInformation_b01cc4442db94a5eb25f6bc103158680)) 
                If Not isNullResult Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = _RiskInformation_b01cc4442db94a5eb25f6bc103158680
                End If

                                currentAction = SessionTrace("42. Call Shared Sub 'Clear Form Errors' without parameters")
                                
        H5NNNCotizacionMiVidaValeParametersInstance.Errors.Clear()
	formContext.Errors.Clear()
    

                                                                                            End If
                                                                                        End If
                                                                                    Next
                                                                                End If

                instance = ClassToEntryData(instance, H5NNNCotizacionMiVidaValeParametersInstance)
                
                StoreFormInformation(H5NNNCotizacionMiVidaValeParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5NNNCotizacionMiVidaVale", "button8Click", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function button14Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5NNNCotizacionMiVidaValeParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button14Click")
                H5NNNCotizacionMiVidaValeParametersInstance = EntryDataToClass(H5NNNCotizacionMiVidaValeParametersInstance, instance)
                currentAction = SessionTrace("1. H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintIndicator = True...")
                currentAction = SessionTrace("1.1. H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintIndicator = True...")

                H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintIndicator = True

                currentAction = SessionTrace("2. button14.Visible = false, zone4.Enabled = false")
                currentAction = SessionTrace("2.1. button14.Visible = false...")
                resultData.AddControlBehavior("button14", "hide")
                currentAction = SessionTrace("2.2. zone4.Enabled = false...")
                resultData.AddControlBehavior("zone4", "disabled")

                currentAction = SessionTrace("3. tab18.Visible = true")
                currentAction = SessionTrace("3.1. tab18.Visible = true...")
                resultData.AddControlBehavior("tab18", "show")

                currentAction = SessionTrace("4. tabcontainer0.ActiveTab = tab18")
                currentAction = SessionTrace("4.1. tabcontainer0.ActiveTab = tab18...")
                resultData.AddControlBehavior("tab18", "active")

                currentAction = SessionTrace("5. OnLinePrintIndicator.Visible = true")
                currentAction = SessionTrace("5.1. OnLinePrintIndicator.Visible = true...")
                resultData.AddControlBehavior("OnLinePrintIndicatorWrap", "show")

                currentAction = SessionTrace("6. If H5NNNCotizacionMiVidaValeParametersInstance.QuestionnairesAvailable.Diabetes = true OR H5NNNCotizacionMiVidaValeParametersInstance.QuestionnairesAvailable.Heart = true OR ... Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.QuestionnairesAvailable.Diabetes = true OrElse H5NNNCotizacionMiVidaValeParametersInstance.QuestionnairesAvailable.Heart = true OrElse H5NNNCotizacionMiVidaValeParametersInstance.QuestionnairesAvailable.Cancer = true OrElse H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation > 10000 Then

                    currentAction = SessionTrace("7. OnLinePrintIndicator.Visible = false")
                    currentAction = SessionTrace("7.1. OnLinePrintIndicator.Visible = false...")
                    resultData.AddControlBehavior("OnLinePrintIndicatorWrap", "hide")

                    currentAction = SessionTrace("8. H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintIndicator = False...")
                    currentAction = SessionTrace("8.1. H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintIndicator = False...")

                    H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintIndicator = False

                    currentAction = SessionTrace("9. labelSOlicitud.Visible = true, labelComprar.Visible = false")
                    currentAction = SessionTrace("9.1. labelSOlicitud.Visible = true...")
                    resultData.AddControlBehavior("labelSOlicitud", "show")
                    currentAction = SessionTrace("9.2. labelComprar.Visible = false...")
                    resultData.AddControlBehavior("labelComprar", "hide")

                    Else
                    currentAction = SessionTrace("10. labelSOlicitud.Visible = false, labelComprar.Visible = true")
                    currentAction = SessionTrace("10.1. labelSOlicitud.Visible = false...")
                    resultData.AddControlBehavior("labelSOlicitud", "hide")
                    currentAction = SessionTrace("10.2. labelComprar.Visible = true...")
                    resultData.AddControlBehavior("labelComprar", "show")

                        End If

                instance = ClassToEntryData(instance, H5NNNCotizacionMiVidaValeParametersInstance)
                
                StoreFormInformation(H5NNNCotizacionMiVidaValeParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5NNNCotizacionMiVidaVale", "button14Click", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function BeneficiaryTypeChange(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5NNNCotizacionMiVidaValeParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("BeneficiaryTypeClick")
                H5NNNCotizacionMiVidaValeParametersInstance = EntryDataToClass(H5NNNCotizacionMiVidaValeParametersInstance, instance)
                currentAction = SessionTrace("1. If H5NNNCotizacionMiVidaValeParametersInstance.BeneficiaryType = 1 Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.BeneficiaryType = 1 Then

                    currentAction = SessionTrace("2. zoneBeneficiariosAsignados.Visible = false")
                    currentAction = SessionTrace("2.1. zoneBeneficiariosAsignados.Visible = false...")
                    resultData.AddControlBehavior("zoneBeneficiariosAsignados", "hide")

                    Else
                    currentAction = SessionTrace("3. If H5NNNCotizacionMiVidaValeParametersInstance.BeneficiaryType = 3 Then")
                    If H5NNNCotizacionMiVidaValeParametersInstance.BeneficiaryType = 3 Then

                        currentAction = SessionTrace("4. zoneBeneficiariosAsignados.Visible = true, text3.Visible = False")
                        currentAction = SessionTrace("4.1. zoneBeneficiariosAsignados.Visible = true...")
                        resultData.AddControlBehavior("zoneBeneficiariosAsignados", "show")
                        currentAction = SessionTrace("4.2. text3.Visible = False...")
                        resultData.AddControlBehavior("text3", "hide")

                                End If
                            End If

                instance = ClassToEntryData(instance, H5NNNCotizacionMiVidaValeParametersInstance)
                
                StoreFormInformation(H5NNNCotizacionMiVidaValeParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5NNNCotizacionMiVidaVale", "BeneficiaryTypeChange", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function button1Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5NNNCotizacionMiVidaValeParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button1Click")
                H5NNNCotizacionMiVidaValeParametersInstance = EntryDataToClass(H5NNNCotizacionMiVidaValeParametersInstance, instance)
                currentAction = SessionTrace("1. zone24.Visible = true, ClientIDBD.Visible = false, FirstNameBP.Visible = false...")
                currentAction = SessionTrace("1.1. zone24.Visible = true...")
                resultData.AddControlBehavior("zone24", "show")
                currentAction = SessionTrace("1.2. ClientIDBD.Visible = false...")
                resultData.AddControlBehavior("ClientIDBD", "hide")
                currentAction = SessionTrace("1.3. FirstNameBP.Visible = false...")
                resultData.AddControlBehavior("FirstNameBP", "hide")
                currentAction = SessionTrace("1.4. LastNameBP.Visible = false...")
                resultData.AddControlBehavior("LastNameBP", "hide")
                currentAction = SessionTrace("1.5. LastName2BP.Visible = false...")
                resultData.AddControlBehavior("LastName2BP", "hide")
                currentAction = SessionTrace("1.6. LegalNameBP.Visible = false...")
                resultData.AddControlBehavior("LegalNameBP", "hide")

                currentAction = SessionTrace("3. H5NNNCotizacionMiVidaValeParametersInstance.AgregarBeneficiario = false...")
                currentAction = SessionTrace("3.1. H5NNNCotizacionMiVidaValeParametersInstance.AgregarBeneficiario = false...")

                H5NNNCotizacionMiVidaValeParametersInstance.AgregarBeneficiario = false

                currentAction = SessionTrace("4. 'H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary' = New 'InMotionGIT.Policy.Entity'...'")
                H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary = New InMotionGIT.Policy.Entity.Contracts.Beneficiary

                currentAction = SessionTrace("5. H5NNNCotizacionMiVidaValeParametersInstance.TypeOfPersonBenef = 1...")
                currentAction = SessionTrace("5.1. H5NNNCotizacionMiVidaValeParametersInstance.TypeOfPersonBenef = 1...")

                H5NNNCotizacionMiVidaValeParametersInstance.TypeOfPersonBenef = 1

                currentAction = SessionTrace("6. FirstNameBP.Visible = true, LastNameBP.Visible = true, LastName2BP.Visible = true...")
                currentAction = SessionTrace("6.1. FirstNameBP.Visible = true...")
                resultData.AddControlBehavior("FirstNameBP", "show")
                currentAction = SessionTrace("6.2. LastNameBP.Visible = true...")
                resultData.AddControlBehavior("LastNameBP", "show")
                currentAction = SessionTrace("6.3. LastName2BP.Visible = true...")
                resultData.AddControlBehavior("LastName2BP", "show")
                currentAction = SessionTrace("6.4. LegalNameBP.Visible = false...")
                resultData.AddControlBehavior("LegalNameBP", "hide")

                currentAction = SessionTrace("7. ClientIDBD.Visible = true")
                currentAction = SessionTrace("7.1. ClientIDBD.Visible = true...")
                resultData.AddControlBehavior("ClientIDBD", "show")

                currentAction = SessionTrace("8. button33.Visible = true")
                currentAction = SessionTrace("8.1. button33.Visible = true...")
                resultData.AddControlBehavior("button33", "show")


                instance = ClassToEntryData(instance, H5NNNCotizacionMiVidaValeParametersInstance)
                
                StoreFormInformation(H5NNNCotizacionMiVidaValeParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5NNNCotizacionMiVidaVale", "button1Click", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function TypeOfPersonBenefChange(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5NNNCotizacionMiVidaValeParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("TypeOfPersonBenefClick")
                H5NNNCotizacionMiVidaValeParametersInstance = EntryDataToClass(H5NNNCotizacionMiVidaValeParametersInstance, instance)
                currentAction = SessionTrace("1. If H5NNNCotizacionMiVidaValeParametersInstance.TypeOfPersonBenef = 1 Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.TypeOfPersonBenef = 1 Then

                    currentAction = SessionTrace("2. FirstNameBP.Visible = true, LastNameBP.Visible = true, LastName2BP.Visible = true...")
                    currentAction = SessionTrace("2.1. FirstNameBP.Visible = true...")
                    resultData.AddControlBehavior("FirstNameBP", "show")
                    currentAction = SessionTrace("2.2. LastNameBP.Visible = true...")
                    resultData.AddControlBehavior("LastNameBP", "show")
                    currentAction = SessionTrace("2.3. LastName2BP.Visible = true...")
                    resultData.AddControlBehavior("LastName2BP", "show")
                    currentAction = SessionTrace("2.4. LegalNameBP.Visible = false...")
                    resultData.AddControlBehavior("LegalNameBP", "hide")

                    Else
                    currentAction = SessionTrace("3. FirstNameBP.Visible = false, LastNameBP.Visible = false, LastName2BP.Visible = false...")
                    currentAction = SessionTrace("3.1. FirstNameBP.Visible = false...")
                    resultData.AddControlBehavior("FirstNameBP", "hide")
                    currentAction = SessionTrace("3.2. LastNameBP.Visible = false...")
                    resultData.AddControlBehavior("LastNameBP", "hide")
                    currentAction = SessionTrace("3.3. LastName2BP.Visible = false...")
                    resultData.AddControlBehavior("LastName2BP", "hide")
                    currentAction = SessionTrace("3.4. LegalNameBP.Visible = true...")
                    resultData.AddControlBehavior("LegalNameBP", "show")

                        End If
                currentAction = SessionTrace("4. ClientIDBD.Visible = true, button33.Visible = true")
                currentAction = SessionTrace("4.1. ClientIDBD.Visible = true...")
                resultData.AddControlBehavior("ClientIDBD", "show")
                currentAction = SessionTrace("4.2. button33.Visible = true...")
                resultData.AddControlBehavior("button33", "show")


                instance = ClassToEntryData(instance, H5NNNCotizacionMiVidaValeParametersInstance)
                
                StoreFormInformation(H5NNNCotizacionMiVidaValeParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5NNNCotizacionMiVidaVale", "TypeOfPersonBenefChange", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function ClientIDBDChange(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5NNNCotizacionMiVidaValeParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("ClientIDBDClick")
                H5NNNCotizacionMiVidaValeParametersInstance = EntryDataToClass(H5NNNCotizacionMiVidaValeParametersInstance, instance)
                currentAction = SessionTrace("2. Call Shared Function 'Retrieve Client' with parameters (Client Identification)")
                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary = New InMotionGIT.Policy.Entity.Contracts.Beneficiary
                End If

                Dim _Client_c316a5ed31224a7f8d60586f7682f4c5 As InMotionGIT.Client.Entity.Contracts.Client
                
      _Client_c316a5ed31224a7f8d60586f7682f4c5 = (New InMotionGIT.Client.Services.ClientManager).Retrieve(clientId:=H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.ClientID, atDate:=Date.Today, childFilter:= "All")
      isNullResult = (IsNothing(_Client_c316a5ed31224a7f8d60586f7682f4c5))
      isFoundData  = Not isNullResult
    
                H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client = _Client_c316a5ed31224a7f8d60586f7682f4c5

                currentAction = SessionTrace("3. If Form.IsNullResult = true Then")
                If isNullResult = true Then

                    currentAction = SessionTrace("4. H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.IsNew = true...")
                    currentAction = SessionTrace("4.1. H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.IsNew = true...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary = New InMotionGIT.Policy.Entity.Contracts.Beneficiary
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.IsNew = true

                    currentAction = SessionTrace("5. H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.ClientID = H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.ClientID...")
                    currentAction = SessionTrace("5.1. H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.ClientID = H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.ClientID...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary = New InMotionGIT.Policy.Entity.Contracts.Beneficiary
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.ClientID = H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.ClientID

                    Else
                    currentAction = SessionTrace("6. H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.ClientID = H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.Client...")
                    currentAction = SessionTrace("6.1. H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.ClientID = H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.Client...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary = New InMotionGIT.Policy.Entity.Contracts.Beneficiary
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.ClientID = H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.ClientID

                    currentAction = SessionTrace("7. H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.IsNew = false...")
                    currentAction = SessionTrace("7.1. H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.IsNew = false...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary = New InMotionGIT.Policy.Entity.Contracts.Beneficiary
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.IsNew = false

                    currentAction = SessionTrace("8. H5NNNCotizacionMiVidaValeParametersInstance.TypeOfPersonBenef = H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.TypeOf...")
                    currentAction = SessionTrace("8.1. H5NNNCotizacionMiVidaValeParametersInstance.TypeOfPersonBenef = H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.TypeOf...")

                    H5NNNCotizacionMiVidaValeParametersInstance.TypeOfPersonBenef = H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.TypeOfPerson

                    currentAction = SessionTrace("9. If H5NNNCotizacionMiVidaValeParametersInstance.TypeOfPersonBenef = 1 Then")
                    If H5NNNCotizacionMiVidaValeParametersInstance.TypeOfPersonBenef = 1 Then

                        currentAction = SessionTrace("10. FirstNameBP.Visible = true, LastNameBP.Visible = true, LastName2BP.Visible = true...")
                        currentAction = SessionTrace("10.1. FirstNameBP.Visible = true...")
                        resultData.AddControlBehavior("FirstNameBP", "show")
                        currentAction = SessionTrace("10.2. LastNameBP.Visible = true...")
                        resultData.AddControlBehavior("LastNameBP", "show")
                        currentAction = SessionTrace("10.3. LastName2BP.Visible = true...")
                        resultData.AddControlBehavior("LastName2BP", "show")
                        currentAction = SessionTrace("10.4. LegalNameBP.Visible = false...")
                        resultData.AddControlBehavior("LegalNameBP", "hide")

                                Else
                        currentAction = SessionTrace("11. FirstNameBP.Visible = false, LastNameBP.Visible = false, LastName2BP.Visible = false...")
                        currentAction = SessionTrace("11.1. FirstNameBP.Visible = false...")
                        resultData.AddControlBehavior("FirstNameBP", "hide")
                        currentAction = SessionTrace("11.2. LastNameBP.Visible = false...")
                        resultData.AddControlBehavior("LastNameBP", "hide")
                        currentAction = SessionTrace("11.3. LastName2BP.Visible = false...")
                        resultData.AddControlBehavior("LastName2BP", "hide")
                        currentAction = SessionTrace("11.4. LegalNameBP.Visible = true...")
                        resultData.AddControlBehavior("LegalNameBP", "show")

                                    End If
                                End If

                instance = ClassToEntryData(instance, H5NNNCotizacionMiVidaValeParametersInstance)
                
                StoreFormInformation(H5NNNCotizacionMiVidaValeParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5NNNCotizacionMiVidaVale", "ClientIDBDChange", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function button33Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5NNNCotizacionMiVidaValeParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button33Click")
                H5NNNCotizacionMiVidaValeParametersInstance = EntryDataToClass(H5NNNCotizacionMiVidaValeParametersInstance, instance)
Dim AddBeneficiaryHasErrors As System.Boolean
Dim beneficiaryExists As System.Boolean
                currentAction = SessionTrace("1. Call 'LLena ceros a la izquierda' workflow in Synchronous mode without tracking")
                WorkflowInArguments = New Dictionary(Of String, Object)

                With WorkflowInArguments
                .Add("context", formContext)
                .Add("CodigoCliente", H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.ClientID)
                .Add("LargoCodigo", 14)
                End With

                WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("LlenaCerosIzquierdaCodigo", "97e5264d-cb53-46a3-a786-fbcc3bb10ff2", 3, WorkflowInArguments, False, True, HttpContext.Current.Request.UrlReferrer.AbsolutePath, H5NNNCotizacionMiVidaValeParametersInstance.InternalId)

                currentAction += "'Mapping Outputs'"
                H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.ClientID = WorkflowOutArguments("CodigoCliente")

                currentAction = SessionTrace("2. {AddBeneficiaryHasErrors} = False...")
                currentAction = SessionTrace("2.1. {AddBeneficiaryHasErrors} = False...")

                AddBeneficiaryHasErrors = False

                currentAction = SessionTrace("3. {beneficiaryExists} = False...")
                currentAction = SessionTrace("3.1. {beneficiaryExists} = False...")

                beneficiaryExists = False

                currentAction = SessionTrace("4. If H5NNNCotizacionMiVidaValeParametersInstance.TypeOfPersonBenef = 1 Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.TypeOfPersonBenef = 1 Then

                    currentAction = SessionTrace("5. H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.CompleteClientName = H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.LastNa...")
                    currentAction = SessionTrace("5.1. H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.CompleteClientName = H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.LastNa...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary = New InMotionGIT.Policy.Entity.Contracts.Beneficiary
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.CompleteClientName = H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.LastName & " " & H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.LastName2 & ", " & H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.FirstName

                    Else
                    currentAction = SessionTrace("6. H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.CompleteClientName = H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.LegalN...")
                    currentAction = SessionTrace("6.1. H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.CompleteClientName = H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.LegalN...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary = New InMotionGIT.Policy.Entity.Contracts.Beneficiary
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.CompleteClientName = H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.Client.LegalName

                        End If
                currentAction = SessionTrace("7. For Each beneficiaryItem As 'InMotionGIT.Policy.Entity...' In 'H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation...'")
                For Each beneficiaryItem As InMotionGIT.Policy.Entity.Contracts.Beneficiary In H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Beneficiaries

                    currentAction = SessionTrace("8. If beneficiaryItem.ClientID = H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.ClientID Then")
                    If beneficiaryItem.ClientID = H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.ClientID Then

                        currentAction = SessionTrace("9. {beneficiaryExists} = True...")
                        currentAction = SessionTrace("9.1. {beneficiaryExists} = True...")

                        beneficiaryExists = True

                                    End If
                                Next
                currentAction = SessionTrace("10. If {beneficiaryExists} = True Then")
                If beneficiaryExists = True Then

                    currentAction = SessionTrace("11. {AddBeneficiaryHasErrors} = True...")
                    currentAction = SessionTrace("11.1. {AddBeneficiaryHasErrors} = True...")

                    AddBeneficiaryHasErrors = True

                    currentAction = SessionTrace("12. The message 'El beneficiario ya s...' will displayed as 'Popup'")
                    ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                    messageAction = "El beneficiario ya se encuentra registrado"
                    messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                    resultData.AddNotifyPopup(messageAction)
                                    End If
                currentAction = SessionTrace("13. If H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID = H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.ClientID Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID = H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.ClientID Then

                    currentAction = SessionTrace("14. {AddBeneficiaryHasErrors} = True...")
                    currentAction = SessionTrace("14.1. {AddBeneficiaryHasErrors} = True...")

                    AddBeneficiaryHasErrors = True

                    currentAction = SessionTrace("15. The message 'El beneficiario debe...' will displayed as 'Popup'")
                    ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                    messageAction = "El beneficiario debe ser distinto al asegurado"
                    messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                    resultData.AddNotifyPopup(messageAction)
                                        End If
                currentAction = SessionTrace("16. If H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.PercentageShare <= 0 Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary.PercentageShare <= 0 Then

                    currentAction = SessionTrace("17. {AddBeneficiaryHasErrors} = True...")
                    currentAction = SessionTrace("17.1. {AddBeneficiaryHasErrors} = True...")

                    AddBeneficiaryHasErrors = True

                    currentAction = SessionTrace("18. The message 'El porcentaje de par...' will displayed as 'Popup'")
                    ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                    messageAction = "El porcentaje de participación debe ser mayor a 0"
                    messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                    resultData.AddNotifyPopup(messageAction)
                                            End If
                currentAction = SessionTrace("19. If {AddBeneficiaryHasErrors} = False Then")
                If AddBeneficiaryHasErrors = False Then

                    currentAction = SessionTrace("20. 'H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Beneficiaries'.Add('H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary')")
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Beneficiaries.Add(H5NNNCotizacionMiVidaValeParametersInstance.Beneficiary)

                    currentAction = SessionTrace("21. zone24.Visible = false")
                    currentAction = SessionTrace("21.1. zone24.Visible = false...")
                    resultData.AddControlBehavior("zone24", "hide")

                    currentAction = SessionTrace("22. FirstNameBP.Visible = false, LastNameBP.Visible = false, LastName2BP.Visible = false...")
                    currentAction = SessionTrace("22.1. FirstNameBP.Visible = false...")
                    resultData.AddControlBehavior("FirstNameBP", "hide")
                    currentAction = SessionTrace("22.2. LastNameBP.Visible = false...")
                    resultData.AddControlBehavior("LastNameBP", "hide")
                    currentAction = SessionTrace("22.3. LastName2BP.Visible = false...")
                    resultData.AddControlBehavior("LastName2BP", "hide")
                    currentAction = SessionTrace("22.4. LegalNameBP.Visible = false...")
                    resultData.AddControlBehavior("LegalNameBP", "hide")

                                                End If

                instance = ClassToEntryData(instance, H5NNNCotizacionMiVidaValeParametersInstance)
                
                StoreFormInformation(H5NNNCotizacionMiVidaValeParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5NNNCotizacionMiVidaVale", "button33Click", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function CancelarClick(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5NNNCotizacionMiVidaValeParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("CancelarClick")
                H5NNNCotizacionMiVidaValeParametersInstance = EntryDataToClass(H5NNNCotizacionMiVidaValeParametersInstance, instance)
                currentAction = SessionTrace("2. zone24.Visible = false")
                currentAction = SessionTrace("2.1. zone24.Visible = false...")
                resultData.AddControlBehavior("zone24", "hide")


                instance = ClassToEntryData(instance, H5NNNCotizacionMiVidaValeParametersInstance)
                
                StoreFormInformation(H5NNNCotizacionMiVidaValeParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5NNNCotizacionMiVidaVale", "CancelarClick", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function button12Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5NNNCotizacionMiVidaValeParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button12Click")
                H5NNNCotizacionMiVidaValeParametersInstance = EntryDataToClass(H5NNNCotizacionMiVidaValeParametersInstance, instance)
                currentAction = SessionTrace("1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = False...")
                currentAction = SessionTrace("1.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = False...")

                H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = False

                currentAction = SessionTrace("2. H5NNNCotizacionMiVidaValeParametersInstance.ValorAcumulado = 0...")
                currentAction = SessionTrace("2.1. H5NNNCotizacionMiVidaValeParametersInstance.ValorAcumulado = 0...")

                H5NNNCotizacionMiVidaValeParametersInstance.ValorAcumulado = 0

                currentAction = SessionTrace("3. If H5NNNCotizacionMiVidaValeParametersInstance.BeneficiaryType = 3 Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.BeneficiaryType = 3 Then

                    currentAction = SessionTrace("4. For Each beneficiaryItem As 'InMotionGIT.Policy.Entity...' In 'H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation...'")
                    For Each beneficiaryItem As InMotionGIT.Policy.Entity.Contracts.Beneficiary In H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Beneficiaries

                        currentAction = SessionTrace("5. H5NNNCotizacionMiVidaValeParametersInstance.ValorAcumulado = H5NNNCotizacionMiVidaValeParametersInstance.ValorAcumulado + benefici...")
                        currentAction = SessionTrace("5.1. H5NNNCotizacionMiVidaValeParametersInstance.ValorAcumulado = H5NNNCotizacionMiVidaValeParametersInstance.ValorAcumulado + benefici...")

                        H5NNNCotizacionMiVidaValeParametersInstance.ValorAcumulado = H5NNNCotizacionMiVidaValeParametersInstance.ValorAcumulado + beneficiaryItem.PercentageShare

                            Next
                    currentAction = SessionTrace("6. If H5NNNCotizacionMiVidaValeParametersInstance.ValorAcumulado <> 100 Then")
                    If H5NNNCotizacionMiVidaValeParametersInstance.ValorAcumulado <> 100 Then

                        currentAction = SessionTrace("7. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")
                        currentAction = SessionTrace("7.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")

                        H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true

                        currentAction = SessionTrace("8. The message 'La suma de los porce...' will displayed as 'Popup'")
                        ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                        messageAction = "La suma de los porcentajes de participación de los beneficiarios debe ser el 100%"
                        messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                        resultData.AddNotifyPopup(messageAction)
                                End If
                            Else
                    currentAction = SessionTrace("9. 'H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Beneficiaries' = New 'InMotionGIT.Policy.Entity'...'")
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Beneficiaries = New InMotionGIT.Policy.Entity.Contracts.BeneficiaryCollection

                    currentAction = SessionTrace("10. text3.Visible = true")
                    currentAction = SessionTrace("10.1. text3.Visible = true...")
                    resultData.AddControlBehavior("text3", "show")

                                End If
                currentAction = SessionTrace("11. If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("12. tab0.Visible = true, tabcontainer0.ActiveTab = tab0, zonegeneral.Visible = true...")
                    currentAction = SessionTrace("12.1. tab0.Visible = true...")
                    resultData.AddControlBehavior("tab0", "show")
                    currentAction = SessionTrace("12.2. tabcontainer0.ActiveTab = tab0...")
                    resultData.AddControlBehavior("tab0", "active")
                    currentAction = SessionTrace("12.3. zonegeneral.Visible = true...")
                    resultData.AddControlBehavior("zonegeneral", "show")
                    currentAction = SessionTrace("12.4. zone1.Visible = true...")
                    resultData.AddControlBehavior("zone1", "show")
                    currentAction = SessionTrace("12.5. zone8.Visible = false...")
                    resultData.AddControlBehavior("zone8", "hide")

                                    End If
                currentAction = SessionTrace("13. If H5NNNCotizacionMiVidaValeParametersInstance.BeneficiaryType = 0 Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.BeneficiaryType = 0 Then

                    currentAction = SessionTrace("14. The message 'Debe indicar informa...' will displayed as 'Popup'")
                    ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                    messageAction = "Debe indicar información de los beneficiarios para continuar"
                    messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                    resultData.AddNotifyPopup(messageAction)
                    currentAction = SessionTrace("15. tab0.Visible = False, tabcontainer0.ActiveTab = tab18, zone1.Visible = False...")
                    currentAction = SessionTrace("15.1. tab0.Visible = False...")
                    resultData.AddControlBehavior("tab0", "hide")
                    currentAction = SessionTrace("15.2. tabcontainer0.ActiveTab = tab18...")
                    resultData.AddControlBehavior("tab18", "active")
                    currentAction = SessionTrace("15.3. zone1.Visible = False...")
                    resultData.AddControlBehavior("zone1", "hide")
                    currentAction = SessionTrace("15.4. zone8.Visible = False...")
                    resultData.AddControlBehavior("zone8", "hide")
                    currentAction = SessionTrace("15.5. zonegeneral.Visible = False...")
                    resultData.AddControlBehavior("zonegeneral", "hide")
                    currentAction = SessionTrace("15.6. zone11.Visible = True...")
                    resultData.AddControlBehavior("zone11", "show")

                                        Else
                                            End If
                currentAction = SessionTrace("17. If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("18. If H5NNNCotizacionMiVidaValeParametersInstance.uwcaseid Is Null Or Empty  OR H5NNNCotizacionMiVidaValeParametersInstance.uwcaseid = 0 Then")
                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.uwcaseid) OrElse H5NNNCotizacionMiVidaValeParametersInstance.uwcaseid = 0 Then

                        currentAction = SessionTrace("19. If H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true AND H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.CreditCards Not Is Null Or Not Empty  AND ... Then")
                        If H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true AndAlso Not IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.CreditCards) AndAlso H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.CreditCards.Count <> 0 Then

                            currentAction = SessionTrace("20. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy = New InMotionGIT.Policy.Entity.Contr...")
                            currentAction = SessionTrace("20.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy = New InMotionGIT.Policy.Entity.Contr...")
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy = New InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy
                End If

                            H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy = New InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy

                            currentAction = SessionTrace("21. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.BankCode = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")
                            currentAction = SessionTrace("21.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.BankCode = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy = New InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy
                End If

                            H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.BankCode = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.CreditCards(0).BankCode
                            currentAction = SessionTrace("21.2. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.CreditCardNumber = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy = New InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy
                End If

                            H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.CreditCardNumber = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.CreditCards(0).CreditCardNumber
                            currentAction = SessionTrace("21.3. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.CreditCardType = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy = New InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy
                End If

                            H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.CreditCardType = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.CreditCards(0).CreditCardType
                            currentAction = SessionTrace("21.4. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.Month = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy = New InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy
                End If

                            H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.Month = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.CreditCards(0).ExpirationDate.Month
                            currentAction = SessionTrace("21.5. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.Year = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy = New InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy
                End If

                            H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.Year = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.CreditCards(0).ExpirationDate.Year

                            currentAction = SessionTrace("22. If H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.CreditCards Not Is Null Or Not Empty  Then")
                            If Not IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.CreditCards) Then

                                currentAction = SessionTrace("23. H5NNNCotizacionMiVidaValeParametersInstance.MesTarjeta = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")
                                currentAction = SessionTrace("23.1. H5NNNCotizacionMiVidaValeParametersInstance.MesTarjeta = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")

                                H5NNNCotizacionMiVidaValeParametersInstance.MesTarjeta = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.CreditCards(0).ExpirationDate.Month
                                currentAction = SessionTrace("23.2. H5NNNCotizacionMiVidaValeParametersInstance.AnoTarjeta = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")

                                H5NNNCotizacionMiVidaValeParametersInstance.AnoTarjeta = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.CreditCards(0).ExpirationDate.Year

                                currentAction = SessionTrace("24. MesTarjeta.Value = H5NNNCotizacionMiVidaValeParametersInstance.MesTarjeta")
                                currentAction = SessionTrace("24.1. MesTarjeta.Value = H5NNNCotizacionMiVidaValeParametersInstance.MesTarjeta...")
                                resultData.AddControlBehavior("MesTarjeta", "")

                                currentAction = SessionTrace("25. AnoTarjeta.Value = H5NNNCotizacionMiVidaValeParametersInstance.AnoTarjeta")
                                currentAction = SessionTrace("25.1. AnoTarjeta.Value = H5NNNCotizacionMiVidaValeParametersInstance.AnoTarjeta...")
                                resultData.AddControlBehavior("AnoTarjeta", "")

                                                                        End If
                                                                    End If
                                                                End If
                                                            End If

                instance = ClassToEntryData(instance, H5NNNCotizacionMiVidaValeParametersInstance)
                
                StoreFormInformation(H5NNNCotizacionMiVidaValeParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5NNNCotizacionMiVidaVale", "button12Click", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function buttonGPagoClick(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5NNNCotizacionMiVidaValeParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("buttonGPagoClick")
                H5NNNCotizacionMiVidaValeParametersInstance = EntryDataToClass(H5NNNCotizacionMiVidaValeParametersInstance, instance)
                currentAction = SessionTrace("1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false...")
                currentAction = SessionTrace("1.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false...")

                H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false

                currentAction = SessionTrace("2. If H5NNNCotizacionMiVidaValeParametersInstance.MesTarjeta > 12 OR H5NNNCotizacionMiVidaValeParametersInstance.MesTarjeta = 0 Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.MesTarjeta > 12 OrElse H5NNNCotizacionMiVidaValeParametersInstance.MesTarjeta = 0 Then

                    currentAction = SessionTrace("3. The message 'Mes de vencimiento i...' will displayed as 'Popup'")
                    ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                    messageAction = "Mes de vencimiento inválido..."
                    messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                    resultData.AddNotifyPopup(messageAction)
                    currentAction = SessionTrace("4. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")
                    currentAction = SessionTrace("4.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")

                    H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true

                    End If
                currentAction = SessionTrace("5. If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("6. If H5NNNCotizacionMiVidaValeParametersInstance.AnoTarjeta <= H5NNNCotizacionMiVidaValeParametersInstance.CurrentYear Then")
                    If H5NNNCotizacionMiVidaValeParametersInstance.AnoTarjeta <= H5NNNCotizacionMiVidaValeParametersInstance.CurrentYear Then

                        currentAction = SessionTrace("7. The message 'Año de vencimiento i...' will displayed as 'Popup'")
                        ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                        messageAction = "Año de vencimiento inválido... Debe ser posterior al año actual"
                        messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                        resultData.AddNotifyPopup(messageAction)
                        currentAction = SessionTrace("8. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")
                        currentAction = SessionTrace("8.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")

                        H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true

                                End If
                            End If
                currentAction = SessionTrace("9. If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("10. Accept.Visible = true")
                    currentAction = SessionTrace("10.1. Accept.Visible = true...")
                    resultData.AddControlBehavior("Accept", "show")

                    currentAction = SessionTrace("11. buttonGPago.Visible = false")
                    currentAction = SessionTrace("11.1. buttonGPago.Visible = false...")
                    resultData.AddControlBehavior("buttonGPago", "hide")

                    currentAction = SessionTrace("12. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.ClientID = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")
                    currentAction = SessionTrace("12.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.ClientID = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy = New InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.ClientID = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID
                    currentAction = SessionTrace("12.2. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.ReusedAuthorizationNumber = 1...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy = New InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.ReusedAuthorizationNumber = 1

                    currentAction = SessionTrace("13. zone8.Visible = true")
                    currentAction = SessionTrace("13.1. zone8.Visible = true...")
                    resultData.AddControlBehavior("zone8", "show")

                                End If

                instance = ClassToEntryData(instance, H5NNNCotizacionMiVidaValeParametersInstance)
                
                StoreFormInformation(H5NNNCotizacionMiVidaValeParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5NNNCotizacionMiVidaVale", "buttonGPagoClick", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function button0Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5NNNCotizacionMiVidaValeParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button0Click")
                H5NNNCotizacionMiVidaValeParametersInstance = EntryDataToClass(H5NNNCotizacionMiVidaValeParametersInstance, instance)
                currentAction = SessionTrace("1. If H5NNNCotizacionMiVidaValeParametersInstance.BeneficiaryType = 1 Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.BeneficiaryType = 1 Then

                    currentAction = SessionTrace("2. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryBeneficiary = Nothing...")
                    currentAction = SessionTrace("2.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryBeneficiary = Nothing...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryBeneficiary) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryBeneficiary = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryBeneficiary = Nothing

                    End If
                currentAction = SessionTrace("3. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.Month = H5NNNCotizacionMiVidaValeParametersInstance.MesTarjeta...")
                currentAction = SessionTrace("3.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.Month = H5NNNCotizacionMiVidaValeParametersInstance.MesTarjeta...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy = New InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.Month = H5NNNCotizacionMiVidaValeParametersInstance.MesTarjeta
                currentAction = SessionTrace("3.2. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.Year = H5NNNCotizacionMiVidaValeParametersInstance.AnoTarjeta...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy = New InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.Year = H5NNNCotizacionMiVidaValeParametersInstance.AnoTarjeta

                currentAction = SessionTrace("4. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.eMailAddressDefault = H5NNNCotizacionMiVidaValeParametersInstance.eMail...")
                currentAction = SessionTrace("4.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.eMailAddressDefault = H5NNNCotizacionMiVidaValeParametersInstance.eMail...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.eMailAddressDefault = H5NNNCotizacionMiVidaValeParametersInstance.eMail

                currentAction = SessionTrace("5. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.InsuredAmount = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineO...")
                currentAction = SessionTrace("5.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.InsuredAmount = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineO...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.InsuredAmount = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation

                currentAction = SessionTrace("6. Call 'Guardar el caso de manera temporal' workflow in Synchronous mode with tracking")
                WorkflowInArguments = New Dictionary(Of String, Object)

                With WorkflowInArguments
                .Add("RiskInformation", H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation)
                .Add("eMail", H5NNNCotizacionMiVidaValeParametersInstance.eMail)
                .Add("ProducerClientID", H5NNNCotizacionMiVidaValeParametersInstance.ProducerClientID)
                .Add("context", formContext)
                .Add("SendMailIndicator", H5NNNCotizacionMiVidaValeParametersInstance.SendMailIndicator)
                .Add("MailToProducerIndicator", H5NNNCotizacionMiVidaValeParametersInstance.MailToProducerIndicator)
                .Add("uwCaseID", H5NNNCotizacionMiVidaValeParametersInstance.uwcaseid)
                .Add("ClientExistInDB", H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB)
                .Add("PlanType", H5NNNCotizacionMiVidaValeParametersInstance.PlanType)
                .Add("PlanillaModificacion", H5NNNCotizacionMiVidaValeParametersInstance.PlanillaModificacion)
                .Add("PlanillaVisualizacion", H5NNNCotizacionMiVidaValeParametersInstance.PlanillaVisualizacion)
                .Add("UsercodeBO", H5NNNCotizacionMiVidaValeParametersInstance.UsercodeBO)
                .Add("UsercodeFASI", H5NNNCotizacionMiVidaValeParametersInstance.UsercodeFASI)
                .Add("UsingVT", True)
                End With

                WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("TemporaryCaseSaveV2", "44f9fb6a-1221-4be2-a226-ba4ff92077ad", 1, WorkflowInArguments, True, True, HttpContext.Current.Request.UrlReferrer.AbsolutePath, H5NNNCotizacionMiVidaValeParametersInstance.InternalId)

                currentAction += "'Mapping Outputs'"
                H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = WorkflowOutArguments("RiskInformation")
                H5NNNCotizacionMiVidaValeParametersInstance.uwcaseid = WorkflowOutArguments("uwCaseID")

                currentAction = SessionTrace("7. The message 'Se ha generado el si...' will displayed as 'Splash'")
                ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                messageAction = "Se ha generado el siguiente caso: { Value /uwcaseid }, en los próximos 3 dias puede recuperar la información y continuar con el proceso de compra. Muchas gracias por visitarnos."
                messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                resultData.AddNotifySplash(messageAction)

                instance = ClassToEntryData(instance, H5NNNCotizacionMiVidaValeParametersInstance)
                
                StoreFormInformation(H5NNNCotizacionMiVidaValeParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5NNNCotizacionMiVidaVale", "button0Click", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function button19Click(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5NNNCotizacionMiVidaValeParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("button19Click")
                H5NNNCotizacionMiVidaValeParametersInstance = EntryDataToClass(H5NNNCotizacionMiVidaValeParametersInstance, instance)
                currentAction = SessionTrace("1. Call 'Mi Vida Vale - Resumen' form with transferring parameters")
                                HttpContext.Current.Session(H5NNNCotizacionMiVidaValeParametersInstance.InternalId) = H5NNNCotizacionMiVidaValeParametersInstance
                HttpContext.Current.Session("fromid") = H5NNNCotizacionMiVidaValeParametersInstance.InternalId
    
                With resultData
                    .AddRedirect(String.Format(CultureInfo.InvariantCulture, "{0}/H5CotizacionVidaResumenPopup.html?fromid={1}", "/fasi/dli/forms", H5NNNCotizacionMiVidaValeParametersInstance.InternalId, ""), "scrollbars=no,resizable=yes,toolbar=no,location=no,directories=no,status=yes,menubar=no,copyhistory=no,width=1000,height=1000,left=100,top=100")
                End With

                instance = ClassToEntryData(instance, H5NNNCotizacionMiVidaValeParametersInstance)
                
                StoreFormInformation(H5NNNCotizacionMiVidaValeParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5NNNCotizacionMiVidaVale", "button19Click", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function EnviarCotizacionEmailClick(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5NNNCotizacionMiVidaValeParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("EnviarCotizacionEmailClick")
                H5NNNCotizacionMiVidaValeParametersInstance = EntryDataToClass(H5NNNCotizacionMiVidaValeParametersInstance, instance)
                currentAction = SessionTrace("1. H5NNNCotizacionMiVidaValeParametersInstance.AnswerDiabetes = 'No'...")
                currentAction = SessionTrace("1.1. H5NNNCotizacionMiVidaValeParametersInstance.AnswerDiabetes = 'No'...")

                H5NNNCotizacionMiVidaValeParametersInstance.AnswerDiabetes = "No"

                currentAction = SessionTrace("2. H5NNNCotizacionMiVidaValeParametersInstance.AnswerCancer = 'No'...")
                currentAction = SessionTrace("2.1. H5NNNCotizacionMiVidaValeParametersInstance.AnswerCancer = 'No'...")

                H5NNNCotizacionMiVidaValeParametersInstance.AnswerCancer = "No"

                currentAction = SessionTrace("3. H5NNNCotizacionMiVidaValeParametersInstance.AnswerHeart = 'No'...")
                currentAction = SessionTrace("3.1. H5NNNCotizacionMiVidaValeParametersInstance.AnswerHeart = 'No'...")

                H5NNNCotizacionMiVidaValeParametersInstance.AnswerHeart = "No"

                currentAction = SessionTrace("4. If H5NNNCotizacionMiVidaValeParametersInstance.QuestionnairesAvailable.Diabetes = true Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.QuestionnairesAvailable.Diabetes = true Then

                    currentAction = SessionTrace("5. H5NNNCotizacionMiVidaValeParametersInstance.AnswerDiabetes = 'Si'...")
                    currentAction = SessionTrace("5.1. H5NNNCotizacionMiVidaValeParametersInstance.AnswerDiabetes = 'Si'...")

                    H5NNNCotizacionMiVidaValeParametersInstance.AnswerDiabetes = "Si"

                    End If
                currentAction = SessionTrace("6. If H5NNNCotizacionMiVidaValeParametersInstance.QuestionnairesAvailable.Cancer = true Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.QuestionnairesAvailable.Cancer = true Then

                    currentAction = SessionTrace("7. H5NNNCotizacionMiVidaValeParametersInstance.AnswerCancer = 'Si'...")
                    currentAction = SessionTrace("7.1. H5NNNCotizacionMiVidaValeParametersInstance.AnswerCancer = 'Si'...")

                    H5NNNCotizacionMiVidaValeParametersInstance.AnswerCancer = "Si"

                        End If
                currentAction = SessionTrace("8. If H5NNNCotizacionMiVidaValeParametersInstance.QuestionnairesAvailable.Heart = true Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.QuestionnairesAvailable.Heart = true Then

                    currentAction = SessionTrace("9. H5NNNCotizacionMiVidaValeParametersInstance.AnswerHeart = 'Si'...")
                    currentAction = SessionTrace("9.1. H5NNNCotizacionMiVidaValeParametersInstance.AnswerHeart = 'Si'...")

                    H5NNNCotizacionMiVidaValeParametersInstance.AnswerHeart = "Si"

                            End If
                currentAction = SessionTrace("10. H5NNNCotizacionMiVidaValeParametersInstance.PrimaTotalAnual = 0...")
                currentAction = SessionTrace("10.1. H5NNNCotizacionMiVidaValeParametersInstance.PrimaTotalAnual = 0...")

                H5NNNCotizacionMiVidaValeParametersInstance.PrimaTotalAnual = 0

                currentAction = SessionTrace("11. For Each CoverPT As 'InMotionGIT.Policy.Entity...' In 'H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation...'")
                For Each CoverPT As InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium In H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.CoveragesWithCalculatedPremium

                    currentAction = SessionTrace("12. If CoverPT.SelectedByDefault = true Then")
                    If CoverPT.SelectedByDefault = true Then

                        currentAction = SessionTrace("13. H5NNNCotizacionMiVidaValeParametersInstance.PrimaTotalAnual = H5NNNCotizacionMiVidaValeParametersInstance.PrimaTotalAnual+CoverPT.A...")
                        currentAction = SessionTrace("13.1. H5NNNCotizacionMiVidaValeParametersInstance.PrimaTotalAnual = H5NNNCotizacionMiVidaValeParametersInstance.PrimaTotalAnual+CoverPT.A...")

                        H5NNNCotizacionMiVidaValeParametersInstance.PrimaTotalAnual = H5NNNCotizacionMiVidaValeParametersInstance.PrimaTotalAnual+CoverPT.AnnualPremium

                                        End If
                                    Next
                currentAction = SessionTrace("14. H5NNNCotizacionMiVidaValeParametersInstance.FondosMail = Nothing...")
                currentAction = SessionTrace("14.1. H5NNNCotizacionMiVidaValeParametersInstance.FondosMail = Nothing...")

                H5NNNCotizacionMiVidaValeParametersInstance.FondosMail = Nothing

                currentAction = SessionTrace("15. If H5NNNCotizacionMiVidaValeParametersInstance.BeneficiaryType = 1 Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.BeneficiaryType = 1 Then

                    currentAction = SessionTrace("16. H5NNNCotizacionMiVidaValeParametersInstance.BeneficiariosMail = 'Herederos legales'...")
                    currentAction = SessionTrace("16.1. H5NNNCotizacionMiVidaValeParametersInstance.BeneficiariosMail = 'Herederos legales'...")

                    H5NNNCotizacionMiVidaValeParametersInstance.BeneficiariosMail = "Herederos legales"

                                        Else
                    currentAction = SessionTrace("17. H5NNNCotizacionMiVidaValeParametersInstance.BeneficiariosMail = Nothing...")
                    currentAction = SessionTrace("17.1. H5NNNCotizacionMiVidaValeParametersInstance.BeneficiariosMail = Nothing...")

                    H5NNNCotizacionMiVidaValeParametersInstance.BeneficiariosMail = Nothing

                    currentAction = SessionTrace("18. For Each BenefMailItem As 'InMotionGIT.Policy.Entity...' In 'H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation...'")
                    For Each BenefMailItem As InMotionGIT.Policy.Entity.Contracts.Beneficiary In H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Beneficiaries

                        currentAction = SessionTrace("19. H5NNNCotizacionMiVidaValeParametersInstance.Codigo = BenefMailItem.Relationship...")
                        currentAction = SessionTrace("19.1. H5NNNCotizacionMiVidaValeParametersInstance.Codigo = BenefMailItem.Relationship...")

                        H5NNNCotizacionMiVidaValeParametersInstance.Codigo = BenefMailItem.Relationship

                        currentAction = SessionTrace("20. SELECT TABLE55.NRELATION, TABLE55.SDESCRIPT FROM TABLE55... WHERE TABLE55.NRELATION = H5NNNCotizacionMiVidaValeParametersInstance.Codigo )")
                        isFoundData = False
                                                       With New DataManagerFactory("SELECT TABLE55.SDESCRIPT FROM TABLE55 TABLE55  WHERE TABLE55.NRELATION = @:TABLE55NRELATION0 ORDER BY TABLE55.SDESCRIPT ASC", "TABLE55", "Linked.LatCombined")
.AddParameter("TABLE55NRELATION0", DbType.Int32, 5, False, H5NNNCotizacionMiVidaValeParametersInstance.Codigo)
 
            H5NNNCotizacionMiVidaValeParametersInstance.Descripcion = .QueryExecuteScalarToString()  
        End With

                        currentAction = SessionTrace("21. H5NNNCotizacionMiVidaValeParametersInstance.BeneficiariosMail = H5NNNCotizacionMiVidaValeParametersInstance.BeneficiariosMail & '<p>'...")
                        currentAction = SessionTrace("21.1. H5NNNCotizacionMiVidaValeParametersInstance.BeneficiariosMail = H5NNNCotizacionMiVidaValeParametersInstance.BeneficiariosMail & '<p>'...")

                        H5NNNCotizacionMiVidaValeParametersInstance.BeneficiariosMail = H5NNNCotizacionMiVidaValeParametersInstance.BeneficiariosMail & "<p>" & "Beneficiario: " & BenefMailItem.Client.FirstName & " " & BenefMailItem.Client.LastName & " " & BenefMailItem.Client.LastName2 & "  Participación: " &  BenefMailItem.PercentageShare & "%  Relación: " & H5NNNCotizacionMiVidaValeParametersInstance.Descripcion & "</a></p>"

                                                    Next
                                                End If
                currentAction = SessionTrace("22. SELECT TABLE18.SDESCRIPT, TABLE18.SSEXCLIEN, TABLE18.SSTATREGT FROM TABLE18... WHERE TABLE18.SSTATREGT = 1 AND TABLE18.SSEXCLIEN = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.Gender )")
                isFoundData = False
                                       With New DataManagerFactory("SELECT TRIM(TABLE18.SDESCRIPT) SDESCRIPT FROM TABLE18 TABLE18  WHERE TABLE18.SSTATREGT = '1' AND TABLE18.SSEXCLIEN = @:TABLE18SSEXCLIEN1 ORDER BY SDESCRIPT ASC", "TABLE18", "Linked.LatCombined")
.AddParameter("TABLE18SSEXCLIEN1", DbType.AnsiStringFixedLength, 1, (H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.Gender = String.Empty), H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.Gender)
 
            H5NNNCotizacionMiVidaValeParametersInstance.GenderClient = .QueryExecuteScalarToString()  
        End With

                currentAction = SessionTrace("23. Call 'Envía cotización de vida por correo' workflow in Asynchronous mode with tracking")
                WorkflowInArguments = New Dictionary(Of String, Object)

                With WorkflowInArguments
                .Add("context", formContext)
                .Add("RiskInformation", H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation)
                .Add("CorreoMail", H5NNNCotizacionMiVidaValeParametersInstance.eMail)
                .Add("PlanType", H5NNNCotizacionMiVidaValeParametersInstance.PlanType)
                .Add("BeneficiariosMail", H5NNNCotizacionMiVidaValeParametersInstance.BeneficiariosMail)
                .Add("FondosMail", H5NNNCotizacionMiVidaValeParametersInstance.FondosMail)
                .Add("AnswerDiabetes", H5NNNCotizacionMiVidaValeParametersInstance.AnswerDiabetes)
                .Add("AnswerCancer", H5NNNCotizacionMiVidaValeParametersInstance.AnswerCancer)
                .Add("AnswerHeart", H5NNNCotizacionMiVidaValeParametersInstance.AnswerHeart)
                .Add("PrimaTotalAnual", H5NNNCotizacionMiVidaValeParametersInstance.PrimaTotalAnual)
                .Add("AddressPhysicalAddressDLI", H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI)
                .Add("AddresseMailDLI", H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI)
                .Add("ProductMasterDescription", H5NNNCotizacionMiVidaValeParametersInstance.ProductMasterDescription)
                .Add("ConsumerInformtion", H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation)
                .Add("GenderClient", H5NNNCotizacionMiVidaValeParametersInstance.GenderClient)
                .Add("ClientExistInDB", H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB)
                End With

                WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("EnviaCotizacionMailVidaH5NN", "44fedbd9-c93b-4170-a7bf-6a09000fa283", 0, WorkflowInArguments, True, False, HttpContext.Current.Request.UrlReferrer.AbsolutePath, H5NNNCotizacionMiVidaValeParametersInstance.InternalId)


                currentAction = SessionTrace("24. The message 'El resumen de la cot...' will displayed as 'Popup'")
                ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                messageAction = "El resumen de la cotización ha sido enviado al correo indicado { Value /eMail }."
                messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                resultData.AddNotifyPopup(messageAction)

                instance = ClassToEntryData(instance, H5NNNCotizacionMiVidaValeParametersInstance)
                
                StoreFormInformation(H5NNNCotizacionMiVidaValeParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5NNNCotizacionMiVidaVale", "EnviarCotizacionEmailClick", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function eMailChange(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5NNNCotizacionMiVidaValeParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("eMailClick")
                H5NNNCotizacionMiVidaValeParametersInstance = EntryDataToClass(H5NNNCotizacionMiVidaValeParametersInstance, instance)
                currentAction = SessionTrace("1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.eMailAddressDefault = H5NNNCotizacionMiVidaValeParametersInstance.eMail...")
                currentAction = SessionTrace("1.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.eMailAddressDefault = H5NNNCotizacionMiVidaValeParametersInstance.eMail...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.eMailAddressDefault = H5NNNCotizacionMiVidaValeParametersInstance.eMail


                instance = ClassToEntryData(instance, H5NNNCotizacionMiVidaValeParametersInstance)
                
                StoreFormInformation(H5NNNCotizacionMiVidaValeParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5NNNCotizacionMiVidaVale", "eMailChange", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function AcceptClick(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5NNNCotizacionMiVidaValeParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("AcceptClick")
                H5NNNCotizacionMiVidaValeParametersInstance = EntryDataToClass(H5NNNCotizacionMiVidaValeParametersInstance, instance)
                currentAction = SessionTrace("2. If H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintIndicator = true Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintIndicator = true Then

                    currentAction = SessionTrace("3. If H5NNNCotizacionMiVidaValeParametersInstance.QuestionnairesAvailable.Cancer = true OR H5NNNCotizacionMiVidaValeParametersInstance.QuestionnairesAvailable.Diabetes = true OR ... Then")
                    If H5NNNCotizacionMiVidaValeParametersInstance.QuestionnairesAvailable.Cancer = true OrElse H5NNNCotizacionMiVidaValeParametersInstance.QuestionnairesAvailable.Diabetes = true OrElse H5NNNCotizacionMiVidaValeParametersInstance.QuestionnairesAvailable.Heart = true Then

                        currentAction = SessionTrace("4. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")
                        currentAction = SessionTrace("4.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")

                        H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true

                        currentAction = SessionTrace("5. The message 'No puede seleccionar...' will displayed as 'Popup'")
                        ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                        messageAction = "No puede seleccionar ""emisión en linea"", el asegurado debe llenar cuestionario de salud"
                        messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                        resultData.AddNotifyPopup(messageAction)
                            End If
                        Else
                    currentAction = SessionTrace("6. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false...")
                    currentAction = SessionTrace("6.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false...")

                    H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false

                            End If
                currentAction = SessionTrace("7. If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("8. If H5NNNCotizacionMiVidaValeParametersInstance.MesTarjeta > 12 OR H5NNNCotizacionMiVidaValeParametersInstance.MesTarjeta = 0 Then")
                    If H5NNNCotizacionMiVidaValeParametersInstance.MesTarjeta > 12 OrElse H5NNNCotizacionMiVidaValeParametersInstance.MesTarjeta = 0 Then

                        currentAction = SessionTrace("9. The message 'Mes de vencimiento i...' will displayed as 'Popup'")
                        ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                        messageAction = "Mes de vencimiento inválido..."
                        messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                        resultData.AddNotifyPopup(messageAction)
                        currentAction = SessionTrace("10. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")
                        currentAction = SessionTrace("10.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")

                        H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true

                                        Else
                        currentAction = SessionTrace("11. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.Month = H5NNNCotizacionMiVidaValeParametersInstance.MesTarjeta...")
                        currentAction = SessionTrace("11.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.Month = H5NNNCotizacionMiVidaValeParametersInstance.MesTarjeta...")
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy = New InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy
                End If

                        H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.Month = H5NNNCotizacionMiVidaValeParametersInstance.MesTarjeta

                                            End If
                                        End If
                currentAction = SessionTrace("12. If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("13. If H5NNNCotizacionMiVidaValeParametersInstance.AnoTarjeta <= H5NNNCotizacionMiVidaValeParametersInstance.CurrentYear Then")
                    If H5NNNCotizacionMiVidaValeParametersInstance.AnoTarjeta <= H5NNNCotizacionMiVidaValeParametersInstance.CurrentYear Then

                        currentAction = SessionTrace("14. The message 'Año de vencimiento i...' will displayed as 'Popup'")
                        ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                        messageAction = "Año de vencimiento inválido... Debe ser posterior al año actual"
                        messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                        resultData.AddNotifyPopup(messageAction)
                        currentAction = SessionTrace("15. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")
                        currentAction = SessionTrace("15.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")

                        H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true

                                                    Else
                        currentAction = SessionTrace("16. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.Year = H5NNNCotizacionMiVidaValeParametersInstance.AnoTarjeta...")
                        currentAction = SessionTrace("16.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.Year = H5NNNCotizacionMiVidaValeParametersInstance.AnoTarjeta...")
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                        If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy = New InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy
                End If

                        H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.Year = H5NNNCotizacionMiVidaValeParametersInstance.AnoTarjeta

                                                        End If
                                                    End If
                currentAction = SessionTrace("17. If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("18. H5NNNCotizacionMiVidaValeParametersInstance.PreviousPayment = true...")
                    currentAction = SessionTrace("18.1. H5NNNCotizacionMiVidaValeParametersInstance.PreviousPayment = true...")

                    H5NNNCotizacionMiVidaValeParametersInstance.PreviousPayment = true

                                                        End If
                currentAction = SessionTrace("19. If H5NNNCotizacionMiVidaValeParametersInstance.BeneficiaryType = 1 Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.BeneficiaryType = 1 Then

                    currentAction = SessionTrace("20. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryBeneficiary = Nothing...")
                    currentAction = SessionTrace("20.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryBeneficiary = Nothing...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryBeneficiary) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryBeneficiary = New InMotionGIT.Policy.Entity.Contracts.Role
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryBeneficiary = Nothing

                                                            End If
                currentAction = SessionTrace("21. If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("22. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.InsuredAmount = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineO...")
                    currentAction = SessionTrace("22.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.InsuredAmount = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineO...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.InsuredAmount = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation

                    currentAction = SessionTrace("23. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PaymentFrequency = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Policy.Pa...")
                    currentAction = SessionTrace("23.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PaymentFrequency = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Policy.Pa...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PaymentFrequency = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Policy.PaymentFrequency

                                                                End If
                currentAction = SessionTrace("24. H5NNNCotizacionMiVidaValeParametersInstance.SendMailIndicator = true...")
                currentAction = SessionTrace("24.1. H5NNNCotizacionMiVidaValeParametersInstance.SendMailIndicator = true...")

                H5NNNCotizacionMiVidaValeParametersInstance.SendMailIndicator = true

                currentAction = SessionTrace("25. If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("27. H5NNNCotizacionMiVidaValeParametersInstance.frompanel = true...")
                    currentAction = SessionTrace("27.1. H5NNNCotizacionMiVidaValeParametersInstance.frompanel = true...")

                    H5NNNCotizacionMiVidaValeParametersInstance.frompanel = true

currentAction = SessionTrace("28. Call 'Prepara los objetos asociados a cambiar en RiskInformation.' library")
                Dim _RiskInformation_1eb654ea9cdc4ee98e185b40b096153e As InMotionGIT.Policy.Entity.Contracts.RiskInformation 
                _RiskInformation_1eb654ea9cdc4ee98e185b40b096153e = (New InMotionGIT.PolicyManager.Proxy.Manager).AmendmentSetup(risk:=H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation, atDate:=Date.Today, accessToken:=HttpContext.Current.Session("AccessToken"), provider:="CORE") 
 
                isNullResult = (IsNothing(_RiskInformation_1eb654ea9cdc4ee98e185b40b096153e)) 
                If Not isNullResult Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = _RiskInformation_1eb654ea9cdc4ee98e185b40b096153e
                End If

                    currentAction = SessionTrace("29. If H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintIndicator = true Then")
                    If H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintIndicator = true Then

                        currentAction = SessionTrace("30. H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrint = 1...")
                        currentAction = SessionTrace("30.1. H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrint = 1...")

                        H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrint = 1

                        currentAction = SessionTrace("31. Call 'Main Process Of Life Request - H5' workflow in Synchronous mode with tracking")
                        WorkflowInArguments = New Dictionary(Of String, Object)

                        With WorkflowInArguments
                        .Add("RiskInformation", H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation)
                        .Add("eMail", H5NNNCotizacionMiVidaValeParametersInstance.eMail)
                        .Add("Currency", H5NNNCotizacionMiVidaValeParametersInstance.Currency)
                        .Add("ClientExistInDB", H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB)
                        .Add("QuestionnairesAvailable", H5NNNCotizacionMiVidaValeParametersInstance.QuestionnairesAvailable)
                        .Add("ProducerClientID", H5NNNCotizacionMiVidaValeParametersInstance.ProducerClientID)
                        .Add("BeneficiaryType", H5NNNCotizacionMiVidaValeParametersInstance.BeneficiaryType)
                        .Add("context", formContext)
                        .Add("SendMailIndicator", H5NNNCotizacionMiVidaValeParametersInstance.SendMailIndicator)
                        .Add("PlanType", H5NNNCotizacionMiVidaValeParametersInstance.PlanType)
                        .Add("MailToProducerIndicator", H5NNNCotizacionMiVidaValeParametersInstance.MailToProducerIndicator)
                        .Add("OnLinePrintIndicator", H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintIndicator)
                        .Add("uwCaseID", H5NNNCotizacionMiVidaValeParametersInstance.uwcaseid)
                        .Add("PreviousPayment", H5NNNCotizacionMiVidaValeParametersInstance.PreviousPayment)
                        .Add("ConsumerInformation", H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation)
                        .Add("PhysicalAddress", H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI)
                        .Add("ServiceResultData", H5NNNCotizacionMiVidaValeParametersInstance.ServiceResultData)
                        .Add("eMailAddress", H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI)
                        .Add("VerificarCuestionariosIndicador", H5NNNCotizacionMiVidaValeParametersInstance.VerificarCuestionariosIndicador)
                        .Add("PlanillaModificacion", H5NNNCotizacionMiVidaValeParametersInstance.PlanillaModificacion)
                        .Add("PlanillaVisualizacion", H5NNNCotizacionMiVidaValeParametersInstance.PlanillaVisualizacion)
                        .Add("UsercodeBO", H5NNNCotizacionMiVidaValeParametersInstance.UsercodeBO)
                        .Add("UsercodeFASI", H5NNNCotizacionMiVidaValeParametersInstance.UsercodeFASI)
                        .Add("Token", HttpContext.Current.Session("AccessToken"))
                        End With

                        WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("ProcessMainRequestOfLifePolicyNNH5", "8392c3b8-0533-4655-8634-552ca9614499", 1, WorkflowInArguments, True, True, HttpContext.Current.Request.UrlReferrer.AbsolutePath, H5NNNCotizacionMiVidaValeParametersInstance.InternalId)

                        currentAction += "'Mapping Outputs'"
                        H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = WorkflowOutArguments("RiskInformation")
                        H5NNNCotizacionMiVidaValeParametersInstance.eMail = WorkflowOutArguments("eMail")
                        H5NNNCotizacionMiVidaValeParametersInstance.Currency = WorkflowOutArguments("Currency")
                        H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = WorkflowOutArguments("ClientExistInDB")
                        H5NNNCotizacionMiVidaValeParametersInstance.QuestionnairesAvailable = WorkflowOutArguments("QuestionnairesAvailable")
                        H5NNNCotizacionMiVidaValeParametersInstance.ProducerClientID = WorkflowOutArguments("ProducerClientID")
                        H5NNNCotizacionMiVidaValeParametersInstance.BeneficiaryType = WorkflowOutArguments("BeneficiaryType")
                        H5NNNCotizacionMiVidaValeParametersInstance.SendMailIndicator = WorkflowOutArguments("SendMailIndicator")
                        H5NNNCotizacionMiVidaValeParametersInstance.PlanType = WorkflowOutArguments("PlanType")
                        H5NNNCotizacionMiVidaValeParametersInstance.MailToProducerIndicator = WorkflowOutArguments("MailToProducerIndicator")
                        H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintResult = WorkflowOutArguments("OnLinePrintResult")
                        H5NNNCotizacionMiVidaValeParametersInstance.PolicyDocument = WorkflowOutArguments("PolicyDocument")
                        H5NNNCotizacionMiVidaValeParametersInstance.uwcaseid = WorkflowOutArguments("uwCaseID")
                        H5NNNCotizacionMiVidaValeParametersInstance.ServiceResultData = WorkflowOutArguments("ServiceResultData")

                                                                            Else
                        currentAction = SessionTrace("32. H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrint = 2...")
                        currentAction = SessionTrace("32.1. H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrint = 2...")

                        H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrint = 2

                        currentAction = SessionTrace("33. The message 'Sr/Sra. { Value /Ris...' will displayed as 'Splash'")
                        ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                        messageAction = "Sr/Sra. { Value /RiskInformation/PrimaryInsured/Client/FirstName } { Value /RiskInformation/PrimaryInsured/Client/LastName } { Value /RiskInformation/PrimaryInsured/Client/LastName2 }, pronto estará recibiendo noticias nuestras...Gracias por visitarnos..."
                        messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                        resultData.AddNotifySplash(messageAction)
                        currentAction = SessionTrace("34. Call 'Main Process Of Life Request - H5' workflow in Asynchronous mode with tracking")
                        WorkflowInArguments = New Dictionary(Of String, Object)

                        With WorkflowInArguments
                        .Add("RiskInformation", H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation)
                        .Add("eMail", H5NNNCotizacionMiVidaValeParametersInstance.eMail)
                        .Add("Currency", H5NNNCotizacionMiVidaValeParametersInstance.Currency)
                        .Add("ClientExistInDB", H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB)
                        .Add("QuestionnairesAvailable", H5NNNCotizacionMiVidaValeParametersInstance.QuestionnairesAvailable)
                        .Add("ProducerClientID", H5NNNCotizacionMiVidaValeParametersInstance.ProducerClientID)
                        .Add("BeneficiaryType", H5NNNCotizacionMiVidaValeParametersInstance.BeneficiaryType)
                        .Add("context", formContext)
                        .Add("SendMailIndicator", H5NNNCotizacionMiVidaValeParametersInstance.SendMailIndicator)
                        .Add("PlanType", H5NNNCotizacionMiVidaValeParametersInstance.PlanType)
                        .Add("MailToProducerIndicator", H5NNNCotizacionMiVidaValeParametersInstance.MailToProducerIndicator)
                        .Add("OnLinePrintIndicator", H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintIndicator)
                        .Add("uwCaseID", H5NNNCotizacionMiVidaValeParametersInstance.uwcaseid)
                        .Add("PreviousPayment", H5NNNCotizacionMiVidaValeParametersInstance.PreviousPayment)
                        .Add("ConsumerInformation", H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation)
                        .Add("PhysicalAddress", H5NNNCotizacionMiVidaValeParametersInstance.AddressPhysicalAddressDLI)
                        .Add("ServiceResultData", H5NNNCotizacionMiVidaValeParametersInstance.ServiceResultData)
                        .Add("eMailAddress", H5NNNCotizacionMiVidaValeParametersInstance.AddresseMailDLI)
                        .Add("VerificarCuestionariosIndicador", H5NNNCotizacionMiVidaValeParametersInstance.VerificarCuestionariosIndicador)
                        .Add("PlanillaModificacion", H5NNNCotizacionMiVidaValeParametersInstance.PlanillaModificacion)
                        .Add("PlanillaVisualizacion", H5NNNCotizacionMiVidaValeParametersInstance.PlanillaVisualizacion)
                        .Add("UsercodeBO", H5NNNCotizacionMiVidaValeParametersInstance.UsercodeBO)
                        .Add("UsercodeFASI", H5NNNCotizacionMiVidaValeParametersInstance.UsercodeFASI)
                        .Add("Token", HttpContext.Current.Session("AccessToken"))
                        End With

                        WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("ProcessMainRequestOfLifePolicyNNH5", "8392c3b8-0533-4655-8634-552ca9614499", 1, WorkflowInArguments, True, False, HttpContext.Current.Request.UrlReferrer.AbsolutePath, H5NNNCotizacionMiVidaValeParametersInstance.InternalId)


                                                                                End If
                                                                            End If
                currentAction = SessionTrace("35. If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("36. Call Shared Sub 'Clear Form Errors' without parameters")
                    
        H5NNNCotizacionMiVidaValeParametersInstance.Errors.Clear()
	formContext.Errors.Clear()
    

                                                                                End If
                currentAction = SessionTrace("37. If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("38. If H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintIndicator = true Then")
                    If H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintIndicator = true Then

                        currentAction = SessionTrace("39. If H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintResult = 1 Then")
                        If H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintResult = 1 Then

                            currentAction = SessionTrace("40. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")
                            currentAction = SessionTrace("40.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")

                            H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true

                            currentAction = SessionTrace("41. H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true...")
                            currentAction = SessionTrace("41.1. H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true...")

                            H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true

                            currentAction = SessionTrace("42. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.IsNew = false...")
                            currentAction = SessionTrace("42.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.IsNew = false...")
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                            H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.IsNew = false
                            currentAction = SessionTrace("42.2. H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true...")

                            H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true

                            currentAction = SessionTrace("43. The message 'No puede obtener la ...' will displayed as 'Popup'")
                            ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                            messageAction = "No puede obtener la póliza en linea, el asegurado debe proporcionar información adicional (requerimientos)... Si desea continuar con la solicitud, desmarque la opción de ""Ver cuadro de póliza en línea"" y vuelva a seleccionar ""Comprar la póliza""..."
                            messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                            resultData.AddNotifyPopup(messageAction)
                                                                                                    End If
                                                                                                End If
                                                                                            End If
                currentAction = SessionTrace("44. If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("45. If H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintIndicator = true Then")
                    If H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintIndicator = true Then

                        currentAction = SessionTrace("46. If H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintResult <> 0 AND H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintResult <> 99 Then")
                        If H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintResult <> 0 AndAlso H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintResult <> 99 Then

                            currentAction = SessionTrace("47. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")
                            currentAction = SessionTrace("47.1. H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true...")

                            H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = true

                            currentAction = SessionTrace("48. The message 'No se puede realizar...' will displayed as 'Splash'")
                            ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                            messageAction = "No se puede realizar la impresión del documento (Error { Value /OnLinePrintResult } ) (2)"
                            messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                            resultData.AddNotifySplash(messageAction)
                                                                                                                End If
                                                                                                            End If
                                                                                                        End If
                currentAction = SessionTrace("49. If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then")
                If H5NNNCotizacionMiVidaValeParametersInstance.ErrorsFound = false Then

                    currentAction = SessionTrace("50. If H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintIndicator = true Then")
                    If H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintIndicator = true Then

                        currentAction = SessionTrace("51. If H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintResult = 0 Then")
                        If H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintResult = 0 Then

                            currentAction = SessionTrace("52. Call Shared Function 'Retrieve Underwriting Case' with parameters (Case ID, Effective Date)")
                            Dim _UnderwritingCase_76357bb3b44f46b4b1924c171b5f5ce5 As InMotionGIT.Underwriting.Contracts.UnderwritingCase
                            _UnderwritingCase_76357bb3b44f46b4b1924c171b5f5ce5 = InMotionGIT.Underwriting.Proxy.Manager.Retrieve(underwritingCaseID:=H5NNNCotizacionMiVidaValeParametersInstance.uwcaseid, atDate:=Date.Today)
                            H5NNNCotizacionMiVidaValeParametersInstance.UnderwritingCase = _UnderwritingCase_76357bb3b44f46b4b1924c171b5f5ce5
                            isNullResult = (IsNothing(_UnderwritingCase_76357bb3b44f46b4b1924c171b5f5ce5))

                            currentAction = SessionTrace("54. H5NNNCotizacionMiVidaValeParametersInstance.SeffectDate = String.Empty...")
                            currentAction = SessionTrace("54.1. H5NNNCotizacionMiVidaValeParametersInstance.SeffectDate = String.Empty...")

                            H5NNNCotizacionMiVidaValeParametersInstance.SeffectDate = String.Empty

                            currentAction = SessionTrace("55. H5NNNCotizacionMiVidaValeParametersInstance.PolicyToPrint = convert.ToInt32(H5NNNCotizacionMiVidaValeParametersInstance.Underwrit...")
                            currentAction = SessionTrace("55.1. H5NNNCotizacionMiVidaValeParametersInstance.PolicyToPrint = convert.ToInt32(H5NNNCotizacionMiVidaValeParametersInstance.Underwrit...")

                            H5NNNCotizacionMiVidaValeParametersInstance.PolicyToPrint = convert.ToInt32(H5NNNCotizacionMiVidaValeParametersInstance.UnderwritingCase.PolicyID)

                            currentAction = SessionTrace("56. H5NNNCotizacionMiVidaValeParametersInstance.ReportURL = 'CAL001_LIFE.rpt' 'url mode displayed in the editor'...'")
                            Dim reportParameters56 As New List(Of String)
                            Dim procedureParameters56 As New List(Of String)
                            procedureParameters56.Add("2")
                            procedureParameters56.Add(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LineOfBusiness)
                            procedureParameters56.Add(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.ProductCode)
                            procedureParameters56.Add(H5NNNCotizacionMiVidaValeParametersInstance.PolicyToPrint)
                            procedureParameters56.Add("0")
                            procedureParameters56.Add(H5NNNCotizacionMiVidaValeParametersInstance.SeffectDate)
                            H5NNNCotizacionMiVidaValeParametersInstance.ReportURL = InMotionGIT.Report.Crystal.Proxy.Client.Execute("CAL001_LIFE", True, False, reportParameters56, procedureParameters56)

                            currentAction = SessionTrace("57. If H5NNNCotizacionMiVidaValeParametersInstance.ReportURL Is Null Or Empty '' Then")
                            If String.IsNullOrEmpty(H5NNNCotizacionMiVidaValeParametersInstance.ReportURL) Then

                                currentAction = SessionTrace("58. The message 'Póliza generada { Va...' will displayed as 'Splash'")
                                ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                                messageAction = "Póliza generada { Value /UnderwritingCase/PolicyID }. Por los momentos no se puede emitir el cuadro de póliza... Por favor contacte a su asesor de seguros..."
                                messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                                resultData.AddNotifySplash(messageAction)
                                                                                                                                    Else
                                currentAction = SessionTrace("59. The message '<a href='{ Value /Re...' will displayed as 'Splash'")
                                ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                                messageAction = "<a href=""{ Value /ReportURL }"">Presione aquí para ver el documento... Póliza { Value /UnderwritingCase/PolicyID }</a>"
                                messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                                resultData.AddNotifySplash(messageAction)
                                                                                                                                        End If
                                                                                                                                    End If
                                                                                                                                End If
                                                                                                                            End If
                currentAction = SessionTrace("60. H5NNNCotizacionMiVidaValeParametersInstance.FormStatus = 3...")
                currentAction = SessionTrace("60.1. H5NNNCotizacionMiVidaValeParametersInstance.FormStatus = 3...")

                H5NNNCotizacionMiVidaValeParametersInstance.FormStatus = 3


                instance = ClassToEntryData(instance, H5NNNCotizacionMiVidaValeParametersInstance)
                
                StoreFormInformation(H5NNNCotizacionMiVidaValeParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5NNNCotizacionMiVidaVale", "AcceptClick", currentAction)
            End Try
            
            Return resultData
        End Function
        <WebMethod(EnableSession:=True)>
        Public Shared Function RechazarClick(instance As EntryData) As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            
            Dim resultData As New InMotionGIT.FrontOffice.Support.DataType.ServerActionResult
            Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = Nothing
            Dim UserInfo As InMotionGIT.Membership.Providers.MemberContext = Nothing
            Dim formContext As InMotionGIT.Common.Contracts.Context = Nothing
            Dim selectDataTableItem As DataTable = Nothing
            Dim currentAction As String = String.Empty
            Dim messageAction As String = String.Empty
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                H5NNNCotizacionMiVidaValeParametersInstance = RetrieveFormInformationFromDatabase(instance.InstanceFormId)
                UserInfo = New InMotionGIT.Membership.Providers.MemberContext
                formContext = New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                       instance.InstanceFormId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                      .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                      .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                      .AccessToken = HttpContext.Current.Session("AccessToken")}
                currentAction = SessionTrace("RechazarClick")
                H5NNNCotizacionMiVidaValeParametersInstance = EntryDataToClass(H5NNNCotizacionMiVidaValeParametersInstance, instance)
                currentAction = SessionTrace("1. The message 'No se continua con e...' will displayed as 'Splash'")
                ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                messageAction = "No se continua con el proceso... No deje de visitarnos en otra oportunidad..."
                messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                resultData.AddNotifySplash(messageAction)
                currentAction = SessionTrace("2. H5NNNCotizacionMiVidaValeParametersInstance.FormStatus = 99...")
                currentAction = SessionTrace("2.1. H5NNNCotizacionMiVidaValeParametersInstance.FormStatus = 99...")

                H5NNNCotizacionMiVidaValeParametersInstance.FormStatus = 99


                instance = ClassToEntryData(instance, H5NNNCotizacionMiVidaValeParametersInstance)
                
                StoreFormInformation(H5NNNCotizacionMiVidaValeParametersInstance)
                With resultData
                    .Success = True
                    .Data = instance
                End With

            Catch ex As Exception
                resultData = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessServerAction(ex, "H5NNNCotizacionMiVidaVale", "RechazarClick", currentAction)
            End Try
            
            Return resultData
        End Function

#End Region

#Region "Lookups Web Methods"


        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForCurrency(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = RetrieveFormInformationFromDatabase(id) 
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE11.NCODIGINT, TABLE11.SDESCRIPT, TABLE11.SSTATREGT, TABLE11.SSHORT_DES FROM TABLE11 TABLE11  WHERE TABLE11.SSTATREGT = '{0}'  ORDER BY TABLE11.SDESCRIPT ASC", "1"), 
                                            "TABLE11", "Linked.LatCombined")

                    .Cache = InMotionGIT.Common.Enumerations.EnumCache.CacheWithFullParameters
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NCODIGINT"),
                                                                                            .Description = item.StringValue("SSHORT_DES")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5NNNCotizacionMiVidaVale", "LookUpForCurrency", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForPaymentFrequency(id As String, RiskInformationLineOfBusiness As System.Int32, RiskInformationProductCode As System.Int32, RiskInformationPaymentMethod As System.Int32) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = RetrieveFormInformationFromDatabase(id) 
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE36.NPAYFREQ, TABLE36.SSTATREGT, TABLE36.SDESCRIPT, PAY_FRACTI.NBRANCH, PAY_FRACTI.NPRODUCT, PAY_FRACTI.DNULLDATE, WAY_PAY_PROD.NWAY_PAY, WAY_PAY_PROD.DNULLDATE FROM TABLE36 TABLE36 JOIN PAY_FRACTI PAY_FRACTI ON PAY_FRACTI.NPAYFREQ = TABLE36.NPAYFREQ JOIN WAY_PAY_PROD WAY_PAY_PROD ON WAY_PAY_PROD.NBRANCH = PAY_FRACTI.NBRANCH  AND WAY_PAY_PROD.NPRODUCT = PAY_FRACTI.NPRODUCT  WHERE  ( TABLE36.SSTATREGT = '{0}' AND PAY_FRACTI.SSTATREGT = '{1}' AND PAY_FRACTI.DNULLDATE IS NULL AND WAY_PAY_PROD.DNULLDATE IS NULL )   AND (PAY_FRACTI.NBRANCH = @:PAY_FRACTINBRANCHDependen AND PAY_FRACTI.NPRODUCT = @:PAY_FRACTINPRODUCTDepende AND WAY_PAY_PROD.NWAY_PAY = @:WAY_PAY_PRODNWAY_PAYDepen AND NOT TABLE36.SDESCRIPT IS NULL) ORDER BY SDESCRIPT ", "1", "1"), 
                                            "TABLE36", "Linked.LatCombined")
                    .AddParameter("PAY_FRACTINBRANCHDependen", DbType.Int32, 0, False, RiskInformationLineOfBusiness)
                    .AddParameter("PAY_FRACTINPRODUCTDepende", DbType.Int32, 0, False, RiskInformationProductCode)
                    .AddParameter("WAY_PAY_PRODNWAY_PAYDepen", DbType.Int32, 0, False, RiskInformationPaymentMethod)

                    
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NPAYFREQ"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5NNNCotizacionMiVidaVale", "LookUpForPaymentFrequency", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForPaymentMethod(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = RetrieveFormInformationFromDatabase(id) 
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE5002.NWAY_PAY, TABLE5002.SSTATREGT, TABLE5002.SDESCRIPT FROM TABLE5002 TABLE5002  WHERE TABLE5002.SSTATREGT = '{0}'  AND NOT TABLE5002.SDESCRIPT IS NULL ORDER BY SDESCRIPT", "1"), 
                                            "TABLE5002", "Linked.LatCombined")

                    .Cache = InMotionGIT.Common.Enumerations.EnumCache.CacheWithFullParameters
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NWAY_PAY"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5NNNCotizacionMiVidaVale", "LookUpForPaymentMethod", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForRelationship(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = RetrieveFormInformationFromDatabase(id) 
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE55.NRELATION, TABLE55.SDESCRIPT, TABLE55.SSTATREGT FROM TABLE55 TABLE55  WHERE TABLE55.SSTATREGT = 1  ORDER BY TABLE55.SDESCRIPT ASC ", "1"), 
                                            "TABLE55", "Linked.LatCombined")

                    .Cache = InMotionGIT.Common.Enumerations.EnumCache.CacheWithFullParameters
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NRELATION"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5NNNCotizacionMiVidaVale", "LookUpForRelationship", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForRelationshipBD(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = RetrieveFormInformationFromDatabase(id) 
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE55.NRELATION, TABLE55.SSTATREGT, TABLE55.SDESCRIPT FROM TABLE55 TABLE55  WHERE TABLE55.SSTATREGT = '{0}'  AND NOT TABLE55.SDESCRIPT IS NULL ORDER BY SDESCRIPT", "1"), 
                                            "TABLE55", "Linked.LatCombined")

                    .Cache = InMotionGIT.Common.Enumerations.EnumCache.CacheWithFullParameters
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NRELATION"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5NNNCotizacionMiVidaVale", "LookUpForRelationshipBD", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForCreditCardType(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = RetrieveFormInformationFromDatabase(id) 
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE183.NCARD_TYPE, TABLE183.SSTATREGT, TABLE183.SDESCRIPT FROM TABLE183 TABLE183  WHERE TABLE183.SSTATREGT = '{0}'  AND NOT TABLE183.SDESCRIPT IS NULL ORDER BY SDESCRIPT", "1"), 
                                            "TABLE183", "Linked.LatCombined")

                    .Cache = InMotionGIT.Common.Enumerations.EnumCache.CacheWithFullParameters
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NCARD_TYPE"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5NNNCotizacionMiVidaVale", "LookUpForCreditCardType", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForBankCode(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = RetrieveFormInformationFromDatabase(id) 
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE7.NBANK_CODE, TABLE7.SSTATREGT, TABLE7.SDESCRIPT FROM TABLE7 TABLE7  WHERE TABLE7.SSTATREGT = '{0}'  AND NOT TABLE7.SDESCRIPT IS NULL ORDER BY SDESCRIPT", "1"), 
                                            "TABLE7", "Linked.LatCombined")

                    .Cache = InMotionGIT.Common.Enumerations.EnumCache.CacheWithFullParameters
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NBANK_CODE"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5NNNCotizacionMiVidaVale", "LookUpForBankCode", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForLineOfBusiness(id As String) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = RetrieveFormInformationFromDatabase(id) 
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  TABLE10.NBRANCH, TABLE10.SDESCRIPT FROM TABLE10 TABLE10  WHERE  ( TABLE10.SSTATREGT = 1 )   AND NOT TABLE10.SDESCRIPT IS NULL ORDER BY SDESCRIPT", "1"), 
                                            "TABLE10", "Linked.LatCombined")

                    .Cache = InMotionGIT.Common.Enumerations.EnumCache.CacheWithFullParameters
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NBRANCH"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5NNNCotizacionMiVidaVale", "LookUpForLineOfBusiness", String.Empty)
            End Try
                        
            Return result
        End Function

        <WebMethod(EnableSession:=True)>
        Public Shared Function LookUpForRiskInformationProductCode(id As String, RiskInformationLineOfBusiness As System.Int32) As InMotionGIT.FrontOffice.Support.DataType.ClientActionResult
            
            Dim result As New InMotionGIT.FrontOffice.Support.DataType.ClientActionResult With {.Success = True}
            Dim resultData As DataTable = Nothing
            Dim newLookupList As New List(Of InMotionGIT.Common.DataType.LookUpValue)                       
            
            Try
                InMotionGIT.FASI.Support.Authentication.AuthorizationProcess("*")
                Dim H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters = RetrieveFormInformationFromDatabase(id) 
                
                With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                          "SELECT  PRODMASTER.NBRANCH, PRODMASTER.NPRODUCT, PRODMASTER.SDESCRIPT FROM PRODMASTER PRODMASTER  WHERE PRODMASTER.SSTATREGT = 1  AND (PRODMASTER.NBRANCH = @:PRODMASTERNBRANCHDependen AND NOT PRODMASTER.SDESCRIPT IS NULL) ORDER BY SDESCRIPT ", "1"), 
                                            "PRODMASTER", "Linked.LatCombined")
                    .AddParameter("PRODMASTERNBRANCHDependen", DbType.Int32, 0, False, RiskInformationLineOfBusiness)

                    .Cache = InMotionGIT.Common.Enumerations.EnumCache.CacheWithFullParameters
                    resultData = .QueryExecuteToTable(True)
                End With

                If Not IsNothing(resultData) Then
                    For Each item As DataRow In resultData.Rows
                        newLookupList.Add(New InMotionGIT.Common.DataType.LookUpValue With {.Code = item.NumericValue("NPRODUCT"),
                                                                                            .Description = item.StringValue("SDESCRIPT")})
                    Next
                End If

                result.Data = newLookupList

            Catch ex As Exception
                result = InMotionGIT.FrontOffice.Support.ExceptionHandler.ProcessClientAction(ex, "H5NNNCotizacionMiVidaVale", "LookUpForRiskInformationProductCode", String.Empty)
            End Try
                        
            Return result
        End Function

#End Region

#Region "Form Actions"

        Private Shared Sub Form_Initialization(ByRef currentAction As String, ByRef H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters, ByRef resultData As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult)
            Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
            Dim formContext As New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                        H5NNNCotizacionMiVidaValeParametersInstance.InternalId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                                     .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                                     .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                                     .AccessToken = HttpContext.Current.Session("AccessToken")}
            Dim selectDataTableItem As DataTable = Nothing
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim messageAction As String = String.Empty
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False
            Dim ProductMasterLocal As InMotionGIT.Product.Entity.Contracts.ProductMaster
            currentAction = SessionTrace("Form_Initialization")

            currentAction = SessionTrace("1. H5NNNCotizacionMiVidaValeParametersInstance.PlanillaModificacion = 'H5NNCotizacionMiVidaValeEdit'...")
            currentAction = SessionTrace("1.1. H5NNNCotizacionMiVidaValeParametersInstance.PlanillaModificacion = 'H5NNCotizacionMiVidaValeEdit'...")

            H5NNNCotizacionMiVidaValeParametersInstance.PlanillaModificacion = "H5NNCotizacionMiVidaValeEdit"
            currentAction = SessionTrace("1.2. H5NNNCotizacionMiVidaValeParametersInstance.PlanillaVisualizacion = 'H5NNCotizacionMiVidaValeView'...")

            H5NNNCotizacionMiVidaValeParametersInstance.PlanillaVisualizacion = "H5NNCotizacionMiVidaValeView"

            currentAction = SessionTrace("2. If H5NNNCotizacionMiVidaValeParametersInstance.StatusRun <> true Then")
            If H5NNNCotizacionMiVidaValeParametersInstance.StatusRun <> true Then

                currentAction = SessionTrace("3. The message 'You are not authoriz...' will displayed as 'Splash'")
                ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                messageAction = "You are not authorized to execute this transaction"
                messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                resultData.AddNotifySplash(messageAction)
                currentAction = SessionTrace("4. H5NNNCotizacionMiVidaValeParametersInstance.ClienteIndicado = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")
                currentAction = SessionTrace("4.1. H5NNNCotizacionMiVidaValeParametersInstance.ClienteIndicado = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")

                H5NNNCotizacionMiVidaValeParametersInstance.ClienteIndicado = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID

                End If
            currentAction = SessionTrace("5. H5NNNCotizacionMiVidaValeParametersInstance.RecoveryCaseIndicator = false...")
            currentAction = SessionTrace("5.1. H5NNNCotizacionMiVidaValeParametersInstance.RecoveryCaseIndicator = false...")

            H5NNNCotizacionMiVidaValeParametersInstance.RecoveryCaseIndicator = false

            currentAction = SessionTrace("6. H5NNNCotizacionMiVidaValeParametersInstance.InRuleErros = False...")
            currentAction = SessionTrace("6.1. H5NNNCotizacionMiVidaValeParametersInstance.InRuleErros = False...")

            H5NNNCotizacionMiVidaValeParametersInstance.InRuleErros = False

            currentAction = SessionTrace("7. H5NNNCotizacionMiVidaValeParametersInstance.SendMailIndicator = True...")
            currentAction = SessionTrace("7.1. H5NNNCotizacionMiVidaValeParametersInstance.SendMailIndicator = True...")

            H5NNNCotizacionMiVidaValeParametersInstance.SendMailIndicator = True

            currentAction = SessionTrace("8. If H5NNNCotizacionMiVidaValeParametersInstance.uwcaseid <> '0' AND H5NNNCotizacionMiVidaValeParametersInstance.uwcaseid Not Is Null Or Not Empty  Then")
            If H5NNNCotizacionMiVidaValeParametersInstance.uwcaseid <> "0" AndAlso Not IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.uwcaseid) Then

                currentAction = SessionTrace("9. H5NNNCotizacionMiVidaValeParametersInstance.RecoveryCaseIndicator = true...")
                currentAction = SessionTrace("9.1. H5NNNCotizacionMiVidaValeParametersInstance.RecoveryCaseIndicator = true...")

                H5NNNCotizacionMiVidaValeParametersInstance.RecoveryCaseIndicator = true

                currentAction = SessionTrace("10. Call 'Retrieve Case Information for Request of policy' workflow in Synchronous mode with tracking")
                WorkflowInArguments = New Dictionary(Of String, Object)

                With WorkflowInArguments
                .Add("uwcaseid", H5NNNCotizacionMiVidaValeParametersInstance.uwcaseid)
                .Add("ClientName", H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.CompleteClientName)
                .Add("StatusCase", H5NNNCotizacionMiVidaValeParametersInstance.StatusCase)
                .Add("RiskInformation", H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation)
                .Add("Identifier", "RequestLifePolicy")
                .Add("context", formContext)
                End With

                WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("RetrieveCaseInformationRequestPolicy", "3967f9a8-6bc2-41d6-8672-ad0ede452cf2", 3, WorkflowInArguments, True, True, HttpContext.Current.Request.UrlReferrer.AbsolutePath, H5NNNCotizacionMiVidaValeParametersInstance.InternalId)

                currentAction += "'Mapping Outputs'"
                H5NNNCotizacionMiVidaValeParametersInstance.uwcaseid = WorkflowOutArguments("uwcaseid")
                H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.CompleteClientName = WorkflowOutArguments("ClientName")
                H5NNNCotizacionMiVidaValeParametersInstance.StatusCase = WorkflowOutArguments("StatusCase")
                H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = WorkflowOutArguments("RiskInformation")

currentAction = SessionTrace("12. Call 'Búsqueda de toda la información de un cliente' library")
                Dim _Client_a6ae13d6f6ce4e048abbbbb750f91f55 As InMotionGIT.Client.Entity.Contracts.Client 
                _Client_a6ae13d6f6ce4e048abbbbb750f91f55 = (New InMotionGIT.Client.Proxy.Manager).Retrieve(clientId:=H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.ClientID, atDate:=Date.Today, withLookupInformation:=True, childFilter:="All", accessToken:="String.Empty", provider:="CORE", companyID:=1) 
 
                isNullResult = (IsNothing(_Client_a6ae13d6f6ce4e048abbbbb750f91f55)) 
                If Not isNullResult Then
                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = _Client_a6ae13d6f6ce4e048abbbbb750f91f55
                End If

                currentAction = SessionTrace("13. H5NNNCotizacionMiVidaValeParametersInstance.InsuredAmountSelected = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineO...")
                currentAction = SessionTrace("13.1. H5NNNCotizacionMiVidaValeParametersInstance.InsuredAmountSelected = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineO...")

                H5NNNCotizacionMiVidaValeParametersInstance.InsuredAmountSelected = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation
                currentAction = SessionTrace("13.2. H5NNNCotizacionMiVidaValeParametersInstance.InsuredAmount = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineO...")

                H5NNNCotizacionMiVidaValeParametersInstance.InsuredAmount = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation
                currentAction = SessionTrace("13.3. H5NNNCotizacionMiVidaValeParametersInstance.eMail = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")

                H5NNNCotizacionMiVidaValeParametersInstance.eMail = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.eMailAddressDefault
                currentAction = SessionTrace("13.4. H5NNNCotizacionMiVidaValeParametersInstance.Currency = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Currency...")

                H5NNNCotizacionMiVidaValeParametersInstance.Currency = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Currency

                currentAction = SessionTrace("14. button2.Visible = true, Coverages.Visible = true")
                currentAction = SessionTrace("14.1. button2.Visible = true...")
                resultData.AddControlBehavior("button2", "show")
                currentAction = SessionTrace("14.2. Coverages.Visible = true...")
                resultData.AddControlBehavior("Coverages", "show")

                currentAction = SessionTrace("15. H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true...")
                currentAction = SessionTrace("15.1. H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true...")

                H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true

                currentAction = SessionTrace("16. uwcaseid.Visible = true")
                currentAction = SessionTrace("16.1. uwcaseid.Visible = true...")
                resultData.AddControlBehavior("uwcaseid", "show")

                currentAction = SessionTrace("17. Call Function 'Retrieve Product Master' with parameters (Line of Business, Product Id, Effective Date)")
                Dim _ProductMasterLocal_02b0b0a00b3a4318bcd4456cb5086edb As InMotionGIT.Product.Entity.Contracts.ProductMaster
                _ProductMasterLocal_02b0b0a00b3a4318bcd4456cb5086edb = (New InMotionGIT.Product.Services.ProductManager).RetrieveWithCaching(lineOfBusiness:=H5NNNCotizacionMiVidaValeParametersInstance.UnderwritingCase.LineOfBusiness, productId:=H5NNNCotizacionMiVidaValeParametersInstance.UnderwritingCase.Product, atDate:=Date.Today)
                ProductMasterLocal = _ProductMasterLocal_02b0b0a00b3a4318bcd4456cb5086edb
                isNullResult = (IsNothing(_ProductMasterLocal_02b0b0a00b3a4318bcd4456cb5086edb))

                currentAction = SessionTrace("18. H5NNNCotizacionMiVidaValeParametersInstance.ProductMasterDescription = ProductMasterLocal.Description...")
                currentAction = SessionTrace("18.1. H5NNNCotizacionMiVidaValeParametersInstance.ProductMasterDescription = ProductMasterLocal.Description...")

                H5NNNCotizacionMiVidaValeParametersInstance.ProductMasterDescription = ProductMasterLocal.Description

                currentAction = SessionTrace("19. uwcaseid.Value = H5NNNCotizacionMiVidaValeParametersInstance.uwcaseid")
                currentAction = SessionTrace("19.1. uwcaseid.Value = H5NNNCotizacionMiVidaValeParametersInstance.uwcaseid...")
                resultData.AddControlBehavior("uwcaseid", "")

                    Else
                currentAction = SessionTrace("20. Coverages.Visible = false, uwcaseid.Visible = false")
                currentAction = SessionTrace("20.1. Coverages.Visible = false...")
                resultData.AddControlBehavior("Coverages", "hide")
                currentAction = SessionTrace("20.2. uwcaseid.Visible = false...")
                resultData.AddControlBehavior("uwcaseid", "hide")

                        End If
            currentAction = SessionTrace("21. If H5NNNCotizacionMiVidaValeParametersInstance.uwcaseid Not Is Null Or Not Empty  AND H5NNNCotizacionMiVidaValeParametersInstance.uwcaseid <> 0 Then")
            If Not IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.uwcaseid) AndAlso H5NNNCotizacionMiVidaValeParametersInstance.uwcaseid <> 0 Then

                currentAction = SessionTrace("22. If H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy Not Is Null Or Not Empty  Then")
                If Not IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy) Then

                    currentAction = SessionTrace("23. If H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.Month Not Is Null Or Not Empty  AND H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.Year Not Is Null Or Not Empty  Then")
                    If Not IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.Month) AndAlso Not IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.Year) Then

                        currentAction = SessionTrace("24. H5NNNCotizacionMiVidaValeParametersInstance.MesTarjeta = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Automatic...")
                        currentAction = SessionTrace("24.1. H5NNNCotizacionMiVidaValeParametersInstance.MesTarjeta = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Automatic...")

                        H5NNNCotizacionMiVidaValeParametersInstance.MesTarjeta = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.Month
                        currentAction = SessionTrace("24.2. H5NNNCotizacionMiVidaValeParametersInstance.AnoTarjeta = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Automatic...")

                        H5NNNCotizacionMiVidaValeParametersInstance.AnoTarjeta = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.AutomaticPaymentPolicy.Year

                                            End If
                                        End If
                                    End If
            currentAction = SessionTrace("25. Enable 'zonegeneral' control")
            resultData.AddControlBehavior("zonegeneral", "enabled")

            currentAction = SessionTrace("26. Hide 'Detalle de beneficiarios' control")
            resultData.AddControlBehavior("ShowBeneficiary", "hide")

            currentAction = SessionTrace("27. Hide 'Suma asegurada' control")
            resultData.AddControlBehavior("InsuredAmountForCalculation", "hide")

            currentAction = SessionTrace("28. H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount = 0...")
            currentAction = SessionTrace("28.1. H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount = 0...")

            H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount = 0

            currentAction = SessionTrace("29. If H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = True Then")
            If H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = True Then

                currentAction = SessionTrace("30. FirstName.Enabled = false, LastName.Enabled = false, LastName2.Enabled = false...")
                currentAction = SessionTrace("30.1. FirstName.Enabled = false...")
                resultData.AddControlBehavior("FirstName", "disabled")
                currentAction = SessionTrace("30.2. LastName.Enabled = false...")
                resultData.AddControlBehavior("LastName", "disabled")
                currentAction = SessionTrace("30.3. LastName2.Enabled = false...")
                resultData.AddControlBehavior("LastName2", "disabled")
                currentAction = SessionTrace("30.4. zone10.Enabled = true...")
                resultData.AddControlBehavior("zone10", "enabled")
                currentAction = SessionTrace("30.5. ClientID.Enabled = false...")
                resultData.AddControlBehavior("ClientID", "disabled")

                currentAction = SessionTrace("31. ClientID.Enabled = false")
                currentAction = SessionTrace("31.1. ClientID.Enabled = false...")
                resultData.AddControlBehavior("ClientID", "disabled")

                currentAction = SessionTrace("32. Call 'Get the face amount of the Life policies of the insured person' workflow in Synchronous mode with tracking")
                WorkflowInArguments = New Dictionary(Of String, Object)

                With WorkflowInArguments
                .Add("context", formContext)
                .Add("ClientID", H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID)
                .Add("CurrencyID", H5NNNCotizacionMiVidaValeParametersInstance.Currency)
                .Add("Amount", H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount)
                .Add("ProcessDate", H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.EffectiveDate)
                End With

                WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("GetFaceAmountOfLifePoliciesOfTheInsuredPerson", "a240a822-d493-4dff-a365-ccb17551e006", 2, WorkflowInArguments, True, True, HttpContext.Current.Request.UrlReferrer.AbsolutePath, H5NNNCotizacionMiVidaValeParametersInstance.InternalId)

                currentAction += "'Mapping Outputs'"
                H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID = WorkflowOutArguments("ClientID")
                H5NNNCotizacionMiVidaValeParametersInstance.Currency = WorkflowOutArguments("CurrencyID")
                H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount = WorkflowOutArguments("Amount")
                H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.EffectiveDate = WorkflowOutArguments("ProcessDate")

                currentAction = SessionTrace("33. H5NNNCotizacionMiVidaValeParametersInstance.CancelledPoliciesQuantity = 0...")
                currentAction = SessionTrace("33.1. H5NNNCotizacionMiVidaValeParametersInstance.CancelledPoliciesQuantity = 0...")

                H5NNNCotizacionMiVidaValeParametersInstance.CancelledPoliciesQuantity = 0

                currentAction = SessionTrace("34. SELECT CERTIFICAT.SCERTYPE, CERTIFICAT.NBRANCH, CERTIFICAT.NPRODUCT FROM CERTIFICAT... WHERE CERTIFICAT.SCERTYPE = 2 AND CERTIFICAT.SSTATUSVA <> 3 AND CERTIFICAT.NNULLCODE <> 2 AND )")
                isFoundData = False
                                       With New DataManagerFactory("SELECT DISTINCT COUNT(CERTIFICAT.NPOLICY) NPOLICY FROM CERTIFICAT CERTIFICAT  JOIN ROLES ROLES ON ROLES.SCERTYPE = CERTIFICAT.SCERTYPE  AND ROLES.NBRANCH = CERTIFICAT.NBRANCH  AND ROLES.NPRODUCT = CERTIFICAT.NPRODUCT  AND ROLES.NPOLICY = CERTIFICAT.NPOLICY  AND ROLES.NCERTIF = CERTIFICAT.NCERTIF  WHERE CERTIFICAT.SCERTYPE = '2' AND CERTIFICAT.SSTATUSVA <> '3' AND ROLES.NROLE = 2 AND ROLES.SCLIENT = @:ROLESSCLIENT3 AND (CERTIFICAT.NNULLCODE <> 2 AND CERTIFICAT.NNULLCODE <> 3 AND CERTIFICAT.NNULLCODE <> 0 AND CERTIFICAT.NNULLCODE IS NOT NULL)", "CERTIFICAT", "Linked.LatCombined")
.AddParameter("ROLESSCLIENT3", DbType.AnsiStringFixedLength, 14, (H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID = String.Empty), H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID)
 
            H5NNNCotizacionMiVidaValeParametersInstance.CancelledPoliciesQuantity = .QueryExecuteScalarToInteger()  
        End With

                currentAction = SessionTrace("35. H5NNNCotizacionMiVidaValeParametersInstance.OtherPoliciesSameRiskQuantity = 0...")
                currentAction = SessionTrace("35.1. H5NNNCotizacionMiVidaValeParametersInstance.OtherPoliciesSameRiskQuantity = 0...")

                H5NNNCotizacionMiVidaValeParametersInstance.OtherPoliciesSameRiskQuantity = 0

                currentAction = SessionTrace("36. SELECT CERTIFICAT.SCERTYPE, CERTIFICAT.NBRANCH, CERTIFICAT.NPRODUCT FROM CERTIFICAT... WHERE CERTIFICAT.SCERTYPE = 2 AND CERTIFICAT.SSTATUSVA <> 3 AND CERTIFICAT.NBRANCH = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LineOfBusiness AND )")
                isFoundData = False
                                       With New DataManagerFactory("SELECT DISTINCT COUNT(CERTIFICAT.NPOLICY) NPOLICY FROM CERTIFICAT CERTIFICAT  JOIN ROLES ROLES ON ROLES.SCERTYPE = CERTIFICAT.SCERTYPE  AND ROLES.NBRANCH = CERTIFICAT.NBRANCH  AND ROLES.NPRODUCT = CERTIFICAT.NPRODUCT  AND ROLES.NPOLICY = CERTIFICAT.NPOLICY  AND ROLES.NCERTIF = CERTIFICAT.NCERTIF  WHERE CERTIFICAT.SCERTYPE = '2' AND CERTIFICAT.SSTATUSVA <> '3' AND ROLES.NROLE = 2 AND ROLES.SCLIENT = @:ROLESSCLIENT3 AND CERTIFICAT.NBRANCH = @:CERTIFICATNBRANCH4 AND CERTIFICAT.NNULLCODE IS NULL", "CERTIFICAT", "Linked.LatCombined")
.AddParameter("ROLESSCLIENT3", DbType.AnsiStringFixedLength, 14, (H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID = String.Empty), H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID)
.AddParameter("CERTIFICATNBRANCH4", DbType.Int32, 5, False, H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LineOfBusiness)
 
            H5NNNCotizacionMiVidaValeParametersInstance.OtherPoliciesSameRiskQuantity = .QueryExecuteScalarToInteger()  
        End With

                currentAction = SessionTrace("37. If (H5NNNCotizacionMiVidaValeParametersInstance.InRuleErros = True) Then")
                If (H5NNNCotizacionMiVidaValeParametersInstance.InRuleErros = True) Then

                    currentAction = SessionTrace("38. The message 'Existe(n) poliza(s) ...' will displayed as 'Popup'")
                    ParametersToDictionary(H5NNNCotizacionMiVidaValeParametersInstance, parametersDictionary)
                    messageAction = "Existe(n) poliza(s) anulada(s) para el cliente."
                    messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary)
                    resultData.AddNotifyPopup(messageAction)
                                                End If
                                            End If
            currentAction = SessionTrace("39. If H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = false Then")
            If H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = false Then

                currentAction = SessionTrace("40. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = Nothing...")
                currentAction = SessionTrace("40.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = Nothing...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = Nothing

                currentAction = SessionTrace("41. ClientID.Enabled = true")
                currentAction = SessionTrace("41.1. ClientID.Enabled = true...")
                resultData.AddControlBehavior("ClientID", "enabled")

                currentAction = SessionTrace("42. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID = 0...")
                currentAction = SessionTrace("42.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID = 0...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.NADDRESSID = 0

                                                Else
currentAction = SessionTrace("44. Call 'Búsqueda de toda la información de un cliente' library")
                Dim _Client_db1dba193e644d678d467850c0a643e1 As InMotionGIT.Client.Entity.Contracts.Client 
                _Client_db1dba193e644d678d467850c0a643e1 = (New InMotionGIT.Client.Proxy.Manager).Retrieve(clientId:=H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID, atDate:=Date.Today, withLookupInformation:=True, childFilter:="All", accessToken:="String.Empty", provider:="CORE", companyID:=1) 
 
                isNullResult = (IsNothing(_Client_db1dba193e644d678d467850c0a643e1)) 
                If Not isNullResult Then
                    H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded = _Client_db1dba193e644d678d467850c0a643e1
                End If

                currentAction = SessionTrace("45. Cotizar.Enabled = true")
                currentAction = SessionTrace("45.1. Cotizar.Enabled = true...")
                resultData.AddControlBehavior("Cotizar", "enabled")

                                                    End If
            currentAction = SessionTrace("46. If H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true Then")
            If H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true Then

                currentAction = SessionTrace("47. If H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate Is Null Or Empty '' Then")
                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate) OrElse H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.BirthDate = Date.MinValue Then

                    currentAction = SessionTrace("48. Enable 'Fecha de nacimiento' control")
                    resultData.AddControlBehavior("BirthDate", "enabled")

                    currentAction = SessionTrace("49. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.IsDirty = True...")
                    currentAction = SessionTrace("49.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.IsDirty = True...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.IsDirty = True

                                                                Else
                    currentAction = SessionTrace("50. BirthDate.Enabled = false")
                    currentAction = SessionTrace("50.1. BirthDate.Enabled = false...")
                    resultData.AddControlBehavior("BirthDate", "disabled")

                                                                    End If
                                                                End If
            currentAction = SessionTrace("51. If H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true Then")
            If H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true Then

                currentAction = SessionTrace("52. If H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.Gender Is Null Or Empty '' OR H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.Gender = 3 Then")
                If String.IsNullOrEmpty(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.Gender) OrElse H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.Gender = 3 Then

                    currentAction = SessionTrace("53. Enable 'Sexo' control")
                    resultData.AddControlBehavior("Gender", "enabled")

                    currentAction = SessionTrace("54. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.IsDirty = True...")
                    currentAction = SessionTrace("54.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.IsDirty = True...")
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
                End If
                                    If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
                End If

                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.IsDirty = True

                                                                            Else
                    currentAction = SessionTrace("55. Gender.Enabled = false")
                    currentAction = SessionTrace("55.1. Gender.Enabled = false...")
                    resultData.AddControlBehavior("GenderWrap", "disabled")

                                                                                End If
                                                                            End If
            currentAction = SessionTrace("56. If H5NNNCotizacionMiVidaValeParametersInstance.PlanType = 1 Then")
            If H5NNNCotizacionMiVidaValeParametersInstance.PlanType = 1 Then

                currentAction = SessionTrace("57. Show 'InsuredAmountSelected' control")
                resultData.AddControlBehavior("InsuredAmountSelected", "show")

                currentAction = SessionTrace("58. H5NNNCotizacionMiVidaValeParametersInstance.InsuredAmountSelected = 10000...")
                currentAction = SessionTrace("58.1. H5NNNCotizacionMiVidaValeParametersInstance.InsuredAmountSelected = 10000...")

                H5NNNCotizacionMiVidaValeParametersInstance.InsuredAmountSelected = 10000

                currentAction = SessionTrace("59. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation = 10000...")
                currentAction = SessionTrace("59.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation = 10000...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation = 10000

                currentAction = SessionTrace("60. Hide 'Suma asegurada' control")
                resultData.AddControlBehavior("InsuredAmountForCalculation", "hide")

                                                                                Else
                currentAction = SessionTrace("61. Show 'Suma asegurada' control")
                resultData.AddControlBehavior("InsuredAmountForCalculation", "show")

                currentAction = SessionTrace("62. Hide 'InsuredAmountSelected' control")
                resultData.AddControlBehavior("InsuredAmountSelected", "hide")

                                                                                    End If
            currentAction = SessionTrace("63. H5NNNCotizacionMiVidaValeParametersInstance.InRuleErros = False...")
            currentAction = SessionTrace("63.1. H5NNNCotizacionMiVidaValeParametersInstance.InRuleErros = False...")

            H5NNNCotizacionMiVidaValeParametersInstance.InRuleErros = False

            currentAction = SessionTrace("64. H5NNNCotizacionMiVidaValeParametersInstance.FormStatus = 0...")
            currentAction = SessionTrace("64.1. H5NNNCotizacionMiVidaValeParametersInstance.FormStatus = 0...")

            H5NNNCotizacionMiVidaValeParametersInstance.FormStatus = 0

            currentAction = SessionTrace("65. H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrint = 0...")
            currentAction = SessionTrace("65.1. H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrint = 0...")

            H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrint = 0

            currentAction = SessionTrace("66. H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintIndicator = true...")
            currentAction = SessionTrace("66.1. H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintIndicator = true...")

            H5NNNCotizacionMiVidaValeParametersInstance.OnLinePrintIndicator = true

            currentAction = SessionTrace("67. H5NNNCotizacionMiVidaValeParametersInstance.PreviousPayment = false...")
            currentAction = SessionTrace("67.1. H5NNNCotizacionMiVidaValeParametersInstance.PreviousPayment = false...")

            H5NNNCotizacionMiVidaValeParametersInstance.PreviousPayment = false

            currentAction = SessionTrace("68. H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Pr...")
            currentAction = SessionTrace("68.1. H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Pr...")
                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If

            H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
            currentAction = SessionTrace("68.2. H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.CompanyId = 1...")
                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If

            H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.CompanyId = 1
            currentAction = SessionTrace("68.3. H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.Security.Usercode = H5NNNCotizacionMiVidaValeParametersInstance.UsercodeBO...")
                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If
                            If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.Security) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.Security = New InMotionGIT.Common.Contracts.Process.SecurityInformation
                End If

            H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.Security.Usercode = H5NNNCotizacionMiVidaValeParametersInstance.UsercodeBO

            currentAction = SessionTrace("69. H5NNNCotizacionMiVidaValeParametersInstance.VerificarCuestionariosIndicador = true...")
            currentAction = SessionTrace("69.1. H5NNNCotizacionMiVidaValeParametersInstance.VerificarCuestionariosIndicador = true...")

            H5NNNCotizacionMiVidaValeParametersInstance.VerificarCuestionariosIndicador = true

            currentAction = SessionTrace("70. If H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount <> 0 AND H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount Not Is Null Or Not Empty  Then")
            If H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount <> 0 AndAlso Not IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount) Then

                currentAction = SessionTrace("71. zone3Cumulo.Visible = true")
                currentAction = SessionTrace("71.1. zone3Cumulo.Visible = true...")
                resultData.AddControlBehavior("zone3Cumulo", "show")

                                                                                        Else
                currentAction = SessionTrace("72. zone3Cumulo.Visible = false")
                currentAction = SessionTrace("72.1. zone3Cumulo.Visible = false...")
                resultData.AddControlBehavior("zone3Cumulo", "hide")

                                                                                            End If
            currentAction = SessionTrace("73. If H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Beneficiaries Not Is Null Or Not Empty  AND H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Beneficiaries.Count <> 0 Then")
            If Not IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Beneficiaries) AndAlso H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Beneficiaries.Count <> 0 Then

                currentAction = SessionTrace("74. zoneBeneficiariosAsignados.Visible = True")
                currentAction = SessionTrace("74.1. zoneBeneficiariosAsignados.Visible = True...")
                resultData.AddControlBehavior("zoneBeneficiariosAsignados", "show")

                currentAction = SessionTrace("75. BeneficiaryType.Value = 3")
                currentAction = SessionTrace("75.1. BeneficiaryType.Value = 3...")
                resultData.AddControlBehavior("BeneficiaryTypeWrap", "")

                currentAction = SessionTrace("76. H5NNNCotizacionMiVidaValeParametersInstance.BeneficiaryType = 3...")
                currentAction = SessionTrace("76.1. H5NNNCotizacionMiVidaValeParametersInstance.BeneficiaryType = 3...")

                H5NNNCotizacionMiVidaValeParametersInstance.BeneficiaryType = 3

                currentAction = SessionTrace("77. Beneficiary.Visible = true")
                currentAction = SessionTrace("77.1. Beneficiary.Visible = true...")
                resultData.AddControlBehavior("BeneficiaryContainer", "show")

                                                                                                End If
            currentAction = SessionTrace("78. If H5NNNCotizacionMiVidaValeParametersInstance.frompanel = true Then")
            If H5NNNCotizacionMiVidaValeParametersInstance.frompanel = true Then

                currentAction = SessionTrace("79. InfBasica.Visible = true, tab17.Visible = true, tab18.Visible = true...")
                currentAction = SessionTrace("79.1. InfBasica.Visible = true...")
                resultData.AddControlBehavior("InfBasica", "show")
                currentAction = SessionTrace("79.2. tab17.Visible = true...")
                resultData.AddControlBehavior("tab17", "show")
                currentAction = SessionTrace("79.3. tab18.Visible = true...")
                resultData.AddControlBehavior("tab18", "show")
                currentAction = SessionTrace("79.4. tab0.Visible = true...")
                resultData.AddControlBehavior("tab0", "show")
                currentAction = SessionTrace("79.5. zone17.Enabled = false...")
                resultData.AddControlBehavior("zone17", "disabled")
                currentAction = SessionTrace("79.6. zone5.Visible = false...")
                resultData.AddControlBehavior("zone5", "hide")
                currentAction = SessionTrace("79.7. Coverages.Visible = true...")
                resultData.AddControlBehavior("Coverages", "show")
                currentAction = SessionTrace("79.8. zone2.Enabled = false...")
                resultData.AddControlBehavior("zone2", "disabled")
                currentAction = SessionTrace("79.9. zone15.Visible = false...")
                resultData.AddControlBehavior("zone15", "hide")
                currentAction = SessionTrace("79.10. zone4.Enabled = false...")
                resultData.AddControlBehavior("zone4", "disabled")
                currentAction = SessionTrace("79.11. zone7.Visible = false...")
                resultData.AddControlBehavior("zone7", "hide")
                currentAction = SessionTrace("79.12. zoneBeneficiarios.Enabled = false...")
                resultData.AddControlBehavior("zoneBeneficiarios", "disabled")
                currentAction = SessionTrace("79.13. zone11.Visible = false...")
                resultData.AddControlBehavior("zone11", "hide")
                currentAction = SessionTrace("79.14. zone22.Enabled = false...")
                resultData.AddControlBehavior("zone22", "disabled")
                currentAction = SessionTrace("79.15. zone19.Visible = false...")
                resultData.AddControlBehavior("zone19", "hide")
                currentAction = SessionTrace("79.16. zonegeneral.Visible = false...")
                resultData.AddControlBehavior("zonegeneral", "hide")
                currentAction = SessionTrace("79.17. zone4.Visible = true...")
                resultData.AddControlBehavior("zone4", "show")
                currentAction = SessionTrace("79.18. zone20.Visible = false...")
                resultData.AddControlBehavior("zone20", "hide")

                currentAction = SessionTrace("80. H5NNNCotizacionMiVidaValeParametersInstance.RecoveryCaseIndicator = true...")
                currentAction = SessionTrace("80.1. H5NNNCotizacionMiVidaValeParametersInstance.RecoveryCaseIndicator = true...")

                H5NNNCotizacionMiVidaValeParametersInstance.RecoveryCaseIndicator = true

                currentAction = SessionTrace("81. Call Shared Function 'Retrieve Underwriting Case' with parameters (Case ID, Effective Date)")
                Dim _UnderwritingCase_03c324a1fc82481eb4695baafb2241f1 As InMotionGIT.Underwriting.Contracts.UnderwritingCase
                _UnderwritingCase_03c324a1fc82481eb4695baafb2241f1 = InMotionGIT.Underwriting.Proxy.Manager.Retrieve(underwritingCaseID:=H5NNNCotizacionMiVidaValeParametersInstance.uwcaseid, atDate:=Date.Today)
                H5NNNCotizacionMiVidaValeParametersInstance.UnderwritingCase = _UnderwritingCase_03c324a1fc82481eb4695baafb2241f1
                isNullResult = (IsNothing(_UnderwritingCase_03c324a1fc82481eb4695baafb2241f1))

                currentAction = SessionTrace("83. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = H5NNNCotizacionMiVidaValeParametersInstance.UnderwritingCase.RiskInfo...")
                currentAction = SessionTrace("83.1. H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = H5NNNCotizacionMiVidaValeParametersInstance.UnderwritingCase.RiskInfo...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = H5NNNCotizacionMiVidaValeParametersInstance.UnderwritingCase.RiskInformation

currentAction = SessionTrace("85. Call 'Prepara los objetos asociados a cambiar en RiskInformation.' library")
                Dim _RiskInformation_2798cd9a1b3b4df1a331b56cb7d64c94 As InMotionGIT.Policy.Entity.Contracts.RiskInformation 
                _RiskInformation_2798cd9a1b3b4df1a331b56cb7d64c94 = (New InMotionGIT.PolicyManager.Proxy.Manager).AmendmentSetup(risk:=H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation, atDate:=Date.Today, accessToken:=HttpContext.Current.Session("AccessToken"), provider:="CORE") 
 
                isNullResult = (IsNothing(_RiskInformation_2798cd9a1b3b4df1a331b56cb7d64c94)) 
                If Not isNullResult Then
                    H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation = _RiskInformation_2798cd9a1b3b4df1a331b56cb7d64c94
                End If

                currentAction = SessionTrace("86. Call Shared Sub 'Clear Form Errors' without parameters")
                
        H5NNNCotizacionMiVidaValeParametersInstance.Errors.Clear()
	formContext.Errors.Clear()
    

currentAction = SessionTrace("88. Call 'Búsqueda de toda la información de un cliente' library")
                Dim _Client_1cff79ac759549ef99486e8a80990dd8 As InMotionGIT.Client.Entity.Contracts.Client 
                _Client_1cff79ac759549ef99486e8a80990dd8 = (New InMotionGIT.Client.Proxy.Manager).Retrieve(clientId:=H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.ClientID, atDate:=Date.Today, withLookupInformation:=True, childFilter:="All", accessToken:="String.Empty", provider:="CORE", companyID:=1) 
 
                isNullResult = (IsNothing(_Client_1cff79ac759549ef99486e8a80990dd8)) 
                If Not isNullResult Then
                    H5NNNCotizacionMiVidaValeParametersInstance.ClientIncluded = _Client_1cff79ac759549ef99486e8a80990dd8
                End If

                currentAction = SessionTrace("89. InsuredAmountForCalculation.Visible = true, InsuredAmountSelected.Visible = false")
                currentAction = SessionTrace("89.1. InsuredAmountForCalculation.Visible = true...")
                resultData.AddControlBehavior("InsuredAmountForCalculation", "show")
                currentAction = SessionTrace("89.2. InsuredAmountSelected.Visible = false...")
                resultData.AddControlBehavior("InsuredAmountSelected", "hide")

                currentAction = SessionTrace("90. H5NNNCotizacionMiVidaValeParametersInstance.InsuredAmountSelected = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineO...")
                currentAction = SessionTrace("90.1. H5NNNCotizacionMiVidaValeParametersInstance.InsuredAmountSelected = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineO...")

                H5NNNCotizacionMiVidaValeParametersInstance.InsuredAmountSelected = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation
                currentAction = SessionTrace("90.2. H5NNNCotizacionMiVidaValeParametersInstance.InsuredAmount = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineO...")

                H5NNNCotizacionMiVidaValeParametersInstance.InsuredAmount = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation
                currentAction = SessionTrace("90.3. H5NNNCotizacionMiVidaValeParametersInstance.eMail = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryIn...")

                H5NNNCotizacionMiVidaValeParametersInstance.eMail = H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.PrimaryInsured.Client.eMailAddressDefault

                currentAction = SessionTrace("91. H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true...")
                currentAction = SessionTrace("91.1. H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true...")

                H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true

                currentAction = SessionTrace("92. uwcaseid.Visible = true")
                currentAction = SessionTrace("92.1. uwcaseid.Visible = true...")
                resultData.AddControlBehavior("uwcaseid", "show")

                currentAction = SessionTrace("93. If H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Beneficiaries Not Is Null Or Not Empty  AND H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Beneficiaries.Count > 0 Then")
                If Not IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Beneficiaries) AndAlso H5NNNCotizacionMiVidaValeParametersInstance.RiskInformation.Beneficiaries.Count > 0 Then

                    currentAction = SessionTrace("94. H5NNNCotizacionMiVidaValeParametersInstance.BeneficiaryType = 3...")
                    currentAction = SessionTrace("94.1. H5NNNCotizacionMiVidaValeParametersInstance.BeneficiaryType = 3...")

                    H5NNNCotizacionMiVidaValeParametersInstance.BeneficiaryType = 3

                    currentAction = SessionTrace("95. zoneBeneficiarios.Visible = true, button1.Visible = false")
                    currentAction = SessionTrace("95.1. zoneBeneficiarios.Visible = true...")
                    resultData.AddControlBehavior("zoneBeneficiarios", "show")
                    currentAction = SessionTrace("95.2. button1.Visible = false...")
                    resultData.AddControlBehavior("button1", "hide")

                                                                                                            End If
                currentAction = SessionTrace("96. zone17.Enabled = false, zone5.Visible = false, tab1Autenticacion.Visible = false...")
                currentAction = SessionTrace("96.1. zone17.Enabled = false...")
                resultData.AddControlBehavior("zone17", "disabled")
                currentAction = SessionTrace("96.2. zone5.Visible = false...")
                resultData.AddControlBehavior("zone5", "hide")
                currentAction = SessionTrace("96.3. tab1Autenticacion.Visible = false...")
                resultData.AddControlBehavior("tab1Autenticacion", "hide")
                currentAction = SessionTrace("96.4. zone15.Visible = false...")
                resultData.AddControlBehavior("zone15", "hide")
                currentAction = SessionTrace("96.5. zone4.Enabled = false...")
                resultData.AddControlBehavior("zone4", "disabled")
                currentAction = SessionTrace("96.6. zone7.Visible = false...")
                resultData.AddControlBehavior("zone7", "hide")
                currentAction = SessionTrace("96.7. zoneBeneficiarios.Enabled = false...")
                resultData.AddControlBehavior("zoneBeneficiarios", "disabled")
                currentAction = SessionTrace("96.8. zone11.Visible = false...")
                resultData.AddControlBehavior("zone11", "hide")
                currentAction = SessionTrace("96.9. zone22.Enabled = false...")
                resultData.AddControlBehavior("zone22", "disabled")
                currentAction = SessionTrace("96.10. zone19.Visible = false...")
                resultData.AddControlBehavior("zone19", "hide")
                currentAction = SessionTrace("96.11. zonegeneral.Visible = false...")
                resultData.AddControlBehavior("zonegeneral", "hide")
                currentAction = SessionTrace("96.12. zone20.Visible = false...")
                resultData.AddControlBehavior("zone20", "hide")

                currentAction = SessionTrace("97. H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.CompanyId = 1...")
                currentAction = SessionTrace("97.1. H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.CompanyId = 1...")
                                If IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation) Then
                    H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
                End If

                H5NNNCotizacionMiVidaValeParametersInstance.ConsumerInformation.CompanyId = 1

                currentAction = SessionTrace("98. If H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount Not Is Null Or Not Empty  AND H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount <> 0 Then")
                If Not IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount) AndAlso H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount <> 0 Then

                    currentAction = SessionTrace("99. zone3Cumulo.Visible = true")
                    currentAction = SessionTrace("99.1. zone3Cumulo.Visible = true...")
                    resultData.AddControlBehavior("zone3Cumulo", "show")

                                                                                                                Else
                    currentAction = SessionTrace("100. zone3Cumulo.Visible = false")
                    currentAction = SessionTrace("100.1. zone3Cumulo.Visible = false...")
                    resultData.AddControlBehavior("zone3Cumulo", "hide")

                                                                                                                    End If
                                                                                                                End If
            currentAction = SessionTrace("101. H5NNNCotizacionMiVidaValeParametersInstance.TotalBenef = 100...")
            currentAction = SessionTrace("101.1. H5NNNCotizacionMiVidaValeParametersInstance.TotalBenef = 100...")

            H5NNNCotizacionMiVidaValeParametersInstance.TotalBenef = 100


        End Sub
	
        Private Shared Sub Form_Load(ByRef currentAction As String, ByRef H5NNNCotizacionMiVidaValeParametersInstance As H5NNNCotizacionMiVidaValeParameters, ByRef resultData As InMotionGIT.FrontOffice.Support.DataType.ServerActionResult)
            Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
            Dim formContext As New InMotionGIT.Common.Contracts.Context(InMotionGIT.FASI.Support.Handlers.LanguageHandler.LanguageId(), 
                                                                        H5NNNCotizacionMiVidaValeParametersInstance.InternalId) With {.UserId = HttpContext.Current.Session("UserId"), 
                                                                                                                     .UserCode = HttpContext.Current.Session("nUsercode"), 
                                                                                                                     .SecuritySchemeCode = HttpContext.Current.Session("sSche_code"), 
                                                                                                                     .AccessToken = HttpContext.Current.Session("AccessToken")}
            Dim selectDataTableItem As DataTable = Nothing
            Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
            Dim WorkflowInArguments As Dictionary(Of String, Object) = Nothing
            Dim WorkflowOutArguments As IDictionary(Of String, Object) = Nothing
            Dim messageAction As String = String.Empty
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean = False

            currentAction = SessionTrace("Form_Load")

            currentAction = SessionTrace("1. tab13.Visible = true, tab17.Visible = true, tab18.Visible = true...")
            currentAction = SessionTrace("1.1. tab13.Visible = true...")
            resultData.AddControlBehavior("tab13", "show")
            currentAction = SessionTrace("1.2. tab17.Visible = true...")
            resultData.AddControlBehavior("tab17", "show")
            currentAction = SessionTrace("1.3. tab18.Visible = true...")
            resultData.AddControlBehavior("tab18", "show")
            currentAction = SessionTrace("1.4. tab0.Visible = true...")
            resultData.AddControlBehavior("tab0", "show")
            currentAction = SessionTrace("1.5. zone17.Enabled = false...")
            resultData.AddControlBehavior("zone17", "disabled")
            currentAction = SessionTrace("1.6. zone5.Visible = false...")
            resultData.AddControlBehavior("zone5", "hide")
            currentAction = SessionTrace("1.7. Coverages.Visible = true...")
            resultData.AddControlBehavior("Coverages", "show")
            currentAction = SessionTrace("1.8. zone2.Enabled = false...")
            resultData.AddControlBehavior("zone2", "disabled")
            currentAction = SessionTrace("1.9. zone15.Visible = false...")
            resultData.AddControlBehavior("zone15", "hide")
            currentAction = SessionTrace("1.10. zone4.Enabled = false...")
            resultData.AddControlBehavior("zone4", "disabled")
            currentAction = SessionTrace("1.11. zone7.Visible = false...")
            resultData.AddControlBehavior("zone7", "hide")
            currentAction = SessionTrace("1.12. zoneBeneficiarios.Enabled = false...")
            resultData.AddControlBehavior("zoneBeneficiarios", "disabled")
            currentAction = SessionTrace("1.13. zone11.Visible = false...")
            resultData.AddControlBehavior("zone11", "hide")
            currentAction = SessionTrace("1.14. zone6.Enabled = false...")
            resultData.AddControlBehavior("zone6", "disabled")
            currentAction = SessionTrace("1.15. zone22.Enabled = false...")
            resultData.AddControlBehavior("zone22", "disabled")
            currentAction = SessionTrace("1.16. zone19.Visible = false...")
            resultData.AddControlBehavior("zone19", "hide")
            currentAction = SessionTrace("1.17. zonegeneral.Visible = false...")
            resultData.AddControlBehavior("zonegeneral", "hide")
            currentAction = SessionTrace("1.18. zone4.Visible = true...")
            resultData.AddControlBehavior("zone4", "show")
            currentAction = SessionTrace("1.19. zone20.Visible = false...")
            resultData.AddControlBehavior("zone20", "hide")
            currentAction = SessionTrace("1.20. CreditCardType.Enabled = false...")
            resultData.AddControlBehavior("CreditCardTypeWrap", "disabled")
            currentAction = SessionTrace("1.21. zone26.Enabled = false...")
            resultData.AddControlBehavior("zone26", "disabled")
            currentAction = SessionTrace("1.22. zone27.Enabled = false...")
            resultData.AddControlBehavior("zone27", "disabled")

            currentAction = SessionTrace("2. H5NNNCotizacionMiVidaValeParametersInstance.RecoveryCaseIndicator = true...")
            currentAction = SessionTrace("2.1. H5NNNCotizacionMiVidaValeParametersInstance.RecoveryCaseIndicator = true...")

            H5NNNCotizacionMiVidaValeParametersInstance.RecoveryCaseIndicator = true

            currentAction = SessionTrace("8. InsuredAmountForCalculation.Visible = true, InsuredAmountSelected.Visible = false")
            currentAction = SessionTrace("8.1. InsuredAmountForCalculation.Visible = true...")
            resultData.AddControlBehavior("InsuredAmountForCalculation", "show")
            currentAction = SessionTrace("8.2. InsuredAmountSelected.Visible = false...")
            resultData.AddControlBehavior("InsuredAmountSelected", "hide")

            currentAction = SessionTrace("10. H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true...")
            currentAction = SessionTrace("10.1. H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true...")

            H5NNNCotizacionMiVidaValeParametersInstance.ClientExistInDB = true

            currentAction = SessionTrace("11. uwcaseid.Visible = true")
            currentAction = SessionTrace("11.1. uwcaseid.Visible = true...")
            resultData.AddControlBehavior("uwcaseid", "show")

            currentAction = SessionTrace("14. If H5NNNCotizacionMiVidaValeParametersInstance.frompanel = True Then")
            If H5NNNCotizacionMiVidaValeParametersInstance.frompanel = True Then

                currentAction = SessionTrace("15. zone17.Enabled = False, zone5.Visible = false, tab1Autenticacion.Visible = false...")
                currentAction = SessionTrace("15.1. zone17.Enabled = False...")
                resultData.AddControlBehavior("zone17", "disabled")
                currentAction = SessionTrace("15.2. zone5.Visible = false...")
                resultData.AddControlBehavior("zone5", "hide")
                currentAction = SessionTrace("15.3. tab1Autenticacion.Visible = false...")
                resultData.AddControlBehavior("tab1Autenticacion", "hide")
                currentAction = SessionTrace("15.4. zone15.Visible = false...")
                resultData.AddControlBehavior("zone15", "hide")
                currentAction = SessionTrace("15.5. zone4.Enabled = false...")
                resultData.AddControlBehavior("zone4", "disabled")
                currentAction = SessionTrace("15.6. zone7.Visible = false...")
                resultData.AddControlBehavior("zone7", "hide")
                currentAction = SessionTrace("15.7. zoneBeneficiarios.Enabled = false...")
                resultData.AddControlBehavior("zoneBeneficiarios", "disabled")
                currentAction = SessionTrace("15.8. zone11.Visible = false...")
                resultData.AddControlBehavior("zone11", "hide")
                currentAction = SessionTrace("15.9. zone22.Enabled = false...")
                resultData.AddControlBehavior("zone22", "disabled")
                currentAction = SessionTrace("15.10. zone19.Visible = false...")
                resultData.AddControlBehavior("zone19", "hide")
                currentAction = SessionTrace("15.11. zonegeneral.Visible = false...")
                resultData.AddControlBehavior("zonegeneral", "hide")
                currentAction = SessionTrace("15.12. zone20.Visible = false...")
                resultData.AddControlBehavior("zone20", "hide")

                currentAction = SessionTrace("16. zone2.Enabled = false, zone10.Enabled = false")
                currentAction = SessionTrace("16.1. zone2.Enabled = false...")
                resultData.AddControlBehavior("zone2", "disabled")
                currentAction = SessionTrace("16.2. zone10.Enabled = false...")
                resultData.AddControlBehavior("zone10", "disabled")

                currentAction = SessionTrace("18. zoneBeneficiariosAsignados.Visible = true")
                currentAction = SessionTrace("18.1. zoneBeneficiariosAsignados.Visible = true...")
                resultData.AddControlBehavior("zoneBeneficiariosAsignados", "show")

                currentAction = SessionTrace("19. Beneficiary.Visible = true")
                currentAction = SessionTrace("19.1. Beneficiary.Visible = true...")
                resultData.AddControlBehavior("BeneficiaryContainer", "show")

                End If
            currentAction = SessionTrace("21. If H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount <> 0 AND H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount Not Is Null Or Not Empty  Then")
            If H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount <> 0 AndAlso Not IsNothing(H5NNNCotizacionMiVidaValeParametersInstance.AccumulatedAmount) Then

                currentAction = SessionTrace("22. zone3Cumulo.Visible = True")
                currentAction = SessionTrace("22.1. zone3Cumulo.Visible = True...")
                resultData.AddControlBehavior("zone3Cumulo", "show")

                    Else
                currentAction = SessionTrace("23. zone3Cumulo.Visible = False")
                currentAction = SessionTrace("23.1. zone3Cumulo.Visible = False...")
                resultData.AddControlBehavior("zone3Cumulo", "hide")

                        End If
            currentAction = SessionTrace("25. H5NNNCotizacionMiVidaValeParametersInstance.TotalBenef = 0...")
            currentAction = SessionTrace("25.1. H5NNNCotizacionMiVidaValeParametersInstance.TotalBenef = 0...")

            H5NNNCotizacionMiVidaValeParametersInstance.TotalBenef = 0


        End Sub
#End Region
#Region "Utilities"

        Private Shared Sub ParametersToDictionary(formData As H5NNNCotizacionMiVidaValeParameters, ByRef target As Dictionary(Of String, Object))
            If IsNothing(target) Then
                target = New Dictionary(Of String, Object)

                target.Add("RiskInformation", formData.RiskInformation)
                target.Add("uwcaseid", formData.uwcaseid)
                target.Add("uwreqid", formData.uwreqid)
                target.Add("InsuredAmount", formData.InsuredAmount)
                target.Add("InsuredAmountSelected", formData.InsuredAmountSelected)
                target.Add("PlanType", formData.PlanType)
                target.Add("ClientExistInDB", formData.ClientExistInDB)
                target.Add("eMail", formData.eMail)
                target.Add("Currency", formData.Currency)
                target.Add("Age", formData.Age)
                target.Add("QuestionnairesAvailable", formData.QuestionnairesAvailable)
                target.Add("ProducerClientID", formData.ProducerClientID)
                target.Add("BeneficiaryType", formData.BeneficiaryType)
                target.Add("SendMailIndicator", formData.SendMailIndicator)
                target.Add("MailToProducerIndicator", formData.MailToProducerIndicator)
                target.Add("InRuleErros", formData.InRuleErros)
                target.Add("AccumulatedAmount", formData.AccumulatedAmount)
                target.Add("CancelledPoliciesQuantity", formData.CancelledPoliciesQuantity)
                target.Add("OtherPoliciesSameRiskQuantity", formData.OtherPoliciesSameRiskQuantity)
                target.Add("ConsumerInformation", formData.ConsumerInformation)
                target.Add("OnLinePrintIndicator", formData.OnLinePrintIndicator)
                target.Add("OnLinePrintResult", formData.OnLinePrintResult)
                target.Add("PolicyDocument", formData.PolicyDocument)
                target.Add("ErrorsFound", formData.ErrorsFound)
                target.Add("ReportURL", formData.ReportURL)
                target.Add("FormStatus", formData.FormStatus)
                target.Add("OnLinePrint", formData.OnLinePrint)
                target.Add("StatusRun", formData.StatusRun)
                target.Add("StatusCase", formData.StatusCase)
                target.Add("RecoveryCaseIndicator", formData.RecoveryCaseIndicator)
                target.Add("AnswerDiabetes", formData.AnswerDiabetes)
                target.Add("AnswerHeart", formData.AnswerHeart)
                target.Add("AnswerCancer", formData.AnswerCancer)
                target.Add("PaymentMethod", formData.PaymentMethod)
                target.Add("ProductMasterDescription", formData.ProductMasterDescription)
                target.Add("AddressPhysicalAddressDLI", formData.AddressPhysicalAddressDLI)
                target.Add("PreviousPayment", formData.PreviousPayment)
                target.Add("ClienteIndicado", formData.ClienteIndicado)
                target.Add("ServiceResultData", formData.ServiceResultData)
                target.Add("CompleteAddress", formData.CompleteAddress)
                target.Add("AddresseMailDLI", formData.AddresseMailDLI)
                target.Add("AddressDLICollection", formData.AddressDLICollection)
                target.Add("VerificarCuestionariosIndicador", formData.VerificarCuestionariosIndicador)
                target.Add("PlanillaModificacion", formData.PlanillaModificacion)
                target.Add("PlanillaVisualizacion", formData.PlanillaVisualizacion)
                target.Add("ProductDescription", formData.ProductDescription)
                target.Add("PrimaTotalAnual", formData.PrimaTotalAnual)
                target.Add("PrimaRecibo", formData.PrimaRecibo)
                target.Add("MonedaRecibo", formData.MonedaRecibo)
                target.Add("CurrentYear", formData.CurrentYear)
                target.Add("MesTarjeta", formData.MesTarjeta)
                target.Add("AnoTarjeta", formData.AnoTarjeta)
                target.Add("ClientIncluded", formData.ClientIncluded)
                target.Add("AgregarBeneficiario", formData.AgregarBeneficiario)
                target.Add("Beneficiary", formData.Beneficiary)
                target.Add("TypeOfPersonBenef", formData.TypeOfPersonBenef)
                target.Add("ValorAcumulado", formData.ValorAcumulado)
                target.Add("LookUpValue", formData.LookUpValue)
                target.Add("LookUpValueCollection", formData.LookUpValueCollection)
                target.Add("BeneficiariosMail", formData.BeneficiariosMail)
                target.Add("Codigo", formData.Codigo)
                target.Add("Descripcion", formData.Descripcion)
                target.Add("FondosMail", formData.FondosMail)
                target.Add("UsercodeBO", formData.UsercodeBO)
                target.Add("UsercodeFASI", formData.UsercodeFASI)
                target.Add("ClienteInformaExiste", formData.ClienteInformaExiste)
                target.Add("ClienteInformaEsUsuario", formData.ClienteInformaEsUsuario)
                target.Add("UsuarioClaveEntrada", formData.UsuarioClaveEntrada)
                target.Add("UsuarioPassword", formData.UsuarioPassword)
                target.Add("ClientProvisional", formData.ClientProvisional)
                target.Add("QRegistros", formData.QRegistros)
                target.Add("frompanel", formData.frompanel)
                target.Add("ClientInsuredPerson", formData.ClientInsuredPerson)
                target.Add("IsAnonymous", formData.IsAnonymous)
                target.Add("UserInformation", formData.UserInformation)
                target.Add("GenderClient", formData.GenderClient)
                target.Add("UnderwritingCase", formData.UnderwritingCase)
                target.Add("uwcaseid2", formData.uwcaseid2)
                target.Add("Parameter79", formData.Parameter79)
                target.Add("uwcaseid4", formData.uwcaseid4)
                target.Add("TotalBenef", formData.TotalBenef)
                target.Add("isPhoneAvalaible", formData.isPhoneAvalaible)
                target.Add("PolicyToPrint", formData.PolicyToPrint)
                target.Add("SeffectDate", formData.SeffectDate)
                target.Add("MensajeValidacionDireccion", formData.MensajeValidacionDireccion)
            Else
                target("RiskInformation") = formData.RiskInformation
                target("uwcaseid") = formData.uwcaseid
                target("uwreqid") = formData.uwreqid
                target("InsuredAmount") = formData.InsuredAmount
                target("InsuredAmountSelected") = formData.InsuredAmountSelected
                target("PlanType") = formData.PlanType
                target("ClientExistInDB") = formData.ClientExistInDB
                target("eMail") = formData.eMail
                target("Currency") = formData.Currency
                target("Age") = formData.Age
                target("QuestionnairesAvailable") = formData.QuestionnairesAvailable
                target("ProducerClientID") = formData.ProducerClientID
                target("BeneficiaryType") = formData.BeneficiaryType
                target("SendMailIndicator") = formData.SendMailIndicator
                target("MailToProducerIndicator") = formData.MailToProducerIndicator
                target("InRuleErros") = formData.InRuleErros
                target("AccumulatedAmount") = formData.AccumulatedAmount
                target("CancelledPoliciesQuantity") = formData.CancelledPoliciesQuantity
                target("OtherPoliciesSameRiskQuantity") = formData.OtherPoliciesSameRiskQuantity
                target("ConsumerInformation") = formData.ConsumerInformation
                target("OnLinePrintIndicator") = formData.OnLinePrintIndicator
                target("OnLinePrintResult") = formData.OnLinePrintResult
                target("PolicyDocument") = formData.PolicyDocument
                target("ErrorsFound") = formData.ErrorsFound
                target("ReportURL") = formData.ReportURL
                target("FormStatus") = formData.FormStatus
                target("OnLinePrint") = formData.OnLinePrint
                target("StatusRun") = formData.StatusRun
                target("StatusCase") = formData.StatusCase
                target("RecoveryCaseIndicator") = formData.RecoveryCaseIndicator
                target("AnswerDiabetes") = formData.AnswerDiabetes
                target("AnswerHeart") = formData.AnswerHeart
                target("AnswerCancer") = formData.AnswerCancer
                target("PaymentMethod") = formData.PaymentMethod
                target("ProductMasterDescription") = formData.ProductMasterDescription
                target("AddressPhysicalAddressDLI") = formData.AddressPhysicalAddressDLI
                target("PreviousPayment") = formData.PreviousPayment
                target("ClienteIndicado") = formData.ClienteIndicado
                target("ServiceResultData") = formData.ServiceResultData
                target("CompleteAddress") = formData.CompleteAddress
                target("AddresseMailDLI") = formData.AddresseMailDLI
                target("AddressDLICollection") = formData.AddressDLICollection
                target("VerificarCuestionariosIndicador") = formData.VerificarCuestionariosIndicador
                target("PlanillaModificacion") = formData.PlanillaModificacion
                target("PlanillaVisualizacion") = formData.PlanillaVisualizacion
                target("ProductDescription") = formData.ProductDescription
                target("PrimaTotalAnual") = formData.PrimaTotalAnual
                target("PrimaRecibo") = formData.PrimaRecibo
                target("MonedaRecibo") = formData.MonedaRecibo
                target("CurrentYear") = formData.CurrentYear
                target("MesTarjeta") = formData.MesTarjeta
                target("AnoTarjeta") = formData.AnoTarjeta
                target("ClientIncluded") = formData.ClientIncluded
                target("AgregarBeneficiario") = formData.AgregarBeneficiario
                target("Beneficiary") = formData.Beneficiary
                target("TypeOfPersonBenef") = formData.TypeOfPersonBenef
                target("ValorAcumulado") = formData.ValorAcumulado
                target("LookUpValue") = formData.LookUpValue
                target("LookUpValueCollection") = formData.LookUpValueCollection
                target("BeneficiariosMail") = formData.BeneficiariosMail
                target("Codigo") = formData.Codigo
                target("Descripcion") = formData.Descripcion
                target("FondosMail") = formData.FondosMail
                target("UsercodeBO") = formData.UsercodeBO
                target("UsercodeFASI") = formData.UsercodeFASI
                target("ClienteInformaExiste") = formData.ClienteInformaExiste
                target("ClienteInformaEsUsuario") = formData.ClienteInformaEsUsuario
                target("UsuarioClaveEntrada") = formData.UsuarioClaveEntrada
                target("UsuarioPassword") = formData.UsuarioPassword
                target("ClientProvisional") = formData.ClientProvisional
                target("QRegistros") = formData.QRegistros
                target("frompanel") = formData.frompanel
                target("ClientInsuredPerson") = formData.ClientInsuredPerson
                target("IsAnonymous") = formData.IsAnonymous
                target("UserInformation") = formData.UserInformation
                target("GenderClient") = formData.GenderClient
                target("UnderwritingCase") = formData.UnderwritingCase
                target("uwcaseid2") = formData.uwcaseid2
                target("Parameter79") = formData.Parameter79
                target("uwcaseid4") = formData.uwcaseid4
                target("TotalBenef") = formData.TotalBenef
                target("isPhoneAvalaible") = formData.isPhoneAvalaible
                target("PolicyToPrint") = formData.PolicyToPrint
                target("SeffectDate") = formData.SeffectDate
                target("MensajeValidacionDireccion") = formData.MensajeValidacionDireccion
            End If
        End Sub

        Private Shared Sub GetTransferParameters(parametersData As H5NNNCotizacionMiVidaValeParameters, fromid As String)
            Dim fromDocumentCache As Object = Nothing

            If Not String.IsNullOrEmpty(fromid) Then
                fromDocumentCache = HttpContext.Current.Session(fromid)
                HttpContext.Current.Session.Remove(fromid)

            Else
                fromDocumentCache = HttpContext.Current.Session(HttpContext.Current.Session("fromid"))
                HttpContext.Current.Session.Remove(HttpContext.Current.Session("fromid"))
                HttpContext.Current.Session.Remove("fromid")
            End If

            If Not IsNothing(fromDocumentCache) Then
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("RiskInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("uwcaseid", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("uwreqid", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("InsuredAmount", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("InsuredAmountSelected", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PlanType", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClientExistInDB", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("eMail", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Currency", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Age", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("QuestionnairesAvailable", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProducerClientID", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("BeneficiaryType", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("SendMailIndicator", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("MailToProducerIndicator", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("InRuleErros", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AccumulatedAmount", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CancelledPoliciesQuantity", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OtherPoliciesSameRiskQuantity", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ConsumerInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OnLinePrintIndicator", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OnLinePrintResult", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PolicyDocument", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ErrorsFound", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ReportURL", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("FormStatus", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OnLinePrint", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("StatusRun", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("StatusCase", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("RecoveryCaseIndicator", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AnswerDiabetes", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AnswerHeart", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AnswerCancer", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PaymentMethod", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProductMasterDescription", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AddressPhysicalAddressDLI", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PreviousPayment", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClienteIndicado", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ServiceResultData", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CompleteAddress", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AddresseMailDLI", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AddressDLICollection", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("VerificarCuestionariosIndicador", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PlanillaModificacion", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PlanillaVisualizacion", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProductDescription", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PrimaTotalAnual", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PrimaRecibo", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("MonedaRecibo", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CurrentYear", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("MesTarjeta", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AnoTarjeta", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClientIncluded", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AgregarBeneficiario", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Beneficiary", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("TypeOfPersonBenef", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ValorAcumulado", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("LookUpValue", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("LookUpValueCollection", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("BeneficiariosMail", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Codigo", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Descripcion", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("FondosMail", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UsercodeBO", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UsercodeFASI", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClienteInformaExiste", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClienteInformaEsUsuario", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UsuarioClaveEntrada", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UsuarioPassword", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClientProvisional", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("QRegistros", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("frompanel", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClientInsuredPerson", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("IsAnonymous", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UserInformation", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("GenderClient", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UnderwritingCase", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("uwcaseid2", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Parameter79", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("uwcaseid4", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("TotalBenef", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("isPhoneAvalaible", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PolicyToPrint", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("SeffectDate", fromDocumentCache, parametersData)
                InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("MensajeValidacionDireccion", fromDocumentCache, parametersData)
            End If
        End Sub

        Private Shared Function SessionTrace(message As String) As String

            If Not IsNothing(HttpContext.Current.Session("Form.Track")) AndAlso HttpContext.Current.Session("Form.Track").ToString.ToLower = "true" Then
                Dim tracelog As String = HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath")))

                tracelog += String.Format(CultureInfo.InvariantCulture, "{0} {1}<br>{2}", Now.ToString("hh:mm:ss.fff"), message, vbCrLf)
                HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath"))) = tracelog
            End If

            Return message
        End Function

#End Region


#Region "Storage Database Methods"

      Private Shared Sub StoreFormInformation(formData As H5NNNCotizacionMiVidaValeParameters)
            If Not IsNothing(formData) Then
                Dim foundData As Boolean

                If formData.InternalId.IsEmpty Then
                    formData.InternalId = Guid.NewGuid.ToString
                Else
                    With New DataManagerFactory("SELECT COUNT(FormId) FROM FrontOffice.DocumentCache WHERE FormId = @:FormId",
                                 "FrontOffice.DocumentCache", "FrontOfficeConnectionString")
                        .AddParameter("FormId", DbType.AnsiStringFixedLength, 36, False, formData.InternalId)
                        foundData = .QueryExecuteScalarToInteger > 0
                    End With
                End If

                If foundData Then
                    UpdateStorageData(formData)
                Else
                    InsertStorageData(formData)
                End If

                If Not IsNothing(HttpContext.Current.Session("Form.Track")) AndAlso
                    HttpContext.Current.Session("Form.Track").ToString.ToLower = "true" Then
                    HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.H5NNNCotizacionMiVidaVale", formData.InternalId)) = formData
                End If

                If Not IsNothing(HttpContext.Current.Session("Form.Track.Parameters")) AndAlso
                    HttpContext.Current.Session("Form.Track.Parameters").ToString.ToLower = "true" Then

                    If Not IsNothing(HttpContext.Current.Session("Form.Track")) AndAlso HttpContext.Current.Session("Form.Track").ToString.ToLower = "true" Then
                        InMotionGIT.Common.Helpers.FileHandler.SaveContent(String.Format(CultureInfo.InvariantCulture, 
                                                                                         "{0}\{1}.H5NNNCotizacionMiVidaVale.txt", ConfigurationManager.AppSettings("Path.Logs"), formData.InternalId), 
                                                                                         HttpContext.Current.Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", 
                                                                                                                                   IO.Path.GetFileNameWithoutExtension("Page.AppRelativeVirtualPath"))))
                    End If

                    InMotionGIT.Common.Helpers.Serialize.SerializeToFile(Of H5NNNCotizacionMiVidaValeParameters)(formData, String.Format(CultureInfo.InvariantCulture, "{0}\{1}.H5NNNCotizacionMiVidaVale.xml", 
                                                                                                                        ConfigurationManager.AppSettings("Path.Logs"), formData.InternalId), True)
                End If
            End If
        End Sub

        Private Shared Function RetrieveFormInformationFromDatabase(instanceFormId As String) As H5NNNCotizacionMiVidaValeParameters
            Dim result As H5NNNCotizacionMiVidaValeParameters = Nothing
            Dim records As DataTable = Nothing

            With New DataManagerFactory("SELECT Content FROM FrontOffice.DocumentCache WHERE FormId = @:FormId",
                                        "FrontOffice.DocumentCache", "FrontOfficeConnectionString")

            .AddParameter("FormId", DbType.AnsiStringFixedLength, 36, False, instanceFormId)
                records = .QueryExecuteToTable(True)
            End With

            If records.Rows.Count > 0 Then
                result = Serialize.Deserialize(Of H5NNNCotizacionMiVidaValeParameters)(records.FirstRow.Item("Content"))
            End If

            Return result
        End Function

        Private Shared Sub InsertStorageData(formData As H5NNNCotizacionMiVidaValeParameters)
            Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
	    
            With New DataManagerFactory("INSERT INTO FrontOffice.DocumentCache (FormId, ModelId, UserId, Page, Content, CreationDate, UpdateDate) VALUES(@:FormId, @:ModelId, @:UserId, @:Page, @:Content, @:CreationDate, @:UpdateDate)",
                                        "FrontOffice.DocumentCache", "FrontOfficeConnectionString")

                .AddParameter("FormId", DbType.AnsiStringFixedLength, 36, False, formData.InternalId)
                .AddParameter("ModelId", DbType.AnsiStringFixedLength, 36, False, "21c862c2-b99b-4ae5-8da7-dd1952df998f")
                .AddParameter("UserId", DbType.AnsiString, 256, False, UserInfo.UserId)
            .AddParameter("Page", DbType.AnsiString, 255, False, HttpContext.Current.Request.UrlReferrer.AbsolutePath)
            .AddParameter("Content", DbType.Xml, 1, False, Serialize.Serialize(Of H5NNNCotizacionMiVidaValeParameters)(formData))
            .AddParameter("CreationDate", DbType.DateTime, 20, False, Now)
            .AddParameter("UpdateDate", DbType.DateTime, 20, False, Now)

                .CommandExecute()
            End With
        End Sub

        Private Shared Sub UpdateStorageData(formData As H5NNNCotizacionMiVidaValeParameters)
            Dim UserInfo As New InMotionGIT.Membership.Providers.MemberContext
	    
            With New DataManagerFactory("UPDATE FrontOffice.DocumentCache SET ModelId = @:ModelId, UserId = @:UserId, Page = @:Page, Content = @:Content, UpdateDate = @:UpdateDate WHERE FormId = @:FormId",
                                        "FrontOffice.DocumentCache", "FrontOfficeConnectionString")

                .AddParameter("ModelId", DbType.AnsiStringFixedLength, 36, False, "21c862c2-b99b-4ae5-8da7-dd1952df998f")
                .AddParameter("UserId", DbType.AnsiString, 256, False, UserInfo.UserId)
            .AddParameter("Page", DbType.AnsiString, 255, False, HttpContext.Current.Request.UrlReferrer.AbsolutePath)
            .AddParameter("Content", DbType.Xml, 1, False, Serialize.Serialize(Of H5NNNCotizacionMiVidaValeParameters)(formData))
            .AddParameter("UpdateDate", DbType.DateTime, 20, False, Now)
            .AddParameter("FormId", DbType.AnsiStringFixedLength, 36, False, formData.InternalId)

                .CommandExecute()
            End With
        End Sub

#End Region


#Region "Contracts Mappers"

        Private Shared Function EntryDataToClass(parametersData As H5NNNCotizacionMiVidaValeParameters, formData As EntryData) As H5NNNCotizacionMiVidaValeParameters
            If IsNothing(parametersData) Then
                parametersData = New H5NNNCotizacionMiVidaValeParameters
            End If

            If IsNothing(parametersData.RiskInformation) Then
                parametersData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
            End If
            If IsNothing(parametersData.RiskInformation.Beneficiaries) Then
                parametersData.RiskInformation.Beneficiaries = New InMotionGIT.Policy.Entity.Contracts.BeneficiaryCollection
            End If
            If IsNothing(parametersData.ClientIncluded) Then
                parametersData.ClientIncluded = New InMotionGIT.Client.Entity.Contracts.Client
            End If
            If IsNothing(parametersData.RiskInformation.LifeLineOfBusiness) Then
                parametersData.RiskInformation.LifeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness
            End If
            If IsNothing(parametersData.RiskInformation.Policy) Then
                parametersData.RiskInformation.Policy = New InMotionGIT.Policy.Entity.Contracts.Policy
            End If
            If IsNothing(parametersData.RiskInformation.AmendmentInformation) Then
                parametersData.RiskInformation.AmendmentInformation = New InMotionGIT.Policy.Entity.Contracts.AmendmentInformation
            End If
            If IsNothing(parametersData.RiskInformation.AmendmentInformation.Coverages) Then
                parametersData.RiskInformation.AmendmentInformation.Coverages = New InMotionGIT.Policy.Entity.Contracts.CoverageForAmendmentCollection
            End If
            If IsNothing(parametersData.ClientInsuredPerson) Then
                parametersData.ClientInsuredPerson = New InMotionGIT.Client.Entity.Contracts.Client
            End If
            If IsNothing(parametersData.RiskInformation.PrimaryInsured) Then
                parametersData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
            End If
            If IsNothing(parametersData.RiskInformation.PrimaryInsured.Client) Then
                parametersData.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
            End If
            If IsNothing(parametersData.QuestionnairesAvailable) Then
                parametersData.QuestionnairesAvailable = New InMotionGIT.Questionnaires.QuestionnairesAvailable
            End If
            If IsNothing(parametersData.Beneficiary) Then
                parametersData.Beneficiary = New InMotionGIT.Policy.Entity.Contracts.Beneficiary
            End If
            If IsNothing(parametersData.Beneficiary.Client) Then
                parametersData.Beneficiary.Client = New InMotionGIT.Client.Entity.Contracts.Client
            End If
            If IsNothing(parametersData.RiskInformation.AutomaticPaymentPolicy) Then
                parametersData.RiskInformation.AutomaticPaymentPolicy = New InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy
            End If

            With parametersData
                .InternalId = formData.InstanceFormId
                .RiskInformation.EffectiveDate = formData.RiskInformationEffectiveDate
                .uwcaseid = formData.uwcaseid
                .ClientIncluded.Gender = formData.ClientIncludedGender
                .ClientIncluded.SmokerIndicator = formData.ClientIncludedSmokerIndicator
                .ClientIncluded.BirthDate = formData.ClientIncludedBirthDate
                .RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation = formData.RiskInformationLifeLineOfBusinessInsuredAmountForCalculation
                .Currency = formData.Currency
                .InsuredAmountSelected = formData.InsuredAmountSelected
                .RiskInformation.Policy.PaymentFrequency = formData.RiskInformationPolicyPaymentFrequency
                .RiskInformation.PaymentMethod = formData.RiskInformationPaymentMethod
                 If formData.CoverageForAmendment_CoverageForAmendment.IsNotEmpty Then
                    Dim temporalCoverages As New InMotionGIT.Policy.Entity.Contracts.CoverageForAmendmentCollection
                    Dim currentItem As InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment
		    For Each filterItem As InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment In parametersData.RiskInformation.AmendmentInformation.Coverages
                        If Not ((filterItem.Selected = true)) then
                           temporalCoverages.Add(filterItem)
                        End if
                    Next
	            For Each itemData As CoverageForAmendment_CoverageForAmendmentItem In formData.CoverageForAmendment_CoverageForAmendment
                        currentItem = (From _x In parametersData.RiskInformation.AmendmentInformation.Coverages Where _x.Consecutive = itemData.Consecutive Select _x).FirstOrDefault()
                     
	                If currentItem.IsEmpty Then
                            currentItem = New InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment
                  
                            With currentItem

                                .DescriptionOfCoverage = itemData.DescriptionOfCoverage
                                .InsuredAmount = itemData.InsuredAmount
                                .AnnualPremium = itemData.AnnualPremium
                                .Consecutive = itemData.Consecutive
                                .Selected = itemData.Selected
                            End With                      
                                              
	                Else
                            With currentItem

                                .DescriptionOfCoverage = itemData.DescriptionOfCoverage
                                .InsuredAmount = itemData.InsuredAmount
                                .AnnualPremium = itemData.AnnualPremium
                                .Consecutive = itemData.Consecutive
                                .Selected = itemData.Selected
                            End With
                        End If
                        
                        temporalCoverages.Add(currentItem)
                    Next
                    
                    parametersData.RiskInformation.AmendmentInformation.Coverages = temporalCoverages
                 End If
                .ClienteInformaEsUsuario = formData.ClienteInformaEsUsuario
                .ClienteInformaExiste = formData.ClienteInformaExiste
                .UsuarioClaveEntrada = formData.UsuarioClaveEntrada
                .ClientInsuredPerson.ClientID = formData.ClientInsuredPersonClientID
                .ClientInsuredPerson.FirstName = formData.ClientInsuredPersonFirstName
                .ClientInsuredPerson.LastName = formData.ClientInsuredPersonLastName
                .ClientInsuredPerson.LastName2 = formData.ClientInsuredPersonLastName2
                .RiskInformation.PrimaryInsured.Client.ClientID = formData.RiskInformationPrimaryInsuredClientClientID
                .RiskInformation.PrimaryInsured.Client.Height = formData.RiskInformationPrimaryInsuredClientHeight
                .RiskInformation.PrimaryInsured.Client.Weight = formData.RiskInformationPrimaryInsuredClientWeight
                .RiskInformation.PrimaryInsured.Client.FirstName = formData.RiskInformationPrimaryInsuredClientFirstName
                .RiskInformation.PrimaryInsured.Client.LastName = formData.RiskInformationPrimaryInsuredClientLastName
                .RiskInformation.PrimaryInsured.Client.LastName2 = formData.RiskInformationPrimaryInsuredClientLastName2
                .RiskInformation.PrimaryInsured.Client.BusinessAddress = formData.BusinessAddress
                .QuestionnairesAvailable.Diabetes = formData.QuestionnairesAvailableDiabetes
                .QuestionnairesAvailable.Heart = formData.QuestionnairesAvailableHeart
                .QuestionnairesAvailable.Cancer = formData.QuestionnairesAvailableCancer
                .BeneficiaryType = formData.BeneficiaryType
                 If formData.Beneficiary_Beneficiary.IsNotEmpty Then
                    Dim temporalBeneficiaries As New InMotionGIT.Policy.Entity.Contracts.BeneficiaryCollection
                    Dim currentItem As InMotionGIT.Policy.Entity.Contracts.Beneficiary

	            For Each itemData As Beneficiary_BeneficiaryItem In formData.Beneficiary_Beneficiary
                        currentItem = (From _x In parametersData.RiskInformation.Beneficiaries Where _x.ClientID = itemData.ClientID Select _x).FirstOrDefault()
                     
	                If currentItem.IsEmpty Then
                            currentItem = New InMotionGIT.Policy.Entity.Contracts.Beneficiary
                  
                            With currentItem
                                .Client = New InMotionGIT.Client.Entity.Contracts.Client

                                .ClientID = itemData.ClientID
                                .Client.CompleteClientName = itemData.ClientCompleteClientName
                                .Relationship = itemData.Relationship
                                .PercentageShare = itemData.PercentageShare
                            End With                      
                                              
	                Else
                            With currentItem
                                If IsNothing(.Client) Then
                                    .Client = New InMotionGIT.Client.Entity.Contracts.Client
                                End If

                                .ClientID = itemData.ClientID
                                .Client.CompleteClientName = itemData.ClientCompleteClientName
                                .Relationship = itemData.Relationship
                                .PercentageShare = itemData.PercentageShare
                            End With
                        End If
                        
                        temporalBeneficiaries.Add(currentItem)
                    Next
                    
                    parametersData.RiskInformation.Beneficiaries = temporalBeneficiaries
                 End If
                .Beneficiary.Relationship = formData.BeneficiaryRelationship
                .Beneficiary.PercentageShare = formData.BeneficiaryPercentageShare
                .TypeOfPersonBenef = formData.TypeOfPersonBenef
                .Beneficiary.ClientID = formData.BeneficiaryClientID
                .Beneficiary.Client.FirstName = formData.BeneficiaryClientFirstName
                .Beneficiary.Client.LastName = formData.BeneficiaryClientLastName
                .Beneficiary.Client.LastName2 = formData.BeneficiaryClientLastName2
                .Beneficiary.Client.LegalName = formData.BeneficiaryClientLegalName
                .RiskInformation.AutomaticPaymentPolicy.CreditCardType = formData.RiskInformationAutomaticPaymentPolicyCreditCardType
                .RiskInformation.AutomaticPaymentPolicy.BankCode = formData.RiskInformationAutomaticPaymentPolicyBankCode
                .RiskInformation.AutomaticPaymentPolicy.CreditCardNumber = formData.RiskInformationAutomaticPaymentPolicyCreditCardNumber
                .MesTarjeta = formData.MesTarjeta
                .AnoTarjeta = formData.AnoTarjeta
                .RiskInformation.AutomaticPaymentPolicy.AuthorizationNumber = formData.RiskInformationAutomaticPaymentPolicyAuthorizationNumber
                .eMail = formData.eMail
                .OnLinePrintIndicator = formData.OnLinePrintIndicator
                .RiskInformation.LineOfBusiness = formData.RiskInformationLineOfBusiness
                .RiskInformation.ProductCode = formData.RiskInformationProductCode
            End With

            Return parametersData
        End Function

        Private Shared Function ClassToEntryData(formData As EntryData, parametersData As H5NNNCotizacionMiVidaValeParameters) As EntryData
            formData = New EntryData

            With formData
                .InstanceFormId = parametersData.InternalId
                .ProductMasterDescription = parametersData.ProductMasterDescription
                If Not IsNothing(parametersData.RiskInformation) Then
                    .RiskInformationEffectiveDate = parametersData.RiskInformation.EffectiveDate
                End If
                .uwcaseid = parametersData.uwcaseid
                If Not IsNothing(parametersData.ClientIncluded) Then
                    .ClientIncludedGender = parametersData.ClientIncluded.Gender
                End If
                If Not IsNothing(parametersData.ClientIncluded) Then
                    .ClientIncludedSmokerIndicator = parametersData.ClientIncluded.SmokerIndicator
                End If
                If Not IsNothing(parametersData.ClientIncluded) Then
                    .ClientIncludedBirthDate = parametersData.ClientIncluded.BirthDate
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.LifeLineOfBusiness) Then
                    .RiskInformationLifeLineOfBusinessInsuredAmountForCalculation = parametersData.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation
                End If
                .Currency = parametersData.Currency
                .InsuredAmountSelected = parametersData.InsuredAmountSelected
                .AccumulatedAmount = parametersData.AccumulatedAmount
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.Policy) Then
                    .RiskInformationPolicyPaymentFrequency = parametersData.RiskInformation.Policy.PaymentFrequency
                End If
                If Not IsNothing(parametersData.RiskInformation) Then
                    .RiskInformationPaymentMethod = parametersData.RiskInformation.PaymentMethod
                End If
                .CoverageForAmendment_CoverageForAmendment = New List(Of CoverageForAmendment_CoverageForAmendmentItem)

                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.AmendmentInformation) AndAlso Not IsNothing(parametersData.RiskInformation.AmendmentInformation.Coverages) Then
                    Dim newItem As CoverageForAmendment_CoverageForAmendmentItem
                    
                    For Each itemData As InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment In parametersData.RiskInformation.AmendmentInformation.Coverages
                        newItem = New CoverageForAmendment_CoverageForAmendmentItem
                        
                        With newItem
                            .DescriptionOfCoverage = itemData.DescriptionOfCoverage
                            .InsuredAmount = itemData.InsuredAmount
                            .AnnualPremium = itemData.AnnualPremium
                            .Consecutive = itemData.Consecutive
                            .Selected = itemData.Selected                        
                        End With

                        .CoverageForAmendment_CoverageForAmendment.Add(newItem)
                    Next

                    If .CoverageForAmendment_CoverageForAmendment.Count <> 0 Then

                    End If
                End If


                .ClienteInformaEsUsuario = parametersData.ClienteInformaEsUsuario
                .ClienteInformaExiste = parametersData.ClienteInformaExiste
                .UsuarioClaveEntrada = parametersData.UsuarioClaveEntrada
                If Not IsNothing(parametersData.ClientInsuredPerson) Then
                    .ClientInsuredPersonClientID = parametersData.ClientInsuredPerson.ClientID
                End If
                If Not IsNothing(parametersData.ClientInsuredPerson) Then
                    .ClientInsuredPersonFirstName = parametersData.ClientInsuredPerson.FirstName
                End If
                If Not IsNothing(parametersData.ClientInsuredPerson) Then
                    .ClientInsuredPersonLastName = parametersData.ClientInsuredPerson.LastName
                End If
                If Not IsNothing(parametersData.ClientInsuredPerson) Then
                    .ClientInsuredPersonLastName2 = parametersData.ClientInsuredPerson.LastName2
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured.Client) Then
                    .RiskInformationPrimaryInsuredClientClientID = parametersData.RiskInformation.PrimaryInsured.Client.ClientID
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured.Client) Then
                    .RiskInformationPrimaryInsuredClientHeight = parametersData.RiskInformation.PrimaryInsured.Client.Height
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured.Client) Then
                    .RiskInformationPrimaryInsuredClientWeight = parametersData.RiskInformation.PrimaryInsured.Client.Weight
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured.Client) Then
                    .RiskInformationPrimaryInsuredClientFirstName = parametersData.RiskInformation.PrimaryInsured.Client.FirstName
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured.Client) Then
                    .RiskInformationPrimaryInsuredClientLastName = parametersData.RiskInformation.PrimaryInsured.Client.LastName
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured.Client) Then
                    .RiskInformationPrimaryInsuredClientLastName2 = parametersData.RiskInformation.PrimaryInsured.Client.LastName2
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured.Client) AndAlso Not IsNothing(parametersData.RiskInformation.PrimaryInsured.Client.BusinessAddress) Then
                    .BusinessAddress = parametersData.RiskInformation.PrimaryInsured.Client.BusinessAddress
                End If
                If Not IsNothing(parametersData.QuestionnairesAvailable) Then
                    .QuestionnairesAvailableDiabetes = parametersData.QuestionnairesAvailable.Diabetes
                End If
                If Not IsNothing(parametersData.QuestionnairesAvailable) Then
                    .QuestionnairesAvailableHeart = parametersData.QuestionnairesAvailable.Heart
                End If
                If Not IsNothing(parametersData.QuestionnairesAvailable) Then
                    .QuestionnairesAvailableCancer = parametersData.QuestionnairesAvailable.Cancer
                End If
                .BeneficiaryType = parametersData.BeneficiaryType
                .Beneficiary_Beneficiary = New List(Of Beneficiary_BeneficiaryItem)

                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.Beneficiaries) Then
                    Dim newItem As Beneficiary_BeneficiaryItem
                    
                    For Each itemData As InMotionGIT.Policy.Entity.Contracts.Beneficiary In parametersData.RiskInformation.Beneficiaries
                        newItem = New Beneficiary_BeneficiaryItem
                        
                        With newItem
                            .ClientID = itemData.ClientID
                            If Not IsNothing(itemData.Client) Then
                                .ClientCompleteClientName = itemData.Client.CompleteClientName
                            End If
                            .Relationship = itemData.Relationship
                            .PercentageShare = itemData.PercentageShare                        
                        End With

                        .Beneficiary_Beneficiary.Add(newItem)
                    Next

                    If .Beneficiary_Beneficiary.Count <> 0 Then

                    End If
                End If


                If Not IsNothing(parametersData.Beneficiary) Then
                    .BeneficiaryRelationship = parametersData.Beneficiary.Relationship
                End If
                If Not IsNothing(parametersData.Beneficiary) Then
                    .BeneficiaryPercentageShare = parametersData.Beneficiary.PercentageShare
                End If
                .TypeOfPersonBenef = parametersData.TypeOfPersonBenef
                If Not IsNothing(parametersData.Beneficiary) Then
                    .BeneficiaryClientID = parametersData.Beneficiary.ClientID
                End If
                If Not IsNothing(parametersData.Beneficiary) AndAlso Not IsNothing(parametersData.Beneficiary.Client) Then
                    .BeneficiaryClientFirstName = parametersData.Beneficiary.Client.FirstName
                End If
                If Not IsNothing(parametersData.Beneficiary) AndAlso Not IsNothing(parametersData.Beneficiary.Client) Then
                    .BeneficiaryClientLastName = parametersData.Beneficiary.Client.LastName
                End If
                If Not IsNothing(parametersData.Beneficiary) AndAlso Not IsNothing(parametersData.Beneficiary.Client) Then
                    .BeneficiaryClientLastName2 = parametersData.Beneficiary.Client.LastName2
                End If
                If Not IsNothing(parametersData.Beneficiary) AndAlso Not IsNothing(parametersData.Beneficiary.Client) Then
                    .BeneficiaryClientLegalName = parametersData.Beneficiary.Client.LegalName
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.AutomaticPaymentPolicy) Then
                    .RiskInformationAutomaticPaymentPolicyCreditCardType = parametersData.RiskInformation.AutomaticPaymentPolicy.CreditCardType
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.AutomaticPaymentPolicy) Then
                    .RiskInformationAutomaticPaymentPolicyBankCode = parametersData.RiskInformation.AutomaticPaymentPolicy.BankCode
                End If
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.AutomaticPaymentPolicy) Then
                    .RiskInformationAutomaticPaymentPolicyCreditCardNumber = parametersData.RiskInformation.AutomaticPaymentPolicy.CreditCardNumber
                End If
                .MesTarjeta = parametersData.MesTarjeta
                .AnoTarjeta = parametersData.AnoTarjeta
                If Not IsNothing(parametersData.RiskInformation) AndAlso Not IsNothing(parametersData.RiskInformation.AutomaticPaymentPolicy) Then
                    .RiskInformationAutomaticPaymentPolicyAuthorizationNumber = parametersData.RiskInformation.AutomaticPaymentPolicy.AuthorizationNumber
                End If
                .eMail = parametersData.eMail
                .OnLinePrintIndicator = parametersData.OnLinePrintIndicator
                If Not IsNothing(parametersData.RiskInformation) Then
                    .RiskInformationLineOfBusiness = parametersData.RiskInformation.LineOfBusiness
                End If
                If Not IsNothing(parametersData.RiskInformation) Then
                    .RiskInformationProductCode = parametersData.RiskInformation.ProductCode
                End If
            End With

            Return formData
        End Function

#End Region

#Region "Common Utilities"

        Private Shared Sub SetDefaultValuesFromQueryString(formData As H5NNNCotizacionMiVidaValeParameters)
            If HttpContext.Current.Request.QueryString("uwcaseid").IsNotEmpty Then
                formData.uwcaseid = HttpContext.Current.Request.QueryString("uwcaseid")
            End If
            If HttpContext.Current.Request.QueryString("uwreqid").IsNotEmpty Then
                formData.uwreqid = HttpContext.Current.Request.QueryString("uwreqid")
            End If
            If HttpContext.Current.Request.QueryString("InsuredAmount").IsNotEmpty Then
                formData.InsuredAmount = HttpContext.Current.Request.QueryString("InsuredAmount")
            End If
            If HttpContext.Current.Request.QueryString("InsuredAmountSelected").IsNotEmpty Then
                formData.InsuredAmountSelected = HttpContext.Current.Request.QueryString("InsuredAmountSelected")
            End If
            If HttpContext.Current.Request.QueryString("PlanType").IsNotEmpty Then
                formData.PlanType = HttpContext.Current.Request.QueryString("PlanType")
            End If
            If HttpContext.Current.Request.QueryString("ClientExistInDB").IsNotEmpty Then
                formData.ClientExistInDB = HttpContext.Current.Request.QueryString("ClientExistInDB")
            End If
            If HttpContext.Current.Request.QueryString("eMail").IsNotEmpty Then
                formData.eMail = HttpContext.Current.Request.QueryString("eMail")
            End If
            If HttpContext.Current.Request.QueryString("Currency").IsNotEmpty Then
                formData.Currency = HttpContext.Current.Request.QueryString("Currency")
            End If
            If HttpContext.Current.Request.QueryString("Age").IsNotEmpty Then
                formData.Age = HttpContext.Current.Request.QueryString("Age")
            End If
            If HttpContext.Current.Request.QueryString("ProducerClientID").IsNotEmpty Then
                formData.ProducerClientID = HttpContext.Current.Request.QueryString("ProducerClientID")
            End If
            If HttpContext.Current.Request.QueryString("BeneficiaryType").IsNotEmpty Then
                formData.BeneficiaryType = HttpContext.Current.Request.QueryString("BeneficiaryType")
            End If
            If HttpContext.Current.Request.QueryString("SendMailIndicator").IsNotEmpty Then
                formData.SendMailIndicator = HttpContext.Current.Request.QueryString("SendMailIndicator")
            End If
            If HttpContext.Current.Request.QueryString("MailToProducerIndicator").IsNotEmpty Then
                formData.MailToProducerIndicator = HttpContext.Current.Request.QueryString("MailToProducerIndicator")
            End If
            If HttpContext.Current.Request.QueryString("InRuleErros").IsNotEmpty Then
                formData.InRuleErros = HttpContext.Current.Request.QueryString("InRuleErros")
            End If
            If HttpContext.Current.Request.QueryString("AccumulatedAmount").IsNotEmpty Then
                formData.AccumulatedAmount = HttpContext.Current.Request.QueryString("AccumulatedAmount")
            End If
            If HttpContext.Current.Request.QueryString("CancelledPoliciesQuantity").IsNotEmpty Then
                formData.CancelledPoliciesQuantity = HttpContext.Current.Request.QueryString("CancelledPoliciesQuantity")
            End If
            If HttpContext.Current.Request.QueryString("OtherPoliciesSameRiskQuantity").IsNotEmpty Then
                formData.OtherPoliciesSameRiskQuantity = HttpContext.Current.Request.QueryString("OtherPoliciesSameRiskQuantity")
            End If
            If HttpContext.Current.Request.QueryString("OnLinePrintIndicator").IsNotEmpty Then
                formData.OnLinePrintIndicator = HttpContext.Current.Request.QueryString("OnLinePrintIndicator")
            End If
            If HttpContext.Current.Request.QueryString("OnLinePrintResult").IsNotEmpty Then
                formData.OnLinePrintResult = HttpContext.Current.Request.QueryString("OnLinePrintResult")
            End If
            If HttpContext.Current.Request.QueryString("PolicyDocument").IsNotEmpty Then
                formData.PolicyDocument = HttpContext.Current.Request.QueryString("PolicyDocument")
            End If
            If HttpContext.Current.Request.QueryString("ErrorsFound").IsNotEmpty Then
                formData.ErrorsFound = HttpContext.Current.Request.QueryString("ErrorsFound")
            End If
            If HttpContext.Current.Request.QueryString("ReportURL").IsNotEmpty Then
                formData.ReportURL = HttpContext.Current.Request.QueryString("ReportURL")
            End If
            If HttpContext.Current.Request.QueryString("FormStatus").IsNotEmpty Then
                formData.FormStatus = HttpContext.Current.Request.QueryString("FormStatus")
            End If
            If HttpContext.Current.Request.QueryString("OnLinePrint").IsNotEmpty Then
                formData.OnLinePrint = HttpContext.Current.Request.QueryString("OnLinePrint")
            End If
            If HttpContext.Current.Request.QueryString("StatusRun").IsNotEmpty Then
                formData.StatusRun = HttpContext.Current.Request.QueryString("StatusRun")
            End If
            If HttpContext.Current.Request.QueryString("StatusCase").IsNotEmpty Then
                formData.StatusCase = HttpContext.Current.Request.QueryString("StatusCase")
            End If
            If HttpContext.Current.Request.QueryString("RecoveryCaseIndicator").IsNotEmpty Then
                formData.RecoveryCaseIndicator = HttpContext.Current.Request.QueryString("RecoveryCaseIndicator")
            End If
            If HttpContext.Current.Request.QueryString("AnswerDiabetes").IsNotEmpty Then
                formData.AnswerDiabetes = HttpContext.Current.Request.QueryString("AnswerDiabetes")
            End If
            If HttpContext.Current.Request.QueryString("AnswerHeart").IsNotEmpty Then
                formData.AnswerHeart = HttpContext.Current.Request.QueryString("AnswerHeart")
            End If
            If HttpContext.Current.Request.QueryString("AnswerCancer").IsNotEmpty Then
                formData.AnswerCancer = HttpContext.Current.Request.QueryString("AnswerCancer")
            End If
            If HttpContext.Current.Request.QueryString("PaymentMethod").IsNotEmpty Then
                formData.PaymentMethod = HttpContext.Current.Request.QueryString("PaymentMethod")
            End If
            If HttpContext.Current.Request.QueryString("ProductMasterDescription").IsNotEmpty Then
                formData.ProductMasterDescription = HttpContext.Current.Request.QueryString("ProductMasterDescription")
            End If
            If HttpContext.Current.Request.QueryString("PreviousPayment").IsNotEmpty Then
                formData.PreviousPayment = HttpContext.Current.Request.QueryString("PreviousPayment")
            End If
            If HttpContext.Current.Request.QueryString("ClienteIndicado").IsNotEmpty Then
                formData.ClienteIndicado = HttpContext.Current.Request.QueryString("ClienteIndicado")
            End If
            If HttpContext.Current.Request.QueryString("CompleteAddress").IsNotEmpty Then
                formData.CompleteAddress = HttpContext.Current.Request.QueryString("CompleteAddress")
            End If
            If HttpContext.Current.Request.QueryString("VerificarCuestionariosIndicador").IsNotEmpty Then
                formData.VerificarCuestionariosIndicador = HttpContext.Current.Request.QueryString("VerificarCuestionariosIndicador")
            End If
            If HttpContext.Current.Request.QueryString("PlanillaModificacion").IsNotEmpty Then
                formData.PlanillaModificacion = HttpContext.Current.Request.QueryString("PlanillaModificacion")
            End If
            If HttpContext.Current.Request.QueryString("PlanillaVisualizacion").IsNotEmpty Then
                formData.PlanillaVisualizacion = HttpContext.Current.Request.QueryString("PlanillaVisualizacion")
            End If
            If HttpContext.Current.Request.QueryString("ProductDescription").IsNotEmpty Then
                formData.ProductDescription = HttpContext.Current.Request.QueryString("ProductDescription")
            End If
            If HttpContext.Current.Request.QueryString("PrimaTotalAnual").IsNotEmpty Then
                formData.PrimaTotalAnual = HttpContext.Current.Request.QueryString("PrimaTotalAnual")
            End If
            If HttpContext.Current.Request.QueryString("PrimaRecibo").IsNotEmpty Then
                formData.PrimaRecibo = HttpContext.Current.Request.QueryString("PrimaRecibo")
            End If
            If HttpContext.Current.Request.QueryString("MonedaRecibo").IsNotEmpty Then
                formData.MonedaRecibo = HttpContext.Current.Request.QueryString("MonedaRecibo")
            End If
            If HttpContext.Current.Request.QueryString("CurrentYear").IsNotEmpty Then
                formData.CurrentYear = HttpContext.Current.Request.QueryString("CurrentYear")
            End If
            If HttpContext.Current.Request.QueryString("MesTarjeta").IsNotEmpty Then
                formData.MesTarjeta = HttpContext.Current.Request.QueryString("MesTarjeta")
            End If
            If HttpContext.Current.Request.QueryString("AnoTarjeta").IsNotEmpty Then
                formData.AnoTarjeta = HttpContext.Current.Request.QueryString("AnoTarjeta")
            End If
            If HttpContext.Current.Request.QueryString("AgregarBeneficiario").IsNotEmpty Then
                formData.AgregarBeneficiario = HttpContext.Current.Request.QueryString("AgregarBeneficiario")
            End If
            If HttpContext.Current.Request.QueryString("TypeOfPersonBenef").IsNotEmpty Then
                formData.TypeOfPersonBenef = HttpContext.Current.Request.QueryString("TypeOfPersonBenef")
            End If
            If HttpContext.Current.Request.QueryString("ValorAcumulado").IsNotEmpty Then
                formData.ValorAcumulado = HttpContext.Current.Request.QueryString("ValorAcumulado")
            End If
            If HttpContext.Current.Request.QueryString("BeneficiariosMail").IsNotEmpty Then
                formData.BeneficiariosMail = HttpContext.Current.Request.QueryString("BeneficiariosMail")
            End If
            If HttpContext.Current.Request.QueryString("Codigo").IsNotEmpty Then
                formData.Codigo = HttpContext.Current.Request.QueryString("Codigo")
            End If
            If HttpContext.Current.Request.QueryString("Descripcion").IsNotEmpty Then
                formData.Descripcion = HttpContext.Current.Request.QueryString("Descripcion")
            End If
            If HttpContext.Current.Request.QueryString("FondosMail").IsNotEmpty Then
                formData.FondosMail = HttpContext.Current.Request.QueryString("FondosMail")
            End If
            If HttpContext.Current.Request.QueryString("UsercodeBO").IsNotEmpty Then
                formData.UsercodeBO = HttpContext.Current.Request.QueryString("UsercodeBO")
            End If
            If HttpContext.Current.Request.QueryString("UsercodeFASI").IsNotEmpty Then
                formData.UsercodeFASI = HttpContext.Current.Request.QueryString("UsercodeFASI")
            End If
            If HttpContext.Current.Request.QueryString("ClienteInformaExiste").IsNotEmpty Then
                formData.ClienteInformaExiste = HttpContext.Current.Request.QueryString("ClienteInformaExiste")
            End If
            If HttpContext.Current.Request.QueryString("ClienteInformaEsUsuario").IsNotEmpty Then
                formData.ClienteInformaEsUsuario = HttpContext.Current.Request.QueryString("ClienteInformaEsUsuario")
            End If
            If HttpContext.Current.Request.QueryString("UsuarioClaveEntrada").IsNotEmpty Then
                formData.UsuarioClaveEntrada = HttpContext.Current.Request.QueryString("UsuarioClaveEntrada")
            End If
            If HttpContext.Current.Request.QueryString("UsuarioPassword").IsNotEmpty Then
                formData.UsuarioPassword = HttpContext.Current.Request.QueryString("UsuarioPassword")
            End If
            If HttpContext.Current.Request.QueryString("QRegistros").IsNotEmpty Then
                formData.QRegistros = HttpContext.Current.Request.QueryString("QRegistros")
            End If
            If HttpContext.Current.Request.QueryString("frompanel").IsNotEmpty Then
                formData.frompanel = HttpContext.Current.Request.QueryString("frompanel")
            End If
            If HttpContext.Current.Request.QueryString("IsAnonymous").IsNotEmpty Then
                formData.IsAnonymous = HttpContext.Current.Request.QueryString("IsAnonymous")
            End If
            If HttpContext.Current.Request.QueryString("GenderClient").IsNotEmpty Then
                formData.GenderClient = HttpContext.Current.Request.QueryString("GenderClient")
            End If
            If HttpContext.Current.Request.QueryString("uwcaseid2").IsNotEmpty Then
                formData.uwcaseid2 = HttpContext.Current.Request.QueryString("uwcaseid2")
            End If
            If HttpContext.Current.Request.QueryString("Parameter79").IsNotEmpty Then
                formData.Parameter79 = HttpContext.Current.Request.QueryString("Parameter79")
            End If
            If HttpContext.Current.Request.QueryString("uwcaseid4").IsNotEmpty Then
                formData.uwcaseid4 = HttpContext.Current.Request.QueryString("uwcaseid4")
            End If
            If HttpContext.Current.Request.QueryString("TotalBenef").IsNotEmpty Then
                formData.TotalBenef = HttpContext.Current.Request.QueryString("TotalBenef")
            End If
            If HttpContext.Current.Request.QueryString("isPhoneAvalaible").IsNotEmpty Then
                formData.isPhoneAvalaible = HttpContext.Current.Request.QueryString("isPhoneAvalaible")
            End If
            If HttpContext.Current.Request.QueryString("PolicyToPrint").IsNotEmpty Then
                formData.PolicyToPrint = HttpContext.Current.Request.QueryString("PolicyToPrint")
            End If
            If HttpContext.Current.Request.QueryString("SeffectDate").IsNotEmpty Then
                formData.SeffectDate = HttpContext.Current.Request.QueryString("SeffectDate")
            End If
            If HttpContext.Current.Request.QueryString("MensajeValidacionDireccion").IsNotEmpty Then
                formData.MensajeValidacionDireccion = HttpContext.Current.Request.QueryString("MensajeValidacionDireccion")
            End If
        End Sub	

        Private Shared Sub ValidateParametersInstance(ByRef formData As H5NNNCotizacionMiVidaValeParameters)
            If IsNothing(formData.RiskInformation) Then
                formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
            End If
            If IsNothing(formData.RiskInformation.Beneficiaries) Then
                formData.RiskInformation.Beneficiaries = New InMotionGIT.Policy.Entity.Contracts.BeneficiaryCollection
            End If
            If IsNothing(formData.ClientIncluded) Then
                formData.ClientIncluded = New InMotionGIT.Client.Entity.Contracts.Client
            End If
            If IsNothing(formData.RiskInformation.LifeLineOfBusiness) Then
                formData.RiskInformation.LifeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness
            End If
            If IsNothing(formData.RiskInformation.Policy) Then
                formData.RiskInformation.Policy = New InMotionGIT.Policy.Entity.Contracts.Policy
            End If
            If IsNothing(formData.RiskInformation.AmendmentInformation) Then
                formData.RiskInformation.AmendmentInformation = New InMotionGIT.Policy.Entity.Contracts.AmendmentInformation
            End If
            If IsNothing(formData.RiskInformation.AmendmentInformation.Coverages) Then
                formData.RiskInformation.AmendmentInformation.Coverages = New InMotionGIT.Policy.Entity.Contracts.CoverageForAmendmentCollection
            End If
            If IsNothing(formData.ClientInsuredPerson) Then
                formData.ClientInsuredPerson = New InMotionGIT.Client.Entity.Contracts.Client
            End If
            If IsNothing(formData.RiskInformation.PrimaryInsured) Then
                formData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
            End If
            If IsNothing(formData.RiskInformation.PrimaryInsured.Client) Then
                formData.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
            End If
            If IsNothing(formData.QuestionnairesAvailable) Then
                formData.QuestionnairesAvailable = New InMotionGIT.Questionnaires.QuestionnairesAvailable
            End If
            If IsNothing(formData.Beneficiary) Then
                formData.Beneficiary = New InMotionGIT.Policy.Entity.Contracts.Beneficiary
            End If
            If IsNothing(formData.Beneficiary.Client) Then
                formData.Beneficiary.Client = New InMotionGIT.Client.Entity.Contracts.Client
            End If
            If IsNothing(formData.RiskInformation.AutomaticPaymentPolicy) Then
                formData.RiskInformation.AutomaticPaymentPolicy = New InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy
            End If

        End Sub

#End Region

#Region "Form Contracts"

        <Serializable()>
        <DataContract()>
        Public Class EntryData

            <DataMember()> Public Property InstanceFormId As String
            <DataMember()> Public Property ProductMasterDescription As String
            <DataMember()> Public Property RiskInformationEffectiveDate As System.DateTime
            <DataMember()> Public Property uwcaseid As Int64
            <DataMember()> Public Property ClientIncludedGender As System.String
            <DataMember()> Public Property ClientIncludedSmokerIndicator As System.String
            <DataMember()> Public Property ClientIncludedBirthDate As System.DateTime
            <DataMember()> Public Property RiskInformationLifeLineOfBusinessInsuredAmountForCalculation As System.Decimal
            <DataMember()> Public Property Currency As Int32
            <DataMember()> Public Property InsuredAmountSelected As Decimal
            <DataMember()> Public Property AccumulatedAmount As Decimal
            <DataMember()> Public Property RiskInformationPolicyPaymentFrequency As System.Int32
            <DataMember()> Public Property RiskInformationPaymentMethod As System.Int32
            <DataMember()> Public Property RiskInformationAmendmentInformationCoveragesDescriptionOfCoverage As System.String
            <DataMember()> Public Property RiskInformationAmendmentInformationCoveragesInsuredAmount As System.Decimal
            <DataMember()> Public Property RiskInformationAmendmentInformationCoveragesAnnualPremium As System.Decimal
            <DataMember()> Public Property RiskInformationAmendmentInformationCoveragesConsecutive As System.Int32
            <DataMember()> Public Property CoverageForAmendment_CoverageForAmendment As List(Of CoverageForAmendment_CoverageForAmendmentItem)
            <DataMember()> Public Property ClienteInformaEsUsuario As Boolean
            <DataMember()> Public Property ClienteInformaExiste As Boolean
            <DataMember()> Public Property UsuarioClaveEntrada As String
            <DataMember()> Public Property ClientInsuredPersonClientID As System.String
            <DataMember()> Public Property ClientInsuredPersonFirstName As System.String
            <DataMember()> Public Property ClientInsuredPersonLastName As System.String
            <DataMember()> Public Property ClientInsuredPersonLastName2 As System.String
            <DataMember()> Public Property RiskInformationPrimaryInsuredClientClientID As System.String
            <DataMember()> Public Property RiskInformationPrimaryInsuredClientHeight As System.Decimal
            <DataMember()> Public Property RiskInformationPrimaryInsuredClientWeight As System.Decimal
            <DataMember()> Public Property RiskInformationPrimaryInsuredClientFirstName As System.String
            <DataMember()> Public Property RiskInformationPrimaryInsuredClientLastName As System.String
            <DataMember()> Public Property RiskInformationPrimaryInsuredClientLastName2 As System.String
            <DataMember()> Public Property BusinessAddress As New InMotionGIT.General.Entity.Contracts.Address.Address
            <DataMember()> Public Property QuestionnairesAvailableDiabetes As System.Boolean
            <DataMember()> Public Property QuestionnairesAvailableHeart As System.Boolean
            <DataMember()> Public Property QuestionnairesAvailableCancer As System.Boolean
            <DataMember()> Public Property BeneficiaryType As Int32
            <DataMember()> Public Property RiskInformationBeneficiariesClientID As System.String
            <DataMember()> Public Property RiskInformationBeneficiariesClientCompleteClientName As System.String
            <DataMember()> Public Property RiskInformationBeneficiariesRelationship As System.Int32
            <DataMember()> Public Property RiskInformationBeneficiariesPercentageShare As System.Decimal
            <DataMember()> Public Property Beneficiary_Beneficiary As List(Of Beneficiary_BeneficiaryItem)
            <DataMember()> Public Property BeneficiaryRelationship As System.Int32
            <DataMember()> Public Property BeneficiaryPercentageShare As System.Decimal
            <DataMember()> Public Property TypeOfPersonBenef As Int32
            <DataMember()> Public Property BeneficiaryClientID As System.String
            <DataMember()> Public Property BeneficiaryClientFirstName As System.String
            <DataMember()> Public Property BeneficiaryClientLastName As System.String
            <DataMember()> Public Property BeneficiaryClientLastName2 As System.String
            <DataMember()> Public Property BeneficiaryClientLegalName As System.String
            <DataMember()> Public Property RiskInformationAutomaticPaymentPolicyCreditCardType As System.Int32
            <DataMember()> Public Property RiskInformationAutomaticPaymentPolicyBankCode As System.Int64
            <DataMember()> Public Property RiskInformationAutomaticPaymentPolicyCreditCardNumber As System.String
            <DataMember()> Public Property MesTarjeta As Int32
            <DataMember()> Public Property AnoTarjeta As Int32
            <DataMember()> Public Property RiskInformationAutomaticPaymentPolicyAuthorizationNumber As System.String
            <DataMember()> Public Property eMail As String
            <DataMember()> Public Property OnLinePrintIndicator As Boolean
            <DataMember()> Public Property RiskInformationLineOfBusiness As System.Int32
            <DataMember()> Public Property RiskInformationProductCode As System.Int32

        End Class

        <Serializable()>
        <DataContract()>
        Public Class CoverageForAmendment_CoverageForAmendmentItem

            <DataMember()> Public Property DescriptionOfCoverage As System.String
            <DataMember()> Public Property InsuredAmount As System.Decimal
            <DataMember()> Public Property AnnualPremium As System.Decimal
            <DataMember()> Public Property Consecutive As System.Int32
            <DataMember()> Public Property Selected As System.Boolean

        End Class

        <Serializable()>
        <DataContract()>
        Public Class Beneficiary_BeneficiaryItem

            <DataMember()> Public Property ClientID As System.String
            <DataMember()> Public Property ClientCompleteClientName As System.String
            <DataMember()> Public Property Relationship As System.Int32
            <DataMember()> Public Property PercentageShare As System.Decimal

        End Class

        <Serializable()>
        Public Class H5NNNCotizacionMiVidaValeParameters
            Inherits InMotionGIT.FrontOffice.Support.DataType.FormBase(Of H5NNNCotizacionMiVidaValeParameters)

            Public Property RiskInformation As InMotionGIT.Policy.Entity.Contracts.RiskInformation
            Public Property uwcaseid As Int64
            Public Property uwreqid As Int64
            Public Property InsuredAmount As Decimal
            Public Property InsuredAmountSelected As Decimal
            Public Property PlanType As Int32
            Public Property ClientExistInDB As Boolean
            Public Property eMail As String
            Public Property Currency As Int32
            Public Property Age As Int32
            Public Property QuestionnairesAvailable As InMotionGIT.Questionnaires.QuestionnairesAvailable
            Public Property ProducerClientID As String
            Public Property BeneficiaryType As Int32
            Public Property SendMailIndicator As Boolean
            Public Property MailToProducerIndicator As Boolean
            Public Property InRuleErros As Boolean
            Public Property AccumulatedAmount As Decimal
            Public Property CancelledPoliciesQuantity As Int32
            Public Property OtherPoliciesSameRiskQuantity As Int32
            Public Property ConsumerInformation As InMotionGIT.Common.Contracts.Process.ConsumerInformation
            Public Property OnLinePrintIndicator As Boolean
            Public Property OnLinePrintResult As Int32
            Public Property PolicyDocument As String
            Public Property ErrorsFound As Boolean
            Public Property ReportURL As String
            Public Property FormStatus As Int32
            Public Property OnLinePrint As Int32
            Public Property StatusRun As Boolean
            Public Property StatusCase As Int32
            Public Property RecoveryCaseIndicator As Boolean
            Public Property AnswerDiabetes As String
            Public Property AnswerHeart As String
            Public Property AnswerCancer As String
            Public Property PaymentMethod As Int32
            Public Property ProductMasterDescription As String
            Public Property AddressPhysicalAddressDLI As InMotionGIT.AddressManager.Contract.Models.AddressPhysicalAddressDLI
            Public Property PreviousPayment As Boolean
            Public Property ClienteIndicado As String
            Public Property ServiceResultData As InMotionGIT.Common.Contracts.ServiceResultData
            Public Property CompleteAddress As String
            Public Property AddresseMailDLI As InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
            Public Property AddressDLICollection As InMotionGIT.AddressManager.Contract.General.AddressDLICollection
            Public Property VerificarCuestionariosIndicador As Boolean
            Public Property PlanillaModificacion As String
            Public Property PlanillaVisualizacion As String
            Public Property ProductDescription As String
            Public Property PrimaTotalAnual As Decimal
            Public Property PrimaRecibo As Decimal
            Public Property MonedaRecibo As Int32
            Public Property CurrentYear As Int32
            Public Property MesTarjeta As Int32
            Public Property AnoTarjeta As Int32
            Public Property ClientIncluded As InMotionGIT.Client.Entity.Contracts.Client
            Public Property AgregarBeneficiario As Boolean
            Public Property Beneficiary As InMotionGIT.Policy.Entity.Contracts.Beneficiary
            Public Property TypeOfPersonBenef As Int32
            Public Property ValorAcumulado As Decimal
            Public Property LookUpValue As InMotionGIT.Common.DataType.LookUpValue
            Public Property LookUpValueCollection As InMotionGIT.Common.DataType.LookUpValueCollection
            Public Property BeneficiariosMail As String
            Public Property Codigo As Int32
            Public Property Descripcion As String
            Public Property FondosMail As String
            Public Property UsercodeBO As Int32
            Public Property UsercodeFASI As Int32
            Public Property ClienteInformaExiste As Boolean
            Public Property ClienteInformaEsUsuario As Boolean
            Public Property UsuarioClaveEntrada As String
            Public Property UsuarioPassword As String
            Public Property ClientProvisional As InMotionGIT.Client.Entity.Contracts.Client
            Public Property QRegistros As Int32
            Public Property frompanel As Boolean
            Public Property ClientInsuredPerson As InMotionGIT.Client.Entity.Contracts.Client
            Public Property IsAnonymous As Boolean
            Public Property UserInformation As InMotionGIT.FrontOffice.Proxy.UserService.UserInformation
            Public Property GenderClient As String
            Public Property UnderwritingCase As InMotionGIT.Underwriting.Contracts.UnderwritingCase
            Public Property uwcaseid2 As Int64
            Public Property Parameter79 As Int32
            Public Property uwcaseid4 As Int32
            Public Property TotalBenef As Decimal
            Public Property isPhoneAvalaible As Boolean
            Public Property PolicyToPrint As Int32
            Public Property SeffectDate As String
            Public Property MensajeValidacionDireccion As String

        End Class
#End Region

    End Class

End Namespace

