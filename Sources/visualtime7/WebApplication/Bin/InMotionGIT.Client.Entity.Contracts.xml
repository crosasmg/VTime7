<?xml version="1.0"?>
<doc>
<assembly>
<name>
InMotionGIT.Client.Entity.Contracts
</name>
</assembly>
<members>
<member name="T:InMotionGIT.Client.Entity.Contracts.My.Resources.Resources">
<summary>
  Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.My.Resources.Resources.ResourceManager">
<summary>
  Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.My.Resources.Resources.Culture">
<summary>
  Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
  búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.My.Resources.Resources.Msg_1002">
<summary>
  Busca una cadena traducida similar a Fecha de ingreso es posterior a la fecha del día.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.My.Resources.Resources.Msg_2023">
<summary>
  Busca una cadena traducida similar a Fecha expedic. de licencia anterior a la fecha de nacimiento.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.My.Resources.Resources.Msg_2024">
<summary>
  Busca una cadena traducida similar a Fecha de nacimiento es posterior a la fecha de muerte.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.My.Resources.Resources.Msg_2073">
<summary>
  Busca una cadena traducida similar a La fecha de nacimiento es posterior a la fecha de ingreso.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.My.Resources.Resources.Msg_2077">
<summary>
  Busca una cadena traducida similar a Fecha de expedic. de licencia es posterior a la fecha de hoy.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.My.Resources.Resources.Msg_2207">
<summary>
  Busca una cadena traducida similar a No se indicó el nombre del cliente.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.My.Resources.Resources.Msg_2208">
<summary>
  Busca una cadena traducida similar a La fecha de nacimiento es posterior a la fecha del día.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.My.Resources.Resources.Msg_2210">
<summary>
  Busca una cadena traducida similar a Ingrese el número de la licencia.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.My.Resources.Resources.Msg_2211">
<summary>
  Busca una cadena traducida similar a La fecha de muerte es anterior a la fecha de ingreso.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.My.Resources.Resources.Msg_2791">
<summary>
  Busca una cadena traducida similar a La fecha de muerte es anterior a la fecha actual.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.My.Resources.Resources.Msg_2807">
<summary>
  Busca una cadena traducida similar a No se ingresaron los apellidos del cliente.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.My.Resources.Resources.Msg_2807_1">
<summary>
  Busca una cadena traducida similar a Debe indicar el apellido paterno.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.My.Resources.Resources.Msg_2807_2">
<summary>
  Busca una cadena traducida similar a Debe indicar el apellido materno.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.My.Resources.Resources.Msg_55637">
<summary>
  Busca una cadena traducida similar a Fecha término de la licencia es ant. a fecha de expedición.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.My.Resources.Resources.Msg_55638">
<summary>
  Busca una cadena traducida similar a Fecha término de licencia es anterior a fecha de nacimiento.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.My.Resources.Resources.Msg_55639">
<summary>
  Busca una cadena traducida similar a Fecha de término es anterior a fecha de ingreso del cliente.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.My.Resources.Resources.Msg_55640">
<summary>
  Busca una cadena traducida similar a Fecha de matrimonio es anterior a la fecha de nacimiento.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.My.Resources.Resources.Msg_55641">
<summary>
  Busca una cadena traducida similar a No se indicó fecha de expiración de la licencia.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.My.Resources.Resources.Msg_55740">
<summary>
  Busca una cadena traducida similar a No se ha ingresado la nacionalidad del cliente.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.My.Resources.Resources.Msg_55837">
<summary>
  Busca una cadena traducida similar a El cliente es soltero y se ingresó fecha de matrimonio.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.My.Resources.Resources.Msg_9013">
<summary>
  Busca una cadena traducida similar a Debe indicar fecha de ingreso del cliente.
</summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumAutomaticallyClientRelationshipChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumAutomaticPaymentClientChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumCIIU_ActCommerChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumClientChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumClientBankAccountChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumClientContactCompanyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumClientDocumentChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumClientEvaluationChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumClientFinantialInformationChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumClientHobbyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumClientProcessingWindowChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumClientSpecialFeatureChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumClientSportChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumClientsRelationshipChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumClientTaxSituationChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumCommercialActivityRatingChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumCommissionAgreementChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumCreditCardChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumGrossRevenueOfTheClientChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumIdentifierClientTypeChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumInhibitedListChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumInhListCauseSevChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumInternationalStandardIndustrialClassificationChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumStampsConditionOfTheClientChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumSTATETAXChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumWindowsClientChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumActuarialAgeMode">
 <summary>
 This option defines how to calculate the actuarial age
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumActuarialAgeMode.AttainedAge">
 <summary>
 The actuarial age will be the attained age (example: 42 years + 11 months will be 42 years)
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumActuarialAgeMode.ClosestBirthDate">
 <summary>= 0
 The actuarial age will be the closest birthdate (42 years and 11 months will be 43 years)
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumTypeOfPerson">
 <summary>
 Code of The Person Type
 </summary>
 <remarks>DataSource Table5006</remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumTypeOfPerson.Person">
 <summary>
 Persona Natural               
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Enumerations.EnumTypeOfPerson.Company">
 <summary>
 Empresa  (Persona Jurídica)   
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship">
 <summary>
 Relation table customers to automatically create.
 </summary>
<remarks>Data-source is 'TAB_RELAT'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.CreateNewAutomaticallyClientRelationship">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship._Relationship">
<summary>
Code for relationship among clients.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship._RelationshipToBeGenerated">
<summary>
Code for relationship among clients to be generated automatically
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.Relationship">
<summary>
Code for relationship among clients. (NRELASHIP)..
</summary>
<remarks>Data-source is 'TAB_RELAT.NRELASHIP'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_RELAT.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.RelationshipToBeGenerated">
<summary>
Code for relationship among clients to be generated automatically (NREL_TARGET)..
</summary>
<remarks>Data-source is 'TAB_RELAT.NREL_TARGET'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'TAB_RELAT.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_RELAT.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.Compare(InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="AutomaticallyClientRelationshipItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.RelationshipDescription">
 <summary>
 Code for relationship among clients.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE15'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationship.RelationshipToBeGeneratedDescription">
 <summary>
 Code for relationship among clients to be generated automatically
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE15'.
 </remarks>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationshipCollection">
 <summary>
 Collection for AutomaticallyClientRelationship class
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationshipCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationshipCollection.AddAutomaticallyClientRelationship">
 <summary>
 Add an instance of class 'AutomaticallyClientRelationship' in the AutomaticallyClientRelationshipCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationshipCollection.Compare(InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationshipCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationshipCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationshipCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticallyClientRelationshipCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient">
 <summary>
 Details for automatic payment by bank or credit card associated with the client.
 </summary>
<remarks>Data-source is 'DIR_DEBIT_CLI'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.CreateNewAutomaticPaymentClient">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient._BankAccount">
<summary>
Number of the banking account or credit card
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient._DirectDebitType">
<summary>
Type of direct debit.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient._BankCode">
<summary>
Code of the bank.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient._sBankAuth">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient._PaymentDay">
<summary>
Payment day for the direct debit.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient._AccountsOrder">
<summary>
Order of the bank accounts
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient._BankAgency">
<summary>
Code of the bank agency
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient._SWIFT">
<summary>
Code of Society for Worldwide Interbank Financial Telecommunication
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'DIR_DEBIT_CLI.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'DIR_DEBIT_CLI.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.BankAccount">
<summary>
Number of the banking account or credit card (SACCOUNT)..
</summary>
<remarks>Data-source is 'DIR_DEBIT_CLI.SACCOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'DIR_DEBIT_CLI.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.DirectDebitType">
<summary>
Type of direct debit. (STYP_DIRDEB)..
</summary>
<remarks>Data-source is 'DIR_DEBIT_CLI.STYP_DIRDEB'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'DIR_DEBIT_CLI.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'DIR_DEBIT_CLI.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.BankCode">
<summary>
Code of the bank. (NBANKEXT)..
</summary>
<remarks>Data-source is 'DIR_DEBIT_CLI.NBANKEXT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.sBankAuth">
<summary>
.
</summary>
<remarks>Data-source is 'DIR_DEBIT_CLI.SBANKAUTH'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.PaymentDay">
<summary>
Payment day for the direct debit. (NBILL_DAY)..
</summary>
<remarks>Data-source is 'DIR_DEBIT_CLI.NBILL_DAY'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.AccountsOrder">
<summary>
Order of the bank accounts (NORDER)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DIR_DEBIT_CLI.NORDER'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.BankAgency">
<summary>
Code of the bank agency (NBK_AGENCY)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DIR_DEBIT_CLI.NBK_AGENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.SWIFT">
<summary>
Code of Society for Worldwide Interbank Financial Telecommunication (SSWIFT)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DIR_DEBIT_CLI.SSWIFT'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.Compare(InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="AutomaticPaymentClientItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClient.BankCodeDescription">
 <summary>
 Code of the bank.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7'.
 </remarks>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClientCollection">
 <summary>
 Collection for AutomaticPaymentClient class
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClientCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClientCollection.AddAutomaticPaymentClient">
 <summary>
 Add an instance of class 'AutomaticPaymentClient' in the AutomaticPaymentClientCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClientCollection.Compare(InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClientCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClientCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClientCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.AutomaticPaymentClientCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer">
 <summary>
 CIIUs linked with the Commercial Activity
 </summary>
<remarks>Data-source is 'CIIU_ACTCOMMER'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.CreateNewCIIU_ActCommer">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer._CIIUCode">
<summary>
CIIU Code
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer._CommercialActivityCode">
<summary>
Commercial Activity Code
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CIIU_ACTCOMMER.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.CIIUCode">
<summary>
CIIU Code (NCIIU)..
</summary>
<remarks>Data-source is 'CIIU_ACTCOMMER.NCIIU'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.CommercialActivityCode">
<summary>
Commercial Activity Code (NCOMMER_ACTIVITY)..
</summary>
<remarks>Data-source is 'CIIU_ACTCOMMER.NCOMMER_ACTIVITY'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'CIIU_ACTCOMMER.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CIIU_ACTCOMMER.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'CIIU_ACTCOMMER.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.Compare(InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CIIU_ActCommerItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommer.CommercialActivityCodeDescription">
 <summary>
 Commercial Activity Code
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9015'.
 </remarks>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommerCollection">
 <summary>
 Collection for CIIU_ActCommer class
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommerCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommerCollection.AddCIIU_ActCommer">
 <summary>
 Add an instance of class 'CIIU_ActCommer' in the CIIU_ActCommerCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommerCollection.Compare(InMotionGIT.Client.Entity.Contracts.CIIU_ActCommerCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommerCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommerCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CIIU_ActCommerCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.Client">
 <summary>
 Clients information.
 </summary>
<remarks>Data-source is 'CLIENT'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.CreateNewClient">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._CurrentAccountIndicator">
<summary>
It indicates that the client has a current account.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._Invoicing">
<summary>
FIELD DELETED FROM THE SYSTEM
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._CivilStatus">
<summary>
Marital status of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._ApprovalDate">
<summary>
Date when the balance statement of the client is approved.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._BirthDate">
<summary>
Date of birth of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._BlockedClient">
<summary>
Blocked client indicator.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._ClientClassification">
<summary>
Classification of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._FirstName">
<summary>
First name and middle name of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._LastName">
<summary>
Last name of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._DeathDate">
<summary>
Date when the client died, in case he/she did.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._DriverLicenseEffectiveDate">
<summary>
Effective date of the driver&#39;s license.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._Height">
<summary>
Height of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._DateOfIngress">
<summary>
Date when the information was first entered into the system.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._Housing">
<summary>
Type of housing.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._DriversLicense">
<summary>
Number of the driver license.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._NoteID">
<summary>
Number of the note containing the comments related to the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._BranchOffice">
<summary>
Code of the Branch Office
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._NumberOfVehicles">
<summary>
Number of vehicles owned by the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._NumberOfChildren">
<summary>
Number of children of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._RateForCreditInsurance">
<summary>
Rate of calculation (0/000 - per thousand) of the premium ( to be applied in credit policies).
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._TaxCode">
<summary>
Tax Code.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._Gender">
<summary>
Gender of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._SmokerIndicator">
<summary>
Smoker client indicator.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._TaxIdentificationNumber">
<summary>
Tax identification number.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._Profession">
<summary>
Profession of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._Weight">
<summary>
Weight of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._Autochar">
<summary>
FIELD DELETED FROM THE SYSTEM
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._CreditCardIndicator">
<summary>
Use of credit card indicator .
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._EconomicStanding">
<summary>
Economic standing of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._Emplqua">
<summary>
FIELD DELETED FROM THE SYSTEM
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._ImageID">
<summary>
Number of the image related to the claim.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._TypeOfPerson">
<summary>
Code of the person type.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._EconomicArea">
<summary>
Economic area of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._DriverLicenseExpiryDate">
<summary>
Expiration date of the driver&#39;s license.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._DrivingLicenseType">
<summary>
Code of the driving license type.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._Disability">
<summary>
Disability.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._DrivingLicenseRestrictions">
<summary>
Driving license restrictions.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._LegalName">
<summary>
Legal name of the business client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._LastName2">
<summary>
Last name (2) of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._MedicalInstitution">
<summary>
Institution of health to which the client is affiliated.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._AFP">
<summary>
FIELD DELETED FROM THE SYSTEM
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._WeddingDate">
<summary>
Date of wedding of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._BillsDelivered">
<summary>
Indicator of delivery of bills.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._TypeOfDisability">
<summary>
Code of type of disability of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._DateOfClientDisability">
<summary>
Date of disability of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._DisabilityCause">
<summary>
Cause of disability of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._Nationality">
<summary>
Nationality code.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._CheckDigit">
<summary>
Verificator digit of the client code
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._DateOfRetirement">
<summary>
Date when the status of the client changed from Employed to Retired.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._DateWhenClientBecameIndependant">
<summary>
Date from which worker is Independent.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._DateOfEmployment">
<summary>
Date from which worker is &#39;dependent&#39; (works for a company).
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._MailingPreference">
<summary>
Number that identifies the mailing preference of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._Language">
<summary>
Language in which the system shows the information.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._Speciality">
<summary>
Occupation of the client
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._CompanyType">
<summary>
When the client is for a company, this field indicates the type of company.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._CompleteClientName">
<summary>
Complete name of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._DateAccountingProcess">
<summary>
Date accounting process
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._Concatenation">
<summary>
Concatenation of the fields related to the business draft (nBusinessTy + nCommerGrp + nCodKind).
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._CompanyClassification">
<summary>
When the client is for a company, this field indicates the classification of the company.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._NADDRESSID">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._NPHONEID">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._CIIUCode">
<summary>
CIIU Code
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._ExternalClassification">
<summary>
External Classification
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._NormalizationStatus">
<summary>
Code of normalization status
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._EffectiveDateNormalization">
<summary>
Effective date normalization
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._NoMarket">
<summary>
Indicates that the client can not be contacted or receive publicity, commercial phone calls
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._BirthCountry">
<summary>
Code of the country of birth
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._BirthState">
<summary>
Code of the state of birth
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._ClientSegment">
<summary>
Segment that occupies a client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._ClientScore">
<summary>
Client&#39;s Banemex score
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._NSEGBMX">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._NVALUE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._NATTRITION">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._NLOYALTY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._NLSCHOOL">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._NDEPENDS">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._NCONDUSEF">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._NREUFINT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._NCUSTENTAILMENT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._SCITICURP">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._SNOTARYREGNUMBER">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._DNOTARYREGDATE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._Nameofthecompanyoragencywheretheclientworks">
<summary>
Name of the company or agency where the client works
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._SCURP">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._SRFC">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._NumberBusinessFolio">
<summary>
Number of business folio
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._MainEconomicActivityClient">
<summary>
Main economic activity of the client
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._EconomicServiceActivityMercantile">
<summary>
Economic and service activity to which the mercantile establishment will be dedicated
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._CodePlaceResidence">
<summary>
Code of the place of residence
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._JobTitle">
<summary>
Job Title
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._NumberYearsPerformingJob">
<summary>
Number of years performing the job
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._ActivityDevelopedByClient">
<summary>
Activity or business developed by the client
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._BriefDescriptionWorkPerformed">
<summary>
Brief description of the work performed
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._NameCompanyWhereWorks">
<summary>
Name of the company or agency where the client works
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._AmountMonthlyIncome">
<summary>
Amount of Monthly income
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._OtherOccupationClient">
<summary>
Other occupation of the client
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._AmountMonthlyIncomeOtherOccupations">
<summary>
Amount of Monthly income by other occupations
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._SecondName">
<summary>
Second name name of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._ThirdName">
<summary>
Third name
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._BirthPlace">
<summary>
Birth place of the client
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._LegalPowerIn">
<summary>
Indicator of legal power to transfer funds.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._IndicatorOfPubliclyExposedPerson">
<summary>
Indicator Of Publicly Exposed Person.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._CountryOfResidenceOfTheClient">
<summary>
Country Of Residence Of The Client (Possible Values ¿¿According To Table 5518)
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._DescriptionOfTheActivityOfTheClient">
<summary>
Description Of The Activity Of The Client
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._UsTaxpayerIndicator">
<summary>
Us Taxpayer Indicator
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._MandateIndicatorOfConsolidatedBalances">
<summary>
Mandate indicator of consolidated balances.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._PoliticallyExposedClientIndicator">
<summary>
Politically Exposed Client Indicator
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._DateUpdateSARLAFT">
<summary>
Date Update SARLAFT
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._TributeOthersCountries">
<summary>
Tribute Other Countries
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._AutorizeVerifDataCommercial">
<summary>
Indicator authorize data for commercial purposes
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._IndAdministerPublicResource">
<summary>
Administer public resources Indicator
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._IndAuthorizingEntities">
<summary>
Indicator Authorizing Entities
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._Position">
<summary>
Position
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._SourceOfFunds">
<summary>
Source of Funds
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._ListedTheStockExchange">
<summary>
Listed on the stock exchange
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._ProductServiceDesc">
<summary>
Product and/or Service Description
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._CommercialSector">
<summary>
Commercial Sector. Possible values TABLE9033
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._TransactionsForeign">
<summary>
Transactions in foreign currency
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._IndOtherOperations">
<summary>
Other Operations Indicator
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._ClientBankAccounts">
<summary>
Banks accounts of a client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._ClientDocuments">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._ClientEvaluation">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._WindowsClient">
<summary>
Windows associated to a client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._CommissionAgreements">
<summary>
Tabla de convenios (comisiones) de contratantes-bancos.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._ClientContactCompanies">
<summary>
Client Contact Company.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._CreditCards">
<summary>
Credit Card of a Client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._AutomaticPaymentClients">
<summary>
Details for automatic payment by bank or credit card associated with the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._ClientFinantialInformations">
<summary>
Financial information of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._ClientHobbies">
<summary>
Hobbies related with a client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._ClientsRelationships">
<summary>
Relationship among clients.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._ClientSports">
<summary>
Sports associated with a client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._GrossRevenueOfTheClientCollection">
<summary>
Gross Revenue Of The Client
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._ClientTaxSituation">
<summary>
Client Tax Situation
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._StampsConditionOfTheClientCollection">
<summary>
Stamps Condition Of The Client
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'CLIENT.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.CurrentAccountIndicator">
<summary>
It indicates that the client has a current account. (SACCOUNT_IN)..
</summary>
<remarks>Data-source is 'CLIENT.SACCOUNT_IN'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.Invoicing">
<summary>
FIELD DELETED FROM THE SYSTEM (NINVOICING)..
</summary>
<remarks>Data-source is 'CLIENT.NINVOICING'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.CivilStatus">
<summary>
Marital status of the client. (NCIVILSTA)..
</summary>
<remarks>Data-source is 'CLIENT.NCIVILSTA'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.ApprovalDate">
<summary>
Date when the balance statement of the client is approved. (DAPROBDATE)..
</summary>
<remarks>Data-source is 'CLIENT.DAPROBDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.BirthDate">
<summary>
Date of birth of the client. (DBIRTHDAT)..
</summary>
<remarks>Data-source is 'CLIENT.DBIRTHDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.BlockedClient">
<summary>
Blocked client indicator. (SBLOCKADE)..
</summary>
<remarks>Data-source is 'CLIENT.SBLOCKADE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.ClientClassification">
<summary>
Classification of the client. (NCLASS)..
</summary>
<remarks>Data-source is 'CLIENT.NCLASS'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.FirstName">
<summary>
First name and middle name of the client. (SFIRSTNAME)..
</summary>
<remarks>Data-source is 'CLIENT.SFIRSTNAME'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.LastName">
<summary>
Last name of the client. (SLASTNAME)..
</summary>
<remarks>Data-source is 'CLIENT.SLASTNAME'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLIENT.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.DeathDate">
<summary>
Date when the client died, in case he/she did. (DDEATHDAT)..
</summary>
<remarks>Data-source is 'CLIENT.DDEATHDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.DriverLicenseEffectiveDate">
<summary>
Effective date of the driver&#39;s license. (DDRIVERDAT)..
</summary>
<remarks>Data-source is 'CLIENT.DDRIVERDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.Height">
<summary>
Height of the client. (NHEIGHT)..
</summary>
<remarks>Data-source is 'CLIENT.NHEIGHT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.DateOfIngress">
<summary>
Date when the information was first entered into the system. (DINPDATE)..
</summary>
<remarks>Data-source is 'CLIENT.DINPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.Housing">
<summary>
Type of housing. (NHOUSE_TYPE)..
</summary>
<remarks>Data-source is 'CLIENT.NHOUSE_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.DriversLicense">
<summary>
Number of the driver license. (SLICENSE)..
</summary>
<remarks>Data-source is 'CLIENT.SLICENSE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.NoteID">
<summary>
Number of the note containing the comments related to the client. (NNOTENUM)..
</summary>
<remarks>Data-source is 'CLIENT.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.BranchOffice">
<summary>
Code of the Branch Office (NOFFICE)..
</summary>
<remarks>Data-source is 'CLIENT.NOFFICE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.NumberOfVehicles">
<summary>
Number of vehicles owned by the client. (NQ_CARS)..
</summary>
<remarks>Data-source is 'CLIENT.NQ_CARS'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.NumberOfChildren">
<summary>
Number of children of the client. (NQ_CHILD)..
</summary>
<remarks>Data-source is 'CLIENT.NQ_CHILD'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.RateForCreditInsurance">
<summary>
Rate of calculation (0/000 - per thousand) of the premium ( to be applied in credit policies). (NRATE)..
</summary>
<remarks>Data-source is 'CLIENT.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.TaxCode">
<summary>
Tax Code. (STAX_CODE)..
</summary>
<remarks>Data-source is 'CLIENT.STAX_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.Gender">
<summary>
Gender of the client. (SSEXCLIEN)..
</summary>
<remarks>Data-source is 'CLIENT.SSEXCLIEN'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.GenderEnum">
<summary>
Gender of the client.
</summary>
<remarks>This property use a enumeration based on property 'Gender'</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.GenderEnumText">
<summary>
Gender of the client.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.SmokerIndicator">
<summary>
Smoker client indicator. (SSMOKING)..
</summary>
<remarks>Data-source is 'CLIENT.SSMOKING'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.SmokerIndicatorEnum">
<summary>
Smoker client indicator.
</summary>
<remarks>This property use a enumeration based on property 'SmokerIndicator'</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.SmokerIndicatorEnumText">
<summary>
Smoker client indicator.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.TaxIdentificationNumber">
<summary>
Tax identification number. (SCUIT)..
</summary>
<remarks>Data-source is 'CLIENT.SCUIT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.Profession">
<summary>
Profession of the client. (NTITLE)..
</summary>
<remarks>Data-source is 'CLIENT.NTITLE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLIENT.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.Weight">
<summary>
Weight of the client. (NWEIGHT)..
</summary>
<remarks>Data-source is 'CLIENT.NWEIGHT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.Autochar">
<summary>
FIELD DELETED FROM THE SYSTEM (SAUTO_CHAR)..
</summary>
<remarks>Data-source is 'CLIENT.SAUTO_CHAR'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.CreditCardIndicator">
<summary>
Use of credit card indicator . (SCREDIT_CARD)..
</summary>
<remarks>Data-source is 'CLIENT.SCREDIT_CARD'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.EconomicStanding">
<summary>
Economic standing of the client. (NECONOMIC_L)..
</summary>
<remarks>Data-source is 'CLIENT.NECONOMIC_L'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.Emplqua">
<summary>
FIELD DELETED FROM THE SYSTEM (NEMPL_QUA)..
</summary>
<remarks>Data-source is 'CLIENT.NEMPL_QUA'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.ImageID">
<summary>
Number of the image related to the claim. (NIMAGENUM)..
</summary>
<remarks>Data-source is 'CLIENT.NIMAGENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.TypeOfPerson">
<summary>
Code of the person type. (NPERSON_TYP)..
</summary>
<remarks>Data-source is 'CLIENT.NPERSON_TYP'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.TypeOfPersonEnum">
<summary>
Code of the person type.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfPerson'</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.TypeOfPersonEnumText">
<summary>
Code of the person type.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.EconomicArea">
<summary>
Economic area of the client. (NAREA)..
</summary>
<remarks>Data-source is 'CLIENT.NAREA'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.DriverLicenseExpiryDate">
<summary>
Expiration date of the driver&#39;s license. (DDRIVEXPDAT)..
</summary>
<remarks>Data-source is 'CLIENT.DDRIVEXPDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.DrivingLicenseType">
<summary>
Code of the driving license type. (NTYPDRIVER)..
</summary>
<remarks>Data-source is 'CLIENT.NTYPDRIVER'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.Disability">
<summary>
Disability. (NDISABILITY)..
</summary>
<remarks>Data-source is 'CLIENT.NDISABILITY'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.DrivingLicenseRestrictions">
<summary>
Driving license restrictions. (NLIMITDRIV)..
</summary>
<remarks>Data-source is 'CLIENT.NLIMITDRIV'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.LegalName">
<summary>
Legal name of the business client. (SLEGALNAME)..
</summary>
<remarks>Data-source is 'CLIENT.SLEGALNAME'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.LastName2">
<summary>
Last name (2) of the client. (SLASTNAME2)..
</summary>
<remarks>Data-source is 'CLIENT.SLASTNAME2'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.MedicalInstitution">
<summary>
Institution of health to which the client is affiliated. (NHEALTH_ORG)..
</summary>
<remarks>Data-source is 'CLIENT.NHEALTH_ORG'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.AFP">
<summary>
FIELD DELETED FROM THE SYSTEM (NAFP)..
</summary>
<remarks>Data-source is 'CLIENT.NAFP'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.WeddingDate">
<summary>
Date of wedding of the client. (DWEDD)..
</summary>
<remarks>Data-source is 'CLIENT.DWEDD'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.BillsDelivered">
<summary>
Indicator of delivery of bills. (SBILL_IND)..
</summary>
<remarks>Data-source is 'CLIENT.SBILL_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.TypeOfDisability">
<summary>
Code of type of disability of the client. (NINCAPACITY)..
</summary>
<remarks>Data-source is 'CLIENT.NINCAPACITY'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.DateOfClientDisability">
<summary>
Date of disability of the client. (DINCAPACITY)..
</summary>
<remarks>Data-source is 'CLIENT.DINCAPACITY'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.DisabilityCause">
<summary>
Cause of disability of the client. (NINCAP_COD)..
</summary>
<remarks>Data-source is 'CLIENT.NINCAP_COD'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.Nationality">
<summary>
Nationality code. (NNATIONALITY)..
</summary>
<remarks>Data-source is 'CLIENT.NNATIONALITY'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.CheckDigit">
<summary>
Verificator digit of the client code (SDIGIT)..
</summary>
<remarks>Data-source is 'CLIENT.SDIGIT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.DateOfRetirement">
<summary>
Date when the status of the client changed from Employed to Retired. (DRETIREMENT)..
</summary>
<remarks>Data-source is 'CLIENT.DRETIREMENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.DateWhenClientBecameIndependant">
<summary>
Date from which worker is Independent. (DINDEPENDANT)..
</summary>
<remarks>Data-source is 'CLIENT.DINDEPENDANT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.DateOfEmployment">
<summary>
Date from which worker is &#39;dependent&#39; (works for a company). (DDEPENDANT)..
</summary>
<remarks>Data-source is 'CLIENT.DDEPENDANT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.MailingPreference">
<summary>
Number that identifies the mailing preference of the client. (NMAILINGPREF)..
</summary>
<remarks>Data-source is 'CLIENT.NMAILINGPREF'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.Language">
<summary>
Language in which the system shows the information. (NLANGUAGE)..
</summary>
<remarks>Data-source is 'CLIENT.NLANGUAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.Speciality">
<summary>
Occupation of the client (NSPECIALITY)..
</summary>
<remarks>Data-source is 'CLIENT.NSPECIALITY'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.CompanyType">
<summary>
When the client is for a company, this field indicates the type of company. (NCOMP_TYPE)..
</summary>
<remarks>Data-source is 'CLIENT.NCOMP_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.CompleteClientName">
<summary>
Complete name of the client. (SCLIENAME)..
</summary>
<remarks>Data-source is 'CLIENT.SCLIENAME'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.DateAccountingProcess">
<summary>
Date accounting process (SLEDGERPROCESS)..
</summary>
<remarks>Data-source is 'CLIENT.SLEDGERPROCESS'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.Concatenation">
<summary>
Concatenation of the fields related to the business draft (nBusinessTy + nCommerGrp + nCodKind). (SCOMPLCOD)..
</summary>
<remarks>Data-source is 'CLIENT.SCOMPLCOD'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.CompanyClassification">
<summary>
When the client is for a company, this field indicates the classification of the company. (NTYPECOMPANY)..
</summary>
<remarks>Data-source is 'CLIENT.NTYPECOMPANY'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.NADDRESSID">
<summary>
.
</summary>
<remarks>Data-source is 'CLIENT.NADDRESSID'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.NPHONEID">
<summary>
.
</summary>
<remarks>Data-source is 'CLIENT.NPHONEID'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.CIIUCode">
<summary>
CIIU Code (NCIIU)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.NCIIU'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.ExternalClassification">
<summary>
External Classification (NEXTERNALCLASS)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.NEXTERNALCLASS'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.NormalizationStatus">
<summary>
Code of normalization status (NNORMSTATUS)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.NNORMSTATUS'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.EffectiveDateNormalization">
<summary>
Effective date normalization (DNORMDATE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.DNORMDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.NoMarket">
<summary>
Indicates that the client can not be contacted or receive publicity, commercial phone calls (SINDNOMARKET)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SINDNOMARKET'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.BirthCountry">
<summary>
Code of the country of birth (NBIRTHCOUNTRY)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.NBIRTHCOUNTRY'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.BirthState">
<summary>
Code of the state of birth (NBIRTHSTATE)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.NBIRTHSTATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.ClientSegment">
<summary>
Segment that occupies a client. (NSEGMENT)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.NSEGMENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.ClientScore">
<summary>
Client&#39;s Banemex score (NSCORE)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.NSCORE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.NSEGBMX">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.NSEGBMX'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.NVALUE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.NVALUE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.NATTRITION">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.NATTRITION'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.NLOYALTY">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.NLOYALTY'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.NLSCHOOL">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.NLSCHOOL'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.NDEPENDS">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.NDEPENDS'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.NCONDUSEF">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.NCONDUSEF'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.NREUFINT">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.NREUFINT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.NCUSTENTAILMENT">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.NCUSTENTAILMENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.SCITICURP">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SCITICURP'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.SNOTARYREGNUMBER">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SNOTARYREGNUMBER'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.DNOTARYREGDATE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.DNOTARYREGDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.Nameofthecompanyoragencywheretheclientworks">
<summary>
Name of the company or agency where the client works (SNOTARYDESC)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SNOTARYDESC'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.SCURP">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SCURP'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.SRFC">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SRFC'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.NumberBusinessFolio">
<summary>
Number of business folio (NBUSINESSFOLIO)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.NBUSINESSFOLIO'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.MainEconomicActivityClient">
<summary>
Main economic activity of the client (SMAINECONOMICACT)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SMAINECONOMICACT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.EconomicServiceActivityMercantile">
<summary>
Economic and service activity to which the mercantile establishment will be dedicated (SCOMMACTIVITY)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SCOMMACTIVITY'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.CodePlaceResidence">
<summary>
Code of the place of residence (NHOMEPLACE)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.NHOMEPLACE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.JobTitle">
<summary>
Job Title (SJOBTITLE)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SJOBTITLE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.NumberYearsPerformingJob">
<summary>
Number of years performing the job (NYEARSJOB)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.NYEARSJOB'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.ActivityDevelopedByClient">
<summary>
Activity or business developed by the client (SBUSINESSDEV)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SBUSINESSDEV'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.BriefDescriptionWorkPerformed">
<summary>
Brief description of the work performed (SWORKPERFORMED)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SWORKPERFORMED'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.NameCompanyWhereWorks">
<summary>
Name of the company or agency where the client works (SCOMPANYWORK)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SCOMPANYWORK'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.AmountMonthlyIncome">
<summary>
Amount of Monthly income (NMONTHLYINCOME)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.NMONTHLYINCOME'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.OtherOccupationClient">
<summary>
Other occupation of the client (NOTHERSPECIALITY)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.NOTHERSPECIALITY'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.AmountMonthlyIncomeOtherOccupations">
<summary>
Amount of Monthly income by other occupations (NOTHERINCOMES)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.NOTHERINCOMES'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.SecondName">
<summary>
Second name name of the client. (SSECONDNAME)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SSECONDNAME'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.ThirdName">
<summary>
Third name (STHIRDNAME)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.STHIRDNAME'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.BirthPlace">
<summary>
Birth place of the client (NBIRTHPLACE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.NBIRTHPLACE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.LegalPowerIn">
<summary>
Indicator of legal power to transfer funds. (SBANKTRANS_IND)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SBANKTRANS_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.IndicatorOfPubliclyExposedPerson">
<summary>
Indicator Of Publicly Exposed Person. (SPEP_IND)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SPEP_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.CountryOfResidenceOfTheClient">
<summary>
Country Of Residence Of The Client (Possible Values ¿¿According To Table 5518) (NCRESIDENCE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.NCRESIDENCE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.DescriptionOfTheActivityOfTheClient">
<summary>
Description Of The Activity Of The Client (SDESSPECIALITY)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SDESSPECIALITY'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.UsTaxpayerIndicator">
<summary>
Us Taxpayer Indicator (SUSPERSON)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SUSPERSON'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.MandateIndicatorOfConsolidatedBalances">
<summary>
Mandate indicator of consolidated balances. (SMSCONSOLIDATE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SMSCONSOLIDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.PoliticallyExposedClientIndicator">
<summary>
Politically Exposed Client Indicator (SCLIENTPEP)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SCLIENTPEP'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.DateUpdateSARLAFT">
<summary>
Date Update SARLAFT (DSARLAFTDATE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.DSARLAFTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.TributeOthersCountries">
<summary>
Tribute Other Countries (STRIBCOUNTRIES)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.STRIBCOUNTRIES'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.AutorizeVerifDataCommercial">
<summary>
Indicator authorize data for commercial purposes (SAUTODATACOMER)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SAUTODATACOMER'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.IndAdministerPublicResource">
<summary>
Administer public resources Indicator (SADMINSOURPUB)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SADMINSOURPUB'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.IndAuthorizingEntities">
<summary>
Indicator Authorizing Entities (SAUTODATOENTID)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SAUTODATOENTID'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.Position">
<summary>
Position (SPOSITION)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SPOSITION'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.SourceOfFunds">
<summary>
Source of Funds (SSOURCEFOUND)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SSOURCEFOUND'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.ListedTheStockExchange">
<summary>
Listed on the stock exchange (SLISTEDBOSAL)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SLISTEDBOSAL'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.ProductServiceDesc">
<summary>
Product and/or Service Description (SPRODSERV)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SPRODSERV'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.CommercialSector">
<summary>
Commercial Sector. Possible values TABLE9033 (NCODSECTOR)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.NCODSECTOR'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.TransactionsForeign">
<summary>
Transactions in foreign currency (SFOREIGNCURREN)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SFOREIGNCURREN'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.IndOtherOperations">
<summary>
Other Operations Indicator (SOTHEROPERATIONS)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIENT.SOTHEROPERATIONS'.</remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.Client._Images">
<summary>
Images.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.Images">
<summary>
Images.
</summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewImagesInstance">
<summary>
Initializes the 'Images' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewImagesItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Images', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Images' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewClientBankAccountsInstance">
<summary>
Initializes the 'ClientBankAccounts' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewClientBankAccountItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ClientBankAccounts', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ClientBankAccount' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.ClientBankAccounts">
<summary>
Banks accounts of a client. collection.
</summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewClientDocumentsInstance">
<summary>
Initializes the 'ClientDocuments' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewClientDocumentItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ClientDocuments', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ClientDocument' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.ClientDocuments">
<summary>
 collection.
</summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewClientEvaluationInstance">
<summary>
Initializes the 'ClientEvaluation' instance.
</summary>
 <returns>The 'ClientEvaluation' class instance.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.ClientEvaluation">
<summary>
 collection.
</summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewWindowsClientInstance">
<summary>
Initializes the 'WindowsClient' instance.
</summary>
 <returns>The 'WindowsClient' class instance.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.WindowsClient">
<summary>
Windows associated to a client. collection.
</summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewCommissionAgreementsInstance">
<summary>
Initializes the 'CommissionAgreements' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewCommissionAgreementItem(System.Boolean)">
<summary>
Add a new item to the collection of 'CommissionAgreements', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'CommissionAgreement' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.CommissionAgreements">
<summary>
Tabla de convenios (comisiones) de contratantes-bancos. collection.
</summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewClientContactCompaniesInstance">
<summary>
Initializes the 'ClientContactCompanies' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewClientContactCompanyItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ClientContactCompanies', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ClientContactCompany' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.ClientContactCompanies">
<summary>
Client Contact Company. collection.
</summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewCreditCardsInstance">
<summary>
Initializes the 'CreditCards' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewCreditCardItem(System.Boolean)">
<summary>
Add a new item to the collection of 'CreditCards', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'CreditCard' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.CreditCards">
<summary>
Credit Card of a Client. collection.
</summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewAutomaticPaymentClientsInstance">
<summary>
Initializes the 'AutomaticPaymentClients' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewAutomaticPaymentClientItem(System.Boolean)">
<summary>
Add a new item to the collection of 'AutomaticPaymentClients', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'AutomaticPaymentClient' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.AutomaticPaymentClients">
<summary>
Details for automatic payment by bank or credit card associated with the client. collection.
</summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewClientFinantialInformationsInstance">
<summary>
Initializes the 'ClientFinantialInformations' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewClientFinantialInformationItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ClientFinantialInformations', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ClientFinantialInformation' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.ClientFinantialInformations">
<summary>
Financial information of the client. collection.
</summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewClientHobbiesInstance">
<summary>
Initializes the 'ClientHobbies' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewClientHobbyItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ClientHobbies', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ClientHobby' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.ClientHobbies">
<summary>
Hobbies related with a client. collection.
</summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewClientsRelationshipsInstance">
<summary>
Initializes the 'ClientsRelationships' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewClientsRelationshipItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ClientsRelationships', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ClientsRelationship' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.ClientsRelationships">
<summary>
Relationship among clients. collection.
</summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewClientSportsInstance">
<summary>
Initializes the 'ClientSports' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewClientSportItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ClientSports', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ClientSport' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.ClientSports">
<summary>
Sports associated with a client. collection.
</summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewGrossRevenueOfTheClientCollectionInstance">
<summary>
Initializes the 'GrossRevenueOfTheClientCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewGrossRevenueOfTheClientItem(System.Boolean)">
<summary>
Add a new item to the collection of 'GrossRevenueOfTheClientCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'GrossRevenueOfTheClient' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.GrossRevenueOfTheClientCollection">
<summary>
Gross Revenue Of The Client collection.
</summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewClientTaxSituationInstance">
<summary>
Initializes the 'ClientTaxSituation' instance.
</summary>
 <returns>The 'ClientTaxSituation' class instance.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.ClientTaxSituation">
<summary>
Client Tax Situation collection.
</summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewStampsConditionOfTheClientCollectionInstance">
<summary>
Initializes the 'StampsConditionOfTheClientCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.NewStampsConditionOfTheClientItem(System.Boolean)">
<summary>
Add a new item to the collection of 'StampsConditionOfTheClientCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'StampsConditionOfTheClient' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.StampsConditionOfTheClientCollection">
<summary>
Stamps Condition Of The Client collection.
</summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.Compare(InMotionGIT.Client.Entity.Contracts.Client,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClientItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.CustomString">
 <summary>
 Extensibility custom string property.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.CustomStringEx">
 <summary>
 Extensibility custom string ex property.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.CustomNumeric">
 <summary>
 Extensibility custom decimal property.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.CustomNumericEx">
 <summary>
 Extensibility custom decimal ex property.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.CustomDate">
 <summary>
 Extensibility custom date property.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.CustomDateEx">
 <summary>
 Extensibility custom date ex property.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.CustomBoolean">
 <summary>
 Extensibility custom boolean property.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.CustomBooleanEx">
 <summary>
 Extensibility custom boolean ex property.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.InvoicingDescription">
 <summary>
 FIELD DELETED FROM THE SYSTEM
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5522'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.CivilStatusDescription">
 <summary>
 Marital status of the client.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE14'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.ClientClassificationDescription">
 <summary>
 Classification of the client.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE146'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.HousingDescription">
 <summary>
 Type of housing.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE149'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.BranchOfficeDescription">
 <summary>
 Code of the Branch Office
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.GenderDescription">
 <summary>
 Gender of the client.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE18'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.ProfessionDescription">
 <summary>
 Profession of the client.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE222'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.EconomicStandingDescription">
 <summary>
 Economic standing of the client.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE147'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.TypeOfPersonDescription">
 <summary>
 Code of the person type.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5006'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.EconomicAreaDescription">
 <summary>
 Economic area of the client.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5503'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.DrivingLicenseTypeDescription">
 <summary>
 Code of the driving license type.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5504'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.DisabilityDescription">
 <summary>
 Disability.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5505'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.DrivingLicenseRestrictionsDescription">
 <summary>
 Driving license restrictions.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5521'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.MedicalInstitutionDescription">
 <summary>
 Institution of health to which the client is affiliated.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5523'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.AFPDescription">
 <summary>
 FIELD DELETED FROM THE SYSTEM
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5524'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.TypeOfDisabilityDescription">
 <summary>
 Code of type of disability of the client.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5549'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.DisabilityCauseDescription">
 <summary>
 Cause of disability of the client.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5550'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.NationalityDescription">
 <summary>
 Nationality code.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5518'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.MailingPreferenceDescription">
 <summary>
 Number that identifies the mailing preference of the client.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE4008'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.LanguageDescription">
 <summary>
 Language in which the system shows the information.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE85'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.CIIUCodeDescription">
 <summary>
 CIIU Code
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9015'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.BirthCountryDescription">
 <summary>
 Code of the country of birth
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE66'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.ClientSegmentDescription">
 <summary>
 Segment that occupies a client.
 </summary>
 <remarks>
 This property is associated with the field 'TABLE1506' on the table 'TABLE1506'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.ClientScoreDescription">
 <summary>
 Client&#39;s Banemex score
 </summary>
 <remarks>
 This property is associated with the field 'TABLE1510' on the table 'TABLE1510'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.PhoneNumberDefault">
<summary>
Telephone number. (SPHONE).
</summary>
<remarks>Datasource is 'PHONES.SPHONE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Client.eMailAddressDefault">
<summary>
Email address. (SE_MAIL).
</summary>
<remarks>Datasource is 'ADDRESS.SE_MAIL'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.Client.MasterEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 Permite establecer una valor para una propiedades existe en algunas de las clase que se encuentren en la jerarquía
 </summary>
 <param name="entityName">Nombre de la entidad o clase o table</param>
 <param name="propertyName">Nombre de la propiedad o campo</param>
 <param name="value">Valor a ser asignado a la propiedad o campo</param>
 <returns>Verdadero en caso de que el valor pueda ser asignado, falso en caso contrario</returns>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.ClientCollection">
 <summary>
 Collection for Client class
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientCollection.AddClient">
 <summary>
 Add an instance of class 'Client' in the ClientCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientCollection.Compare(InMotionGIT.Client.Entity.Contracts.ClientCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.ClientBankAccount">
 <summary>
 Banks accounts of a client.
 </summary>
<remarks>Data-source is 'BK_ACCOUNT'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.CreateNewClientBankAccount">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientBankAccount._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientBankAccount._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientBankAccount._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientBankAccount._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientBankAccount._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientBankAccount._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientBankAccount._BankCode">
<summary>
Code of the bank.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientBankAccount._BankAccount">
<summary>
Number of the bank account.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientBankAccount._TypeOfBankAccount">
<summary>
Type of bank account.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientBankAccount._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientBankAccount._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientBankAccount._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientBankAccount._ReimbursementAccountIndicator">
<summary>
Indicates if the account for deposits of medical expenses reimbursement
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientBankAccount._IdConsecutive">
<summary>
Consecutive number to indentify the record
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientBankAccount._UniformBankcode">
<summary>
Uniform Bank code
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientBankAccount._CodeofTheCurrency">
<summary>
Code of The Currency
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientBankAccount._BankAgency">
<summary>
Code of The Bank Agency.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientBankAccount._SwifftAccount">
<summary>
Swifft Account number
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientBankAccount._BankOffice">
<summary>
Bank office number
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientBankAccount._SABAACC">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientBankAccount._SDOMICILIOCTA">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientBankAccount._SIBAN">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientBankAccount._STERM">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientBankAccount._AccountRgisteredInUSA">
<summary>
It indicates that the account is registered in USA
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'BK_ACCOUNT.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.BankCode">
<summary>
Code of the bank. (NBANKEXT)..
</summary>
<remarks>Data-source is 'BK_ACCOUNT.NBANKEXT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.BankAccount">
<summary>
Number of the bank account. (SACCOUNT)..
</summary>
<remarks>Data-source is 'BK_ACCOUNT.SACCOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.TypeOfBankAccount">
<summary>
Type of bank account. (NTYP_ACC)..
</summary>
<remarks>Data-source is 'BK_ACCOUNT.NTYP_ACC'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'BK_ACCOUNT.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'BK_ACCOUNT.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'BK_ACCOUNT.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.ReimbursementAccountIndicator">
<summary>
Indicates if the account for deposits of medical expenses reimbursement (SDEPOSIT)..
</summary>
<remarks>Data-source is 'BK_ACCOUNT.SDEPOSIT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.IdConsecutive">
<summary>
Consecutive number to indentify the record (NIDCONSEC)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BK_ACCOUNT.NIDCONSEC'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.UniformBankcode">
<summary>
Uniform Bank code (SACC_CBU)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BK_ACCOUNT.SACC_CBU'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.CodeofTheCurrency">
<summary>
Code of The Currency (NCURRENCY)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BK_ACCOUNT.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.BankAgency">
<summary>
Code of The Bank Agency. (NBK_AGENCY)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BK_ACCOUNT.NBK_AGENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.SwifftAccount">
<summary>
Swifft Account number (SSWIFTACC)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BK_ACCOUNT.SSWIFTACC'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.BankOffice">
<summary>
Bank office number (NBANKOFFIC)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BK_ACCOUNT.NBANKOFFIC'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.SABAACC">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BK_ACCOUNT.SABAACC'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.SDOMICILIOCTA">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BK_ACCOUNT.SDOMICILIOCTA'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.SIBAN">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BK_ACCOUNT.SIBAN'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.STERM">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BK_ACCOUNT.STERM'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.AccountRgisteredInUSA">
<summary>
It indicates that the account is registered in USA (SUSAREG_IND)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BK_ACCOUNT.SUSAREG_IND'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.Compare(InMotionGIT.Client.Entity.Contracts.ClientBankAccount,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClientBankAccountItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccount.CodeofTheCurrencyDescription">
 <summary>
 Code of The Currency
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE11'.
 </remarks>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.ClientBankAccountCollection">
 <summary>
 Collection for ClientBankAccount class
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientBankAccountCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientBankAccountCollection.AddClientBankAccount">
 <summary>
 Add an instance of class 'ClientBankAccount' in the ClientBankAccountCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientBankAccountCollection.Compare(InMotionGIT.Client.Entity.Contracts.ClientBankAccountCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientBankAccountCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientBankAccountCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientBankAccountCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.ClientContactCompany">
 <summary>
 Client Contact Company.
 </summary>
<remarks>Data-source is 'CONTAC_CLI'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.CreateNewClientContactCompany">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientContactCompany._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientContactCompany._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientContactCompany._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientContactCompany._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientContactCompany._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientContactCompany._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientContactCompany._ContactID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientContactCompany._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientContactCompany._Order">
<summary>
Order in which the client contacts are to be searched.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientContactCompany._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientContactCompany._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientContactCompany._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientContactCompany._Position">
<summary>
Position of the contact in the company.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientContactCompany._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'CONTAC_CLI.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.ContactID">
<summary>
Code of the client. (SCLIENTR)..
</summary>
<remarks>Data-source is 'CONTAC_CLI.SCLIENTR'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CONTAC_CLI.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.Order">
<summary>
Order in which the client contacts are to be searched. (NORDER)..
</summary>
<remarks>Data-source is 'CONTAC_CLI.NORDER'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CONTAC_CLI.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'CONTAC_CLI.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CONTAC_CLI.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.Position">
<summary>
Position of the contact in the company. (NPOSITION)..
</summary>
<remarks>Data-source is 'CONTAC_CLI.NPOSITION'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.Compare(InMotionGIT.Client.Entity.Contracts.ClientContactCompany,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClientContactCompanyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientContactCompany.PositionDescription">
 <summary>
 Position of the contact in the company.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE283'.
 </remarks>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.ClientContactCompanyCollection">
 <summary>
 Collection for ClientContactCompany class
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientContactCompanyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientContactCompanyCollection.AddClientContactCompany">
 <summary>
 Add an instance of class 'ClientContactCompany' in the ClientContactCompanyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientContactCompanyCollection.Compare(InMotionGIT.Client.Entity.Contracts.ClientContactCompanyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientContactCompanyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientContactCompanyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientContactCompanyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.ClientDocument">
 <summary>
 
 </summary>
<remarks>Data-source is 'CLIDOCUMENTS'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientDocument.CreateNewClientDocument">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientDocument.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientDocument._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientDocument._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientDocument._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientDocument._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientDocument._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientDocument._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientDocument._DocumentType">
<summary>
Type code of Client IDs
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientDocument._DocumentNUmber">
<summary>
Number/Code of the Client IDs (document number)
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientDocument._IdIssueDate">
<summary>
Issue date of the Client IDs
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientDocument._IdExpirationDate">
<summary>
Expiry date of the Client IDs.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientDocument._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientDocument._UserCode">
<summary>
Code of the user creating or updating the record
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientDocument._DocumentClass">
<summary>
Class of document or format In this case this field has the fixed value of Documents of Identification (2).
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientDocument._SIPUSER">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientDocument._ExpeditionPlace">
<summary>
Expedition place
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientDocument.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientDocument.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientDocument.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientDocument.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientDocument.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientDocument.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'CLIDOCUMENTS.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientDocument.DocumentType">
<summary>
Type code of Client IDs (NTYPCLIENTDOC)..
</summary>
<remarks>Data-source is 'CLIDOCUMENTS.NTYPCLIENTDOC'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientDocument.DocumentNUmber">
<summary>
Number/Code of the Client IDs (document number) (SCLINUMDOCU)..
</summary>
<remarks>Data-source is 'CLIDOCUMENTS.SCLINUMDOCU'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientDocument.IdIssueDate">
<summary>
Issue date of the Client IDs (DISSUEDAT)..
</summary>
<remarks>Data-source is 'CLIDOCUMENTS.DISSUEDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientDocument.IdExpirationDate">
<summary>
Expiry date of the Client IDs. (DEXPIRDAT)..
</summary>
<remarks>Data-source is 'CLIDOCUMENTS.DEXPIRDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientDocument.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLIDOCUMENTS.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientDocument.UserCode">
<summary>
Code of the user creating or updating the record (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLIDOCUMENTS.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientDocument.DocumentClass">
<summary>
Class of document or format In this case this field has the fixed value of Documents of Identification (2). (NCLASSTYPDOC)..
</summary>
<remarks>Data-source is 'CLIDOCUMENTS.NCLASSTYPDOC'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientDocument.SIPUSER">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIDOCUMENTS.SIPUSER'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientDocument.ExpeditionPlace">
<summary>
Expedition place (SEXPEDPLACE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIDOCUMENTS.SEXPEDPLACE'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientDocument.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientDocument.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientDocument.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientDocument.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientDocument.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientDocument.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientDocument.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientDocument.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientDocument.Compare(InMotionGIT.Client.Entity.Contracts.ClientDocument,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClientDocumentItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientDocument.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientDocument.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientDocument.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientDocument.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.ClientDocumentCollection">
 <summary>
 Collection for ClientDocument class
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientDocumentCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientDocumentCollection.AddClientDocument">
 <summary>
 Add an instance of class 'ClientDocument' in the ClientDocumentCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientDocumentCollection.Compare(InMotionGIT.Client.Entity.Contracts.ClientDocumentCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientDocumentCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientDocumentCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientDocumentCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.ClientEvaluation">
 <summary>
 
 </summary>
<remarks>Data-source is 'CLIENT_EVALRISK'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.CreateNewClientEvaluation">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._OtherDatesOfRiskEvaluation">
<summary>
Client information.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._YearsInTheMarket">
<summary>
Company Profile Years of the business in the market
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._QuantityOfEmployees">
<summary>
Company Profile Number of employees
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._RiskCountry">
<summary>
Company Profile Risk Country
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._CompanyType">
<summary>
Company Profile Type of company
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._ProductService">
<summary>
Company Profile Type of product/service
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._Risk">
<summary>
Company Profile Risk
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._CommercialActivities">
<summary>
Company Profile Commercial activities.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._BankReferences">
<summary>
Bank, commercial and judicial references Bank references
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._CommercialReferences">
<summary>
Bank, commercial and judicial references Commercial references
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._JudicialReferences">
<summary>
Bank, commercial and judicial references Judicial references
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._PaymentTerm">
<summary>
Bank, commercial and judicial references
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._InsuredPersons">
<summary>
Bank, commercial and judicial references Years as insured persons
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._ProvidersPayment">
<summary>
Bank, commercial and judicial references Payment of Providers
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._ReferencesCode">
<summary>
Bank, commercial and judicial references
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._DICOMDescription">
<summary>
Bank, commercial and judicial references DICOM description
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._DebtReason">
<summary>
Reason for the debt
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._CurrentRatio">
<summary>
Financial indicators Current ratio
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._QuickRatio">
<summary>
Financial indicators Quick Ratio
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._Profitability">
<summary>
Financial Indicators Profitability
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._SalesGrowth">
<summary>
Financial Indicators Sales Growth
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._EconomicArea">
<summary>
Financial Indicators Economic area
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._FinancialIndicator">
<summary>
Financial Indicators Financial area
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._ClassificationRating">
<summary>
Classification of the client (Rating).
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._RatingDescription">
<summary>
Description of the Rating
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._OriginCountry">
<summary>
Client information Country of origin
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._Comments1">
<summary>
Company Profile Comments 1
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._Comments2">
<summary>
Bank, commercial and judicial references Comments 2
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._Comments3">
<summary>
Financial Indicators Comments 3
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._Comments4">
<summary>
Rating Comments 4
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._LineOfBusiness">
<summary>
Client information Line of Business of the company
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._CreditLimit">
<summary>
Credit limit.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientEvaluation._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.OtherDatesOfRiskEvaluation">
<summary>
Client information. (DOTHERDATE)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.DOTHERDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.YearsInTheMarket">
<summary>
Company Profile Years of the business in the market (NSINCEYEAR)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NSINCEYEAR'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.QuantityOfEmployees">
<summary>
Company Profile Number of employees (NNUMEMPLOYERS)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NNUMEMPLOYERS'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.RiskCountry">
<summary>
Company Profile Risk Country (NCNTRYRISK)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NCNTRYRISK'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.CompanyType">
<summary>
Company Profile Type of company (NTYPECIA)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NTYPECIA'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.ProductService">
<summary>
Company Profile Type of product/service (NTYPEPRODUCT)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NTYPEPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.Risk">
<summary>
Company Profile Risk (NRISK)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NRISK'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.CommercialActivities">
<summary>
Company Profile Commercial activities. (NACTBUS)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NACTBUS'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.BankReferences">
<summary>
Bank, commercial and judicial references Bank references (NREFBANK)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NREFBANK'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.CommercialReferences">
<summary>
Bank, commercial and judicial references Commercial references (NREFBUS)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NREFBUS'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.JudicialReferences">
<summary>
Bank, commercial and judicial references Judicial references (NREFLAW)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NREFLAW'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.PaymentTerm">
<summary>
Bank, commercial and judicial references (NNUMPAYS)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NNUMPAYS'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.InsuredPersons">
<summary>
Bank, commercial and judicial references Years as insured persons (NOLDINSURANCE)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NOLDINSURANCE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.ProvidersPayment">
<summary>
Bank, commercial and judicial references Payment of Providers (NPROPAY)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NPROPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.ReferencesCode">
<summary>
Bank, commercial and judicial references (NCODDICOM)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NCODDICOM'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.DICOMDescription">
<summary>
Bank, commercial and judicial references DICOM description (SDESDICOM)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.SDESDICOM'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.DebtReason">
<summary>
Reason for the debt (NCREDITREASON)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NCREDITREASON'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.CurrentRatio">
<summary>
Financial indicators Current ratio (NLIQCURRENT)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NLIQCURRENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.QuickRatio">
<summary>
Financial indicators Quick Ratio (NLIQACD)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NLIQACD'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.Profitability">
<summary>
Financial Indicators Profitability (NRENTABILITY)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NRENTABILITY'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.SalesGrowth">
<summary>
Financial Indicators Sales Growth (NGROWSALES)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NGROWSALES'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.EconomicArea">
<summary>
Financial Indicators Economic area (NECONOMIC)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NECONOMIC'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.FinancialIndicator">
<summary>
Financial Indicators Financial area (NFINANCIAL)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NFINANCIAL'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.ClassificationRating">
<summary>
Classification of the client (Rating). (NCODRATING)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NCODRATING'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.RatingDescription">
<summary>
Description of the Rating (NDESRATING)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NDESRATING'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.OriginCountry">
<summary>
Client information Country of origin (NCOUNTRY)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NCOUNTRY'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.Comments1">
<summary>
Company Profile Comments 1 (SNOTE1)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.SNOTE1'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.Comments2">
<summary>
Bank, commercial and judicial references Comments 2 (SNOTE2)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.SNOTE2'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.Comments3">
<summary>
Financial Indicators Comments 3 (SNOTE3)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.SNOTE3'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.Comments4">
<summary>
Rating Comments 4 (SNOTE4)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.SNOTE4'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.LineOfBusiness">
<summary>
Client information Line of Business of the company (NBRANCHCIA)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NBRANCHCIA'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.CreditLimit">
<summary>
Credit limit. (NLIMITCREDIT)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NLIMITCREDIT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'CLIENT_EVALRISK.NCURRENCY'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.Compare(InMotionGIT.Client.Entity.Contracts.ClientEvaluation,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClientEvaluationItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.YearsInTheMarketDescription">
 <summary>
 Company Profile Years of the business in the market
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9010'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.RiskCountryDescription">
 <summary>
 Company Profile Risk Country
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9011'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.CompanyTypeDescription">
 <summary>
 Company Profile Type of company
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9012'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.ProductServiceDescription">
 <summary>
 Company Profile Type of product/service
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9013'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.RiskDescription">
 <summary>
 Company Profile Risk
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9014'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.CommercialActivitiesDescription">
 <summary>
 Company Profile Commercial activities.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9015'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.BankReferencesDescription">
 <summary>
 Bank, commercial and judicial references Bank references
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9016'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.CommercialReferencesDescription">
 <summary>
 Bank, commercial and judicial references Commercial references
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9017'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.JudicialReferencesDescription">
 <summary>
 Bank, commercial and judicial references Judicial references
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9018'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.PaymentTermDescription">
 <summary>
 Bank, commercial and judicial references
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9019'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.InsuredPersonsDescription">
 <summary>
 Bank, commercial and judicial references Years as insured persons
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9020'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.ProvidersPaymentDescription">
 <summary>
 Bank, commercial and judicial references Payment of Providers
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9021'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.DebtReasonDescription">
 <summary>
 Reason for the debt
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9022'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.CurrentRatioDescription">
 <summary>
 Financial indicators Current ratio
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9023'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.QuickRatioDescription">
 <summary>
 Financial indicators Quick Ratio
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9024'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.ProfitabilityDescription">
 <summary>
 Financial Indicators Profitability
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9025'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.SalesGrowthDescription">
 <summary>
 Financial Indicators Sales Growth
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9026'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.EconomicAreaDescription">
 <summary>
 Financial Indicators Economic area
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9027'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.FinancialIndicatorDescription">
 <summary>
 Financial Indicators Financial area
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9028'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.ClassificationRatingDescription">
 <summary>
 Classification of the client (Rating).
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9029'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.RatingDescriptionDescription">
 <summary>
 Description of the Rating
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9030'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.OriginCountryDescription">
 <summary>
 Client information Country of origin
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE66'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluation.LineOfBusinessDescription">
 <summary>
 Client information Line of Business of the company
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9031'.
 </remarks>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.ClientEvaluationCollection">
 <summary>
 Collection for ClientEvaluation class
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientEvaluationCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientEvaluationCollection.AddClientEvaluation">
 <summary>
 Add an instance of class 'ClientEvaluation' in the ClientEvaluationCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientEvaluationCollection.Compare(InMotionGIT.Client.Entity.Contracts.ClientEvaluationCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientEvaluationCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientEvaluationCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientEvaluationCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation">
 <summary>
 Financial information of the client.
 </summary>
<remarks>Data-source is 'FINANC_CLI'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.CreateNewClientFinantialInformation">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation._DateOfTheInformation">
<summary>
Date of the client financial information.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation._Concept">
<summary>
Concept code of the client financial information.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation._Units">
<summary>
Number of units of the concept.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation._NoteID">
<summary>
Number of the note containing the comments.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation._Amount">
<summary>
Amount of this concept.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation._ConceptStatus">
<summary>
Status of the concept
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'FINANC_CLI.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.DateOfTheInformation">
<summary>
Date of the client financial information. (DFINANDATE)..
</summary>
<remarks>Data-source is 'FINANC_CLI.DFINANDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.Concept">
<summary>
Concept code of the client financial information. (NCONCEPT)..
</summary>
<remarks>Data-source is 'FINANC_CLI.NCONCEPT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.Units">
<summary>
Number of units of the concept. (NUNITS)..
</summary>
<remarks>Data-source is 'FINANC_CLI.NUNITS'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'FINANC_CLI.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'FINANC_CLI.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.NoteID">
<summary>
Number of the note containing the comments. (NNOTENUM)..
</summary>
<remarks>Data-source is 'FINANC_CLI.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'FINANC_CLI.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.Amount">
<summary>
Amount of this concept. (NAMOUNT)..
</summary>
<remarks>Data-source is 'FINANC_CLI.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.ConceptStatus">
<summary>
Status of the concept (NFINANSTAT)..
</summary>
<remarks>Data-source is 'FINANC_CLI.NFINANSTAT'.</remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.Compare(InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClientFinantialInformationItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.ConceptDescription">
 <summary>
 Concept code of the client financial information.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE416'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformation.ConceptStatusDescription">
 <summary>
 Status of the concept
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE185'.
 </remarks>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformationCollection">
 <summary>
 Collection for ClientFinantialInformation class
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformationCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformationCollection.AddClientFinantialInformation">
 <summary>
 Add an instance of class 'ClientFinantialInformation' in the ClientFinantialInformationCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformationCollection.Compare(InMotionGIT.Client.Entity.Contracts.ClientFinantialInformationCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformationCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformationCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientFinantialInformationCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.ClientHobby">
 <summary>
 Hobbies related with a client.
 </summary>
<remarks>Data-source is 'HOBBY'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientHobby.CreateNewClientHobby">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientHobby.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientHobby._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientHobby._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientHobby._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientHobby._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientHobby._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientHobby._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientHobby._Hobby">
<summary>
Code of hobby.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientHobby._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientHobby._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientHobby.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientHobby.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientHobby.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientHobby.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientHobby.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientHobby.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'HOBBY.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientHobby.Hobby">
<summary>
Code of hobby. (NHOBBY)..
</summary>
<remarks>Data-source is 'HOBBY.NHOBBY'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientHobby.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'HOBBY.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientHobby.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'HOBBY.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientHobby.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientHobby.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientHobby.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientHobby.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientHobby.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientHobby.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientHobby.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientHobby.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientHobby.Compare(InMotionGIT.Client.Entity.Contracts.ClientHobby,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClientHobbyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientHobby.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientHobby.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientHobby.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientHobby.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientHobby.HobbyDescription">
 <summary>
 Code of hobby.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5506'.
 </remarks>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.ClientHobbyCollection">
 <summary>
 Collection for ClientHobby class
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientHobbyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientHobbyCollection.AddClientHobby">
 <summary>
 Add an instance of class 'ClientHobby' in the ClientHobbyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientHobbyCollection.Compare(InMotionGIT.Client.Entity.Contracts.ClientHobbyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientHobbyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientHobbyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientHobbyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow">
 <summary>
 Sequence of windows for client updating.
 </summary>
<remarks>Data-source is 'TAB_WINCLI'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.CreateNewClientProcessingWindow">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow._ClientType">
<summary>
Type of client to whom the windows sequence is defined
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow._TypeOfSequence">
<summary>
Type of sequence or client updating.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow._Sequence">
<summary>
Order in which the folders appear in the window.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow._WindowLogicalCode">
<summary>
Code of the window (logical code).
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow._SelectedByDefault">
<summary>
Indicator of &#34;selected by default&#34; for the Treatment of policy.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow._RequiredWindow">
<summary>
Indicator of required window
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.ClientType">
<summary>
Type of client to whom the windows sequence is defined (STYPE_CLIE)..
</summary>
<remarks>Data-source is 'TAB_WINCLI.STYPE_CLIE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.TypeOfSequence">
<summary>
Type of sequence or client updating. (STYPE_SEQ)..
</summary>
<remarks>Data-source is 'TAB_WINCLI.STYPE_SEQ'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.Sequence">
<summary>
Order in which the folders appear in the window. (NSEQUENCE)..
</summary>
<remarks>Data-source is 'TAB_WINCLI.NSEQUENCE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.WindowLogicalCode">
<summary>
Code of the window (logical code). (SCODISPL)..
</summary>
<remarks>Data-source is 'TAB_WINCLI.SCODISPL'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_WINCLI.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.SelectedByDefault">
<summary>
Indicator of &#34;selected by default&#34; for the Treatment of policy. (SDEFAULTI)..
</summary>
<remarks>Data-source is 'TAB_WINCLI.SDEFAULTI'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.RequiredWindow">
<summary>
Indicator of required window (SREQUIRE)..
</summary>
<remarks>Data-source is 'TAB_WINCLI.SREQUIRE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_WINCLI.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.Compare(InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClientProcessingWindowItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindow.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindowCollection">
 <summary>
 Collection for ClientProcessingWindow class
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindowCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindowCollection.AddClientProcessingWindow">
 <summary>
 Add an instance of class 'ClientProcessingWindow' in the ClientProcessingWindowCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindowCollection.Compare(InMotionGIT.Client.Entity.Contracts.ClientProcessingWindowCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindowCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindowCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientProcessingWindowCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature">
 <summary>
 ClientSpecialFeatures
 </summary>
<remarks>Data-source is 'CLIENT_SF'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.CreateNewClientSpecialFeature">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature._RecordEffectiveDate">
<summary>
Date from which the record is valid
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature._CheckDigit">
<summary>
Verificator digit of the client code
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature._PoliticalPosition">
<summary>
Political position
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature._GrantingDate">
<summary>
Date of granting
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature._ConditionExpirationDate">
<summary>
Expiration date of the condition
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature._CancellationDate">
<summary>
Date when the record is cancelled
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature._UserCode">
<summary>
Code of the user creating or updating the record
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature._PlaceOfBirth">
<summary>
Place of birth
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature._SecondNationality">
<summary>
Second nationality
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature._ResidencePreviousCountry">
<summary>
Country of previous residence
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature._CustomerAddressInTheUS">
<summary>
Customer home address in the US
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature._NameOfRepresentativeInUS">
<summary>
Name of representative in US
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature._PhoneNumberInUS">
<summary>
Phone number in US
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature._UAccountNumber">
<summary>
US account
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature._USSocialSecurityNumber">
<summary>
Social Security number in US
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature._ItinTaxpayerID">
<summary>
Itin taxpayer ID
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature._IRSReport">
<summary>
IRS Report
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'CLIENT_SF.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.RecordEffectiveDate">
<summary>
Date from which the record is valid (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CLIENT_SF.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.CheckDigit">
<summary>
Verificator digit of the client code (SDIGIT)..
</summary>
<remarks>Data-source is 'CLIENT_SF.SDIGIT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.PoliticalPosition">
<summary>
Political position (NPOSITION)..
</summary>
<remarks>Data-source is 'CLIENT_SF.NPOSITION'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.GrantingDate">
<summary>
Date of granting (DSTARTCONDITION)..
</summary>
<remarks>Data-source is 'CLIENT_SF.DSTARTCONDITION'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.ConditionExpirationDate">
<summary>
Expiration date of the condition (DENDCONDITION)..
</summary>
<remarks>Data-source is 'CLIENT_SF.DENDCONDITION'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.CancellationDate">
<summary>
Date when the record is cancelled (DNULLDATE)..
</summary>
<remarks>Data-source is 'CLIENT_SF.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.UserCode">
<summary>
Code of the user creating or updating the record (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLIENT_SF.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLIENT_SF.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.PlaceOfBirth">
<summary>
Place of birth (NPLACEBIRTH)..
</summary>
<remarks>Data-source is 'CLIENT_SF.NPLACEBIRTH'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.SecondNationality">
<summary>
Second nationality (NSECOND_NATIONALITY)..
</summary>
<remarks>Data-source is 'CLIENT_SF.NSECOND_NATIONALITY'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.ResidencePreviousCountry">
<summary>
Country of previous residence (NRESIDENT_FORMER)..
</summary>
<remarks>Data-source is 'CLIENT_SF.NRESIDENT_FORMER'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.CustomerAddressInTheUS">
<summary>
Customer home address in the US (SUSADDRES)..
</summary>
<remarks>Data-source is 'CLIENT_SF.SUSADDRES'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.NameOfRepresentativeInUS">
<summary>
Name of representative in US (SUSLEGAL_PERSON)..
</summary>
<remarks>Data-source is 'CLIENT_SF.SUSLEGAL_PERSON'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.PhoneNumberInUS">
<summary>
Phone number in US (SUSPHONE)..
</summary>
<remarks>Data-source is 'CLIENT_SF.SUSPHONE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.UAccountNumber">
<summary>
US account (SUSACCOUNT)..
</summary>
<remarks>Data-source is 'CLIENT_SF.SUSACCOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.USSocialSecurityNumber">
<summary>
Social Security number in US (SSSN)..
</summary>
<remarks>Data-source is 'CLIENT_SF.SSSN'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.ItinTaxpayerID">
<summary>
Itin taxpayer ID (SUS_ITINNUM)..
</summary>
<remarks>Data-source is 'CLIENT_SF.SUS_ITINNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.IRSReport">
<summary>
IRS Report (SUS_IRSIND)..
</summary>
<remarks>Data-source is 'CLIENT_SF.SUS_IRSIND'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.Compare(InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClientSpecialFeatureItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeature.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeatureCollection">
 <summary>
 Collection for ClientSpecialFeature class
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeatureCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeatureCollection.AddClientSpecialFeature">
 <summary>
 Add an instance of class 'ClientSpecialFeature' in the ClientSpecialFeatureCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeatureCollection.Compare(InMotionGIT.Client.Entity.Contracts.ClientSpecialFeatureCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeatureCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeatureCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSpecialFeatureCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.ClientSport">
 <summary>
 Sports associated with a client.
 </summary>
<remarks>Data-source is 'SPORT'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSport.CreateNewClientSport">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSport.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSport._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSport._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSport._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSport._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSport._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSport._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSport._Sport">
<summary>
Code of the sport.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSport._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientSport._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSport.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSport.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSport.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSport.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSport.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSport.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'SPORT.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSport.Sport">
<summary>
Code of the sport. (NSPORT)..
</summary>
<remarks>Data-source is 'SPORT.NSPORT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSport.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'SPORT.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSport.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'SPORT.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSport.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSport.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSport.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSport.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSport.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSport.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSport.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSport.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSport.Compare(InMotionGIT.Client.Entity.Contracts.ClientSport,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClientSportItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSport.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSport.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSport.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSport.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSport.SportDescription">
 <summary>
 Code of the sport.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE512'.
 </remarks>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.ClientSportCollection">
 <summary>
 Collection for ClientSport class
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSportCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSportCollection.AddClientSport">
 <summary>
 Add an instance of class 'ClientSport' in the ClientSportCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSportCollection.Compare(InMotionGIT.Client.Entity.Contracts.ClientSportCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientSportCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSportCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientSportCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.ClientsRelationship">
 <summary>
 Relationship among clients.
 </summary>
<remarks>Data-source is 'RELATIONS'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.CreateNewClientsRelationship">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientsRelationship._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientsRelationship._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientsRelationship._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientsRelationship._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientsRelationship._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientsRelationship._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientsRelationship._RelatedClientID">
<summary>
Client ID of the related client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientsRelationship._Relationship">
<summary>
Code for relationship among clients.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientsRelationship._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientsRelationship._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientsRelationship._ParticipationPercentage">
<summary>
Participation percentage
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'RELATIONS.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.RelatedClientID">
<summary>
Client ID of the related client. (SCLIENTR)..
</summary>
<remarks>Data-source is 'RELATIONS.SCLIENTR'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.Relationship">
<summary>
Code for relationship among clients. (NRELASHIP)..
</summary>
<remarks>Data-source is 'RELATIONS.NRELASHIP'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'RELATIONS.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'RELATIONS.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.ParticipationPercentage">
<summary>
Participation percentage (RELATIONS)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'RELATIONS.RELATIONS'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.Compare(InMotionGIT.Client.Entity.Contracts.ClientsRelationship,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClientsRelationshipItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientsRelationship.RelationshipDescription">
 <summary>
 Code for relationship among clients.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE15'.
 </remarks>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.ClientsRelationshipCollection">
 <summary>
 Collection for ClientsRelationship class
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientsRelationshipCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientsRelationshipCollection.AddClientsRelationship">
 <summary>
 Add an instance of class 'ClientsRelationship' in the ClientsRelationshipCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientsRelationshipCollection.Compare(InMotionGIT.Client.Entity.Contracts.ClientsRelationshipCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientsRelationshipCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientsRelationshipCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientsRelationshipCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation">
 <summary>
 Client Tax Situation
 </summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.CreateNewClientTaxSituation">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._ClientCode">
<summary>
Client Code
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._ProfitSituation">
<summary>
Profit Situation
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._ProfitRetainedCondition">
<summary>
Profit Retained Condition
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._PercentExemptionOfProfitTax">
<summary>
Percent Exemption of profit tax
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._FromDateExemption">
<summary>
Date From exemption
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._DateToExemption">
<summary>
Date to exemption
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._RegimeProfits">
<summary>
Type of Regime profits
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._ProfitsRetentionAgentIndicator">
<summary>
Profits Retention Agent Indicator
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._SIJPSituation">
<summary>
Condition Code of SIJP
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._SelfEmployedWorkersIndicator">
<summary>
Self-employed workers indicator
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._Association">
<summary>
Association Indicator
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._InscriptionNumber">
<summary>
Inscription Number
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._PreviousInscriptionNumber">
<summary>
Previous Inscription Number
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._ConditionGrossIncome">
<summary>
Condition of gross income
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._ItemCodeForExemption">
<summary>
Condition Code for tax Exemption
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._VATSituation">
<summary>
Condition Code of VAT
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._VatRetentionAgentindicator">
<summary>
Retention Agent for VAT
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._CollectionAgentVAT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._InvoicetypeM">
<summary>
Invoice type &#39;m&#39;
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._VATCondition">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._PercentPromotionExclution">
<summary>
Percentage of Promotion/Exclution
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._FromDateExclutionVAT">
<summary>
From Date Exclution VAT
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._ToDateExclutionVAT">
<summary>
To Date ExclutionVAT
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._PercentVATException">
<summary>
Rate of VAT exception
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._FromDateexemptionVAT">
<summary>
From Date exemption VAT
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._ToDateexemptionVAT">
<summary>
To Date exemption VAT
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.ClientCode">
<summary>
Client Code (SCLIENT)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.ProfitSituation">
<summary>
Profit Situation (NPROFIT_SITUATION)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.NPROFIT_SITUATION'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.ProfitRetainedCondition">
<summary>
Profit Retained Condition (SPROFITCOND)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.SPROFITCOND'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.PercentExemptionOfProfitTax">
<summary>
Percent Exemption of profit tax (NEXEMRATE)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.NEXEMRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.FromDateExemption">
<summary>
Date From exemption (DEXEMPROFIT_FROM)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.DEXEMPROFIT_FROM'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.DateToExemption">
<summary>
Date to exemption (DEXEMPROFIT_TO)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.DEXEMPROFIT_TO'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.RegimeProfits">
<summary>
Type of Regime profits (SCATEGORY)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.SCATEGORY'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.ProfitsRetentionAgentIndicator">
<summary>
Profits Retention Agent Indicator (SRETAGEPROF)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.SRETAGEPROF'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.SIJPSituation">
<summary>
Condition Code of SIJP (NSIJP_SITUATION)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.NSIJP_SITUATION'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.SelfEmployedWorkersIndicator">
<summary>
Self-employed workers indicator (SSELFWORKINDIC)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.SSELFWORKINDIC'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.Association">
<summary>
Association Indicator (SASSOCIATION)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.SASSOCIATION'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.InscriptionNumber">
<summary>
Inscription Number (NINSCRIPTION)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.NINSCRIPTION'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.PreviousInscriptionNumber">
<summary>
Previous Inscription Number (NPREVINSCRIPTION)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.NPREVINSCRIPTION'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.ConditionGrossIncome">
<summary>
Condition of gross income (SIIBBCOND)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.SIIBBCOND'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.ItemCodeForExemption">
<summary>
Condition Code for tax Exemption (NEXEM_SITUATION)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.NEXEM_SITUATION'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.VATSituation">
<summary>
Condition Code of VAT (NVAT_SITUATION)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.NVAT_SITUATION'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.VatRetentionAgentindicator">
<summary>
Retention Agent for VAT (SRETENTIONAGENT)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.SRETENTIONAGENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.CollectionAgentVAT">
<summary>
 (SCOLLECTAGENT)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.SCOLLECTAGENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.InvoicetypeM">
<summary>
Invoice type &#39;m&#39; (SINVOICEM)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.SINVOICEM'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.VATCondition">
<summary>
 (SVATCOND)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.SVATCOND'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.PercentPromotionExclution">
<summary>
Percentage of Promotion/Exclution (NRATEEXCVAT)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.NRATEEXCVAT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.FromDateExclutionVAT">
<summary>
From Date Exclution VAT (DEXCLVAT_FROM)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.DEXCLVAT_FROM'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.ToDateExclutionVAT">
<summary>
To Date ExclutionVAT (DEXCLVAT_TO)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.DEXCLVAT_TO'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.PercentVATException">
<summary>
Rate of VAT exception (NRATEEXEVAT)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.NRATEEXEVAT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.FromDateexemptionVAT">
<summary>
From Date exemption VAT (DEXEMPVAT_FROM)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.DEXEMPVAT_FROM'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.ToDateexemptionVAT">
<summary>
To Date exemption VAT (DEXEMPVAT_TO)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.DEXEMPVAT_TO'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_SITUA.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.Compare(InMotionGIT.Client.Entity.Contracts.ClientTaxSituation,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClientTaxSituationItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.ProfitSituationDescription">
 <summary>
 Profit Situation
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6702' on the table 'TABLE6702'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.SIJPSituationDescription">
 <summary>
 Condition Code of SIJP
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6701' on the table 'TABLE6701'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.ItemCodeForExemptionDescription">
 <summary>
 Condition Code for tax Exemption
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6703' on the table 'TABLE6703'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituation.VATSituationDescription">
 <summary>
 Condition Code of VAT
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6700' on the table 'TABLE6700'.
 </remarks>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.ClientTaxSituationCollection">
 <summary>
 Collection for ClientTaxSituation class
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientTaxSituationCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientTaxSituationCollection.AddClientTaxSituation">
 <summary>
 Add an instance of class 'ClientTaxSituation' in the ClientTaxSituationCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientTaxSituationCollection.Compare(InMotionGIT.Client.Entity.Contracts.ClientTaxSituationCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.ClientTaxSituationCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientTaxSituationCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.ClientTaxSituationCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating">
 <summary>
 Commercial Activity used for Rating
 </summary>
<remarks>Data-source is 'TAB_ACTCOMMER'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.CreateNewCommercialActivityRating">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating._CommercialActivityCode">
<summary>
Commercial Activity Code
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating._InsurableCommercialActivityIndicator">
<summary>
Insurable Commercial Activity Indicator
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating._InspectCommerceIndicator">
<summary>
Inspect Commerce Indicator
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.CommercialActivityCode">
<summary>
Commercial Activity Code (NCOMMER_ACTIVITY)..
</summary>
<remarks>Data-source is 'TAB_ACTCOMMER.NCOMMER_ACTIVITY'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAB_ACTCOMMER.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.InsurableCommercialActivityIndicator">
<summary>
Insurable Commercial Activity Indicator (SINSURABLEACTCOMMER)..
</summary>
<remarks>Data-source is 'TAB_ACTCOMMER.SINSURABLEACTCOMMER'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.InspectCommerceIndicator">
<summary>
Inspect Commerce Indicator (SINSPECTACTIVITY)..
</summary>
<remarks>Data-source is 'TAB_ACTCOMMER.SINSPECTACTIVITY'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAB_ACTCOMMER.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_ACTCOMMER.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_ACTCOMMER.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.Compare(InMotionGIT.Client.Entity.Contracts.CommercialActivityRating,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CommercialActivityRatingItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommercialActivityRating.CommercialActivityCodeDescription">
 <summary>
 Commercial Activity Code
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9015'.
 </remarks>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.CommercialActivityRatingCollection">
 <summary>
 Collection for CommercialActivityRating class
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommercialActivityRatingCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommercialActivityRatingCollection.AddCommercialActivityRating">
 <summary>
 Add an instance of class 'CommercialActivityRating' in the CommercialActivityRatingCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommercialActivityRatingCollection.Compare(InMotionGIT.Client.Entity.Contracts.CommercialActivityRatingCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommercialActivityRatingCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommercialActivityRatingCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommercialActivityRatingCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.CommissionAgreement">
 <summary>
 Tabla de convenios (comisiones) de contratantes-bancos.
 </summary>
<remarks>Data-source is 'COMMISS_AGREE'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.CreateNewCommissionAgreement">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CommissionAgreement._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CommissionAgreement._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CommissionAgreement._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CommissionAgreement._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CommissionAgreement._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CommissionAgreement._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CommissionAgreement._Agreement">
<summary>
Agreement code for the agent in charge of collection.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CommissionAgreement._PercentageOfCommission">
<summary>
Percentage of commission.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CommissionAgreement._EffectiveDate">
<summary>
Effective date of the commission agreement
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CommissionAgreement._EndingDate">
<summary>
Ending date of the commission agreement.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CommissionAgreement._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CommissionAgreement._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'COMMISS_AGREE.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.Agreement">
<summary>
Agreement code for the agent in charge of collection. (NAGREEMENT)..
</summary>
<remarks>Data-source is 'COMMISS_AGREE.NAGREEMENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.PercentageOfCommission">
<summary>
Percentage of commission. (NPERC_COMM)..
</summary>
<remarks>Data-source is 'COMMISS_AGREE.NPERC_COMM'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.EffectiveDate">
<summary>
Effective date of the commission agreement (DINIT_DATE)..
</summary>
<remarks>Data-source is 'COMMISS_AGREE.DINIT_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.EndingDate">
<summary>
Ending date of the commission agreement. (DEND_DATE)..
</summary>
<remarks>Data-source is 'COMMISS_AGREE.DEND_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'COMMISS_AGREE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'COMMISS_AGREE.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.Compare(InMotionGIT.Client.Entity.Contracts.CommissionAgreement,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CommissionAgreementItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommissionAgreement.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.CommissionAgreementCollection">
 <summary>
 Collection for CommissionAgreement class
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommissionAgreementCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommissionAgreementCollection.AddCommissionAgreement">
 <summary>
 Add an instance of class 'CommissionAgreement' in the CommissionAgreementCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommissionAgreementCollection.Compare(InMotionGIT.Client.Entity.Contracts.CommissionAgreementCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CommissionAgreementCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommissionAgreementCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CommissionAgreementCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.CreditCard">
 <summary>
 Credit Card of a Client.
 </summary>
<remarks>Data-source is 'CRED_CARD'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CreditCard.CreateNewCreditCard">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CreditCard.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CreditCard._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CreditCard._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CreditCard._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CreditCard._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CreditCard._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CreditCard._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CreditCard._BankCode">
<summary>
Code of the bank.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CreditCard._CreditCardNumber">
<summary>
Credit Card Number.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CreditCard._CreditCardType">
<summary>
Type of the credit card.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CreditCard._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CreditCard._ExpirationDate">
<summary>
Expiration date of the credit card.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CreditCard._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.CreditCard._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CreditCard.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CreditCard.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CreditCard.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CreditCard.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CreditCard.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CreditCard.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'CRED_CARD.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CreditCard.BankCode">
<summary>
Code of the bank. (NBANKEXT)..
</summary>
<remarks>Data-source is 'CRED_CARD.NBANKEXT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CreditCard.CreditCardNumber">
<summary>
Credit Card Number. (SCREDI_CARD)..
</summary>
<remarks>Data-source is 'CRED_CARD.SCREDI_CARD'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CreditCard.CreditCardType">
<summary>
Type of the credit card. (NCARD_TYPE)..
</summary>
<remarks>Data-source is 'CRED_CARD.NCARD_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CreditCard.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'CRED_CARD.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CreditCard.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CreditCard.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CreditCard.ExpirationDate">
<summary>
Expiration date of the credit card. (DCARDEXPIR)..
</summary>
<remarks>Data-source is 'CRED_CARD.DCARDEXPIR'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CreditCard.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CRED_CARD.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CreditCard.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CRED_CARD.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CreditCard.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CreditCard.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CreditCard.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CreditCard.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CreditCard.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CreditCard.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CreditCard.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CreditCard.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CreditCard.Compare(InMotionGIT.Client.Entity.Contracts.CreditCard,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CreditCardItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CreditCard.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CreditCard.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CreditCard.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CreditCard.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CreditCard.BankCodeDescription">
 <summary>
 Code of the bank.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CreditCard.CreditCardTypeDescription">
 <summary>
 Type of the credit card.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE183'.
 </remarks>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.CreditCardCollection">
 <summary>
 Collection for CreditCard class
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CreditCardCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CreditCardCollection.AddCreditCard">
 <summary>
 Add an instance of class 'CreditCard' in the CreditCardCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CreditCardCollection.Compare(InMotionGIT.Client.Entity.Contracts.CreditCardCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.CreditCardCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CreditCardCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.CreditCardCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient">
 <summary>
 Gross Revenue Of The Client
 </summary>
<remarks>Data-source is 'CLIENT_TAX_IIBB'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.CreateNewGrossRevenueOfTheClient">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient._ClientCode">
<summary>
Client Code
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient._Province">
<summary>
Province
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient._Inscription">
<summary>
Inscription code that indicates that client is incripted in this province
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient._PerceptionAgent">
<summary>
Perception Agent
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient._WithHoldingAgentIndicator">
<summary>
Withholding agent Indicator
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient._IBBExemptionInd">
<summary>
IBB exemption indicator
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient._RateExemptionIIBB">
<summary>
Percentage of exemption IIBB
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient._FromDateExemptionIIBB">
<summary>
From Date exemption IIBB
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient._ToDateExemptionIIBB">
<summary>
To Date exemption IIBB
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient._RateCM05">
<summary>
Rate to be applied to the tax base for policy unnamed
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient._FromRateCM05">
<summary>
From date which are considered to be implemented the CM05 rate
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient._ToRateCM05">
<summary>
date until which are considered to be implemented the CM05 rate
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient._Reason">
<summary>
Short Descrition for the reason of exclusion
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.ClientCode">
<summary>
Client Code (SCLIENT)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_IIBB.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.Province">
<summary>
Province (NPROVINCE)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_IIBB.NPROVINCE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.Inscription">
<summary>
Inscription code that indicates that client is incripted in this province (SINSCRIPTION)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_IIBB.SINSCRIPTION'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.PerceptionAgent">
<summary>
Perception Agent (SPERCEPTIONAGENT)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_IIBB.SPERCEPTIONAGENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.WithHoldingAgentIndicator">
<summary>
Withholding agent Indicator (SRETENTIONAGENT)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_IIBB.SRETENTIONAGENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.IBBExemptionInd">
<summary>
IBB exemption indicator (SEXEMIBIND)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_IIBB.SEXEMIBIND'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.RateExemptionIIBB">
<summary>
Percentage of exemption IIBB (NRATEEXEMIB)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_IIBB.NRATEEXEMIB'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.FromDateExemptionIIBB">
<summary>
From Date exemption IIBB (DEXEMIB_FROM)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_IIBB.DEXEMIB_FROM'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.ToDateExemptionIIBB">
<summary>
To Date exemption IIBB (DEXEMIB_TO)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_IIBB.DEXEMIB_TO'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.RateCM05">
<summary>
Rate to be applied to the tax base for policy unnamed (NRATECM05)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_IIBB.NRATECM05'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.FromRateCM05">
<summary>
From date which are considered to be implemented the CM05 rate (DCM05_FROM)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_IIBB.DCM05_FROM'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.ToRateCM05">
<summary>
date until which are considered to be implemented the CM05 rate (DCM05_TO)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_IIBB.DCM05_TO'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.Reason">
<summary>
Short Descrition for the reason of exclusion (SEXCREASON)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_IIBB.SEXCREASON'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_IIBB.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_IIBB.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.Compare(InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="GrossRevenueOfTheClientItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClient.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClientCollection">
 <summary>
 Collection for GrossRevenueOfTheClient class
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClientCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClientCollection.AddGrossRevenueOfTheClient">
 <summary>
 Add an instance of class 'GrossRevenueOfTheClient' in the GrossRevenueOfTheClientCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClientCollection.Compare(InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClientCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClientCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClientCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.GrossRevenueOfTheClientCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.IdentifierClientType">
 <summary>
 
 </summary>
<remarks>Data-source is 'CLIENT_TYP'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.CreateNewIdentifierClientType">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.IdentifierClientType._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.IdentifierClientType._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.IdentifierClientType._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.IdentifierClientType._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.IdentifierClientType._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.IdentifierClientType._TypeOfClient">
<summary>
Type of Client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.IdentifierClientType._Descriptionofclienttype">
<summary>
Description of client type.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.IdentifierClientType._Theclienttypecorrespondstothenaturalperson">
<summary>
The client type corresponds to the person.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.IdentifierClientType._Theclienttypecorrespondstothetemporaryclientcodeidentification">
<summary>
The client type corresponds to the temporary client code identification.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.IdentifierClientType._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.IdentifierClientType._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.IdentifierClientType._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.TypeOfClient">
<summary>
Type of Client. (STYPE)..
</summary>
<remarks>Data-source is 'CLIENT_TYP.STYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.Descriptionofclienttype">
<summary>
Description of client type. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'CLIENT_TYP.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.Theclienttypecorrespondstothenaturalperson">
<summary>
The client type corresponds to the person. (SNATURAL)..
</summary>
<remarks>Data-source is 'CLIENT_TYP.SNATURAL'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.Theclienttypecorrespondstothetemporaryclientcodeidentification">
<summary>
The client type corresponds to the temporary client code identification. (SPROVISION)..
</summary>
<remarks>Data-source is 'CLIENT_TYP.SPROVISION'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'CLIENT_TYP.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLIENT_TYP.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLIENT_TYP.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.Compare(InMotionGIT.Client.Entity.Contracts.IdentifierClientType,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="IdentifierClientTypeItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.IdentifierClientType.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.IdentifierClientTypeCollection">
 <summary>
 Collection for IdentifierClientType class
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.IdentifierClientTypeCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.IdentifierClientTypeCollection.AddIdentifierClientType">
 <summary>
 Add an instance of class 'IdentifierClientType' in the IdentifierClientTypeCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.IdentifierClientTypeCollection.Compare(InMotionGIT.Client.Entity.Contracts.IdentifierClientTypeCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.IdentifierClientTypeCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.IdentifierClientTypeCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.IdentifierClientTypeCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.InhibitedList">
 <summary>
 Inhibited list
 </summary>
<remarks>Data-source is 'INHIBITEDLIST'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhibitedList.CreateNewInhibitedList">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhibitedList.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhibitedList._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhibitedList._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhibitedList._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhibitedList._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhibitedList._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhibitedList._CodeOfClassIOfInhibitedList">
<summary>
Code of class of inhibited list
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhibitedList._ListEmitter">
<summary>
Code of the client emitter of the list
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhibitedList._TypeOfID">
<summary>
Type code of Client IDs
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhibitedList._ClientCode">
<summary>
Number/Code of the Client IDs
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhibitedList._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhibitedList._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhibitedList._CodeOfInhibitionCause">
<summary>
Code of the inhibition cause
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhibitedList._DocumentClass">
<summary>
Class of document or format.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhibitedList._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhibitedList._Status">
<summary>
Register status
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhibitedList._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhibitedList._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhibitedList._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhibitedList.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhibitedList.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhibitedList.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhibitedList.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhibitedList.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhibitedList.CodeOfClassIOfInhibitedList">
<summary>
Code of class of inhibited list (NCLASSINHIBLIST)..
</summary>
<remarks>Data-source is 'INHIBITEDLIST.NCLASSINHIBLIST'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhibitedList.ListEmitter">
<summary>
Code of the client emitter of the list (SEMITTER)..
</summary>
<remarks>Data-source is 'INHIBITEDLIST.SEMITTER'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhibitedList.TypeOfID">
<summary>
Type code of Client IDs (NTYPCLIENTDOC)..
</summary>
<remarks>Data-source is 'INHIBITEDLIST.NTYPCLIENTDOC'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhibitedList.ClientCode">
<summary>
Number/Code of the Client IDs (SCLINUMDOCU)..
</summary>
<remarks>Data-source is 'INHIBITEDLIST.SCLINUMDOCU'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhibitedList.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'INHIBITEDLIST.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhibitedList.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'INHIBITEDLIST.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhibitedList.CodeOfInhibitionCause">
<summary>
Code of the inhibition cause (NCLASSINHIB)..
</summary>
<remarks>Data-source is 'INHIBITEDLIST.NCLASSINHIB'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhibitedList.DocumentClass">
<summary>
Class of document or format. (NCLASSTYPDOC)..
</summary>
<remarks>Data-source is 'INHIBITEDLIST.NCLASSTYPDOC'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhibitedList.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'INHIBITEDLIST.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhibitedList.Status">
<summary>
Register status (SSTATREGT)..
</summary>
<remarks>Data-source is 'INHIBITEDLIST.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhibitedList.StatusEnum">
<summary>
Register status
</summary>
<remarks>This property use a enumeration based on property 'Status'</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhibitedList.StatusEnumText">
<summary>
Register status
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhibitedList.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'INHIBITEDLIST.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhibitedList.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'INHIBITEDLIST.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhibitedList.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhibitedList.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhibitedList.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhibitedList.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhibitedList.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhibitedList.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhibitedList.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhibitedList.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhibitedList.Compare(InMotionGIT.Client.Entity.Contracts.InhibitedList,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="InhibitedListItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhibitedList.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhibitedList.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhibitedList.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhibitedList.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhibitedList.CodeOfClassIOfInhibitedListDescription">
 <summary>
 Code of class of inhibited list
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6791' on the table 'TABLE6791'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhibitedList.CodeOfInhibitionCauseDescription">
 <summary>
 Code of the inhibition cause
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6792' on the table 'TABLE6792'.
 </remarks>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.InhibitedListCollection">
 <summary>
 Collection for InhibitedList class
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhibitedListCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhibitedListCollection.AddInhibitedList">
 <summary>
 Add an instance of class 'InhibitedList' in the InhibitedListCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhibitedListCollection.Compare(InMotionGIT.Client.Entity.Contracts.InhibitedListCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhibitedListCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhibitedListCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhibitedListCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.InhListCauseSev">
 <summary>
 Severity by inhibition cause
 </summary>
<remarks>Data-source is 'INHLISTCAUSESEV'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.CreateNewInhListCauseSev">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhListCauseSev._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhListCauseSev._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhListCauseSev._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhListCauseSev._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhListCauseSev._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhListCauseSev._CodeOfClassIOfInhibitedList">
<summary>
Code of class of inhibited list
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhListCauseSev._CodeOfInhibitionCause">
<summary>
Code of the inhibition cause
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhListCauseSev._CodeOfSeverityOfClientInhibition">
<summary>
Code of severity of client inhibition
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhListCauseSev._Status">
<summary>
Register status
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhListCauseSev._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InhListCauseSev._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.CodeOfClassIOfInhibitedList">
<summary>
Code of class of inhibited list (NCLASSINHIBLIST)..
</summary>
<remarks>Data-source is 'INHLISTCAUSESEV.NCLASSINHIBLIST'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.CodeOfInhibitionCause">
<summary>
Code of the inhibition cause (NCLASSINHIB)..
</summary>
<remarks>Data-source is 'INHLISTCAUSESEV.NCLASSINHIB'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.CodeOfSeverityOfClientInhibition">
<summary>
Code of severity of client inhibition (NINHIBSEV)..
</summary>
<remarks>Data-source is 'INHLISTCAUSESEV.NINHIBSEV'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.Status">
<summary>
Register status (SSTATREGT)..
</summary>
<remarks>Data-source is 'INHLISTCAUSESEV.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.StatusEnum">
<summary>
Register status
</summary>
<remarks>This property use a enumeration based on property 'Status'</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.StatusEnumText">
<summary>
Register status
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'INHLISTCAUSESEV.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'INHLISTCAUSESEV.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.Compare(InMotionGIT.Client.Entity.Contracts.InhListCauseSev,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="InhListCauseSevItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.CodeOfClassIOfInhibitedListDescription">
 <summary>
 Code of class of inhibited list
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6791' on the table 'TABLE6791'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.CodeOfInhibitionCauseDescription">
 <summary>
 Code of the inhibition cause
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6792' on the table 'TABLE6792'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhListCauseSev.CodeOfSeverityOfClientInhibitionDescription">
 <summary>
 Code of severity of client inhibition
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6793' on the table 'TABLE6793'.
 </remarks>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.InhListCauseSevCollection">
 <summary>
 Collection for InhListCauseSev class
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhListCauseSevCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhListCauseSevCollection.AddInhListCauseSev">
 <summary>
 Add an instance of class 'InhListCauseSev' in the InhListCauseSevCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhListCauseSevCollection.Compare(InMotionGIT.Client.Entity.Contracts.InhListCauseSevCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InhListCauseSevCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhListCauseSevCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InhListCauseSevCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification">
 <summary>
 International Standard Industrial Classification
 </summary>
<remarks>Data-source is 'TAB_CIIU'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.CreateNewInternationalStandardIndustrialClassification">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification._CIIUCode">
<summary>
CIIU Code
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification._CIIUDescription">
<summary>
CIIU Description
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification._InsurableCIIUIndicator">
<summary>
Insurable CIIU Indicator
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification._InspectCIIUIndicator">
<summary>
Inspect CIIU Indicator
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification._User">
<summary>
Code of the user creating or updating the record
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.CIIUCode">
<summary>
CIIU Code (NCIIU)..
</summary>
<remarks>Data-source is 'TAB_CIIU.NCIIU'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAB_CIIU.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.CIIUDescription">
<summary>
CIIU Description (SDESCRIPT)..
</summary>
<remarks>Data-source is 'TAB_CIIU.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.InsurableCIIUIndicator">
<summary>
Insurable CIIU Indicator (SINSURABLECIIU)..
</summary>
<remarks>Data-source is 'TAB_CIIU.SINSURABLECIIU'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.InspectCIIUIndicator">
<summary>
Inspect CIIU Indicator (SINSPECTCIIU)..
</summary>
<remarks>Data-source is 'TAB_CIIU.SINSPECTCIIU'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAB_CIIU.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_CIIU.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.User">
<summary>
Code of the user creating or updating the record (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_CIIU.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.Compare(InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="InternationalStandardIndustrialClassificationItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassification.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassificationCollection">
 <summary>
 Collection for InternationalStandardIndustrialClassification class
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassificationCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassificationCollection.AddInternationalStandardIndustrialClassification">
 <summary>
 Add an instance of class 'InternationalStandardIndustrialClassification' in the InternationalStandardIndustrialClassificationCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassificationCollection.Compare(InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassificationCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassificationCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassificationCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.InternationalStandardIndustrialClassificationCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient">
 <summary>
 Stamps Condition Of The Client
 </summary>
<remarks>Data-source is 'CLIENT_TAX_STAMP'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.CreateNewStampsConditionOfTheClient">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient._StateOrProvince">
<summary>
State Or Province
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient._RateOfStampExclution">
<summary>
Rate of Stamp exclution
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient._FromDateExclutionStamp">
<summary>
From Date Exclution Stamp
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient._TODateExclutionStamp">
<summary>
TO Date Exclution Stamp
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient._ShortDescritionForTheReasonOfExclusion">
<summary>
Short Descrition for the reason of exclusion
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_STAMP.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.StateOrProvince">
<summary>
State Or Province (NPROVINCE)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_STAMP.NPROVINCE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.RateOfStampExclution">
<summary>
Rate of Stamp exclution (NRATEEXCSTAMP)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_STAMP.NRATEEXCSTAMP'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.FromDateExclutionStamp">
<summary>
From Date Exclution Stamp (DEXCLSTAMP_FROM)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_STAMP.DEXCLSTAMP_FROM'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.TODateExclutionStamp">
<summary>
TO Date Exclution Stamp (DEXCLSTAMP_TO)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_STAMP.DEXCLSTAMP_TO'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.ShortDescritionForTheReasonOfExclusion">
<summary>
Short Descrition for the reason of exclusion (SEXCREASON)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_STAMP.SEXCREASON'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_STAMP.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLIENT_TAX_STAMP.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.Compare(InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="StampsConditionOfTheClientItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClient.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClientCollection">
 <summary>
 Collection for StampsConditionOfTheClient class
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClientCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClientCollection.AddStampsConditionOfTheClient">
 <summary>
 Add an instance of class 'StampsConditionOfTheClient' in the StampsConditionOfTheClientCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClientCollection.Compare(InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClientCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClientCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClientCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.StampsConditionOfTheClientCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.STATETAX">
 <summary>
 
 </summary>
<remarks>Data-source is 'STATETAX'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.STATETAX.CreateNewSTATETAX">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.STATETAX.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.STATETAX._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.STATETAX._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.STATETAX._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.STATETAX._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.STATETAX._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.STATETAX._Province">
<summary>
Provincie
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.STATETAX._Currency">
<summary>
Currency
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.STATETAX._TypeOfProcess">
<summary>
Type of process
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.STATETAX._LineBusiness">
<summary>
Line of business
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.STATETAX._PersonType">
<summary>
Person type
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.STATETAX._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.STATETAX._StampTaxBase">
<summary>
Code stamp tax base
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.STATETAX._StampTaxRate">
<summary>
Stamp tax rate
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.STATETAX._FixAmountToAddToTheStamp">
<summary>
Fix amount to add to the stamp
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.STATETAX._FixAmountToAddToTheBaseTaxable">
<summary>
Fix amount to add to the base taxable
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.STATETAX._MinimumAmountStamps">
<summary>
Minimum amount of stamps
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.STATETAX._MinimumTaxableAmount">
<summary>
Minimum taxable amount
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.STATETAX._MinimumAmountBilled">
<summary>
Minimum amount billed
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.STATETAX._DiscountRate">
<summary>
Discount rate
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.STATETAX._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.STATETAX._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.STATETAX._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.STATETAX._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.Province">
<summary>
Provincie (NPROVINCE)..
</summary>
<remarks>Data-source is 'STATETAX.NPROVINCE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.Currency">
<summary>
Currency (NCURRENCY)..
</summary>
<remarks>Data-source is 'STATETAX.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.TypeOfProcess">
<summary>
Type of process (SPROCESS)..
</summary>
<remarks>Data-source is 'STATETAX.SPROCESS'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.LineBusiness">
<summary>
Line of business (NBRANCH)..
</summary>
<remarks>Data-source is 'STATETAX.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.PersonType">
<summary>
Person type (NPERSON_TYP)..
</summary>
<remarks>Data-source is 'STATETAX.NPERSON_TYP'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.PersonTypeEnum">
<summary>
Person type
</summary>
<remarks>This property use a enumeration based on property 'PersonType'</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.PersonTypeEnumText">
<summary>
Person type
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'STATETAX.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.StampTaxBase">
<summary>
Code stamp tax base (NAPPLICATIONTAX)..
</summary>
<remarks>Data-source is 'STATETAX.NAPPLICATIONTAX'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.StampTaxRate">
<summary>
Stamp tax rate (NTAX)..
</summary>
<remarks>Data-source is 'STATETAX.NTAX'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.FixAmountToAddToTheStamp">
<summary>
Fix amount to add to the stamp (NFIXAMOUNT)..
</summary>
<remarks>Data-source is 'STATETAX.NFIXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.FixAmountToAddToTheBaseTaxable">
<summary>
Fix amount to add to the base taxable (NADDAMOUNT)..
</summary>
<remarks>Data-source is 'STATETAX.NADDAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.MinimumAmountStamps">
<summary>
Minimum amount of stamps (NMINAMOUNT)..
</summary>
<remarks>Data-source is 'STATETAX.NMINAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.MinimumTaxableAmount">
<summary>
Minimum taxable amount (NMINTAXABLE)..
</summary>
<remarks>Data-source is 'STATETAX.NMINTAXABLE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.MinimumAmountBilled">
<summary>
Minimum amount billed (NBILLMIN)..
</summary>
<remarks>Data-source is 'STATETAX.NBILLMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.DiscountRate">
<summary>
Discount rate (NDISCOUNT)..
</summary>
<remarks>Data-source is 'STATETAX.NDISCOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'STATETAX.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'STATETAX.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'STATETAX.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.STATETAX.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.STATETAX.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.STATETAX.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.STATETAX.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.STATETAX.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.STATETAX.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.STATETAX.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.STATETAX.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.STATETAX.Compare(InMotionGIT.Client.Entity.Contracts.STATETAX,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="STATETAXItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.STATETAX.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.STATETAX.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.STATETAX.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.STATETAX.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.CurrencyDescription">
 <summary>
 Currency
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE11'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.LineBusinessDescription">
 <summary>
 Line of business
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE10'.
 </remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAX.StampTaxBaseDescription">
 <summary>
 Code stamp tax base
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6717' on the table 'TABLE6717'.
 </remarks>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.STATETAXCollection">
 <summary>
 Collection for STATETAX class
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.STATETAXCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.STATETAXCollection.AddSTATETAX">
 <summary>
 Add an instance of class 'STATETAX' in the STATETAXCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.STATETAXCollection.Compare(InMotionGIT.Client.Entity.Contracts.STATETAXCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.STATETAXCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.STATETAXCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.STATETAXCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.WindowsClient">
 <summary>
 Windows associated to a client.
 </summary>
<remarks>Data-source is 'CLIENT_WIN'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.WindowsClient.CreateNewWindowsClient">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.WindowsClient.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.WindowsClient._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.WindowsClient._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.WindowsClient._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.WindowsClient._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.WindowsClient._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.WindowsClient._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.WindowsClient._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.WindowsClient._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.WindowsClient._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.WindowsClient._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.WindowsClient._ContentIndicators">
<summary>
Contents indicator vector (t one-alphanumeric characters elements).
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.WindowsClient._WindowsVector">
<summary>
Window Vector, 8 characters to identify the different windows of the client sequence of windows.
</summary>
</member>
<member name="F:InMotionGIT.Client.Entity.Contracts.WindowsClient._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.WindowsClient.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.WindowsClient.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.WindowsClient.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.WindowsClient.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.WindowsClient.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.WindowsClient.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'CLIENT_WIN.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.WindowsClient.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CLIENT_WIN.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.WindowsClient.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLIENT_WIN.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.WindowsClient.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'CLIENT_WIN.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.WindowsClient.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLIENT_WIN.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.WindowsClient.ContentIndicators">
<summary>
Contents indicator vector (t one-alphanumeric characters elements). (SV_CONCLIEN)..
</summary>
<remarks>Data-source is 'CLIENT_WIN.SV_CONCLIEN'.</remarks>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.WindowsClient.WindowsVector">
<summary>
Window Vector, 8 characters to identify the different windows of the client sequence of windows. (SV_WINCLIEN)..
</summary>
<remarks>Data-source is 'CLIENT_WIN.SV_WINCLIEN'.</remarks>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.WindowsClient.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.WindowsClient.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.WindowsClient.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.WindowsClient.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.WindowsClient.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.WindowsClient.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.WindowsClient.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.WindowsClient.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.WindowsClient.Compare(InMotionGIT.Client.Entity.Contracts.WindowsClient,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="WindowsClientItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.WindowsClient.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.WindowsClient.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.WindowsClient.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.WindowsClient.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Client.Entity.Contracts.WindowsClientCollection">
 <summary>
 Collection for WindowsClient class
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.WindowsClientCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.WindowsClientCollection.AddWindowsClient">
 <summary>
 Add an instance of class 'WindowsClient' in the WindowsClientCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.WindowsClientCollection.Compare(InMotionGIT.Client.Entity.Contracts.WindowsClientCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.WindowsClientCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.WindowsClientCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Client.Entity.Contracts.WindowsClientCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Lookups.Client.ClientID">
 <summary>
Code of the client.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Lookups.Client.CheckDigit">
 <summary>
Verificator digit of the client code.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Lookups.Client.CompleteClientName">
 <summary>
Complete name of the client.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Lookups.Client.FirstName">
 <summary>
First name and middle name of the client.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Lookups.Client.LastName">
 <summary>
Last name of the client.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Lookups.Client.SecondLastName">
 <summary>
Last name (2) of the client.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Lookups.Client.BirthDate">
 <summary>
Date of birth of the client.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Lookups.Client.Gender">
 <summary>
Gender of the client. Possible values as per table TABLE18.
 </summary>
</member>
<member name="P:InMotionGIT.Client.Entity.Contracts.Lookups.Client.GenderDescript">
 <summary>
Description of Gender of the client. Possible values as per table TABLE18.
 </summary>
</member>
</members>
</doc>
