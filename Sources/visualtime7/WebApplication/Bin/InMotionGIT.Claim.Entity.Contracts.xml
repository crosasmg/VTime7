<?xml version="1.0"?>
<doc>
<assembly>
<name>
InMotionGIT.Claim.Entity.Contracts
</name>
</assembly>
<members>
<member name="T:InMotionGIT.Claim.Entity.Contracts.My.Resources.Resources">
<summary>
  Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.My.Resources.Resources.ResourceManager">
<summary>
  Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.My.Resources.Resources.Culture">
<summary>
  Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
  búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
</summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumAutomobileClaimChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumCasesPreClaimChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumCessionCoinsuranceClaimChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumCessionNonProportionalClaimChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumCessionReinsuranceClaimChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumCIIU_ActCommerChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumClaimChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumClaimBeneficiaryChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumClaimCaseChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumClaimCausePerProductChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumClaimCostHospitalizationChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumClaimCoverageChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumClaimDocumentChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumClaimedPersonChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumClaimHistoryChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumClaimMasterChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumClaimRegistrationChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumClaimRegistrationClientChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumClaimRegistrationPolicyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumClaimRegistrationRequestDocumentChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumClaimRegistrationSelectedCoverChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumClaimStatusHistoryChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumClientAllowedInClaimPerProductChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumCoinsuranceDistributionOfClaimChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumConceptInPaymentClaimChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumCustomerMessageTemplateChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumDamageInClaimChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumDamageToInsuredVehicleChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumDeadlinesForHandlingClaimChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumDiagnosisHealthClaimChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumDocumentRequestInClaimChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumFraudPreventionQuestionChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumFraudPreventionQuestionaryChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumGoodStrickenInTheTransportChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumHealthClaimChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumHistoryPreClaimChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumInterDepartmentsInquieryChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumInternationalStandardIndustrialClassificationChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumLifeClaimChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumLogOfClaimChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumMovementCoverageClaimChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumNoticesClaimsProcessingDeadlineChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumParamIndemnifyingUserChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumPaymentAllowedCoverageProductChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumPortfolioCasualtyActionChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumPreClaimChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumPreClaimsAttachmentChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumPreClaimsPriorizationChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumPreClaimsStateChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumProdAllowedIndemnifyingUserChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumReinsuranceDistributionOfClaimChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumResponseSiuQuestionarieChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumReverseConditionInClaimOperationChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumServiceInClaimChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumSpecificRiskClaimChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumTABLE8111Child">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumTABLE8112Child">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumTABLE8113Child">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumTabPortfolioCasualtyActionChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumThirdPartyAutomobileClaimChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumUserInterDepartmentsInquieryChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumVendorChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumWindowClaimChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumTypeOfLifeClaim.Death">
 <summary>
 Muerte
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumTypeOfLifeClaim.Incapacity">
 <summary>
 Incapacidad
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumTypeOfLifeClaim.DeathInAccident">
 <summary>
 Muerte en accidente
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumTypeOfLifeClaim.DeathInTrafficAccident">
 <summary>
 Muerte en accidente de circulación
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumTypeOfLifeClaim.Survival">
 <summary>
 Sobrevivencia
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumTypeOfLifeClaim.Disability">
 <summary>
 Invalidez
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumTypeOfLifeClaim.GravesDisease">
 <summary>
 Enfermedades graves
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumTypeOfLifeClaim.Dismemberment">
 <summary>
 Desmembramiento
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumStatusOfCase.Canceled">
 <summary>
 Cancelado /Anulado
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumStatusOfCase.InLiquidation">
 <summary>
 En proceso de liquidación
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumStatusOfCase.InTheAuthorizationProcess">
 <summary>
 En proceso de autorización
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumStatusOfCase.PartiallyPaid">
 <summary>
 Pagado parcial 
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumStatusOfCase.TotallyPaid">
 <summary>
 Pagado total
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumStatusOfCase.Incomplete">
 <summary>
 Pendiente de completitud
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumStatusOfCase.Rejected">
 <summary>
 Rechazado
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumStatusOfCase.PendingApproval">
 <summary>
 Pend. de autor. para liquidar
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumStatusOfCase.Desisted">
 <summary>
 Desistido
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumStatusOfCase.Outstanding">
 <summary>
 Pendiente
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumStatusOfCase.EitherPartlyLiquidated">
 <summary>
 Liquidado Parcial
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Enumerations.EnumStatusOfCase.TotallySettled">
 <summary>
 Liquidado Total
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim">
 <summary>
 Data on automobile claims.
 </summary>
<remarks>Data-source is 'CLAIM_AUTO'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.CreateNewAutomobileClaim">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._ClaimCode">
<summary>
Code of The Claim Case or Claimant.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._ClaimType">
<summary>
Claim Type.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._NumberOfVehicles">
<summary>
Number of vehicles involved in the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._Blame">
<summary>
Driver&#39;s fault indicator.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._TrafficOfense">
<summary>
Indicator of traffic offense.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._Reported">
<summary>
It indicates whether a report about the accident was written
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._PoliceReportIndicator">
<summary>
It indicates whether a police report was done.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._QuickOperationGroupParticipation">
<summary>
The &#34;Quick Operation Group&#34; took part in the accident service.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._City">
<summary>
The City Code.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._VendorCode">
<summary>
Code of the garage where the insured vehicle is repaired.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._DriverClientID">
<summary>
Client ID of the driver at the moment of the accident.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._PartyID">
<summary>
Party ID in court.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._sCourt">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._DateOfReportingToAuthorities">
<summary>
Reporting date to transit authorities
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._PoliceOffice">
<summary>
Police office where the accident report was filed.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._Folio">
<summary>
Folio (police certificate)
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._Paragraph">
<summary>
Paragraph (police certificate)
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._PoliceOfficeNose">
<summary>
Police Office issuing the police certificate.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._PoliceCertificateNumber">
<summary>
Police certificate number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._DateOfDocumentFromAuthorities">
<summary>
Date of the document from the transit authorities.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._DUIIndicator">
<summary>
Driving under influence of alcohol indicator.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._NoteID">
<summary>
Number of the note containing the comments.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._Witness">
<summary>
Client ID of the Witness.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._DriverName">
<summary>
Name of the driver of the vehicle (SOAT).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._AgeOfTheDriver">
<summary>
Age of the driver of the automobile involved in the claim (SOAT).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._Gender">
<summary>
Gender of the client ().
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._District">
<summary>
Codes from the district to which the delegation belongs.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._NVEH_VALOR">
<summary>

</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.ClaimCode">
<summary>
Code of The Claim Case or Claimant. (NCASE_NUM)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.ClaimType">
<summary>
Claim Type. (NDEMAN_TYPE)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.NDEMAN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.NumberOfVehicles">
<summary>
Number of vehicles involved in the claim. (NAUTO_QUANT)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.NAUTO_QUANT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.Blame">
<summary>
Driver&#39;s fault indicator. (NBLAME)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.NBLAME'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.TrafficOfense">
<summary>
Indicator of traffic offense. (NINFRACTION)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.NINFRACTION'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.Reported">
<summary>
It indicates whether a report about the accident was written (SSUMMARY)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.SSUMMARY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.PoliceReportIndicator">
<summary>
It indicates whether a police report was done. (SPOLICEDEM)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.SPOLICEDEM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.QuickOperationGroupParticipation">
<summary>
The &#34;Quick Operation Group&#34; took part in the accident service. (SIND_EIR)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.SIND_EIR'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.City">
<summary>
The City Code. (NLOCATION)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.NLOCATION'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.VendorCode">
<summary>
Code of the garage where the insured vehicle is repaired. (NPROVIDER)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.NPROVIDER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.DriverClientID">
<summary>
Client ID of the driver at the moment of the accident. (SDRIVER_CLAIM)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.SDRIVER_CLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.PartyID">
<summary>
Party ID in court. (NFINE)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.NFINE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.sCourt">
<summary>
.
</summary>
<remarks>Data-source is 'CLAIM_AUTO.SCOURT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.DateOfReportingToAuthorities">
<summary>
Reporting date to transit authorities (DDEMAND_DATE)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.DDEMAND_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.PoliceOffice">
<summary>
Police office where the accident report was filed. (SPOLSTAT_DEMAN)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.SPOLSTAT_DEMAN'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.Folio">
<summary>
Folio (police certificate) (NPAGE)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.NPAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.Paragraph">
<summary>
Paragraph (police certificate) (NPARAGRAPH)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.NPARAGRAPH'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.PoliceOfficeNose">
<summary>
Police Office issuing the police certificate. (SPOL_STATION)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.SPOL_STATION'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.PoliceCertificateNumber">
<summary>
Police certificate number. (NPOLICEDOC)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.NPOLICEDOC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.DateOfDocumentFromAuthorities">
<summary>
Date of the document from the transit authorities. (DPOLDOC_DATE)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.DPOLDOC_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.DUIIndicator">
<summary>
Driving under influence of alcohol indicator. (SALCOHOLIC)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.SALCOHOLIC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.NoteID">
<summary>
Number of the note containing the comments. (NNOTENUM)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.Witness">
<summary>
Client ID of the Witness. (SWITNESS)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.SWITNESS'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.DriverName">
<summary>
Name of the driver of the vehicle (SOAT). (SDRIVERNAME)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.SDRIVERNAME'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.AgeOfTheDriver">
<summary>
Age of the driver of the automobile involved in the claim (SOAT). (NAGE)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.NAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.Gender">
<summary>
Gender of the client (). (SSEXCLIEN)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.SSEXCLIEN'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.District">
<summary>
Codes from the district to which the delegation belongs. (SCOD_DISTRICT)..
</summary>
<remarks>Data-source is 'CLAIM_AUTO.SCOD_DISTRICT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.NVEH_VALOR">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_AUTO.NVEH_VALOR'.</remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.Compare(InMotionGIT.Claim.Entity.Contracts.AutomobileClaim,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="AutomobileClaimItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.BlameDescription">
 <summary>
 Driver&#39;s fault indicator.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE204'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaim.TrafficOfenseDescription">
 <summary>
 Indicator of traffic offense.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE205'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.AutomobileClaimCollection">
 <summary>
 Collection for AutomobileClaim class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.AutomobileClaimCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.AutomobileClaimCollection.AddAutomobileClaim">
 <summary>
 Add an instance of class 'AutomobileClaim' in the AutomobileClaimCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.AutomobileClaimCollection.Compare(InMotionGIT.Claim.Entity.Contracts.AutomobileClaimCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.AutomobileClaimCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.AutomobileClaimCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.AutomobileClaimCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim">
 <summary>
 Register of cases of Pre-Claims
 </summary>
<remarks>Data-source is 'PRECLAIMCASE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.CreateNewCasesPreClaim">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim._IdPreclaim">
<summary>
Internal Id of preclaim
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim._CaseNumber">
<summary>
Case Number
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim._ClaimType">
<summary>
Claim type
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim._NoteNumber">
<summary>
Note Number
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim._IdBenef">
<summary>
Id of the beneficiary
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim._IdModule">
<summary>
Code of The Module of The Coverage
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim._IdCover">
<summary>
Coverage identification
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim._Currency">
<summary>
Currency of the coverage
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim._EstimatedDamage">
<summary>
Estimated damage
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.IdPreclaim">
<summary>
Internal Id of preclaim (NIDPRECLAIM)..
</summary>
<remarks>Data-source is 'PRECLAIMCASE.NIDPRECLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.CaseNumber">
<summary>
Case Number (NCASE_NUM)..
</summary>
<remarks>Data-source is 'PRECLAIMCASE.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.ClaimType">
<summary>
Claim type (NDEMAN_TYPE)..
</summary>
<remarks>Data-source is 'PRECLAIMCASE.NDEMAN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.NoteNumber">
<summary>
Note Number (NNOTEDAMA)..
</summary>
<remarks>Data-source is 'PRECLAIMCASE.NNOTEDAMA'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.IdBenef">
<summary>
Id of the beneficiary (SBENEF)..
</summary>
<remarks>Data-source is 'PRECLAIMCASE.SBENEF'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.IdModule">
<summary>
Code of The Module of The Coverage (NMODULEC)..
</summary>
<remarks>Data-source is 'PRECLAIMCASE.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.IdCover">
<summary>
Coverage identification (NCOVER)..
</summary>
<remarks>Data-source is 'PRECLAIMCASE.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.Currency">
<summary>
Currency of the coverage (NCURRENCY)..
</summary>
<remarks>Data-source is 'PRECLAIMCASE.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.EstimatedDamage">
<summary>
Estimated damage (NDAMAGES)..
</summary>
<remarks>Data-source is 'PRECLAIMCASE.NDAMAGES'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'PRECLAIMCASE.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'PRECLAIMCASE.DCOMPDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.Compare(InMotionGIT.Claim.Entity.Contracts.CasesPreClaim,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CasesPreClaimItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CasesPreClaim.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.CasesPreClaimCollection">
 <summary>
 Collection for CasesPreClaim class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CasesPreClaimCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CasesPreClaimCollection.AddCasesPreClaim">
 <summary>
 Add an instance of class 'CasesPreClaim' in the CasesPreClaimCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CasesPreClaimCollection.Compare(InMotionGIT.Claim.Entity.Contracts.CasesPreClaimCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CasesPreClaimCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CasesPreClaimCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CasesPreClaimCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim">
 <summary>
 Cession of a claim in coinsurance.
 </summary>
<remarks>Data-source is 'CLAIM_CESCO'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.CreateNewCessionCoinsuranceClaim">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._ClaimCode">
<summary>
Code of The Claim Case or Claimant.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._ClaimType">
<summary>
Claim Type.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._Schedule">
<summary>
Number of the cessions report (schedule).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._CessionId">
<summary>
Number identifying the claim cession for the same claim/case
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._CessionNumber">
<summary>
Number identifying the cession (printing).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._ClaimEntryNumber">
<summary>
Entry number related to a claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._CededAmount">
<summary>
Amount Ceded.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._CededPercentage">
<summary>
Percentage of coinsurance ceded.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._Company">
<summary>
Code of the company.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._ClaimTransactionType">
<summary>
Claim transaction type.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._CessionType">
<summary>
Cession Type.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._EndingDate">
<summary>
Final date of payment of the annuity.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._InitialPaymentDate">
<summary>
Date when the payment of the annuity begins.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._LossDate">
<summary>
Date and hour when the loss occurred.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._CessionHasBeenPrintedIndicator">
<summary>
The cession has been/has not been printed.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._CessionYearAndMonth">
<summary>
Year and month of the cession.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim._Division">
<summary>
Code of the &#39;division&#39; within the Group.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'CLAIM_CESCO.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.ClaimCode">
<summary>
Code of The Claim Case or Claimant. (NCASE_NUM)..
</summary>
<remarks>Data-source is 'CLAIM_CESCO.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.ClaimType">
<summary>
Claim Type. (NDEMAN_TYPE)..
</summary>
<remarks>Data-source is 'CLAIM_CESCO.NDEMAN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.Schedule">
<summary>
Number of the cessions report (schedule). (NCESS_NU)..
</summary>
<remarks>Data-source is 'CLAIM_CESCO.NCESS_NU'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.CessionId">
<summary>
Number identifying the claim cession for the same claim/case (NID)..
</summary>
<remarks>Data-source is 'CLAIM_CESCO.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'CLAIM_CESCO.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.CessionNumber">
<summary>
Number identifying the cession (printing). (NNUM_CESS)..
</summary>
<remarks>Data-source is 'CLAIM_CESCO.NNUM_CESS'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.ClaimEntryNumber">
<summary>
Entry number related to a claim. (NTRANSAC)..
</summary>
<remarks>Data-source is 'CLAIM_CESCO.NTRANSAC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'CLAIM_CESCO.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.CededAmount">
<summary>
Amount Ceded. (NCED_AMNT)..
</summary>
<remarks>Data-source is 'CLAIM_CESCO.NCED_AMNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.CededPercentage">
<summary>
Percentage of coinsurance ceded. (NCED_PER)..
</summary>
<remarks>Data-source is 'CLAIM_CESCO.NCED_PER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.Company">
<summary>
Code of the company. (NCOMPANY)..
</summary>
<remarks>Data-source is 'CLAIM_CESCO.NCOMPANY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.ClaimTransactionType">
<summary>
Claim transaction type. (NCESS_CONC)..
</summary>
<remarks>Data-source is 'CLAIM_CESCO.NCESS_CONC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.CessionType">
<summary>
Cession Type. (NCESS_TYPE)..
</summary>
<remarks>Data-source is 'CLAIM_CESCO.NCESS_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLAIM_CESCO.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.EndingDate">
<summary>
Final date of payment of the annuity. (DEND_DATE)..
</summary>
<remarks>Data-source is 'CLAIM_CESCO.DEND_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.InitialPaymentDate">
<summary>
Date when the payment of the annuity begins. (DINIT_DATE)..
</summary>
<remarks>Data-source is 'CLAIM_CESCO.DINIT_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.LossDate">
<summary>
Date and hour when the loss occurred. (DOCCURDATE)..
</summary>
<remarks>Data-source is 'CLAIM_CESCO.DOCCURDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'CLAIM_CESCO.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.CessionHasBeenPrintedIndicator">
<summary>
The cession has been/has not been printed. (SPRINT_C)..
</summary>
<remarks>Data-source is 'CLAIM_CESCO.SPRINT_C'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLAIM_CESCO.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'CLAIM_CESCO.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'CLAIM_CESCO.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'CLAIM_CESCO.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.CessionYearAndMonth">
<summary>
Year and month of the cession. (NYEARMONTH)..
</summary>
<remarks>Data-source is 'CLAIM_CESCO.NYEARMONTH'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP_INSU)..
</summary>
<remarks>Data-source is 'CLAIM_CESCO.NGROUP_INSU'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.Compare(InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CessionCoinsuranceClaimItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.ClaimTransactionTypeDescription">
 <summary>
 Claim transaction type.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE140'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaim.CessionTypeDescription">
 <summary>
 Cession Type.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE534'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaimCollection">
 <summary>
 Collection for CessionCoinsuranceClaim class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaimCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaimCollection.AddCessionCoinsuranceClaim">
 <summary>
 Add an instance of class 'CessionCoinsuranceClaim' in the CessionCoinsuranceClaimCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaimCollection.Compare(InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaimCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaimCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaimCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionCoinsuranceClaimCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim">
 <summary>
 Claim cessions, Non-proportional.
 </summary>
<remarks>Data-source is 'CLAIM_NPR'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.CreateNewCessionNonProportionalClaim">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._ClaimCode">
<summary>
Code of The Claim Case or Claimant.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._ClaimType">
<summary>
Claim Type.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._ClaimEntryNumber">
<summary>
Entry number related to a claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._TypeOfTreaty">
<summary>
Type of Reinsurance Treaty The.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._TypeOfReinsurance">
<summary>
Type of reinsurance.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._ReinsuranceTreaty">
<summary>
Number of the reinsurance treaty.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._ReinsuranceLineOfBusiness">
<summary>
Code of the reinsurance branch.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._CompanyCode">
<summary>
Code of the company.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._Cession">
<summary>
Cession number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._TreatyEffectiveDate">
<summary>
Effective date of the reinsurance treaty.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._CededAmount">
<summary>
Total ceded amount.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._CessionType">
<summary>
Cession Type.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._EndingDate">
<summary>
Final date of payment of the annuity.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._InitialPaymentDate">
<summary>
Date when the payment of the annuity begins.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._CededPercentage">
<summary>
Percentage of share ceded to the treaty.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._CessionHasBeenPrintedIndicator">
<summary>
The cession has been/has not been printed.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._StatusClaim">
<summary>
Status of the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._sClient">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._dClaim_pay">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._sTyp_cess">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._nCover">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._nModulec">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._nGroup_insu">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._NREINSTALL_ID">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim._NPRIORITY">
<summary>

</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'CLAIM_NPR.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.ClaimCode">
<summary>
Code of The Claim Case or Claimant. (NCASE_NUM)..
</summary>
<remarks>Data-source is 'CLAIM_NPR.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.ClaimType">
<summary>
Claim Type. (NDEMAN_TYPE)..
</summary>
<remarks>Data-source is 'CLAIM_NPR.NDEMAN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.ClaimEntryNumber">
<summary>
Entry number related to a claim. (NTRANSAC)..
</summary>
<remarks>Data-source is 'CLAIM_NPR.NTRANSAC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.TypeOfTreaty">
<summary>
Type of Reinsurance Treaty The. (NTYPE)..
</summary>
<remarks>Data-source is 'CLAIM_NPR.NTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.TypeOfTreatyEnum">
<summary>
Type of Reinsurance Treaty The.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfTreaty'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.TypeOfTreatyEnumText">
<summary>
Type of Reinsurance Treaty The.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.TypeOfReinsurance">
<summary>
Type of reinsurance. (NTYPE_REL)..
</summary>
<remarks>Data-source is 'CLAIM_NPR.NTYPE_REL'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.ReinsuranceTreaty">
<summary>
Number of the reinsurance treaty. (NNUMBER)..
</summary>
<remarks>Data-source is 'CLAIM_NPR.NNUMBER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.ReinsuranceLineOfBusiness">
<summary>
Code of the reinsurance branch. (NBRANCH)..
</summary>
<remarks>Data-source is 'CLAIM_NPR.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.CompanyCode">
<summary>
Code of the company. (NCOMPANY)..
</summary>
<remarks>Data-source is 'CLAIM_NPR.NCOMPANY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.Cession">
<summary>
Cession number. (NCESS)..
</summary>
<remarks>Data-source is 'CLAIM_NPR.NCESS'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'CLAIM_NPR.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.TreatyEffectiveDate">
<summary>
Effective date of the reinsurance treaty. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CLAIM_NPR.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.CededAmount">
<summary>
Total ceded amount. (NAMOUNT)..
</summary>
<remarks>Data-source is 'CLAIM_NPR.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.CessionType">
<summary>
Cession Type. (NCESS_TYPE)..
</summary>
<remarks>Data-source is 'CLAIM_NPR.NCESS_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLAIM_NPR.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.EndingDate">
<summary>
Final date of payment of the annuity. (DEND_DATE)..
</summary>
<remarks>Data-source is 'CLAIM_NPR.DEND_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.InitialPaymentDate">
<summary>
Date when the payment of the annuity begins. (DINIT_DATE)..
</summary>
<remarks>Data-source is 'CLAIM_NPR.DINIT_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.CededPercentage">
<summary>
Percentage of share ceded to the treaty. (NPORC)..
</summary>
<remarks>Data-source is 'CLAIM_NPR.NPORC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.CessionHasBeenPrintedIndicator">
<summary>
The cession has been/has not been printed. (SPRINT_CE)..
</summary>
<remarks>Data-source is 'CLAIM_NPR.SPRINT_CE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLAIM_NPR.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.StatusClaim">
<summary>
Status of the claim. (SSTACLAIM)..
</summary>
<remarks>Data-source is 'CLAIM_NPR.SSTACLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.sClient">
<summary>
.
</summary>
<remarks>Data-source is 'CLAIM_NPR.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.dClaim_pay">
<summary>
.
</summary>
<remarks>Data-source is 'CLAIM_NPR.DCLAIM_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.sTyp_cess">
<summary>
.
</summary>
<remarks>Data-source is 'CLAIM_NPR.STYP_CESS'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.nCover">
<summary>
.
</summary>
<remarks>Data-source is 'CLAIM_NPR.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.nModulec">
<summary>
.
</summary>
<remarks>Data-source is 'CLAIM_NPR.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.nGroup_insu">
<summary>
.
</summary>
<remarks>Data-source is 'CLAIM_NPR.NGROUP_INSU'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.NREINSTALL_ID">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_NPR.NREINSTALL_ID'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.NPRIORITY">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_NPR.NPRIORITY'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.Compare(InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CessionNonProportionalClaimItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaim.CessionTypeDescription">
 <summary>
 Cession Type.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE534'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaimCollection">
 <summary>
 Collection for CessionNonProportionalClaim class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaimCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaimCollection.AddCessionNonProportionalClaim">
 <summary>
 Add an instance of class 'CessionNonProportionalClaim' in the CessionNonProportionalClaimCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaimCollection.Compare(InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaimCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaimCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaimCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionNonProportionalClaimCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim">
 <summary>
 Cession of a claim in reinsurance.
 </summary>
<remarks>Data-source is 'CLAIM_CES'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.CreateNewCessionReinsuranceClaim">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._ClaimCode">
<summary>
Code of The Claim Case or Claimant.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._ClaimType">
<summary>
Claim Type.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._Schedule">
<summary>
Number of the cessions report (schedule).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._CessionId">
<summary>
Number identifying the claim cession for the same claim/case
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._ClaimEntryNumber">
<summary>
Entry number related to a claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._ReinsuranceTreaty">
<summary>
Number of the reinsurance treaty.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._ReinsuranceLineOfBusiness">
<summary>
Code of the line of business for reinsurance.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._CessionNumber">
<summary>
Number identifying the cession (printing).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._CededAmount">
<summary>
Amount Ceded.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._CededPercentage">
<summary>
Percentage of reinsurance ceded.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._ClaimTransactionType">
<summary>
Claim transaction type.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._CompanyCode">
<summary>
Code of the company.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._CessionType">
<summary>
Cession Type.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._EndingDate">
<summary>
Ending date of the cession of losses.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._EffectiveDate">
<summary>
Effective date of the cession.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._LossDate">
<summary>
Date and hour when the loss occurred.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._CessionHasBeenPrintedIndicator">
<summary>
The cession has been/has not been printed.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._AccountingLineOfBusiness">
<summary>
Code of the accounting line of business.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._InsuranceArea">
<summary>
Insurance area (Life or P&#38;C).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._ClientID">
<summary>
Code of the insured client related to the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._CessionYearAndMonth">
<summary>
Year and month of the cession.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._Division">
<summary>
Code of the &#39;division&#39; within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._TypeOfTreaty">
<summary>
Type of Reinsurance Treaty
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._StatusClaim">
<summary>
Status of the claim
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._RetentionAmount">
<summary>
Retention amount
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._ClaimAmount">
<summary>
Total amount of the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._ClaimPaymentDate">
<summary>
Date of payment claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim._TypeOfReinsurance">
<summary>
Type of reinsurance.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'CLAIM_CES.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.ClaimCode">
<summary>
Code of The Claim Case or Claimant. (NCASE_NUM)..
</summary>
<remarks>Data-source is 'CLAIM_CES.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.ClaimType">
<summary>
Claim Type. (NDEMAN_TYPE)..
</summary>
<remarks>Data-source is 'CLAIM_CES.NDEMAN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.Schedule">
<summary>
Number of the cessions report (schedule). (NCESS_NU)..
</summary>
<remarks>Data-source is 'CLAIM_CES.NCESS_NU'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.CessionId">
<summary>
Number identifying the claim cession for the same claim/case (NID)..
</summary>
<remarks>Data-source is 'CLAIM_CES.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.ClaimEntryNumber">
<summary>
Entry number related to a claim. (NTRANSAC)..
</summary>
<remarks>Data-source is 'CLAIM_CES.NTRANSAC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.ReinsuranceTreaty">
<summary>
Number of the reinsurance treaty. (NNUMBER)..
</summary>
<remarks>Data-source is 'CLAIM_CES.NNUMBER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.ReinsuranceLineOfBusiness">
<summary>
Code of the line of business for reinsurance. (NBRANCH_REI)..
</summary>
<remarks>Data-source is 'CLAIM_CES.NBRANCH_REI'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.CessionNumber">
<summary>
Number identifying the cession (printing). (NNUM_CESS)..
</summary>
<remarks>Data-source is 'CLAIM_CES.NNUM_CESS'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'CLAIM_CES.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.CededAmount">
<summary>
Amount Ceded. (NCED_AMNT)..
</summary>
<remarks>Data-source is 'CLAIM_CES.NCED_AMNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.CededPercentage">
<summary>
Percentage of reinsurance ceded. (NCED_PER)..
</summary>
<remarks>Data-source is 'CLAIM_CES.NCED_PER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.ClaimTransactionType">
<summary>
Claim transaction type. (NCESS_CONC)..
</summary>
<remarks>Data-source is 'CLAIM_CES.NCESS_CONC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.CompanyCode">
<summary>
Code of the company. (NCOMPANY)..
</summary>
<remarks>Data-source is 'CLAIM_CES.NCOMPANY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.CessionType">
<summary>
Cession Type. (NCESS_TYPE)..
</summary>
<remarks>Data-source is 'CLAIM_CES.NCESS_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLAIM_CES.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.EndingDate">
<summary>
Ending date of the cession of losses. (DEND_DATE)..
</summary>
<remarks>Data-source is 'CLAIM_CES.DEND_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.EffectiveDate">
<summary>
Effective date of the cession. (DINIT_DATE)..
</summary>
<remarks>Data-source is 'CLAIM_CES.DINIT_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.LossDate">
<summary>
Date and hour when the loss occurred. (DOCCURDATE)..
</summary>
<remarks>Data-source is 'CLAIM_CES.DOCCURDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'CLAIM_CES.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.CessionHasBeenPrintedIndicator">
<summary>
The cession has been/has not been printed. (SPRINT_C)..
</summary>
<remarks>Data-source is 'CLAIM_CES.SPRINT_C'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLAIM_CES.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CLAIM_CES.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.AccountingLineOfBusiness">
<summary>
Code of the accounting line of business. (NBRANCH_LED)..
</summary>
<remarks>Data-source is 'CLAIM_CES.NBRANCH_LED'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'CLAIM_CES.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.InsuranceArea">
<summary>
Insurance area (Life or P&#38;C). (NINSUR_AREA)..
</summary>
<remarks>Data-source is 'CLAIM_CES.NINSUR_AREA'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.ClientID">
<summary>
Code of the insured client related to the coverage. (SCLIENT)..
</summary>
<remarks>Data-source is 'CLAIM_CES.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'CLAIM_CES.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.CessionYearAndMonth">
<summary>
Year and month of the cession. (NYEARMONTH)..
</summary>
<remarks>Data-source is 'CLAIM_CES.NYEARMONTH'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP_INSU)..
</summary>
<remarks>Data-source is 'CLAIM_CES.NGROUP_INSU'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.TypeOfTreaty">
<summary>
Type of Reinsurance Treaty (NTYPE)..
</summary>
<remarks>Data-source is 'CLAIM_CES.NTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.TypeOfTreatyEnum">
<summary>
Type of Reinsurance Treaty
</summary>
<remarks>This property use a enumeration based on property 'TypeOfTreaty'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.TypeOfTreatyEnumText">
<summary>
Type of Reinsurance Treaty
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.StatusClaim">
<summary>
Status of the claim (SSTACLAIM)..
</summary>
<remarks>Data-source is 'CLAIM_CES.SSTACLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.RetentionAmount">
<summary>
Retention amount (NRET_AMNT)..
</summary>
<remarks>Data-source is 'CLAIM_CES.NRET_AMNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.ClaimAmount">
<summary>
Total amount of the claim. (NCLA_AMNT)..
</summary>
<remarks>Data-source is 'CLAIM_CES.NCLA_AMNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.ClaimPaymentDate">
<summary>
Date of payment claim. (DCLAIM_PAY)..
</summary>
<remarks>Data-source is 'CLAIM_CES.DCLAIM_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.TypeOfReinsurance">
<summary>
Type of reinsurance. (NTYPE_REL)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_CES.NTYPE_REL'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.Compare(InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CessionReinsuranceClaimItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.ClaimTransactionTypeDescription">
 <summary>
 Claim transaction type.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE140'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.CessionTypeDescription">
 <summary>
 Cession Type.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE534'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.AccountingLineOfBusinessDescription">
 <summary>
 Code of the accounting line of business.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE75'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaim.InsuranceAreaDescription">
 <summary>
 Insurance area (Life or P&#38;C).
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5001'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaimCollection">
 <summary>
 Collection for CessionReinsuranceClaim class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaimCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaimCollection.AddCessionReinsuranceClaim">
 <summary>
 Add an instance of class 'CessionReinsuranceClaim' in the CessionReinsuranceClaimCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaimCollection.Compare(InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaimCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaimCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaimCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CessionReinsuranceClaimCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer">
 <summary>
 CIIUs linked with the Commercial Activity
 </summary>
<remarks>Data-source is 'CIIU_ACTCOMMER'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.CreateNewCIIU_ActCommer">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer._CIIUCode">
<summary>
CIIU Code
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer._CommercialActivityCode">
<summary>
Commercial Activity Code
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CIIU_ACTCOMMER.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.CIIUCode">
<summary>
CIIU Code (NCIIU)..
</summary>
<remarks>Data-source is 'CIIU_ACTCOMMER.NCIIU'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.CommercialActivityCode">
<summary>
Commercial Activity Code (NCOMMER_ACTIVITY)..
</summary>
<remarks>Data-source is 'CIIU_ACTCOMMER.NCOMMER_ACTIVITY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'CIIU_ACTCOMMER.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CIIU_ACTCOMMER.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'CIIU_ACTCOMMER.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.Compare(InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CIIU_ActCommerItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommer.CommercialActivityCodeDescription">
 <summary>
 Commercial Activity Code
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9015'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommerCollection">
 <summary>
 Collection for CIIU_ActCommer class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommerCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommerCollection.AddCIIU_ActCommer">
 <summary>
 Add an instance of class 'CIIU_ActCommer' in the CIIU_ActCommerCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommerCollection.Compare(InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommerCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommerCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommerCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CIIU_ActCommerCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Claim">
 <summary>
 General information of a claim.
 </summary>
<remarks>Data-source is 'CLAIM'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.CreateNewClaim">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._TypeOfLoss">
<summary>
Type of loss in the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._CauseOfLoss">
<summary>
Code of cause of the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._PolicyHolderClientID">
<summary>
ClientID of the policy holder.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._CededCoinsuranceIndicator">
<summary>
Coinsurance ceded indicator.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._ClaimDate">
<summary>
Date when the Claim was made.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._CarrierClaimID">
<summary>
Number of the claim for the Insurance Company.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._ClaimIDForLeadingCompany">
<summary>
Claim Number of the Leader Company.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._TotalRecoveryExpenses">
<summary>
Total amount of recovery expenses (in local currency).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._OutstandingReserveAmount">
<summary>
Outstanding reserve amount (in local currency).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._PaidAmount">
<summary>
Amount paid on the reserve (in local currency).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._RecoveredAmount">
<summary>
Amount recovered (in local currency).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._CurrentReserveAmount">
<summary>
Current reserve amount (in local currency).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._FormatOfDeclineLetter">
<summary>
Code identifying the letter of decline.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._LastEntryNumber">
<summary>
Last entry number for the claim (table claim_his).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._NoteID">
<summary>
Number of the note containing the comments.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._CancellationCode">
<summary>
Claim cancellation code.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._LossDate">
<summary>
Date and hour when the loss occurred.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._BranchOffice">
<summary>
Code of the branch office where the claim was made.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._BranchOfficeAdministratingClaim">
<summary>
Code of the branch office in charge of processing the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._BranchOfficeProcessingClaim">
<summary>
Code of the branch office in charge of processing the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._LapseDate">
<summary>
Date when the claim will be closed (will lapse) if the requirements are not received.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._PrintFolderForClaim">
<summary>
Printing folder for claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._CededReinsuranceIndicator">
<summary>
Reinsurance ceded indicator.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._DeletePolicyInformationBy">
<summary>
Date when the data of the policy must be deleted.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._ViewStatus">
<summary>
View Status of the Claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._ClaimStatus">
<summary>
Claim status.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._ReasonForClaimDeclined">
<summary>
Code of the reason why the claim was declined.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._ClaimFormNumber">
<summary>
Number of Claim Form.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._TotalAmountOfTax">
<summary>
Total amount of taxes.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._ImageID">
<summary>
Image number related to the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._ProcessedForNonProportionalReinsurance">
<summary>
It indicates whether this record has been processed by the non-proportional reinsurance process.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._AffectedClientID">
<summary>
ClientID of the person affected by the loss.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._ClaimsBordereaux">
<summary>
Number of the claims bordereaux.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._LatestLiquidationDate">
<summary>
The Latest possible date to liquidate the claim
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._CatastropheCode">
<summary>
Code that identifies an catastrophic event.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._SendCheckToThisBranchOffice">
<summary>
Branch office to which the payment should be sent for delivery
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._ReasonForClaimUncomplete">
<summary>
Reason why the claim is in pending (incomplete) status.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._Relationship">
<summary>
Code for relationship among clients.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._OfficeCode">
<summary>
Code of Office where The Claim was made.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._Agency">
<summary>
Code of Agency.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._PaymentAgency">
<summary>
Agency that will make the payment.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._SendCheckToThisOffice">
<summary>
Office to which the payment should be sent for delivery
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._CodeJudicialAuthority">
<summary>
Code of judicial authority
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._ProductTypeCommercialPartner">
<summary>
Product Type of the commercial partner
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._CommercialPartnerAgencyNumber">
<summary>
Agency number of Commercial Partner
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._EffectiveDate">
<summary>
Effective date of the policy/certificate
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._ContractNumber">
<summary>
Contract number
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._AssignedAnalyst">
<summary>
Assigned analyst
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._DateOfAssigning">
<summary>
Date of assigning to the analyst
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._InternalIdOfPreclaim">
<summary>
Internal Id of preclaim
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._NumberRAJ">
<summary>
Number of Registration of legal actions
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._DateLastView">
<summary>
Last date the information was viewed
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._NIDCATAST_REIN">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._NIDCATAST_CNSF">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._SFOLIO">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._SCLAPD">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._NKEYEVENTREIN">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._NKEYEVENTCNSF">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._SREJECTIONLETT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._NTIMELETTER">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._NTHEATLETT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._NPARAM1">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._NPARAM2">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._STHIRDCOMPANY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._NTHIRDCOMPANY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._NoteDenouncedNum">
<summary>
Note denounced number
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._ClaimRegistrationNumber">
<summary>
Number of the registration claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._AutomobileClaims">
<summary>
Data on automobile claims.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._ClaimCases">
<summary>
Cases associated with a claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._WindowClaim">
<summary>
Windows associated with the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._SpecificRiskClaims">
<summary>
Specific risk claim
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._ClaimStatusHistoryCollection">
<summary>
Claim Status history
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'CLAIM.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'CLAIM.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'CLAIM.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'CLAIM.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'CLAIM.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.TypeOfLoss">
<summary>
Type of loss in the claim. (SCLAIMTYP)..
</summary>
<remarks>Data-source is 'CLAIM.SCLAIMTYP'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.CauseOfLoss">
<summary>
Code of cause of the claim. (NCAUSECOD)..
</summary>
<remarks>Data-source is 'CLAIM.NCAUSECOD'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'CLAIM.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.PolicyHolderClientID">
<summary>
ClientID of the policy holder. (SCLIENT)..
</summary>
<remarks>Data-source is 'CLAIM.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.CededCoinsuranceIndicator">
<summary>
Coinsurance ceded indicator. (SCOINSURI)..
</summary>
<remarks>Data-source is 'CLAIM.SCOINSURI'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLAIM.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.ClaimDate">
<summary>
Date when the Claim was made. (DDECLADAT)..
</summary>
<remarks>Data-source is 'CLAIM.DDECLADAT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.CarrierClaimID">
<summary>
Number of the claim for the Insurance Company. (SINS_CLAIM)..
</summary>
<remarks>Data-source is 'CLAIM.SINS_CLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.ClaimIDForLeadingCompany">
<summary>
Claim Number of the Leader Company. (SLEADCIAL)..
</summary>
<remarks>Data-source is 'CLAIM.SLEADCIAL'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.TotalRecoveryExpenses">
<summary>
Total amount of recovery expenses (in local currency). (NLOC_COS_RE)..
</summary>
<remarks>Data-source is 'CLAIM.NLOC_COS_RE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.OutstandingReserveAmount">
<summary>
Outstanding reserve amount (in local currency). (NLOC_OUT_AM)..
</summary>
<remarks>Data-source is 'CLAIM.NLOC_OUT_AM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.PaidAmount">
<summary>
Amount paid on the reserve (in local currency). (NLOC_PAY_AM)..
</summary>
<remarks>Data-source is 'CLAIM.NLOC_PAY_AM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.RecoveredAmount">
<summary>
Amount recovered (in local currency). (NLOC_REC_AM)..
</summary>
<remarks>Data-source is 'CLAIM.NLOC_REC_AM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.CurrentReserveAmount">
<summary>
Current reserve amount (in local currency). (NLOC_RESERV)..
</summary>
<remarks>Data-source is 'CLAIM.NLOC_RESERV'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.FormatOfDeclineLetter">
<summary>
Code identifying the letter of decline. (SMAILNUMB)..
</summary>
<remarks>Data-source is 'CLAIM.SMAILNUMB'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.LastEntryNumber">
<summary>
Last entry number for the claim (table claim_his). (NMOVEMENT)..
</summary>
<remarks>Data-source is 'CLAIM.NMOVEMENT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.NoteID">
<summary>
Number of the note containing the comments. (NNOTENUM)..
</summary>
<remarks>Data-source is 'CLAIM.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.CancellationCode">
<summary>
Claim cancellation code. (NNULLCODE)..
</summary>
<remarks>Data-source is 'CLAIM.NNULLCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.LossDate">
<summary>
Date and hour when the loss occurred. (DOCCURDAT)..
</summary>
<remarks>Data-source is 'CLAIM.DOCCURDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.BranchOffice">
<summary>
Code of the branch office where the claim was made. (NOFFICE)..
</summary>
<remarks>Data-source is 'CLAIM.NOFFICE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.BranchOfficeAdministratingClaim">
<summary>
Code of the branch office in charge of processing the claim. (NOFFICE_OWN)..
</summary>
<remarks>Data-source is 'CLAIM.NOFFICE_OWN'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.BranchOfficeProcessingClaim">
<summary>
Code of the branch office in charge of processing the claim. (NOFFICTRA)..
</summary>
<remarks>Data-source is 'CLAIM.NOFFICTRA'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.LapseDate">
<summary>
Date when the claim will be closed (will lapse) if the requirements are not received. (DPRESCDAT)..
</summary>
<remarks>Data-source is 'CLAIM.DPRESCDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.PrintFolderForClaim">
<summary>
Printing folder for claim. (SPRINTED)..
</summary>
<remarks>Data-source is 'CLAIM.SPRINTED'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.CededReinsuranceIndicator">
<summary>
Reinsurance ceded indicator. (SREINSURI)..
</summary>
<remarks>Data-source is 'CLAIM.SREINSURI'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.DeletePolicyInformationBy">
<summary>
Date when the data of the policy must be deleted. (DSHOW_DATE)..
</summary>
<remarks>Data-source is 'CLAIM.DSHOW_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.ViewStatus">
<summary>
View Status of the Claim. (SSHOW_STATU)..
</summary>
<remarks>Data-source is 'CLAIM.SSHOW_STATU'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.ClaimStatus">
<summary>
Claim status. (SSTACLAIM)..
</summary>
<remarks>Data-source is 'CLAIM.SSTACLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.ReasonForClaimDeclined">
<summary>
Code of the reason why the claim was declined. (NUNACCODE)..
</summary>
<remarks>Data-source is 'CLAIM.NUNACCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLAIM.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.ClaimFormNumber">
<summary>
Number of Claim Form. (SNUMFORM)..
</summary>
<remarks>Data-source is 'CLAIM.SNUMFORM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.TotalAmountOfTax">
<summary>
Total amount of taxes. (NTAX_AMO)..
</summary>
<remarks>Data-source is 'CLAIM.NTAX_AMO'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.ImageID">
<summary>
Image number related to the claim. (NIMAGENUM)..
</summary>
<remarks>Data-source is 'CLAIM.NIMAGENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.ProcessedForNonProportionalReinsurance">
<summary>
It indicates whether this record has been processed by the non-proportional reinsurance process. (SCESS_NPR)..
</summary>
<remarks>Data-source is 'CLAIM.SCESS_NPR'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.AffectedClientID">
<summary>
ClientID of the person affected by the loss. (SCLIENT2)..
</summary>
<remarks>Data-source is 'CLAIM.SCLIENT2'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.ClaimsBordereaux">
<summary>
Number of the claims bordereaux. (NBORDEREAUX_CL)..
</summary>
<remarks>Data-source is 'CLAIM.NBORDEREAUX_CL'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.LatestLiquidationDate">
<summary>
The Latest possible date to liquidate the claim (DLIMIT_PAY)..
</summary>
<remarks>Data-source is 'CLAIM.DLIMIT_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.CatastropheCode">
<summary>
Code that identifies an catastrophic event. (NIDCATAS)..
</summary>
<remarks>Data-source is 'CLAIM.NIDCATAS'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.SendCheckToThisBranchOffice">
<summary>
Branch office to which the payment should be sent for delivery (NOFFICE_PAY)..
</summary>
<remarks>Data-source is 'CLAIM.NOFFICE_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.ReasonForClaimUncomplete">
<summary>
Reason why the claim is in pending (incomplete) status. (NWAITCL_CODE)..
</summary>
<remarks>Data-source is 'CLAIM.NWAITCL_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.Relationship">
<summary>
Code for relationship among clients. (NRELASHIP)..
</summary>
<remarks>Data-source is 'CLAIM.NRELASHIP'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.OfficeCode">
<summary>
Code of Office where The Claim was made. (NOFFICEAGEN)..
</summary>
<remarks>Data-source is 'CLAIM.NOFFICEAGEN'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.Agency">
<summary>
Code of Agency. (NAGENCY)..
</summary>
<remarks>Data-source is 'CLAIM.NAGENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.PaymentAgency">
<summary>
Agency that will make the payment. (NAGENCY_PAY)..
</summary>
<remarks>Data-source is 'CLAIM.NAGENCY_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.SendCheckToThisOffice">
<summary>
Office to which the payment should be sent for delivery (NOFFICEAGEN_PAY)..
</summary>
<remarks>Data-source is 'CLAIM.NOFFICEAGEN_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.CodeJudicialAuthority">
<summary>
Code of judicial authority (NJUDICIAL_AUTHORITY)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM.NJUDICIAL_AUTHORITY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.ProductTypeCommercialPartner">
<summary>
Product Type of the commercial partner (SPRODUCTTYPE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM.SPRODUCTTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.CommercialPartnerAgencyNumber">
<summary>
Agency number of Commercial Partner (NAGENCYPARTNER)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM.NAGENCYPARTNER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.EffectiveDate">
<summary>
Effective date of the policy/certificate (DSTARTDATE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM.DSTARTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.ContractNumber">
<summary>
Contract number (SCONTRACT)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM.SCONTRACT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.AssignedAnalyst">
<summary>
Assigned analyst (NANALISTCODE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM.NANALISTCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.DateOfAssigning">
<summary>
Date of assigning to the analyst (DASSIGNDATE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM.DASSIGNDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.InternalIdOfPreclaim">
<summary>
Internal Id of preclaim (NIDPRECLAIM)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM.NIDPRECLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.NumberRAJ">
<summary>
Number of Registration of legal actions (NRAJ)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM.NRAJ'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.DateLastView">
<summary>
Last date the information was viewed (DLASTVIEW)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM.DLASTVIEW'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.NIDCATAST_REIN">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM.NIDCATAST_REIN'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.NIDCATAST_CNSF">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM.NIDCATAST_CNSF'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.SFOLIO">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM.SFOLIO'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.SCLAPD">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM.SCLAPD'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.NKEYEVENTREIN">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM.NKEYEVENTREIN'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.NKEYEVENTCNSF">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM.NKEYEVENTCNSF'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.SREJECTIONLETT">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM.SREJECTIONLETT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.NTIMELETTER">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM.NTIMELETTER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.NTHEATLETT">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM.NTHEATLETT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.NPARAM1">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM.NPARAM1'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.NPARAM2">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM.NPARAM2'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.STHIRDCOMPANY">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM.STHIRDCOMPANY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.NTHIRDCOMPANY">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM.NTHIRDCOMPANY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.NoteDenouncedNum">
<summary>
Note denounced number (NNOTENUM_DE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM.NNOTENUM_DE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.ClaimRegistrationNumber">
<summary>
Number of the registration claim. (NCLAIM_REGIST)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM.NCLAIM_REGIST'.</remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Claim._Images">
<summary>
Images.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.Images">
<summary>
Images.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.NewImagesInstance">
<summary>
Initializes the 'Images' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.NewImagesItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Images', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Images' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.NewAutomobileClaimsInstance">
<summary>
Initializes the 'AutomobileClaims' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.NewAutomobileClaimItem(System.Boolean)">
<summary>
Add a new item to the collection of 'AutomobileClaims', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'AutomobileClaim' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.AutomobileClaims">
<summary>
Data on automobile claims. collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.NewClaimCasesInstance">
<summary>
Initializes the 'ClaimCases' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.NewClaimCaseItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ClaimCases', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ClaimCase' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.ClaimCases">
<summary>
Cases associated with a claim. collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.NewWindowClaimInstance">
<summary>
Initializes the 'WindowClaim' instance.
</summary>
 <returns>The 'WindowClaim' class instance.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.WindowClaim">
<summary>
Windows associated with the claim. collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.NewSpecificRiskClaimsInstance">
<summary>
Initializes the 'SpecificRiskClaims' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.NewSpecificRiskClaimItem(System.Boolean)">
<summary>
Add a new item to the collection of 'SpecificRiskClaims', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'SpecificRiskClaim' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.SpecificRiskClaims">
<summary>
Specific risk claim collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.NewClaimStatusHistoryCollectionInstance">
<summary>
Initializes the 'ClaimStatusHistoryCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.NewClaimStatusHistoryItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ClaimStatusHistoryCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ClaimStatusHistory' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.ClaimStatusHistoryCollection">
<summary>
Claim Status history collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.Compare(InMotionGIT.Claim.Entity.Contracts.Claim,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClaimItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Claim.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.TypeOfLossDescription">
 <summary>
 Type of loss in the claim.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE132'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.CancellationCodeDescription">
 <summary>
 Claim cancellation code.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE136'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.BranchOfficeDescription">
 <summary>
 Code of the branch office where the claim was made.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.BranchOfficeAdministratingClaimDescription">
 <summary>
 Code of the branch office in charge of processing the claim.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.BranchOfficeProcessingClaimDescription">
 <summary>
 Code of the branch office in charge of processing the claim.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.ClaimStatusDescription">
 <summary>
 Claim status.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE135'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.ReasonForClaimDeclinedDescription">
 <summary>
 Code of the reason why the claim was declined.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE133'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.SendCheckToThisBranchOfficeDescription">
 <summary>
 Branch office to which the payment should be sent for delivery
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.ReasonForClaimUncompleteDescription">
 <summary>
 Reason why the claim is in pending (incomplete) status.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5604'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.RelationshipDescription">
 <summary>
 Code for relationship among clients.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE15'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.OfficeCodeDescription">
 <summary>
 Code of Office where The Claim was made.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5556'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.SendCheckToThisOfficeDescription">
 <summary>
 Office to which the payment should be sent for delivery
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5556'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Claim.CodeJudicialAuthorityDescription">
 <summary>
 Code of judicial authority
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6841' on the table 'TABLE6841'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimCollection">
 <summary>
 Collection for Claim class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCollection.AddClaim">
 <summary>
 Add an instance of class 'Claim' in the ClaimCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCollection.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary">
 <summary>
 Client roles associated with a claim.
 </summary>
<remarks>Data-source is 'CLAIMBENEF'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.CreateNewClaimBeneficiary">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._ClaimCode">
<summary>
Code of The Claim Case or Claimant.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._ClaimType">
<summary>
Claim Type.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._ClientID">
<summary>
Client code of the beneficiary.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._ConsecutiveNumber">
<summary>
Correlative number (by claim and case), that identifies the record as unique.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._BeneficiaryType">
<summary>
Type of beneficiary.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._SendCheckToThisBranchOffice">
<summary>
Branch office to which the payment should be sent for delivery
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._ClaimantIndicator">
<summary>
It indicates that the client of this record is the claimant of the case.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._Relationship">
<summary>
Relationship of the beneficiary with the insured of the policy.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._PercentageShare">
<summary>
Percentage of share of the beneficiary.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._TypeOfBeneficiary">
<summary>
Type of beneficiary related tot he claim
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._Amount">
<summary>
Amount to be paid periodically.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._InitialPaymentDate">
<summary>
Date when the periodical payment begins.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._EndingDate">
<summary>
Final date of payment of the annuity.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._GuardianClientID">
<summary>
Client ID of the legal representative or guardian of the beneficiary.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._NextPayment">
<summary>
Date of the next payment (only for periodical payments)
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._CoverageCode">
<summary>
Code of the coverage associated to the beneficiary.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._Payinstall">
<summary>
It indicates that the rent has been paid
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._OfficeCode">
<summary>
Code of Office.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._Agency">
<summary>
Code of Agency.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._NoteID">
<summary>
Number of the note containing the comments.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._CitationDate">
<summary>
Date when the beneficiary attends the citation.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._PaymentMode">
<summary>
Claim payment mode
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._ContingentBeneficiary">
<summary>
Contingent beneficiary indicator (1.- YES , 2.- No).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._ParcitipationOrder">
<summary>
Order of participation in case of contingency.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._PrimaryBeneficiary">
<summary>
Indicates the primary beneficiary to which the contingent beneficiary is replacing.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._ClaimedPerson">
<summary>
Persons with claims.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._DocumentRequestInClaims">
<summary>
Documents requested on a claim.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'CLAIMBENEF.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.ClaimCode">
<summary>
Code of The Claim Case or Claimant. (NCASE_NUM)..
</summary>
<remarks>Data-source is 'CLAIMBENEF.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.ClaimType">
<summary>
Claim Type. (NDEMAN_TYPE)..
</summary>
<remarks>Data-source is 'CLAIMBENEF.NDEMAN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.ClientID">
<summary>
Client code of the beneficiary. (SCLIENT)..
</summary>
<remarks>Data-source is 'CLAIMBENEF.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.ConsecutiveNumber">
<summary>
Correlative number (by claim and case), that identifies the record as unique. (NID)..
</summary>
<remarks>Data-source is 'CLAIMBENEF.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.BeneficiaryType">
<summary>
Type of beneficiary. (NBENE_TYPE)..
</summary>
<remarks>Data-source is 'CLAIMBENEF.NBENE_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.SendCheckToThisBranchOffice">
<summary>
Branch office to which the payment should be sent for delivery (NOFFICE_PAY)..
</summary>
<remarks>Data-source is 'CLAIMBENEF.NOFFICE_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLAIMBENEF.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.ClaimantIndicator">
<summary>
It indicates that the client of this record is the claimant of the case. (SDEMANDANT)..
</summary>
<remarks>Data-source is 'CLAIMBENEF.SDEMANDANT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLAIMBENEF.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.Relationship">
<summary>
Relationship of the beneficiary with the insured of the policy. (NRELATION)..
</summary>
<remarks>Data-source is 'CLAIMBENEF.NRELATION'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.PercentageShare">
<summary>
Percentage of share of the beneficiary. (NPARTICIP)..
</summary>
<remarks>Data-source is 'CLAIMBENEF.NPARTICIP'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.TypeOfBeneficiary">
<summary>
Type of beneficiary related tot he claim (SBENEF_TYP)..
</summary>
<remarks>Data-source is 'CLAIMBENEF.SBENEF_TYP'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.Amount">
<summary>
Amount to be paid periodically. (NAMOUNT)..
</summary>
<remarks>Data-source is 'CLAIMBENEF.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.InitialPaymentDate">
<summary>
Date when the periodical payment begins. (DINIT_DATE)..
</summary>
<remarks>Data-source is 'CLAIMBENEF.DINIT_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.EndingDate">
<summary>
Final date of payment of the annuity. (DEND_DATE)..
</summary>
<remarks>Data-source is 'CLAIMBENEF.DEND_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.GuardianClientID">
<summary>
Client ID of the legal representative or guardian of the beneficiary. (SCLIENT_REP)..
</summary>
<remarks>Data-source is 'CLAIMBENEF.SCLIENT_REP'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.NextPayment">
<summary>
Date of the next payment (only for periodical payments) (DNEXT_PAY)..
</summary>
<remarks>Data-source is 'CLAIMBENEF.DNEXT_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'CLAIMBENEF.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.CoverageCode">
<summary>
Code of the coverage associated to the beneficiary. (NCOVER)..
</summary>
<remarks>Data-source is 'CLAIMBENEF.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'CLAIMBENEF.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.Payinstall">
<summary>
It indicates that the rent has been paid (SPAY_INSTALL)..
</summary>
<remarks>Data-source is 'CLAIMBENEF.SPAY_INSTALL'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.OfficeCode">
<summary>
Code of Office. (NOFFICEAGEN_PAY)..
</summary>
<remarks>Data-source is 'CLAIMBENEF.NOFFICEAGEN_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.Agency">
<summary>
Code of Agency. (NAGENCY_PAY)..
</summary>
<remarks>Data-source is 'CLAIMBENEF.NAGENCY_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.NoteID">
<summary>
Number of the note containing the comments. (NNOTENUM)..
</summary>
<remarks>Data-source is 'CLAIMBENEF.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.CitationDate">
<summary>
Date when the beneficiary attends the citation. (DSHOWDATE)..
</summary>
<remarks>Data-source is 'CLAIMBENEF.DSHOWDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.PaymentMode">
<summary>
Claim payment mode (NPAY_FORM)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIMBENEF.NPAY_FORM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.ContingentBeneficiary">
<summary>
Contingent beneficiary indicator (1.- YES , 2.- No). (SCONTING)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIMBENEF.SCONTING'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.ParcitipationOrder">
<summary>
Order of participation in case of contingency. (NORDPARTICIP)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIMBENEF.NORDPARTICIP'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.PrimaryBeneficiary">
<summary>
Indicates the primary beneficiary to which the contingent beneficiary is replacing. (SBENEF_REPLACE)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIMBENEF.SBENEF_REPLACE'.</remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.NewClaimedPersonInstance">
<summary>
Initializes the 'ClaimedPerson' instance.
</summary>
 <returns>The 'ClaimedPerson' class instance.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.ClaimedPerson">
<summary>
Persons with claims. collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.NewDocumentRequestInClaimsInstance">
<summary>
Initializes the 'DocumentRequestInClaims' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.NewDocumentRequestInClaimItem(System.Boolean)">
<summary>
Add a new item to the collection of 'DocumentRequestInClaims', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'DocumentRequestInClaim' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.DocumentRequestInClaims">
<summary>
Documents requested on a claim. collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClaimBeneficiaryItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.BeneficiaryTypeDescription">
 <summary>
 Type of beneficiary.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE184'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.SendCheckToThisBranchOfficeDescription">
 <summary>
 Branch office to which the payment should be sent for delivery
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.RelationshipDescription">
 <summary>
 Relationship of the beneficiary with the insured of the policy.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE15'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.OfficeCodeDescription">
 <summary>
 Code of Office.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5556'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiary.PaymentModeDescription">
 <summary>
 Claim payment mode
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE138'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiaryCollection">
 <summary>
 Collection for ClaimBeneficiary class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiaryCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiaryCollection.AddClaimBeneficiary">
 <summary>
 Add an instance of class 'ClaimBeneficiary' in the ClaimBeneficiaryCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiaryCollection.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiaryCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiaryCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiaryCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimBeneficiaryCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimCase">
 <summary>
 Cases associated with a claim.
 </summary>
<remarks>Data-source is 'CLAIM_CASE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.CreateNewClaimCase">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._ClaimCode">
<summary>
Code of The Claim Case or Claimant.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._ClaimType">
<summary>
Claim type (loss on a person, vehicle, property, etc).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._CaseStatus">
<summary>
Claim case status.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._NoteID">
<summary>
Number of the note containing the comments.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._AffectsLossRatio">
<summary>
It indicates that this case will be considered to calculate loss ratio, for the purpose of low loss ratio bonus.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._InitialGrowthRate">
<summary>
Initial growth rate
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._EndGrowthRate">
<summary>
Final growth rate
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._HasSurvivalBenefs">
<summary>
Indicates if the claim has surviving beneficiaries.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._CitationDate">
<summary>
Date of citation sent to beneficiaries.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._LimitDateSummon">
<summary>
Deadline for the appearance of the beneficiaries cited.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._sAfp_trans_type">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._nStay_bonus">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._nApv_capital">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._nApv_balance_bc2052">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._nApv_balance_ac2052">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._nTransf_amount">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._nApv_tax">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._nApv_benef_balance">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._nAfp">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._Privatenotenumber">
<summary>
Private note number
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._NumberoftheEvaluationNote">
<summary>
Number of the evaluation note
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._CoinsuranceDistributionOfClaim">
<summary>
Distribution of coinsurance in a claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._ClaimCoverages">
<summary>
Coverages related with a claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._DiagnosisHealthClaims">
<summary>
Information of diagnosis of a health's incident.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._ServicesInClaim">
<summary>
Service provided by professionals in a health claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._ReinsuranceDistributionOfClaims">
<summary>
Distribution of reinsurance in a claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._GoodStrickenInTheTransport">
<summary>
Merchandise affected in a claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._HealthClaim">
<summary>
Information of medical claims (health).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._AutomobileClaim">
<summary>
Data on automobile claims.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._DamagesInClaim">
<summary>
Damages occurred to the insured risks in a claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._ClaimsHistory">
<summary>
History of the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._ThirdPartyAutomobileClaim">
<summary>
third parties involved in automobile claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._ClaimBeneficiaries">
<summary>
Client roles associated with a claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._LifeClaim">
<summary>
Information of claims of life.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCase._InterDepartmentsInquieryCollection">
<summary>
Inter Areas Claims Inquirys
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'CLAIM_CASE.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.ClaimCode">
<summary>
Code of The Claim Case or Claimant. (NCASE_NUM)..
</summary>
<remarks>Data-source is 'CLAIM_CASE.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.ClaimType">
<summary>
Claim type (loss on a person, vehicle, property, etc). (NDEMAN_TYPE)..
</summary>
<remarks>Data-source is 'CLAIM_CASE.NDEMAN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLAIM_CASE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLAIM_CASE.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.CaseStatus">
<summary>
Claim case status. (SSTACASE)..
</summary>
<remarks>Data-source is 'CLAIM_CASE.SSTACASE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.NoteID">
<summary>
Number of the note containing the comments. (NNOTEDAMA)..
</summary>
<remarks>Data-source is 'CLAIM_CASE.NNOTEDAMA'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.AffectsLossRatio">
<summary>
It indicates that this case will be considered to calculate loss ratio, for the purpose of low loss ratio bonus. (SCLAIM_AFFE)..
</summary>
<remarks>Data-source is 'CLAIM_CASE.SCLAIM_AFFE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.InitialGrowthRate">
<summary>
Initial growth rate (NGROWTH_RATEI)..
</summary>
<remarks>Data-source is 'CLAIM_CASE.NGROWTH_RATEI'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.EndGrowthRate">
<summary>
Final growth rate (NGROWTH_RATEE)..
</summary>
<remarks>Data-source is 'CLAIM_CASE.NGROWTH_RATEE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.HasSurvivalBenefs">
<summary>
Indicates if the claim has surviving beneficiaries. (SHAS_SURV_PENSION_BENEFS)..
</summary>
<remarks>Data-source is 'CLAIM_CASE.SHAS_SURV_PENSION_BENEFS'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.CitationDate">
<summary>
Date of citation sent to beneficiaries. (DSUMMON)..
</summary>
<remarks>Data-source is 'CLAIM_CASE.DSUMMON'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.LimitDateSummon">
<summary>
Deadline for the appearance of the beneficiaries cited. (DSUMMON_LIMIT)..
</summary>
<remarks>Data-source is 'CLAIM_CASE.DSUMMON_LIMIT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.sAfp_trans_type">
<summary>
.
</summary>
<remarks>Data-source is 'CLAIM_CASE.SAFP_TRANS_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.nStay_bonus">
<summary>
.
</summary>
<remarks>Data-source is 'CLAIM_CASE.NSTAY_BONUS'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.nApv_capital">
<summary>
.
</summary>
<remarks>Data-source is 'CLAIM_CASE.NAPV_CAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.nApv_balance_bc2052">
<summary>
.
</summary>
<remarks>Data-source is 'CLAIM_CASE.NAPV_BALANCE_BC2052'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.nApv_balance_ac2052">
<summary>
.
</summary>
<remarks>Data-source is 'CLAIM_CASE.NAPV_BALANCE_AC2052'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.nTransf_amount">
<summary>
.
</summary>
<remarks>Data-source is 'CLAIM_CASE.NTRANSF_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.nApv_tax">
<summary>
.
</summary>
<remarks>Data-source is 'CLAIM_CASE.NAPV_TAX'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.nApv_benef_balance">
<summary>
.
</summary>
<remarks>Data-source is 'CLAIM_CASE.NAPV_BENEF_BALANCE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.nAfp">
<summary>
.
</summary>
<remarks>Data-source is 'CLAIM_CASE.NAFP'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.Privatenotenumber">
<summary>
Private note number (NNOTENUM_PR)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_CASE.NNOTENUM_PR'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.NumberoftheEvaluationNote">
<summary>
Number of the evaluation note (NNOTENUM_EV)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_CASE.NNOTENUM_EV'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.NewCoinsuranceDistributionOfClaimInstance">
<summary>
Initializes the 'CoinsuranceDistributionOfClaim' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.NewCoinsuranceDistributionOfClaimItem(System.Boolean)">
<summary>
Add a new item to the collection of 'CoinsuranceDistributionOfClaim', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'CoinsuranceDistributionOfClaim' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.CoinsuranceDistributionOfClaim">
<summary>
Distribution of coinsurance in a claim. collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.NewClaimCoveragesInstance">
<summary>
Initializes the 'ClaimCoverages' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.NewClaimCoverageItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ClaimCoverages', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ClaimCoverage' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.ClaimCoverages">
<summary>
Coverages related with a claim. collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.NewDiagnosisHealthClaimsInstance">
<summary>
Initializes the 'DiagnosisHealthClaims' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.NewDiagnosisHealthClaimItem(System.Boolean)">
<summary>
Add a new item to the collection of 'DiagnosisHealthClaims', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'DiagnosisHealthClaim' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.DiagnosisHealthClaims">
<summary>
Information of diagnosis of a health's incident. collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.NewServicesInClaimInstance">
<summary>
Initializes the 'ServicesInClaim' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.NewServiceInClaimItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ServicesInClaim', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ServiceInClaim' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.ServicesInClaim">
<summary>
Service provided by professionals in a health claim. collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.NewReinsuranceDistributionOfClaimsInstance">
<summary>
Initializes the 'ReinsuranceDistributionOfClaims' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.NewReinsuranceDistributionOfClaimItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ReinsuranceDistributionOfClaims', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ReinsuranceDistributionOfClaim' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.ReinsuranceDistributionOfClaims">
<summary>
Distribution of reinsurance in a claim. collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.NewGoodStrickenInTheTransportInstance">
<summary>
Initializes the 'GoodStrickenInTheTransport' instance.
</summary>
 <returns>The 'GoodStrickenInTheTransport' class instance.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.GoodStrickenInTheTransport">
<summary>
Merchandise affected in a claim. collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.NewHealthClaimInstance">
<summary>
Initializes the 'HealthClaim' instance.
</summary>
 <returns>The 'HealthClaim' class instance.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.HealthClaim">
<summary>
Information of medical claims (health). collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.NewAutomobileClaimInstance">
<summary>
Initializes the 'AutomobileClaim' instance.
</summary>
 <returns>The 'AutomobileClaim' class instance.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.AutomobileClaim">
<summary>
Data on automobile claims. collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.NewDamagesInClaimInstance">
<summary>
Initializes the 'DamagesInClaim' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.NewDamageInClaimItem(System.Boolean)">
<summary>
Add a new item to the collection of 'DamagesInClaim', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'DamageInClaim' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.DamagesInClaim">
<summary>
Damages occurred to the insured risks in a claim. collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.NewClaimsHistoryInstance">
<summary>
Initializes the 'ClaimsHistory' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.NewClaimHistoryItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ClaimsHistory', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ClaimHistory' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.ClaimsHistory">
<summary>
History of the claim. collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.NewThirdPartyAutomobileClaimInstance">
<summary>
Initializes the 'ThirdPartyAutomobileClaim' instance.
</summary>
 <returns>The 'ThirdPartyAutomobileClaim' class instance.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.ThirdPartyAutomobileClaim">
<summary>
third parties involved in automobile claim. collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.NewClaimBeneficiariesInstance">
<summary>
Initializes the 'ClaimBeneficiaries' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.NewClaimBeneficiaryItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ClaimBeneficiaries', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ClaimBeneficiary' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.ClaimBeneficiaries">
<summary>
Client roles associated with a claim. collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.NewLifeClaimInstance">
<summary>
Initializes the 'LifeClaim' instance.
</summary>
 <returns>The 'LifeClaim' class instance.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.LifeClaim">
<summary>
Information of claims of life. collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.NewInterDepartmentsInquieryCollectionInstance">
<summary>
Initializes the 'InterDepartmentsInquieryCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.NewInterDepartmentsInquieryItem(System.Boolean)">
<summary>
Add a new item to the collection of 'InterDepartmentsInquieryCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'InterDepartmentsInquiery' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.InterDepartmentsInquieryCollection">
<summary>
Inter Areas Claims Inquirys collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimCase,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClaimCaseItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCase.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.ClaimTypeDescription">
 <summary>
 Claim type (loss on a person, vehicle, property, etc).
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE692'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.CaseStatusDescription">
 <summary>
 Claim case status.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE135'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCase.nAfpDescription">
 <summary>
 
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5524'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimCaseCollection">
 <summary>
 Collection for ClaimCase class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCaseCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCaseCollection.AddClaimCase">
 <summary>
 Add an instance of class 'ClaimCase' in the ClaimCaseCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCaseCollection.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimCaseCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCaseCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCaseCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCaseCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct">
 <summary>
 Causes of claim for product.
 </summary>
<remarks>Data-source is 'CLAIM_CAUS'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.CreateNewClaimCausePerProduct">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct._ProductCode">
<summary>
Code of the product for the reason of loss.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct._CauseOfClaim">
<summary>
Code of cause of the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct._TypeOfLoss">
<summary>
Type of loss in the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct._Description">
<summary>
Description of the claim cause.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct._ShortDescription">
<summary>
Short description of the claim cause.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct._IndicatorExclusionSpecificRisk">
<summary>
Indicator exclusion of specific risk
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct._FraudPreventionQuestionary">
<summary>
Fraud Prevention Questions
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'CLAIM_CAUS.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.ProductCode">
<summary>
Code of the product for the reason of loss. (NPRODUCT)..
</summary>
<remarks>Data-source is 'CLAIM_CAUS.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.CauseOfClaim">
<summary>
Code of cause of the claim. (NCAUSECOD)..
</summary>
<remarks>Data-source is 'CLAIM_CAUS.NCAUSECOD'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLAIM_CAUS.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.TypeOfLoss">
<summary>
Type of loss in the claim. (SCLAIMTYP)..
</summary>
<remarks>Data-source is 'CLAIM_CAUS.SCLAIMTYP'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.Description">
<summary>
Description of the claim cause. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'CLAIM_CAUS.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.ShortDescription">
<summary>
Short description of the claim cause. (SSHORT_DES)..
</summary>
<remarks>Data-source is 'CLAIM_CAUS.SSHORT_DES'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'CLAIM_CAUS.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLAIM_CAUS.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.IndicatorExclusionSpecificRisk">
<summary>
Indicator exclusion of specific risk (sIndExclude_Risk)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_CAUS.sIndExclude_Risk'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.NewFraudPreventionQuestionaryInstance">
<summary>
Initializes the 'FraudPreventionQuestionary' instance.
</summary>
 <returns>The 'FraudPreventionQuestionary' class instance.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.FraudPreventionQuestionary">
<summary>
Fraud Prevention Questions collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClaimCausePerProductItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.LineOfBusinessDescription">
 <summary>
 Code of the line of business.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE10'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProduct.TypeOfLossDescription">
 <summary>
 Type of loss in the claim.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE132'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProductCollection">
 <summary>
 Collection for ClaimCausePerProduct class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProductCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProductCollection.AddClaimCausePerProduct">
 <summary>
 Add an instance of class 'ClaimCausePerProduct' in the ClaimCausePerProductCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProductCollection.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProductCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProductCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProductCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCausePerProductCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization">
 <summary>
 claims costs of hospitalization.
 </summary>
<remarks>Data-source is 'CL_COVERMA'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.CreateNewClaimCostHospitalization">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._CoverageCode">
<summary>
Code of the coverage related to this claim payment.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._Concept">
<summary>
Concept code.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._ClaimCode">
<summary>
Code of The Claim Case or Claimant.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._ClaimType">
<summary>
Claim Type.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._Amount">
<summary>
Total amount of the expense.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._Deductible">
<summary>
Amount of the deductible.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._UnitsConsumed">
<summary>
Number of units consumed (Health insurance).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._Reserve">
<summary>
Reserve amount (in the cover/claim currency).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._CostPerUnitConsumed">
<summary>
Cost per unit consumed.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._BudgetID">
<summary>
Budget number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._DateOfEstimate">
<summary>
Date of the estimate for the medical treatment or procedure.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._InternalBillID">
<summary>
Number identifying the invoice (system internal value).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._Bill">
<summary>
Invoice number printed.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._InvoiceDate">
<summary>
Date when the invoice was issued.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._DateOfLastPayment">
<summary>
Date of the last payment.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._InvoiceDueDate">
<summary>
Due date of the invoice.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._ExchangeRate">
<summary>
Exchange rate of the entry to the local currency.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._SubVendor">
<summary>
Code of sub-vendor.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization._EvaluationStatus">
<summary>
Status of evaluation (diagnostics and bills).
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'CL_COVERMA.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.CoverageCode">
<summary>
Code of the coverage related to this claim payment. (NCOVER)..
</summary>
<remarks>Data-source is 'CL_COVERMA.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.Concept">
<summary>
Concept code. (NCONCEPT)..
</summary>
<remarks>Data-source is 'CL_COVERMA.NCONCEPT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'CL_COVERMA.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.ClaimCode">
<summary>
Code of The Claim Case or Claimant. (NCASE_NUM)..
</summary>
<remarks>Data-source is 'CL_COVERMA.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.ClaimType">
<summary>
Claim Type. (NDEMAN_TYPE)..
</summary>
<remarks>Data-source is 'CL_COVERMA.NDEMAN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.Amount">
<summary>
Total amount of the expense. (NAMOUNT)..
</summary>
<remarks>Data-source is 'CL_COVERMA.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CL_COVERMA.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'CL_COVERMA.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.Deductible">
<summary>
Amount of the deductible. (NDED_AMOUNT)..
</summary>
<remarks>Data-source is 'CL_COVERMA.NDED_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.UnitsConsumed">
<summary>
Number of units consumed (Health insurance). (NQUANT_USED)..
</summary>
<remarks>Data-source is 'CL_COVERMA.NQUANT_USED'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.Reserve">
<summary>
Reserve amount (in the cover/claim currency). (NRESERVE)..
</summary>
<remarks>Data-source is 'CL_COVERMA.NRESERVE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.CostPerUnitConsumed">
<summary>
Cost per unit consumed. (NUNIT_COST)..
</summary>
<remarks>Data-source is 'CL_COVERMA.NUNIT_COST'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CL_COVERMA.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.BudgetID">
<summary>
Budget number. (SBUDGET)..
</summary>
<remarks>Data-source is 'CL_COVERMA.SBUDGET'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.DateOfEstimate">
<summary>
Date of the estimate for the medical treatment or procedure. (DDATE_BUD)..
</summary>
<remarks>Data-source is 'CL_COVERMA.DDATE_BUD'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.InternalBillID">
<summary>
Number identifying the invoice (system internal value). (NBILL_CON)..
</summary>
<remarks>Data-source is 'CL_COVERMA.NBILL_CON'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.Bill">
<summary>
Invoice number printed. (SBILL)..
</summary>
<remarks>Data-source is 'CL_COVERMA.SBILL'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.InvoiceDate">
<summary>
Date when the invoice was issued. (DSTATRDAT)..
</summary>
<remarks>Data-source is 'CL_COVERMA.DSTATRDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.DateOfLastPayment">
<summary>
Date of the last payment. (DPAYDATE)..
</summary>
<remarks>Data-source is 'CL_COVERMA.DPAYDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.InvoiceDueDate">
<summary>
Due date of the invoice. (DCANCELDAT)..
</summary>
<remarks>Data-source is 'CL_COVERMA.DCANCELDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.ExchangeRate">
<summary>
Exchange rate of the entry to the local currency. (NEXCHANGE)..
</summary>
<remarks>Data-source is 'CL_COVERMA.NEXCHANGE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.SubVendor">
<summary>
Code of sub-vendor. (NPROVIDER)..
</summary>
<remarks>Data-source is 'CL_COVERMA.NPROVIDER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.EvaluationStatus">
<summary>
Status of evaluation (diagnostics and bills). (NEVALSTAT)..
</summary>
<remarks>Data-source is 'CL_COVERMA.NEVALSTAT'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClaimCostHospitalizationItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalization.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalizationCollection">
 <summary>
 Collection for ClaimCostHospitalization class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalizationCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalizationCollection.AddClaimCostHospitalization">
 <summary>
 Add an instance of class 'ClaimCostHospitalization' in the ClaimCostHospitalizationCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalizationCollection.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalizationCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalizationCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalizationCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCostHospitalizationCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage">
 <summary>
 Coverages related with a claim.
 </summary>
<remarks>Data-source is 'CL_COVER'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.CreateNewClaimCoverage">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._ClaimCode">
<summary>
Code of The Claim Case or Claimant.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._ClaimType">
<summary>
Claim Type.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._Currency">
<summary>
Currency of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._ClientID">
<summary>
Code of the insured client related to the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._SolvencyMarginClass">
<summary>
Classification code for the solvency margin.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._AccountingLineOfBusiness">
<summary>
Code of the accounting line of business.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._ReinsuranceLineOfBusiness">
<summary>
Code of the line of business for reinsurance purposes.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._RecoveryExpenses">
<summary>
Recovery expenses amount (in the coverage currency).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._Damages">
<summary>
Amount of the damages (in the currency of the claim/coverage).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._Loss">
<summary>
Total amount consumed under the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._FranchiseOrDeductibleAmount">
<summary>
Franchise/deductible amount (in the coverage currency).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._FranchiseOrDeductible">
<summary>
It indicates whether a franchise or deductible is applied
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._Division">
<summary>
Code of the &#39;division&#39; within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._TotalRecoveryExpenses">
<summary>
Total amount of recovery expenses (in local currency).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._PaidAmount">
<summary>
Amount paid on the reserve (in local currency).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._AmountRecovered">
<summary>
Amount recovered (in local currency).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._ReserveAmount">
<summary>
Reserve amount (in local currency).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._AmountAlreadyPaid">
<summary>
Reserve amount already paid (in the coverage/claim currency).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._ConsumedAmount">
<summary>
Total amount consumed by the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._RecoveredAmount">
<summary>
Amount recovered (in the currency of the cover/claim ).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._Reserve">
<summary>
Reserve amount (in the cover/claim currency).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._ReserveStatus">
<summary>
Status of the coverage reserve.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._AdjusterEstimate">
<summary>
Damages estimated amount according with a professional adjuster.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._TaxAmount">
<summary>
Tax amount.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._BillsPresented">
<summary>
Bills presented indicator.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._EquivalentCostRate">
<summary>
Equivalent cost rate (Calculation of booking)
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._ExemtionPayFranchise_Deducible">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._NICDCODE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._PremiumDiscount">
<summary>
Premium Discount
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._InitialDate">
<summary>
Initial Date
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._EndDate">
<summary>
End Date.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._NCOA_AMOUNT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._NRASA">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._NDEPRECIATEAMOUNT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._NDAYDEDAMOUNT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._NDEPRECIATEBASE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._NDEPRECIATERATE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._NFRANCDAYS">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._SDEDUCTIBLEPAIDINDICATOR">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._NBORDERAUX">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage._MovementsCoverageClaim">
<summary>
Details of movements in the coverage of a claim.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'CL_COVER.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.ClaimCode">
<summary>
Code of The Claim Case or Claimant. (NCASE_NUM)..
</summary>
<remarks>Data-source is 'CL_COVER.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.ClaimType">
<summary>
Claim Type. (NDEMAN_TYPE)..
</summary>
<remarks>Data-source is 'CL_COVER.NDEMAN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'CL_COVER.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'CL_COVER.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.Currency">
<summary>
Currency of the coverage. (NCURRENCY)..
</summary>
<remarks>Data-source is 'CL_COVER.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.ClientID">
<summary>
Code of the insured client related to the coverage. (SCLIENT)..
</summary>
<remarks>Data-source is 'CL_COVER.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.SolvencyMarginClass">
<summary>
Classification code for the solvency margin. (NBRANCH_EST)..
</summary>
<remarks>Data-source is 'CL_COVER.NBRANCH_EST'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.AccountingLineOfBusiness">
<summary>
Code of the accounting line of business. (NBRANCH_LED)..
</summary>
<remarks>Data-source is 'CL_COVER.NBRANCH_LED'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.ReinsuranceLineOfBusiness">
<summary>
Code of the line of business for reinsurance purposes. (NBRANCH_REI)..
</summary>
<remarks>Data-source is 'CL_COVER.NBRANCH_REI'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CL_COVER.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.RecoveryExpenses">
<summary>
Recovery expenses amount (in the coverage currency). (NCOST_RECU)..
</summary>
<remarks>Data-source is 'CL_COVER.NCOST_RECU'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.Damages">
<summary>
Amount of the damages (in the currency of the claim/coverage). (NDAMAGES)..
</summary>
<remarks>Data-source is 'CL_COVER.NDAMAGES'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.Loss">
<summary>
Total amount consumed under the coverage. (NEXP_AMOUNT)..
</summary>
<remarks>Data-source is 'CL_COVER.NEXP_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.FranchiseOrDeductibleAmount">
<summary>
Franchise/deductible amount (in the coverage currency). (NFRA_AMOUNT)..
</summary>
<remarks>Data-source is 'CL_COVER.NFRA_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.FranchiseOrDeductible">
<summary>
It indicates whether a franchise or deductible is applied (SFRANTYPE)..
</summary>
<remarks>Data-source is 'CL_COVER.SFRANTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP)..
</summary>
<remarks>Data-source is 'CL_COVER.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.TotalRecoveryExpenses">
<summary>
Total amount of recovery expenses (in local currency). (NLOC_COS_RE)..
</summary>
<remarks>Data-source is 'CL_COVER.NLOC_COS_RE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.PaidAmount">
<summary>
Amount paid on the reserve (in local currency). (NLOC_PAY_AM)..
</summary>
<remarks>Data-source is 'CL_COVER.NLOC_PAY_AM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.AmountRecovered">
<summary>
Amount recovered (in local currency). (NLOC_REC_AM)..
</summary>
<remarks>Data-source is 'CL_COVER.NLOC_REC_AM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.ReserveAmount">
<summary>
Reserve amount (in local currency). (NLOC_RESERV)..
</summary>
<remarks>Data-source is 'CL_COVER.NLOC_RESERV'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.AmountAlreadyPaid">
<summary>
Reserve amount already paid (in the coverage/claim currency). (NPAY_AMOUNT)..
</summary>
<remarks>Data-source is 'CL_COVER.NPAY_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.ConsumedAmount">
<summary>
Total amount consumed by the coverage. (NQUANTITY)..
</summary>
<remarks>Data-source is 'CL_COVER.NQUANTITY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.RecoveredAmount">
<summary>
Amount recovered (in the currency of the cover/claim ). (NREC_AMOUNT)..
</summary>
<remarks>Data-source is 'CL_COVER.NREC_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.Reserve">
<summary>
Reserve amount (in the cover/claim currency). (NRESERVE)..
</summary>
<remarks>Data-source is 'CL_COVER.NRESERVE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.ReserveStatus">
<summary>
Status of the coverage reserve. (SRESERVSTAT)..
</summary>
<remarks>Data-source is 'CL_COVER.SRESERVSTAT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CL_COVER.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.AdjusterEstimate">
<summary>
Damages estimated amount according with a professional adjuster. (NDAMPROF)..
</summary>
<remarks>Data-source is 'CL_COVER.NDAMPROF'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.TaxAmount">
<summary>
Tax amount. (NTAX_AMO)..
</summary>
<remarks>Data-source is 'CL_COVER.NTAX_AMO'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.BillsPresented">
<summary>
Bills presented indicator. (SBILL_IND)..
</summary>
<remarks>Data-source is 'CL_COVER.SBILL_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.EquivalentCostRate">
<summary>
Equivalent cost rate (Calculation of booking) (NRATEEQCOST)..
</summary>
<remarks>Data-source is 'CL_COVER.NRATEEQCOST'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.ExemtionPayFranchise_Deducible">
<summary>
 (SEXEMPAYFD)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CL_COVER.SEXEMPAYFD'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.NICDCODE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CL_COVER.NICDCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.PremiumDiscount">
<summary>
Premium Discount (NPREMDISC)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CL_COVER.NPREMDISC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.InitialDate">
<summary>
Initial Date (DSTARTDATE)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CL_COVER.DSTARTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.EndDate">
<summary>
End Date. (DEXPIRDAT)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CL_COVER.DEXPIRDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.NCOA_AMOUNT">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CL_COVER.NCOA_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.NRASA">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CL_COVER.NRASA'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.NDEPRECIATEAMOUNT">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CL_COVER.NDEPRECIATEAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.NDAYDEDAMOUNT">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CL_COVER.NDAYDEDAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.NDEPRECIATEBASE">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CL_COVER.NDEPRECIATEBASE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.NDEPRECIATERATE">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CL_COVER.NDEPRECIATERATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.NFRANCDAYS">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CL_COVER.NFRANCDAYS'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.SDEDUCTIBLEPAIDINDICATOR">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CL_COVER.SDEDUCTIBLEPAIDINDICATOR'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.NBORDERAUX">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CL_COVER.NBORDERAUX'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.NewMovementsCoverageClaimInstance">
<summary>
Initializes the 'MovementsCoverageClaim' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.NewMovementCoverageClaimItem(System.Boolean)">
<summary>
Add a new item to the collection of 'MovementsCoverageClaim', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'MovementCoverageClaim' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.MovementsCoverageClaim">
<summary>
Details of movements in the coverage of a claim. collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimCoverage,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClaimCoverageItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.SolvencyMarginClassDescription">
 <summary>
 Classification code for the solvency margin.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE71'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.AccountingLineOfBusinessDescription">
 <summary>
 Code of the accounting line of business.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE75'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.ReinsuranceLineOfBusinessDescription">
 <summary>
 Code of the line of business for reinsurance purposes.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5000'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverage.FranchiseOrDeductibleDescription">
 <summary>
 It indicates whether a franchise or deductible is applied
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE64'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimCoverageCollection">
 <summary>
 Collection for ClaimCoverage class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCoverageCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCoverageCollection.AddClaimCoverage">
 <summary>
 Add an instance of class 'ClaimCoverage' in the ClaimCoverageCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCoverageCollection.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimCoverageCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimCoverageCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCoverageCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimCoverageCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimDocument">
 <summary>
 Table of the documents associated with a claim.
 </summary>
<remarks>Data-source is 'TAB_DOCU'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.CreateNewClaimDocument">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimDocument._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimDocument._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimDocument._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimDocument._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimDocument._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimDocument._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimDocument._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimDocument._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimDocument._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimDocument._CauseOfClaim">
<summary>
Code of cause of the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimDocument._DocumentCode">
<summary>
Code identifying the claim document.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimDocument._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimDocument._Description">
<summary>
Description of the document.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimDocument._ShortDescription">
<summary>
Short description of the document.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimDocument._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimDocument._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimDocument._RequiredToStartPayments">
<summary>
It indicates that this document is required before making any payment on the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimDocument._MaximumDaysToSubmitRequirement">
<summary>
Maximum number of days for the requirement to be received.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimDocument._NPERSON_TYP">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimDocument._STEXT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimDocument._SREQUIERED">
<summary>

</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAB_DOCU.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAB_DOCU.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'TAB_DOCU.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'TAB_DOCU.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.CauseOfClaim">
<summary>
Code of cause of the claim. (NCAUSECOD)..
</summary>
<remarks>Data-source is 'TAB_DOCU.NCAUSECOD'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.DocumentCode">
<summary>
Code identifying the claim document. (NDOC_CODE)..
</summary>
<remarks>Data-source is 'TAB_DOCU.NDOC_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_DOCU.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.Description">
<summary>
Description of the document. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'TAB_DOCU.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.ShortDescription">
<summary>
Short description of the document. (SSHORT_DES)..
</summary>
<remarks>Data-source is 'TAB_DOCU.SSHORT_DES'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'TAB_DOCU.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_DOCU.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.RequiredToStartPayments">
<summary>
It indicates that this document is required before making any payment on the claim. (SCLAIMPAY)..
</summary>
<remarks>Data-source is 'TAB_DOCU.SCLAIMPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.MaximumDaysToSubmitRequirement">
<summary>
Maximum number of days for the requirement to be received. (NDAYS_PRESC)..
</summary>
<remarks>Data-source is 'TAB_DOCU.NDAYS_PRESC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.NPERSON_TYP">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_DOCU.NPERSON_TYP'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.NPERSON_TYPEnum">
<summary>

</summary>
<remarks>This property use a enumeration based on property 'NPERSON_TYP'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.NPERSON_TYPEnumText">
<summary>

</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.STEXT">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_DOCU.STEXT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.SREQUIERED">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_DOCU.SREQUIERED'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimDocument,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClaimDocumentItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocument.LineOfBusinessDescription">
 <summary>
 Code of the line of business.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE10'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimDocumentCollection">
 <summary>
 Collection for ClaimDocument class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimDocumentCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimDocumentCollection.AddClaimDocument">
 <summary>
 Add an instance of class 'ClaimDocument' in the ClaimDocumentCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimDocumentCollection.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimDocumentCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimDocumentCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimDocumentCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimDocumentCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson">
 <summary>
 Persons with claims.
 </summary>
<remarks>Data-source is 'CLAIM_PEOP'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.CreateNewClaimedPerson">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson._ClaimCode">
<summary>
Code of The Claim Case or Claimant.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson._ClaimType">
<summary>
Claim Type.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson._ClientID">
<summary>
Client code of the beneficiary.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson._ConsecutiveNumber">
<summary>
Correlative number (by claim and case), that identifies the record as unique.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson._TypeOfInjury">
<summary>
Type of injury.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson._NoteID">
<summary>
Number of the note containing the comments.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'CLAIM_PEOP.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.ClaimCode">
<summary>
Code of The Claim Case or Claimant. (NCASE_NUM)..
</summary>
<remarks>Data-source is 'CLAIM_PEOP.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.ClaimType">
<summary>
Claim Type. (NDEMAN_TYPE)..
</summary>
<remarks>Data-source is 'CLAIM_PEOP.NDEMAN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.ClientID">
<summary>
Client code of the beneficiary. (SCLIENT)..
</summary>
<remarks>Data-source is 'CLAIM_PEOP.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.ConsecutiveNumber">
<summary>
Correlative number (by claim and case), that identifies the record as unique. (NID)..
</summary>
<remarks>Data-source is 'CLAIM_PEOP.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.TypeOfInjury">
<summary>
Type of injury. (NDAMAGE_TYP)..
</summary>
<remarks>Data-source is 'CLAIM_PEOP.NDAMAGE_TYP'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.NoteID">
<summary>
Number of the note containing the comments. (NNOTENUM)..
</summary>
<remarks>Data-source is 'CLAIM_PEOP.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLAIM_PEOP.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLAIM_PEOP.NUSERCODE'.</remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimedPerson,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClaimedPersonItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimedPerson.TypeOfInjuryDescription">
 <summary>
 Type of injury.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7508'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimedPersonCollection">
 <summary>
 Collection for ClaimedPerson class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimedPersonCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimedPersonCollection.AddClaimedPerson">
 <summary>
 Add an instance of class 'ClaimedPerson' in the ClaimedPersonCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimedPersonCollection.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimedPersonCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimedPersonCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimedPersonCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimedPersonCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimHistory">
 <summary>
 History of the claim.
 </summary>
<remarks>Data-source is 'CLAIM_HIS'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.CreateNewClaimHistory">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._CaseNumber">
<summary>
Case ID within the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._ClaimType">
<summary>
Claim Type.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._ClaimEntryNumber">
<summary>
Entry number related to a claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._Amount">
<summary>
Entry amount in the currency specified.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._OperationType">
<summary>
Type of Operation.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._CoinsuranceCessionsGenerated">
<summary>
It indicates whether the coinsurance cessions were generated.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._ExchangeRate">
<summary>
Exchange rate of the entry to the local currency.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._Paid">
<summary>
Payment made.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._WithheldTaxAmount">
<summary>
Withheld tax amount.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._Withholding">
<summary>
Tax withholding percentage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._AutomaticEntry">
<summary>
Automatic entry indicator.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._PaymentOrderIndicator">
<summary>
Payment order generated indicator.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._ReversedEntryIndicator">
<summary>
Reversed entry.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._EntryAmountInLocalCurrency">
<summary>
Entry Amount ( Local Currency).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._TransactionDate">
<summary>
Date of the transaction
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._PaymentOrderOrCheckNumber">
<summary>
Number of the payment order or number of check, if already printed.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._PaymentType">
<summary>
Type of claim payment.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._PostingDate">
<summary>
Date when the entry was posted in the accounting books.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._ServiceOrder">
<summary>
Number of the service order.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._ClientID">
<summary>
Code of client identifying the beneficiary of the payment (payee).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._Schedule">
<summary>
Number of the collection schedule, or statement of collected premiums.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._ClaimPaymentMethod">
<summary>
Claim payment mode
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._ReinsuranceUpdate">
<summary>
Reinsurance update indicator.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._CoinsuranceUpdateIndicator">
<summary>
Indicator of coinsurance update.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._ClosingProcess">
<summary>
ID number of the closing process of the cash register.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._SupportingDocument">
<summary>
Type of support document.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._DocumentID">
<summary>
Document ID related to this entry of the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._DocumentDate">
<summary>
Date of the document related to the entry of the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._Copayment">
<summary>
It indicates that there is a copayment related to this entry.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._NoteID">
<summary>
Number of the note containing the comments.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._ConsecutiveNumber">
<summary>
Consecutive number identifying the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._ProcessedBySolvencyMarginIndicator">
<summary>
Entry processed by solvency margin process.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._PayRentMovementIndicator">
<summary>
Indicates if the movement corresponds to a rent payment
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._Trasferred">
<summary>
Indicator of transferred to the destination system- Interface of payments.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._ProceedingNumber">
<summary>
Number of proceeding related to the entry of the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._ReverserdClaimEntryNumber">
<summary>
Entry number reversed related to a claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._GroupedTreatment">
<summary>
Indicator of grouped treatment
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._CodeJudicialAuthority">
<summary>
Code of judicial authority
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._DateFromJudicialAuthority">
<summary>
Date from which the claim enters the judicial authority
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._DateUntilJudicialAuthority">
<summary>
Date until which the claim has the judical authority
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._NumberRAJ">
<summary>
Number of Registration of legal actions
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._SIND_QLICKVIEW">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._NRASA">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._NDDR">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._SIND_RASA">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._NDEDUCTIBLE_METHOD">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._DCTB_DATE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._SPOSTEDSEQUENCE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._SINDPROCESS">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._NRECOVER">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._NDED_AMOUNT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._NENDORSMENT_CAUSE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._SPRINTED_DEDUC">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._SDEDUCTIBLEPAIDINDICATOR">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._ItemOfPaymentDetail">
<summary>
Item of Payment detail
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._CessionsNonProportionalClaim">
<summary>
Claim cessions, Non-proportional.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.CaseNumber">
<summary>
Case ID within the claim. (NCASE_NUM)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.ClaimType">
<summary>
Claim Type. (NDEMAN_TYPE)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.NDEMAN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.ClaimEntryNumber">
<summary>
Entry number related to a claim. (NTRANSAC)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.NTRANSAC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.Amount">
<summary>
Entry amount in the currency specified. (NAMOUNT)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.OperationType">
<summary>
Type of Operation. (NOPER_TYPE)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.NOPER_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.CoinsuranceCessionsGenerated">
<summary>
It indicates whether the coinsurance cessions were generated. (SCESSICOI)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.SCESSICOI'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.ExchangeRate">
<summary>
Exchange rate of the entry to the local currency. (NEXCHANGE)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.NEXCHANGE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.Paid">
<summary>
Payment made. (SEXECUTED)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.SEXECUTED'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.WithheldTaxAmount">
<summary>
Withheld tax amount. (NINC_AMOUNT)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.NINC_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.Withholding">
<summary>
Tax withholding percentage. (NINCOMETAX)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.NINCOMETAX'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.AutomaticEntry">
<summary>
Automatic entry indicator. (SIND_AUT)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.SIND_AUT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.PaymentOrderIndicator">
<summary>
Payment order generated indicator. (SIND_ORDER)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.SIND_ORDER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.ReversedEntryIndicator">
<summary>
Reversed entry. (SIND_REV)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.SIND_REV'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.EntryAmountInLocalCurrency">
<summary>
Entry Amount ( Local Currency). (NLOC_AMOUNT)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.NLOC_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.TransactionDate">
<summary>
Date of the transaction (DOPERDATE)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.DOPERDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.PaymentOrderOrCheckNumber">
<summary>
Number of the payment order or number of check, if already printed. (SORDER_NUM)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.SORDER_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.PaymentType">
<summary>
Type of claim payment. (NPAY_TYPE)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.NPAY_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.PostingDate">
<summary>
Date when the entry was posted in the accounting books. (DPOSTED)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.DPOSTED'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.ServiceOrder">
<summary>
Number of the service order. (NSERV_ORDER)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.NSERV_ORDER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.ClientID">
<summary>
Code of client identifying the beneficiary of the payment (payee). (SCLIENT)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.Schedule">
<summary>
Number of the collection schedule, or statement of collected premiums. (NBORDEREAUX)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.NBORDEREAUX'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.ClaimPaymentMethod">
<summary>
Claim payment mode (NPAY_FORM)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.NPAY_FORM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.ReinsuranceUpdate">
<summary>
Reinsurance update indicator. (SREINSU_IND)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.SREINSU_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.CoinsuranceUpdateIndicator">
<summary>
Indicator of coinsurance update. (SCOINSU_IND)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.SCOINSU_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.ClosingProcess">
<summary>
ID number of the closing process of the cash register. (NCASH_ID)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.NCASH_ID'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.SupportingDocument">
<summary>
Type of support document. (NDOC_TYPE)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.NDOC_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.DocumentID">
<summary>
Document ID related to this entry of the claim. (NBILL)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.NBILL'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.DocumentDate">
<summary>
Date of the document related to the entry of the claim. (DBILL_DATE)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.DBILL_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.Copayment">
<summary>
It indicates that there is a copayment related to this entry. (SCO_PAY)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.SCO_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.NoteID">
<summary>
Number of the note containing the comments. (NNOTENUM)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.ConsecutiveNumber">
<summary>
Consecutive number identifying the record. (NID)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.ProcessedBySolvencyMarginIndicator">
<summary>
Entry processed by solvency margin process. (SINDMARGIN)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.SINDMARGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.PayRentMovementIndicator">
<summary>
Indicates if the movement corresponds to a rent payment (SPAY_RENT)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.SPAY_RENT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.Trasferred">
<summary>
Indicator of transferred to the destination system- Interface of payments. (SIND_TRANFER)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.SIND_TRANFER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.ProceedingNumber">
<summary>
Number of proceeding related to the entry of the claim. (NPROCEEDINGNUM)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.NPROCEEDINGNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.ReverserdClaimEntryNumber">
<summary>
Entry number reversed related to a claim. (NTRANSCLAIMREV)..
</summary>
<remarks>Data-source is 'CLAIM_HIS.NTRANSCLAIMREV'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.GroupedTreatment">
<summary>
Indicator of grouped treatment (NGROUPEDIND)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_HIS.NGROUPEDIND'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.CodeJudicialAuthority">
<summary>
Code of judicial authority (NJUDICIAL_AUTHORITY)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_HIS.NJUDICIAL_AUTHORITY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.DateFromJudicialAuthority">
<summary>
Date from which the claim enters the judicial authority (DINI_JUDICIAL_AUTHORITY)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_HIS.DINI_JUDICIAL_AUTHORITY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.DateUntilJudicialAuthority">
<summary>
Date until which the claim has the judical authority (DEND_JUDICIAL_AUTHORITY)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_HIS.DEND_JUDICIAL_AUTHORITY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.NumberRAJ">
<summary>
Number of Registration of legal actions (NRAJ)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_HIS.NRAJ'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.SIND_QLICKVIEW">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_HIS.SIND_QLICKVIEW'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.NRASA">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_HIS.NRASA'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.NDDR">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_HIS.NDDR'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.SIND_RASA">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_HIS.SIND_RASA'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.NDEDUCTIBLE_METHOD">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_HIS.NDEDUCTIBLE_METHOD'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.DCTB_DATE">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_HIS.DCTB_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.SPOSTEDSEQUENCE">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_HIS.SPOSTEDSEQUENCE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.SINDPROCESS">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_HIS.SINDPROCESS'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.NRECOVER">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_HIS.NRECOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.NDED_AMOUNT">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_HIS.NDED_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.NENDORSMENT_CAUSE">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_HIS.NENDORSMENT_CAUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.SPRINTED_DEDUC">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_HIS.SPRINTED_DEDUC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.SDEDUCTIBLEPAIDINDICATOR">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_HIS.SDEDUCTIBLEPAIDINDICATOR'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.ItemOfPaymentDetail">
<summary>
Item of Payment detail (NPAYMENTITEM)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_HIS.NPAYMENTITEM'.</remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimHistory._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.NewCessionsNonProportionalClaimInstance">
<summary>
Initializes the 'CessionsNonProportionalClaim' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.NewCessionNonProportionalClaimItem(System.Boolean)">
<summary>
Add a new item to the collection of 'CessionsNonProportionalClaim', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'CessionNonProportionalClaim' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.CessionsNonProportionalClaim">
<summary>
Claim cessions, Non-proportional. collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimHistory,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClaimHistoryItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.OperationTypeDescription">
 <summary>
 Type of Operation.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE140'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.PaymentTypeDescription">
 <summary>
 Type of claim payment.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE199'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.ClaimPaymentMethodDescription">
 <summary>
 Claim payment mode
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE138'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.SupportingDocumentDescription">
 <summary>
 Type of support document.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5570'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.CodeJudicialAuthorityDescription">
 <summary>
 Code of judicial authority
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6841' on the table 'TABLE6841'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistory.ItemOfPaymentDetailDescription">
 <summary>
 Item of Payment detail
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6728' on the table 'TABLE6728'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimHistoryCollection">
 <summary>
 Collection for ClaimHistory class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimHistoryCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimHistoryCollection.AddClaimHistory">
 <summary>
 Add an instance of class 'ClaimHistory' in the ClaimHistoryCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimHistoryCollection.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimHistoryCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimHistoryCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimHistoryCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimHistoryCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimMaster">
 <summary>
 Maestro de siniestros.
 </summary>
<remarks>Data-source is 'CLAIM_MASTER'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.CreateNewClaimMaster">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimMaster._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimMaster._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimMaster._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimMaster._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimMaster._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimMaster._ClaimsBordereaux">
<summary>
Number of the claims bordereaux.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimMaster._ClientID">
<summary>
Code of client identifying the informer of the related claims.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimMaster._CoverageCode">
<summary>
Code of the generic coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimMaster._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimMaster._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimMaster._CompoundKeyMassiveChargeProcess">
<summary>
Compound Key. Massive charge process
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimMaster._NameOfTheUploadFile">
<summary>
Name of the upload file
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimMaster._DateOfMassiveDeclaration">
<summary>
Date of the process of massive declaration
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.ClaimsBordereaux">
<summary>
Number of the claims bordereaux. (NBORDEREAUX_CL)..
</summary>
<remarks>Data-source is 'CLAIM_MASTER.NBORDEREAUX_CL'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.ClientID">
<summary>
Code of client identifying the informer of the related claims. (SCLIENT)..
</summary>
<remarks>Data-source is 'CLAIM_MASTER.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.CoverageCode">
<summary>
Code of the generic coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'CLAIM_MASTER.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLAIM_MASTER.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLAIM_MASTER.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.CompoundKeyMassiveChargeProcess">
<summary>
Compound Key. Massive charge process (SKEY)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_MASTER.SKEY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.NameOfTheUploadFile">
<summary>
Name of the upload file (SFILENAME)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_MASTER.SFILENAME'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.DateOfMassiveDeclaration">
<summary>
Date of the process of massive declaration (DDECMASSIVECHARGE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAIM_MASTER.DDECMASSIVECHARGE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimMaster,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClaimMasterItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimMaster.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimMasterCollection">
 <summary>
 Collection for ClaimMaster class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimMasterCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimMasterCollection.AddClaimMaster">
 <summary>
 Add an instance of class 'ClaimMaster' in the ClaimMasterCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimMasterCollection.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimMasterCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimMasterCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimMasterCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimMasterCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration">
 <summary>
 Master table of Claim registration.
 </summary>
<remarks>Data-source is 'CLAIM_REGISTRATION'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.CreateNewClaimRegistration">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration._ClaimRegistration">
<summary>
Number of claim registration.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration._Office">
<summary>
Code of the office for which the claim is registered.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration._OfficeAgency">
<summary>
Code of the office- agency for which the claim is registered.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration._Agency">
<summary>
Code of the agency for which the claim is registered.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration._TrafficOfense">
<summary>
Date and time of occurrence of the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration._DateDeclarationClaim">
<summary>
Date of declaration of the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration._ClaimCauseCode">
<summary>
Code of the cause of the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration._ClaimReasonDescript">
<summary>
Description of the reason for the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration._ClaimRegistrationUSer">
<summary>
User code who registers the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration._DateRegistrationClaim">
<summary>
Date of registration of the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration._ClaimEvaluationUSer">
<summary>
User code who evaluates the claim registration.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration._ClaimPaymentUser">
<summary>
User code who pays the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration._RatingLevel">
<summary>
Assigned rating level to the affected client.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration._ComputerDate">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration._ClaimRegistrationClient">
<summary>
Clients associated with the registration claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration._ClaimRegistrationPolicies">
<summary>
Clients associated with the registration claim.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.ClaimRegistration">
<summary>
Number of claim registration. (NCLAIM_REGIST)..
</summary>
<remarks>Data-source is 'CLAIM_REGISTRATION.NCLAIM_REGIST'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.Office">
<summary>
Code of the office for which the claim is registered. (NOFFICE)..
</summary>
<remarks>Data-source is 'CLAIM_REGISTRATION.NOFFICE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.OfficeAgency">
<summary>
Code of the office- agency for which the claim is registered. (NOFFICEAGEN)..
</summary>
<remarks>Data-source is 'CLAIM_REGISTRATION.NOFFICEAGEN'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.Agency">
<summary>
Code of the agency for which the claim is registered. (NAGENCY)..
</summary>
<remarks>Data-source is 'CLAIM_REGISTRATION.NAGENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.TrafficOfense">
<summary>
Date and time of occurrence of the claim. (DOCCURDAT)..
</summary>
<remarks>Data-source is 'CLAIM_REGISTRATION.DOCCURDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.DateDeclarationClaim">
<summary>
Date of declaration of the claim. (DDECLADAT)..
</summary>
<remarks>Data-source is 'CLAIM_REGISTRATION.DDECLADAT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.ClaimCauseCode">
<summary>
Code of the cause of the claim. (NCAUSECOD)..
</summary>
<remarks>Data-source is 'CLAIM_REGISTRATION.NCAUSECOD'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.ClaimReasonDescript">
<summary>
Description of the reason for the claim. (SREASONDESC)..
</summary>
<remarks>Data-source is 'CLAIM_REGISTRATION.SREASONDESC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.ClaimRegistrationUSer">
<summary>
User code who registers the claim. (NUSER_REGIST)..
</summary>
<remarks>Data-source is 'CLAIM_REGISTRATION.NUSER_REGIST'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.DateRegistrationClaim">
<summary>
Date of registration of the claim. (DREGISTDAT)..
</summary>
<remarks>Data-source is 'CLAIM_REGISTRATION.DREGISTDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.ClaimEvaluationUSer">
<summary>
User code who evaluates the claim registration. (NUSER_EVAL)..
</summary>
<remarks>Data-source is 'CLAIM_REGISTRATION.NUSER_EVAL'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.ClaimPaymentUser">
<summary>
User code who pays the claim. (NUSER_PAY)..
</summary>
<remarks>Data-source is 'CLAIM_REGISTRATION.NUSER_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.RatingLevel">
<summary>
Assigned rating level to the affected client. (NRATING)..
</summary>
<remarks>Data-source is 'CLAIM_REGISTRATION.NRATING'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.ComputerDate">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLAIM_REGISTRATION.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLAIM_REGISTRATION.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.NewClaimRegistrationClientInstance">
<summary>
Initializes the 'ClaimRegistrationClient' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.NewClaimRegistrationClientItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ClaimRegistrationClient', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ClaimRegistrationClient' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.ClaimRegistrationClient">
<summary>
Clients associated with the registration claim. collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.NewClaimRegistrationPoliciesInstance">
<summary>
Initializes the 'ClaimRegistrationPolicies' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.NewClaimRegistrationPolicyItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ClaimRegistrationPolicies', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ClaimRegistrationPolicy' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.ClaimRegistrationPolicies">
<summary>
Clients associated with the registration claim. collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimRegistration,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClaimRegistrationItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistration.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationCollection">
 <summary>
 Collection for ClaimRegistration class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationCollection.AddClaimRegistration">
 <summary>
 Add an instance of class 'ClaimRegistration' in the ClaimRegistrationCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationCollection.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient">
 <summary>
 Clients associated with the registration claim.
 </summary>
<remarks>Data-source is 'REGISTRATION_BENEF'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.CreateNewClaimRegistrationClient">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient._ClaimRegistration">
<summary>
Number of claim registration Possible values as per table CLAIM_REGISTRATION.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient._TypeOfBeneficiary">
<summary>
Type of beneficiary.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient._CodeBeneficiaryClient">
<summary>
Code of the beneficiary client.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient._BeneficiaryClientTypeDocument">
<summary>
Code of the type of beneficiary client document.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient._Agency">
<summary>
Number of the Beneficiary Client document.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient._BeneficiaryClientFirstName">
<summary>
First name of the beneficiary client.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient._BeneficiaryClientSecondName">
<summary>
Second name of the beneficiary client.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient._BeneficiaryClientThirdName">
<summary>
Third name of the beneficiary client.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient._BeneficiaryClientLastName">
<summary>
Last name of the beneficiary client.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient._BeneficiaryClientMotherLastName">
<summary>
Mother&#39;s last name of the beneficiary client.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient._DateDeclarationClaim">
<summary>
Email address of the beneficiary client.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient._AreaCode">
<summary>
Area code of the telephone of the beneficiary client.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient._TelephoneNumber">
<summary>
Telephone number of the beneficiary client.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient._RelationshipCode">
<summary>
Code for relationship among clients.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient._ComputerDate">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.ClaimRegistration">
<summary>
Number of claim registration Possible values as per table CLAIM_REGISTRATION. (NCLAIM_REGIST)..
</summary>
<remarks>Data-source is 'REGISTRATION_BENEF.NCLAIM_REGIST'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.TypeOfBeneficiary">
<summary>
Type of beneficiary. (NBENE_TYPE)..
</summary>
<remarks>Data-source is 'REGISTRATION_BENEF.NBENE_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.CodeBeneficiaryClient">
<summary>
Code of the beneficiary client. (SCLIENT)..
</summary>
<remarks>Data-source is 'REGISTRATION_BENEF.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.BeneficiaryClientTypeDocument">
<summary>
Code of the type of beneficiary client document. (NTYPCLIENTDOC)..
</summary>
<remarks>Data-source is 'REGISTRATION_BENEF.NTYPCLIENTDOC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.Agency">
<summary>
Number of the Beneficiary Client document. (SCLINUMDOCU)..
</summary>
<remarks>Data-source is 'REGISTRATION_BENEF.SCLINUMDOCU'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.BeneficiaryClientFirstName">
<summary>
First name of the beneficiary client. (SFIRSTNAME)..
</summary>
<remarks>Data-source is 'REGISTRATION_BENEF.SFIRSTNAME'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.BeneficiaryClientSecondName">
<summary>
Second name of the beneficiary client. (SSECONDNAME)..
</summary>
<remarks>Data-source is 'REGISTRATION_BENEF.SSECONDNAME'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.BeneficiaryClientThirdName">
<summary>
Third name of the beneficiary client. (STHIRDNAME)..
</summary>
<remarks>Data-source is 'REGISTRATION_BENEF.STHIRDNAME'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.BeneficiaryClientLastName">
<summary>
Last name of the beneficiary client. (SLASTNAME)..
</summary>
<remarks>Data-source is 'REGISTRATION_BENEF.SLASTNAME'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.BeneficiaryClientMotherLastName">
<summary>
Mother&#39;s last name of the beneficiary client. (SLASTNAME2)..
</summary>
<remarks>Data-source is 'REGISTRATION_BENEF.SLASTNAME2'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.DateDeclarationClaim">
<summary>
Email address of the beneficiary client. (SE_MAIL)..
</summary>
<remarks>Data-source is 'REGISTRATION_BENEF.SE_MAIL'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.AreaCode">
<summary>
Area code of the telephone of the beneficiary client. (NAREA_CODE)..
</summary>
<remarks>Data-source is 'REGISTRATION_BENEF.NAREA_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.TelephoneNumber">
<summary>
Telephone number of the beneficiary client. (SPHONE)..
</summary>
<remarks>Data-source is 'REGISTRATION_BENEF.SPHONE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.RelationshipCode">
<summary>
Code for relationship among clients. (NRELASHIP)..
</summary>
<remarks>Data-source is 'REGISTRATION_BENEF.NRELASHIP'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.ComputerDate">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'REGISTRATION_BENEF.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'REGISTRATION_BENEF.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClaimRegistrationClientItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClient.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClientCollection">
 <summary>
 Collection for ClaimRegistrationClient class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClientCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClientCollection.AddClaimRegistrationClient">
 <summary>
 Add an instance of class 'ClaimRegistrationClient' in the ClaimRegistrationClientCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClientCollection.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClientCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClientCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClientCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationClientCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy">
 <summary>
 Clients associated with the registration claim.
 </summary>
<remarks>Data-source is 'REGISTRATION_POLICY'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.CreateNewClaimRegistrationPolicy">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy._ClaimRegistration">
<summary>
Number of claim registration Possible values as per table CLAIM_REGISTRATION.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy._CodeLineBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy._CodeProduct">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy._PolicyNumber">
<summary>
Number identifying the Policy.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy._CertificateNumber">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy._ComputerDate">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy._ClaimRegistrationSelectedCovers">
<summary>
Selected covers for the registration claim.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.ClaimRegistration">
<summary>
Number of claim registration Possible values as per table CLAIM_REGISTRATION. (NCLAIM_REGIST)..
</summary>
<remarks>Data-source is 'REGISTRATION_POLICY.NCLAIM_REGIST'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.CodeLineBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'REGISTRATION_POLICY.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.CodeProduct">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'REGISTRATION_POLICY.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.PolicyNumber">
<summary>
Number identifying the Policy. (NPOLICY)..
</summary>
<remarks>Data-source is 'REGISTRATION_POLICY.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.CertificateNumber">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'REGISTRATION_POLICY.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.ComputerDate">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'REGISTRATION_POLICY.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'REGISTRATION_POLICY.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.NewClaimRegistrationSelectedCoversInstance">
<summary>
Initializes the 'ClaimRegistrationSelectedCovers' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.NewClaimRegistrationSelectedCoverItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ClaimRegistrationSelectedCovers', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ClaimRegistrationSelectedCover' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.ClaimRegistrationSelectedCovers">
<summary>
Selected covers for the registration claim. collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClaimRegistrationPolicyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicy.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicyCollection">
 <summary>
 Collection for ClaimRegistrationPolicy class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicyCollection.AddClaimRegistrationPolicy">
 <summary>
 Add an instance of class 'ClaimRegistrationPolicy' in the ClaimRegistrationPolicyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicyCollection.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationPolicyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument">
 <summary>
 Request documents for the registration claim.
 </summary>
<remarks>Data-source is 'REGISTRATION_DOCU'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.CreateNewClaimRegistrationRequestDocument">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument._ClaimRegistration">
<summary>
Number of claim registration Possible values as per table CLAIM_REGISTRATION.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument._CaseNumber">
<summary>
Code of the claim case or claimant.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument._DemandType">
<summary>
Code of type of the demand.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument._CodeBeneficiaryClient">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument._NumberID">
<summary>
Correlative Number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument._DocumentsNumber">
<summary>
Code of the document requested to process the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument._ConsecutiveNumber">
<summary>
Consecutive number for single registration.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument._DocumentRequestDate">
<summary>
Document request date.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument._EffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument._StatusDocument">
<summary>
Status of the document.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument._LetterFirstDate">
<summary>
Date of the first letter.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument._LetterLastDate">
<summary>
Date of the last letter.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument._ReceiptDocumentDate">
<summary>
Date of receipt of the document.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument._PrescriptionClaimDate">
<summary>
Date of prescription of the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument._DocumentIDReceived">
<summary>
Number (ID) of the document received.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument._ReceiptDocumentNumber">
<summary>
Number of documents received.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument._ComputerDate">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.ClaimRegistration">
<summary>
Number of claim registration Possible values as per table CLAIM_REGISTRATION. (NCLAIM_REGIST)..
</summary>
<remarks>Data-source is 'REGISTRATION_DOCU.NCLAIM_REGIST'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.CaseNumber">
<summary>
Code of the claim case or claimant. (NCASE_NUM)..
</summary>
<remarks>Data-source is 'REGISTRATION_DOCU.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.DemandType">
<summary>
Code of type of the demand. (NDEMAND_TYPE)..
</summary>
<remarks>Data-source is 'REGISTRATION_DOCU.NDEMAND_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.CodeBeneficiaryClient">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'REGISTRATION_DOCU.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.NumberID">
<summary>
Correlative Number. (NID)..
</summary>
<remarks>Data-source is 'REGISTRATION_DOCU.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.DocumentsNumber">
<summary>
Code of the document requested to process the claim. (NDOC_NUME)..
</summary>
<remarks>Data-source is 'REGISTRATION_DOCU.NDOC_NUME'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.ConsecutiveNumber">
<summary>
Consecutive number for single registration. (NCONSEC)..
</summary>
<remarks>Data-source is 'REGISTRATION_DOCU.NCONSEC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.DocumentRequestDate">
<summary>
Document request date. (DPROPO_DATE)..
</summary>
<remarks>Data-source is 'REGISTRATION_DOCU.DPROPO_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.EffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'REGISTRATION_DOCU.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.StatusDocument">
<summary>
Status of the document. (NSTATUS_DOC)..
</summary>
<remarks>Data-source is 'REGISTRATION_DOCU.NSTATUS_DOC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.LetterFirstDate">
<summary>
Date of the first letter. (DLETFIRSDAT)..
</summary>
<remarks>Data-source is 'REGISTRATION_DOCU.DLETFIRSDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.LetterLastDate">
<summary>
Date of the last letter. (DLETLASTDAT)..
</summary>
<remarks>Data-source is 'REGISTRATION_DOCU.DLETLASTDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.ReceiptDocumentDate">
<summary>
Date of receipt of the document. (DRECEPDATE)..
</summary>
<remarks>Data-source is 'REGISTRATION_DOCU.DRECEPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.PrescriptionClaimDate">
<summary>
Date of prescription of the claim. (DPRESCDATE)..
</summary>
<remarks>Data-source is 'REGISTRATION_DOCU.DPRESCDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.DocumentIDReceived">
<summary>
Number (ID) of the document received. (NDOCNUMBE)..
</summary>
<remarks>Data-source is 'REGISTRATION_DOCU.NDOCNUMBE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.ReceiptDocumentNumber">
<summary>
Number of documents received. (NQUANTITY)..
</summary>
<remarks>Data-source is 'REGISTRATION_DOCU.NQUANTITY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.ComputerDate">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'REGISTRATION_DOCU.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'REGISTRATION_DOCU.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClaimRegistrationRequestDocumentItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocument.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocumentCollection">
 <summary>
 Collection for ClaimRegistrationRequestDocument class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocumentCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocumentCollection.AddClaimRegistrationRequestDocument">
 <summary>
 Add an instance of class 'ClaimRegistrationRequestDocument' in the ClaimRegistrationRequestDocumentCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocumentCollection.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocumentCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocumentCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocumentCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationRequestDocumentCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover">
 <summary>
 Selected covers for the registration claim.
 </summary>
<remarks>Data-source is 'REGISTRATION_COVER'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.CreateNewClaimRegistrationSelectedCover">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover._ClaimRegistration">
<summary>
Number of claim registration Possible values as per table CLAIM_REGISTRATION.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover._CodeLineBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover._CodeProduct">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover._PolicyNumber">
<summary>
Number identifying the Policy.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover._CertificateNumber">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover._CoverNumber">
<summary>
Number identifying the cover.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover._ComputerDate">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.ClaimRegistration">
<summary>
Number of claim registration Possible values as per table CLAIM_REGISTRATION. (NCLAIM_REGIST)..
</summary>
<remarks>Data-source is 'REGISTRATION_COVER.NCLAIM_REGIST'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.CodeLineBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'REGISTRATION_COVER.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.CodeProduct">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'REGISTRATION_COVER.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.PolicyNumber">
<summary>
Number identifying the Policy. (NPOLICY)..
</summary>
<remarks>Data-source is 'REGISTRATION_COVER.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.CertificateNumber">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'REGISTRATION_COVER.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.CoverNumber">
<summary>
Number identifying the cover. (NCOVER)..
</summary>
<remarks>Data-source is 'REGISTRATION_COVER.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.ComputerDate">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'REGISTRATION_COVER.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'REGISTRATION_COVER.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClaimRegistrationSelectedCoverItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCover.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCoverCollection">
 <summary>
 Collection for ClaimRegistrationSelectedCover class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCoverCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCoverCollection.AddClaimRegistrationSelectedCover">
 <summary>
 Add an instance of class 'ClaimRegistrationSelectedCover' in the ClaimRegistrationSelectedCoverCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCoverCollection.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCoverCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCoverCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCoverCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimRegistrationSelectedCoverCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory">
 <summary>
 Claim Status history
 </summary>
<remarks>Data-source is 'CLAIMSTATHIS'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.CreateNewClaimStatusHistory">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory._ClaimID">
<summary>
Claim number
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory._ClaimStatus">
<summary>
Claim status
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory._ClaimStatusDate">
<summary>
Claim status date
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory._ConsecutiveIDNumber">
<summary>
Consecutive ID number
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.ClaimID">
<summary>
Claim number (NCLAIM)..
</summary>
<remarks>Data-source is 'CLAIMSTATHIS.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.ClaimStatus">
<summary>
Claim status (SSTACLAIM)..
</summary>
<remarks>Data-source is 'CLAIMSTATHIS.SSTACLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.ClaimStatusDate">
<summary>
Claim status date (DSTATDATE)..
</summary>
<remarks>Data-source is 'CLAIMSTATHIS.DSTATDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.ConsecutiveIDNumber">
<summary>
Consecutive ID number (NIDCONSEC)..
</summary>
<remarks>Data-source is 'CLAIMSTATHIS.NIDCONSEC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLAIMSTATHIS.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLAIMSTATHIS.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClaimStatusHistoryItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistory.ClaimStatusDescription">
 <summary>
 Claim status
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE135'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistoryCollection">
 <summary>
 Collection for ClaimStatusHistory class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistoryCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistoryCollection.AddClaimStatusHistory">
 <summary>
 Add an instance of class 'ClaimStatusHistory' in the ClaimStatusHistoryCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistoryCollection.Compare(InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistoryCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistoryCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistoryCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClaimStatusHistoryCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct">
 <summary>
 Clients allowed in a claim for a product.
 </summary>
<remarks>Data-source is 'CLIALLOCLA'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.CreateNewClientAllowedInClaimPerProduct">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct._ClientRole">
<summary>
Role of the client in the policy.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct._Required">
<summary>
Role required.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct._MaximumNumber">
<summary>
Maximum number of clients with the same role.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'CLIALLOCLA.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'CLIALLOCLA.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.ClientRole">
<summary>
Role of the client in the policy. (NROLE)..
</summary>
<remarks>Data-source is 'CLIALLOCLA.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.ClientRoleEnum">
<summary>
Role of the client in the policy.
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.ClientRoleEnumText">
<summary>
Role of the client in the policy.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLIALLOCLA.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.Required">
<summary>
Role required. (SREQUIRE)..
</summary>
<remarks>Data-source is 'CLIALLOCLA.SREQUIRE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLIALLOCLA.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.MaximumNumber">
<summary>
Maximum number of clients with the same role. (NMAXNUM_ROL)..
</summary>
<remarks>Data-source is 'CLIALLOCLA.NMAXNUM_ROL'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.Compare(InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClientAllowedInClaimPerProductItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProduct.ClientRoleDescription">
 <summary>
 Role of the client in the policy.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE12'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProductCollection">
 <summary>
 Collection for ClientAllowedInClaimPerProduct class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProductCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProductCollection.AddClientAllowedInClaimPerProduct">
 <summary>
 Add an instance of class 'ClientAllowedInClaimPerProduct' in the ClientAllowedInClaimPerProductCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProductCollection.Compare(InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProductCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProductCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProductCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ClientAllowedInClaimPerProductCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim">
 <summary>
 Distribution of coinsurance in a claim.
 </summary>
<remarks>Data-source is 'CL_COINSURAN'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.CreateNewCoinsuranceDistributionOfClaim">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim._ClaimCode">
<summary>
Code of The Claim Case or Claimant.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim._ClaimType">
<summary>
Claim Type.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim._Company">
<summary>
Code of the company.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim._Expenses">
<summary>
Percentage of administrative expenses.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim._Share">
<summary>
Percentage of share of the coinsurance company on the total risk insured.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'CL_COINSURAN.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.ClaimCode">
<summary>
Code of The Claim Case or Claimant. (NCASE_NUM)..
</summary>
<remarks>Data-source is 'CL_COINSURAN.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.ClaimType">
<summary>
Claim Type. (NDEMAN_TYPE)..
</summary>
<remarks>Data-source is 'CL_COINSURAN.NDEMAN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.Company">
<summary>
Code of the company. (NCOMPANY)..
</summary>
<remarks>Data-source is 'CL_COINSURAN.NCOMPANY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CL_COINSURAN.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.Expenses">
<summary>
Percentage of administrative expenses. (NEXPENSES)..
</summary>
<remarks>Data-source is 'CL_COINSURAN.NEXPENSES'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CL_COINSURAN.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'CL_COINSURAN.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.Share">
<summary>
Percentage of share of the coinsurance company on the total risk insured. (NSHARE)..
</summary>
<remarks>Data-source is 'CL_COINSURAN.NSHARE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CL_COINSURAN.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.Compare(InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CoinsuranceDistributionOfClaimItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaim.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaimCollection">
 <summary>
 Collection for CoinsuranceDistributionOfClaim class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaimCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaimCollection.AddCoinsuranceDistributionOfClaim">
 <summary>
 Add an instance of class 'CoinsuranceDistributionOfClaim' in the CoinsuranceDistributionOfClaimCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaimCollection.Compare(InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaimCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaimCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaimCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CoinsuranceDistributionOfClaimCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim">
 <summary>
 Concepts involved in the payment of a claim.
 </summary>
<remarks>Data-source is 'CL_BILL_PA'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.CreateNewConceptInPaymentClaim">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim._ClaimCode">
<summary>
Code of The Claim Case or Claimant.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim._ClaimType">
<summary>
Claim Type.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim._ClientID">
<summary>
Code of the insured client related to the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim._ClaimEntryNumber">
<summary>
Entry number related to a claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim._PaymentConcept">
<summary>
Payment concept.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim._Amount">
<summary>
Payment item amount (in the cover/claim currency).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim._VATRate">
<summary>
Value added tax rate.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim._ClientRole">
<summary>
Role of the client in the policy.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'CL_BILL_PA.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.ClaimCode">
<summary>
Code of The Claim Case or Claimant. (NCASE_NUM)..
</summary>
<remarks>Data-source is 'CL_BILL_PA.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.ClaimType">
<summary>
Claim Type. (NDEMAN_TYPE)..
</summary>
<remarks>Data-source is 'CL_BILL_PA.NDEMAN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'CL_BILL_PA.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'CL_BILL_PA.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'CL_BILL_PA.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.ClientID">
<summary>
Code of the insured client related to the coverage. (SCLIENT)..
</summary>
<remarks>Data-source is 'CL_BILL_PA.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.ClaimEntryNumber">
<summary>
Entry number related to a claim. (NTRANSAC)..
</summary>
<remarks>Data-source is 'CL_BILL_PA.NTRANSAC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.PaymentConcept">
<summary>
Payment concept. (NPAY_CONCEP)..
</summary>
<remarks>Data-source is 'CL_BILL_PA.NPAY_CONCEP'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.Amount">
<summary>
Payment item amount (in the cover/claim currency). (NAMOUNT)..
</summary>
<remarks>Data-source is 'CL_BILL_PA.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CL_BILL_PA.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CL_BILL_PA.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.VATRate">
<summary>
Value added tax rate. (NVA_TAX)..
</summary>
<remarks>Data-source is 'CL_BILL_PA.NVA_TAX'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'CL_BILL_PA.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'CL_BILL_PA.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.ClientRole">
<summary>
Role of the client in the policy. (NROLE)..
</summary>
<remarks>Data-source is 'CL_BILL_PA.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.ClientRoleEnum">
<summary>
Role of the client in the policy.
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.ClientRoleEnumText">
<summary>
Role of the client in the policy.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFD_CL_COV_BIL)..
</summary>
<remarks>Data-source is 'CL_BILL_PA.DEFD_CL_COV_BIL'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.Compare(InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ConceptInPaymentClaimItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaim.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaimCollection">
 <summary>
 Collection for ConceptInPaymentClaim class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaimCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaimCollection.AddConceptInPaymentClaim">
 <summary>
 Add an instance of class 'ConceptInPaymentClaim' in the ConceptInPaymentClaimCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaimCollection.Compare(InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaimCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaimCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaimCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ConceptInPaymentClaimCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate">
 <summary>
 Customer message templates
 </summary>
<remarks>Data-source is 'TAB_TEMPCLAIM'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.CreateNewCustomerMessageTemplate">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate._Id">
<summary>
Id
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate._LongDescription">
<summary>
Long description
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate._RicohSmsTemplateText">
<summary>
Ricoh sms template code.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate._RicohEmailTemplateText">
<summary>
Ricoh email template code
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate._RicohMailTemplateText">
<summary>
Ricoh Mail template text
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate._RicohSmsTemplateCode">
<summary>
Ricoh sms template code
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate._RicohEmailTemplateCode">
<summary>
Ricoh email template code
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate._RicohMailTemplateCode">
<summary>
Ricoh Mail template code
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.Id">
<summary>
Id (NID)..
</summary>
<remarks>Data-source is 'TAB_TEMPCLAIM.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.LongDescription">
<summary>
Long description (SDESCRIPT)..
</summary>
<remarks>Data-source is 'TAB_TEMPCLAIM.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.RicohSmsTemplateText">
<summary>
Ricoh sms template code. (STXTSMS)..
</summary>
<remarks>Data-source is 'TAB_TEMPCLAIM.STXTSMS'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.RicohEmailTemplateText">
<summary>
Ricoh email template code (STXTEMAIL)..
</summary>
<remarks>Data-source is 'TAB_TEMPCLAIM.STXTEMAIL'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.RicohMailTemplateText">
<summary>
Ricoh Mail template text (STXTMAIL)..
</summary>
<remarks>Data-source is 'TAB_TEMPCLAIM.STXTMAIL'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.RicohSmsTemplateCode">
<summary>
Ricoh sms template code (SCODERICOHSMS)..
</summary>
<remarks>Data-source is 'TAB_TEMPCLAIM.SCODERICOHSMS'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.RicohEmailTemplateCode">
<summary>
Ricoh email template code (SCODERICOHEMAIL)..
</summary>
<remarks>Data-source is 'TAB_TEMPCLAIM.SCODERICOHEMAIL'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.RicohMailTemplateCode">
<summary>
Ricoh Mail template code (SCODERICOHMAIL)..
</summary>
<remarks>Data-source is 'TAB_TEMPCLAIM.SCODERICOHMAIL'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_TEMPCLAIM.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_TEMPCLAIM.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.Compare(InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CustomerMessageTemplateItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.RicohSmsTemplateCodeDescription">
 <summary>
 Ricoh sms template code
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6772' on the table 'TABLE6772'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplate.RicohMailTemplateCodeDescription">
 <summary>
 Ricoh Mail template code
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6772' on the table 'TABLE6772'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplateCollection">
 <summary>
 Collection for CustomerMessageTemplate class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplateCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplateCollection.AddCustomerMessageTemplate">
 <summary>
 Add an instance of class 'CustomerMessageTemplate' in the CustomerMessageTemplateCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplateCollection.Compare(InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplateCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplateCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplateCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.CustomerMessageTemplateCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.DamageInClaim">
 <summary>
 Damages occurred to the insured risks in a claim.
 </summary>
<remarks>Data-source is 'CLAIM_DAMA'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.CreateNewDamageInClaim">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageInClaim._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageInClaim._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageInClaim._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageInClaim._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageInClaim._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageInClaim._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageInClaim._ClaimCode">
<summary>
Code of The Claim Case or Claimant.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageInClaim._ClaimType">
<summary>
Claim Type.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageInClaim._SparePart">
<summary>
Part code.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageInClaim._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageInClaim._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageInClaim._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageInClaim._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageInClaim._MagnitudeOfDamages">
<summary>
Code of magnitude of damages.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageInClaim._DamageAmount">
<summary>
Damage amount
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageInClaim._ReferentialAmount">
<summary>
Referential amount (Maximum)
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageInClaim._BudgetAmount">
<summary>
Budget amount by the provider
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'CLAIM_DAMA.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.ClaimCode">
<summary>
Code of The Claim Case or Claimant. (NCASE_NUM)..
</summary>
<remarks>Data-source is 'CLAIM_DAMA.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.ClaimType">
<summary>
Claim Type. (NDEMAN_TYPE)..
</summary>
<remarks>Data-source is 'CLAIM_DAMA.NDEMAN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.SparePart">
<summary>
Part code. (NDAMAGE_COD)..
</summary>
<remarks>Data-source is 'CLAIM_DAMA.NDAMAGE_COD'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'CLAIM_DAMA.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLAIM_DAMA.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'CLAIM_DAMA.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLAIM_DAMA.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.MagnitudeOfDamages">
<summary>
Code of magnitude of damages. (NMAG_DAM)..
</summary>
<remarks>Data-source is 'CLAIM_DAMA.NMAG_DAM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.DamageAmount">
<summary>
Damage amount (NAMOUNT)..
</summary>
<remarks>Data-source is 'CLAIM_DAMA.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.ReferentialAmount">
<summary>
Referential amount (Maximum) (nReferentialAmount)..
</summary>
<remarks>Data-source is 'CLAIM_DAMA.nReferentialAmount'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.BudgetAmount">
<summary>
Budget amount by the provider (nBudgetAmount)..
</summary>
<remarks>Data-source is 'CLAIM_DAMA.nBudgetAmount'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.Compare(InMotionGIT.Claim.Entity.Contracts.DamageInClaim,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="DamageInClaimItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageInClaim.MagnitudeOfDamagesDescription">
 <summary>
 Code of magnitude of damages.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5674'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.DamageInClaimCollection">
 <summary>
 Collection for DamageInClaim class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageInClaimCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageInClaimCollection.AddDamageInClaim">
 <summary>
 Add an instance of class 'DamageInClaim' in the DamageInClaimCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageInClaimCollection.Compare(InMotionGIT.Claim.Entity.Contracts.DamageInClaimCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageInClaimCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageInClaimCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageInClaimCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle">
 <summary>
 Table of possible damages occured to the insured vehicle.
 </summary>
<remarks>Data-source is 'TAB_DAMAGE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.CreateNewDamageToInsuredVehicle">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle._DamageCode">
<summary>
Code of the damage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle._Description">
<summary>
Description of the damage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle._ShortDescription">
<summary>
Short description of the damage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAB_DAMAGE.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.DamageCode">
<summary>
Code of the damage. (NDAMAGE_COD)..
</summary>
<remarks>Data-source is 'TAB_DAMAGE.NDAMAGE_COD'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_DAMAGE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.Description">
<summary>
Description of the damage. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'TAB_DAMAGE.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.ShortDescription">
<summary>
Short description of the damage. (SSHORT_DES)..
</summary>
<remarks>Data-source is 'TAB_DAMAGE.SSHORT_DES'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'TAB_DAMAGE.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_DAMAGE.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.Compare(InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="DamageToInsuredVehicleItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicle.LineOfBusinessDescription">
 <summary>
 Code of the line of business.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE10'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicleCollection">
 <summary>
 Collection for DamageToInsuredVehicle class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicleCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicleCollection.AddDamageToInsuredVehicle">
 <summary>
 Add an instance of class 'DamageToInsuredVehicle' in the DamageToInsuredVehicleCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicleCollection.Compare(InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicleCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicleCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicleCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DamageToInsuredVehicleCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim">
 <summary>
 Deadlines for handling claims
 </summary>
<remarks>Data-source is 'TAB_CLAIMSLA'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.CreateNewDeadlinesForHandlingClaim">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim._IdSla">
<summary>
Id SLA
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim._NameOfSla">
<summary>
Name of SLA
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim._SlaDescription">
<summary>
SLA Description
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim._MethodCalculation">
<summary>
Method of calculation
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim._DaysWithoutDerivation">
<summary>
Days without derivation
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim._DaysWithDerivation">
<summary>
Days with derivation
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim._EmailAdministrator">
<summary>
Email Administrator
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim._NoticesClaimsProcessingDeadlinesCollection">
<summary>
Notices of compliance with claims processing deadlines
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.IdSla">
<summary>
Id SLA (NIDSLA)..
</summary>
<remarks>Data-source is 'TAB_CLAIMSLA.NIDSLA'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.NameOfSla">
<summary>
Name of SLA (SNAMESLA)..
</summary>
<remarks>Data-source is 'TAB_CLAIMSLA.SNAMESLA'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.SlaDescription">
<summary>
SLA Description (SDESCRIPT)..
</summary>
<remarks>Data-source is 'TAB_CLAIMSLA.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.MethodCalculation">
<summary>
Method of calculation (NMETHCALC)..
</summary>
<remarks>Data-source is 'TAB_CLAIMSLA.NMETHCALC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.DaysWithoutDerivation">
<summary>
Days without derivation (NTARGETWITHOUTDER)..
</summary>
<remarks>Data-source is 'TAB_CLAIMSLA.NTARGETWITHOUTDER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.DaysWithDerivation">
<summary>
Days with derivation (NTARGETWITHDER)..
</summary>
<remarks>Data-source is 'TAB_CLAIMSLA.NTARGETWITHDER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.EmailAdministrator">
<summary>
Email Administrator (SEMAILADMIN)..
</summary>
<remarks>Data-source is 'TAB_CLAIMSLA.SEMAILADMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_CLAIMSLA.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_CLAIMSLA.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.NewNoticesClaimsProcessingDeadlinesCollectionInstance">
<summary>
Initializes the 'NoticesClaimsProcessingDeadlinesCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.NewNoticesClaimsProcessingDeadlineItem(System.Boolean)">
<summary>
Add a new item to the collection of 'NoticesClaimsProcessingDeadlinesCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'NoticesClaimsProcessingDeadline' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.NoticesClaimsProcessingDeadlinesCollection">
<summary>
Notices of compliance with claims processing deadlines collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.Compare(InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="DeadlinesForHandlingClaimItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaim.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaimCollection">
 <summary>
 Collection for DeadlinesForHandlingClaim class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaimCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaimCollection.AddDeadlinesForHandlingClaim">
 <summary>
 Add an instance of class 'DeadlinesForHandlingClaim' in the DeadlinesForHandlingClaimCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaimCollection.Compare(InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaimCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaimCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaimCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DeadlinesForHandlingClaimCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim">
 <summary>
 Information of diagnosis of a health's incident.
 </summary>
<remarks>Data-source is 'CL_DIAGNOSTIC'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.CreateNewDiagnosisHealthClaim">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim._ClaimCode">
<summary>
Code of The Claim Case or Claimant.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim._ClaimType">
<summary>
Claim Type.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim._DateOfDiagnostic">
<summary>
Date when the diagnosis is made.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim._ShortDescription">
<summary>
Short description of the diagnosis.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim._NoteID">
<summary>
Number of the note containing the comments.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim._EvaluationStatus">
<summary>
Status of evaluation (diagnostics and bills).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'CL_DIAGNOSTIC.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.ClaimCode">
<summary>
Code of The Claim Case or Claimant. (NCASE_NUM)..
</summary>
<remarks>Data-source is 'CL_DIAGNOSTIC.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.ClaimType">
<summary>
Claim Type. (NDEMAN_TYPE)..
</summary>
<remarks>Data-source is 'CL_DIAGNOSTIC.NDEMAN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.DateOfDiagnostic">
<summary>
Date when the diagnosis is made. (DDIAG_DATE)..
</summary>
<remarks>Data-source is 'CL_DIAGNOSTIC.DDIAG_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CL_DIAGNOSTIC.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'CL_DIAGNOSTIC.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CL_DIAGNOSTIC.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.ShortDescription">
<summary>
Short description of the diagnosis. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'CL_DIAGNOSTIC.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.NoteID">
<summary>
Number of the note containing the comments. (NNOTENUM)..
</summary>
<remarks>Data-source is 'CL_DIAGNOSTIC.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CL_DIAGNOSTIC.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.EvaluationStatus">
<summary>
Status of evaluation (diagnostics and bills). (NEVALSTAT)..
</summary>
<remarks>Data-source is 'CL_DIAGNOSTIC.NEVALSTAT'.</remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.Compare(InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="DiagnosisHealthClaimItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaim.EvaluationStatusDescription">
 <summary>
 Status of evaluation (diagnostics and bills).
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE561'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaimCollection">
 <summary>
 Collection for DiagnosisHealthClaim class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaimCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaimCollection.AddDiagnosisHealthClaim">
 <summary>
 Add an instance of class 'DiagnosisHealthClaim' in the DiagnosisHealthClaimCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaimCollection.Compare(InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaimCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaimCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaimCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DiagnosisHealthClaimCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim">
 <summary>
 Documents requested on a claim.
 </summary>
<remarks>Data-source is 'DOCUMENTS'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.CreateNewDocumentRequestInClaim">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._ClaimCode">
<summary>
Code of The Claim Case or Claimant.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._ClaimType">
<summary>
Claim Type.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._ConsecutiveNumber">
<summary>
Correlative number (by claim and case), that identifies the record as unique.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._RequestedDocument">
<summary>
Code of the document requested to process the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._DateOfFirstLetter">
<summary>
Date of the first letter.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._DateOfLastLetter">
<summary>
Date of the last letter.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._DateReceived">
<summary>
Date when the document was received.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._DocumentStatus">
<summary>
Status of the document.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._DocumentIDNumber">
<summary>
Number (ID) of the document received.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._NumberOfDocumentsReceived">
<summary>
Number of documents received.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._dPropo_date">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._LapseDate">
<summary>
Date when the claim will be closed if the requirements are not received.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._nConsec">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._sDescript">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._DDEFAULT_DATE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._DEND_DEFAULTD">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._DLEGAL_DATE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._DSOLUTION">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._NMORA">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim._NORDER_NUM">
<summary>

</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'DOCUMENTS.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.ClaimCode">
<summary>
Code of The Claim Case or Claimant. (NCASE_NUM)..
</summary>
<remarks>Data-source is 'DOCUMENTS.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.ClaimType">
<summary>
Claim Type. (NDEMAN_TYPE)..
</summary>
<remarks>Data-source is 'DOCUMENTS.NDEMAN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'DOCUMENTS.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.ConsecutiveNumber">
<summary>
Correlative number (by claim and case), that identifies the record as unique. (NID)..
</summary>
<remarks>Data-source is 'DOCUMENTS.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.RequestedDocument">
<summary>
Code of the document requested to process the claim. (NDOC_CODE)..
</summary>
<remarks>Data-source is 'DOCUMENTS.NDOC_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'DOCUMENTS.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'DOCUMENTS.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.DateOfFirstLetter">
<summary>
Date of the first letter. (DLETFIRSDAT)..
</summary>
<remarks>Data-source is 'DOCUMENTS.DLETFIRSDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.DateOfLastLetter">
<summary>
Date of the last letter. (DLETLASTDAT)..
</summary>
<remarks>Data-source is 'DOCUMENTS.DLETLASTDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.DateReceived">
<summary>
Date when the document was received. (DRECEPDATE)..
</summary>
<remarks>Data-source is 'DOCUMENTS.DRECEPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.DocumentStatus">
<summary>
Status of the document. (NSTATUS_DOC)..
</summary>
<remarks>Data-source is 'DOCUMENTS.NSTATUS_DOC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'DOCUMENTS.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.DocumentIDNumber">
<summary>
Number (ID) of the document received. (NDOCNUMBE)..
</summary>
<remarks>Data-source is 'DOCUMENTS.NDOCNUMBE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.NumberOfDocumentsReceived">
<summary>
Number of documents received. (NQUANTITY)..
</summary>
<remarks>Data-source is 'DOCUMENTS.NQUANTITY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.dPropo_date">
<summary>
.
</summary>
<remarks>Data-source is 'DOCUMENTS.DPROPO_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.LapseDate">
<summary>
Date when the claim will be closed if the requirements are not received. (DPRESCDATE)..
</summary>
<remarks>Data-source is 'DOCUMENTS.DPRESCDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.nConsec">
<summary>
.
</summary>
<remarks>Data-source is 'DOCUMENTS.NCONSEC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.sDescript">
<summary>
.
</summary>
<remarks>Data-source is 'DOCUMENTS.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.DDEFAULT_DATE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DOCUMENTS.DDEFAULT_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.DEND_DEFAULTD">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DOCUMENTS.DEND_DEFAULTD'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.DLEGAL_DATE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DOCUMENTS.DLEGAL_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.DSOLUTION">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DOCUMENTS.DSOLUTION'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.NMORA">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DOCUMENTS.NMORA'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.NORDER_NUM">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DOCUMENTS.NORDER_NUM'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.Compare(InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="DocumentRequestInClaimItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaim.DocumentStatusDescription">
 <summary>
 Status of the document.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE203'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaimCollection">
 <summary>
 Collection for DocumentRequestInClaim class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaimCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaimCollection.AddDocumentRequestInClaim">
 <summary>
 Add an instance of class 'DocumentRequestInClaim' in the DocumentRequestInClaimCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaimCollection.Compare(InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaimCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaimCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaimCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.DocumentRequestInClaimCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion">
 <summary>
 Fraud Prevention Questions
 </summary>
<remarks>Data-source is 'TAB_QUESTINARIESIU_DET'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.CreateNewFraudPreventionQuestion">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion._ProductCode">
<summary>
Code of the product for the reason of loss.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion._CauseOfClaim">
<summary>
Code of cause of the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion._QuestionCode">
<summary>
Question Code
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion._IfPositiveAdd">
<summary>
Add if positive
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion._IfNegativeAdd">
<summary>
Add if Negative
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion._Status">
<summary>
Register status
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAB_QUESTINARIESIU_DET.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.ProductCode">
<summary>
Code of the product for the reason of loss. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAB_QUESTINARIESIU_DET.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.CauseOfClaim">
<summary>
Code of cause of the claim. (NCAUSECOD)..
</summary>
<remarks>Data-source is 'TAB_QUESTINARIESIU_DET.NCAUSECOD'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.QuestionCode">
<summary>
Question Code (NQUESTION)..
</summary>
<remarks>Data-source is 'TAB_QUESTINARIESIU_DET.NQUESTION'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.IfPositiveAdd">
<summary>
Add if positive (NTRUE_PLUS)..
</summary>
<remarks>Data-source is 'TAB_QUESTINARIESIU_DET.NTRUE_PLUS'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.IfNegativeAdd">
<summary>
Add if Negative (NFALSE_MINUS)..
</summary>
<remarks>Data-source is 'TAB_QUESTINARIESIU_DET.NFALSE_MINUS'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.Status">
<summary>
Register status (SSTATREGT)..
</summary>
<remarks>Data-source is 'TAB_QUESTINARIESIU_DET.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.StatusEnum">
<summary>
Register status
</summary>
<remarks>This property use a enumeration based on property 'Status'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.StatusEnumText">
<summary>
Register status
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_QUESTINARIESIU_DET.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_QUESTINARIESIU_DET.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.Compare(InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="FraudPreventionQuestionItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestion.QuestionCodeDescription">
 <summary>
 Question Code
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6839' on the table 'TABLE6839'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionCollection">
 <summary>
 Collection for FraudPreventionQuestion class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionCollection.AddFraudPreventionQuestion">
 <summary>
 Add an instance of class 'FraudPreventionQuestion' in the FraudPreventionQuestionCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionCollection.Compare(InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary">
 <summary>
 Fraud Prevention Questions
 </summary>
<remarks>Data-source is 'TAB_QUESTINARIESIU'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.CreateNewFraudPreventionQuestionary">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary._ProductCode">
<summary>
Code of the product for the reason of loss.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary._CauseOfClaim">
<summary>
Code of cause of the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary._MinimumAutomaticApproval">
<summary>
Minimum automatic approval
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary._Status">
<summary>
Register status
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary._FraudPreventionQuestionsCollection">
<summary>
Fraud Prevention Questions
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAB_QUESTINARIESIU.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.ProductCode">
<summary>
Code of the product for the reason of loss. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAB_QUESTINARIESIU.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.CauseOfClaim">
<summary>
Code of cause of the claim. (NCAUSECOD)..
</summary>
<remarks>Data-source is 'TAB_QUESTINARIESIU.NCAUSECOD'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.MinimumAutomaticApproval">
<summary>
Minimum automatic approval (NMINAUTOAPPROVAL)..
</summary>
<remarks>Data-source is 'TAB_QUESTINARIESIU.NMINAUTOAPPROVAL'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.Status">
<summary>
Register status (SSTATREGT)..
</summary>
<remarks>Data-source is 'TAB_QUESTINARIESIU.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.StatusEnum">
<summary>
Register status
</summary>
<remarks>This property use a enumeration based on property 'Status'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.StatusEnumText">
<summary>
Register status
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_QUESTINARIESIU.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_QUESTINARIESIU.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.NewFraudPreventionQuestionsCollectionInstance">
<summary>
Initializes the 'FraudPreventionQuestionsCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.NewFraudPreventionQuestionItem(System.Boolean)">
<summary>
Add a new item to the collection of 'FraudPreventionQuestionsCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'FraudPreventionQuestion' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.FraudPreventionQuestionsCollection">
<summary>
Fraud Prevention Questions collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.Compare(InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="FraudPreventionQuestionaryItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionary.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionaryCollection">
 <summary>
 Collection for FraudPreventionQuestionary class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionaryCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionaryCollection.AddFraudPreventionQuestionary">
 <summary>
 Add an instance of class 'FraudPreventionQuestionary' in the FraudPreventionQuestionaryCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionaryCollection.Compare(InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionaryCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionaryCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionaryCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.FraudPreventionQuestionaryCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport">
 <summary>
 Merchandise affected in a claim.
 </summary>
<remarks>Data-source is 'CL_TRANSPO'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.CreateNewGoodStrickenInTheTransport">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport._ClaimCode">
<summary>
Code of The Claim Case or Claimant.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport._ClaimType">
<summary>
Claim Type.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport._MerchandiseCode">
<summary>
Code of the merchandise.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport._Packaging">
<summary>
Packaging type used for the merchandise.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport._RouteCovered">
<summary>
Code of the route covered.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport._TransportationMode">
<summary>
Code of the Transportation Mode.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport._DamagedMerchandiseAmount">
<summary>
Amount of merchandise damaged.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'CL_TRANSPO.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.ClaimCode">
<summary>
Code of The Claim Case or Claimant. (NCASE_NUM)..
</summary>
<remarks>Data-source is 'CL_TRANSPO.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.ClaimType">
<summary>
Claim Type. (NDEMAN_TYPE)..
</summary>
<remarks>Data-source is 'CL_TRANSPO.NDEMAN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CL_TRANSPO.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'CL_TRANSPO.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.MerchandiseCode">
<summary>
Code of the merchandise. (NTRAN_MERCH)..
</summary>
<remarks>Data-source is 'CL_TRANSPO.NTRAN_MERCH'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.Packaging">
<summary>
Packaging type used for the merchandise. (NPACKING)..
</summary>
<remarks>Data-source is 'CL_TRANSPO.NPACKING'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.RouteCovered">
<summary>
Code of the route covered. (NTRAN_ROUTE)..
</summary>
<remarks>Data-source is 'CL_TRANSPO.NTRAN_ROUTE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.TransportationMode">
<summary>
Code of the Transportation Mode. (NTRAN_WAY)..
</summary>
<remarks>Data-source is 'CL_TRANSPO.NTRAN_WAY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'CL_TRANSPO.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.DamagedMerchandiseAmount">
<summary>
Amount of merchandise damaged. (NCASEDAM)..
</summary>
<remarks>Data-source is 'CL_TRANSPO.NCASEDAM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CL_TRANSPO.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CL_TRANSPO.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.Compare(InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="GoodStrickenInTheTransportItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransport.PackagingDescription">
 <summary>
 Packaging type used for the merchandise.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE237'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransportCollection">
 <summary>
 Collection for GoodStrickenInTheTransport class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransportCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransportCollection.AddGoodStrickenInTheTransport">
 <summary>
 Add an instance of class 'GoodStrickenInTheTransport' in the GoodStrickenInTheTransportCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransportCollection.Compare(InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransportCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransportCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransportCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.GoodStrickenInTheTransportCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.HealthClaim">
 <summary>
 Information of medical claims (health).
 </summary>
<remarks>Data-source is 'CLAIM_ATTM'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HealthClaim.CreateNewHealthClaim">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HealthClaim.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._ClaimCode">
<summary>
Code of The Claim Case or Claimant.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._ClaimType">
<summary>
Claim Type.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._Illness">
<summary>
Code of the illness.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._DiseaseBeginningDate">
<summary>
Date of beginning of the disease.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._Service">
<summary>
Code of the service rendered by a professional.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._MedicalDoctorClientID">
<summary>
Client code of the medical doctor of the case in the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._ClientID">
<summary>
Client code of the clinic.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._HealthCareNetwork">
<summary>
Health care network used by the insured person.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._NameOfHealthCareNetwork">
<summary>
Name of the health care network, when it was indicated &#34;other&#34;.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._HospitalizationDays">
<summary>
Quantity of days of hospitalitation
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._TypeOfTreatment">
<summary>
Type of Treatment
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._Admission">
<summary>
Type of admission
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._ActivationIndicator">
<summary>
Indicator that the guarantee letter or the key has been activated
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._ServiceType">
<summary>
Type of service
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._ExtendedCoverageIndicator">
<summary>
Extended coverage indicator. It Will have the afirmative value when exist another case related with the same event.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._HealthEntity">
<summary>
Code of the vendor that provide the health services.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._HealthProfesional">
<summary>
Code of the health profesional serves the case.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HealthClaim._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'CLAIM_ATTM.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.ClaimCode">
<summary>
Code of The Claim Case or Claimant. (NCASE_NUM)..
</summary>
<remarks>Data-source is 'CLAIM_ATTM.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.ClaimType">
<summary>
Claim Type. (NDEMAN_TYPE)..
</summary>
<remarks>Data-source is 'CLAIM_ATTM.NDEMAN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CLAIM_ATTM.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLAIM_ATTM.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.Illness">
<summary>
Code of the illness. (SILLNESS)..
</summary>
<remarks>Data-source is 'CLAIM_ATTM.SILLNESS'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.DiseaseBeginningDate">
<summary>
Date of beginning of the disease. (DINIT_ILLDATE)..
</summary>
<remarks>Data-source is 'CLAIM_ATTM.DINIT_ILLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.Service">
<summary>
Code of the service rendered by a professional. (NSERVICE)..
</summary>
<remarks>Data-source is 'CLAIM_ATTM.NSERVICE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'CLAIM_ATTM.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLAIM_ATTM.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.MedicalDoctorClientID">
<summary>
Client code of the medical doctor of the case in the claim. (SCLIENTPROF)..
</summary>
<remarks>Data-source is 'CLAIM_ATTM.SCLIENTPROF'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.ClientID">
<summary>
Client code of the clinic. (SCLIENT)..
</summary>
<remarks>Data-source is 'CLAIM_ATTM.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.HealthCareNetwork">
<summary>
Health care network used by the insured person. (SHEALTH_SYSTEM)..
</summary>
<remarks>Data-source is 'CLAIM_ATTM.SHEALTH_SYSTEM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.NameOfHealthCareNetwork">
<summary>
Name of the health care network, when it was indicated &#34;other&#34;. (SHEALTH_SYS_OTHER)..
</summary>
<remarks>Data-source is 'CLAIM_ATTM.SHEALTH_SYS_OTHER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.HospitalizationDays">
<summary>
Quantity of days of hospitalitation (nQuantityDays)..
</summary>
<remarks>Data-source is 'CLAIM_ATTM.nQuantityDays'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.TypeOfTreatment">
<summary>
Type of Treatment (nTreatmentType)..
</summary>
<remarks>Data-source is 'CLAIM_ATTM.nTreatmentType'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.Admission">
<summary>
Type of admission (nAdmissionType)..
</summary>
<remarks>Data-source is 'CLAIM_ATTM.nAdmissionType'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.ActivationIndicator">
<summary>
Indicator that the guarantee letter or the key has been activated (sActivation)..
</summary>
<remarks>Data-source is 'CLAIM_ATTM.sActivation'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.ServiceType">
<summary>
Type of service (nServiceType)..
</summary>
<remarks>Data-source is 'CLAIM_ATTM.nServiceType'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.ExtendedCoverageIndicator">
<summary>
Extended coverage indicator. It Will have the afirmative value when exist another case related with the same event. (sExtendedCoverage)..
</summary>
<remarks>Data-source is 'CLAIM_ATTM.sExtendedCoverage'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.HealthEntity">
<summary>
Code of the vendor that provide the health services. (nHealthEntity)..
</summary>
<remarks>Data-source is 'CLAIM_ATTM.nHealthEntity'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.HealthProfesional">
<summary>
Code of the health profesional serves the case. (nHealthProfesional)..
</summary>
<remarks>Data-source is 'CLAIM_ATTM.nHealthProfesional'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HealthClaim.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HealthClaim.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HealthClaim.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HealthClaim.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HealthClaim.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HealthClaim.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HealthClaim.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HealthClaim.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HealthClaim.Compare(InMotionGIT.Claim.Entity.Contracts.HealthClaim,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="HealthClaimItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HealthClaim.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HealthClaim.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HealthClaim.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HealthClaim.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaim.ServiceDescription">
 <summary>
 Code of the service rendered by a professional.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE277'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.HealthClaimCollection">
 <summary>
 Collection for HealthClaim class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HealthClaimCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HealthClaimCollection.AddHealthClaim">
 <summary>
 Add an instance of class 'HealthClaim' in the HealthClaimCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HealthClaimCollection.Compare(InMotionGIT.Claim.Entity.Contracts.HealthClaimCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HealthClaimCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HealthClaimCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HealthClaimCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim">
 <summary>
 History of Pre-Claims
 </summary>
<remarks>Data-source is 'PRECLAIMHIS'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.CreateNewHistoryPreClaim">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim._IdPreclaim">
<summary>
Internal Id of preclaim
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim._IdPreClaimHistory">
<summary>
Id Pre Claim History
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim._MovementDescription">
<summary>
Movement Description
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim._AmountPreClaim">
<summary>
Amount PreClaim
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim._CurrencyCode">
<summary>
Code of the currency.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.IdPreclaim">
<summary>
Internal Id of preclaim (NIDPRECLAIM)..
</summary>
<remarks>Data-source is 'PRECLAIMHIS.NIDPRECLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.IdPreClaimHistory">
<summary>
Id Pre Claim History (NIDPRECLAIMHIS)..
</summary>
<remarks>Data-source is 'PRECLAIMHIS.NIDPRECLAIMHIS'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.MovementDescription">
<summary>
Movement Description (SDESCRIPT)..
</summary>
<remarks>Data-source is 'PRECLAIMHIS.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.AmountPreClaim">
<summary>
Amount PreClaim (NAMOUNT)..
</summary>
<remarks>Data-source is 'PRECLAIMHIS.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.CurrencyCode">
<summary>
Code of the currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'PRECLAIMHIS.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'PRECLAIMHIS.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'PRECLAIMHIS.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.Compare(InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="HistoryPreClaimItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaim.CurrencyCodeDescription">
 <summary>
 Code of the currency.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE11'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaimCollection">
 <summary>
 Collection for HistoryPreClaim class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaimCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaimCollection.AddHistoryPreClaim">
 <summary>
 Add an instance of class 'HistoryPreClaim' in the HistoryPreClaimCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaimCollection.Compare(InMotionGIT.Claim.Entity.Contracts.HistoryPreClaimCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaimCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaimCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.HistoryPreClaimCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery">
 <summary>
 Inter Areas Claims Inquirys
 </summary>
<remarks>Data-source is 'CLAIM_INTERAREA'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.CreateNewInterDepartmentsInquiery">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery._ClaimID">
<summary>
Claim number
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery._ClaimCode">
<summary>
Code of The Claim Case or Claimant.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery._ClaimType">
<summary>
Claim type (loss on a person, vehicle, property, etc).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery._ReceiverID">
<summary>
Receiver ID
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery._IdMessage">
<summary>
Id Message
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery._DateQuery">
<summary>
Date Of Query
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery._UserQuery">
<summary>
User Query
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery._TextQuery">
<summary>
Text Query
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery._AmountQuery">
<summary>
Amount of the query
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery._ResolutionType">
<summary>
Resolution Type
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery._ResolutionResponse">
<summary>
Resolution response
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery._UserResolution">
<summary>
User Resolution
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery._DateResolution">
<summary>
Date Resolution
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery._AmountResolution">
<summary>
Amount Resolution
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery._TextResolution">
<summary>
Text Resolution
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery._Status">
<summary>
Register status
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.ClaimID">
<summary>
Claim number (NCLAIM)..
</summary>
<remarks>Data-source is 'CLAIM_INTERAREA.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.ClaimCode">
<summary>
Code of The Claim Case or Claimant. (NCASE_NUM)..
</summary>
<remarks>Data-source is 'CLAIM_INTERAREA.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.ClaimType">
<summary>
Claim type (loss on a person, vehicle, property, etc). (NDEMAN_TYPE)..
</summary>
<remarks>Data-source is 'CLAIM_INTERAREA.NDEMAN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.ReceiverID">
<summary>
Receiver ID (NRECIPIENTID)..
</summary>
<remarks>Data-source is 'CLAIM_INTERAREA.NRECIPIENTID'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.IdMessage">
<summary>
Id Message (NMESSAGEID)..
</summary>
<remarks>Data-source is 'CLAIM_INTERAREA.NMESSAGEID'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.DateQuery">
<summary>
Date Of Query (DDATEQUERY)..
</summary>
<remarks>Data-source is 'CLAIM_INTERAREA.DDATEQUERY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.UserQuery">
<summary>
User Query (NUSERQUERY)..
</summary>
<remarks>Data-source is 'CLAIM_INTERAREA.NUSERQUERY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.TextQuery">
<summary>
Text Query (STXTQUERY)..
</summary>
<remarks>Data-source is 'CLAIM_INTERAREA.STXTQUERY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.AmountQuery">
<summary>
Amount of the query (NAMOUNTQUERY)..
</summary>
<remarks>Data-source is 'CLAIM_INTERAREA.NAMOUNTQUERY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.ResolutionType">
<summary>
Resolution Type (NTYPERESOLUTION)..
</summary>
<remarks>Data-source is 'CLAIM_INTERAREA.NTYPERESOLUTION'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.ResolutionResponse">
<summary>
Resolution response (NRESOLUTION)..
</summary>
<remarks>Data-source is 'CLAIM_INTERAREA.NRESOLUTION'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.UserResolution">
<summary>
User Resolution (NUSERRESOLUTION)..
</summary>
<remarks>Data-source is 'CLAIM_INTERAREA.NUSERRESOLUTION'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.DateResolution">
<summary>
Date Resolution (DDATERESOLUTION)..
</summary>
<remarks>Data-source is 'CLAIM_INTERAREA.DDATERESOLUTION'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.AmountResolution">
<summary>
Amount Resolution (NAPPROVEDAMOUNT)..
</summary>
<remarks>Data-source is 'CLAIM_INTERAREA.NAPPROVEDAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.TextResolution">
<summary>
Text Resolution (STXTRESOLUTION)..
</summary>
<remarks>Data-source is 'CLAIM_INTERAREA.STXTRESOLUTION'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.Status">
<summary>
Register status (SSTATREGT)..
</summary>
<remarks>Data-source is 'CLAIM_INTERAREA.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.StatusEnum">
<summary>
Register status
</summary>
<remarks>This property use a enumeration based on property 'Status'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.StatusEnumText">
<summary>
Register status
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLAIM_INTERAREA.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLAIM_INTERAREA.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.Compare(InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="InterDepartmentsInquieryItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquiery.ReceiverIDDescription">
 <summary>
 Receiver ID
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6840' on the table 'TABLE6840'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquieryCollection">
 <summary>
 Collection for InterDepartmentsInquiery class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquieryCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquieryCollection.AddInterDepartmentsInquiery">
 <summary>
 Add an instance of class 'InterDepartmentsInquiery' in the InterDepartmentsInquieryCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquieryCollection.Compare(InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquieryCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquieryCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquieryCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InterDepartmentsInquieryCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification">
 <summary>
 International Standard Industrial Classification
 </summary>
<remarks>Data-source is 'TAB_CIIU'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.CreateNewInternationalStandardIndustrialClassification">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification._CIIUCode">
<summary>
CIIU Code
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification._CIIUDescription">
<summary>
CIIU Description
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification._InsurableCIIUIndicator">
<summary>
Insurable CIIU Indicator
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification._InspectCIIUIndicator">
<summary>
Inspect CIIU Indicator
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification._User">
<summary>
Code of the user creating or updating the record
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.CIIUCode">
<summary>
CIIU Code (NCIIU)..
</summary>
<remarks>Data-source is 'TAB_CIIU.NCIIU'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAB_CIIU.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.CIIUDescription">
<summary>
CIIU Description (SDESCRIPT)..
</summary>
<remarks>Data-source is 'TAB_CIIU.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.InsurableCIIUIndicator">
<summary>
Insurable CIIU Indicator (SINSURABLECIIU)..
</summary>
<remarks>Data-source is 'TAB_CIIU.SINSURABLECIIU'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.InspectCIIUIndicator">
<summary>
Inspect CIIU Indicator (SINSPECTCIIU)..
</summary>
<remarks>Data-source is 'TAB_CIIU.SINSPECTCIIU'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAB_CIIU.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_CIIU.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.User">
<summary>
Code of the user creating or updating the record (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_CIIU.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.Compare(InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="InternationalStandardIndustrialClassificationItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassification.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassificationCollection">
 <summary>
 Collection for InternationalStandardIndustrialClassification class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassificationCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassificationCollection.AddInternationalStandardIndustrialClassification">
 <summary>
 Add an instance of class 'InternationalStandardIndustrialClassification' in the InternationalStandardIndustrialClassificationCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassificationCollection.Compare(InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassificationCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassificationCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassificationCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.InternationalStandardIndustrialClassificationCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.LifeClaim">
 <summary>
 Information of claims of life.
 </summary>
<remarks>Data-source is 'LIFE_CLAIM'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LifeClaim.CreateNewLifeClaim">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LifeClaim.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LifeClaim._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LifeClaim._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LifeClaim._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LifeClaim._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LifeClaim._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LifeClaim._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LifeClaim._ClaimCode">
<summary>
Code of The Claim Case or Claimant.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LifeClaim._ClaimType">
<summary>
Claim Type.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LifeClaim._OutstandingLoans">
<summary>
Outstanding loan amount of the policy.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LifeClaim._InsuredAmount">
<summary>
Total sum insured of the coverages related to the claim
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LifeClaim._ClaimTypeOfLife">
<summary>
Code of the type of claim for Life.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LifeClaim._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LifeClaim._EndingPaymentDate">
<summary>
Final payment date of the annuity.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LifeClaim._TypeOfIndemnity">
<summary>
Type of indemnity for life claims.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LifeClaim._TotalAmountToPay">
<summary>
Maximum total amount of indemnity taking into account the insured amount, the surrender value and the loans of the policy-certificate.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LifeClaim._InitialPaymentDate">
<summary>
Date when the beneficiary begins to receive the annuity
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LifeClaim._InterestRate">
<summary>
Percentage to be paid.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LifeClaim._MonthlyPayment">
<summary>
Monthly amount to be paid to the beneficiary.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LifeClaim._SurrenderValue">
<summary>
Surrender amount at the moment of the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LifeClaim._ClaimEntryNumber">
<summary>
Last number used for entries of this claim-case.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LifeClaim._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LifeClaim._InitialReserveEntryID">
<summary>
Number of the initial entry generated to create the reserve of the claim and case.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LifeClaim._PaymentFrequency">
<summary>
Code of the payment frequency for the annuity.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LifeClaim._PensionType">
<summary>
Pension Type
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LifeClaim._Quotes">
<summary>
Number of installment payment
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'LIFE_CLAIM.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.ClaimCode">
<summary>
Code of The Claim Case or Claimant. (NCASE_NUM)..
</summary>
<remarks>Data-source is 'LIFE_CLAIM.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.ClaimType">
<summary>
Claim Type. (NDEMAN_TYPE)..
</summary>
<remarks>Data-source is 'LIFE_CLAIM.NDEMAN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.OutstandingLoans">
<summary>
Outstanding loan amount of the policy. (NADV_PAYMEN)..
</summary>
<remarks>Data-source is 'LIFE_CLAIM.NADV_PAYMEN'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.InsuredAmount">
<summary>
Total sum insured of the coverages related to the claim (NCAPITAL)..
</summary>
<remarks>Data-source is 'LIFE_CLAIM.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.ClaimTypeOfLife">
<summary>
Code of the type of claim for Life. (NCLA_LI_TYP)..
</summary>
<remarks>Data-source is 'LIFE_CLAIM.NCLA_LI_TYP'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'LIFE_CLAIM.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.EndingPaymentDate">
<summary>
Final payment date of the annuity. (DEND_DATE)..
</summary>
<remarks>Data-source is 'LIFE_CLAIM.DEND_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.TypeOfIndemnity">
<summary>
Type of indemnity for life claims. (NIN_LIF_TYP)..
</summary>
<remarks>Data-source is 'LIFE_CLAIM.NIN_LIF_TYP'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.TotalAmountToPay">
<summary>
Maximum total amount of indemnity taking into account the insured amount, the surrender value and the loans of the policy-certificate. (NINDEMNITY)..
</summary>
<remarks>Data-source is 'LIFE_CLAIM.NINDEMNITY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.InitialPaymentDate">
<summary>
Date when the beneficiary begins to receive the annuity (DINIT_DATE)..
</summary>
<remarks>Data-source is 'LIFE_CLAIM.DINIT_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.InterestRate">
<summary>
Percentage to be paid. (NINTEREST)..
</summary>
<remarks>Data-source is 'LIFE_CLAIM.NINTEREST'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.MonthlyPayment">
<summary>
Monthly amount to be paid to the beneficiary. (NMONTH_AMOU)..
</summary>
<remarks>Data-source is 'LIFE_CLAIM.NMONTH_AMOU'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.SurrenderValue">
<summary>
Surrender amount at the moment of the claim. (NSALVAGE)..
</summary>
<remarks>Data-source is 'LIFE_CLAIM.NSALVAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.ClaimEntryNumber">
<summary>
Last number used for entries of this claim-case. (NTRANSAC)..
</summary>
<remarks>Data-source is 'LIFE_CLAIM.NTRANSAC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'LIFE_CLAIM.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.InitialReserveEntryID">
<summary>
Number of the initial entry generated to create the reserve of the claim and case. (NINI_TRAN)..
</summary>
<remarks>Data-source is 'LIFE_CLAIM.NINI_TRAN'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.PaymentFrequency">
<summary>
Code of the payment frequency for the annuity. (NPAYFREQ)..
</summary>
<remarks>Data-source is 'LIFE_CLAIM.NPAYFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.PaymentFrequencyEnum">
<summary>
Code of the payment frequency for the annuity.
</summary>
<remarks>This property use a enumeration based on property 'PaymentFrequency'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.PaymentFrequencyEnumText">
<summary>
Code of the payment frequency for the annuity.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.PensionType">
<summary>
Pension Type (NTYPEPENSION)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE_CLAIM.NTYPEPENSION'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.Quotes">
<summary>
Number of installment payment (NPENQUOTA)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE_CLAIM.NPENQUOTA'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LifeClaim.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LifeClaim.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LifeClaim.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LifeClaim.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LifeClaim.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LifeClaim.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LifeClaim.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LifeClaim.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LifeClaim.Compare(InMotionGIT.Claim.Entity.Contracts.LifeClaim,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="LifeClaimItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LifeClaim.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LifeClaim.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LifeClaim.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LifeClaim.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.ClaimTypeOfLifeDescription">
 <summary>
 Code of the type of claim for Life.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE210'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.TypeOfIndemnityDescription">
 <summary>
 Type of indemnity for life claims.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE211'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.PaymentFrequencyDescription">
 <summary>
 Code of the payment frequency for the annuity.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE36'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaim.PensionTypeDescription">
 <summary>
 Pension Type
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6736' on the table 'TABLE6736'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.LifeClaimCollection">
 <summary>
 Collection for LifeClaim class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LifeClaimCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LifeClaimCollection.AddLifeClaim">
 <summary>
 Add an instance of class 'LifeClaim' in the LifeClaimCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LifeClaimCollection.Compare(InMotionGIT.Claim.Entity.Contracts.LifeClaimCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LifeClaimCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LifeClaimCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LifeClaimCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.LogOfClaim">
 <summary>
 Log of claim
 </summary>
<remarks>Data-source is 'CLAIM_LOG'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.CreateNewLogOfClaim">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LogOfClaim._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LogOfClaim._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LogOfClaim._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LogOfClaim._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LogOfClaim._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LogOfClaim._Id">
<summary>
Id
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LogOfClaim._ClaimID">
<summary>
Claim number
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LogOfClaim._LongDescription">
<summary>
Long description
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LogOfClaim._ShortDescription">
<summary>
Short Description
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LogOfClaim._AmountOfEvent">
<summary>
Amount of event
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LogOfClaim._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.LogOfClaim._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.Id">
<summary>
Id (NID)..
</summary>
<remarks>Data-source is 'CLAIM_LOG.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.ClaimID">
<summary>
Claim number (NCLAIM)..
</summary>
<remarks>Data-source is 'CLAIM_LOG.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.LongDescription">
<summary>
Long description (SDESCRIPT)..
</summary>
<remarks>Data-source is 'CLAIM_LOG.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.ShortDescription">
<summary>
Short Description (SSHORT_DES)..
</summary>
<remarks>Data-source is 'CLAIM_LOG.SSHORT_DES'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.AmountOfEvent">
<summary>
Amount of event (NAMOUNT)..
</summary>
<remarks>Data-source is 'CLAIM_LOG.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLAIM_LOG.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLAIM_LOG.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.Compare(InMotionGIT.Claim.Entity.Contracts.LogOfClaim,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="LogOfClaimItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LogOfClaim.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.LogOfClaimCollection">
 <summary>
 Collection for LogOfClaim class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LogOfClaimCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LogOfClaimCollection.AddLogOfClaim">
 <summary>
 Add an instance of class 'LogOfClaim' in the LogOfClaimCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LogOfClaimCollection.Compare(InMotionGIT.Claim.Entity.Contracts.LogOfClaimCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.LogOfClaimCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LogOfClaimCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.LogOfClaimCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim">
 <summary>
 Details of movements in the coverage of a claim.
 </summary>
<remarks>Data-source is 'CL_M_COVER'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.CreateNewMovementCoverageClaim">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._ClaimCode">
<summary>
Code of The Claim Case or Claimant.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._ClaimType">
<summary>
Claim Type.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._ClientID">
<summary>
Code of the insured client related to the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._ClaimEntryNumber">
<summary>
Entry number related to a claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._Amount">
<summary>
Entry amount (in the coverage/claim currency).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._AutomaticAdjustmentIndicator">
<summary>
Automatic adjustment indicator.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._Deductible">
<summary>
Deductible amount (as used in MME).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._ExchangeRate">
<summary>
Exchange rate of the entry to the local currency.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._Loss">
<summary>
Total amount consumed under the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._Division">
<summary>
Code of the &#39;division&#39; within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._EntryAmountInLocalCurrency">
<summary>
Entry amount (local currency).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._ConsumedAmount">
<summary>
Total amount consumed by the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._VATRate">
<summary>
Value added tax rate.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._VATAmount">
<summary>
Value Added Tax amount.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._RecoveryExpenses">
<summary>
Total amount of recovery expenses (in local currency).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._CessionsGeneratedIndicator">
<summary>
Indicator cessions generated catastrophic insurance
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._NCOA_AMOUNT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._SPOSTEDSEQUENCE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._NSETTLECODE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim._ConceptsInPaymentClaim">
<summary>
Concepts involved in the payment of a claim.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'CL_M_COVER.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.ClaimCode">
<summary>
Code of The Claim Case or Claimant. (NCASE_NUM)..
</summary>
<remarks>Data-source is 'CL_M_COVER.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.ClaimType">
<summary>
Claim Type. (NDEMAN_TYPE)..
</summary>
<remarks>Data-source is 'CL_M_COVER.NDEMAN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'CL_M_COVER.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'CL_M_COVER.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'CL_M_COVER.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.ClientID">
<summary>
Code of the insured client related to the coverage. (SCLIENT)..
</summary>
<remarks>Data-source is 'CL_M_COVER.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.ClaimEntryNumber">
<summary>
Entry number related to a claim. (NTRANSAC)..
</summary>
<remarks>Data-source is 'CL_M_COVER.NTRANSAC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.Amount">
<summary>
Entry amount (in the coverage/claim currency). (NAMOUNT)..
</summary>
<remarks>Data-source is 'CL_M_COVER.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.AutomaticAdjustmentIndicator">
<summary>
Automatic adjustment indicator. (SAUT_ADJUST)..
</summary>
<remarks>Data-source is 'CL_M_COVER.SAUT_ADJUST'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CL_M_COVER.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.Deductible">
<summary>
Deductible amount (as used in MME). (NDED_AMOUNT)..
</summary>
<remarks>Data-source is 'CL_M_COVER.NDED_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.ExchangeRate">
<summary>
Exchange rate of the entry to the local currency. (NEXCHANGE)..
</summary>
<remarks>Data-source is 'CL_M_COVER.NEXCHANGE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.Loss">
<summary>
Total amount consumed under the coverage. (NEXP_AMOUNT)..
</summary>
<remarks>Data-source is 'CL_M_COVER.NEXP_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP)..
</summary>
<remarks>Data-source is 'CL_M_COVER.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.EntryAmountInLocalCurrency">
<summary>
Entry amount (local currency). (NLOC_AMOUNT)..
</summary>
<remarks>Data-source is 'CL_M_COVER.NLOC_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.ConsumedAmount">
<summary>
Total amount consumed by the coverage. (NQUANTITY)..
</summary>
<remarks>Data-source is 'CL_M_COVER.NQUANTITY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CL_M_COVER.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.VATRate">
<summary>
Value added tax rate. (NVA_TAX)..
</summary>
<remarks>Data-source is 'CL_M_COVER.NVA_TAX'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.VATAmount">
<summary>
Value Added Tax amount. (NVAT_AMOUNT)..
</summary>
<remarks>Data-source is 'CL_M_COVER.NVAT_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.RecoveryExpenses">
<summary>
Total amount of recovery expenses (in local currency). (NLOC_COS_RE)..
</summary>
<remarks>Data-source is 'CL_M_COVER.NLOC_COS_RE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.CessionsGeneratedIndicator">
<summary>
Indicator cessions generated catastrophic insurance (SCESCATAS)..
</summary>
<remarks>Data-source is 'CL_M_COVER.SCESCATAS'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.NCOA_AMOUNT">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CL_M_COVER.NCOA_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.SPOSTEDSEQUENCE">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CL_M_COVER.SPOSTEDSEQUENCE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.NSETTLECODE">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CL_M_COVER.NSETTLECODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.NewConceptsInPaymentClaimInstance">
<summary>
Initializes the 'ConceptsInPaymentClaim' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.NewConceptInPaymentClaimItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ConceptsInPaymentClaim', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ConceptInPaymentClaim' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.ConceptsInPaymentClaim">
<summary>
Concepts involved in the payment of a claim. collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.Compare(InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="MovementCoverageClaimItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaim.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaimCollection">
 <summary>
 Collection for MovementCoverageClaim class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaimCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaimCollection.AddMovementCoverageClaim">
 <summary>
 Add an instance of class 'MovementCoverageClaim' in the MovementCoverageClaimCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaimCollection.Compare(InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaimCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaimCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaimCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.MovementCoverageClaimCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline">
 <summary>
 Notices of compliance with claims processing deadlines
 </summary>
<remarks>Data-source is 'TAB_CLAIMSLT'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.CreateNewNoticesClaimsProcessingDeadline">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline._IdSla">
<summary>
Id SLA
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline._Consecutive">
<summary>
Consecutive
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline._DaysShuntNotification">
<summary>
Days to activate shunt notification
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline._DaysNonShuntNotification">
<summary>
Days to activate the non-shunt notification
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline._IndAnalystWarning">
<summary>
Assigned analyst warning indicator
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline._IndSuperWarning">
<summary>
Warning indicator from the assigned analysts supervisor
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline._IndAdmWarning">
<summary>
Administrator Warning Indicator
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.IdSla">
<summary>
Id SLA (NIDSLA)..
</summary>
<remarks>Data-source is 'TAB_CLAIMSLT.NIDSLA'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.Consecutive">
<summary>
Consecutive (NLEVEL)..
</summary>
<remarks>Data-source is 'TAB_CLAIMSLT.NLEVEL'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.DaysShuntNotification">
<summary>
Days to activate shunt notification (NDAYSWITHDER)..
</summary>
<remarks>Data-source is 'TAB_CLAIMSLT.NDAYSWITHDER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.DaysNonShuntNotification">
<summary>
Days to activate the non-shunt notification (NDAYSWITHOUTDER)..
</summary>
<remarks>Data-source is 'TAB_CLAIMSLT.NDAYSWITHOUTDER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.IndAnalystWarning">
<summary>
Assigned analyst warning indicator (NINDALERTASING)..
</summary>
<remarks>Data-source is 'TAB_CLAIMSLT.NINDALERTASING'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.IndSuperWarning">
<summary>
Warning indicator from the assigned analysts supervisor (NINDSUPERV)..
</summary>
<remarks>Data-source is 'TAB_CLAIMSLT.NINDSUPERV'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.IndAdmWarning">
<summary>
Administrator Warning Indicator (NINDADMIN)..
</summary>
<remarks>Data-source is 'TAB_CLAIMSLT.NINDADMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_CLAIMSLT.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_CLAIMSLT.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.Compare(InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="NoticesClaimsProcessingDeadlineItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.IndAnalystWarningDescription">
 <summary>
 Assigned analyst warning indicator
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE23'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.IndSuperWarningDescription">
 <summary>
 Warning indicator from the assigned analysts supervisor
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE23'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadline.IndAdmWarningDescription">
 <summary>
 Administrator Warning Indicator
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE23'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadlineCollection">
 <summary>
 Collection for NoticesClaimsProcessingDeadline class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadlineCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadlineCollection.AddNoticesClaimsProcessingDeadline">
 <summary>
 Add an instance of class 'NoticesClaimsProcessingDeadline' in the NoticesClaimsProcessingDeadlineCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadlineCollection.Compare(InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadlineCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadlineCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadlineCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.NoticesClaimsProcessingDeadlineCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser">
 <summary>
 Parameters for indemnifying users.
 </summary>
<remarks>Data-source is 'INDEMNITY_USERS'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.CreateNewParamIndemnifyingUser">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser._ClaimRegistration">
<summary>
Code of the indemnifying users.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser._DocumenterIndicator">
<summary>
Documentary user indicator.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser._EvaluatorIndicator">
<summary>
Evaluator user indicator.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser._SpecialCaseIndicator">
<summary>
Special Case user indicator.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser._SupervisorIndicator">
<summary>
Supervisor user indicator.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser._MultipolicyIndicator">
<summary>
Multi policies user indicator.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser._DefaultIndicator">
<summary>
Default user indicator.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser._PayingIndicator">
<summary>
Paying user indicator.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser._RatingLower">
<summary>
Lowest rating range allowed for the user.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser._RatingTop">
<summary>
RecordStatus
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser._ComputerDate">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser._DoctorIndicator">
<summary>
Doctor user indicator
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser._DetectiveIndicator">
<summary>
Detective user indicator
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser._JuridicalIndicator">
<summary>
Juridical user indicator
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser._ReinsurerIndicator">
<summary>
Reinsurer user indicator
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser._ProdAllowedIndemnifyingUsers">
<summary>
Products allowed for indemnifying users.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.ClaimRegistration">
<summary>
Code of the indemnifying users. (NINDEM_USER)..
</summary>
<remarks>Data-source is 'INDEMNITY_USERS.NINDEM_USER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.DocumenterIndicator">
<summary>
Documentary user indicator. (SDOCUMENTER_IND)..
</summary>
<remarks>Data-source is 'INDEMNITY_USERS.SDOCUMENTER_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.EvaluatorIndicator">
<summary>
Evaluator user indicator. (SEVALUATOR_IND)..
</summary>
<remarks>Data-source is 'INDEMNITY_USERS.SEVALUATOR_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.SpecialCaseIndicator">
<summary>
Special Case user indicator. (SSPECIALCASE_IND)..
</summary>
<remarks>Data-source is 'INDEMNITY_USERS.SSPECIALCASE_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.SupervisorIndicator">
<summary>
Supervisor user indicator. (SSUPERVISOR_IND)..
</summary>
<remarks>Data-source is 'INDEMNITY_USERS.SSUPERVISOR_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.MultipolicyIndicator">
<summary>
Multi policies user indicator. (SMULTIPOLICY_IND)..
</summary>
<remarks>Data-source is 'INDEMNITY_USERS.SMULTIPOLICY_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.DefaultIndicator">
<summary>
Default user indicator. (SDEFAULT_IND)..
</summary>
<remarks>Data-source is 'INDEMNITY_USERS.SDEFAULT_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.PayingIndicator">
<summary>
Paying user indicator. (SPAYING_IND)..
</summary>
<remarks>Data-source is 'INDEMNITY_USERS.SPAYING_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.RatingLower">
<summary>
Lowest rating range allowed for the user. (NRATING_LOWER)..
</summary>
<remarks>Data-source is 'INDEMNITY_USERS.NRATING_LOWER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.RatingTop">
<summary>
RecordStatus (SSTATREGT)..
</summary>
<remarks>Data-source is 'INDEMNITY_USERS.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.RatingTopEnum">
<summary>
RecordStatus
</summary>
<remarks>This property use a enumeration based on property 'RatingTop'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.RatingTopEnumText">
<summary>
RecordStatus
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.ComputerDate">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'INDEMNITY_USERS.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'INDEMNITY_USERS.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.DoctorIndicator">
<summary>
Doctor user indicator (SDOCTOR_IND)..
</summary>
<remarks>Data-source is 'INDEMNITY_USERS.SDOCTOR_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.DetectiveIndicator">
<summary>
Detective user indicator (SDETECTIVE_IND)..
</summary>
<remarks>Data-source is 'INDEMNITY_USERS.SDETECTIVE_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.JuridicalIndicator">
<summary>
Juridical user indicator (SJURIDICAL_IND)..
</summary>
<remarks>Data-source is 'INDEMNITY_USERS.SJURIDICAL_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.ReinsurerIndicator">
<summary>
Reinsurer user indicator (SREINSURER_IND)..
</summary>
<remarks>Data-source is 'INDEMNITY_USERS.SREINSURER_IND'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.NewProdAllowedIndemnifyingUsersInstance">
<summary>
Initializes the 'ProdAllowedIndemnifyingUsers' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.NewProdAllowedIndemnifyingUserItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ProdAllowedIndemnifyingUsers', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ProdAllowedIndemnifyingUser' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.ProdAllowedIndemnifyingUsers">
<summary>
Products allowed for indemnifying users. collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.Compare(InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ParamIndemnifyingUserItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUser.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUserCollection">
 <summary>
 Collection for ParamIndemnifyingUser class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUserCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUserCollection.AddParamIndemnifyingUser">
 <summary>
 Add an instance of class 'ParamIndemnifyingUser' in the ParamIndemnifyingUserCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUserCollection.Compare(InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUserCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUserCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUserCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ParamIndemnifyingUserCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct">
 <summary>
 Allowed concepts of payment in the coverage of a product.
 </summary>
<remarks>Data-source is 'CL_COV_BIL'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.CreateNewPaymentAllowedCoverageProduct">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct._ClientRole">
<summary>
Role of the client in the policy.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct._PaymentConcept">
<summary>
Payment concept.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct._IndemnityPercentage">
<summary>
Percentage of indemnity or reimbursement.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'CL_COV_BIL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'CL_COV_BIL.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'CL_COV_BIL.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'CL_COV_BIL.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.ClientRole">
<summary>
Role of the client in the policy. (NROLE)..
</summary>
<remarks>Data-source is 'CL_COV_BIL.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.ClientRoleEnum">
<summary>
Role of the client in the policy.
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.ClientRoleEnumText">
<summary>
Role of the client in the policy.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.PaymentConcept">
<summary>
Payment concept. (NPAY_CONCEP)..
</summary>
<remarks>Data-source is 'CL_COV_BIL.NPAY_CONCEP'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CL_COV_BIL.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CL_COV_BIL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'CL_COV_BIL.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CL_COV_BIL.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'CL_COV_BIL.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.IndemnityPercentage">
<summary>
Percentage of indemnity or reimbursement. (NPERCLAIM)..
</summary>
<remarks>Data-source is 'CL_COV_BIL.NPERCLAIM'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.Compare(InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="PaymentAllowedCoverageProductItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProduct.ClientRoleDescription">
 <summary>
 Role of the client in the policy.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE12'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProductCollection">
 <summary>
 Collection for PaymentAllowedCoverageProduct class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProductCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProductCollection.AddPaymentAllowedCoverageProduct">
 <summary>
 Add an instance of class 'PaymentAllowedCoverageProduct' in the PaymentAllowedCoverageProductCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProductCollection.Compare(InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProductCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProductCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProductCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PaymentAllowedCoverageProductCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction">
 <summary>
 Portfolio casualty actions
 </summary>
<remarks>Data-source is 'CLAIMACTION'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.CreateNewPortfolioCasualtyAction">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction._NIDACTION">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction._ActionExecutingUser">
<summary>
User executing the action
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction._ActionExecutedDate">
<summary>
Date on which the action is executed
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction._ActionExecuteType">
<summary>
Type of action to execute
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction._StateAction">
<summary>
State Action
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction._CodeLineBusiness">
<summary>
Code of the line of business
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction._ProductCode">
<summary>
Code of the product
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction._Email">
<summary>
Email address
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction._EmailSubject">
<summary>
Email Subject
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction._EmailText">
<summary>
Email text
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction._Status">
<summary>
Register status
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.NIDACTION">
<summary>
.
</summary>
<remarks>Data-source is 'CLAIMACTION.NIDACTION'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'CLAIMACTION.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.ActionExecutingUser">
<summary>
User executing the action (NUSEREXE)..
</summary>
<remarks>Data-source is 'CLAIMACTION.NUSEREXE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.ActionExecutedDate">
<summary>
Date on which the action is executed (DDATEEXE)..
</summary>
<remarks>Data-source is 'CLAIMACTION.DDATEEXE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.ActionExecuteType">
<summary>
Type of action to execute (NACTION)..
</summary>
<remarks>Data-source is 'CLAIMACTION.NACTION'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.StateAction">
<summary>
State Action (SSTATEACTION)..
</summary>
<remarks>Data-source is 'CLAIMACTION.SSTATEACTION'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.CodeLineBusiness">
<summary>
Code of the line of business (NBRANCH)..
</summary>
<remarks>Data-source is 'CLAIMACTION.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.ProductCode">
<summary>
Code of the product (NPRODUCT)..
</summary>
<remarks>Data-source is 'CLAIMACTION.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.Email">
<summary>
Email address (SEMAIL)..
</summary>
<remarks>Data-source is 'CLAIMACTION.SEMAIL'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.EmailSubject">
<summary>
Email Subject (SSUBJECT)..
</summary>
<remarks>Data-source is 'CLAIMACTION.SSUBJECT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.EmailText">
<summary>
Email text (STXTMAIL)..
</summary>
<remarks>Data-source is 'CLAIMACTION.STXTMAIL'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.Status">
<summary>
Register status (SSTATREGT)..
</summary>
<remarks>Data-source is 'CLAIMACTION.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.StatusEnum">
<summary>
Register status
</summary>
<remarks>This property use a enumeration based on property 'Status'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.StatusEnumText">
<summary>
Register status
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLAIMACTION.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLAIMACTION.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.Compare(InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="PortfolioCasualtyActionItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyAction.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyActionCollection">
 <summary>
 Collection for PortfolioCasualtyAction class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyActionCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyActionCollection.AddPortfolioCasualtyAction">
 <summary>
 Add an instance of class 'PortfolioCasualtyAction' in the PortfolioCasualtyActionCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyActionCollection.Compare(InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyActionCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyActionCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyActionCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PortfolioCasualtyActionCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.PreClaim">
 <summary>
 Register of Pre-Claims
 </summary>
<remarks>Data-source is 'PRECLAIM'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaim.CreateNewPreClaim">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaim.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._IdPreclaim">
<summary>
Internal Id of preclaim
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._TypeRecord">
<summary>
Type of Record
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._CertificateNumber">
<summary>
Number identifying the certificate
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._ClientCode">
<summary>
Client Code
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._CodeLineBusiness">
<summary>
Code of the line of business
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._ProductCode">
<summary>
Code of the product
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._CreationDate">
<summary>
Creation date
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._UserCreated">
<summary>
User Created
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._ModificationDate">
<summary>
Modification Date
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._DateOccurrence">
<summary>
Date of occurrence
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._DateComplaint">
<summary>
Date of complaint
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._NumberPreClaim">
<summary>
Number of the presineistro
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._Address">
<summary>
Occurrence Address
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._Cause">
<summary>
Cause of the incident
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._Priority">
<summary>
Priority of pre-accident
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._Estimation">
<summary>
Damage estimation
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._CurrencyCode">
<summary>
Code of the currency.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._Story">
<summary>
Story of the current event
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._Channel">
<summary>
Communication channel with claimant.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._IndCatastrophic">
<summary>
Catastrophic event indicator
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._IndFraud">
<summary>
Indicator of possible fraud
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._IndRejectable">
<summary>
Rejectable indicator
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._StateId">
<summary>
State identifier
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._PreClaimsAttachmentsCollection">
<summary>
PreClaims Attachments
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._CasesPreClaimsCollection">
<summary>
Register of cases of Pre-Claims
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaim._HistoryPreClaims">
<summary>
History of Pre-Claims
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.IdPreclaim">
<summary>
Internal Id of preclaim (NIDPRECLAIM)..
</summary>
<remarks>Data-source is 'PRECLAIM.NIDPRECLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.TypeRecord">
<summary>
Type of Record (SCERTYPE)..
</summary>
<remarks>Data-source is 'PRECLAIM.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.TypeRecordEnum">
<summary>
Type of Record
</summary>
<remarks>This property use a enumeration based on property 'TypeRecord'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.TypeRecordEnumText">
<summary>
Type of Record
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'PRECLAIM.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.CertificateNumber">
<summary>
Number identifying the certificate (NCERTIF)..
</summary>
<remarks>Data-source is 'PRECLAIM.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.ClientCode">
<summary>
Client Code (SCLIENT)..
</summary>
<remarks>Data-source is 'PRECLAIM.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.CodeLineBusiness">
<summary>
Code of the line of business (NBRANCH)..
</summary>
<remarks>Data-source is 'PRECLAIM.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.ProductCode">
<summary>
Code of the product (NPRODUCT)..
</summary>
<remarks>Data-source is 'PRECLAIM.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.CreationDate">
<summary>
Creation date (DDATCREATED)..
</summary>
<remarks>Data-source is 'PRECLAIM.DDATCREATED'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.UserCreated">
<summary>
User Created (NCREATEDBY)..
</summary>
<remarks>Data-source is 'PRECLAIM.NCREATEDBY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.ModificationDate">
<summary>
Modification Date (DDATMODIFY)..
</summary>
<remarks>Data-source is 'PRECLAIM.DDATMODIFY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.DateOccurrence">
<summary>
Date of occurrence (DOCCURDATE)..
</summary>
<remarks>Data-source is 'PRECLAIM.DOCCURDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.DateComplaint">
<summary>
Date of complaint (DREPDATE)..
</summary>
<remarks>Data-source is 'PRECLAIM.DREPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.NumberPreClaim">
<summary>
Number of the presineistro (NPRECLAIM)..
</summary>
<remarks>Data-source is 'PRECLAIM.NPRECLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.Address">
<summary>
Occurrence Address (SADDRESS)..
</summary>
<remarks>Data-source is 'PRECLAIM.SADDRESS'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.Cause">
<summary>
Cause of the incident (NCLAIMCAUSE)..
</summary>
<remarks>Data-source is 'PRECLAIM.NCLAIMCAUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.Priority">
<summary>
Priority of pre-accident (NPRIORITY)..
</summary>
<remarks>Data-source is 'PRECLAIM.NPRIORITY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.Estimation">
<summary>
Damage estimation (NDAMAGES)..
</summary>
<remarks>Data-source is 'PRECLAIM.NDAMAGES'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.CurrencyCode">
<summary>
Code of the currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'PRECLAIM.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.Story">
<summary>
Story of the current event (SNOTE)..
</summary>
<remarks>Data-source is 'PRECLAIM.SNOTE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.Channel">
<summary>
Communication channel with claimant. (NCHANNEL)..
</summary>
<remarks>Data-source is 'PRECLAIM.NCHANNEL'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.IndCatastrophic">
<summary>
Catastrophic event indicator (SINDCATASTROPHIC)..
</summary>
<remarks>Data-source is 'PRECLAIM.SINDCATASTROPHIC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.IndFraud">
<summary>
Indicator of possible fraud (SINDPOSSIBLEFRAUD)..
</summary>
<remarks>Data-source is 'PRECLAIM.SINDPOSSIBLEFRAUD'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.IndRejectable">
<summary>
Rejectable indicator (SINDREJECTABLE)..
</summary>
<remarks>Data-source is 'PRECLAIM.SINDREJECTABLE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'PRECLAIM.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.StateId">
<summary>
State identifier (NIDSTATPRECLAIM)..
</summary>
<remarks>Data-source is 'PRECLAIM.NIDSTATPRECLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'PRECLAIM.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'PRECLAIM.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaim.NewPreClaimsAttachmentsCollectionInstance">
<summary>
Initializes the 'PreClaimsAttachmentsCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaim.NewPreClaimsAttachmentItem(System.Boolean)">
<summary>
Add a new item to the collection of 'PreClaimsAttachmentsCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'PreClaimsAttachment' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.PreClaimsAttachmentsCollection">
<summary>
PreClaims Attachments collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaim.NewCasesPreClaimsCollectionInstance">
<summary>
Initializes the 'CasesPreClaimsCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaim.NewCasesPreClaimItem(System.Boolean)">
<summary>
Add a new item to the collection of 'CasesPreClaimsCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'CasesPreClaim' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.CasesPreClaimsCollection">
<summary>
Register of cases of Pre-Claims collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaim.NewHistoryPreClaimsInstance">
<summary>
Initializes the 'HistoryPreClaims' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaim.NewHistoryPreClaimItem(System.Boolean)">
<summary>
Add a new item to the collection of 'HistoryPreClaims', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'HistoryPreClaim' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.HistoryPreClaims">
<summary>
History of Pre-Claims collection.
</summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaim.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaim.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaim.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaim.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaim.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaim.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaim.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaim.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaim.Compare(InMotionGIT.Claim.Entity.Contracts.PreClaim,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="PreClaimItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaim.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaim.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaim.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaim.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaim.CurrencyCodeDescription">
 <summary>
 Code of the currency.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE11'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.PreClaimCollection">
 <summary>
 Collection for PreClaim class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimCollection.AddPreClaim">
 <summary>
 Add an instance of class 'PreClaim' in the PreClaimCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimCollection.Compare(InMotionGIT.Claim.Entity.Contracts.PreClaimCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment">
 <summary>
 PreClaims Attachments
 </summary>
<remarks>Data-source is 'PRECLAIMATT'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.CreateNewPreClaimsAttachment">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment._PreClaimIdentifier">
<summary>
PreSiniestro Identifier
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment._Consecutive">
<summary>
Consecutive
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment._DescriptionImage">
<summary>
Description image
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment._DocumentType">
<summary>
Document type
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment._AttachedDocument">
<summary>
Attached document
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment._AttachedDocumentPath">
<summary>
This property defines the path of the file that I want to load the byte vector of 'Attached document'
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.PreClaimIdentifier">
<summary>
PreSiniestro Identifier (NIDPRECLAIM)..
</summary>
<remarks>Data-source is 'PRECLAIMATT.NIDPRECLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.Consecutive">
<summary>
Consecutive (NCONSEC)..
</summary>
<remarks>Data-source is 'PRECLAIMATT.NCONSEC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.DescriptionImage">
<summary>
Description image (SDESCRIPT)..
</summary>
<remarks>Data-source is 'PRECLAIMATT.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.DocumentType">
<summary>
Document type (NTYPDOC)..
</summary>
<remarks>Data-source is 'PRECLAIMATT.NTYPDOC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.AttachedDocument">
<summary>
Attached document (BATTACHMENT)..
</summary>
<remarks>Data-source is 'PRECLAIMATT.BATTACHMENT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.AttachedDocumentPath">
<summary>
This property defines the path of the file that I want to load the byte vector of 'BATTACHMENT' (BATTACHMENT).
</summary>
<remarks>Data-source is 'PRECLAIMATT.BATTACHMENT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'PRECLAIMATT.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'PRECLAIMATT.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.Compare(InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="PreClaimsAttachmentItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachment.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachmentCollection">
 <summary>
 Collection for PreClaimsAttachment class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachmentCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachmentCollection.AddPreClaimsAttachment">
 <summary>
 Add an instance of class 'PreClaimsAttachment' in the PreClaimsAttachmentCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachmentCollection.Compare(InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachmentCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachmentCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachmentCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsAttachmentCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization">
 <summary>
 Pre Claims Priorization
 </summary>
<remarks>Data-source is 'PRIORIZATION'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.CreateNewPreClaimsPriorization">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization._IdPriority">
<summary>
Priority Identifier
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization._CodeLineBusiness">
<summary>
Code of the line of business
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization._ProductCode">
<summary>
Code of the product
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization._CauseOfClaim">
<summary>
Code of cause of the claim
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization._NCOVER">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization._LongDescription">
<summary>
Long description
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization._Priority">
<summary>
Priority
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization._Status">
<summary>
Register status
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.IdPriority">
<summary>
Priority Identifier (NIDPRIORITY)..
</summary>
<remarks>Data-source is 'PRIORIZATION.NIDPRIORITY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.CodeLineBusiness">
<summary>
Code of the line of business (NBRANCH)..
</summary>
<remarks>Data-source is 'PRIORIZATION.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.ProductCode">
<summary>
Code of the product (NPRODUCT)..
</summary>
<remarks>Data-source is 'PRIORIZATION.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.CauseOfClaim">
<summary>
Code of cause of the claim (NCAUSECOD)..
</summary>
<remarks>Data-source is 'PRIORIZATION.NCAUSECOD'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.NCOVER">
<summary>
.
</summary>
<remarks>Data-source is 'PRIORIZATION.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.LongDescription">
<summary>
Long description (SDESCRIPT)..
</summary>
<remarks>Data-source is 'PRIORIZATION.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.Priority">
<summary>
Priority (NPRIORITY)..
</summary>
<remarks>Data-source is 'PRIORIZATION.NPRIORITY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.Status">
<summary>
Register status (SSTATREGT)..
</summary>
<remarks>Data-source is 'PRIORIZATION.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.StatusEnum">
<summary>
Register status
</summary>
<remarks>This property use a enumeration based on property 'Status'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.StatusEnumText">
<summary>
Register status
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'PRIORIZATION.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'PRIORIZATION.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'PRIORIZATION.NMODULEC'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.Compare(InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="PreClaimsPriorizationItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorization.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorizationCollection">
 <summary>
 Collection for PreClaimsPriorization class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorizationCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorizationCollection.AddPreClaimsPriorization">
 <summary>
 Add an instance of class 'PreClaimsPriorization' in the PreClaimsPriorizationCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorizationCollection.Compare(InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorizationCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorizationCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorizationCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsPriorizationCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.PreClaimsState">
 <summary>
 Pre Claims state
 </summary>
<remarks>Data-source is 'PRECLAIMSTAT'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.CreateNewPreClaimsState">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsState._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsState._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsState._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsState._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsState._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsState._StateId">
<summary>
State identifier
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsState._Descript">
<summary>
Description of status
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsState._IconName">
<summary>
IconName
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsState._MaxDayState">
<summary>
Maximum number of days in the state
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsState._Status">
<summary>
Register status
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsState._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.PreClaimsState._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.StateId">
<summary>
State identifier (NIDSTATPRECLAIM)..
</summary>
<remarks>Data-source is 'PRECLAIMSTAT.NIDSTATPRECLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.Descript">
<summary>
Description of status (SDESCRIPT)..
</summary>
<remarks>Data-source is 'PRECLAIMSTAT.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.IconName">
<summary>
IconName (SICONNAME)..
</summary>
<remarks>Data-source is 'PRECLAIMSTAT.SICONNAME'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.MaxDayState">
<summary>
Maximum number of days in the state (NDAYMAX)..
</summary>
<remarks>Data-source is 'PRECLAIMSTAT.NDAYMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.Status">
<summary>
Register status (SSTATREGT)..
</summary>
<remarks>Data-source is 'PRECLAIMSTAT.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.StatusEnum">
<summary>
Register status
</summary>
<remarks>This property use a enumeration based on property 'Status'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.StatusEnumText">
<summary>
Register status
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'PRECLAIMSTAT.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'PRECLAIMSTAT.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.Compare(InMotionGIT.Claim.Entity.Contracts.PreClaimsState,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="PreClaimsStateItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsState.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.PreClaimsStateCollection">
 <summary>
 Collection for PreClaimsState class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsStateCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsStateCollection.AddPreClaimsState">
 <summary>
 Add an instance of class 'PreClaimsState' in the PreClaimsStateCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsStateCollection.Compare(InMotionGIT.Claim.Entity.Contracts.PreClaimsStateCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.PreClaimsStateCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsStateCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.PreClaimsStateCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser">
 <summary>
 Products allowed for indemnifying users.
 </summary>
<remarks>Data-source is 'PRODALLOW_USERS'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser.CreateNewProdAllowedIndemnifyingUser">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser._CodeIndemnifyingUsers">
<summary>
Code of the indemnifying users.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser._PoolAssignedType">
<summary>
Type of the pool assigned.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser._BranchCode">
<summary>
Code of the branch.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser._CodeProduct">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser._ComputerDate">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser.CodeIndemnifyingUsers">
<summary>
Code of the indemnifying users. (NINDEM_USER)..
</summary>
<remarks>Data-source is 'PRODALLOW_USERS.NINDEM_USER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser.PoolAssignedType">
<summary>
Type of the pool assigned. (NPOOLASSTYP)..
</summary>
<remarks>Data-source is 'PRODALLOW_USERS.NPOOLASSTYP'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser.BranchCode">
<summary>
Code of the branch. (NBRANCH)..
</summary>
<remarks>Data-source is 'PRODALLOW_USERS.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser.CodeProduct">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'PRODALLOW_USERS.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser.ComputerDate">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'PRODALLOW_USERS.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'PRODALLOW_USERS.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser.Compare(InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ProdAllowedIndemnifyingUserItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUser.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUserCollection">
 <summary>
 Collection for ProdAllowedIndemnifyingUser class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUserCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUserCollection.AddProdAllowedIndemnifyingUser">
 <summary>
 Add an instance of class 'ProdAllowedIndemnifyingUser' in the ProdAllowedIndemnifyingUserCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUserCollection.Compare(InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUserCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUserCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUserCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ProdAllowedIndemnifyingUserCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim">
 <summary>
 Distribution of reinsurance in a claim.
 </summary>
<remarks>Data-source is 'CL_REINSURAN'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.CreateNewReinsuranceDistributionOfClaim">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._ClaimCode">
<summary>
Code of The Claim Case or Claimant.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._ClaimType">
<summary>
Claim Type.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._ReinsuranceLineOfBusiness">
<summary>
Code of the line of business for reinsurance purposes.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._TypeOfTreaty">
<summary>
Type of reinsurance treaty.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._CompanyCode">
<summary>
Code of the company.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._AcceptanceDate">
<summary>
Date of acceptance of the facultative reinsurance.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._CededInsuredAmount">
<summary>
Insured amount ceded in the treaty.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._CommissionPercentage">
<summary>
Percentage of commission for facultative reinsurance.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._Cumulus">
<summary>
Code of cumulus.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._InterestEarnedByPremiumReserves">
<summary>
Interest to be paid over premiums withheld for facultative reinsurance.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._ReinsuranceTreaty">
<summary>
Number of the reinsurance treaty.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._PremiumReservePercentageInFacultative">
<summary>
Percentage of premium reserves in facultative reinsurance.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._Share">
<summary>
Percentage of share on the total risk.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._ExchangeRate">
<summary>
Exchange rate for reinsurance purposes.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._AcceptanceCode">
<summary>
Acceptance code by the facultative reinsurer
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'CL_REINSURAN.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.ClaimCode">
<summary>
Code of The Claim Case or Claimant. (NCASE_NUM)..
</summary>
<remarks>Data-source is 'CL_REINSURAN.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.ClaimType">
<summary>
Claim Type. (NDEMAN_TYPE)..
</summary>
<remarks>Data-source is 'CL_REINSURAN.NDEMAN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'CL_REINSURAN.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'CL_REINSURAN.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'CL_REINSURAN.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.ReinsuranceLineOfBusiness">
<summary>
Code of the line of business for reinsurance purposes. (NBRANCH_REI)..
</summary>
<remarks>Data-source is 'CL_REINSURAN.NBRANCH_REI'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.TypeOfTreaty">
<summary>
Type of reinsurance treaty. (NTYPE_REIN)..
</summary>
<remarks>Data-source is 'CL_REINSURAN.NTYPE_REIN'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.CompanyCode">
<summary>
Code of the company. (NCOMPANY)..
</summary>
<remarks>Data-source is 'CL_REINSURAN.NCOMPANY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CL_REINSURAN.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.AcceptanceDate">
<summary>
Date of acceptance of the facultative reinsurance. (DACCEDATE)..
</summary>
<remarks>Data-source is 'CL_REINSURAN.DACCEDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.CededInsuredAmount">
<summary>
Insured amount ceded in the treaty. (NCAPITAL)..
</summary>
<remarks>Data-source is 'CL_REINSURAN.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.CommissionPercentage">
<summary>
Percentage of commission for facultative reinsurance. (NCOMMISSI)..
</summary>
<remarks>Data-source is 'CL_REINSURAN.NCOMMISSI'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CL_REINSURAN.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'CL_REINSURAN.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.Cumulus">
<summary>
Code of cumulus. (SHEAP_CODE)..
</summary>
<remarks>Data-source is 'CL_REINSURAN.SHEAP_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.InterestEarnedByPremiumReserves">
<summary>
Interest to be paid over premiums withheld for facultative reinsurance. (NINTER_RATE)..
</summary>
<remarks>Data-source is 'CL_REINSURAN.NINTER_RATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'CL_REINSURAN.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.ReinsuranceTreaty">
<summary>
Number of the reinsurance treaty. (NNUMBER)..
</summary>
<remarks>Data-source is 'CL_REINSURAN.NNUMBER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.PremiumReservePercentageInFacultative">
<summary>
Percentage of premium reserves in facultative reinsurance. (NRESER_RATE)..
</summary>
<remarks>Data-source is 'CL_REINSURAN.NRESER_RATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.Share">
<summary>
Percentage of share on the total risk. (NSHARE)..
</summary>
<remarks>Data-source is 'CL_REINSURAN.NSHARE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CL_REINSURAN.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.ExchangeRate">
<summary>
Exchange rate for reinsurance purposes. (NCHANGE)..
</summary>
<remarks>Data-source is 'CL_REINSURAN.NCHANGE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.AcceptanceCode">
<summary>
Acceptance code by the facultative reinsurer (NACEP_CODE)..
</summary>
<remarks>Data-source is 'CL_REINSURAN.NACEP_CODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.Compare(InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ReinsuranceDistributionOfClaimItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.ReinsuranceLineOfBusinessDescription">
 <summary>
 Code of the line of business for reinsurance purposes.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5000'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaim.TypeOfTreatyDescription">
 <summary>
 Type of reinsurance treaty.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE173'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaimCollection">
 <summary>
 Collection for ReinsuranceDistributionOfClaim class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaimCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaimCollection.AddReinsuranceDistributionOfClaim">
 <summary>
 Add an instance of class 'ReinsuranceDistributionOfClaim' in the ReinsuranceDistributionOfClaimCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaimCollection.Compare(InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaimCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaimCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaimCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReinsuranceDistributionOfClaimCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie">
 <summary>
 Response to the SIU questionnaire
 </summary>
<remarks>Data-source is 'CLAIMRESPSIU'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.CreateNewResponseSiuQuestionarie">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie._ProductCode">
<summary>
Code of the product for the reason of loss.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie._CauseOfClaim">
<summary>
Code of cause of the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie._ClaimID">
<summary>
Claim number
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie._ClaimCode">
<summary>
Code of The Claim Case or Claimant
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie._ClaimType">
<summary>
Claim type (loss on a person, vehicle, property, etc).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie._QuestionCode">
<summary>
Question Code
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie._ResponseCode">
<summary>
Response Code
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'CLAIMRESPSIU.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.ProductCode">
<summary>
Code of the product for the reason of loss. (NPRODUCT)..
</summary>
<remarks>Data-source is 'CLAIMRESPSIU.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.CauseOfClaim">
<summary>
Code of cause of the claim. (NCAUSECOD)..
</summary>
<remarks>Data-source is 'CLAIMRESPSIU.NCAUSECOD'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.ClaimID">
<summary>
Claim number (NCLAIM)..
</summary>
<remarks>Data-source is 'CLAIMRESPSIU.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.ClaimCode">
<summary>
Code of The Claim Case or Claimant (NCASE_NUM)..
</summary>
<remarks>Data-source is 'CLAIMRESPSIU.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.ClaimType">
<summary>
Claim type (loss on a person, vehicle, property, etc). (NDEMAN_TYPE)..
</summary>
<remarks>Data-source is 'CLAIMRESPSIU.NDEMAN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.QuestionCode">
<summary>
Question Code (NQUESTION)..
</summary>
<remarks>Data-source is 'CLAIMRESPSIU.NQUESTION'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CLAIMRESPSIU.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.ResponseCode">
<summary>
Response Code (NRESPONSE)..
</summary>
<remarks>Data-source is 'CLAIMRESPSIU.NRESPONSE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'CLAIMRESPSIU.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLAIMRESPSIU.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLAIMRESPSIU.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.Compare(InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ResponseSiuQuestionarieItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarie.ResponseCodeDescription">
 <summary>
 Response Code
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE23'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarieCollection">
 <summary>
 Collection for ResponseSiuQuestionarie class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarieCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarieCollection.AddResponseSiuQuestionarie">
 <summary>
 Add an instance of class 'ResponseSiuQuestionarie' in the ResponseSiuQuestionarieCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarieCollection.Compare(InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarieCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarieCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarieCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ResponseSiuQuestionarieCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation">
 <summary>
 Table of back conditions in claims operations.
 </summary>
<remarks>Data-source is 'TAB_CL_OPE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.CreateNewReverseConditionInClaimOperation">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation._OperationType">
<summary>
Type of Operation.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation._TypeOfOperation">
<summary>
Type of operation.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation._ReverseIndicator">
<summary>
Indicates that the entry may be reversed by the user.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation._EffectOnTheClaim">
<summary>
It indicates the effect on the total paid amount of the claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation._EffectOnTotalOfRecoveryExpenses">
<summary>
It indicates the effect on the total of recovery expenses.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation._EffectOnTotalOfRecovery">
<summary>
It indicates the effect on the total amount of recovery.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation._EffectOnTotalReserves">
<summary>
It indicates the effect on the total amount of claim reserves
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.OperationType">
<summary>
Type of Operation. (NOPER_TYPE)..
</summary>
<remarks>Data-source is 'TAB_CL_OPE.NOPER_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_CL_OPE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.TypeOfOperation">
<summary>
Type of operation. (NGEN_OPERA)..
</summary>
<remarks>Data-source is 'TAB_CL_OPE.NGEN_OPERA'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.ReverseIndicator">
<summary>
Indicates that the entry may be reversed by the user. (NIND_REV)..
</summary>
<remarks>Data-source is 'TAB_CL_OPE.NIND_REV'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.EffectOnTheClaim">
<summary>
It indicates the effect on the total paid amount of the claim. (NPAY_IND)..
</summary>
<remarks>Data-source is 'TAB_CL_OPE.NPAY_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.EffectOnTotalOfRecoveryExpenses">
<summary>
It indicates the effect on the total of recovery expenses. (NREC_ESP_IN)..
</summary>
<remarks>Data-source is 'TAB_CL_OPE.NREC_ESP_IN'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.EffectOnTotalOfRecovery">
<summary>
It indicates the effect on the total amount of recovery. (NRECOVER_IN)..
</summary>
<remarks>Data-source is 'TAB_CL_OPE.NRECOVER_IN'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.EffectOnTotalReserves">
<summary>
It indicates the effect on the total amount of claim reserves (NRESERVE_IN)..
</summary>
<remarks>Data-source is 'TAB_CL_OPE.NRESERVE_IN'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_CL_OPE.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.Compare(InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ReverseConditionInClaimOperationItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.OperationTypeDescription">
 <summary>
 Type of Operation.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE140'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.TypeOfOperationDescription">
 <summary>
 Type of operation.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE140'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.EffectOnTheClaimDescription">
 <summary>
 It indicates the effect on the total paid amount of the claim.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE294'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.EffectOnTotalOfRecoveryExpensesDescription">
 <summary>
 It indicates the effect on the total of recovery expenses.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE294'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.EffectOnTotalOfRecoveryDescription">
 <summary>
 It indicates the effect on the total amount of recovery.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE294'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperation.EffectOnTotalReservesDescription">
 <summary>
 It indicates the effect on the total amount of claim reserves
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE294'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperationCollection">
 <summary>
 Collection for ReverseConditionInClaimOperation class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperationCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperationCollection.AddReverseConditionInClaimOperation">
 <summary>
 Add an instance of class 'ReverseConditionInClaimOperation' in the ReverseConditionInClaimOperationCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperationCollection.Compare(InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperationCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperationCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperationCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ReverseConditionInClaimOperationCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim">
 <summary>
 Service provided by professionals in a health claim.
 </summary>
<remarks>Data-source is 'CL_PROFSERV'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.CreateNewServiceInClaim">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim._ClaimCode">
<summary>
Code of The Claim Case or Claimant.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim._ClaimType">
<summary>
Claim Type.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim._ClientID">
<summary>
Code identifying the client related to the professional.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim._Service">
<summary>
Code of the service rendered by a professional.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'CL_PROFSERV.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.ClaimCode">
<summary>
Code of The Claim Case or Claimant. (NCASE_NUM)..
</summary>
<remarks>Data-source is 'CL_PROFSERV.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.ClaimType">
<summary>
Claim Type. (NDEMAN_TYPE)..
</summary>
<remarks>Data-source is 'CL_PROFSERV.NDEMAN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CL_PROFSERV.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.ClientID">
<summary>
Code identifying the client related to the professional. (SCLIENT)..
</summary>
<remarks>Data-source is 'CL_PROFSERV.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.Service">
<summary>
Code of the service rendered by a professional. (NSERVICE)..
</summary>
<remarks>Data-source is 'CL_PROFSERV.NSERVICE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CL_PROFSERV.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'CL_PROFSERV.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CL_PROFSERV.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.Compare(InMotionGIT.Claim.Entity.Contracts.ServiceInClaim,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ServiceInClaimItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ServiceInClaim.ServiceDescription">
 <summary>
 Code of the service rendered by a professional.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE277'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ServiceInClaimCollection">
 <summary>
 Collection for ServiceInClaim class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ServiceInClaimCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ServiceInClaimCollection.AddServiceInClaim">
 <summary>
 Add an instance of class 'ServiceInClaim' in the ServiceInClaimCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ServiceInClaimCollection.Compare(InMotionGIT.Claim.Entity.Contracts.ServiceInClaimCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ServiceInClaimCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ServiceInClaimCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ServiceInClaimCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim">
 <summary>
 Specific risk claim
 </summary>
<remarks>Data-source is 'CL_SPECIFIC_RISK'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.CreateNewSpecificRiskClaim">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim._CoverageModuleCode">
<summary>
Coverage Module Code
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim._CoverageCode">
<summary>
Coverage Code
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim._CodeSpecificRisk">
<summary>
Code specific risk
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim._CurrencyCode">
<summary>
Code of the currency.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim._CodeRiskType">
<summary>
Type of Code risk type
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim._ReserveAmount">
<summary>
Reserve amount
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim._ExcludingRiskIndicatorPerClaim">
<summary>
Excluding risk indicator per claim
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'CL_SPECIFIC_RISK.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.CoverageModuleCode">
<summary>
Coverage Module Code (NMODULEC)..
</summary>
<remarks>Data-source is 'CL_SPECIFIC_RISK.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.CoverageCode">
<summary>
Coverage Code (NCOVER)..
</summary>
<remarks>Data-source is 'CL_SPECIFIC_RISK.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.CodeSpecificRisk">
<summary>
Code specific risk (NITEMRISK)..
</summary>
<remarks>Data-source is 'CL_SPECIFIC_RISK.NITEMRISK'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.CurrencyCode">
<summary>
Code of the currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'CL_SPECIFIC_RISK.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CL_SPECIFIC_RISK.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.CodeRiskType">
<summary>
Type of Code risk type (NRISKTYPE)..
</summary>
<remarks>Data-source is 'CL_SPECIFIC_RISK.NRISKTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.ReserveAmount">
<summary>
Reserve amount (NRESERVERISK)..
</summary>
<remarks>Data-source is 'CL_SPECIFIC_RISK.NRESERVERISK'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.ExcludingRiskIndicatorPerClaim">
<summary>
Excluding risk indicator per claim (SINDEXCLUDE_RISK)..
</summary>
<remarks>Data-source is 'CL_SPECIFIC_RISK.SINDEXCLUDE_RISK'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CL_SPECIFIC_RISK.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CL_SPECIFIC_RISK.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.Compare(InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="SpecificRiskClaimItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.CurrencyCodeDescription">
 <summary>
 Code of the currency.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE11'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaim.CodeRiskTypeDescription">
 <summary>
 Type of Code risk type
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6785' on the table 'TABLE6785'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaimCollection">
 <summary>
 Collection for SpecificRiskClaim class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaimCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaimCollection.AddSpecificRiskClaim">
 <summary>
 Add an instance of class 'SpecificRiskClaim' in the SpecificRiskClaimCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaimCollection.Compare(InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaimCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaimCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaimCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.SpecificRiskClaimCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.TABLE8111">
 <summary>
 Claim registration status.
 </summary>
<remarks>Data-source is 'TABLE8111'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8111.CreateNewTABLE8111">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8111.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8111._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8111._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8111._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8111._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8111._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8111._RegistrationClaimStatus">
<summary>
Code of the status of the registration claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8111._DescriptionCode">
<summary>
Description of the code
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8111._ShortDescription">
<summary>
Short description of the code
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8111._StatusRecord">
<summary>
Status of the record
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8111._ComputerDate">
<summary>
Computer date when the record is updated or created
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8111._CodeUser">
<summary>
Code of the user creating or updating the record
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8111.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8111.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8111.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8111.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8111.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8111.RegistrationClaimStatus">
<summary>
Code of the status of the registration claim. (NSTATUSREG)..
</summary>
<remarks>Data-source is 'TABLE8111.NSTATUSREG'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8111.DescriptionCode">
<summary>
Description of the code (SDESCRIPT)..
</summary>
<remarks>Data-source is 'TABLE8111.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8111.ShortDescription">
<summary>
Short description of the code (SSHORT_DES)..
</summary>
<remarks>Data-source is 'TABLE8111.SSHORT_DES'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8111.StatusRecord">
<summary>
Status of the record (SSTATREGT)..
</summary>
<remarks>Data-source is 'TABLE8111.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8111.StatusRecordEnum">
<summary>
Status of the record
</summary>
<remarks>This property use a enumeration based on property 'StatusRecord'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8111.StatusRecordEnumText">
<summary>
Status of the record
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8111.ComputerDate">
<summary>
Computer date when the record is updated or created (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TABLE8111.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8111.CodeUser">
<summary>
Code of the user creating or updating the record (NUSERCODE)..
</summary>
<remarks>Data-source is 'TABLE8111.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8111.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8111.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8111.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8111.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8111.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8111.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8111.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8111.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8111.Compare(InMotionGIT.Claim.Entity.Contracts.TABLE8111,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="TABLE8111Item">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8111.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8111.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8111.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8111.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.TABLE8111Collection">
 <summary>
 Collection for TABLE8111 class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8111Collection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8111Collection.AddTABLE8111">
 <summary>
 Add an instance of class 'TABLE8111' in the TABLE8111Collection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8111Collection.Compare(InMotionGIT.Claim.Entity.Contracts.TABLE8111Collection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8111Collection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8111Collection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8111Collection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.TABLE8112">
 <summary>
 Assign Criteria type.
 </summary>
<remarks>Data-source is 'TABLE8112'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8112.CreateNewTABLE8112">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8112.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8112._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8112._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8112._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8112._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8112._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8112._CriteriaType">
<summary>
Criteria of the assign of the registration claim.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8112._DescriptionCode">
<summary>
Description of the code
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8112._ShortDescription">
<summary>
Short description of the code
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8112._StatusRecord">
<summary>
Status of the record
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8112._ComputerDate">
<summary>
Computer date when the record is updated or created
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8112._CodeUser">
<summary>
Code of the user creating or updating the record
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8112.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8112.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8112.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8112.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8112.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8112.CriteriaType">
<summary>
Criteria of the assign of the registration claim. (NCRITERIATYP)..
</summary>
<remarks>Data-source is 'TABLE8112.NCRITERIATYP'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8112.DescriptionCode">
<summary>
Description of the code (SDESCRIPT)..
</summary>
<remarks>Data-source is 'TABLE8112.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8112.ShortDescription">
<summary>
Short description of the code (SSHORT_DES)..
</summary>
<remarks>Data-source is 'TABLE8112.SSHORT_DES'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8112.StatusRecord">
<summary>
Status of the record (SSTATREGT)..
</summary>
<remarks>Data-source is 'TABLE8112.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8112.StatusRecordEnum">
<summary>
Status of the record
</summary>
<remarks>This property use a enumeration based on property 'StatusRecord'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8112.StatusRecordEnumText">
<summary>
Status of the record
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8112.ComputerDate">
<summary>
Computer date when the record is updated or created (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TABLE8112.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8112.CodeUser">
<summary>
Code of the user creating or updating the record (NUSERCODE)..
</summary>
<remarks>Data-source is 'TABLE8112.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8112.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8112.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8112.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8112.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8112.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8112.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8112.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8112.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8112.Compare(InMotionGIT.Claim.Entity.Contracts.TABLE8112,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="TABLE8112Item">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8112.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8112.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8112.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8112.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.TABLE8112Collection">
 <summary>
 Collection for TABLE8112 class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8112Collection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8112Collection.AddTABLE8112">
 <summary>
 Add an instance of class 'TABLE8112' in the TABLE8112Collection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8112Collection.Compare(InMotionGIT.Claim.Entity.Contracts.TABLE8112Collection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8112Collection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8112Collection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8112Collection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.TABLE8113">
 <summary>
 Assigned Pool type.
 </summary>
<remarks>Data-source is 'TABLE8113'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8113.CreateNewTABLE8113">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8113.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8113._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8113._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8113._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8113._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8113._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8113._PoolAssignedType">
<summary>
Type of the pool assigned.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8113._Completedescription">
<summary>
Description of the code
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8113._ShortDescription">
<summary>
Short description of the code
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8113._StatusRecord">
<summary>
Status of the record
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8113._ComputerDate">
<summary>
Computer date when the record is updated or created
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TABLE8113._CodeUser">
<summary>
Code of the user creating or updating the record
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8113.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8113.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8113.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8113.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8113.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8113.PoolAssignedType">
<summary>
Type of the pool assigned. (NPOOLASSTYP)..
</summary>
<remarks>Data-source is 'TABLE8113.NPOOLASSTYP'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8113.Completedescription">
<summary>
Description of the code (SDESCRIPT)..
</summary>
<remarks>Data-source is 'TABLE8113.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8113.ShortDescription">
<summary>
Short description of the code (SSHORT_DES)..
</summary>
<remarks>Data-source is 'TABLE8113.SSHORT_DES'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8113.StatusRecord">
<summary>
Status of the record (SSTATREGT)..
</summary>
<remarks>Data-source is 'TABLE8113.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8113.StatusRecordEnum">
<summary>
Status of the record
</summary>
<remarks>This property use a enumeration based on property 'StatusRecord'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8113.StatusRecordEnumText">
<summary>
Status of the record
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8113.ComputerDate">
<summary>
Computer date when the record is updated or created (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TABLE8113.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8113.CodeUser">
<summary>
Code of the user creating or updating the record (NUSERCODE)..
</summary>
<remarks>Data-source is 'TABLE8113.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8113.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8113.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8113.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8113.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8113.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8113.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8113.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8113.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8113.Compare(InMotionGIT.Claim.Entity.Contracts.TABLE8113,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="TABLE8113Item">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8113.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8113.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8113.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8113.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.TABLE8113Collection">
 <summary>
 Collection for TABLE8113 class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8113Collection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8113Collection.AddTABLE8113">
 <summary>
 Add an instance of class 'TABLE8113' in the TABLE8113Collection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8113Collection.Compare(InMotionGIT.Claim.Entity.Contracts.TABLE8113Collection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TABLE8113Collection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8113Collection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TABLE8113Collection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction">
 <summary>
 Tab Portfolio casualty actions
 </summary>
<remarks>Data-source is 'TAB_CLAIMACTION'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.CreateNewTabPortfolioCasualtyAction">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction._ActionID">
<summary>
Action ID
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction._TypeOfPolicy">
<summary>
Type of Policy
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction._NomineePolicyIndicator">
<summary>
Nominee Policy Indicator
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction._RoleInThePolicy">
<summary>
Role in the policy
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction._TypeOfBranck">
<summary>
Type of Branch
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction._GenericCoverage">
<summary>
Generic coverage
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction._TypeOfAction">
<summary>
Type of action
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction._RoutineName">
<summary>
Routine name
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction._RoutineType">
<summary>
Routine Type
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction._Status">
<summary>
Register status
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.ActionID">
<summary>
Action ID (NIDACTION)..
</summary>
<remarks>Data-source is 'TAB_CLAIMACTION.NIDACTION'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.TypeOfPolicy">
<summary>
Type of Policy (SPOLITYPE)..
</summary>
<remarks>Data-source is 'TAB_CLAIMACTION.SPOLITYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.TypeOfPolicyEnum">
<summary>
Type of Policy
</summary>
<remarks>This property use a enumeration based on property 'TypeOfPolicy'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.TypeOfPolicyEnumText">
<summary>
Type of Policy
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.NomineePolicyIndicator">
<summary>
Nominee Policy Indicator (SNOPAYROLL)..
</summary>
<remarks>Data-source is 'TAB_CLAIMACTION.SNOPAYROLL'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.RoleInThePolicy">
<summary>
Role in the policy (NROLE)..
</summary>
<remarks>Data-source is 'TAB_CLAIMACTION.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.RoleInThePolicyEnum">
<summary>
Role in the policy
</summary>
<remarks>This property use a enumeration based on property 'RoleInThePolicy'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.RoleInThePolicyEnumText">
<summary>
Role in the policy
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.TypeOfBranck">
<summary>
Type of Branch (NTYPBRANCH)..
</summary>
<remarks>Data-source is 'TAB_CLAIMACTION.NTYPBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.GenericCoverage">
<summary>
Generic coverage (NCOVER)..
</summary>
<remarks>Data-source is 'TAB_CLAIMACTION.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.TypeOfAction">
<summary>
Type of action (NACTION)..
</summary>
<remarks>Data-source is 'TAB_CLAIMACTION.NACTION'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.RoutineName">
<summary>
Routine name (SROUTINENAME)..
</summary>
<remarks>Data-source is 'TAB_CLAIMACTION.SROUTINENAME'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.RoutineType">
<summary>
Routine Type (SROUTINETYPE)..
</summary>
<remarks>Data-source is 'TAB_CLAIMACTION.SROUTINETYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.Status">
<summary>
Register status (SSTATREGT)..
</summary>
<remarks>Data-source is 'TAB_CLAIMACTION.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.StatusEnum">
<summary>
Register status
</summary>
<remarks>This property use a enumeration based on property 'Status'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.StatusEnumText">
<summary>
Register status
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_CLAIMACTION.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_CLAIMACTION.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.Compare(InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="TabPortfolioCasualtyActionItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyAction.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyActionCollection">
 <summary>
 Collection for TabPortfolioCasualtyAction class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyActionCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyActionCollection.AddTabPortfolioCasualtyAction">
 <summary>
 Add an instance of class 'TabPortfolioCasualtyAction' in the TabPortfolioCasualtyActionCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyActionCollection.Compare(InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyActionCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyActionCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyActionCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.TabPortfolioCasualtyActionCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim">
 <summary>
 third parties involved in automobile claim.
 </summary>
<remarks>Data-source is 'CLAIM_THIR'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.CreateNewThirdPartyAutomobileClaim">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim._ClaimCode">
<summary>
Code of The Claim Case or Claimant.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim._ClaimType">
<summary>
Claim Type.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim._Fault">
<summary>
Driver&#39;s fault indicator.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim._CarrierOfThirdParty">
<summary>
Code of the insurance company covering the third party.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim._LicensePlateType">
<summary>
Type of License Plate.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim._LicensePlate">
<summary>
Number of the License Plate.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim._ClaimIDInCarrierCoveringTheThirdParty">
<summary>
Number identifying the claim in the company covering the third party.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim._PolicyIDInCarrierCoveringTheThirdParty">
<summary>
Number of the policy covering the third party in a different company.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim._VendorCode">
<summary>
Code of the Garage (for Motor Vehicle Claims).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim._AgreementNoteID">
<summary>
Number of the note describing the agreement between insurance companies.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim._DamageNoteID">
<summary>
Number of the note describing the damages.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim._PossibilityOfRecovery">
<summary>
Possibility of salvage/recovery.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim._EngineSerialNumber">
<summary>
Number of the engine of the vehicle affected as third party.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim._EstimatedRecoveryPercentage">
<summary>
Estimated percentage of recovery.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim._ThirdPartyChassis">
<summary>
Number of the chassis of the vehicle of the third party.
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'CLAIM_THIR.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.ClaimCode">
<summary>
Code of The Claim Case or Claimant. (NCASE_NUM)..
</summary>
<remarks>Data-source is 'CLAIM_THIR.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.ClaimType">
<summary>
Claim Type. (NDEMAN_TYPE)..
</summary>
<remarks>Data-source is 'CLAIM_THIR.NDEMAN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.Fault">
<summary>
Driver&#39;s fault indicator. (NBLAME)..
</summary>
<remarks>Data-source is 'CLAIM_THIR.NBLAME'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.CarrierOfThirdParty">
<summary>
Code of the insurance company covering the third party. (NTHIR_COMP)..
</summary>
<remarks>Data-source is 'CLAIM_THIR.NTHIR_COMP'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLAIM_THIR.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.LicensePlateType">
<summary>
Type of License Plate. (SLICENSE_TY)..
</summary>
<remarks>Data-source is 'CLAIM_THIR.SLICENSE_TY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.LicensePlate">
<summary>
Number of the License Plate. (SREGIST)..
</summary>
<remarks>Data-source is 'CLAIM_THIR.SREGIST'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.ClaimIDInCarrierCoveringTheThirdParty">
<summary>
Number identifying the claim in the company covering the third party. (STHIR_CLAIM)..
</summary>
<remarks>Data-source is 'CLAIM_THIR.STHIR_CLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.PolicyIDInCarrierCoveringTheThirdParty">
<summary>
Number of the policy covering the third party in a different company. (STHIR_POLIC)..
</summary>
<remarks>Data-source is 'CLAIM_THIR.STHIR_POLIC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLAIM_THIR.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.VendorCode">
<summary>
Code of the Garage (for Motor Vehicle Claims). (NPROVIDER)..
</summary>
<remarks>Data-source is 'CLAIM_THIR.NPROVIDER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.AgreementNoteID">
<summary>
Number of the note describing the agreement between insurance companies. (NNOTEAGREE)..
</summary>
<remarks>Data-source is 'CLAIM_THIR.NNOTEAGREE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.DamageNoteID">
<summary>
Number of the note describing the damages. (NNOTETHIR)..
</summary>
<remarks>Data-source is 'CLAIM_THIR.NNOTETHIR'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.PossibilityOfRecovery">
<summary>
Possibility of salvage/recovery. (SRECOV_IND)..
</summary>
<remarks>Data-source is 'CLAIM_THIR.SRECOV_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.EngineSerialNumber">
<summary>
Number of the engine of the vehicle affected as third party. (SMOTOR)..
</summary>
<remarks>Data-source is 'CLAIM_THIR.SMOTOR'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.EstimatedRecoveryPercentage">
<summary>
Estimated percentage of recovery. (NRECOV_PER)..
</summary>
<remarks>Data-source is 'CLAIM_THIR.NRECOV_PER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.ThirdPartyChassis">
<summary>
Number of the chassis of the vehicle of the third party. (SCHASSIS)..
</summary>
<remarks>Data-source is 'CLAIM_THIR.SCHASSIS'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.Compare(InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ThirdPartyAutomobileClaimItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaim.FaultDescription">
 <summary>
 Driver&#39;s fault indicator.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE204'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaimCollection">
 <summary>
 Collection for ThirdPartyAutomobileClaim class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaimCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaimCollection.AddThirdPartyAutomobileClaim">
 <summary>
 Add an instance of class 'ThirdPartyAutomobileClaim' in the ThirdPartyAutomobileClaimCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaimCollection.Compare(InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaimCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaimCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaimCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.ThirdPartyAutomobileClaimCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery">
 <summary>
 Users Inter Areas Claims Inquiry
 </summary>
<remarks>Data-source is 'CLAIM_INTERAREAUSER'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.CreateNewUserInterDepartmentsInquiery">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery._ReceiverID">
<summary>
Receiver ID
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery._UserInquiry">
<summary>
Code of the user associated Areas Claims inquiry
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery._Status">
<summary>
Register status
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.ReceiverID">
<summary>
Receiver ID (NRECIPIENTID)..
</summary>
<remarks>Data-source is 'CLAIM_INTERAREAUSER.NRECIPIENTID'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.UserInquiry">
<summary>
Code of the user associated Areas Claims inquiry (NUSERAREA)..
</summary>
<remarks>Data-source is 'CLAIM_INTERAREAUSER.NUSERAREA'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.Status">
<summary>
Register status (SSTATREGT)..
</summary>
<remarks>Data-source is 'CLAIM_INTERAREAUSER.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.StatusEnum">
<summary>
Register status
</summary>
<remarks>This property use a enumeration based on property 'Status'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.StatusEnumText">
<summary>
Register status
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLAIM_INTERAREAUSER.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLAIM_INTERAREAUSER.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.Compare(InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="UserInterDepartmentsInquieryItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquiery.ReceiverIDDescription">
 <summary>
 Receiver ID
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6840' on the table 'TABLE6840'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquieryCollection">
 <summary>
 Collection for UserInterDepartmentsInquiery class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquieryCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquieryCollection.AddUserInterDepartmentsInquiery">
 <summary>
 Add an instance of class 'UserInterDepartmentsInquiery' in the UserInterDepartmentsInquieryCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquieryCollection.Compare(InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquieryCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquieryCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquieryCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.UserInterDepartmentsInquieryCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.Vendor">
 <summary>
 Providers table.
 </summary>
<remarks>Data-source is 'TAB_PROVIDER'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Vendor.CreateNewVendor">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Vendor.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Vendor._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Vendor._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Vendor._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Vendor._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Vendor._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Vendor._VendorCode">
<summary>
Code of the vendor.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Vendor._VendorType">
<summary>
Type of vendor.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Vendor._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Vendor._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Vendor._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Vendor._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Vendor._RecordDate">
<summary>
Date when the information was first entered into the system.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Vendor._EndingDate">
<summary>
Ending date of the vendor as valid in the system.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Vendor._BranchOffice">
<summary>
Branch office to which the vendor belongs.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Vendor._PendingOrdersPermitted">
<summary>
Maximum number of service orders with pending status permitted to a vendor.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Vendor._SupportingDocument">
<summary>
Type of support document.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Vendor._DiscountByVendor">
<summary>
Discount percent that the vendor grants.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Vendor._Concessionaire">
<summary>
Indicator that the vendor is an auto concessionaire or distributor.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.Vendor._NOFFICE_ATTENTION">
<summary>

</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Vendor.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Vendor.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Vendor.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Vendor.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Vendor.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Vendor.VendorCode">
<summary>
Code of the vendor. (NPROVIDER)..
</summary>
<remarks>Data-source is 'TAB_PROVIDER.NPROVIDER'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Vendor.VendorType">
<summary>
Type of vendor. (NTYPEPROV)..
</summary>
<remarks>Data-source is 'TAB_PROVIDER.NTYPEPROV'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Vendor.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'TAB_PROVIDER.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Vendor.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_PROVIDER.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Vendor.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'TAB_PROVIDER.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Vendor.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Vendor.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Vendor.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_PROVIDER.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Vendor.RecordDate">
<summary>
Date when the information was first entered into the system. (DINPDATE)..
</summary>
<remarks>Data-source is 'TAB_PROVIDER.DINPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Vendor.EndingDate">
<summary>
Ending date of the vendor as valid in the system. (DOUTDATE)..
</summary>
<remarks>Data-source is 'TAB_PROVIDER.DOUTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Vendor.BranchOffice">
<summary>
Branch office to which the vendor belongs. (NOFFICE)..
</summary>
<remarks>Data-source is 'TAB_PROVIDER.NOFFICE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Vendor.PendingOrdersPermitted">
<summary>
Maximum number of service orders with pending status permitted to a vendor. (NMAX_SERV_ORD)..
</summary>
<remarks>Data-source is 'TAB_PROVIDER.NMAX_SERV_ORD'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Vendor.SupportingDocument">
<summary>
Type of support document. (NTYPESUPPORT)..
</summary>
<remarks>Data-source is 'TAB_PROVIDER.NTYPESUPPORT'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Vendor.DiscountByVendor">
<summary>
Discount percent that the vendor grants. (NPER_DISC)..
</summary>
<remarks>Data-source is 'TAB_PROVIDER.NPER_DISC'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Vendor.Concessionaire">
<summary>
Indicator that the vendor is an auto concessionaire or distributor. (SCONCESIONARY)..
</summary>
<remarks>Data-source is 'TAB_PROVIDER.SCONCESIONARY'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Vendor.NOFFICE_ATTENTION">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_PROVIDER.NOFFICE_ATTENTION'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Vendor.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Vendor.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Vendor.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Vendor.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Vendor.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Vendor.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Vendor.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Vendor.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Vendor.Compare(InMotionGIT.Claim.Entity.Contracts.Vendor,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="VendorItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Vendor.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Vendor.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Vendor.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.Vendor.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Vendor.VendorTypeDescription">
 <summary>
 Type of vendor.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7027'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Vendor.BranchOfficeDescription">
 <summary>
 Branch office to which the vendor belongs.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9'.
 </remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.Vendor.SupportingDocumentDescription">
 <summary>
 Type of support document.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5570'.
 </remarks>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.VendorCollection">
 <summary>
 Collection for Vendor class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.VendorCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.VendorCollection.AddVendor">
 <summary>
 Add an instance of class 'Vendor' in the VendorCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.VendorCollection.Compare(InMotionGIT.Claim.Entity.Contracts.VendorCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.VendorCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.VendorCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.VendorCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.WindowClaim">
 <summary>
 Windows associated with the claim.
 </summary>
<remarks>Data-source is 'CLAIM_WIN'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.WindowClaim.CreateNewWindowClaim">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.WindowClaim.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.WindowClaim._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.WindowClaim._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.WindowClaim._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.WindowClaim._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.WindowClaim._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.WindowClaim._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.WindowClaim._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.WindowClaim._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.WindowClaim._ContentIndicators">
<summary>
Contents indicator vector (t one-alphanumeric characters elements).
</summary>
</member>
<member name="F:InMotionGIT.Claim.Entity.Contracts.WindowClaim._WindowsVector">
<summary>
Window Vector (Six-Alphanumeric Characters Elements).
</summary>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.WindowClaim.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.WindowClaim.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.WindowClaim.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.WindowClaim.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.WindowClaim.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.WindowClaim.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'CLAIM_WIN.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.WindowClaim.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLAIM_WIN.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.WindowClaim.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLAIM_WIN.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.WindowClaim.ContentIndicators">
<summary>
Contents indicator vector (t one-alphanumeric characters elements). (SV_CONCLAIM)..
</summary>
<remarks>Data-source is 'CLAIM_WIN.SV_CONCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.WindowClaim.WindowsVector">
<summary>
Window Vector (Six-Alphanumeric Characters Elements). (SV_WINCLAIM)..
</summary>
<remarks>Data-source is 'CLAIM_WIN.SV_WINCLAIM'.</remarks>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.WindowClaim.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.WindowClaim.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.WindowClaim.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.WindowClaim.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.WindowClaim.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.WindowClaim.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.WindowClaim.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.WindowClaim.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.WindowClaim.Compare(InMotionGIT.Claim.Entity.Contracts.WindowClaim,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="WindowClaimItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.WindowClaim.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.WindowClaim.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.WindowClaim.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.WindowClaim.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Claim.Entity.Contracts.WindowClaimCollection">
 <summary>
 Collection for WindowClaim class
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.WindowClaimCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.WindowClaimCollection.AddWindowClaim">
 <summary>
 Add an instance of class 'WindowClaim' in the WindowClaimCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.WindowClaimCollection.Compare(InMotionGIT.Claim.Entity.Contracts.WindowClaimCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Claim.Entity.Contracts.WindowClaimCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.WindowClaimCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Claim.Entity.Contracts.WindowClaimCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
</members>
</doc>
