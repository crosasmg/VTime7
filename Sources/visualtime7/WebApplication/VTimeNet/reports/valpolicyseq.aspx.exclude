<%@ Page Language="VB" explicit="true" %>
<%@ Import namespace="eFunctions" %>
<%@ Import namespace="ePolicy" %>
<%@ Import namespace="eProduct" %>
<%@ Import namespace="eClaim" %>
<%@ Import namespace="eReports" %>
<script language="VB" runat="Server">
Dim mobjPolicySeq As Object
Dim mstrErrors As String
Dim mstrLocationCA001 As String
Dim mobjValues As eFunctions.Values
Dim lclsPolicy As Object
Dim mstrScript As String

'- Se define una variable que almacene el valor que toma la poliza     
Dim llngPolicy As Object
Dim llngCertif As Object

'- Se define la contante para el manejo de errores en caso de advertencias
Dim mstrCommand As String

'- Variable para el manejo del QueryString  
Dim mstrQueryString As String

Dim mblnCreateInsured As Boolean

'-Variable para indicar si ya se ejecutaron las validaciones
Dim mblnReload As Boolean
Dim lclsRefresh As ePolicy.ValPolicySeq


'% insvalSequence: Se realizan las validaciones masivas de la forma
'--------------------------------------------------------------------------------------------
Function insvalSequence() As String
	Dim ldblPercent As Object
	Dim nCover As Object
	Dim lintnExist As Object
	Dim lintDescript As Byte
	Dim nModulec As Object
	Dim llngTariff As Object
	Dim lintnMaxRole As Object
	'--------------------------------------------------------------------------------------------
	Dim lintIntermedia As Integer
	Dim lintIntermediaOld As Integer
	Dim lstrClient As String
	Dim lstrClientOld As String
	
	Dim lclsCliallopro As eProduct.Cliallopro
	Dim lclsFunds_Pol As ePolicy.Funds_Pol
	Dim lclsDecla_benef As ePolicy.Decla_benef
	Dim mobjPolicySeq1 As ePolicy.ValPolicySeq
	Select Case Request.QueryString.Item("sCodispl")
		'+ VI641: Criterios para seleción de riesgo
		Case "VI641"
			mobjPolicySeq = New ePolicy.Life_p_speci
			With Request
				If .QueryString.Item("WindowType") = "PopUp" Then
					insvalSequence = mobjPolicySeq.InsValVI641Upd(.QueryString("sCodispl"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(.QueryString.Item("nModulec"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.QueryString.Item("nCover"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnConsec"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("cbeSexinsur"), mobjValues.StringToType(.Form.Item("tcnAgestart"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnAgeend"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnCapstart"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnCapend"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeCrthecni"), eFunctions.Values.eTypeData.etdDouble, True))
				End If
			End With
			
			'+ CA727: Reportes automáticos de la póliza
		Case "CA727"
			mobjPolicySeq = New ePolicy.PolReport
			
			With Request
				If .QueryString.Item("WindowType") = "PopUp" Then
					insvalSequence = mobjPolicySeq.insValCA727("CA727", Session("scertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Request.Form.Item("cbeCodispl"), mobjValues.StringToType(Request.Form.Item("cbeTransactype"), eFunctions.Values.eTypeData.etdDouble))
				End If
			End With
			
			'+ VI665: Recargo por actividad del grupo (Vida Colectivo).
		Case "VI665"
			mobjPolicySeq = New ePolicy.Activ_Group
			With Request
				If .QueryString.Item("WindowType") = "PopUp" Then
					insvalSequence = mobjPolicySeq.insValVI665("VI665", Request.QueryString.Item("Action"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeGroup"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("cbeSpeciality"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnPercent"), eFunctions.Values.eTypeData.etdDouble))
				End If
			End With
			
			'+ VI681: Recargos/Descuentos de los asegurados (VIDA).
		Case "VI681"
			mobjPolicySeq = New ePolicy.Insured_expdis
			With Request
				If .QueryString.Item("WindowType") = "PopUp" Then
					insvalSequence = mobjPolicySeq.insValVI681Upd("VI681", Request.QueryString.Item("Action"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), Request.Form.Item("hddsClient"), mobjValues.StringToType(.Form.Item("cboDisexprc"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnModulec"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeCover"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), .Form.Item("cboDisexpri"), .Form.Item("chkUnit"), mobjValues.StringToType(.Form.Item("tcnRate"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnAmount"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("chkPermTemp"), mobjValues.StringToType(.Form.Item("tcdDate_Fr"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcdDate_to"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnAge"), eFunctions.Values.eTypeData.etdInteger), .Form.Item("btnNoteNum"), mobjValues.StringToType(.Form.Item("hddoldnDisexprc"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddoldnModulec"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddoldnCover"), eFunctions.Values.eTypeData.etdDouble))
				Else
					insvalSequence = mobjPolicySeq.insValVI681("VI681", Request.QueryString.Item("Action"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate))
				End If
			End With
			
			'+ Tratamiento de pólizas
		Case "CA001_K"
			With Request
				Session("llngPolicy") = ""
				insvalSequence = mobjPolicySeq.insValCA001(.Form.Item("sCertype"), mobjValues.StringToType(.Form.Item("cbeTransactio"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcdEffecdate"), eFunctions.Values.eTypeData.etdDate, True), mobjValues.StringToType(.Form.Item("cbeOffice"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("cbeBranch"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("valProduct"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnCertificat"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("optType"), mobjValues.StringToType(.Form.Item("tcdLedgerDate"), eFunctions.Values.eTypeData.etdDate, True), mobjValues.StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcdExpDate"), eFunctions.Values.eTypeData.etdDate, True), mobjValues.StringToType(.Form.Item("cbeAgency"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("cbeOfficeAgen"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("cbeSellChannel"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("valType_amend"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnServ_order"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnQuotProp"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnDigit"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnProp_reg"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnRenewalnum"), eFunctions.Values.eTypeData.etdDouble))
			End With
			
			'+ CA003: Vía de cobro 
		Case "CA003"
			With Request
				insvalSequence = mobjPolicySeq.insValCA003("CA003", .Form.Item("optBank"), .Form.Item("tctClient"), mobjValues.StringToType(.Form.Item("cbeBankExt"), eFunctions.Values.eTypeData.etdDouble, True), .Form.Item("valAccount"), mobjValues.StringToType(.Form.Item("cbeTyp_Account"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("cbeTyp_crecard"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcdDateExpir"), eFunctions.Values.eTypeData.etdDate), .Form.Item("tctBankAuth"), .Form.Item("valCredi_card"))
			End With
			'+ CA004: Datos para la facturación
		Case "CA004"
			With Request
				insvalSequence = mobjPolicySeq.insValCA004("CA004", mobjValues.StringToType(.Form.Item("tcdIssuedat"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcdReqDate"), eFunctions.Values.eTypeData.etdDate), .Form.Item("tctClient"), mobjValues.StringToType(.Form.Item("tcdExpirDate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcdStartDate"), eFunctions.Values.eTypeData.etdDate), .Form.Item("optFreq"), mobjValues.StringToType(.Form.Item("cbePayFreq"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeQuota"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeIndexApl"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeIndexType"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnIndexRate"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nTransaction"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), Session("sPolitype"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.QueryString.Item("Action"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.QueryString.Item("nHolder"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("valAgreement"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("cbeWayPay"), eFunctions.Values.eTypeData.etdInteger, True), .Form.Item("optDirTyp"), mobjValues.StringToType(.Form.Item("tcnBillDay"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("cbeSendAddr"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("valOrigin"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnAFPCommi"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("cbeCurrency"), eFunctions.Values.eTypeData.etdInteger, True))
			End With
			
			'+ CA006: Grupos de colectivos
			'+ Inf. general del colectivo     
		Case "CA006"
			With Request
				insvalSequence = mobjPolicySeq.insValCA006(Session("sCertype"), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), "CA006", .Form.Item("sColtimre"), .Form.Item("cbeColInvot"), .Form.Item("cbeColReint"), .Form.Item("cbeTypModule"), .Form.Item("cbeTypClause"), .Form.Item("cbeTypDiscxp"), mobjValues.StringToType(.Form.Item("tcnQCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate))
			End With
			'**+ CA008: Risk Situations.
			'+ CA008: Situaciones de riesgo.
			
		Case "CA008"
			mobjPolicySeq = New ePolicy.Situation
			If Request.QueryString.Item("WindowType") = "PopUp" Then
				With Request
					
					insvalSequence = mobjPolicySeq.insValCA008(.QueryString("Action"), "CA008", Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnSituation"), eFunctions.Values.eTypeData.etdInteger), .Form.Item("tctDescript"), .Form.Item("cbePolicyHolder"))
				End With
			Else
				
				insvalSequence = mobjPolicySeq.insValCA008_K("CA008", Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble))
				
			End If
			'UPGRADE_NOTE: Object mobjPolicySeq may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
			mobjPolicySeq = Nothing
			
			'+ CA009: Capitales básicos Asegurados
		Case "CA009"
			mobjPolicySeq = New ePolicy.Sum_insur
			If Request.QueryString.Item("WindowType") = "PopUp" Then
				With Request
					insvalSequence = mobjPolicySeq.insValCA009Upd("CA009", .Form.Item("tctDescript"), mobjValues.StringToType(.Form.Item("tcnSumins_real"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnCoinsuran"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnSum_insur"), eFunctions.Values.eTypeData.etdDouble, True))
					
				End With
			Else
				insvalSequence = mobjPolicySeq.insValCA009(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(Request.Form.Item("cbeCurrency"), eFunctions.Values.eTypeData.etdDouble))
			End If
			
			'+ CA010: Bienes asegurables de la póliza
		Case "CA010"
			With Request
				mobjPolicySeq = New ePolicy.Property_Renamed
				If Not Request.QueryString.Item("WindowType") = vbNullString Then
					insvalSequence = mobjPolicySeq.insValCA010("CA010", Request.QueryString.Item("Action"), mobjValues.StringToType(.Form.Item("cbeTabGoods"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("tctDescript"), mobjValues.StringToType(.Form.Item("cbeCurrency"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnCapital"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnRateProp"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnPremium"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnRate"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnFixamount"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnMinamount"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnMaxamount"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnOriginalRateProp"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnOriginalPremium"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeFrandedi"), eFunctions.Values.eTypeData.etdDouble), Session("nBranch"), Session("nProduct"), mobjValues.StringToType(.Form.Item("tcnServ_order"), eFunctions.Values.eTypeData.etdDouble))
				Else
					insvalSequence = vbNullString
				End If
			End With
			
		Case "CA011"
			If Request.QueryString.Item("WindowType") = "PopUp" Then
				With Request
					insvalSequence = mobjPolicySeq.insValCA011("CA011", .QueryString("Action"), mobjValues.StringToType(.Form.Item("tcnGroup"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("tctDescript"), mobjValues.StringToType(.Form.Item("tcnParticip"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("cbeGroupStat"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble))
				End With
			Else
				insvalSequence = vbNullString
			End If
			
			'+ CA012: Elementos de Protección            
		Case "CA012"
			If Request.QueryString.Item("WindowType") = "PopUp" Then
				With Request
					mobjPolicySeq = New ePolicy.Protection
					insvalSequence = mobjPolicySeq.insValCA012("CA012", mobjValues.StringToType(.Form.Item("tcnElement"), eFunctions.Values.eTypeData.etdDouble, True), .Form.Item("tctDescript"), mobjValues.StringToType(.Form.Item("tcnDisrate"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("cbeCurrency"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnDiscount"), eFunctions.Values.eTypeData.etdDouble, True))
				End With
			Else
				insvalSequence = vbNullString
			End If
			
			'+ CA013: Módulos de Póliza Individual o Certificado
		Case "CA013", "CA013A"
			mobjPolicySeq = New ePolicy.Modules
			With Request
				If Request.QueryString.Item("WindowType") <> "PopUp" Then
					insvalSequence = mobjPolicySeq.InsValCA013(.QueryString("sCodispl"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), .Form.Item("hddnModulec"), .Form.Item("hddsChecked"), .Form.Item("cbeCurrency"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(CStr(.Form.Item("hddsChecked").Length), eFunctions.Values.eTypeData.etdDouble))
				Else
					insvalSequence = mobjPolicySeq.InsValCA013Upd(.QueryString("sCodispl"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(.QueryString.Item("nGroup"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("valModulec"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.QueryString.Item("nCurrency"), eFunctions.Values.eTypeData.etdDouble), Request.QueryString.Item("Action"))
				End If
			End With
			
			'+ CA014: Coberturas de la póliza 
		Case "CA014", "CA014A"
			mobjPolicySeq = New ePolicy.Cover
			With Request
				If .QueryString.Item("ActionType") = "Check" Then
					If .Form.Item("hddsExist").Length = 1 Then
						insvalSequence = mobjPolicySeq.InsValCA014Upd(.QueryString("sCodispl"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("hddnModulec"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnCover"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnCapital"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnRatecove"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnPremium"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.QueryString.Item("nCurrency"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnGroup"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nTransaction"), eFunctions.Values.eTypeData.etdInteger), .Form.Item("hddsFrandedi"), .Form.Item("hddsFrancApl"), mobjValues.StringToType(.Form.Item("hddnFraRate"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnFixamount"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnMinamount"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddsWait_Type"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnCapital_o"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnRatecove_o"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnPremium_o"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnMaxamount"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnDiscount"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnDisc_amoun"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnRole"), eFunctions.Values.eTypeData.etdInteger), Session("sBrancht"), mobjValues.StringToType(.Form.Item("hddnWaitQ"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnAgeIns"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnAgeminins"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnAgemaxins"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnAgemaxper"), eFunctions.Values.eTypeData.etdInteger), .QueryString("sClient"), mobjValues.StringToType(.Form.Item("hddnCauseupd"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnProdclas"), eFunctions.Values.eTypeData.etdInteger), .Form.Item("hddsKeyGrid"), mobjValues.StringToType(.Form.Item("hddnAgemininsf"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnAgemaxinsf"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnAgemaxperf"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnBranch_rei"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnDurinsur"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnTypdurins"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("hddsExist"),  ,  ,  , mobjValues.StringToType(.Form.Item("hddnDataFound"), eFunctions.Values.eTypeData.etdInteger), .QueryString("Action"))
						
						If insvalSequence > vbNullString Then
							mstrScript = "top.frames['fraFolder'].document.forms[0].Sel.checked=" & .QueryString.Item("sChecked") & "false;" & "top.frames['fraFolder'].marrArray[0].Sel =" & .QueryString.Item("sChecked") & "false;"
							mstrQueryString = "&sKey=" & Request.Form.Item("hddsKeyGrid")
						End If
					Else
                            insvalSequence = mobjPolicySeq.InsValCA014Upd(.QueryString("sCodispl"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.GetValues("hddnModulec").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.GetValues("hddnCover").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.GetValues("hddnCapital").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.GetValues("hddnRatecove").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.GetValues("hddnPremium").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.QueryString.Item("nCurrency"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnGroup"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nTransaction"), eFunctions.Values.eTypeData.etdInteger), .Form.GetValues("hddsFrandedi").GetValue(CShort(.QueryString("nIndex")) - 1), .Form.GetValues("hddsFrancApl").GetValue(CShort(.QueryString("nIndex")) - 1), mobjValues.StringToType(.Form.GetValues("hddnFraRate").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.GetValues("hddnFixamount").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.GetValues("hddnMinamount").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.GetValues("hddsWait_Type").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.GetValues("hddnCapital_o").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.GetValues("hddnRatecove_o").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.GetValues("hddnPremium_o").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.GetValues("hddnMaxamount").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.GetValues("hddnDiscount").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.GetValues("hddnDisc_amoun").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.GetValues("hddnRole").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger), Session("sBrancht"), mobjValues.StringToType(.Form.GetValues("hddnWaitQ").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.GetValues("hddnAgeIns").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.GetValues("hddnAgeminins").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.GetValues("hddnAgemaxins").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.GetValues("hddnAgemaxper").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger), .QueryString("sClient"), mobjValues.StringToType(.Form.GetValues("hddnCauseupd").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnProdclas"), eFunctions.Values.eTypeData.etdInteger), .Form.GetValues("hddsKeyGrid").GetValue(CShort(.QueryString("nIndex")) - 1), mobjValues.StringToType(.Form.GetValues("hddnAgemininsf").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.GetValues("hddnAgemaxinsf").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.GetValues("hddnAgemaxperf").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.GetValues("hddnBranch_rei").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.GetValues("hddnDurinsur").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.GetValues("hddnTypdurins").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble), .Form.GetValues("hddsExist").GetValue(CShort(.QueryString("nIndex")) - 1), , , , mobjValues.StringToType(.Form.Item("hddnDataFound"), eFunctions.Values.eTypeData.etdInteger), .QueryString("Action"))
						
                            If insvalSequence > vbNullString Then
                                mstrScript = "top.frames['fraFolder'].document.forms[0].Sel[" & CStr(CShort(.QueryString.Item("nIndex")) - 1) & "].checked=" & .QueryString.Item("sChecked") & "false;" & "top.frames['fraFolder'].marrArray[" & CStr(CShort(.QueryString.Item("nIndex")) - 1) & "].Sel =" & .QueryString.Item("sChecked") & "false;"
                                mstrQueryString = "&sKey=" & Request.Form.GetValues("hddsKeyGrid").GetValue(CShort(Request.QueryString.Item("nIndex")) - 1)
                            End If
                        End If
                        Response.Write("<SCRIPT>")
                        Response.Write(mstrScript)
                        Response.Write("top.frames['fraFolder'].document.forms[0].action='ValPolicySeq.aspx?nRole=" & Request.QueryString.Item("nRole") & "&sClient=" & Request.QueryString.Item("sClient") & "&nIndexCover=" & Request.QueryString.Item("nIndexCover") & "';")
                        Response.Write("top.frames['fraFolder'].mstrDoSubmit = '1';")
                        Response.Write("</" & "Script>")
                    Else
                        If .QueryString.Item("WindowType") = "PopUp" Then
                            insvalSequence = mobjPolicySeq.InsValCA014Upd(.QueryString("sCodispl"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnModulec"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnCover"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnCapital"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnRatecove"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnPremium"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnCurrency"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnGroup"), eFunctions.Values.eTypeData.etdInteger), Session("nTransaction"), mobjValues.StringToType(.Form.Item("cbeFrandedi"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("cbeFrancApl"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnFraRate"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnFixamount"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnMinamount"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeWait_Type"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("hddnCapital_o"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnRatecove_o"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnPremium_o"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnMaxamount"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnDiscount"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnDisc_amoun"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnRole"), eFunctions.Values.eTypeData.etdInteger), Session("sBrancht"), mobjValues.StringToType(.Form.Item("tcnWaitQ"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("hddnAgeIns"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnAgeminins"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnAgemaxins"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnAgemaxper"), eFunctions.Values.eTypeData.etdInteger, True), .Form.Item("hddsClient"), mobjValues.StringToType(.Form.Item("cbeCauseupd"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("hddnProdclas"), eFunctions.Values.eTypeData.etdInteger), .Form.Item("hddsKeyGrid"), mobjValues.StringToType(.Form.Item("tcnAgemininsf"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnAgemaxinsf"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnAgemaxperf"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("cbeBranch_rei"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnDurinsur"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("cbeTypdurins"), eFunctions.Values.eTypeData.etdDouble, True), .Form.Item("hddsExist"), , , , mobjValues.StringToType(.Form.Item("hddnDataFound"), eFunctions.Values.eTypeData.etdInteger))
                        Else
                            insvalSequence = mobjPolicySeq.InsValCA014(.Form.Item("hddsKey"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("cbeCurrencDes"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("valGroup"), eFunctions.Values.eTypeData.etdInteger), Session("nTransaction"), .QueryString("sCodispl"), mobjValues.StringToType(.QueryString.Item("nRole"), eFunctions.Values.eTypeData.etdInteger), .QueryString("sClient"), Session("sBrancht"), mobjValues.StringToType(.Form.Item("hddnAge"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnProdclas"), eFunctions.Values.eTypeData.etdInteger))
                        End If
                    End If
                End With
			
                '+ CA015: Franquicia/Deducible de la Póliza
            Case "CA015", "CA15-1"
                mobjPolicySeq = New ePolicy.Franchise
                With Request
                    insvalSequence = mobjPolicySeq.insValCA015(Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), CStr(Session("nTransaction")), Application("cstrTypeCompany"), .Form.Item("optFranchiseType"), .Form.Item("cbeFranqApl"), mobjValues.StringToType(.Form.Item("cbeCurrencyFD"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnDiscountPerc"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnDiscountAmou"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnFranchisePerc"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnFranchiseAmou"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnFranchiseMin"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnFranchiseMax"), eFunctions.Values.eTypeData.etdDouble))
                End With
			
                '+ CA016: Recargos/descuentos/impuestos de una póliza individual o certificado
            Case "CA016", "CA016A"
                mobjPolicySeq = New ePolicy.Disc_xprem
                With Request
                    If .QueryString.Item("WindowType") = "PopUp" Then
                        insvalSequence = mobjPolicySeq.InsValCA016Upd(.QueryString("sCodispl"), .Form.Item("hddsChanallo"), mobjValues.StringToType(.Form.Item("tcnPercent"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnAmount"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnOriPercent"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnOriAmount"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnDisexaddper"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("hddnDisexsubper"), eFunctions.Values.eTypeData.etdDouble, True))
                    Else
                        insvalSequence = mobjPolicySeq.InsValCA016(.QueryString("sCodispl"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), .Form.Item("hddnDisc_code"), .Form.Item("hddsSel"))
                    End If
                End With
			
                '+ CA017: Emisión de Recibos de una póliza
            Case "CA017"
                With Request
				
                    insvalSequence = mobjPolicySeq.insValCA017("CA017", Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("dEffecdate"), mobjValues.StringToType(.Form.Item("cboReceipts"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("hddsList"), mobjValues.StringToType(.Form.Item("hddPremium"), eFunctions.Values.eTypeData.etdDouble))
                End With
			
                '+ CA017A: Cuotas del recibo 
            Case "CA017A"
                With Request
                    If .QueryString.Item("WindowType") <> "PopUp" Then
                        '+ se envia a validar el encabezado (sin datos de la grilla)  
                        insvalSequence = mobjPolicySeq.insValCA017A(Request.QueryString.Item("sCodispl"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("cbeWay_Pay"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnPremium"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeQuota"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnQuoPend"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnValQuot"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnInitial"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnPayfreq"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nTransaction"), eFunctions.Values.eTypeData.etdDouble))
                    End If
                End With
			
                '+ CA020: Distribución de Coaseguro
            Case "CA020"
                With Request
                    mobjPolicySeq = New ePolicy.Coinsuran
                    If .QueryString.Item("WindowType") = "PopUp" Then
                        insvalSequence = mobjPolicySeq.insValCA020(.QueryString("WindowType"), .QueryString("Action"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("valCompany"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnShare"), eFunctions.Values.eTypeData.etdDouble, True))
                    Else
                        insvalSequence = mobjPolicySeq.insValCA020(.QueryString("WindowType"), .QueryString("Action"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), Application("nCompany"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnOwnShare"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("hddRecordCount"), eFunctions.Values.eTypeData.etdInteger))
                    End If
                End With
			
			
                '+ CA021: Cesión de Reaseguro - 
            Case "CA021"
                mobjPolicySeq = New ePolicy.Reinsuran
			
                With Request
                    If .QueryString.Item("WindowType") = "PopUp" Then
                        If .Form.Item("blnContract") = "True" Then
						
                            '+ Se hace la validación del Grid "Contrato"
                            insvalSequence = mobjPolicySeq.insValCA021("CA021", Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), Session("dEffecdate"), mobjValues.StringToType(.Form.Item("tcnParticip"), eFunctions.Values.eTypeData.etdDouble), Session("nCurrency"), mobjValues.StringToType(.Form.Item("tcnRetention"), eFunctions.Values.eTypeData.etdDouble), 2, mobjValues.StringToType(.Form.Item("tcnCapitalMax"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("tctBrancht"), False, True, eRemoteDB.Constants.intNull, eRemoteDB.Constants.intNull, eRemoteDB.Constants.intNull, eRemoteDB.Constants.intNull, eRemoteDB.Constants.intNull, eRemoteDB.Constants.dtmNull, 1, mobjValues.StringToType(.Form.Item("tcnParticip"), eFunctions.Values.eTypeData.etdDouble), vbNullString, vbNullString, eRemoteDB.Constants.intNull, mobjValues.StringToType(.Form.Item("cbeBranchrei"), eFunctions.Values.eTypeData.etdInteger))
                        Else
						
                            '+ Se hace la validación del Grid de "Coberturas"
                            If Request.Form.Item("tctPopUpT") = "Cov" Then
                                insvalSequence = mobjPolicySeq.insValCA021("CA021_Cov", Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), Session("dEffecdate"), eRemoteDB.Constants.intNull, Session("nCurrency"), .Form.Item("tcnRetention"), .Form.Item("cbeChange"), eRemoteDB.Constants.intNull, .Form.Item("tctBrancht"), True, False)
                            End If
						
                            If Request.Form.Item("tctPopUpT") = "F" Then
                                '+ Se hace la validación del Grid de "Facultativo"
                                insvalSequence = mobjPolicySeq.insValCA021("CA021", Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), Session("dEffecdate"), eRemoteDB.Constants.intNull, Session("nCurrency"), eRemoteDB.Constants.intNull, eRemoteDB.Constants.intNull, eRemoteDB.Constants.intNull, .Form.Item("tctBrancht"), False, False, mobjValues.StringToType(.Form.Item("cbeCompany"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnComission"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnReser_rate"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnInter_rate"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnParticip"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcdAcceptdate"), eFunctions.Values.eTypeData.etdDate), Application("nCompany"), eRemoteDB.Constants.intNull, vbNullString, vbNullString, eRemoteDB.Constants.intNull, mobjValues.StringToType(.Form.Item("cbeBranchrei"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnAmount"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnModulec"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("valCover"), eFunctions.Values.eTypeData.etdInteger), .Form.Item("valClient"), Request.QueryString.Item("Action"))
                            End If
                        End If
                    Else
					
                        '+ Se efectúan las validaciones masivas cuando es diferente a popup(Validación de las sumas distribuidas).
                        insvalSequence = mobjPolicySeq.insValCA021("CA021", Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), Session("dEffecdate"), eRemoteDB.Constants.intNull, Session("nCurrency"), eRemoteDB.Constants.intNull, eRemoteDB.Constants.intNull, eRemoteDB.Constants.intNull, .Form.Item("tctBranchtH"), True, True, mobjValues.StringToType(.Form.Item("cbeCompany"), eFunctions.Values.eTypeData.etdDouble), eRemoteDB.Constants.intNull, eRemoteDB.Constants.intNull, eRemoteDB.Constants.intNull, eRemoteDB.Constants.intNull, eRemoteDB.Constants.dtmNull, Session("nCompany"), eRemoteDB.Constants.intNull, .Form.Item("tctCumReint"), .Form.Item("tctHeapCode"), mobjValues.StringToType(.Form.Item("tcnCoinsuShare"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeBranchrei"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddRest"), eFunctions.Values.eTypeData.etdDouble))
					
                    End If
                End With
			
                '+ CA022: Cláusula/descriptivo/condición especial        
            Case "CA022"
                mobjPolicySeq = New ePolicy.Clause
                With Request
                    If .QueryString.Item("WindowType") = "PopUp" Then
                        insvalSequence = mobjPolicySeq.InsValCA022(Request.QueryString.Item("sCodispl"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(Request.Form.Item("valClause"), eFunctions.Values.eTypeData.etdDouble), Request.Form.Item("valInsured"), mobjValues.StringToType(Request.Form.Item("hddModulec"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Request.Form.Item("hddModulec"), eFunctions.Values.eTypeData.etdDouble), Request.Form.Item("hddSel"), Session("nTransaction"), .QueryString("Action"))
                    End If
                End With
			
                '+ CA022A: Cláusulas de la póliza matriz
            Case "CA022A"
                mobjPolicySeq = New ePolicy.Claus_co_gp
                insvalSequence = mobjPolicySeq.insValCA022A(Request.QueryString.Item("sCodispl"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Request.Form.Item("hddnClause"), Request.Form.Item("hddnSelClause"), mobjValues.StringToType(Request.Form.Item("valGroup"), eFunctions.Values.eTypeData.etdDouble))
			
                '+ CA023: Beneficiarios identificados por código            
            Case "CA023"
                mobjPolicySeq = New ePolicy.Beneficiar
                With Request
                    nCover = .Form.Item("valCover")
                    If nCover = "" Then
                        nCover = 0
                    End If
                    nModulec = .Form.Item("valModulec")
                    If nModulec = "" Then
                        nModulec = 0
                    End If
                    insvalSequence = mobjPolicySeq.insValCA023(.QueryString("Action"), .QueryString("sCodispl"), .QueryString("WindowType"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), .Form.Item("dtcClient"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(nModulec, eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(nCover, eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnParticip"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeRelation"), eFunctions.Values.eTypeData.etdDouble, True), Session("sPolitype"), Session("nUsercode"))
                End With
			
                '+ CA024: Intermediarios 
            Case "CA024"
                With Request
                    mobjPolicySeq = New ePolicy.Commission
                    If CBool(IIf(IsNothing(.QueryString.Item("bAll")), False, .QueryString.Item("bAll"))) Then
                        ldblPercent = mobjValues.StringToType(.Form.Item("tcnPercentCF"), eFunctions.Values.eTypeData.etdDouble, True)
                    Else
                        ldblPercent = mobjValues.StringToType(.QueryString.Item("nPercent"), eFunctions.Values.eTypeData.etdDouble, True)
                    End If
                    insvalSequence = mobjPolicySeq.insValCA024(.QueryString("Action"), .QueryString("bAll"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), .Form.Item("cbeType"), mobjValues.StringToType(ldblPercent, eFunctions.Values.eTypeData.etdDouble), .Form.Item("hddConColl"), mobjValues.StringToType(.Form.Item("valIntermed"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("cbeRole"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("cbeAgreement"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnInstallCom"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("cbeAgency"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnShare"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnPercent"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnAmount"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnPercent_Ce"), eFunctions.Values.eTypeData.etdDouble, True))
                End With
			
                '+ CA025: Cliente de la póliza
            Case "CA025"
			
                With Request
                    mobjPolicySeq = New ePolicy.Roles
                    mblnCreateInsured = True
                    If Request.QueryString.Item("WindowType") = "PopUp" Then
                        If mobjValues.StringToType(.Form.Item("cbeRole"), eFunctions.Values.eTypeData.etdInteger) = 13 Then
                            lstrClient = vbNullString
                            lstrClientOld = vbNullString
                            lintIntermedia = mobjValues.StringToType(.Form.Item("tctCode"), eFunctions.Values.eTypeData.etdInteger, True)
                            lintIntermediaOld = mobjValues.StringToType(.Form.Item("hddsOldCode"), eFunctions.Values.eTypeData.etdInteger, True)
                        Else
                            lstrClient = .Form.Item("tctCode")
                            lstrClientOld = .Form.Item("hddsOldCode")
                            lintIntermedia = eRemoteDB.Constants.intNull
                            lintIntermediaOld = eRemoteDB.Constants.intNull
                        End If
                        lintnExist = .Form.Item("hddnExist")
                        lintnMaxRole = .Form.Item("hddnMaxRole")
                        If lintnExist = vbNullString And lintnMaxRole = 0 Then
                            lclsCliallopro = New eProduct.Cliallopro
                            lclsCliallopro.Find(mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), Session("sPolitype"), .Form.Item("hddsCompon"), mobjValues.StringToType(.Form.Item("cbeRole"), eFunctions.Values.eTypeData.etdDouble), True)
                            lintnExist = 1
                            lintnMaxRole = lclsCliallopro.nMax_role
                            'UPGRADE_NOTE: Object lclsCliallopro may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
                            lclsCliallopro = Nothing
                        End If
                        If .Form.Item("hddsOldRole") <> .Form.Item("cbeRole") Then
                            lclsCliallopro = New eProduct.Cliallopro
                            lclsCliallopro.Find(mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), Session("sPolitype"), .Form.Item("hddsCompon"), mobjValues.StringToType(.Form.Item("cbeRole"), eFunctions.Values.eTypeData.etdDouble), True)
                            lintnMaxRole = lclsCliallopro.nMax_role
                            'UPGRADE_NOTE: Object lclsCliallopro may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
                            lclsCliallopro = Nothing
                        End If
                        insvalSequence = mobjPolicySeq.InsValCA025Upd("CA025", mobjValues.StringToType(lintnExist, eFunctions.Values.eTypeData.etdInteger), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(.Form.Item("cbeRole"), eFunctions.Values.eTypeData.etdInteger), lstrClient, mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), lintIntermedia, mobjValues.StringToType(.Form.Item("cbeStatusrol"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(lintnMaxRole, eFunctions.Values.eTypeData.etdInteger), Session("sBrancht"), lstrClientOld, lintIntermediaOld, mobjValues.StringToType(.Form.Item("hddsOldRole"), eFunctions.Values.eTypeData.etdInteger), Request.Form.Item("tctCode_digit"), mobjValues.StringToType(.Form.Item("tcdBirthdate"), eFunctions.Values.eTypeData.etdDate), .Form.Item("cbeSexclien"), .Form.Item("chkSmoking"), mobjValues.StringToType(.Form.Item("tcnRating"), eFunctions.Values.eTypeData.etdDouble, True), Session("sPolitype"), Session("nTransaction"))
                        mblnCreateInsured = mobjPolicySeq.bCreateInsured
                    Else
                        insvalSequence = mobjPolicySeq.InsValCA025("CA025", Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("sPolitype"), .Form.Item("hddsCompon"))
                    End If
                End With
			
                '+ CA027 : Emisión de recibo automático
            Case "CA027"
                insvalSequence = vbNullString
			
                '+ VI021: documentos solicitados
            Case "VI021"
                With Request
				
                    mobjPolicySeq = New ePolicy.Life_docu
                    If .QueryString.Item("WindowType") = "PopUp" Then
                        If Request.QueryString.Item("Action") = "Add" Then
                            lintDescript = mobjValues.StringToType(.Form.Item("tctDescript"), eFunctions.Values.eTypeData.etdDouble, True)
                        Else
                            lintDescript = 0
                        End If
                        insvalSequence = mobjPolicySeq.InsValVI021Upd("VI021", mobjValues.StringToType(.Form.Item("cbeStat_docreq"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcdRecep_date"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcdDate_to"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcdDatevig"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcdDatefree"), eFunctions.Values.eTypeData.etdDate), .Form.Item("tctClient"), lintDescript, Request.QueryString.Item("Action"), Session("sKey"))
                    End If
                End With
			
                '+ IN010: Datos particulares de incendio
            Case "IN010"
                With Request
                    insvalSequence = mobjPolicySeq.InsValIN010("IN010", Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), mobjValues.StringToType(.Form.Item("cboArticle"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cboDetailArt"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeConstCat"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnFloor_quan"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnIndPeriod"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnDep_prem"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("cbeDecla_Freq"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("cbeDecla_Type"), eFunctions.Values.eTypeData.etdDouble, True))
                End With
			
                '+ VI001: Interés asegurable
            Case "VI001"
                With Request
                    insvalSequence = mobjPolicySeq.InsValVI001("VI001", Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), Session("dEffecdate"), .Form.Item("cbovalgroup"), .Form.Item("cbovalsituation"), .Form.Item("tctIduraind"), mobjValues.StringToType(.Form.Item("tcnInsurTimeAge"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnInsurTimeAgeLimit"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnPerNunMi"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnCapital"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnCapitalCalc"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcdexpirdat"), eFunctions.Values.eTypeData.etdDate, True), mobjValues.StringToType(.Form.Item("hddTypDurpay"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnYearpay"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnAgePay"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcdDate_pay"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnrentamount"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("cbocurrrent"), eFunctions.Values.eTypeData.etdDouble, True))
                End With
			
                '**+ VI7001 - Life Assurance - Unit Linked
                '+ VI7001 - Interés asegurable Unit Linked
			
            Case "VI7001"
                With Request
                    insvalSequence = mobjPolicySeq.InsValVI7001("VI7001", Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), .Form.Item("cbovalgroup"), .Form.Item("cbovalsituation"), .Form.Item("tctIduraind"), .Form.Item("tctPduraind"), mobjValues.StringToType(.Form.Item("tcnInsurTimeAge"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnInsurTimeAgeLimit"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(CStr(0), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(CStr(0), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnAge"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnAgeReinsu"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnAgeLimit"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnCapital"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnCapitalCalc"), eFunctions.Values.eTypeData.etdDouble, True))
                End With
			
                '+ AU001: Información del vehículo
            Case "AU001"
                With Request
                    insvalSequence = mobjPolicySeq.insValAU001("AU001", Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("cbovalGroup"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("cbovalSituation"), mobjValues.StringToType(Session("nTransaction"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("tctRegister"), .Form.Item("tctDigit"), .Form.Item("valVehcode"), mobjValues.StringToType(.Form.Item("tcnType"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnYear"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("cbeLicense_ty"), .Form.Item("tctMotor"), .Form.Item("tctChassis"), mobjValues.StringToType(.Form.Item("tcnCapital"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeProviCod"), eFunctions.Values.eTypeData.etdDouble, True), .Form.Item("tcdLastClaim"))
                End With
			
                '+ CA041: Selección de monedas
            Case "CA041"
                With Request
                    insvalSequence = mobjPolicySeq.insValCA041("CA041", .Form.Item("hddExist"), mobjValues.StringToType(CStr(.Form.Item("Sel").Length), eFunctions.Values.eTypeData.etdInteger), .Form.Item("hddExchange"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("hddCurrency"), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate))
                End With
			
                '+ CA639: Condición de capitales
            Case "CA639"
                mobjPolicySeq = New ePolicy.Cond_cover
                With Request
                    If .QueryString.Item("WindowType") = "PopUp" Then
                        insvalSequence = mobjPolicySeq.insValCA639(.QueryString("Action"), "CA639", Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), mobjValues.StringToType(.Form.Item("cbeGroup"), eFunctions.Values.eTypeData.etdDouble, True), Session("nCertif"), mobjValues.StringToType(.Form.Item("cbeModulec"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("cbeCover"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("cbeRole"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("cbeTipcap"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnAmount"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnPercent"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnRent"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnCurrency"), eFunctions.Values.eTypeData.etdDouble, True))
                        '+ Variable de control nCharge para realizar para volver al grupo actual que se esta agregando condicion  de capitales
                        mstrQueryString = "&cbeGroup=" & Request.Form.Item("cbeGroup") & "&cbeModulec=" & Request.Form.Item("cbeModulec") & "&nCharge=1"
                    Else
                        insvalSequence = mobjPolicySeq.insValCA639Upd("CA639", Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), mobjValues.StringToType(.Form.Item("cbeGroup"), eFunctions.Values.eTypeData.etdDouble, True), Session("nCertif"), mobjValues.StringToType(.Form.Item("cbeModulec"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate))
                    End If
                End With
			
                '+ Ventana de fin de proceso
            Case "GE101"
                insvalSequence = vbNullString
			
            Case "CA047"
                With Request
                    insvalSequence = mobjPolicySeq.insValCA047("CA047", mobjValues.StringToType(.Form.Item("tcdStayDate"), eFunctions.Values.eTypeData.etdDate))
                End With
			
                '**+ VI006:	Investments Funds.
                '+ VI006: Fondos de inversiones.
			
            Case "VI006"
			
                lclsFunds_Pol = New ePolicy.Funds_Pol
			
                With Request
                    If .QueryString.Item("WindowType") = "PopUp" Then
                        insvalSequence = lclsFunds_Pol.insValVI006(.QueryString.Item("sCodispl"), .Form.Item("Sel"), "Popup", mobjValues.StringToType(.Form.Item("tcnFunds"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnPartic_min"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnParticip"), eFunctions.Values.eTypeData.etdInteger), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), Session("nTransaction"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), "2")
                    Else
                        insvalSequence = lclsFunds_Pol.insValVI006(.QueryString.Item("sCodispl"), .Form.Item("Sel"), , , , , Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), Session("nTransaction"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), vbNullString)
                    End If
				
                    'UPGRADE_NOTE: Object lclsFunds_Pol may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
                    lclsFunds_Pol = Nothing
                End With
			
                '+ VI732: Cuadro de valores garantizados 
            Case "VI732"
                mobjPolicySeq = New ePolicy.Guarant_val
                With Request
                    If .QueryString.Item("WindowType") = "PopUp" Then
                        insvalSequence = mobjPolicySeq.insvalVI732("VI732", Request.QueryString.Item("Action"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnYear"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnMonth"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnAge"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnResc_val"), eFunctions.Values.eTypeData.etdInteger, True))
                    End If
                End With
			
            Case "VI769"
                lclsDecla_benef = New ePolicy.Decla_benef
                With Request
                    If .QueryString.Item("WindowType") = "PopUp" Then
                        insvalSequence = lclsDecla_benef.InsValVI769("VI769", .QueryString("Action"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnNumdecla"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcdDatedecla"), eFunctions.Values.eTypeData.etdDate), .Form.Item("chkIrrevoc"), String.Empty)
                    End If
                    'UPGRADE_NOTE: Object lclsDecla_benef may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
                    lclsDecla_benef = Nothing
                End With
			
                '+ CA748: Observaciones de una propuesta
            Case "CA748"
                mobjPolicySeq = New ePolicy.obs_proposal
                With Request
                    If .QueryString.Item("WindowType") = "PopUp" Then
                        insvalSequence = mobjPolicySeq.insvalCA748(mobjValues.StringToType(.Form.Item("cbeObservation"), eFunctions.Values.eTypeData.etdInteger, True))
                    End If
                End With
			
                '+ VA589: Datos particulares de Vida activa
            Case "VA589"
                mobjPolicySeq = New ePolicy.Activelife
                With Request
                    insvalSequence = mobjPolicySeq.insValVA589(.QueryString("sCodispl"), mobjValues.StringToType(Session("nTransaction"), eFunctions.Values.eTypeData.etdDouble), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("cbeIduraind"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnInsurtime"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnCapitaldeath"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnPremdeal"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnCalPrem"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbenTypeinvest"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnIntproject"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnWarminint"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("valAgreement"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnModulec"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnPremMin"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("valAgreement_sLevelint"))
                End With
			
                '+ VI701: Datos particulares de VidActiva
            Case "VI701"
                mobjPolicySeq = New ePolicy.Life
                With Request
                    insvalSequence = mobjPolicySeq.insValVI701("VI701", Session("nTransaction"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("cbeGroup"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnAmount_cre"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnAmount_act"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("cbeCurren_cre"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("cbeCalcapital"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("cbeTyppremium"), eFunctions.Values.eTypeData.etdDouble, True))
                End With
			
                '+ CA658: Nómina de cotización (vida colectivo)
            Case "CA658"
                mobjPolicySeq = New ePolicy.Client_tmp
                With Request
                    insvalSequence = mobjPolicySeq.insvalCA658(Request.QueryString.Item("WindowType"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("cbeRole"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcdBirthDat"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnAge"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("cbeTAge"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnInsured"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeCurrency"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("cbeGroup"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnRentAmount"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("OptAge"), eFunctions.Values.eTypeData.etdInteger), .Form.Item("hddExistGroups"), .Form.Item("optType"))
                End With
			
                '+ VI811: Asegurados por coberturas (Pólizas innominadas)
            Case "VI811"
                With Request
                    If .QueryString.Item("WindowType") = "PopUp" Then
                        mobjPolicySeq = New ePolicy.Nopayroll
                        insvalSequence = mobjPolicySeq.insvalVI811Upd(Request.QueryString.Item("Action"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(Request.QueryString.Item("nGroups"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(Request.QueryString.Item("nModulec"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("valCover"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnQLifes"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("valRole"), eFunctions.Values.eTypeData.etdDouble, True))
                    Else
                        mobjPolicySeq = New ePolicy.Nopayroll
                        insvalSequence = mobjPolicySeq.insvalVI811(Request.QueryString.Item("Action"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("valGroup"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("valModule"), eFunctions.Values.eTypeData.etdDouble, True))
                    End If
                End With
			
                '+ VI662: Datos particulares vida colectivo (Educacional)
            Case "VI662"
                With Request
                    If .QueryString.Item("WindowType") = "PopUp" Then
                        mobjPolicySeq = New ePolicy.life_levels
                        If .QueryString.Item("sInBasUni") = "1" Then
                            insvalSequence = mobjPolicySeq.InsValvi662(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(.QueryString.Item("nGroup"), eFunctions.Values.eTypeData.etdDouble, True), .QueryString("sInBasUni"), mobjValues.StringToType(.Form.Item("tcnLevel_b"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnCapital_b"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnInsured_b"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.QueryString.Item("nCurrency"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("tctClient_b"), Session("nUsercode"), .QueryString("Action"))
                        Else
                            insvalSequence = mobjPolicySeq.InsValvi662(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(.QueryString.Item("nGroup"), eFunctions.Values.eTypeData.etdDouble), .QueryString("sInBasUni"), mobjValues.StringToType(.Form.Item("tcnLevel_u"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnCapital_u"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnInsured_b"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.QueryString.Item("nCurrency"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("tctClient_b"), Session("nUsercode"), .QueryString("Action"))
                        End If
                    Else
                        '+ Para la parte puntual de la pagina
                        mobjPolicySeq = New ePolicy.life_educ
                        insvalSequence = mobjPolicySeq.InsValvi662(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(.Form.Item("valGroup"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("optTyp"), mobjValues.StringToType(.Form.Item("tcnPercent"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeCurrency"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("valSituation"), eFunctions.Values.eTypeData.etdDouble, True))
                    End If
                End With
			
                '+ AM002: Tarifas de atención médica
            Case "AM002"
                With Request
                    If .QueryString.Item("WindowType") = "PopUp" Then
                        insvalSequence = mobjPolicySeq.insValAM002Upd(.QueryString("Action"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.QueryString.Item("nTariff"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.QueryString.Item("nGroup"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.QueryString.Item("nRole"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnAgeInit"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnAgeEnd"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("cbeGroupComp"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnPremium"), eFunctions.Values.eTypeData.etdDouble))
                    Else
                        insvalSequence = mobjPolicySeq.insValAM002(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("sPolitype"), Session("sDefaulti"), mobjValues.StringToType(.Form.Item("cbeTariff"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeGroup"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeRole"), eFunctions.Values.eTypeData.etdDouble))
                    End If
                End With
			
                '+ AM003: Conceptos de pago por coberturas de atención médica
            Case "AM003"
                With Request
                    mobjPolicySeq1 = New ePolicy.ValPolicySeq
                    insvalSequence = vbNullString
                    If .QueryString.Item("WindowType") = "PopUp" Then
                        insvalSequence = mobjPolicySeq1.insValAM003Upd(.QueryString("Action"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(.QueryString.Item("nGroup"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.QueryString.Item("nModulec"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.QueryString.Item("nCover"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.QueryString.Item("nTariff"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.QueryString.Item("nRole"), eFunctions.Values.eTypeData.etdInteger), .QueryString("sClient"), .QueryString("sIllness"), mobjValues.StringToType(.Form.Item("tcnPay_Concep"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnPrestac"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnDed_Type"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnDed_Percen"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnDed_Amount"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnDed_Quanti"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnLimit"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnLimit_exe"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.QueryString.Item("nLimitH"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnIndem_Rate"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnTyplim"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnCount"), eFunctions.Values.eTypeData.etdInteger), String.Empty, 0, 0, 0, 0, 0, 0, 0, 0, vbNullString, mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate))
                    Else
                        insvalSequence = mobjPolicySeq1.insValAM003(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("cbeTariff"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("valCover"), eFunctions.Values.eTypeData.etdInteger))
                    End If
                    'UPGRADE_NOTE: Object mobjPolicySeq1 may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
                    mobjPolicySeq1 = Nothing
                End With
			
                '+ AM006: Exclusión de enfermedades
            Case "AM006"
                With Request
                    mobjPolicySeq = New ePolicy.Tab_am_exc
                    If .QueryString.Item("WindowType") = "PopUp" Then
                        If CStr(Session("sPolitype")) = "2" And CStr(Session("nCertif")) = "0" Then
                            llngTariff = "0"
                        Else
                            If .QueryString.Item("nTariff") = "0" Then
                                llngTariff = eRemoteDB.Constants.intNull
                            Else
                                llngTariff = .QueryString.Item("nTariff")
                            End If
                        End If
                        insvalSequence = mobjPolicySeq.InsValAM006Upd(.QueryString("sCodispl"), .QueryString("Action"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(llngTariff, eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), .Form.Item("hddsClient"), .Form.Item("cbeIllness"), mobjValues.StringToType(.Form.Item("cbeExc_Code"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcdDateIni"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcdDateEnd"), eFunctions.Values.eTypeData.etdDate), Session("dStartdate"), Session("dExpirdat"), mobjValues.StringToType(.Form.Item("hddTypeExclu"), eFunctions.Values.eTypeData.etdInteger))
					
                    Else
                        insvalSequence = mobjPolicySeq.InsValAM006(.QueryString("sCodispl"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate))
                    End If
                End With
			
                '+ VI666: Cotización
            Case "VI666"
                mobjPolicySeq = New ePolicy.Cover_quota
                With Request
                    If .QueryString.Item("WindowType") = "PopUp" Then
                        insvalSequence = mobjPolicySeq.insvalVI666(Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.QueryString.Item("nGroup"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnUtilMar"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("hddUtilMarOrig"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnPremium"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("hddnPremiumOrig"), eFunctions.Values.eTypeData.etdDouble, True), .QueryString("WindowType"))
                        mstrQueryString = "&nGroup=" & .QueryString.Item("nGroup")
                    Else
                        insvalSequence = mobjPolicySeq.insvalVI666(Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("valGroup"), eFunctions.Values.eTypeData.etdDouble, True), eRemoteDB.Constants.intNull, eRemoteDB.Constants.intNull, eRemoteDB.Constants.intNull, eRemoteDB.Constants.intNull, .QueryString("WindowType"))
                        mstrQueryString = "&nGroup=" & .Form.Item("valGroup")
                    End If
                End With
			
			
                '+ VA595: Ilustración del valor póliz
            Case "VA595"
                With Request
                    If .QueryString.Item("WindowType") = "PopUp" Then
                        mobjPolicySeq = New ePolicy.Per_deposit
                        insvalSequence = mobjPolicySeq.InsValVA595Upd("VA595", .QueryString("Action"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnYear_ini"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnYear_end"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnAmountdep"), eFunctions.Values.eTypeData.etdDouble))
                    Else
                        mobjPolicySeq = New ePolicy.Projectlife
                        insvalSequence = mobjPolicySeq.InsValVA595("VA595", Session("nBranch"), Session("nProduct"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnPremfreq"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnPremdeal"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnPremimin"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnPremAnu"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnPremdep"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnPrsugest"), eFunctions.Values.eTypeData.etdDouble), Session("nTransaction"))
                    End If
                End With
			
                '+ RV778: Datos particulares de rentas vitalicias
            Case "RV778"
                With Request
                    If .QueryString.Item("WindowType") <> "PopUp" Then
                        mobjPolicySeq = New ePolicy.Annuities
                        insvalSequence = mobjPolicySeq.insValRV778(.QueryString("sCodispl"), mobjValues.StringToType(.Form.Item("tcnPremiumbas"), eFunctions.Values.eTypeData.etdDouble, True))
                    Else
                        mobjPolicySeq = New ePolicy.Prem_annuities
                        insvalSequence = mobjPolicySeq.InsValRV778Upd(.QueryString("sCodispl"), mobjValues.StringToType(.Form.Item("cbeIndrecdep"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnPrem_quot"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnRate_disc"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnNom_valbon"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcdIssuedatbon"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcdExpirdatbon"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("cbeCurrency"), eFunctions.Values.eTypeData.etdDouble, True))
                    End If
                End With
			
                '+ CA048: Fin de proceso
            Case "CA048"
                insvalSequence = mobjPolicySeq.insValCA048("CA048", Request.Form.Item("chkPendenStat"), mobjValues.StringToType(Request.Form.Item("cbeWaitCode"), eFunctions.Values.eTypeData.etdDouble, True), Session("nTransaction"))
			
            Case "CA050"
                insvalSequence = vbNullString
			
                '+ OS001: Solicitud de ordenes de servicio
            Case "OS001", "OS001_K"
                mobjPolicySeq = New eClaim.Prof_ord
                With Request
                    If .QueryString.Item("WindowType") = "PopUp" Then
                        mstrQueryString = "&nBranch=" & Request.QueryString.Item("nBranch") & "&nProduct=" & Request.Form.Item("valProduct") & "&nPolicy=" & Request.Form.Item("nPolicy") & "&nProponum=" & Request.Form.Item("nProponum") & "&nCertif=" & Request.Form.Item("nCertif") & "&nClaim=" & Request.Form.Item("nClaim") & "&nCase_num=" & Request.Form.Item("nCase_num")
                        insvalSequence = mobjPolicySeq.insValOS001(.QueryString("sCodispl"), .QueryString("Action"), mobjValues.StringToType(.Form.Item("hddnOrdClass"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnBranch"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnProduct"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnProponum"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnClaim"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnCase_num"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("nServ_order"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("nProvider"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcdAssignDate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcdFec_prog"), eFunctions.Values.eTypeData.etdDate), .Form.Item("tctTime_prog"), .Form.Item("tctPlace"), mobjValues.StringToType(.Form.Item("cbeWorksh"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("cbeMunicipality"), eFunctions.Values.eTypeData.etdInteger), .Form.Item("tctName_cont"), .Form.Item("tctAdd_contact"), .Form.Item("tctPhone_cont"), mobjValues.StringToType(.Form.Item("cbeStatus_ord"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("cbeOrd_TypeCost"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("cbeOrderType"), eFunctions.Values.eTypeData.etdInteger), 0)
                    End If
                End With
			
                '**+ VI7003: Savings Plan.
                '+ VI7003: Plan de Ahorros.
			
            Case "VI7003"
                With Request
                    If Request.QueryString.Item("WindowType") = "PopUp" Then
                        mobjPolicySeq = New ePolicy.Per_deposit
					
                        insvalSequence = mobjPolicySeq.InsValVI7003Upd("VI7003", .QueryString("Action"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), Session("dEffecdate"), mobjValues.StringToType(.Form.Item("tcnYear_ini"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnYear_end"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnAmountdep"), eFunctions.Values.eTypeData.etdDouble))
                    End If
                End With
			
                '**+ VI7005: Transference information.
                '+ VI7005: Información de transferencia.
			
            Case "VI7005"
                With Request
                    If Request.QueryString.Item("WindowType") = "PopUp" Then
                        mobjPolicySeq = New ePolicy.APV_Transfer
					
                        insvalSequence = mobjPolicySeq.InsValVI7005Upd("VI7005", .QueryString("Action"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("valInstitution"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("cbeOrigin"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnAmount_peso"), eFunctions.Values.eTypeData.etdDouble))
                    End If
                End With
			
            Case Else
                insvalSequence = "insvalSequence: Código lógico no encontrado (" & Request.QueryString.Item("sCodispl") & ")"
			
        End Select
    End Function

    '% insPostSequence: Se realizan las actualizaciones de las ventanas
    '--------------------------------------------------------------------------------------------
    Function insPostSequence() As Boolean
        Dim lstrsn_infrac As String
        Dim lstrIrrevoc As String
        Dim lintCurrency As Object
        Dim lintLevels As String
        Dim lstrAction As String
        Dim lstrsrelapsing As String
        Dim lintCountCA012 As Integer
        Dim lstrContent As String
        Dim lintRole As Integer
        Dim lstrsreturn As String
        Dim lintCapital As String
        Dim nCover As Object
        Dim lclsRoles As ePolicy.Roles
        Dim mobjProduct_li As Object
        Dim nModulec As Object
        Dim lblnNotPopUp As Object
        Dim strAction As String
        Dim lcolBranchs As Object
        Dim lstrTyplevels As String
        Dim ldblPercent As Object
        '--------------------------------------------------------------------------------------------
        Dim lintIntermedia As Integer
        Dim lintIntermediaOld As Integer
        Dim lstrClient As String
        Dim lstrClientOld As String
        Dim lstrSmoking As Object
        Dim lobjClient As Object
        Dim lblnPost As Boolean
        Dim lintCountAux As Object
        Dim lstrSel As Object
        Dim lclsPolicy_Win As ePolicy.Policy_Win
        Dim lclsErrors As eFunctions.Errors
        Dim lobjDocuments As eReports.Report
        Dim llngTariff As Object
	
        lblnPost = True
	
        Dim lcolRoles As ePolicy.Roleses
        Dim lclsRefresh As ePolicy.ValPolicySeq
        Dim lclsReinsuran As ePolicy.Reinsuran
        Dim lclsBranch As ePolicy.Branchr
        Dim modjRoles As ePolicy.Roles
        Dim mobjtRehabilitate As ePolicy.TRehabilitate
        Dim lclsFunds_Pol As ePolicy.Funds_Pol
        Dim lclsDecla_benef As ePolicy.Decla_benef
        Dim mobjPolicySeq_educ As ePolicy.life_educ
        Dim mobjPolicySeq_lev As ePolicy.life_levels
        Select Case Request.QueryString.Item("sCodispl")
		
            '+ VI641: Criterios para seleción de riesgo
            Case "VI641"
                With Request
                    If .QueryString.Item("WindowType") = "PopUp" Then
                        lblnPost = mobjPolicySeq.InsPostVI641Upd(.QueryString("Action"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(.QueryString.Item("nModulec"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.QueryString.Item("nCover"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnConsec"), eFunctions.Values.eTypeData.etdDouble), Session("dNulldate"), Session("nUsercode"), Session("nTransaction"), eRemoteDB.Constants.intNull, .Form.Item("cbeSexinsur"), mobjValues.StringToType(.Form.Item("tcnAgestart"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnAgeend"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnCapstart"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnCapend"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeCrthecni"), eFunctions.Values.eTypeData.etdDouble, True))
                        mstrQueryString = "&nModulec=" & .QueryString.Item("nModulec") & "&nCover=" & .QueryString.Item("nCover")
                    Else
                        lblnPost = mobjPolicySeq.InsPostVI641(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("nUsercode"))
                    End If
                End With
			
                '+ CA727 - Reportes automáticos de la póliza
            Case "CA727"
                If Request.QueryString.Item("WindowType") = "PopUp" Then
                    lblnPost = mobjPolicySeq.insPostCA727(Request.QueryString.Item("Action"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Request.Form.Item("cbeCodispl"), mobjValues.StringToType(Request.Form.Item("cbeTransactype"), eFunctions.Values.eTypeData.etdDouble), Session("nUsercode"))
				
                    If lblnPost Then
                        lclsPolicy_Win = New ePolicy.Policy_Win
					
                        Call lclsPolicy_Win.Add_PolicyWin(Session("scertype"), Session("nBranch"), Session("nProduct"), Session("npolicy"), Session("ncertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("nUsercode"), "CA727", "2")
                    End If
                End If
			
                '+ VI665 - Recargo por actividad del grupo (Vida colectivo).
			
            Case "VI665"
                If Request.QueryString.Item("WindowType") = "PopUp" Then
                    mobjPolicySeq = New ePolicy.Activ_Group
                    lblnPost = mobjPolicySeq.insPostVI665Upd(Request.QueryString.Item("Action"), 0, Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Request.Form.Item("cbeGroup"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Request.Form.Item("cbeSpeciality"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(Request.Form.Item("tcnPercent"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdInteger))
                    If lblnPost Then
                        lclsPolicy_Win = New ePolicy.Policy_Win
					
                        Call lclsPolicy_Win.Add_PolicyWin(Session("scertype"), Session("nBranch"), Session("nProduct"), Session("npolicy"), Session("ncertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("nUsercode"), "VI665", "2")
                    End If
                End If
			
			
                '+ VI681 - Recargos/Descuentos de los asegurados (Vida)
            Case "VI681"
                If Request.QueryString.Item("WindowType") = "PopUp" Then
                    With Request
                        lblnPost = mobjPolicySeq.insPostVI681Upd(.QueryString("Action"), 0, mobjValues.StringToType(.Form.Item("hddnExist"), eFunctions.Values.eTypeData.etdInteger), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), Request.Form.Item("hddsClient"), mobjValues.StringToType(.Form.Item("cboDisexprc"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnModulec"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeCover"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), .Form.Item("cboDisexpri"), .Form.Item("chkUnit"), mobjValues.StringToType(.Form.Item("tcnRate"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnAmount"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("chkPermTemp"), mobjValues.StringToType(.Form.Item("tcdDate_Fr"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcdDate_to"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnAge"), eFunctions.Values.eTypeData.etdInteger), .Form.Item("tcnNotenum"), mobjValues.StringToType(.Form.Item("hddnAmount"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnRate"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddoldnDisexprc"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddoldnModulec"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddoldnCover"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeCause"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cboDisexprc_nCurrency"), eFunctions.Values.eTypeData.etdInteger))
                    End With
                End If
			
                '+ CA001: Tratamiento de pólizas
            Case "CA001_K"
                lblnPost = insPostCA001
                '+ CA003: Vía de cobro
            Case "CA003"
                With Request
                    lblnPost = mobjPolicySeq.insPostCA003(.QueryString("Action"), .Form.Item("tctClient"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("cbeBankExt"), eFunctions.Values.eTypeData.etdDouble, True), .Form.Item("valAccount"), mobjValues.StringToType(.Form.Item("cbeTyp_crecard"), eFunctions.Values.eTypeData.etdDouble, True), .Form.Item("optBank"), Session("nUsercode"), mobjValues.StringToType(.Form.Item("tcdDateExpir"), eFunctions.Values.eTypeData.etdDate), "", .Form.Item("tctBankAuth"), Session("nTransaction"), .Form.Item("valCredi_card"))
                End With
			
                '+ CA004: Datos para la facturación
            Case "CA004"
                With Request
                    lblnPost = mobjPolicySeq.insPostCA004(mobjValues.StringToType(.QueryString.Item("nHolder"), eFunctions.Values.eTypeData.etdInteger), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("sPolitype"), mobjValues.StringToType(Session("nTransaction"), eFunctions.Values.eTypeData.etdInteger), .Form.Item("tctClient"), .Form.Item("optFreq"), mobjValues.StringToType(.Form.Item("cbePayFreq"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeQuota"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("cbeIndexType"), .Form.Item("cbeIndexApl"), .Form.Item("chkNoNull"), mobjValues.StringToType(.Form.Item("tcdStartDate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcdExpirDate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcdIssuedat"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcdReqDate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnCopies"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnIndexRate"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnDaysNull"), eFunctions.Values.eTypeData.etdInteger), .Form.Item("chkDeclarative"), .Form.Item("chkFracti"), .Form.Item("chkRenewalAut"), .Form.Item("optDirTyp"), mobjValues.StringToType(.Form.Item("cbeWayPay"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnBillDay"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("valAgreement"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeSendAddr"), eFunctions.Values.eTypeData.etdInteger, True), .Form.Item("chksInsubank"), .Form.Item("chksNoPayRoll"), .Form.Item("chkExemption"), .Form.Item("chksLeg"), mobjValues.StringToType(.Form.Item("tcnDays_quot"), eFunctions.Values.eTypeData.etdInteger), .Form.Item("chkBill_Ind"), mobjValues.StringToType(.Form.Item("tcnDuration"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("valOrigin"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnAFPCommi"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("cbeCurrency"), eFunctions.Values.eTypeData.etdInteger, True))
                    If lblnPost Then
                        Session("dStartdate") = mobjValues.StringToType(.Form.Item("tcdStartDate"), eFunctions.Values.eTypeData.etdDate)
                        Session("dExpirdat") = mobjValues.StringToType(.Form.Item("tcdExpirDate"), eFunctions.Values.eTypeData.etdDate)
                    End If
                End With
                '+ Información general del colectivo
            Case "CA006"
                With Request
                    lblnPost = mobjPolicySeq.insPostCA006(Session("sCertype"), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(Session("nUserCode"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("sColtimre"), .Form.Item("cbeColInvot"), .Form.Item("cbeColReint"), mobjValues.StringToType(.Form.Item("tcnQCertif"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("txtTariff"), eFunctions.Values.eTypeData.etdInteger, True), .Form.Item("cbeTypClause"), .Form.Item("cbeTypDiscxp"), .Form.Item("cbeTypModule"), mobjValues.StringToType(Session("nTransaction"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("cbeColtPres"))
                End With
			
                '+ VI021: documentos solicitados
            Case "VI021"
                With Request
				
                    If .QueryString.Item("WindowType") = "PopUp" Then
                        If .QueryString.Item("Action") = "Add" Then
						
                            lcolRoles = New ePolicy.Roleses
                            If lcolRoles.Find_by_Policy(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), Request.QueryString.Item("sClient"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), eRemoteDB.Constants.intNull, 2, "1,13,16,25", True) Then
                                lclsRoles = lcolRoles.Item(1)
                                lintRole = lclsRoles.nRole
                            End If
                            'UPGRADE_NOTE: Object lclsRoles may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
                            lclsRoles = Nothing
                            'UPGRADE_NOTE: Object lcolRoles may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
                            lcolRoles = Nothing
                        Else
                            lintRole = mobjValues.StringToType(.Form.Item("hddnRole"), eFunctions.Values.eTypeData.etdDouble)
                        End If
                        lblnPost = mobjPolicySeq.InsPostVI021Upd(.QueryString("Action"), Session("sKey"), .Form.Item("tctDescript"), mobjValues.StringToType(.Form.Item("hddnCrThecni"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcdRecep_date"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("cbeStat_docreq"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("hddnModulec"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnCover"), eFunctions.Values.eTypeData.etdDouble), lintRole, .Form.Item("tctClient"), Session("nUsercode"), mobjValues.StringToType(.Form.Item("tcdDate_to"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcdDatefree"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("hddnEval"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcdDatevig"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnNotenum"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnCumul"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("cbeStatusdoc"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcdDocreq"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcdDocrec"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcdExpirda"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("hddnNotenum_cli"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnEval_master"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("hddnId"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("hddnExist"), eFunctions.Values.eTypeData.etdDouble, True))
					
                        mstrQueryString = "&sKey=" & Session("sKey")
                    Else
                        lblnPost = mobjPolicySeq.InsPostVI021(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("dNulldate"), Session("nUsercode"), Session("nTranstion"), .Form.Item("hddsKeyM"))
                    End If
                End With
			
                '+ CA008: Situaciones de riesgo.
            Case "CA008"
                mobjPolicySeq = New ePolicy.Situation
                If Request.QueryString.Item("WindowType") = "PopUp" Then
                    With Request
                        lblnPost = mobjPolicySeq.insPostCA008(.QueryString("Action"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(Session("nUserCode"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnSituation"), eFunctions.Values.eTypeData.etdInteger), .Form.Item("cbePolicyHolder"), .Form.Item("tctDescript"))
                    End With
                Else
                    lblnPost = True
                End If
                'UPGRADE_NOTE: Object mobjPolicySeq may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
                mobjPolicySeq = Nothing
			
                '+ CA009: Capitales Básicos Asegurados
            Case "CA009"
                With Request
                    If .QueryString.Item("WindowType") = "PopUp" Then
                        If mblnReload Then
                            mobjPolicySeq = New ePolicy.Sum_insur
                        End If
                        lblnPost = mobjPolicySeq.insPostCA009(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("nUsercode"), mobjValues.StringToType(.Form.Item("nSumins_cod"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnSumins_real"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnSum_insur"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnCoinsuran"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.QueryString.Item("nCurrency"), eFunctions.Values.eTypeData.etdDouble), Session("nTransaction"), .QueryString("Action"), mobjValues.StringToType(Session("dNulldate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("hddnSum_insur_old"), eFunctions.Values.eTypeData.etdDouble), Session("sPoliType"), Session("sBrancht"))
					
                        mstrQueryString = "&nCurrency=" & Request.QueryString.Item("nCurrency") & "&sCurrency=" & Request.QueryString.Item("sCurrency")
                    Else
                        lblnPost = True
                    End If
                End With
			
                '+ CA010 : Bienes asegurables a la póliza.   
            Case "CA010"
                With Request
                    If Not .QueryString.Item("WindowType") = vbNullString Then
                        If mblnReload Then
                            mobjPolicySeq = New ePolicy.Property_Renamed
                        End If
                        lblnPost = mobjPolicySeq.insPostCA010(mobjValues.StringToType(Session("nTransaction"), eFunctions.Values.eTypeData.etdInteger), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("nId"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToDate(Session("dEffecdate")), mobjValues.StringToType(Session("nUserCode"), eFunctions.Values.eTypeData.etdInteger), .QueryString("Action"), mobjValues.StringToType(.Form.Item("cbeTabGoods"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnCapital"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnMaxamount"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnFixamount"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnMinamount"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnRate"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("tctDescript"), .Form.Item("cbeFrandedi"), mobjValues.StringToType(.Form.Item("tcnNotenum"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("cbeCurrency"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnPremium"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnRateProp"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnServ_order"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("hddnVal_extra"), eFunctions.Values.eTypeData.etdDouble))
                    Else
                        lblnPost = True
                    End If
                End With
			
                '+ CA011 = Grupos de Colectivos
            Case "CA011"
                lclsPolicy_Win = New ePolicy.Policy_Win
			
                If Request.QueryString.Item("WindowType") = "PopUp" Then
                    Session("lblnNotPopUp") = "False"
                    With Request
                        lblnPost = mobjPolicySeq.insPostCA011(.QueryString("Action"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnGroup"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("tctDescript"), mobjValues.StringToType(.Form.Item("tcnParticip"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("cbeGroupStat"), mobjValues.StringToType(Session("nUserCode"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("nPriorGroupStat"), eFunctions.Values.eTypeData.etdDouble))
                    End With
                    If lblnPost Then
                        Session("lblnNotPopUp") = "True"
                    End If
				
                Else
                    lblnPost = True
                    If CStr(Session("lblnNotPopUp")) = "True" Then
                        lclsPolicy_Win = New ePolicy.Policy_Win
                        Call lclsPolicy_Win.Add_PolicyWin(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("nUsercode"), "CA011", "2")
                    End If
                End If
			
                '+ CA012: Elementos de Protección            
            Case "CA012"
                lclsPolicy_Win = New ePolicy.Policy_Win
                If Request.QueryString.Item("WindowType") = "PopUp" Then
                    With Request
                        'UPGRADE_WARNING: Date was upgraded to Today and has a new behavior. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1041.aspx'
                        lblnPost = mobjPolicySeq.insPostCA012(.QueryString("Action"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(.Form.Item("tcnElement"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("cbeCurrency"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnDiscount"), eFunctions.Values.eTypeData.etdDouble, True), CStr(Today), mobjValues.StringToType(.Form.Item("tcnDisrate"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnMaxAmount"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnMinAmount"), eFunctions.Values.eTypeData.etdDouble, True), Session("dNullDate"), Session("nUsercode"), .Form.Item("tctDescript"))
                        If lblnPost Then
                            '+ Se actualiza la imagen de Contenido en el Frame de la izquierda del Browser
                            Call lclsPolicy_Win.Add_PolicyWin(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("nUsercode"), "CA012", "2")
                        End If
                    End With
                Else
                    With Request
                        For lintCountCA012 = 1 To CInt(.Form.Item("hddnCount"))
                            Select Case .Form.GetValues("hddsAuxSelh").GetValue(lintCountCA012 - 1)
                                Case "1"
                                    lstrAction = "Add"
                                Case "2"
                                    lstrAction = "Del"
                            End Select
						
                            mobjPolicySeq = New ePolicy.Protection
                            'UPGRADE_WARNING: Date was upgraded to Today and has a new behavior. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1041.aspx'
                            lblnPost = mobjPolicySeq.insPostCA012(lstrAction, Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(.Form.GetValues("hddnElement").GetValue(lintCountCA012 - 1), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.GetValues("hddnCurrency").GetValue(lintCountCA012 - 1), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.GetValues("hddnDiscount").GetValue(lintCountCA012 - 1), eFunctions.Values.eTypeData.etdDouble, True), CStr(Today), mobjValues.StringToType(.Form.GetValues("hddnDisrate").GetValue(lintCountCA012 - 1), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.GetValues("hddnMaxAmount").GetValue(lintCountCA012 - 1), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.GetValues("hddnMinAmount").GetValue(lintCountCA012 - 1), eFunctions.Values.eTypeData.etdDouble, True), Session("dNullDate"), Session("nUsercode"), .Form.Item("tctDescript"))
                        Next
                    End With
                End If
			
			
                '+ CA013: Módulos de la Póliza Individual o Certificado
            Case "CA013", "CA013A"
                mobjPolicySeq = New ePolicy.Modules
                With Request
                    If .QueryString.Item("WindowType") = "PopUp" Then
                        lblnPost = mobjPolicySeq.InsPostCA013Upd(.QueryString("sCodispl"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(.Form.Item("valModulec"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), .Form.Item("chkChange"), .Form.Item("hddsChange"), Session("nTransaction"), mobjValues.StringToType(.QueryString.Item("nCurrency"), eFunctions.Values.eTypeData.etdDouble), Session("nUserCode"), Session("sPoliType"), Session("sBrancht"), Session("SessionId"), .QueryString("Action"), .QueryString("sTyp_module"), mobjValues.StringToType(.QueryString.Item("nGroup"), eFunctions.Values.eTypeData.etdDouble))
					
                        mstrQueryString = "&nGroup=" & Request.QueryString.Item("nGroup") & "&nCurrency=" & Request.QueryString.Item("nCurrency")
                    Else
                        lblnPost = mobjPolicySeq.InsPostCA013(.QueryString("sCodispl"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("nUserCode"))
                    End If
                End With
			
            Case "CA014", "CA014A"
                '+ Se agrega el seteo del objeto para cuando el sistema arroaja advertencias
                mobjPolicySeq = New ePolicy.Cover
                With Request
                    If .QueryString.Item("ActionType") = "Check" Then
                        If .Form.Item("hddsExist").Length = 1 Then
                            lblnPost = mobjPolicySeq.InsPostCA014Upd(.QueryString("sCodispl"), .Form.Item("hddsKeyGrid"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(.Form.Item("cbeCurrencDes"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnCapital"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnRateCove"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnPremium"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnCover"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnGroup"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnModulec"), eFunctions.Values.eTypeData.etdInteger), .Form.Item("hddsFrandedi"), .Form.Item("hddsWait_type"), .Form.Item("hddsFrancApl"), mobjValues.StringToType(.Form.Item("hddnDisc_amoun"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("hddnFraRate"), eFunctions.Values.eTypeData.etdDouble, True), .Form.Item("hddsChange"), mobjValues.StringToType(.Form.Item("hddnCapital_o"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnDiscount"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("hddnFixAmount"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("hddnMaxAmount"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("hddnMinAmount"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("hddnWaitQ"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("hddnCapital_Wait"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("hddnAgeminins"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("hddnAgemaxins"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("hddnAgemaxper"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("hddnTypdurins"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("hddnDurinsur"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("hddnTypdurpay"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("hddnDurpay"), eFunctions.Values.eTypeData.etdInteger, True), "3", mobjValues.StringToType(.Form.Item("hddnRole"), eFunctions.Values.eTypeData.etdInteger), .QueryString("sClient"), mobjValues.StringToType(.Form.Item("hddnCapital_o"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnRatecove_o"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnPremium_o"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnAgemininsf"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnAgemaxinsf"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnAgemaxperf"), eFunctions.Values.eTypeData.etdInteger), .Form.Item("chkRequired"), .Form.Item("chkDefaulti"), mobjValues.StringToType(.Form.Item("hddnBranch_Rei"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnRetarif"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnCauseupd"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hdddfer"), eFunctions.Values.eTypeData.etdDate), Session("sPolitype"), .QueryString("Action"))
						
						
                            If mblnReload Then
                                mstrScript = "top.opener.top.frames['fraFolder'].document.forms[0].Sel.checked=" & .QueryString.Item("sChecked") & "true;" & "top.opener.top.frames['fraFolder'].marrArray[0].Sel =" & .QueryString.Item("sChecked") & "true;"
                            End If
                        Else
                            lblnPost = mobjPolicySeq.InsPostCA014Upd(.QueryString("sCodispl"), .Form.GetValues("hddsKeyGrid").GetValue(CShort(.QueryString("nIndex")) - 1), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(.Form.Item("cbeCurrencDes"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.GetValues("hddnCapital").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.GetValues("hddnRateCove").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.GetValues("hddnPremium").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.GetValues("hddnCover").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnGroup"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.GetValues("hddnModulec").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger), .Form.GetValues("hddsFrandedi").GetValue(CShort(.QueryString("nIndex")) - 1), .Form.GetValues("hddsWait_type").GetValue(CShort(.QueryString("nIndex")) - 1), .Form.GetValues("hddsFrancApl").GetValue(CShort(.QueryString("nIndex")) - 1), mobjValues.StringToType(.Form.GetValues("hddnDisc_amoun").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.GetValues("hddnFraRate").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble, True), .Form.GetValues("hddsChange").GetValue(CShort(.QueryString("nIndex")) - 1), mobjValues.StringToType(.Form.GetValues("hddnCapital_o").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.GetValues("hddnDiscount").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.GetValues("hddnFixAmount").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.GetValues("hddnMaxAmount").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.GetValues("hddnMinAmount").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.GetValues("hddnWaitQ").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.GetValues("hddnCapital_Wait").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.GetValues("hddnAgeminins").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.GetValues("hddnAgemaxins").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.GetValues("hddnAgemaxper").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.GetValues("hddnTypdurins").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.GetValues("hddnDurinsur").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.GetValues("hddnTypdurpay").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.GetValues("hddnDurpay").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger, True), "3", mobjValues.StringToType(.Form.GetValues("hddnRole").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger), .QueryString("sClient"), mobjValues.StringToType(.Form.GetValues("hddnCapital_o").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.GetValues("hddnRatecove_o").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.GetValues("hddnPremium_o").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.GetValues("hddnAgemininsf").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.GetValues("hddnAgemaxinsf").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.GetValues("hddnAgemaxperf").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger), .Form.Item("chkRequired"), .Form.Item("chkDefaulti"), mobjValues.StringToType(.Form.GetValues("hddnBranch_Rei").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.GetValues("hddnRetarif").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.GetValues("hddnCauseupd").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.GetValues("hdddfer").GetValue(CShort(.QueryString("nIndex")) - 1), eFunctions.Values.eTypeData.etdDate), Session("sPolitype"), .QueryString("Action"))
						
						If mblnReload Then
							mstrScript = "top.opener.top.frames['fraFolder'].document.forms[0].Sel[" & CStr(CShort(.QueryString.Item("nIndex")) - 1) & "].checked=" & .QueryString.Item("sChecked") & "true;" & "top.opener.top.frames['fraFolder'].marrArray[" & CStr(CShort(.QueryString.Item("nIndex")) - 1) & "].Sel =" & .QueryString.Item("sChecked") & "true;"
						End If
					End If
				Else
					If .QueryString.Item("WindowType") = "PopUp" Then
						lblnPost = mobjPolicySeq.InsPostCA014Upd(.QueryString("sCodispl"), .Form.Item("hddsKeyGrid"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(.Form.Item("hddnCurrency"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnCapital"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnRateCove"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnPremium"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnCover"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnGroup"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnModulec"), eFunctions.Values.eTypeData.etdInteger), .Form.Item("cbeFrandedi"), .Form.Item("cbeWait_type"), .Form.Item("cbeFrancApl"), mobjValues.StringToType(.Form.Item("tcnDisc_amoun"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnFraRate"), eFunctions.Values.eTypeData.etdDouble, True), .Form.Item("hddsChange"), mobjValues.StringToType(.Form.Item("hddnCapital_o"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnDiscount"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnFixAmount"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnMaxAmount"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnMinAmount"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnWaitQ"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnCapital_wait"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnAgeminins"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnAgemaxins"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnAgemaxper"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("cbeTypdurins"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnDurinsur"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("cbeTypdurpay"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnDurpay"), eFunctions.Values.eTypeData.etdInteger, True), "3", mobjValues.StringToType(.Form.Item("hddnRole"), eFunctions.Values.eTypeData.etdInteger, True), .Form.Item("hddsClient"), mobjValues.StringToType(.Form.Item("hddnCapital_o"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnRatecove_o"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnPremium_o"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnAgemininsf"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnAgemaxinsf"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnAgemaxperf"), eFunctions.Values.eTypeData.etdInteger, True), .Form.Item("chkRequired"), .Form.Item("chkDefaulti"), mobjValues.StringToType(.Form.Item("cbeBranch_rei"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("cbeRetarif"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("cbeCauseupd"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcdFer"), eFunctions.Values.eTypeData.etdDate), Session("sPolitype"))
						
						mstrQueryString = "&nRole=" & Request.Form.Item("hddnRole") & "&sKey=" & Request.Form.Item("hddsKeyGrid") & "&nGroup=" & Request.Form.Item("hddnGroup") & "&nCurrency=" & Request.Form.Item("hddnCurrency") & "&sClient=" & Request.Form.Item("hddsClient") & "&nIndexCover=" & Request.Form.Item("hddsIndexCover") & "&sDelTCover=0&sRecPopup=1"
					Else
						lblnPost = mobjPolicySeq.InsPostCA014(.Form.Item("hddsKey"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("valGroup"), eFunctions.Values.eTypeData.etdInteger), Session("nTransaction"), Session("dNulldate"), mobjValues.StringToType(.QueryString.Item("nRole"), eFunctions.Values.eTypeData.etdInteger), .QueryString("sClient"), Session("sBrancht"), mobjValues.StringToType(.Form.Item("hddnProdclas"), eFunctions.Values.eTypeData.etdInteger), Session("nUsercode"), .QueryString("sCodispl"), .QueryString("nIndexCover"), mobjValues.StringToType(.Form.Item("tcnLeg"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnDataFound"), eFunctions.Values.eTypeData.etdInteger))
						
						'+ Si se efectúa la actualización puntual se recarga la página.
						If CBool(IIf(IsNothing(Request.Form.Item("hddbPuntual")), False, Request.Form.Item("hddbPuntual"))) Then
							lclsErrors = New eFunctions.Errors
							'+ Se manda un mensaje indicando que ya se actualizaron los datos en la tabla
							Response.Write(lclsErrors.ErrorMessage(Request.QueryString.Item("sCodispl"), 55881,  ,  ,  , True))
							'UPGRADE_NOTE: Object lclsErrors may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
							lclsErrors = Nothing
							Response.Write("<SCRIPT>top.frames['fraFolder'].document.location.href=top.frames['fraFolder'].document.location.href.replace(/&sDelTCover=.*/,'') + '&sDelTCover=' </" & "Script>")
							lblnPost = False
						End If
					End If
				End If
			End With
			
			'+ CA015: Franquicia/Deducible de la Póliza
		Case "CA015", "CA15-1"
			With Request
				lblnPost = mobjPolicySeq.insPostCA015(Request.QueryString.Item("sCodispl"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdDouble), CStr(Session("nTransaction")), Application("cstrTypeCompany"), .Form.Item("optFranchiseType"), .Form.Item("cbeFranqApl"), mobjValues.StringToType(.Form.Item("cbeCurrencyFD"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnDiscountPerc"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnDiscountAmou"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnFranchisePerc"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnFranchiseAmou"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnFranchiseMin"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnFranchiseMax"), eFunctions.Values.eTypeData.etdDouble), Session("sPolitype"))
			End With
			
			'+ CA016: Recargos/descuentos/impuestos de una póliza individual o certificado
		Case "CA016", "CA016A"
			With Request
				If .QueryString.Item("WindowType") = "PopUp" Then
					lblnPost = mobjPolicySeq.InsPostCA016Upd(.Form.Item("hddnExist"), "1", Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), mobjValues.StringToType(.QueryString.Item("nGroup"), eFunctions.Values.eTypeData.etdInteger), Session("nCertif"), mobjValues.StringToType(.Form.Item("hddnDisc_code"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("nTransaction"), mobjValues.StringToType(.Form.Item("tcnAmount"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnCurrency"), eFunctions.Values.eTypeData.etdInteger), Session("dNulldate"), mobjValues.StringToType(.Form.Item("tcnPercent"), eFunctions.Values.eTypeData.etdDouble), Session("sPoliType"), .QueryString("sTyp_discxp"), mobjValues.StringToType(.Form.Item("cbeCause"), eFunctions.Values.eTypeData.etdInteger), Session("nUsercode"))
				Else
					lblnPost = mobjPolicySeq.InsPostCA016(.QueryString("sCodispl"), .Form.Item("hddsSel"), .Form.Item("hddnExist"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), mobjValues.StringToType(.Form.Item("valGroup"), eFunctions.Values.eTypeData.etdInteger), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), .Form.Item("hddnCurrency"), Session("dNulldate"), .Form.Item("hddnDisc_code"), .Form.Item("hddnAmount"), .Form.Item("hddnPercent"), eRemoteDB.Constants.intNull, Session("nUsercode"), Session("nTransaction"))
					'+ Si se efectúa la actualización puntual se recarga la página.
					If CBool(IIf(IsNothing(.Form.Item("hddbPuntual")), False, .Form.Item("hddbPuntual"))) Then
						lclsErrors = New eFunctions.Errors
						'+ Se manda un mensaje indicando que ya se actualizaron los datos en la tabla
						Response.Write(lclsErrors.ErrorMessage(Request.QueryString.Item("sCodispl"), 55881,  ,  ,  , True))
						'UPGRADE_NOTE: Object lclsErrors may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
						lclsErrors = Nothing
						Response.Write("<SCRIPT>top.frames['fraFolder'].document.location=top.frames['fraFolder'].document.location</" & "Script>")
						lblnPost = False
					End If
				End If
				If mobjPolicySeq.nChangeDisc_xprem = 1 Then
					lclsRefresh = New ePolicy.ValPolicySeq
					Response.Write(lclsRefresh.RefreshSequence(Request.QueryString.Item("sCodispl"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("sBrancht"), Session("sPolitype"), "Yes"))
					'UPGRADE_NOTE: Object lclsRefresh may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
					lclsRefresh = Nothing
					
					
				End If
				
			End With
			
			'+ CA017: Emisión de Recibos de una póliza 
		Case "CA017"
			lclsPolicy_Win = New ePolicy.Policy_Win
			lblnPost = lclsPolicy_Win.Add_PolicyWin(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("nUsercode"), "CA017", "2")
			
			'+ CA017A: Cuotas de un recibo 
		Case "CA017A"
			lclsPolicy_Win = New ePolicy.Policy_Win
			lblnPost = lclsPolicy_Win.Add_PolicyWin(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("nUsercode"), "CA017A", "2")
			
			'+ CA020: Distribución de Coaseguro
		Case "CA020"
			With Request
				If .QueryString.Item("WindowType") = "PopUp" Then
					lblnPost = mobjPolicySeq.insPostCA020(.QueryString("WindowType"), .QueryString("Action"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("valCompany"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnShare"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnExpenses"), eFunctions.Values.eTypeData.etdDouble, True))
				Else
					lblnPost = mobjPolicySeq.insPostCA020(.QueryString("WindowType"), "Add", Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Application("nCompany"), mobjValues.StringToType(.Form.Item("tcnOwnShare"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnExpenses"), eFunctions.Values.eTypeData.etdDouble, True))
				End If
			End With
			
			'+ CA021: Distribución de Reaseguro
		Case "CA021"
			
			Select Case Request.QueryString.Item("Action")
				Case "Add"
					strAction = "1"
				Case "Update"
					strAction = "2"
				Case "Delete"
					strAction = "3"
			End Select
			
			If Request.QueryString.Item("WindowType") = "PopUp" Then
				If Request.Form.Item("blnContract") = "True" Then
					lclsReinsuran = New ePolicy.Reinsuran
					With lclsReinsuran
						.nStatusInstance = 2
						.sCertype = Session("sCertype")
						.nBranch = Session("nBranch")
						.nProduct = Session("nProduct")
						.nPolicy = Session("nPolicy")
						.nCertif = Session("nCertif")
						.nBranch_rei = mobjValues.StringToType(Request.Form.Item("cbeBranchrei"), eFunctions.Values.eTypeData.etdInteger)
						.nModulec = mobjValues.StringToType(Request.Form.Item("tcnModulec"), eFunctions.Values.eTypeData.etdInteger)
						.nCover = mobjValues.StringToType(Request.Form.Item("valCover"), eFunctions.Values.eTypeData.etdInteger)
						.sClient = Request.Form.Item("valClient")
						.nType = mobjValues.StringToType(Request.Form.Item("cbeContract"), eFunctions.Values.eTypeData.etdInteger)
						.dEffecdate = mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate)
						.nCompany = Application("nCompany")
						.dAccedate = eRemoteDB.Constants.dtmNull
						.nCapital = mobjValues.StringToType(Request.Form.Item("tcnParticip"), eFunctions.Values.eTypeData.etdDouble)
						.nCapitalMax = mobjValues.StringToType(Request.Form.Item("tcnCapitalMax"), eFunctions.Values.eTypeData.etdDouble)
						.nCommissi = 0
						.nCurrency = mobjValues.StringToType(Request.Form.Item("tcnCurrency"), eFunctions.Values.eTypeData.etdInteger)
						.sHeap_code = Request.Form.Item("tctHeap_code")
						.nInter_rate = 0
						.nNumber = mobjValues.StringToType(Request.Form.Item("tcnNumber"), eFunctions.Values.eTypeData.etdInteger)
						.nReser_rate = 0
						.nShare = System.Math.Round(CDbl(mobjValues.StringToType(Request.Form.Item("tcnPercentage"), eFunctions.Values.eTypeData.etdDouble)), 6)
						.nUsercode = Session("nUsercode")
						.dNulldate = Session("dNullDate")
						.sManualMov = "1"
						.nChange = 4
					End With
					lblnPost = lclsReinsuran.Update(False)
					mstrQueryString = "&nQueryModeF=4"
					
					'UPGRADE_NOTE: Object lclsReinsuran may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
					lclsReinsuran = Nothing
				Else
					
					'+Grid de Facultativo
					'+Se actualiza la distribucion cuando se indica el monto por distribuir a facultativo
					If Request.Form.Item("tctPopUpT") = "F" Then
						mobjPolicySeq = New ePolicy.Reinsuran
						
						lblnPost = mobjPolicySeq.insPostCA021upd(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("dNulldate"), mobjValues.StringToType(Request.Form.Item("cbeBranchrei"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Request.Form.Item("tcnModulec"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Request.Form.Item("valCover"), eFunctions.Values.eTypeData.etdInteger), Request.Form.Item("valClient"), mobjValues.StringToType(Request.Form.Item("tcnType"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Request.Form.Item("cbeCompany"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Request.Form.Item("tcdAcceptDate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(Request.Form.Item("tcnParticip"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Request.Form.Item("tcnComission"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Request.Form.Item("tcnCurrency"), eFunctions.Values.eTypeData.etdDouble), Request.Form.Item("tctHeap_code"), mobjValues.StringToType(Request.Form.Item("tcnInter_rate"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Request.Form.Item("tcnNumber"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Request.Form.Item("tcnReser_rate"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Request.Form.Item("tcnPercentage"), eFunctions.Values.eTypeData.etdDouble), Session("nUserCode"), strAction, Request.Form.Item("tctBrancht"))
						
						mstrQueryString = "&nQueryModeF=4"
						
						strAction = Nothing
					Else
						
						lclsBranch = New ePolicy.Branchr
						
						lclsBranch.nRetention = CDbl(Request.Form.Item("tcnRetention"))
						lclsBranch.nCapital = CDbl(Request.Form.Item("tcnCapital"))
						lclsBranch.nModulec = CInt(Request.Form.Item("tcnModulec"))
						lclsBranch.nCover = CInt(Request.Form.Item("valCover"))
						lclsBranch.sClient = Request.Form.Item("valClient")
						lclsBranch.nCurrency = CInt(Request.Form.Item("cbeCurren_pol"))
						lclsBranch.nBranchRei = CInt(Request.Form.Item("cbeBranchrei"))
						
						'+Se realiza el recalculo cuando existe monto por distribuir.
						If Not lclsBranch.nRetention > lclsBranch.nCapital Then
							lblnPost = lclsBranch.ReloadReinsuranPol(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Request.Form.Item("tctBrancht"), vbNullString, Request.Form.Item("tctHeapCode"), CInt(Request.Form.Item("cbeChange")), CInt(Request.Form.Item("valCover")))
							
							mstrQueryString = "&nChange=" & Request.Form.Item("cbeChange")
							
						End If
						'UPGRADE_NOTE: Object lclsBranch may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
						lclsBranch = Nothing
					End If
				End If
				'+Cuando se acepta la CA021
			Else
				lclsReinsuran = New ePolicy.Reinsuran
				
                    'lblnPost = lclsReinsuran.insPostCA021(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), Session("dEffecdate"), Request.Form.Item("tctBranchtH"), Request.Form.Item("tctCumReint"), Request.Form.Item("tctHeapCode"), Request.Form.Item("tcnCoinsuShare"), Request.Form.Item("tcnChange"), 2, Session("nUsercode"))
                    lblnPost = lclsReinsuran.insPostCA021(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), Session("dEffecdate"), Session("nUsercode"), 2)
				'UPGRADE_NOTE: Object lclsReinsuran may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
				lclsReinsuran = Nothing
			End If
			
			
			'+ CA022: Cláusula/descriptivo/condición especial        
		Case "CA022"
			With Request
				If Request.QueryString.Item("WindowType") = "PopUp" Then
					mobjPolicySeq = New ePolicy.Clause
					lblnPost = mobjPolicySeq.InsPostCA022(.QueryString("sCodispl"), .QueryString("Action"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.QueryString.Item("nId"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("valClause"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("valInsured"), mobjValues.StringToType(.Form.Item("hddModulec"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddCover"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeCause"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddGroup_insu"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddNoteNum"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnIniNote"), eFunctions.Values.eTypeData.etdDouble), Session("nUsercode"), Session("nTransaction"), Session("dNulldate"))
				End If
			End With
			
			'+ CA022A: Cláusulas de la póliza matriz
		Case "CA022A"
			With Request
				lblnPost = mobjPolicySeq.insPostCA022A(.QueryString("sCodispl"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("nUsercode"), .Form.Item("hddnClause"), .Form.Item("hddnSelClause"), .Form.Item("hddNoteNum"), mobjValues.StringToType(.Form.Item("valGroup"), eFunctions.Values.eTypeData.etdDouble))
				If lblnPost Then
					'+ Si se efectúa la actualización puntual se recarga la página.
					If CBool(IIf(IsNothing(.Form.Item("hddbPuntual")), False, .Form.Item("hddbPuntual"))) Then
						lclsErrors = New eFunctions.Errors
						'+ Se manda un mensaje indicando que ya se actualizaron los datos en la tabla
						Response.Write(lclsErrors.ErrorMessage(Request.QueryString.Item("sCodispl"), 55881,  ,  ,  , True))
						'UPGRADE_NOTE: Object lclsErrors may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
						lclsErrors = Nothing
						Response.Write("<SCRIPT>top.frames['fraFolder'].document.location=top.frames['fraFolder'].document.location</" & "Script>")
						lblnPost = False
					End If
				End If
			End With
			
			'+ CA023: Beneficiarios identificados por código
		Case "CA023"
			If Request.QueryString.Item("WindowType") = "PopUp" Then
				With Request
					nCover = .Form.Item("valCover")
					If nCover = "" Then
						nCover = 0
					End If
					nModulec = .Form.Item("valModulec")
					If nModulec = "" Then
						nModulec = 0
					End If
					If .Form.Item("chkIrrevoc") = "1" Then
						lstrIrrevoc = "1"
					Else
						lstrIrrevoc = "2"
					End If
					lblnPost = mobjPolicySeq.insPostCA023(.QueryString("Action"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), .Form.Item("dtcClient"), mobjValues.StringToType(.Form.Item("tcnParticip"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeRelation"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(nModulec, eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(nCover, eFunctions.Values.eTypeData.etdDouble), Session("nUserCode"), mobjValues.StringToType(.Form.Item("tcddatedecla"), eFunctions.Values.eTypeData.etdDate), lstrIrrevoc)
				End With
			End If
			
			'+ CA024: Intermediarios
		Case "CA024"
			With Request
				If CBool(IIf(IsNothing(.QueryString.Item("bAll")), False, .QueryString.Item("bAll"))) Then
					ldblPercent = mobjValues.StringToType(.Form.Item("tcnPercentCF"), eFunctions.Values.eTypeData.etdDouble, True)
				Else
					ldblPercent = mobjValues.StringToType(.QueryString.Item("nPercent"), eFunctions.Values.eTypeData.etdDouble, True)
				End If
				'+ bAll = false para actualizar comisiones por registro de la grilla 
				lblnPost = mobjPolicySeq.insPostCA024(.QueryString("bAll"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("nUsercode"), .Form.Item("cbeType"), ldblPercent, .Form.Item("hddInd_Comm"), mobjValues.StringToType(.Form.Item("valIntermed"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeRole"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnShare"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnAmount"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("hddConColl"), .QueryString("Action"), Session("nTransaction"), mobjValues.StringToType(.Form.Item("cbeAgreement"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnPercent_ce"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnInstallcom"), eFunctions.Values.eTypeData.etdDouble))
			End With
			
			'+CA025: Cliente de la póliza
		Case "CA025"
			modjRoles = New ePolicy.Roles
			With Request
				If Request.QueryString.Item("WindowType") = "PopUp" Then
					If mobjValues.StringToType(.Form.Item("cbeRole"), eFunctions.Values.eTypeData.etdInteger) = 13 Then
						lstrClient = vbNullString
						lstrClientOld = vbNullString
						lintIntermedia = mobjValues.StringToType(.Form.Item("tctCode"), eFunctions.Values.eTypeData.etdInteger, True)
						lintIntermediaOld = mobjValues.StringToType(.Form.Item("hddsOldCode"), eFunctions.Values.eTypeData.etdInteger, True)
					Else
						lstrClient = .Form.Item("tctCode")
						lstrClientOld = .Form.Item("hddsOldCode")
						lintIntermedia = eRemoteDB.Constants.intNull
						lintIntermediaOld = eRemoteDB.Constants.intNull
					End If
					
					modjRoles.bCreateInsured = mblnCreateInsured
                        lblnPost = modjRoles.InsPostCA025Upd(.QueryString("Action"), Session("nTransaction"), mobjValues.StringToType(.Form.Item("hddnExist"), eFunctions.Values.eTypeData.etdInteger), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(.Form.Item("cbeRole"), eFunctions.Values.eTypeData.etdInteger), lstrClient, mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), lintIntermedia, Session("sBrancht"), mobjValues.StringToType(.Form.Item("tcdBirthdate"), eFunctions.Values.eTypeData.etdDate), .Form.Item("cbeSexclien"), .Form.Item("chkSmoking"), .Form.Item("chkTyperisk"), .Form.Item("chkVIP"), mobjValues.StringToType(.Form.Item("tcnRating"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("cbeStatusrol"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnItem"), eFunctions.Values.eTypeData.etdInteger, True), Session("sPolitype"), .Form.Item("hddsCompon"), lstrClientOld, lintIntermediaOld, Session("nUsercode"), mobjValues.StringToType(.Form.Item("cbeTypename"), eFunctions.Values.eTypeData.etdInteger, True), Date.MinValue, 0, String.Empty, String.Empty, Date.MinValue,mobjValues.StringToType(.Form.Item("valContrat_Pay"), eFunctions.Values.eTypeData.etdDouble, True), String.Empty)
				Else
					
					lblnPost = modjRoles.InsPostCA025(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("nUsercode"))
				End If
				'UPGRADE_NOTE: Object modjRoles may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
				modjRoles = Nothing
			End With
			
			'+ CA027: Emisión de recibo automático
		Case "CA027"
			If CStr(Session("sCodisplOri")) = "CA034" Then
				'+ Se ejecuta reporte de la transaccón CA034 cuando es llamada de dicha transacción
				
				If Request.QueryString.Item("sExeReport") = "1" Then
					mobjtRehabilitate = New ePolicy.TRehabilitate
					Call mobjtRehabilitate.Inscalrehabilitate(mobjValues.StringToType(Request.QueryString.Item("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Request.QueryString.Item("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Request.QueryString.Item("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Request.QueryString.Item("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Request.QueryString.Item("dNullDate"), eFunctions.Values.eTypeData.etdDate), CInt(Request.QueryString.Item("nExeMode")), mobjValues.StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Request.QueryString.Item("chkNullReceipt"), eFunctions.Values.eTypeData.etdInteger))
					Session("sKey") = mobjtRehabilitate.sKey
					
					'UPGRADE_NOTE: Object mobjtRehabilitate may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
					mobjtRehabilitate = Nothing
					lobjDocuments = New eReports.Report
					With lobjDocuments
						.ReportFilename = "CAL034.rpt"
						.sCodispl = "CAL034"
						.setStorProcParam(1, Session("sKey"))
						.setStorProcParam(2, mobjValues.StringToType(Request.QueryString.Item("nAgency"), eFunctions.Values.eTypeData.etdDouble))
						
						Response.Write((.Command))
					End With
					'UPGRADE_NOTE: Object lobjDocuments may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
					lobjDocuments = Nothing
				End If
			Else
				'+ Se ejecuta reporte de la transaccón CA033 cuando es llamada de dicha transacción
				If CStr(Session("sCodisplOri")) = "CA033" Then
					If Request.QueryString.Item("sExeReport") = "1" Then
						lobjDocuments = New eReports.Report
						With lobjDocuments
							.ReportFilename = "CAL033.rpt"
							.sCodispl = "CAL033"
							.setStorProcParam(1, Request.QueryString.Item("sCertype"))
							.setStorProcParam(2, mobjValues.StringToType(Request.QueryString.Item("nBranch"), eFunctions.Values.eTypeData.etdDouble))
							.setStorProcParam(3, mobjValues.StringToType(Request.QueryString.Item("nProduct"), eFunctions.Values.eTypeData.etdDouble))
							.setStorProcParam(4, mobjValues.StringToType(Request.QueryString.Item("nPolicy"), eFunctions.Values.eTypeData.etdDouble))
							.setStorProcParam(5, mobjValues.StringToType(Request.QueryString.Item("nCertif"), eFunctions.Values.eTypeData.etdDouble))
							.setStorProcParam(6, .setdate(Request.QueryString.Item("dNullDate")))
							.setStorProcParam(7, Request.QueryString.Item("sNullReceipt"))
							.setStorProcParam(8, Request.QueryString.Item("nExeMode"))
							.setStorProcParam(9, mobjValues.StringToType(Request.QueryString.Item("nAgency"), eFunctions.Values.eTypeData.etdDouble))
							.setStorProcParam(10, mobjValues.StringToType(Request.QueryString.Item("soptReceipt"), eFunctions.Values.eTypeData.etdDouble))
							.setStorProcParam(11, Session("sKey"))
							
							Response.Write((.Command))
						End With
						'UPGRADE_NOTE: Object lobjDocuments may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
						lobjDocuments = Nothing
					End If
				End If
			End If
			
			lblnPost = True
			
			'+ CA639: Condición de capitales
		Case "CA639"
			If Request.QueryString.Item("WindowType") = "PopUp" Then
				With Request
					lblnPost = mobjPolicySeq.insPostCA639(.QueryString("Action"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), mobjValues.StringToType(.Form.Item("cbeGroup"), eFunctions.Values.eTypeData.etdDouble), Session("nCertif"), mobjValues.StringToType(.Form.Item("cbeModulec"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeCover"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeRole"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("cbeTipcap"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnAmount"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnPercent"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnRent"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnCurrency"), eFunctions.Values.eTypeData.etdDouble), Session("nUsercode"))
				End With
			End If
			
			'**+ VI006:	Investments Funds.
			'+ VI006: Fondos de inversiones.
			
		Case "VI006"
			
			lclsFunds_Pol = New ePolicy.Funds_Pol
			
			With Request
				If .QueryString.Item("WindowType") = "PopUp" Then
					lblnPost = lclsFunds_Pol.insPostVI006(.QueryString.Item("sCodispl"), .QueryString.Item("Action"), mobjValues.StringToType(.Form.Item("tcnFunds"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnParticip"), eFunctions.Values.eTypeData.etdInteger), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), Session("nUsercode"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(Session("dNulldate"), eFunctions.Values.eTypeData.etdDate), Session("nTransaction"), "2")
				Else
					lblnPost = True
				End If
				
				'UPGRADE_NOTE: Object lclsFunds_Pol may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
				lclsFunds_Pol = Nothing
			End With
			
			'+ IN010: Datos particulares de incendio
		Case "IN010"
			With Request
				lblnPost = mobjPolicySeq.InsPostIN010("Update", "IN010", Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("cboArticle"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cboDetailArt"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeConstCat"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnFloor_quan"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeSpCombType"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeSideCloseType"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnIndPeriod"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeRooftype"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeBuildType"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeSeismicZone"), eFunctions.Values.eTypeData.etdDouble), "", mobjValues.StringToType(Session("nTransaction"), eFunctions.Values.eTypeData.etdInteger), eRemoteDB.Constants.intNull, eRemoteDB.Constants.intNull, mobjValues.StringToType(.Form.Item("tcnDep_prem"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("cbeDecla_Freq"), .Form.Item("cbeDecla_Type"), Session("nUsercode"))
				Session("IN010") = lblnPost
			End With
			
			'+ VI001: Interés Asegurable
		Case "VI001"
			With Request
				lblnPost = mobjPolicySeq.InsPostVI001("Update", "VI001", Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), Session("dEffecdate"), Session("nUsercode"), mobjValues.StringToType(.Form.Item("tcnCapital"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnInsurTimeAge"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnInsurTimeAgeLimit"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnPerNunMi"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnPremTime"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("tctIduraind"), mobjValues.StringToType(.Form.Item("tcnInsurTimeAge"), eFunctions.Values.eTypeData.etdInteger), Session("sPolitype"), mobjValues.StringToType(.Form.Item("cbovalgroup"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbovalsituation"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcdexpirdat"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnrentamount"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbocurrrent"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcncount_insu"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnperc_cap"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddTypDurpay"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnAgepay"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcdDate_pay"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnYearpay"), eFunctions.Values.eTypeData.etdDouble))
			End With
			
			'**+ VI7001 - Life Assurance.
			'+ VI7001 - Interés asegurable.
			
		Case "VI7001"
			With Request
				lblnPost = mobjPolicySeq.InsPostVI7001("Update", "VI7001", Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnAge"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnAgeLimit"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnAgeReinsu"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnCapital"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(CStr(0), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnInsurTimeAge"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnInsurTimeAgeLimit"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(CStr(0), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(CStr(0), eFunctions.Values.eTypeData.etdInteger), .Form.Item("tctPduraind"), .Form.Item("tctIduraind"), "", mobjValues.StringToType(CStr(0), eFunctions.Values.eTypeData.etdInteger), "", mobjValues.StringToType(.Form.Item("tcnInsurTimeAge"), eFunctions.Values.eTypeData.etdInteger), Session("sPolitype"), mobjValues.StringToType(.Form.Item("cbovalgroup"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("cbovalsituation"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(CStr(0), eFunctions.Values.eTypeData.etdDouble))
			End With
			
			'+ AU001: Información del vehículo
			
		Case "AU001"
			With Request
				If .Form.Item("chksn_infrac") = "1" Then
					lstrsn_infrac = "1"
				Else
					lstrsn_infrac = "2"
				End If
				If .Form.Item("chksrelapsing") = "1" Then
					lstrsrelapsing = "1"
				Else
					lstrsrelapsing = "2"
				End If
				If .Form.Item("chksreturn") = "1" Then
					lstrsreturn = "1"
				Else
					lstrsreturn = "2"
				End If
				
				lblnPost = mobjPolicySeq.insPostAU001("AU001", Session("sPolitype"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("cbeLicense_ty"), .Form.Item("tctRegister"), .Form.Item("tctChassis"), .Form.Item("tctMotor"), .Form.Item("tctColor"), .Form.Item("valVehcode"), mobjValues.StringToType(.Form.Item("tcnYear"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbovalGroup"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("cbovalSituation"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("cbeProviCod"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnCapital"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nTransaction"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnVehPlace"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnVehPma"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeDeduc"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcdLastClaim"), eFunctions.Values.eTypeData.etdDate), 1, mobjValues.StringToType(.Form.Item("tcnType"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dStartdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnCapital"), eFunctions.Values.eTypeData.etdDouble, True), .Form.Item("tctDigit"), lstrsrelapsing, lstrsn_infrac, lstrsreturn, mobjValues.StringToType(.Form.Item("cbenlic_special"), eFunctions.Values.eTypeData.etdDouble, True))
			End With
			
			'+ CA041: Selección de Monedas
		Case "CA041"
			With Request
				lblnPost = mobjPolicySeq.insPostCA041(mobjValues.StringToType(Session("nTransaction"), eFunctions.Values.eTypeData.etdInteger), .Form.Item("hddExist"), .Form.Item("hddChange"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToDate(Session("dEffecdate")), mobjValues.StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("hddCurrency"))
			End With
			
			'+ Ventana de Fin de proceso        
		Case "GE101"
			lblnPost = insCancel
			
		Case "CA047"
			With Request
				lblnPost = mobjPolicySeq.insPostCA047(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("nUsercode"), .Form.Item("optTypeSolic"), .Form.Item("tcdStayDate"), Session("nTransaction"))
			End With
			
			'+ VI732: Cuadro de valores garantizados 
		Case "VI732"
			With Request
				If Request.QueryString.Item("WindowType") = "PopUp" Then
					lintCurrency = mobjValues.StringToType(.Form.Item("cbeCurrency"), eFunctions.Values.eTypeData.etdInteger, True)
				Else
					lintCurrency = mobjValues.StringToType(.Form.Item("cbeCurrency_A"), eFunctions.Values.eTypeData.etdInteger, True)
				End If
				lblnPost = mobjPolicySeq.inspostVI732(.QueryString("Action"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), .Form.Item("optAut_guarval"), lintCurrency, mobjValues.StringToType(.Form.Item("tcnYear"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnAge"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnMonth"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnPro_year"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnResc_val"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnSald_val"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnSaldvalkm"), eFunctions.Values.eTypeData.etdDouble, True), Session("nUsercode"), mobjValues.StringToType(.Form.Item("tcnDefamount"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("cbeDeferred"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnSal_tax"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnPeriod_cov"), eFunctions.Values.eTypeData.etdDouble, True))
			End With
			
			
			'+ VI769: Declaración de beneficiarios
		Case "VI769"
			lclsDecla_benef = New ePolicy.Decla_benef
			If Request.QueryString.Item("WindowType") = "PopUp" Then
				With Request
					lblnPost = lclsDecla_benef.insPostVI769("VI769", .QueryString.Item("Action"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnNumdecla"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("chkIrrevoc"), mobjValues.StringToType(.Form.Item("tcdDatedecla"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdDouble))
				End With
			End If
			
			'+ CA748: Observaciones de una propuesta
		Case "CA748"
			With Request
				If .QueryString.Item("WindowType") = "PopUp" Then
					lblnPost = mobjPolicySeq.inspostCA748(.QueryString("Action"), .Form.Item("hddCertype"), mobjValues.StringToType(.Form.Item("hddBranch"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddProduct"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnId"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("cbeObservation"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnNotenum"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdInteger))
					
					mstrQueryString = "&sCertype=" & .Form.Item("hddCertype") & "&nBranch=" & .Form.Item("hddBranch") & "&nProduct=" & .Form.Item("hddProduct") & "&nPolicy=" & .Form.Item("hddPolicy") & "&nCertif=" & .Form.Item("hddCertif") & "&dEffecdate=" & .Form.Item("hddEffecdate")
				End If
			End With
			
			'+ VA589: Datos particulares de Vida activa
		Case "VA589"
			mobjPolicySeq = New ePolicy.Activelife
			With Request
				lblnPost = mobjPolicySeq.insPostVA589(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnCapitaldeath"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeIduraind"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("tcnInsurtime"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnIntproject"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnWarminint"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbenOption"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("cbenTypeinvest"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnPremdeal"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nTransaction"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("valAgreement"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnModulec"), eFunctions.Values.eTypeData.etdDouble), 0, 0, 0, mobjValues.StringToType(Session("dStartdate"), eFunctions.Values.eTypeData.etdDate), .Form.Item("hdddExpirdat"), Session("sPoliType"), Session("sBrancht"), .Form.Item("hdddIssuedat"), mobjValues.StringToType(.Form.Item("hddnCapitaldeath"), eFunctions.Values.eTypeData.etdDouble))
			End With
			
			'+ VI701: Datos particulares vida colectivo desgravamen
		Case "VI701"
			lblnPost = mobjPolicySeq.insPostVI701(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(Request.Form.Item("cbeGroup"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Request.Form.Item("tcnAmount_cre"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Request.Form.Item("tcnAmount_act"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Request.Form.Item("cbeCurren_cre"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Request.Form.Item("cbeCalcapital"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Request.Form.Item("cbeTyppremium"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Request.Form.Item("cbeSituation"), eFunctions.Values.eTypeData.etdDouble), Request.Form.Item("tctCreditnum"), mobjValues.StringToType(Request.Form.Item("cbeCred_pro"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Request.Form.Item("tcdInit_cre"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(Request.Form.Item("tcdEnd_cre"), eFunctions.Values.eTypeData.etdDate), Request.Form.Item("tctAccnum"), mobjValues.StringToType(Request.Form.Item("tcnCapitalmax"), eFunctions.Values.eTypeData.etdDouble), Session("nUsercode"), mobjValues.StringToType(Request.Form.Item("tcnRateDesg"), eFunctions.Values.eTypeData.etdDouble))
			'+ CA658: Nómina de cotización (vida colectivo)
		Case "CA658"
			With Request
				lblnPost = mobjPolicySeq.inspostCA658(Request.QueryString.Item("WindowType"), Request.QueryString.Item("Action"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeGroup"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("cbeRole"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnId"), eFunctions.Values.eTypeData.etdInteger), .Form.Item("OptAge"), mobjValues.StringToType(.Form.Item("tcdBirthDat"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnInitAge"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnEndAge"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnInsured"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnRentAmount"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeCurrency"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(Session("nUserCode"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("chkVIP"), .Form.Item("optType"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnAge"), eFunctions.Values.eTypeData.etdDouble))
			End With
			
			'+ AM002: Tarifas de atención médica
		Case "AM002"
			With Request
				If .QueryString.Item("WindowType") = "PopUp" Then
					lblnPost = mobjPolicySeq.insPostAM002Upd(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(.Form.Item("tcnTariff"), eFunctions.Values.eTypeData.etdDouble), Session("sDefaulti"), mobjValues.StringToType(.Form.Item("tcnGroup"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnRole"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnAgeInit"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnAgeEnd"), eFunctions.Values.eTypeData.etdInteger), mobjValues.TypeToString(.Form.Item("cbeGroupComp"), eFunctions.Values.eTypeData.etdDouble), Session("dNullDate"), mobjValues.StringToType(.Form.Item("tcnPremium"), eFunctions.Values.eTypeData.etdDouble), Session("nUsercode"), Session("nTransaction"), Request.QueryString.Item("Action"))
				Else
					lblnPost = mobjPolicySeq.insPostAM002(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("cbeTariff"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeGroup"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeRole"), eFunctions.Values.eTypeData.etdDouble), Session("sDefaulti"), Session("nTransaction"), Session("dNullDate"), Session("nUsercode"))
				End If
			End With
			
		Case "AM003"
			With Request
				If .QueryString.Item("WindowType") = "PopUp" Then
					lblnPost = mobjPolicySeq.insPostAM003Upd(.QueryString("Action"), Session("nTransaction"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(.QueryString.Item("nTariff"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.QueryString.Item("nCover"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnPay_Concep"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("dNulldate"), mobjValues.StringToType(.Form.Item("tcnDed_Type"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnDed_Percen"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnDed_Amount"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnDed_Quanti"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnLimit"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnLimit_exe"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.QueryString.Item("nLimitH"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnIndem_Rate"), eFunctions.Values.eTypeData.etdDouble), Session("nUsercode"), .QueryString("sAutRestit"), mobjValues.StringToType(.QueryString.Item("nModulec"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.QueryString.Item("nRole"), eFunctions.Values.eTypeData.etdInteger), .QueryString("sClient"), .QueryString("sIllness"), mobjValues.StringToType(.QueryString.Item("nGroup"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnCount"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnPrestac"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnTyplim"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnPunish"), eFunctions.Values.eTypeData.etdInteger), Session("sPoliType"), CBool(IIf(IsNothing(.QueryString.Item("bCreHeader")), False, .QueryString.Item("bCreHeader"))))
				Else
					lblnPost = mobjPolicySeq.insPostAM003(Session("nTransaction"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("dNulldate"), Session("nUsercode"))
				End If
			End With
			
			'+ AM006: Exclusión de enfermedades
		Case "AM006"
			With Request
				If .QueryString.Item("WindowType") = "PopUp" Then
					If CStr(Session("sPolitype")) = "2" And CStr(Session("nCertif")) = "0" Then
						llngTariff = "0"
					Else
						If .QueryString.Item("nTariff") = "0" Then
							llngTariff = eRemoteDB.Constants.intNull
						Else
							llngTariff = .QueryString.Item("nTariff")
						End If
					End If
					lblnPost = mobjPolicySeq.InsPostAM006Upd(.QueryString("Action"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(llngTariff, eFunctions.Values.eTypeData.etdDouble), .Form.Item("cbeIllness"), .Form.Item("hddsClient"), mobjValues.StringToType(.Form.Item("hddnId"), eFunctions.Values.eTypeData.etdDouble), Session("nUsercode"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("nTransaction"), mobjValues.StringToType(.QueryString.Item("nCount"), eFunctions.Values.eTypeData.etdDouble, True), Session("dNullDate"), mobjValues.StringToType(.Form.Item("cbeExc_Code"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcdDateIni"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcdDateEnd"), eFunctions.Values.eTypeData.etdDate))
					mstrQueryString = "&nTariff=" & .QueryString.Item("nTariff") & "&sTypeExclu=" & .Form.Item("hddTypeExclu") & "&sInsured=" & .Form.Item("hddsClient")
				Else
					lblnPost = True
				End If
			End With
			
			'+ VI811: Asegurados por coberturas (Pólizas innominadas)
		Case "VI811"
			With Request
				If .QueryString.Item("WindowType") = "PopUp" Then
					lblnPost = mobjPolicySeq.inspostVI811(Request.QueryString.Item("Action"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("valModulec"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(.Form.Item("valCover"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("valRole"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("valGroups"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnQLifes"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdDouble))
				End If
			End With
			
			'+ VI666: Cotización
		Case "VI666"
			mobjPolicySeq = New ePolicy.Cover_quota
			With Request
				lblnPost = mobjPolicySeq.inspostVI666(.QueryString("WindowType"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.QueryString.Item("nGroup"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("valModule"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeRole"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnCover"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnRate"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnUtilMar"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnPremium"), eFunctions.Values.eTypeData.etdDouble), Session("SessionId"), mobjValues.StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdDouble))
				mstrQueryString = "&nGroup=" & .QueryString.Item("nGroup")
			End With
			
			'+ VI662: Datos particulares vida colectivo (Educacional)
		Case "VI662"
			With Request
				If .QueryString.Item("WindowType") <> "PopUp" Then
					mobjPolicySeq_educ = New ePolicy.life_educ
					lblnPost = mobjPolicySeq_educ.InsPostvi662(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(.Form.Item("valGroup"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("valSituation"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), .Form.Item("optTyp"), mobjValues.StringToType(.Form.Item("tcnPercent"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("chkPre"), .Form.Item("chkUniver"), mobjValues.StringToType(.Form.Item("tcnCapital"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeCurrency"), eFunctions.Values.eTypeData.etdDouble), Session("nTransaction"), Session("sPoliType"), .Form.Item("optNomina"), Session("nUsercode"), mobjValues.StringToType(.Form.Item("tcnCapitalCost"), eFunctions.Values.eTypeData.etdDouble), Session("sBrancht"))
				Else
					If .QueryString.Item("sInBasUni") = "1" Then
						lstrTyplevels = "1"
						lintLevels = .Form.Item("tcnLevel_b")
						lintCapital = .Form.Item("tcnCapital_b")
					Else
						lstrTyplevels = "2"
						lintLevels = .Form.Item("tcnLevel_u")
						lintCapital = .Form.Item("tcnCapital_u")
					End If
					mobjPolicySeq_lev = New ePolicy.life_levels
					lblnPost = mobjPolicySeq_lev.InsPostvi662(Request.QueryString.Item("Action"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(.QueryString.Item("nGroup"), eFunctions.Values.eTypeData.etdDouble), lstrTyplevels, mobjValues.StringToType(lintLevels, eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("hddnId"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(lintCapital, eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnInsured_b"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.QueryString.Item("nCurrency"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("tctClient_b"), Session("nUsercode"), Session("sPolitype"), Session("sBrancht"))
					
					mstrQueryString = "&sInBasUni=" & Request.QueryString.Item("sInBasUni") & "&nGroup=" & mobjValues.StringToType(.QueryString.Item("nGroup"), eFunctions.Values.eTypeData.etdDouble) & "&nSituation=" & mobjValues.StringToType(.QueryString.Item("nSituation"), eFunctions.Values.eTypeData.etdDouble) & "&nCapMax=" & mobjValues.StringToType(.QueryString.Item("nCapMax"), eFunctions.Values.eTypeData.etdDouble) & "&sOptTyp=" & .QueryString.Item("sOptTyp") & "&sOptNom=" & .QueryString.Item("sOptNom") & "&nPercent=" & .QueryString.Item("nPercent") & "&nCapCos=" & .QueryString.Item("nCapCos") & "&sChkPre=" & .QueryString.Item("sChkPre") & "&sChkUni=" & .QueryString.Item("sChkUni") & "&nCurrency=" & mobjValues.StringToType(.QueryString.Item("nCurrency"), eFunctions.Values.eTypeData.etdDouble)
				End If
			End With
			
			'+ VA595: Ilustración del valor póliz
		Case "VA595"
			With Request
				If .QueryString.Item("WindowType") = "PopUp" Then
					'+Se setea en el supuesto caso que el sistema envíe una advertencia
					mobjPolicySeq = New ePolicy.Per_deposit
					lblnPost = mobjPolicySeq.InsPostVA595Upd(.QueryString("Action"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(.Form.Item("tcnYear_ini"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnYear_end"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnAmountdep"), eFunctions.Values.eTypeData.etdDouble), Session("dNulldate"), Session("nUsercode"), Session("nTransaction"))
					
					mstrQueryString = "&nCurrency=" & .Form.Item("hddnCurrency") & "&nPremiumbas=" & .Form.Item("hddnPremAnu") & "&nPremimin=" & .Form.Item("hddnPremimin") & "&nVpprdeal=" & .Form.Item("hddnVPprdeal") & "&nPremfreq=" & .Form.Item("hddnPremfreq") & "&nPremdeal=" & .Form.Item("hddnPremdeal") & "&nPrsugest=" & .Form.Item("hddnPrsugest") & "&nVpprsug=" & .Form.Item("hddnVPprsug") & "&nAmountcontr=" & .Form.Item("hddnPremdep") & "&nIntproject=" & .Form.Item("hddnIntproject") & "&nWarminint=" & .Form.Item("hddnWarminint") & "&sInscalpre=" & .Form.Item("hddsIndCalPre") & "&nRatepayf=" & .Form.Item("hddnRatepayf") & "&nInsurtime" & .Form.Item("hddnInsurtime")
				Else
					'+Se setea en el supuesto caso que el sistema envíe una advertencia
					mobjPolicySeq = New ePolicy.Projectlife
					lblnPost = mobjPolicySeq.InsPostVA595(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("dNulldate"), Session("nUsercode"), Session("SessionId"), Session("nTransaction"), mobjValues.StringToType(.Form.Item("hddnPremAnu"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnPremdeal"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnVPprdeal"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnPrsugest"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnVPprsug"), eFunctions.Values.eTypeData.etdDouble), .Form.Item("hddsIndCalPre"), .Form.Item("hddsProcessed"), .Form.Item("hddsPremdeal"), .Form.Item("hddsPremdeal_Chan"), mobjValues.StringToType(.Form.Item("hddnInsurtime"), eFunctions.Values.eTypeData.etdDouble))
				End If
			End With
			
			'+ RV778: Datos particulares de rentas vitalicias
		Case "RV778"
			With Request
				If .QueryString.Item("WindowType") <> "PopUp" Then
					mobjPolicySeq = New ePolicy.Annuities
					lblnPost = mobjPolicySeq.insPostRV778(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), Session("dEffecdate"), mobjValues.StringToType(.Form.Item("tcnPremiumbas"), eFunctions.Values.eTypeData.etdDouble), Session("nUsercode"))
					mstrQueryString = "&nPremiumbas=" & .Form.Item("tcnPremiumbas")
				Else
					mobjPolicySeq = New ePolicy.Prem_annuities
					lblnPost = mobjPolicySeq.insPostRV778Upd(.QueryString("Action"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(.Form.Item("hddnId"), eFunctions.Values.eTypeData.etdDouble), Session("nUsercode"), Session("dEffecdate"), mobjValues.StringToType(.Form.Item("hddnReceipt"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeIndrecdep"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnPrem_quot"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnRate_disc"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnNom_valbon"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcdIssuedatbon"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcdExpirdatbon"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("cbeCurrency"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.QueryString.Item("nCount"), eFunctions.Values.eTypeData.etdDouble, True))
					mstrQueryString = "&nPremiumbas=" & .QueryString.Item("nPremiumbas")
				End If
			End With
			
			'+ OS001: Solicitud de ordenes de servicio
		Case "OS001", "OS001_K"
			With Request
				mstrQueryString = "&nOrdClass=" & Request.Form.Item("hddnOrdClass") & "&nBranch=" & Request.Form.Item("hddnBranch") & "&nProduct=" & Request.Form.Item("hddnProduct") & "&nPolicy=" & Request.Form.Item("hddnPolicy") & "&nProponum=" & Request.Form.Item("hddnProponum") & "&nCertif=" & Request.Form.Item("hddnCertif") & "&nClaim=" & Request.Form.Item("hddnClaim") & "&nCase_num=" & Request.Form.Item("hddnCase_num") & "&sCodisplOri=" & Request.Form.Item("hddsCodisplOri") & "&sBrancht=" & Request.Form.Item("hddsBrancht") & "&nDeman_type=" & Request.Form.Item("hddnDeman_type")
				
				If .QueryString.Item("WindowType") = "PopUp" Then
					lblnPost = mobjPolicySeq.insPostOS001Upd(Request.QueryString.Item("Action"), mobjValues.StringToType(.Form.Item("hddnOrdClass"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnBranch"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnProduct"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnProponum"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnClaim"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnCase_num"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("hddnServ_order"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("cbeProvider"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcdAssignDate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcdFec_prog"), eFunctions.Values.eTypeData.etdDate), .Form.Item("tctTime_prog"), .Form.Item("tctPlace"), mobjValues.StringToType(.Form.Item("cbeWorksh"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("cbeZone"), eFunctions.Values.eTypeData.etdInteger), .Form.Item("tctName_cont"), .Form.Item("tctAdd_contact"), .Form.Item("tctPhone_cont"), mobjValues.StringToType(.Form.Item("cbeStatus_ord"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("cbeOrd_typeCost"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("cbeOrderType"), eFunctions.Values.eTypeData.etdInteger, True), mobjValues.StringToType(.Form.Item("tcnNotenum"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("hddnDeman_type"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdInteger))
				Else
					'+ Si se trata de la ventana llamada desde la secuencia (OS001)
					If Request.QueryString.Item("sCodispl") = "OS001" Then
						If mobjValues.StringToType(Request.Form.Item("hddnItems"), eFunctions.Values.eTypeData.etdDouble) > 0 Then
							lstrContent = "2"
						Else
							lstrContent = "1"
						End If
						lclsPolicy_Win = New ePolicy.Policy_Win
						Call lclsPolicy_Win.Add_PolicyWin(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("nUsercode"), "OS001", lstrContent)
						lstrContent = Nothing
					End If
				End If
			End With
			
			'**+ VI7003: Savings Plan.
			'+ VI7003: Plan de Ahorros.
			
		Case "VI7003"
			With Request
				If .QueryString.Item("WindowType") = "PopUp" Then
					Call mobjPolicySeq.insPostVI7003Upd(.QueryString("Action"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnYear_ini"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("tcnYear_end"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnAmountdep"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dNulldate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nTransaction"), eFunctions.Values.eTypeData.etdInteger))
				End If
			End With
			
			'**+ VI7005: Transference information.
			'+ VI7005: Información de transferencia. 
			
		Case "VI7005"
			With Request
				If .QueryString.Item("WindowType") = "PopUp" Then
					Call mobjPolicySeq.insPostVI7005Upd(.QueryString("Action"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(.Form.Item("valInstitution"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("cbeOrigin"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("nType_transf"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(.Form.Item("tcnAmount_peso"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(.Form.Item("tcnAmount_UF"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dNulldate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nTransaction"), eFunctions.Values.eTypeData.etdInteger))
				End If
			End With
			
	End Select
	
	'+Se ejecutan las ventana automaticas
	If lblnPost And Request.QueryString.Item("WindowType") <> "PopUp" Then
		Call insGeneralAuto(Request.QueryString.Item("sCodispl"))
	End If
	'UPGRADE_NOTE: Object lclsPolicy_Win may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
	lclsPolicy_Win = Nothing
	insPostSequence = lblnPost
End Function

'%insPostCA001: se realizan las actualizaciones de las tablas en la CA001
'--------------------------------------------------------------------------------------------
Function insPostCA001() As Boolean
	'dim intNull As Object
	'--------------------------------------------------------------------------------------------
	Dim lblnConvertion As Boolean
	Dim llngCodeProce As Byte
	Dim llngQuotProp As Object
	
	insPostCA001 = True
	
	'- Se define la variable para indicar si se mostrará o no la secuencia
	Dim lblnShowSequence As Boolean
	
	Dim lclsPolicy As ePolicy.Policy
	Dim lclsProduct As eProduct.Product
	Dim lclsCertificat As ePolicy.Certificat
	Dim lclsProcess As ePolicy.Process
	
	lclsPolicy = New ePolicy.Policy
	lclsCertificat = New ePolicy.Certificat
	lclsProcess = New ePolicy.Process
	lclsProduct = New eProduct.Product
	'+ Se limpia la session de la transación original    
	Session("nTransaction2") = ""
	
	With Request
		'+ Se inicializan las variables de la sesión
		Session("sCertype") = .Form.Item("sCertype")
		Session("dEffecdate") = .Form.Item("tcdEffecdate")
		Session("nTransaction") = .Form.Item("cbeTransactio")
		Session("dLedgerDate") = .Form.Item("tcdLedgerDate")
		Session("nType_amend") = .Form.Item("valType_amend")
		Session("sPolitype") = .Form.Item("optType")
		
		Call lclsProduct.Find(mobjValues.StringToType(.Form.Item("cbeBranch"), 2), mobjValues.StringToType(.Form.Item("valProduct"), 2), mobjValues.StringToType(.Form.Item("tcdEffecdate"), 1))
		'+ Tipo de póliza        
		Session("sBussityp") = Request.Form.Item("optBussines")
		Session("nBranch") = .Form.Item("cbeBranch")
		Session("nProduct") = .Form.Item("valProduct")
		Session("nPolicy") = .Form.Item("tcnPolicy")
		Session("sBrancht") = lclsProduct.sBrancht
		
		llngQuotProp = .Form.Item("tcnQuotProp")
		
		If Session("nTransaction") = eCollection.Premium.PolTransac.clngQuotationConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngProposalConvertion Then
			Session("nProponum") = .Form.Item("tcnPolicy")
			Session("nTransaction2") = Session("nTransaction")
		End If
		
		If .Form.Item("tcnQuotProp") = vbNullString Or .Form.Item("tcnQuotProp") = "0" Then
			If Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyQuotAmendent Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifQuotAmendent Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyQuotRenewal Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifQuotRenewal Then
				'+ Se genera automáticamente el número de cotización
				llngQuotProp = lclsPolicy.GetNewPolicyCode("3", Session("nBranch"), Session("nProduct"), True)
			ElseIf Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyPropAmendent Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifPropAmendent Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyPropRenewal Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifPropRenewal Then 
				'+ Se genera automáticamente el número de propuesta
				llngQuotProp = lclsPolicy.GetNewPolicyCode("1", Session("nBranch"), Session("nProduct"), True)
			Else
				If CStr(Session("nPolicy")) = "0" Or CStr(Session("nPolicy")) = "" Then
					'+ Se genera automáticamente el número de póliza
					Session("nPolicy") = lclsPolicy.GetNewPolicyCode(Session("sCertype"), Session("nBranch"), Session("nProduct"), True)
				End If
			End If
		End If
		
		If .Form.Item("tcnCertificat") = vbNullString Then
			Session("nCertif") = "0"
		Else
			Session("nCertif") = .Form.Item("tcnCertificat")
		End If
		Session("nReceipt") = 0
		
		'+Si la acción corresponde a 'Emisión,Cotización y/o Solicitud de Certificado'
		If Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifIssue Or (Session("nTransaction") = eCollection.Premium.PolTransac.clngdeclarations And CStr(lclsProduct.sBrancht) = "8") Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifQuotation Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifProposal Then
			
			'+Si la validación es masiva se genera el número de certificado
			If CStr(Session("nCertif")) = "" Or CStr(Session("nCertif")) = "0" Then
				'Session("nCertif") = lclsCertificat.getNewCertificatNum(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"))
			End If
		End If
	End With
	
	If insPostCA001 Or Session("nTransaction") = eCollection.Premium.PolTransac.clngQuotationConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngProposalConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPropQuotConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngQuotAmendConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPropAmendConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngQuotRenewalConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPropRenewalConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngQuotPropAmendentConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngQuotPropRenewalConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngReprint Then
		lblnConvertion = (Session("nTransaction") = eCollection.Premium.PolTransac.clngQuotationConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngProposalConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPropQuotConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngQuotAmendConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPropAmendConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngQuotRenewalConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPropRenewalConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngQuotPropAmendentConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngQuotPropRenewalConvertion)
		
		If mobjPolicySeq.insPostCA001(Session("sCertype"), mobjValues.StringToType(Session("nTransaction"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(Request.Form.Item("cbeOffice"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), Session("sBussityp"), Session("sPolitype"), mobjValues.StringToType(Request.Form.Item("tcdLedgerDate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Request.Form.Item("cbeAgency"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Request.Form.Item("cbeOfficeAgen"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Request.Form.Item("cbeSellChannel"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Request.Form.Item("valType_amend"), eFunctions.Values.eTypeData.etdInteger), mobjValues.StringToType(Request.Form.Item("tcnServ_order"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Request.Form.Item("tcdFer"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(llngQuotProp, eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Request.Form.Item("tcnDigit"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Request.Form.Item("tcnProp_reg"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Request.Form.Item("tcnRenewalnum"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dNulldate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(Session("dLastChange"), eFunctions.Values.eTypeData.etdDate)) Then
			If Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyQuotAmendent Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifQuotAmendent Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyQuotRenewal Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifQuotRenewal Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyPropAmendent Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifPropAmendent Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyPropRenewal Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifPropRenewal Or Session("nTransaction") = eCollection.Premium.PolTransac.clngQuotAmendentQuery Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPropAmendentQuery Or Session("nTransaction") = eCollection.Premium.PolTransac.clngQuotRenewalQuery Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPropRenewalQuery Then
				Session("nPolicy") = mobjValues.StringToType(llngQuotProp, eFunctions.Values.eTypeData.etdDouble)
			End If
			
			'+ Se setean los valores de necesarios y que no se encuentran en la CA001            
			If lclsCertificat.Find(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), True) Then
				Session("dStartdate") = lclsCertificat.dStartdate
				Session("dExpirdat") = lclsCertificat.dExpirdat
			End If
			
			With lclsProcess
				
				'+Se inicializa el valor que contiene el proceso que corresponde
				If Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyIssue Or Session("nTransaction") = eCollection.Premium.PolTransac.clngdeclarations Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifIssue Or Session("nTransaction") = eCollection.Premium.PolTransac.clngRecuperation Then
					llngCodeProce = 4
				End If
				
				If Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyAmendment Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifAmendment Or Session("nTransaction") = eCollection.Premium.PolTransac.clngQuotationConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyQuery Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifQuery Then
					llngCodeProce = 6
				End If
				
				If Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyIssue Or Session("nTransaction") = eCollection.Premium.PolTransac.clngdeclarations Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifIssue Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyAmendment Or Session("nTransaction") = eCollection.Premium.PolTransac.clngTempPolicyAmendment Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifAmendment Or Session("nTransaction") = eCollection.Premium.PolTransac.clngTempCertifAmendment Then
					
					If Request.Form.Item("tcnReference") <> vbNullString And Request.Form.Item("tcnReference") <> "0" Then
						
						If CStr(Session("nBranch")) <> "0" And CStr(Session("nBranch")) <> vbNullString And CStr(Session("nProduct")) <> "0" And CStr(Session("nProduct")) <> vbNullString And CStr(Session("nPolicy")) <> "0" And CStr(Session("nPolicy")) <> vbNullString And CStr(Session("nCertif")) <> vbNullString And CStr(Session("dEffecdate")) <> vbNullString Then
							If ((Session("nTransaction") = eCollection.Premium.PolTransac.clngTempPolicyAmendment Or Session("nTransaction") = eCollection.Premium.PolTransac.clngTempCertifAmendment) And True) Or (Session("nTransaction") <> eCollection.Premium.PolTransac.clngTempCertifAmendment And Session("nTransaction") <> eCollection.Premium.PolTransac.clngTempPolicyAmendment) Then
								'+ Se crea en la tabla Process                                
								.nReference = mobjValues.StringToType(Request.Form.Item("tcnReference"), eFunctions.Values.eTypeData.etdDouble)
								.nCode_activ = 1
								.nCode_proce = llngCodeProce
								.sKey_process = Session("nBranch") & Session("nProduct") & Session("nPolicy") & Session("nCertif")
								.nAccount = intNull
								.nBordereaux = intNull
								.nBranch = mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdInteger)
								.nCertif = mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdInteger)
								.nCheque = intNull
								.nClaim = intNull
								.sCodispl = Request.Form.Item("sCodispl")
								.dFinishDate = eRemoteDB.Constants.dtmNull
								.sFinishHour = CStr(eRemoteDB.Constants.strNull)
								.nIn_charge = mobjValues.StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdInteger)
								.nOp_acc_ban = intNull
								.dOpe_date = eRemoteDB.Constants.dtmNull
								.nOp_office = intNull
								.nOp_transa = intNull
								.dPlan_date = eRemoteDB.Constants.dtmNull
								.sPlan_hour = CStr(eRemoteDB.Constants.strNull)
								.nPolicy = mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble)
								.nProduct = mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdInteger)
								.nReceipt = intNull
								'UPGRADE_WARNING: Date was upgraded to Today and has a new behavior. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1041.aspx'
								.dStartdate = Today
								.sStartHour = Mid(CStr(TimeOfDay), 1, 8)
								.nStatus_pro = 1
								.nUsercode = mobjValues.StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdInteger)
								insPostCA001 = .Add_Policy
							End If
						End If
					End If
				End If
			End With
		End If
		
		If Session("nTransaction") <> eCollection.Premium.PolTransac.clngQuotationConvertion And Session("nTransaction") <> eCollection.Premium.PolTransac.clngProposalConvertion And Session("nTransaction") <> eCollection.Premium.PolTransac.clngPropQuotConvertion And Session("nTransaction") <> eCollection.Premium.PolTransac.clngQuotAmendConvertion And Session("nTransaction") <> eCollection.Premium.PolTransac.clngPropAmendConvertion And Session("nTransaction") <> eCollection.Premium.PolTransac.clngQuotRenewalConvertion And Session("nTransaction") <> eCollection.Premium.PolTransac.clngPropRenewalConvertion And Session("nTransaction") <> eCollection.Premium.PolTransac.clngQuotPropAmendentConvertion And Session("nTransaction") <> eCollection.Premium.PolTransac.clngQuotPropRenewalConvertion And Session("nTransaction") <> eCollection.Premium.PolTransac.clngReprint Then
			
			'+Si se trata de una modificación temporal se llama a la ventana de fecha de vencimiento
			If (Session("nTransaction") <> eCollection.Premium.PolTransac.clngTempPolicyAmendment Or Session("nTransaction") <> eCollection.Premium.PolTransac.clngTempCertifAmendment) Then
				
				'+Si se trata de una re-emision se llama a la ventana de informacion de re-emision
				
				If (Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyReissue Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifReissue) And CStr(Session("sPolitype")) <> "2" And CStr(Session("sPolitype")) <> "3" Then
				Else
					
					'+ Se carga la secuencia             
					lblnShowSequence = True
					mstrLocationCA001 = "'/VTimeNet/Common/secWHeader.aspx?sCodispl=CA001_K&sProject=PolicySeq&sModule=Policy&sConfig=InSequence&nAction=0" & Request.QueryString.Item("nMainAction") & "&bMenu=1'"
				End If
			End If
		Else
			
			'+ Se muestra la página principal de la secuencia (en caso de Converciones a cotización o póliza)
			lblnShowSequence = False
			If Session("nTransaction") = eCollection.Premium.PolTransac.clngQuotationConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngProposalConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPropQuotConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngQuotAmendConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPropAmendConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngQuotRenewalConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPropRenewalConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngQuotPropAmendentConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngQuotPropRenewalConvertion Then
				
				'+ En el caso de conversiones, se cambia el valor a la variable de Sesion correspondiente al
				'+ número de póliza con el nuevo Nº de Cotización o póliza
				If Session("nTransaction") = eCollection.Premium.PolTransac.clngPropQuotConvertion Then
					Session("sCertype") = "3"
				Else
					Session("sCertype") = "2"
				End If
				Session("nPolicy") = mobjPolicySeq.mlngPolicy
				If Session("nTransaction") <> eCollection.Premium.PolTransac.clngPropAmendConvertion Then
					Session("nTransaction") = eCollection.Premium.PolTransac.clngRecuperation
				End If
				lblnShowSequence = True
				mstrLocationCA001 = "'/VTimeNet/Common/secWHeader.aspx?sCodispl=CA001_K&sProject=PolicySeq&sModule=Policy&sConfig=InSequence&bMenu=1'"
			Else
				mstrLocationCA001 = "'/VTimeNet/Common/secWHeader.aspx?sCodispl=CA001_K&sProject=PolicySeq&sModule=Policy&sConfig=WithOutSequence&bMenu=1'"
			End If
		End If
		
		If insPostCA001 And Not lblnConvertion Then
			
			'+ Se carga la secuencia
			lblnShowSequence = True
			mstrLocationCA001 = "'/VTimeNet/Common/secWHeader.aspx?sCodispl=CA001_K&sProject=PolicySeq&sModule=Policy&sConfig=InSequence&bMenu=1'"
		Else
			If Session("nTransaction") = eCollection.Premium.PolTransac.clngQuotationConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngProposalConvertion Then
				
				'+ Se muestra la página principal de la secuencia
				lblnShowSequence = False
				mstrLocationCA001 = "'/VTimeNet/Common/secWHeader.aspx?sCodispl=CA001_K&sProject=PolicySeq&sModule=Policy&sConfig=WithOutSequence&bMenu=1'"
			End If
		End If
	End If
	
	If lblnShowSequence And insPostCA001 And mstrLocationCA001 = vbNullString Then
		'+ Se muestra la secuencia       
		mstrLocationCA001 = "'/VTimeNet/Common/secWHeader.aspx?sCodispl=CA001_K&sProject=PolicySeq&sModule=Policy&sConfig=InSequence&bMenu=1'"
	End If
	
	'UPGRADE_NOTE: Object lclsPolicy may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
	lclsPolicy = Nothing
	'UPGRADE_NOTE: Object lclsCertificat may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
	lclsCertificat = Nothing
	'UPGRADE_NOTE: Object lclsProcess may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
	lclsProcess = Nothing
	'UPGRADE_NOTE: Object lclsProduct may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
	lclsProduct = Nothing
	
	'+ En el caso de conversiones, se cambia el valor a la variable de Sesion correspondiente al
	'+ número de póliza con el nuevo Nº de Cotización o póliza
	If Session("nTransaction") = eCollection.Premium.PolTransac.clngPropQuotConvertion Then
		Session("nPolicy") = mobjPolicySeq.mlngPolicy
	End If
	
	'+ Se asigna la accion a tomar
	Select Case Session("nTransaction")
		Case eCollection.Premium.PolTransac.clngPolicyQuery, eCollection.Premium.PolTransac.clngCertifQuery, eCollection.Premium.PolTransac.clngQuotationQuery, eCollection.Premium.PolTransac.clngProposalQuery, eCollection.Premium.PolTransac.clngQuotAmendentQuery, eCollection.Premium.PolTransac.clngPropAmendentQuery, eCollection.Premium.PolTransac.clngQuotRenewalQuery, eCollection.Premium.PolTransac.clngPropRenewalQuery
			Session("bQuery") = True
		Case Else
			Session("bQuery") = False
	End Select
	
	'+ Si se trata de una modificacion temporal, se asigna valor a la fecha de anulación.
	If Session("nTransaction") = eCollection.Premium.PolTransac.clngTempPolicyAmendment Or Session("nTransaction") = eCollection.Premium.PolTransac.clngTempCertifAmendment Then
		Session("dNullDate") = mobjValues.StringToType(Request.Form.Item("tcdExpDate"), eFunctions.Values.eTypeData.etdDate)
	End If
End Function

'% insCancel: Esta rutina es activada cuando el usuario cancela la transacción en donde
'%              está trabajando.
'--------------------------------------------------------------------------------------------
Function insCancel() As Boolean
	Dim lstrsCertype As String
	'--------------------------------------------------------------------------------------------
	Dim lclsValues As eFunctions.Values
	Dim lclsErrors As eFunctions.Errors
	Dim lclsPolicy As ePolicy.Policy
	Dim lclsCertificat As ePolicy.Certificat
	Dim lintString As Integer
	Dim lstrError As String=String.Empty
	
	'- Variables para almacenar temporalmente el número de Referencia y Código del proceso    
	Dim llngReference As Integer
	Dim lintCodeProce As Integer
	
	lclsValues = New eFunctions.Values
	lclsErrors = New eFunctions.Errors
	lclsPolicy = New ePolicy.Policy
	lclsCertificat = New ePolicy.Certificat
	
	insCancel = True
	mstrLocationCA001 = "'/VTimeNet/Common/secWHeader.aspx?sCodispl=CA001_K&sProject=PolicySeq&sModule=Policy&bMenu=1&nOrig_call=1'"
	
	'+ Se realiza el llamado al procedimiento que actualiza el campo UserAmend 
	'+ de Policy o Certificat, según sea el caso
	Call insUpdUserAmend()
	
	'+Se realiza el reverso de la modificación
	
	If CBool(Trim(CStr(CStr(Session("nTransaction")) <> vbNullString))) Then
		If Session("nTransaction") = eCollection.Premium.PolTransac.clngTempCertifAmendment Or Session("nTransaction") = eCollection.Premium.PolTransac.clngTempPolicyAmendment Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifAmendment Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyAmendment Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPropAmendConvertion Then
			If lclsPolicy.Find(Session("sCertype"), lclsValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdInteger), lclsValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdInteger), lclsValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble)) Then
				If lclsPolicy.dChangdat <> eRemoteDB.Constants.dtmNull And lclsPolicy.dChangdat <> lclsValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate) Then
					If Not lclsCertificat.insReverRenModPol(Session("sCertype"), lclsValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdInteger), lclsValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdInteger), lclsValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), lclsValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdInteger), 0, lclsValues.StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdInteger), 0) Then
						Response.Write(lclsErrors.ErrorMessage("CA001_K", 3616,  ,  ,  , True))
					End If
				End If
			End If
		End If
		
		'+ Sólamente se efectuará este proceso siempre y cuando la ventana no sea la principal (CA001).
		If Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyIssue Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifIssue Or Session("nTransaction") = eCollection.Premium.PolTransac.clngRecuperation Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifProposal Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyProposal Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyQuotation Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifQuotation Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyQuotAmendent Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifQuotAmendent Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyPropAmendent Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifPropAmendent Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyQuotRenewal Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifQuotRenewal Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyPropRenewal Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifPropRenewal Then
			If Request.Form.Item("optElim") = "Delete" Then
				With lclsPolicy
					.sCertype = Session("sCertype")
					.nBranch = lclsValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdInteger)
					.nProduct = lclsValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdInteger)
					.nPolicy = lclsValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble)
					.nCertif = lclsValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble)
					
					'+ Se asigna el número de referencia
					If Request.Form.Item("tcnReference") = vbNullString Then
						llngReference = 0
					Else
						llngReference = lclsValues.StringToType(Request.Form.Item("tcnReference"), eFunctions.Values.eTypeData.etdInteger)
					End If
					
					'+ Se asigna el código del proceso
					If Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyIssue Or Session("nTransaction") = eCollection.Premium.PolTransac.clngdeclarations Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifIssue Or Session("nTransaction") = eCollection.Premium.PolTransac.clngRecuperation Then
						lintCodeProce = 4
					End If
					
					If Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyAmendment Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifAmendment Or Session("nTransaction") = eCollection.Premium.PolTransac.clngQuotationConvertion Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyQuery Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifQuery Then
						lintCodeProce = 6
					End If
					
					'+ Se eliminan los datos de la póliza
					If .DelRecursivePolicy(lintCodeProce, llngReference) Then
						'+ Reversa el estado de la propuesta  
						If Session("nTransaction2") = eCollection.Premium.PolTransac.clngQuotationConvertion Or Session("nTransaction2") = eCollection.Premium.PolTransac.clngProposalConvertion Then
							lstrsCertype = "1"
							If Session("nTransaction2") = eCollection.Premium.PolTransac.clngQuotationConvertion Then
								lstrsCertype = "3"
							End If
							Call lclsCertificat.Find(lstrsCertype, Session("nBranch"), Session("nProduct"), Session("nProponum"), Session("nCertif"))
							lclsCertificat.nstatquota = 1
							Call lclsCertificat.Update()
						End If
						lstrError = lclsErrors.ErrorMessage("CA001_K", 3990,  ,  ,  , True)
						lintString = InStr(1, lstrError, "Err.")
						If lintString > 0 Then
							lstrError = Mid(lstrError, 1, lintString - 1) & Mid(lstrError, lintString + 10, Len(lstrError))
						End If
						Response.Write(lstrError)
					Else
						Response.Write(lclsErrors.ErrorMessage("CA001_K", 3991,  ,  ,  , True))
					End If
				End With
			Else
				
				'+ Mensaje informativo.
				Select Case Session("nTransaction")
					Case eCollection.Premium.PolTransac.clngPolicyIssue, eCollection.Premium.PolTransac.clngCertifIssue, eCollection.Premium.PolTransac.clngRecuperation
						lstrError = lclsErrors.ErrorMessage("CA001_K", 3968,  ,  ,  , True)
						lintString = InStr(1, lstrError, "Men.")
						If lintString > 0 Then
							lstrError = Mid(lstrError, 1, lintString - 1) & Mid(lstrError, lintString + 10, Len(lstrError))
						End If
						
						Response.Write(lstrError)
						
					Case eCollection.Premium.PolTransac.clngPolicyQuotation, eCollection.Premium.PolTransac.clngCertifQuotation, eCollection.Premium.PolTransac.clngPolicyQuotAmendent, eCollection.Premium.PolTransac.clngCertifQuotAmendent, eCollection.Premium.PolTransac.clngPolicyQuotRenewal, eCollection.Premium.PolTransac.clngCertifQuotRenewal
						
						lstrError = lclsErrors.ErrorMessage("CA001_K", 3970,  ,  ,  , True)
						lintString = InStr(1, lstrError, "Men.")
						If lintString > 0 Then
							lstrError = Mid(lstrError, 1, lintString - 1) & Mid(lstrError, lintString + 10, Len(lstrError))
						End If
						
						Response.Write(lstrError)
						
					Case eCollection.Premium.PolTransac.clngPolicyProposal, eCollection.Premium.PolTransac.clngCertifProposal, eCollection.Premium.PolTransac.clngPolicyPropAmendent, eCollection.Premium.PolTransac.clngCertifPropAmendent, eCollection.Premium.PolTransac.clngPolicyPropRenewal, eCollection.Premium.PolTransac.clngCertifPropRenewal
						
						lstrError = lclsErrors.ErrorMessage("CA001_K", 3969,  ,  ,  , True)
						lintString = InStr(1, lstrError, "Men.")
						If lintString > 0 Then
							lstrError = Mid(lstrError, 1, lintString - 1) & Mid(lstrError, lintString + 10, Len(lstrError))
						End If
						
						Response.Write(lstrError)
						
				End Select
			End If
		End If
	End If
	
	'UPGRADE_NOTE: Object lclsErrors may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
	lclsErrors = Nothing
	'UPGRADE_NOTE: Object lclsValues may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
	lclsValues = Nothing
	'UPGRADE_NOTE: Object lclsPolicy may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
	lclsPolicy = Nothing
	'UPGRADE_NOTE: Object lclsCertificat may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
	lclsCertificat = Nothing
End Function

'% insFinish: se activa al finalizar el proceso
'--------------------------------------------------------------------------------------------
Function insFinish() As Boolean
	Dim dNulldate As Object
	'--------------------------------------------------------------------------------------------
	Dim lclsValues As eFunctions.Values
	Dim lclsPolicy As ePolicy.Certificat
	Dim lclsPolicy_amend As ePolicy.Policy
	
	lclsValues = New eFunctions.Values
	lclsPolicy = New ePolicy.Certificat
	
	'+ Si existe alguna carpeta que no halla sido carga con información.
	insFinish = True
	
	Select Case Session("nTransaction")
		Case "12", "13", "14", "15", "24", "25", "26", "27", "34"
			'+ Si se trata de Fin de Proceso (CA048). Modificación de Póliza individual o certificado.
			If lclsPolicy.insExecuteCA048(Request.QueryString.Item("sCodispl"), Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(Session("nTransaction"), eFunctions.Values.eTypeData.etdInteger), Request.Form.Item("chkPendenstat"), mobjValues.StringToType(Request.Form.Item("cbeWaitCode"), eFunctions.Values.eTypeData.etdDouble, True), mobjValues.StringToType(Request.Form.Item("tcnNotenum"), eFunctions.Values.eTypeData.etdDouble, True), Request.Form.Item("chkAfeccer"), mobjValues.StringToType(Session("nCapital"), eFunctions.Values.eTypeData.etdDouble, True)) Then
				'+ Si la ventana de recibo AUTOMATICO es solicitada, se abre la página CA027
				If Request.Form.Item("optTypeReceipt") = "2" Then
					Response.Write("<SCRIPT>ShowPopUp('/VTimeNet/Policy/PolicySeq/CA027.aspx','Receipts','700','450','yes','No',80,80);</" & "Script>")
					'+ Si la ventana de recibo Manual es solicitada, se invoca la página
				ElseIf Request.Form.Item("optTypeReceipt") = "3" Then 
					Response.Write("<SCRIPT>ShowPopUp('/VTimeNet/Policy/PolicyTra/CA028.aspx?sCodispl=CA028&sCodisplRep=CA048','CA028PopUp','700','500','yes','no',20,20);</" & "Script>")
				End If
				
				insFinish = True
				
				mstrLocationCA001 = "'/VTimeNet/Common/secWHeader.aspx?sCodispl=CA001_K&sProject=PolicySeq&sModule=Policy&bMenu=1&nOrig_call=1'"
				
				'+Se llama la rutina que inicializa el campo User_amend de la tabla Póliza/Certificat
				Call insUpdUserAmend()
			Else
				insFinish = False
			End If
			
		Case "1", "2", "3", "4", "5", "6", "7", "18", "19"
			'+ Si se trata de Fin de Emisión (CA050)            
			If lclsPolicy.insExecuteCA050(Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), Session("nCertif"), CStr(Session("nTransaction")), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), mobjValues.StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdDouble), Application("cstrTypeCompany"), Request.Form.Item("gmtDocument"), Request.Form.Item("gmtDocumentTag"), Request.Form.Item("blnEnabledWaitCode"), mobjValues.StringToType(Request.Form.Item("cboWaitCode"), eFunctions.Values.eTypeData.etdDouble, True), Request.Form.Item("pblnDocQuotation"), Request.Form.Item("chkCertif"), mobjValues.StringToType(Session("nCapital"), eFunctions.Values.eTypeData.etdDouble, True)) Then
				
				'+ Se ejecuta el CAL001
				If Request.Form.Item("chkPrintNow") = "1" Then
					insPrintDocuments()
				End If
				
				insFinish = True
				
				'+ Se muestra la página principal de la secuencia
				If (CStr(Session("sPoliType")) = "2" Or CStr(Session("sPoliType")) = "3") And (CStr(Session("nTransaction")) = "1" Or CStr(Session("nTransaction")) = "2" Or CStr(Session("nTransaction")) = "18" Or CStr(Session("nTransaction")) = "19") Then
					'+ Se invoca la secuencia de póliza con la transaccion de Emision de Certificado
					mstrLocationCA001 = "'/VTimeNet/Common/secWHeader.aspx?sCodispl=CA001_K&sProject=PolicySeq&sModule=Policy&nTransaction=2&bMenu=1&nOrig_call=1'"
				Else
					mstrLocationCA001 = "'/VTimeNet/Common/secWHeader.aspx?sCodispl=CA001_K&sProject=PolicySeq&sModule=Policy&bMenu=1&nOrig_call=1'"
				End If
				
				'+Se llama la rutina que inicializa el campo User_amend de la tabla Póliza/Certificat
				Call insUpdUserAmend()
			Else
				insFinish = False
			End If
			
			'+Si se trata de consultas de cartera
		Case "8", "9", "10", "11"
			'+ Se muestra la página principal de la secuencia
			mstrLocationCA001 = "'/VTimeNet/Common/secWHeader.aspx?sCodispl=CA001_K&sProject=PolicySeq&sModule=Policy&bMenu=1&nOrig_call=1'"
			insFinish = True
			
			'+Si se trata de las transacciones restantes
		Case "16", "17", "20", "22"
			'+Se llama la rutina que inicializa el campo User_amend de la tabla Póliza/Certificat
			Call insUpdUserAmend()
			
			'+Declaraciones
		Case "21"
			'+Se llama la rutina que inicializa el campo User_amend de la tabla Póliza/Certificat
			Call insUpdUserAmend()
	End Select
	
	Session("nFinish") = Request.QueryString.Item("nAction")
	'+ se agrego manejo de fecha de ultima modificación para los endosos    
	If insFinish Then
		lclsPolicy_amend = New ePolicy.Policy
		If lclsPolicy_amend.Find(Session("sCertype"), mobjValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), mobjValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble)) Then
			If Session("nTransaction") = 12 Or Session("nTransaction") = 14 Or Session("nTransaction") = 13 Or Session("nTransaction") = 15 Then
				If Session("nCertif") = 0 Then
					If Session("nTransaction") = 13 Or Session("nTransaction") = 15 Then
						lclsPolicy_amend.dChangdat = dNulldate
					Else
						If Request.Form.Item("chkPendenstat") <> "1" Then
							lclsPolicy_amend.dChangdat = mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate)
						End If
					End If
				End If
			ElseIf Session("nTransaction") = 1 Or Session("nTransaction") = 6 Or Session("nTransaction") = 4 Or Session("nTransaction") = 24 Or Session("nTransaction") = 25 Or Session("nTransaction") = 28 Or Session("nTransaction") = 29 Or Session("nTransaction") = 26 Or Session("nTransaction") = 27 Or Session("nTransaction") = 30 Or Session("nTransaction") = 31 Or Session("nTransaction") = 18 Or Session("nTransaction") = 19 Then 
				If Request.Form.Item("chkPendenstat") <> "1" Then
					lclsPolicy_amend.dChangdat = mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate)
				End If
			End If
			lclsPolicy_amend.Add()
		End If
	End If
End Function


'% insUpdUserAmend: se actualiza el campo nUser_amend de Policy o Certificat, según sea el caso
'--------------------------------------------------------------------------------------------
Sub insUpdUserAmend()
	'--------------------------------------------------------------------------------------------
	Dim lclsPolicy As ePolicy.Policy
	Dim lclsCertificat As ePolicy.Certificat
	Dim lclsValues As eFunctions.Values
	
	lclsPolicy = New ePolicy.Policy
	lclsCertificat = New ePolicy.Certificat
	lclsValues = New eFunctions.Values
	
	If Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyAmendment Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifAmendment Or Session("nTransaction") = eCollection.Premium.PolTransac.clngTempPolicyAmendment Or Session("nTransaction") = eCollection.Premium.PolTransac.clngTempCertifAmendment Or Session("nTransaction") = eCollection.Premium.PolTransac.clngRecuperation Or Session("nTransaction") = eCollection.Premium.PolTransac.clngPolicyIssue Or Session("nTransaction") = eCollection.Premium.PolTransac.clngCertifIssue Then
		If CStr(Session("nCertif")) = vbNullString Or CStr(Session("nCertif")) = "0" Then
			'+ Se actualiza el campo en la tabla Policy        
			With lclsPolicy
				.sCertype = Session("sCertype")
				.nBranch = lclsValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdInteger)
				.nProduct = lclsValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdInteger)
				.nPolicy = lclsValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble)
				.Update_UserAmend()
			End With
		Else
			'+ Se actualiza el campo en la tabla Certificat        
			With lclsCertificat
				.sCertype = Session("sCertype")
				.nBranch = lclsValues.StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdInteger)
				.nProduct = lclsValues.StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdInteger)
				.nPolicy = lclsValues.StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble)
				.nCertif = lclsValues.StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble)
				.Update_UserAmend()
			End With
		End If
	End If
	
	'UPGRADE_NOTE: Object lclsPolicy may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
	lclsPolicy = Nothing
	'UPGRADE_NOTE: Object lclsCertificat may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
	lclsCertificat = Nothing
	'UPGRADE_NOTE: Object lclsValues may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
	lclsValues = Nothing
End Sub

'+Esta función carga automáticamente con contenido las ventanas correspondientes dependiendo de la que se esté tratando.
'------------------------------------------------------------------
Private Sub insGeneralAuto(ByVal sCodispl As String)
	'------------------------------------------------------------------
	Dim lobjAutoCharge As ePolicy.AutoCharge
	lobjAutoCharge = New ePolicy.AutoCharge
	
	With mobjValues
            'If sCodispl <> "" Then
            '              lobjAutoCharge.sCodispl = sCodispl
            'End If
		
		Call lobjAutoCharge.AutoUpdGeneral(Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), Session("nGroup"), eRemoteDB.Constants.intNull, Session("sPoliType"), .StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("dNulldate"), Session("nTransaction"), Session("nUsercode"), Session("sBrancht"), Session("SessionId"), String.Empty, 0)
	End With
	
	'UPGRADE_NOTE: Object lobjAutoCharge may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
	lobjAutoCharge = Nothing
End Sub

'+Esta funcion se Cargar automáticamente las ventanas CA013, CA014 y CA017
'------------------------------------------------------------------
Private Sub insAutoCA131417(ByVal sCodispl As String)
	'------------------------------------------------------------------
	Dim lobjAutoCharge As ePolicy.AutoCharge
	lobjAutoCharge = New ePolicy.AutoCharge
	With mobjValues
            'If sCodispl <> "" Then
            '	lobjAutoCharge.sCodispl = sCodispl
            'End If
		
            'Call lobjAutoCharge.AutoUpdCA131417(Session("sCertype"), .StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdInteger), .StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), .StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), .StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), .StringToType(Session("nGroup"), eFunctions.Values.eTypeData.etdInteger), eRemoteDB.Constants.intNull, Session("sPoliType"), .StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("dNulldate"), .StringToType(Session("nTransaction"), eFunctions.Values.eTypeData.etdInteger), .StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdInteger), Session("sBrancht"), Session("SessionId"))
		
	End With
	
	'UPGRADE_NOTE: Object lobjAutoCharge may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
	lobjAutoCharge = Nothing
End Sub

'+Esta funcion realiza actualización automatica de las ventanas CA004
'-----------------------------------------------------------------------------------
Private Sub insAutoCA004(ByVal sCodispl As Object)
	'-----------------------------------------------------------------------------------
	Dim lobjAutoChargeCA004 As ePolicy.AutoCharge
	lobjAutoChargeCA004 = New ePolicy.AutoCharge
	With mobjValues
		'Call lobjAutoChargeCA004.AutoUpdCA004(Request.QueryString.Item("sCodispl"), Session("nTransaction"), .StringToType(Session("nCertif"), eFunctions.Values.eTypeData.etdDouble), Session("sCertype"), .StringToType(Session("nBranch"), eFunctions.Values.eTypeData.etdDouble), .StringToType(Session("nProduct"), eFunctions.Values.eTypeData.etdDouble), .StringToType(Session("nPolicy"), eFunctions.Values.eTypeData.etdDouble), Session("sPoliType"), .StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), .StringToType(Session("nUsercode"), eFunctions.Values.eTypeData.etdDouble))
	End With
	'UPGRADE_NOTE: Object lobjAutoChargeCA004 may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
	lobjAutoChargeCA004 = Nothing
End Sub
'-----------------------------------------------------------------------------------
Private Sub insPrintDocuments()
	'-----------------------------------------------------------------------------------
	Dim mobjDocuments As eReports.Report
	mobjDocuments = New eReports.Report
	With mobjDocuments
		.ReportFilename = "CAL001.rpt"
		.sCodispl = "CAL001"
		.setStorProcParam(1, Session("sCertype"))
		.setStorProcParam(2, Session("nBranch"))
		.setStorProcParam(3, Session("nProduct"))
		.setStorProcParam(4, Session("nPolicy"))
		.setStorProcParam(5, Session("nCertif"))
		.setStorProcParam(6, Mid(Session("dEffecdate"), 7, 4) & Mid(Session("dEffecdate"), 4, 2) & Mid(Session("dEffecdate"), 1, 2))
		.setStorProcParam(7, "9999")
		.setStorProcParam(8, "")
		.setStorProcParam(9, Session("nTransaction"))
		.setStorProcParam(10, "S")
		.setStorProcParam(11, "TIMENOTHING")
		Response.Write((.Command))
	End With
	'UPGRADE_NOTE: Object mobjDocuments may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
	mobjDocuments = Nothing
End Sub

</script>
<%Response.Expires = -1
Response.CacheControl = "private"

mobjValues = New eFunctions.Values
mstrCommand = "sModule=Policy&sProject=PolicySeq&sCodisplReload=" & Request.QueryString.Item("sCodispl")
'+ se limpia variable de session
Session("nFinish") = ""
%> 
<HTML>
<HEAD>
<%
With Response
	.Write(mobjValues.StyleSheet())
	.Write(mobjValues.WindowsTitle("GE002"))
End With
%>
    <META NAME="GENERATOR" CONTENT="Microsoft Visual Studio 6.0"/>
<SCRIPT LANGUAGE="JavaScript" SRC="/VTimeNet/Scripts/GenFunctions.js"></SCRIPT>
<!-- #INCLUDE VIRTUAL="~/VTimeNet/Includes/Constantes.aspx" -->
<!-- #INCLUDE VIRTUAL="~/VTimeNet/Includes/General.aspx" -->
   
<SCRIPT>
//+ Variable para el control de versiones 
    document.VssVersion="$$Revision: 2 $|$$Date: 15/10/03 17.51 $|$$Author: Nvaplat60 $"

//%NewLocation: se recalcula el URL de la página
//------------------------------------------------------------------------------------------
function NewLocation(Source,Codisp){
//------------------------------------------------------------------------------------------
    var lstrLocation = "";
    lstrLocation += Source.location;
    lstrLocation = lstrLocation.replace(/&OPENER=.*/,"") + "&OPENER=" + Codisp
    Source.location = lstrLocation
}
</SCRIPT>  
</HEAD>
<BODY>
<FORM ID="valPolicySeq" NAME="valPolicySeq">
<%
mobjPolicySeq = New ePolicy.ValPolicySeq

'- Se define la variable para almacenar la nueva dirección de la CA001
mstrLocationCA001 = vbNullString

'+ Si no se han validado los campos de la página
If Request.Form.Item("sCodisplReload") = vbNullString Then
	mstrErrors = insvalSequence
	Session("sErrorTable") = mstrErrors
	Session("sForm") = Request.Form.ToString
	mblnReload = False
Else
	mblnReload = True
	Session("sErrorTable") = vbNullString
	Session("sForm") = vbNullString
End If

If mstrErrors > vbNullString Then
	With Response
		.Write("<SCRIPT LANGUAGE=JAVASCRIPT>")
		If Request.QueryString.Item("ActionType") = "Check" Then
			.Write("ShowPopUp(""/VTimeNet/Common/Errors.aspx?sSource=" & Server.URLEncode(mstrCommand) & "&sQueryString=" & Server.URLEncode(Request.Params.Get("Query_String")) & "&ActionType=" & Request.QueryString.Item("ActionType") & "&nIndex=" & Request.QueryString.Item("nIndex") & "&nMainAction=" & Request.QueryString.Item("nMainAction") & mstrQueryString & """, ""PolicySeqError"",660,330);")
		Else
			.Write("ShowPopUp(""/VTimeNet/Common/Errors.aspx?sSource=" & Server.URLEncode(mstrCommand) & "&sQueryString=" & Server.URLEncode(Request.Params.Get("Query_String")) & """, ""PolicySeqError"",660,330);")
			If Request.QueryString.Item("sCodispl") <> "CA021" Then
				.Write(mobjValues.StatusControl(False, CShort(Request.QueryString.Item("nZone")), Request.QueryString.Item("WindowType")))
			End If
		End If
		.Write("</SCRIPT>")
	End With
Else
	If Request.QueryString.Item("nAction") <> CStr(eFunctions.Menues.TypeActions.clngAcceptdataFinish) Then
		If insPostSequence Then
			
			If Request.QueryString.Item("WindowType") <> "PopUp" Then
				
				'+ Si se está tratando con un frame y no con la ventana principal de la secuencia, 
				'+ se mueve automaticamente a la siguiente página
				If mstrLocationCA001 = vbNullString Then
					
					'+ Validacion para cuando la CA012 llama a la sequencia desde el modulo "Ordenes profesionales".
					If CStr(Session("CallSequence")) <> "Prof_ord" Then
						lclsRefresh = New ePolicy.ValPolicySeq
						
						Response.Write(lclsRefresh.RefreshSequence(Request.QueryString.Item("sCodispl") & Request.QueryString.Item("nIndexCover"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("sBrancht"), Session("sPolitype"), "Yes"))
						'UPGRADE_NOTE: Object lclsRefresh may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
						lclsRefresh = Nothing
					Else
						If Request.Form.Item("sCodisplReload") = vbNullString Then
							Response.Write("<SCRIPT>top.frames['fraSequence'].document.location='/VTimeNet/Prof_ord/Prof_ordseq/Sequence.aspx?nAction=" & Request.QueryString.Item("nMainAction") & "&nOpener=" & Request.QueryString.Item("sCodispl") & "&nMainAction=" & Request.QueryString.Item("nMainAction") & "';</SCRIPT>")
						Else
							Response.Write("<SCRIPT>window.close();opener.top.frames['fraSequence'].document.location='/VTimeNet/Prof_ord/Prof_ordseq/Sequence.aspx?nMainAction=" & Request.QueryString.Item("nAction") & "&nOpener=" & Request.QueryString.Item("sCodispl") & "';</SCRIPT>")
						End If
					End If
				Else
					'+ Se carga nuevamente la ventana principal de la secuencia
					If mblnReload Then
						Response.Write("<SCRIPT>window.close();opener.top.document.location=" & mstrLocationCA001 & ";</SCRIPT>")
					Else
						Response.Write("<SCRIPT>top.document.location=" & mstrLocationCA001 & ";</SCRIPT>")
					End If
				End If
				If Request.QueryString.Item("nZone") = "1" Then
					Response.Write("<SCRIPT LANGUAGE=JAVASCRIPT>self.history.go(-1)</SCRIPT>")
				End If
			Else
				If Request.QueryString.Item("sCodispl") <> "CA014" And Request.QueryString.Item("sCodispl") <> "CA014A" And Request.QueryString.Item("sCodispl") <> "VI021" And Request.QueryString.Item("sCodispl") <> "OS001_K" And Request.QueryString.Item("sCodispl") <> "CA027" And Request.QueryString.Item("sCodispl") <> "VI662" And Request.QueryString.Item("sCodispl") <> "CA748" Then
					If Request.QueryString.Item("sCodispl") = "CA025" Then
						If mblnReload Then
							Response.Write("<SCRIPT>top.opener.top.opener.top.frames['fraSequence'].document.location='Sequence.aspx?nAction=" & Request.QueryString.Item("nMainAction") & "&nOpener=" & Request.QueryString.Item("sCodispl") & "&sGoToNext=NO" & "';</SCRIPT>")
						Else
							Response.Write("<SCRIPT>top.opener.top.frames['fraSequence'].document.location='Sequence.aspx?nAction=" & Request.QueryString.Item("nMainAction") & "&nOpener=" & Request.QueryString.Item("sCodispl") & "&sGoToNext=NO" & "';</SCRIPT>")
						End If
					Else
						lclsRefresh = New ePolicy.ValPolicySeq
						Response.Write(lclsRefresh.RefreshSequence(Request.QueryString.Item("sCodispl"), Session("sCertype"), Session("nBranch"), Session("nProduct"), Session("nPolicy"), Session("nCertif"), mobjValues.StringToType(Session("dEffecdate"), eFunctions.Values.eTypeData.etdDate), Session("sBrancht"), Session("sPolitype"), "No"))
						'UPGRADE_NOTE: Object lclsRefresh may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
						lclsRefresh = Nothing
					End If
				End If
				Select Case Request.QueryString.Item("sCodispl")
					'+ Si se trata de Fin de proceso, se recarga la ventana principal de la secuencia
					Case "GE101"
						Response.Write("<SCRIPT>top.opener.top.document.location.href=" & mstrLocationCA001 & ";</SCRIPT>")
						'+ Emisión de recibo automático                                
					Case "CA027"
						Response.Write("<SCRIPT>top.close();</SCRIPT>")
					Case "CA020"
						Response.Write("<SCRIPT>top.opener.document.location.href='" & Request.QueryString.Item("sCodispl") & ".aspx?Reload=" & Request.Form.Item("chkContinue") & "&ReloadAction=" & Request.QueryString.Item("Action") & "&ReloadIndex=" & Request.QueryString.Item("ReloadIndex") & "&sCodispl=" & Request.QueryString.Item("sCodispl") & "&sOnSeq=1" & "&nMainAction=" & Request.QueryString.Item("nMainAction") & "&nOwnShare=" & Request.Form.Item("hddOwnShare") & "&nExpenses=" & Request.Form.Item("hddExpenses") & "'</SCRIPT>")
					Case "CA658"
						Response.Write("<SCRIPT>top.opener.document.location.href='" & Request.QueryString.Item("sCodispl") & "Frame.aspx?Reload=" & Request.Form.Item("chkContinue") & "&ReloadAction=" & Request.QueryString.Item("Action") & "&ReloadIndex=" & Request.QueryString.Item("ReloadIndex") & "&sCodispl=" & Request.QueryString.Item("sCodispl") & "&sOnSeq=1" & "&nMainAction=" & Request.QueryString.Item("nMainAction") & "&nOptAge=" & Request.Form.Item("OptAge") & "'</SCRIPT>")
					Case "CA024"
						Response.Write("<SCRIPT>top.opener.document.location.href='CA024.aspx?Reload=" & Request.Form.Item("chkContinue") & "&ReloadAction=" & Request.QueryString.Item("Action") & "&ReloadIndex=" & Request.QueryString.Item("ReloadIndex") & "&sCodispl=" & Request.QueryString.Item("sCodispl") & "&sInd_comm=" & Request.Form.Item("hddInd_Comm") & "&sConcoll=" & Request.Form.Item("hddConColl") & "&nCommityp=" & Session("hddsType") & "&nPercent=" & Request.Form.Item("hddtcnPercent") & "'</SCRIPT>")
					Case "CA021"
						Response.Write("<SCRIPT>top.opener.document.location.href='" & Request.QueryString.Item("sCodispl") & ".aspx?Reload=" & Request.Form.Item("chkContinue") & "&ReloadAction=" & Request.QueryString.Item("Action") & "&ReloadIndex=" & Request.QueryString.Item("ReloadIndex") & "&sCodispl=" & Request.QueryString.Item("sCodispl") & "&sOnSeq=1" & Request.Form.Item("tctSetting") & "&sKeep=1&nBranchRei=" & Request.Form.Item("cbeBranchrei") & "&nModulec=" & Request.Form.Item("tcnModulec") & "&nCover=" & Request.Form.Item("valCover") & "&sClient=" & Request.Form.Item("valClient") & "&sPopupT=" & Request.Form.Item("tctPopUpT") & mstrQueryString & "'</SCRIPT>")
					Case "VI811"
						Response.Write("<SCRIPT>top.opener.document.location.href='" & Request.QueryString.Item("sCodispl") & ".aspx?Reload=" & Request.Form.Item("chkContinue") & "&ReloadAction=" & Request.QueryString.Item("Action") & "&ReloadIndex=" & Request.QueryString.Item("Index") & "&sCodispl=" & Request.QueryString.Item("sCodispl") & "&nGroups=" & Request.Form.Item("valGroups") & "&nModulec=" & Request.Form.Item("valModulec") & "'</SCRIPT>")
					Case "VI681"
						Response.Write("<SCRIPT>top.opener.document.location.href='" & Request.QueryString.Item("sCodispl") & ".aspx?Reload=" & Request.Form.Item("chkContinue") & "&ReloadAction=" & Request.QueryString.Item("Action") & "&ReloadIndex=" & Request.QueryString.Item("Index") & "&sCodispl=" & Request.QueryString.Item("sCodispl") & "&Reload=2&sClient=" & Request.Form.Item("hddsClient") & "&nRole=" & Request.Form.Item("hddnRole") & "'</SCRIPT>")
						'+ Cuadro de valores garantizados
					Case "VI732"
						Response.Write("<SCRIPT>top.opener.document.location.href='" & Request.QueryString.Item("sCodispl") & ".aspx?Reload=" & Request.Form.Item("chkContinue") & "&ReloadAction=" & Request.QueryString.Item("Action") & "&ReloadIndex=" & Request.QueryString.Item("ReloadIndex") & "&sCodispl=" & Request.QueryString.Item("sCodispl") & "&sOnSeq=1" & "&nMainAction=" & Request.QueryString.Item("nMainAction") & "&sAut_guarval=" & Request.Form.Item("hddAut_guarval") & "&nCurrency=" & Request.Form.Item("cbeCurrency") & "'</SCRIPT>")
					Case "AM002"
						Response.Write("<SCRIPT>top.opener.document.location.href='" & Request.QueryString.Item("sCodispl") & ".aspx?Reload=" & Request.Form.Item("chkContinue") & "&ReloadAction=" & Request.QueryString.Item("Action") & "&ReloadIndex=" & Request.QueryString.Item("ReloadIndex") & "&sCodispl=" & Request.QueryString.Item("sCodispl") & "&sOnSeq=1" & "&nTariff=" & Request.Form.Item("tcnTariff") & "&nGroup=" & Request.Form.Item("tcnGroup") & "&nRole=" & Request.Form.Item("tcnRole") & "'</SCRIPT>")
					Case "AM003"
						Response.Write("<SCRIPT>top.opener.document.location.href='" & Request.QueryString.Item("sCodispl") & ".aspx?Reload=" & Request.Form.Item("chkContinue") & "&ReloadAction=" & Request.QueryString.Item("Action") & "&ReloadIndex=" & Request.QueryString.Item("ReloadIndex") & "&sCodispl=" & Request.QueryString.Item("sCodispl") & "&sOnSeq=1" & "&nMainAction=" & Request.QueryString.Item("nMainAction") & "&nTariff=" & Request.QueryString.Item("nTariff") & "&nCover=" & Request.QueryString.Item("nCover") & "&nRole=" & Request.QueryString.Item("nRole") & "&sClient=" & Request.QueryString.Item("sClient") & "&sIllness=" & Request.QueryString.Item("sIllness") & "&nGroup=" & Request.QueryString.Item("nGroup") & "&nModulec=" & Request.QueryString.Item("nModulec") & "&nLimitH=" & Request.QueryString.Item("nLimitH") & "&sAutoRestit=" & Request.QueryString.Item("sAutoRestit") & "'</SCRIPT>")
					Case "VI666"
						Response.Write("<SCRIPT>top.opener.document.location.href='" & Request.QueryString.Item("sCodispl") & ".aspx?Reload=" & Request.Form.Item("chkContinue") & "&ReloadAction=" & Request.QueryString.Item("Action") & "&ReloadIndex=" & Request.QueryString.Item("Index") & "&sCodispl=" & Request.QueryString.Item("sCodispl") & "&sReloadPage=1" & mstrQueryString & "'</SCRIPT>")
					Case "CA025"
						If mblnReload Then
							Response.Write("<SCRIPT>window.close();opener.top.opener.document.location.href='" & Request.QueryString.Item("sCodispl") & ".aspx?Reload=" & Request.Form.Item("chkContinue") & "&ReloadAction=" & Request.QueryString.Item("Action") & "&ReloadIndex=" & Request.QueryString.Item("ReloadIndex") & "&sCodispl=" & Request.QueryString.Item("sCodispl") & "&sOnSeq=1" & "&nMainAction=" & Request.QueryString.Item("nMainAction") & "'</SCRIPT>")
						Else
							Response.Write("<SCRIPT>top.opener.document.location.href='" & Request.QueryString.Item("sCodispl") & ".aspx?Reload=" & Request.Form.Item("chkContinue") & "&ReloadAction=" & Request.QueryString.Item("Action") & "&ReloadIndex=" & Request.QueryString.Item("ReloadIndex") & "&sCodispl=" & Request.QueryString.Item("sCodispl") & "&sOnSeq=1" & "&nMainAction=" & Request.QueryString.Item("nMainAction") & "'</SCRIPT>")
						End If
					Case "CA014", "CA014A"
						If Request.QueryString.Item("ActionType") = "Check" Then
							Response.Write("<SCRIPT>")
							Response.Write("setPointer('');")
							If Request.QueryString.Item("sCodispl") = "CA014" Then
								If mblnReload Then
									mstrScript = mstrScript & "top.opener."
								End If
								mstrScript = mstrScript & "top.frames['fraFolder'].InsCalTotalPremium();"
							End If
							If mblnReload Then
								mstrScript = mstrScript & "window.close();"
							End If
							Response.Write(mstrScript)
							Response.Write("</SCRIPT>")
						Else
							If mblnReload Then
								Response.Write("<SCRIPT>window.close();top.opener.top.opener.top.frames['fraFolder'].document.location.href='" & Request.QueryString.Item("sCodispl") & ".aspx?sCodispl=" & Request.QueryString.Item("sCodispl") & "&Reload=" & Request.Form.Item("chkContinue") & "&ReloadAction=" & Request.QueryString.Item("Action") & "&ReloadIndex=" & Request.QueryString.Item("Index") & "&nMainAction=" & Request.QueryString.Item("nMainAction") & mstrQueryString & "'</SCRIPT>")
							Else
								Response.Write("<SCRIPT>top.opener.document.location.href='" & Request.QueryString.Item("sCodispl") & ".aspx?sCodispl=" & Request.QueryString.Item("sCodispl") & "&Reload=" & Request.Form.Item("chkContinue") & "&ReloadAction=" & Request.QueryString.Item("Action") & "&ReloadIndex=" & Request.QueryString.Item("Index") & "&nMainAction=" & Request.QueryString.Item("nMainAction") & mstrQueryString & "'</SCRIPT>")
							End If
						End If
					Case "CA016", "CA016A"
						Response.Write("<SCRIPT>top.opener.document.location.href='CA016.aspx?sCodispl=" & Request.QueryString.Item("sCodispl") & "&Reload=" & Request.Form.Item("chkContinue") & "&ReloadAction=" & Request.QueryString.Item("Action") & "&ReloadIndex=" & Request.QueryString.Item("Index") & mstrQueryString & "'</SCRIPT>")
					Case "OS001_K"
						Response.Write("<SCRIPT>top.opener.document.location.href='OS001.aspx?sCodispl=" & Request.QueryString.Item("sCodispl") & "&Reload=" & Request.Form.Item("chkContinue") & "&ReloadAction=" & Request.QueryString.Item("Action") & "&ReloadIndex=" & Request.QueryString.Item("Index") & mstrQueryString & "'</SCRIPT>")
					Case "CA748"
						Response.Write("<SCRIPT>top.opener.document.location.href='" & Request.QueryString.Item("sCodispl") & ".aspx?sCodispl=" & Request.QueryString.Item("sCodispl") & "&Reload=" & Request.Form.Item("chkContinue") & "&ReloadAction=" & Request.QueryString.Item("Action") & "&ReloadIndex=" & Request.QueryString.Item("Index") & "&nMainAction=" & Request.QueryString.Item("nMainAction") & "&sOnSeq=" & Request.QueryString.Item("sOnSeq") & mstrQueryString & "'</SCRIPT>")
					Case "CA013", "CA013A"
						Response.Write("<SCRIPT>top.opener.document.location.href='CA013.aspx?sCodispl=" & Request.QueryString.Item("sCodispl") & "&Reload=" & Request.Form.Item("chkContinue") & "&ReloadAction=" & Request.QueryString.Item("Action") & "&ReloadIndex=" & Request.QueryString.Item("Index") & "&nMainAction=" & Request.QueryString.Item("nMainAction") & mstrQueryString & "'</SCRIPT>")
					Case "VI7003"
						Response.Write("<SCRIPT>top.opener.document.location.href='VI7003.aspx?Reload=" & Request.Form.Item("chkContinue") & "&ReloadAction=" & Request.QueryString.Item("Action") & "&ReloadIndex=" & Request.QueryString.Item("ReloadIndex") & "&sCodispl=" & Request.QueryString.Item("sCodispl") & "&nMainAction=" & Request.QueryString.Item("nMainAction") & "&sOnSeq=1" & "'</SCRIPT>")
					Case "VI7005"
						Response.Write("<SCRIPT>top.opener.document.location.href='VI7005.aspx?Reload=" & Request.Form.Item("chkContinue") & "&ReloadAction=" & Request.QueryString.Item("Action") & "&ReloadIndex=" & Request.QueryString.Item("ReloadIndex") & "&sCodispl=" & Request.QueryString.Item("sCodispl") & "&nMainAction=" & Request.QueryString.Item("nMainAction") & "&sOnSeq=1" & "'</SCRIPT>")
					Case Else
						If mblnReload Then
							Response.Write("<SCRIPT>window.close();top.opener.top.opener.top.frames['fraFolder'].document.location.href='" & Request.QueryString.Item("sCodispl") & ".aspx?sCodispl=" & Request.QueryString.Item("sCodispl") & "&Reload=" & Request.Form.Item("chkContinue") & "&ReloadAction=" & Request.QueryString.Item("Action") & "&ReloadIndex=" & Request.QueryString.Item("Index") & "&nMainAction=304" & mstrQueryString & "'</SCRIPT>")
						Else
							Response.Write("<SCRIPT>top.opener.document.location.href='" & Request.QueryString.Item("sCodispl") & ".aspx?sCodispl=" & Request.QueryString.Item("sCodispl") & "&Reload=" & Request.Form.Item("chkContinue") & "&ReloadAction=" & Request.QueryString.Item("Action") & "&ReloadIndex=" & Request.QueryString.Item("Index") & "&nMainAction=304" & mstrQueryString & "'</SCRIPT>")
						End If
				End Select
			End If
		Else
			If Not CBool(IIf(IsNothing(Request.Form.Item("hddbPuntual")), False, Request.Form.Item("hddbPuntual"))) Then
				Response.Write("<SCRIPT>alert('No se pudo realizar la actualización');</SCRIPT>")
			End If
		End If
	Else
		If Request.QueryString.Item("nAction") = CStr(eFunctions.Menues.TypeActions.clngAcceptdataFinish) Then
			'+ Se recarga la página principal de la secuencia                
			If CStr(Session("CallSequence")) = "Prof_ord" Then
				mstrLocationCA001 = "'/VTimeNet/Common/secWHeader.aspx?sCodispl=OS590&sProject=Prof_ordseq&sModule=Prof_ord'"
				Response.Write("<SCRIPT>top.document.location=" & mstrLocationCA001 & ";</SCRIPT>")
			Else
				If insFinish() Then
					If Request.Form.Item("sCodisplReload") = "CA048" Then
						Response.Write("<SCRIPT>window.close();top.opener.top.document.location=" & mstrLocationCA001 & ";</SCRIPT>")
					Else
						If Request.QueryString.Item("sCodispl") = "CA048" Then
							mstrLocationCA001 = "'/VTimeNet/Common/secWHeader.aspx?sCodispl=CA001_K&sProject=PolicySeq&sModule=Policy&sConfig=""&nAction=0" & Request.QueryString.Item("nMainAction") & "&bMenu=1'"
							Response.Write("<SCRIPT>top.document.location=" & mstrLocationCA001 & ";</SCRIPT>")
						ElseIf Request.QueryString.Item("sCodispl") = "CA050" Then 
							
							Response.Write("<SCRIPT>top.opener.top.document.location=" & mstrLocationCA001 & ";</SCRIPT>")
						End If
					End If
				Else
					Response.Write("<SCRIPT>alert('No se pudo realizar la actualización final');</SCRIPT>")
				End If
			End If
		End If
	End If
End If
'UPGRADE_NOTE: Object mobjPolicySeq may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
mobjPolicySeq = Nothing
'UPGRADE_NOTE: Object mobjValues may not be destroyed until it is garbage collected. Copy this link in your browser for more: 'http://msdn.microsoft.com/library/en-us/vbcon/html/vbup1029.aspx'
mobjValues = Nothing
%>
        </FORM>
    </BODY>
</HTML>





