<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="valCoverColumnCaption" xml:space="preserve">
    <value>Coverage</value>
  </data>
  <data name="valCoverColumnToolTip" xml:space="preserve">
    <value>Coverage affected by the payment</value>
  </data>
  <data name="tcnConceptColumnCaption" xml:space="preserve">
    <value>Payment Item</value>
  </data>
  <data name="tcnConceptColumnToolTip" xml:space="preserve">
    <value>Payment item affected by the payment</value>
  </data>
  <data name="cbeCurrency_covColumnCaption" xml:space="preserve">
    <value>Origin Currency</value>
  </data>
  <data name="cbeCurrency_covColumnToolTip" xml:space="preserve">
    <value>Original currency in which the coverage is expressed</value>
  </data>
  <data name="tcnLocAmount_PayColumnCaption" xml:space="preserve">
    <value>Amount in Original Currency</value>
  </data>
  <data name="tcnLocAmount_PayColumnToolTip" xml:space="preserve">
    <value>Amount expressed in the original currency of the coverage</value>
  </data>
  <data name="tcnLocAmountColumnCaption" xml:space="preserve">
    <value>Pending Reserve (Original Currency)</value>
  </data>
  <data name="tcnLocAmountColumnToolTip" xml:space="preserve">
    <value>Amount that belongs to the outstanding reserve amount</value>
  </data>
  <data name="tcnAmount_PaycovColumnCaption" xml:space="preserve">
    <value>Payment (Original Currency)</value>
  </data>
  <data name="tcnAmount_PaycovColumnToolTip" xml:space="preserve">
    <value>Payment amount without taxes expressed in the coverage's currency</value>
  </data>
  <data name="tcnAmountColumnCaption" xml:space="preserve">
    <value>Net Amount (Payment Currency)</value>
  </data>
  <data name="tcnAmountColumnToolTip" xml:space="preserve">
    <value>Payment amount without taxes</value>
  </data>
  <data name="tcnTaxColumnCaption" xml:space="preserve">
    <value>Taxes</value>
  </data>
  <data name="tcnTaxColumnToolTip" xml:space="preserve">
    <value>Tax percentage to be applied</value>
  </data>
  <data name="tcnAmountPayCoverColumnCaption" xml:space="preserve">
    <value>Gross Amount (Payment Currency)</value>
  </data>
  <data name="tcnAmountPayCoverColumnToolTip" xml:space="preserve">
    <value>Amount of the payment coverage/item which includes the tax amount (if it has been applied)</value>
  </data>
  <data name="AnchorCaption" xml:space="preserve">
    <value>Addressee</value>
  </data>
  <data name="cbeRoleCaption" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="cbeRoleToolTip" xml:space="preserve">
    <value>Type of beneficiary for claim payment</value>
  </data>
  <data name="valClientCaption" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="valClientToolTip" xml:space="preserve">
    <value>Code of the beneficiay to which the payment will be made</value>
  </data>
  <data name="Anchor2Caption" xml:space="preserve">
    <value>Owner of the Payment Order</value>
  </data>
  <data name="cbeOfficeCaption" xml:space="preserve">
    <value>Destination of the Cheque</value>
  </data>
  <data name="cbeOfficeToolTip" xml:space="preserve">
    <value>Branch office where the payment is recorded</value>
  </data>
  <data name="cbeOfficeAgenCaption" xml:space="preserve">
    <value>Local Office</value>
  </data>
  <data name="cbeOfficeAgenToolTip" xml:space="preserve">
    <value>Office where the payment is recorded</value>
  </data>
  <data name="cbeAgencyCaption" xml:space="preserve">
    <value>Field Office</value>
  </data>
  <data name="cbeAgencyToolTip" xml:space="preserve">
    <value>Agency where the payment is registered</value>
  </data>
  <data name="cbePayFormCaption" xml:space="preserve">
    <value>Payment Method</value>
  </data>
  <data name="cbePayFormToolTip" xml:space="preserve">
    <value>Payment mode of the payment to be made</value>
  </data>
  <data name="valServ_orderCaption" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="valServ_orderToolTip" xml:space="preserve">
    <value>Number identifying the order for service by a professional</value>
  </data>
  <data name="tcnInvoiceCaption" xml:space="preserve">
    <value>Document</value>
  </data>
  <data name="tcnInvoiceToolTip" xml:space="preserve">
    <value>Number of the physical document associated with the payment</value>
  </data>
  <data name="cbeDoc_TypeCaption" xml:space="preserve">
    <value>Type of Document</value>
  </data>
  <data name="cbeDoc_TypeToolTip" xml:space="preserve">
    <value>Type of support document of the payment</value>
  </data>
  <data name="tcdBillDateCaption" xml:space="preserve">
    <value>Document Date</value>
  </data>
  <data name="tcdBillDateToolTip" xml:space="preserve">
    <value>Date of the document associated with the payment</value>
  </data>
  <data name="cbeCurrencyCaption" xml:space="preserve">
    <value>Payment Currency</value>
  </data>
  <data name="cbeCurrencyToolTip" xml:space="preserve">
    <value>Currency in which the payment is made</value>
  </data>
  <data name="tcdValdateCaption" xml:space="preserve">
    <value>Valuation Date</value>
  </data>
  <data name="tcdValdateToolTip" xml:space="preserve">
    <value>Date to be used when converting the payment currency to the local one</value>
  </data>
  <data name="tcnExchangeCaption" xml:space="preserve">
    <value>Exchange Rate</value>
  </data>
  <data name="tcnExchangeToolTip" xml:space="preserve">
    <value>It indicates the exchange rate to be used to convert the payment amount to local currency</value>
  </data>
  <data name="tcnAmountPayCaption" xml:space="preserve">
    <value>Total Paid (Payment Currency)</value>
  </data>
  <data name="tcnAmountPayToolTip" xml:space="preserve">
    <value>Total amount of the payment to be made</value>
  </data>
  <data name="tcdPaydateCaption" xml:space="preserve">
    <value>Payment Effective Date</value>
  </data>
  <data name="tcdPaydateToolTip" xml:space="preserve">
    <value>Effective date in which the payment was made</value>
  </data>
</root>