<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="tctDescriptCaption" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="tctDescriptToolTip" xml:space="preserve">
    <value>Full name of the product</value>
  </data>
  <data name="tctShortDesCaption" xml:space="preserve">
    <value>Short Description</value>
  </data>
  <data name="tctShortDesToolTip" xml:space="preserve">
    <value>Short name of the product</value>
  </data>
  <data name="tctCondSVSCaption" xml:space="preserve">
    <value>Terms &amp; Conditions</value>
  </data>
  <data name="tctCondSVSToolTip" xml:space="preserve">
    <value>Conditional code or name associated with the product</value>
  </data>
  <data name="tcdVigDateCaption" xml:space="preserve">
    <value>Validity Date</value>
  </data>
  <data name="tcdVigDateToolTip" xml:space="preserve">
    <value>Effective date of the product</value>
  </data>
  <data name="AnchorCaption" xml:space="preserve">
    <value>Control</value>
  </data>
  <data name="Anchor2Caption" xml:space="preserve">
    <value>Types of Policy</value>
  </data>
  <data name="chkSimulatorCaption" xml:space="preserve">
    <value>Type of policy</value>
  </data>
  <data name="chkSimulatorToolTip" xml:space="preserve">
    <value>Whether the product can not be used for underwriting</value>
  </data>
  <data name="tcnReferenceCaption" xml:space="preserve">
    <value>Reference</value>
  </data>
  <data name="tcnReferenceToolTip" xml:space="preserve">
    <value>Associated with the reference number generated in the management module</value>
  </data>
  <data name="chkIndividualCaption" xml:space="preserve">
    <value>Individual</value>
  </data>
  <data name="chkIndividualToolTip" xml:space="preserve">
    <value>It indicates that individual policies may be issued</value>
  </data>
  <data name="tcnVersionCaption" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="tcnVersionToolTip" xml:space="preserve">
    <value>Number identifying the product's version</value>
  </data>
  <data name="chkGroupsCaption" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="chkGroupsToolTip" xml:space="preserve">
    <value>It indicates if group policies may be issued</value>
  </data>
  <data name="cbeStatusCaption" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="cbeStatusToolTip" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="chkMultiCaption" xml:space="preserve">
    <value>Multiple Location</value>
  </data>
  <data name="chkMultiToolTip" xml:space="preserve">
    <value>It indicates that innominated or multiple location policies may be issued</value>
  </data>
  <data name="Anchor3Caption" xml:space="preserve">
    <value>Accumulation</value>
  </data>
  <data name="Anchor4Caption" xml:space="preserve">
    <value>Reference required</value>
  </data>
  <data name="cbeTypeHeapCaption" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="cbeTypeHeapToolTip" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="valDeclarativeCaption" xml:space="preserve">
    <value>Reporting Policies</value>
  </data>
  <data name="valDeclarativeToolTip" xml:space="preserve">
    <value>Name of the window that will contain the specific information on the risk</value>
  </data>
  <data name="cbeReinHeapCaption" xml:space="preserve">
    <value>Reinsurance</value>
  </data>
  <data name="cbeReinHeapToolTip" xml:space="preserve">
    <value>Reinsurance</value>
  </data>
  <data name="tcnCurrencyQCaption" xml:space="preserve">
    <value>Currencies</value>
  </data>
  <data name="tcnCurrencyQToolTip" xml:space="preserve">
    <value>Maximum number of currencies permitted for the policies associated with the product</value>
  </data>
  <data name="chkNumpropCaption" xml:space="preserve">
    <value>Number policy after application</value>
  </data>
  <data name="chkNumpropToolTip" xml:space="preserve">
    <value>It indicates that the policy number will be the same than the proposal number</value>
  </data>
  <data name="chkAuto_suscCaption" xml:space="preserve">
    <value>Automatic Issue</value>
  </data>
  <data name="chkAuto_suscToolTip" xml:space="preserve">
    <value>It indicates if the product has an automatic subscription</value>
  </data>
  <data name="chkMassiveCaption" xml:space="preserve">
    <value>Bulk Handling</value>
  </data>
  <data name="chkMassiveToolTip" xml:space="preserve">
    <value>Indicates whether the product has mass management</value>
  </data>
  <data name="chkRatingServiceUsingCaption" xml:space="preserve">
    <value>Use RATING SERVICE</value>
  </data>
  <data name="chkRatingServiceUsingToolTip" xml:space="preserve">
    <value>Whether the coverage calculation uses the Rating Service</value>
  </data>
  <data name="tctPreffix" xml:space="preserve">
    <value>Preffix</value>
  </data>
  <data name="tctPreffixToolTip" xml:space="preserve">
    <value>Preffix to be joined with the policy number for reporting purposes</value>
  </data>
  <data name="cbeAssociatedBranchCaption" xml:space="preserve">
    <value>Branch Associated</value>
  </data>
  <data name="cbeAssociatedBranchToolTip" xml:space="preserve">
    <value>Code of the line of business of the policy associated</value>
  </data>
  <data name="chkAssociated_Policy_RequiredCaption" xml:space="preserve">
    <value>Associated Policy</value>
  </data>
  <data name="chkAssociated_Policy_RequiredToolTip" xml:space="preserve">
    <value>Indicator associated management policy</value>
  </data>
  <data name="nTypeAccount_Caption" xml:space="preserve">
    <value>Account handling the product</value>
  </data>
  <data name="nTypeAccount_ToolTip" xml:space="preserve">
    <value>The account that handles the product. Account type most used in the product is selected, the system displays the value at the time the policy was issued but the user can modify</value>
  </data>
  <data name="tcnModuleMinCaption" xml:space="preserve">
    <value>Mandatory minimum amount of product modules</value>
  </data>
  <data name="tcnModuleMinToolTip" xml:space="preserve">
    <value>Mandatory minimum number of modules you should select the user for the issuance of a policy of product treatment</value>
  </data>
  <data name="Anchor5Caption" xml:space="preserve">
    <value>Module</value>
  </data>
  <data name="chkAutomaticBillCaption" xml:space="preserve">
    <value>Automatic billing</value>
  </data>
  <data name="chkAutomaticBillToolTip" xml:space="preserve">
    <value>It indicates that the invoice is generated upon receipt creation . In mass processes such as bulk load renewal or billing should be performed by the transaction that is in charge of this process.</value>
  </data>
  <data name="tctResolutionSBSCaption" xml:space="preserve">
    <value>Resolution of the SBS to be printed in the policy box</value>
  </data>
  <data name="tctResolutionSBSToolTip" xml:space="preserve">
    <value>In this field is placed what should be printed in the header of the policy box, corresponds to the legal text approved by the SBS.</value>
  </data>
</root>