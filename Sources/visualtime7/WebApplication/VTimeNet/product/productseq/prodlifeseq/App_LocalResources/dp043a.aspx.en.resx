<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="tctRouAdvanCaption" xml:space="preserve">
    <value>Routine</value>
  </data>
  <data name="tctRouAdvanToolTip" xml:space="preserve">
    <value>Code of the routine/formula to be used to determine the maximum possible value of the loan</value>
  </data>
  <data name="tcnQMEPLoansCaption" xml:space="preserve">
    <value>Minimum Months In Force</value>
  </data>
  <data name="tcnQMEPLoansToolTip" xml:space="preserve">
    <value>Minimum number of effective months that the policy must have in order to execute the loan</value>
  </data>
  <data name="tcnQMMLoansCaption" xml:space="preserve">
    <value>Maximum of Loans per Month</value>
  </data>
  <data name="tcnQMMLoansToolTip" xml:space="preserve">
    <value>Maximum number of loans that may be granted per month</value>
  </data>
  <data name="tcnQMYLoansCaption" xml:space="preserve">
    <value>Maximum of Loans per Year</value>
  </data>
  <data name="tcnQMYLoansToolTip" xml:space="preserve">
    <value>Maximum number of loans that may be granted per year</value>
  </data>
  <data name="tcnAMinLoansCaption" xml:space="preserve">
    <value>Minimum Loan Amount</value>
  </data>
  <data name="tcnAMinLoansToolTip" xml:space="preserve">
    <value>Minimum amount that the loan must have to be granted</value>
  </data>
  <data name="tcnAMaxLoansCaption" xml:space="preserve">
    <value>Maximum Loan Amount</value>
  </data>
  <data name="tcnAMaxLoansToolTip" xml:space="preserve">
    <value>Maximum amount or maximum limit amount of the loan that will be granted</value>
  </data>
  <data name="tcnPerVSLoansCaption" xml:space="preserve">
    <value>% over Surrender Value</value>
  </data>
  <data name="tcnPerVSLoansToolTip" xml:space="preserve">
    <value>Percentage to be applied to the surrender value in order to obtained the maximum loan that may be granted</value>
  </data>
  <data name="tcnTaxesCaption" xml:space="preserve">
    <value>% of Fiscal/Stamp</value>
  </data>
  <data name="tcnTaxesToolTip" xml:space="preserve">
    <value>Percentage to be applied to the loan's amount to obtain the amount of stamps</value>
  </data>
  <data name="tcnPercTolCaption" xml:space="preserve">
    <value>Allowed Tolerance</value>
  </data>
  <data name="tcnPercTolToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="cbeOrigin_LoanCaption" xml:space="preserve">
    <value>It has allowed</value>
  </data>
  <data name="cbeOrigin_LoanToolTip" xml:space="preserve">
    <value>It has allowed for partial surrenders</value>
  </data>
  <data name="AnchorCaption" xml:space="preserve">
    <value>Loans</value>
  </data>
  <data name="tcnInterestCaption" xml:space="preserve">
    <value>% annual</value>
  </data>
  <data name="tcnInterestToolTip" xml:space="preserve">
    <value>Percentage of annual interest to be collected</value>
  </data>
  <data name="cbeAnlifintCaption" xml:space="preserve">
    <value>Type of Interest</value>
  </data>
  <data name="cbeAnlifintToolTip" xml:space="preserve">
    <value>It indicates how interests will be charged to the client</value>
  </data>
  <data name="cbePayInterCaption" xml:space="preserve">
    <value>Collection included in</value>
  </data>
  <data name="cbePayInterToolTip" xml:space="preserve">
    <value>It indicates if the amount to be collected on interests is included in a new bill or if it is included in each renewal bill</value>
  </data>
  <data name="tctRouInterestCaption" xml:space="preserve">
    <value>Interest calculation</value>
  </data>
  <data name="tctRouInterestToolTip" xml:space="preserve">
    <value>Rutine/formula used to obtain the interest amount to be collected</value>
  </data>
  <data name="cbeBill_itemCaption" xml:space="preserve">
    <value>Billing Item</value>
  </data>
  <data name="cbeBill_itemToolTip" xml:space="preserve">
    <value>Billing item that will be associated with the interest amount to be collect</value>
  </data>
</root>