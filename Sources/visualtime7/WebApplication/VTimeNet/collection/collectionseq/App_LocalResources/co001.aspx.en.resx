<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cbeCollecDocTypColumnCaption" xml:space="preserve">
    <value>Concept of credit/debit</value>
  </data>
  <data name="cbeCollecDocTypColumnToolTip" xml:space="preserve">
    <value>Type of document to which the collection will be executed</value>
  </data>
  <data name="cbeBranchColumnCaption" xml:space="preserve">
    <value>Line of Business</value>
  </data>
  <data name="cbeBranchColumnToolTip" xml:space="preserve">
    <value>Line of business in process</value>
  </data>
  <data name="valProductColumnCaption" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="valProductColumnToolTip" xml:space="preserve">
    <value>Product associated with the line of business</value>
  </data>
  <data name="tcnPolicyColumnCaption" xml:space="preserve">
    <value>Policy</value>
  </data>
  <data name="tcnPolicyColumnToolTip" xml:space="preserve">
    <value>Number of the policy</value>
  </data>
  <data name="tcnCertifColumnCaption" xml:space="preserve">
    <value>Certificate</value>
  </data>
  <data name="tcnCertifColumnToolTip" xml:space="preserve">
    <value>Certificate number</value>
  </data>
  <data name="tcnDocumentColumnCaption" xml:space="preserve">
    <value>Document</value>
  </data>
  <data name="tcnDocumentColumnToolTip" xml:space="preserve">
    <value>Number of document</value>
  </data>
  <data name="btnSCO001ColumnToolTip" xml:space="preserve">
    <value>Data for Verification of a Bill</value>
  </data>
  <data name="tcnDraftColumnCaption" xml:space="preserve">
    <value>Installment</value>
  </data>
  <data name="tcnDraftColumnToolTip" xml:space="preserve">
    <value>Number of the instalment associated with the financing agreement</value>
  </data>
  <data name="valCodeColumnCaption" xml:space="preserve">
    <value>Loan</value>
  </data>
  <data name="dtcClientColumnCaption" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="dtcClientColumnToolTip" xml:space="preserve">
    <value>Code of the client in process</value>
  </data>
  <data name="tcnProponumColumnCaption" xml:space="preserve">
    <value>Application</value>
  </data>
  <data name="tcnProponumColumnToolTip" xml:space="preserve">
    <value>Number of proposal</value>
  </data>
  <data name="tcnAmountColColumnCaption" xml:space="preserve">
    <value>Amount pending</value>
  </data>
  <data name="tcnAmountColColumnToolTip" xml:space="preserve">
    <value>Outstanding amount</value>
  </data>
  <data name="cbeCurrencyColumnCaption" xml:space="preserve">
    <value>Currency origin</value>
  </data>
  <data name="cbeCurrencyColumnToolTip" xml:space="preserve">
    <value>Original currency of the document</value>
  </data>
  <data name="tcdValuedateColumnCaption" xml:space="preserve">
    <value>Date of value</value>
  </data>
  <data name="tcdValuedateColumnToolTip" xml:space="preserve">
    <value>Date to which the exchange rate is applied</value>
  </data>
  <data name="tcnExchangeColumnCaption" xml:space="preserve">
    <value>Exchange rate</value>
  </data>
  <data name="tcnExchangeColumnToolTip" xml:space="preserve">
    <value>Exchange rate</value>
  </data>
  <data name="tcnAmountPayColumnCaption" xml:space="preserve">
    <value>Amount to pay L.C.</value>
  </data>
  <data name="tcnAmountPayColumnToolTip" xml:space="preserve">
    <value>Total amount to be paid</value>
  </data>
  <data name="tcnAmountLocColumnCaption" xml:space="preserve">
    <value>Amount to pay</value>
  </data>
  <data name="tcnAmountLocColumnToolTip" xml:space="preserve">
    <value>Amount in  currency of payment</value>
  </data>
  <data name="tcnInterest_rateColumnCaption" xml:space="preserve">
    <value>Interests of late payment L.C.</value>
  </data>
  <data name="tcnInterest_rateColumnToolTip" xml:space="preserve">
    <value>Interest amount in arrears</value>
  </data>
  <data name="tcnInterestLocColumnCaption" xml:space="preserve">
    <value>Impaired interest amount</value>
  </data>
  <data name="tcnInterestLocColumnToolTip" xml:space="preserve">
    <value>Amount of interests in arrears expressed in the currency of the payment</value>
  </data>
  <data name="tcnTax_discountColumnCaption" xml:space="preserve">
    <value>Discount rate</value>
  </data>
  <data name="tcnTax_discountColumnToolTip" xml:space="preserve">
    <value>Interest in arrears</value>
  </data>
  <data name="tcnface_valueColumnCaption" xml:space="preserve">
    <value>Face value</value>
  </data>
  <data name="tcnface_valueColumnToolTip" xml:space="preserve">
    <value>Face value amount of the bonus (it is expressed in local currency)</value>
  </data>
  <data name="tcdIssuedateColumnCaption" xml:space="preserve">
    <value>Issue date</value>
  </data>
  <data name="tcdIssuedateColumnToolTip" xml:space="preserve">
    <value>Date when the bouns is issued</value>
  </data>
  <data name="tcdExpirdateColumnCaption" xml:space="preserve">
    <value>Date of expiry</value>
  </data>
  <data name="tcdExpirdateColumnToolTip" xml:space="preserve">
    <value>Expiration date of the bonus</value>
  </data>
  <data name="valOriginColumnCaption" xml:space="preserve">
    <value>Origin</value>
  </data>
  <data name="valOriginColumnToolTip" xml:space="preserve">
    <value>Origin of the deposit</value>
  </data>
  <data name="tcdOriginDateColumnCaption" xml:space="preserve">
    <value>Original date</value>
  </data>
  <data name="tcdOriginDateColumnToolTip" xml:space="preserve">
    <value>Original date of the contribution</value>
  </data>
  <data name="valInstitutionColumnCaption" xml:space="preserve">
    <value>Financial institution</value>
  </data>
  <data name="valInstitutionColumnToolTip" xml:space="preserve">
    <value>Financial institution from which the contribution being processed comes from</value>
  </data>
  <data name="tcnAmountLocDecColumnCaption" xml:space="preserve">
    <value>Amount to pay with decimals positions</value>
  </data>
  <data name="tcnAmountLocDecColumnToolTip" xml:space="preserve">
    <value>Amount of the payment with decimals positions</value>
  </data>
  <data name="cbeTyp_ProfitColumnCaption" xml:space="preserve">
    <value>Tax regime</value>
  </data>
  <data name="cbeTyp_ProfitColumnToolTip" xml:space="preserve">
    <value>Code for the numbering</value>
  </data>
  <data name="chkNewReceiptColumnCaption" xml:space="preserve">
    <value>Generate Receipt</value>
  </data>
  <data name="chkNewReceiptColumnToolTip" xml:space="preserve">
    <value>Generate Receipt</value>
  </data>
  <data name="valCodeColumnToolTip" xml:space="preserve">
    <value>Loan</value>
  </data>
</root>