<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnchorCaption" xml:space="preserve">
    <value>Contribution rate</value>
  </data>
  <data name="valOriginCaption" xml:space="preserve">
    <value>Type of Quotation/Proposal</value>
  </data>
  <data name="cbeOperatCaption" xml:space="preserve">
    <value>Operation</value>
  </data>
  <data name="Anchor2Caption" xml:space="preserve">
    <value>Record</value>
  </data>
  <data name="optTypeDoc_1Caption" xml:space="preserve">
    <value>Quotation</value>
  </data>
  <data name="cbeOperatToolTip" xml:space="preserve">
    <value>Operation to be done regarding the proposal/quotation</value>
  </data>
  <data name="optTypeDoc_2Caption" xml:space="preserve">
    <value>Proposal</value>
  </data>
  <data name="valOriginToolTip" xml:space="preserve">
    <value>Type of proposal/quotation</value>
  </data>
  <data name="cbeBranchCaption" xml:space="preserve">
    <value>Line of Business</value>
  </data>
  <data name="cbeBranchToolTip" xml:space="preserve">
    <value>Line of business of the quotations/proposals to be displayed</value>
  </data>
  <data name="valProductCaption" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="valProductToolTip" xml:space="preserve">
    <value>Product to which the quotation/request belongs</value>
  </data>
  <data name="tcnPolicyCaption" xml:space="preserve">
    <value>N° Quotation / Proposal</value>
  </data>
  <data name="tcnPolicyToolTip" xml:space="preserve">
    <value>Number of the quotation/proposal</value>
  </data>
  <data name="tcnProponumCaption" xml:space="preserve">
    <value>Policy</value>
  </data>
  <data name="tcnProponumToolTip" xml:space="preserve">
    <value>Policy which originates the quotation/proposal</value>
  </data>
  <data name="tcnCertifCaption" xml:space="preserve">
    <value>Certificate</value>
  </data>
  <data name="tcnCertifToolTip" xml:space="preserve">
    <value>Certificate number of the policy</value>
  </data>
  <data name="cbeStatCaption" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="cbeStatToolTip" xml:space="preserve">
    <value>Status of the quotation/proposal to be queried</value>
  </data>
  <data name="dtcClientCaption" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="dtcClientToolTip" xml:space="preserve">
    <value>Code of the client</value>
  </data>
  <data name="cboWaitCodeCaption" xml:space="preserve">
    <value>Reason for Pending Status</value>
  </data>
  <data name="valIntermedCaption" xml:space="preserve">
    <value>Producer</value>
  </data>
  <data name="valIntermedToolTip" xml:space="preserve">
    <value>Code of the producer</value>
  </data>
  <data name="valAgencyCaption" xml:space="preserve">
    <value>Field Office</value>
  </data>
  <data name="valAgencyToolTip" xml:space="preserve">
    <value>Agency where the quotation/proposal was issued</value>
  </data>
  <data name="Anchor3Caption" xml:space="preserve">
    <value>Date Entered</value>
  </data>
  <data name="tcdEffecdateCaption" xml:space="preserve">
    <value>Input Date</value>
  </data>
  <data name="tcdEffecdateToolTip" xml:space="preserve">
    <value>Date when the quotation/proposal is recorded in the system</value>
  </data>
  <data name="tcdLastdateCaption" xml:space="preserve">
    <value>Date to</value>
  </data>
  <data name="tcdLastdateToolTip" xml:space="preserve">
    <value>Entry date until the quotation / proposal to the system</value>
  </data>
  <data name="chkDueDateCaption" xml:space="preserve">
    <value>Only Expired</value>
  </data>
  <data name="chkDueDateToolTip" xml:space="preserve">
    <value>Only the information on quotations/proposals or temporary coverages already due will be taken into account for the query.</value>
  </data>
  <data name="chkApplyCostFPCaption" xml:space="preserve">
    <value>Apply Provisional Cost Coverage</value>
  </data>
  <data name="chkApplyCostFPToolTip" xml:space="preserve">
    <value>Indicates whether to apply the percentage of cost for temporary coverage, defined by the designer of products for coverage and role</value>
  </data>
</root>