<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnchorCapacidadCaption" xml:space="preserve">
    <value>Capacidad</value>
  </data>
  <data name="AnchorColectivoCaption" xml:space="preserve">
    <value>Datos del colectivo</value>
  </data>
  <data name="AnchorDescripcionCaption" xml:space="preserve">
    <value>Descripción del bien</value>
  </data>
  <data name="AnchorInfbasicaCaption" xml:space="preserve">
    <value>Infomación básica</value>
  </data>
  <data name="cbeParticularclasCaption" xml:space="preserve">
    <value>Clasificación particular</value>
  </data>
  <data name="cbeUseCaption" xml:space="preserve">
    <value>Uso</value>
  </data>
  <data name="cbeUseTooltip" xml:space="preserve">
    <value>Indica el uso de la aeronave</value>
  </data>
  <data name="cbovalGroupCaption" xml:space="preserve">
    <value>Grupo colectivo</value>
  </data>
  <data name="cbovalGroupTooltip" xml:space="preserve">
    <value>Número que identifica al grupo al que pertenece el certificado</value>
  </data>
  <data name="cbovalSituationCaption" xml:space="preserve">
    <value>Situación de riesgo</value>
  </data>
  <data name="cbovalSituationToolTip" xml:space="preserve">
    <value>Número que identifica la situación a la que pertenece el certificado</value>
  </data>
  <data name="tcnCapitalCaption" xml:space="preserve">
    <value>Capital asegurado</value>
  </data>
  <data name="tcnCapitalTooltip" xml:space="preserve">
    <value>Es el capital asegurado de riesgo</value>
  </data>
  <data name="tcnCrewnumberCaption" xml:space="preserve">
    <value>Número de tripulantes</value>
  </data>
  <data name="tcnCrewnumberTooltip" xml:space="preserve">
    <value>Indica la cantidad de tripulantes</value>
  </data>
  <data name="tcnNibranumberCaption" xml:space="preserve">
    <value>NiBras</value>
  </data>
  <data name="tcnNibranumberTooltip" xml:space="preserve">
    <value>Indica la cantidad de niños en brazos</value>
  </data>
  <data name="tcnPassengersnumberCaption" xml:space="preserve">
    <value>Pasajeros</value>
  </data>
  <data name="tcnPassengersnumberTooltip" xml:space="preserve">
    <value>Indica la cantidad de pasajeros</value>
  </data>
  <data name="tcnSeatnumberCaption" xml:space="preserve">
    <value>Información de asientos</value>
  </data>
  <data name="tcnSeatnumberTooltip" xml:space="preserve">
    <value>Indica la cantidad de asientos contenidos en la nave</value>
  </data>
  <data name="tcnTakeoff_maxweiCaption" xml:space="preserve">
    <value>Peso máximo de decolaje</value>
  </data>
  <data name="tcnTakeoff_maxweiTooltip" xml:space="preserve">
    <value>Corresponde al peso máximo en el momento del despegue.</value>
  </data>
  <data name="tctAddicionaltextCaption" xml:space="preserve">
    <value>Observaciones</value>
  </data>
  <data name="tctAddicionaltextTooltip" xml:space="preserve">
    <value>Permite el ingreso de un texto para especificar o aclarar condiciones particulares del riesgo.</value>
  </data>
  <data name="tctAirportbaseCaption" xml:space="preserve">
    <value>Aeropuerto base</value>
  </data>
  <data name="tctAirportbaseTooltip" xml:space="preserve">
    <value>Indica el nombre del aeropuerto base de la aeronave.</value>
  </data>
  <data name="tctBrandCaption" xml:space="preserve">
    <value>Marca</value>
  </data>
  <data name="tctBrandTooltip" xml:space="preserve">
    <value>Marca del bien asegurado.</value>
  </data>
  <data name="tctGeographicalCaption" xml:space="preserve">
    <value>Límite geográfico</value>
  </data>
  <data name="tctGeographicalTooltip" xml:space="preserve">
    <value>Límite geográfico permitido para la aeronave</value>
  </data>
  <data name="tctModelCaption" xml:space="preserve">
    <value>Modelo</value>
  </data>
  <data name="tctModelTooltip" xml:space="preserve">
    <value>Modelo del bien asegurado.</value>
  </data>
  <data name="tctOriginCaption" xml:space="preserve">
    <value>Procedencia</value>
  </data>
  <data name="tctOriginTooltip" xml:space="preserve">
    <value>Permite el ingreso de la procedencia de la nave</value>
  </data>
  <data name="tctRegistrationnumberCaption" xml:space="preserve">
    <value>Matricula</value>
  </data>
  <data name="tctRegistrationnumberTooltip" xml:space="preserve">
    <value>Matricula</value>
  </data>
  <data name="tctSeriesCaption" xml:space="preserve">
    <value>Serie</value>
  </data>
  <data name="tctSeriesTooltip" xml:space="preserve">
    <value>Serie del bien asegurado.</value>
  </data>
  <data name="tctYearCaption" xml:space="preserve">
    <value>Año</value>
  </data>
  <data name="tctYearTooltip" xml:space="preserve">
    <value>Año del bien asegurado.</value>
  </data>
</root>