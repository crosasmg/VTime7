<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnchorDatos del colectivoCaption" xml:space="preserve">
    <value>Group Policy Information</value>
  </data>
  <data name="AnchorMatrículaCaption" xml:space="preserve">
    <value>License plate</value>
  </data>
  <data name="AnchorDatos del vehículoCaption" xml:space="preserve">
    <value>Vehicle Specific Information</value>
  </data>
  <data name="AnchorDatos del colectivo2Caption" xml:space="preserve">
    <value>Gropu Policy Information</value>
  </data>
  <data name="AnchorMatrícula2Caption" xml:space="preserve">
    <value>License Plate.</value>
  </data>
  <data name="cbovalGroupCaption" xml:space="preserve">
    <value>Grouping within the Group</value>
  </data>
  <data name="cbovalGroupToolTip" xml:space="preserve">
    <value>Number identifying the group the certificate belongs to.</value>
  </data>
  <data name="cbeLicense_tyCaption" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="cbeLicense_tyToolTip" xml:space="preserve">
    <value>Type of License Plate.</value>
  </data>
  <data name="cbovalSituationCaption" xml:space="preserve">
    <value>Risk Location</value>
  </data>
  <data name="cbovalSituationToolTip" xml:space="preserve">
    <value>Risk location (grouping for billing) the certificate belongs to.</value>
  </data>
  <data name="cbeNlic_specialCaption" xml:space="preserve">
    <value>Type of Special License Plate.</value>
  </data>
  <data name="cbeNlic_specialToolTip" xml:space="preserve">
    <value>Type of vehicle that makes the license plate special.</value>
  </data>
  <data name="tctRegisterCaption" xml:space="preserve">
    <value>License Plate</value>
  </data>
  <data name="tctRegisterToolTip" xml:space="preserve">
    <value>License Plate Number</value>
  </data>
  <data name="AnchorDatos del vehículo2Caption" xml:space="preserve">
    <value>Vehicle Specific Information</value>
  </data>
  <data name="tctMotorCaption" xml:space="preserve">
    <value>Engine</value>
  </data>
  <data name="tctMotorToolTip" xml:space="preserve">
    <value>Number identifying the engine of the vehicle.</value>
  </data>
  <data name="tctChassisCaption" xml:space="preserve">
    <value>Chassis</value>
  </data>
  <data name="tctChassisToolTip" xml:space="preserve">
    <value>Chassis number of the vehicle.</value>
  </data>
  <data name="tctColorCaption" xml:space="preserve">
    <value>Colour</value>
  </data>
  <data name="tctColorToolTip" xml:space="preserve">
    <value>Colour of the insured vehicle.</value>
  </data>
  <data name="valVehcodeCaption" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="valVehcodeToolTip" xml:space="preserve">
    <value>Type of vehicle code.</value>
  </data>
  <data name="ValVehMarkCaption" xml:space="preserve">
    <value>Make</value>
  </data>
  <data name="ValVehMarkToolTip" xml:space="preserve">
    <value>Make of the vehicle.</value>
  </data>
  <data name="ValVehModelCaption" xml:space="preserve">
    <value>Model</value>
  </data>
  <data name="ValVehModelToolTip" xml:space="preserve">
    <value>Model of the vehcile.</value>
  </data>
  <data name="AnchorCaption" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="tcnYearCaption" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="tcnYearToolTip" xml:space="preserve">
    <value>Manufacturing  year of the vehicle.</value>
  </data>
  <data name="Anchor2Caption" xml:space="preserve">
    <value>Registered vehicle</value>
  </data>
  <data name="chksrelapsingToolTip" xml:space="preserve">
    <value>If selected, it indicates that the vehicle is already insured or has been insured by the Company.</value>
  </data>
  <data name="Anchor3Caption" xml:space="preserve">
    <value>No traffic violation.</value>
  </data>
  <data name="chksn_infracToolTip" xml:space="preserve">
    <value>If selected, it indicates that the usual driver of the vehicle has not had any serious infraction in the last 12 (twelve) months.</value>
  </data>
  <data name="Anchor4Caption" xml:space="preserve">
    <value>Recovered vehicle</value>
  </data>
  <data name="chksreturnToolTip" xml:space="preserve">
    <value>If selected, it indicates that the vehicle is not new.</value>
  </data>
  <data name="tcnCapitalCaption" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="tcnCapitalToolTip" xml:space="preserve">
    <value>Commercial value of the vehicle</value>
  </data>
  <data name="tcnVehPlaceCaption" xml:space="preserve">
    <value>Seats</value>
  </data>
  <data name="tcnVehPlaceToolTip" xml:space="preserve">
    <value>Number of seats of the vehicle.</value>
  </data>
  <data name="tcnVehPmaCaption" xml:space="preserve">
    <value>Weight (M.T.)</value>
  </data>
  <data name="tcnVehPmaToolTip" xml:space="preserve">
    <value>Weight of the vehicle as expressed in metric tons.</value>
  </data>
  <data name="cbeProviCodCaption" xml:space="preserve">
    <value>Vehicle Traffic Zone</value>
  </data>
  <data name="cbeProviCodToolTip" xml:space="preserve">
    <value>Code of the zone where the vehicle is normally driven.</value>
  </data>
  <data name="tcnCollectedPremiumCaption" xml:space="preserve">
    <value>Premium charged</value>
  </data>
  <data name="tcnCollectedPremiumToolTip" xml:space="preserve">
    <value>Premium charged at point of sale SOAP</value>
  </data>
  <data name="Anchor5Caption" xml:space="preserve">
    <value>Hibrid vehicle indicator</value>
  </data>
  <data name="chks_HybridVehicleToolTip" xml:space="preserve">
    <value>Indicates if is a hibrid vehicle</value>
  </data>
  <data name="tctEngineCaption" xml:space="preserve">
    <value>Engine of the vehicle</value>
  </data>
  <data name="tctEngineToolTip" xml:space="preserve">
    <value>Corresponds to the vehicle engine .Optional</value>
  </data>
  <data name="sClient_DealerCaption" xml:space="preserve">
    <value>Dealer</value>
  </data>
  <data name="sClient_SellerCaption" xml:space="preserve">
    <value>Seller</value>
  </data>
  <data name="cbeGroupCaption" xml:space="preserve">
    <value>Use</value>
  </data>
</root>