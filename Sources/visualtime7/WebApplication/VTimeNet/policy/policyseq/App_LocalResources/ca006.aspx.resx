<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnchorTipo de renovaciónCaption" xml:space="preserve">
    <value>Tipo de renovación</value>
    <comment>ID=40719</comment>
  </data>
  <data name="txtTariffCaption" xml:space="preserve">
    <value>Versión</value>
    <comment>ID=13016</comment>
  </data>
  <data name="txtTariffToolTip" xml:space="preserve">
    <value>Versión del producto al que pertenece la póliza</value>
    <comment>ID=13016</comment>
  </data>
  <data name="sColtimre_CStr1Caption" xml:space="preserve">
    <value>Simultánea</value>
  </data>
  <data name="sColtimre_CStr1ToolTip" xml:space="preserve">
    <value>Indica que todos los certificados tienen el mismo vencimiento</value>
  </data>
  <data name="sColtimre_CStr2Caption" xml:space="preserve">
    <value>Independiente</value>
  </data>
  <data name="sColtimre_CStr2ToolTip" xml:space="preserve">
    <value>Indica que cada certificado tiene su propio vencimiento</value>
  </data>
  <data name="sColtimre_CStr3Caption" xml:space="preserve">
    <value>No tiene</value>
  </data>
  <data name="sColtimre_CStr3ToolTip" xml:space="preserve">
    <value>Indica que los certificados no tienen renovación</value>
  </data>
  <data name="cbeColReintCaption" xml:space="preserve">
    <value>Tipo de reaseguro</value>
    <comment>ID=13014</comment>
  </data>
  <data name="cbeColReintToolTip" xml:space="preserve">
    <value>Indica si la póliza tiene reaseguro</value>
    <comment>ID=13014</comment>
  </data>
  <data name="cbeTypModuleCaption" xml:space="preserve">
    <value>Módulos/Coberturas</value>
    <comment>ID=13018</comment>
  </data>
  <data name="cbeTypModuleToolTip" xml:space="preserve">
    <value>Indica como vas a ser tratadas las coberturas durante la emisión</value>
    <comment>ID=13018</comment>
  </data>
  <data name="cbeTypDiscxpCaption" xml:space="preserve">
    <value>Recargos/Descuentos</value>
    <comment>ID=13017</comment>
  </data>
  <data name="cbeTypDiscxpToolTip" xml:space="preserve">
    <value>Indica como van a ser tratados los recargos/descuentos</value>
    <comment>ID=13017</comment>
  </data>
  <data name="cbeTypClauseCaption" xml:space="preserve">
    <value>Cláusulas</value>
    <comment>ID=13019</comment>
  </data>
  <data name="cbeTypClauseToolTip" xml:space="preserve">
    <value>Indica como van a ser tratadas las cláusulas durante la emisión</value>
    <comment>ID=13019</comment>
  </data>
  <data name="cbeColInvotCaption" xml:space="preserve">
    <value>Tipo de recibo</value>
    <comment>ID=13013</comment>
  </data>
  <data name="cbeColInvotToolTip" xml:space="preserve">
    <value>Indica el origen de los recibos</value>
    <comment>ID=13013</comment>
  </data>
  <data name="cbeColtPresCaption" xml:space="preserve">
    <value>Definición de Prestaciones</value>
    <comment>ID=13017</comment>
  </data>
  <data name="cbeColtPresToolTip" xml:space="preserve">
    <value>Indica como va a ser tratada la definición de prestaciones</value>
    <comment>ID=13017</comment>
  </data>
  <data name="tcnQCertifCaption" xml:space="preserve">
    <value>Cantidad mínima de certificados</value>
    <comment>ID=13015</comment>
  </data>
  <data name="tcnQCertifToolTip" xml:space="preserve">
    <value>Cantidad mínima de certificados de la póliza</value>
    <comment>ID=13015</comment>
  </data>
  <data name="tcnCNoticeCaption" xml:space="preserve">
    <value>Días para denuncio</value>
  </data>
  <data name="tcnCNoticeToolTip" xml:space="preserve">
    <value>Cantidad de días para un denuncio de la póliza</value>
  </data>
  <data name="chkMassiveCaption" xml:space="preserve">
    <value>Manejo Masivo</value>
  </data>
  <data name="chkMassiveToolTip" xml:space="preserve">
    <value>Indica si el producto posee manejo masivo</value>
  </data>
  <data name="chkRepPrintCovCaption" xml:space="preserve">
    <value>Certificado de Cobertura</value>
  </data>
  <data name="cbeDocuTypCaption" xml:space="preserve">
    <value>Tipo de evaluación médica</value>
  </data>
  <data name="cbeDocuTypToolTip" xml:space="preserve">
    <value>Indica el tipo de evaluación médica a usar en la póliza</value>
  </data>
  <data name="cbeTypeExcCaption" xml:space="preserve">
    <value>Tipo de Exclusión</value>
  </data>
  <data name="cbeTypeExcToolTip" xml:space="preserve">
    <value>Tipo de Exclusión de cobertura por asegurado</value>
  </data>
</root>