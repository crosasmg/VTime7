<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnchorBancosCaption" xml:space="preserve">
    <value>Banks</value>
  </data>
  <data name="AnchorRelación con contabilidadCaption" xml:space="preserve">
    <value>Relation with General Ledger</value>
  </data>
  <data name="chkAccCashCaption" xml:space="preserve">
    <value>Cash desk account</value>
  </data>
  <data name="valAccBankCashCaption" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="valAccBankCashToolTip" xml:space="preserve">
    <value>Internal code of the banck account or cash account being processed</value>
  </data>
  <data name="tcnCashCaption" xml:space="preserve">
    <value>Cash desk</value>
  </data>
  <data name="tcnCashToolTip" xml:space="preserve">
    <value>Number of the cash and bank department associated with the cash account (cash, check, credit card, postdated checks)</value>
  </data>
  <data name="cbeStatregtCaption" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="cbeStatregtToolTip" xml:space="preserve">
    <value>Status of the bank account or cash account being processed</value>
  </data>
  <data name="tcdEffecdateCaption" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="tcdEffecdateToolTip" xml:space="preserve">
    <value>Date as of which the account is in “Active' status</value>
  </data>
  <data name="cbeAccTypeCaption" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="cbeAccTypeToolTip" xml:space="preserve">
    <value>Type of account being processed (savings, current, liquid assets, cash, etc.).</value>
  </data>
  <data name="cbeOfficeCaption" xml:space="preserve">
    <value>Branch Office</value>
  </data>
  <data name="cbeOfficeToolTip" xml:space="preserve">
    <value>It indicates the branch office associated with the account</value>
  </data>
  <data name="cbeCurrencyCaption" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="cbeCurrencyToolTip" xml:space="preserve">
    <value>Currency in which the amounts/balances associated with the account are expressed</value>
  </data>
  <data name="tcnAvailableCaption" xml:space="preserve">
    <value>Balance</value>
  </data>
  <data name="tcnAvailableToolTip" xml:space="preserve">
    <value>Amount available in the account</value>
  </data>
  <data name="AnchorBancos2Caption" xml:space="preserve">
    <value>Banks</value>
  </data>
  <data name="tcnAmountMinCaption" xml:space="preserve">
    <value>Minimum cash amount</value>
  </data>
  <data name="tcnAmountMinToolTip" xml:space="preserve">
    <value>Minimum cash amount available</value>
  </data>
  <data name="cbeBankCaption" xml:space="preserve">
    <value>Bank</value>
  </data>
  <data name="cbeBankToolTip" xml:space="preserve">
    <value>Name of the bank were the account was opened</value>
  </data>
  <data name="cbeCompanyCaption" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="cbeCompanyToolTip" xml:space="preserve">
    <value>Company to which the bank account belongs</value>
  </data>
  <data name="tctAccNumberCaption" xml:space="preserve">
    <value>Account number</value>
  </data>
  <data name="tctAccNumberToolTip" xml:space="preserve">
    <value>Identification number assigned by the bank to the account in process</value>
  </data>
  <data name="valBk_agencyCaption" xml:space="preserve">
    <value>Field Office</value>
  </data>
  <data name="valBk_agencyToolTip" xml:space="preserve">
    <value>Agency where the account was opened</value>
  </data>
  <data name="cbeAvailTypeCaption" xml:space="preserve">
    <value>Acreditation time</value>
  </data>
  <data name="cbeAvailTypeToolTip" xml:space="preserve">
    <value>Time that takes the bank to cash in the amount deposited in the account with a check</value>
  </data>
  <data name="tcnTransit1Caption" xml:space="preserve">
    <value>Acreditation 24 hrs.</value>
  </data>
  <data name="tcnTransit1ToolTip" xml:space="preserve">
    <value>Amount that will be credited from the account and will be made available after 24 hours (1 day)</value>
  </data>
  <data name="tcnTransit2Caption" xml:space="preserve">
    <value>Acreditation 48 hrs.</value>
  </data>
  <data name="tcnTransit2ToolTip" xml:space="preserve">
    <value>Amount that will be credited from the account and will be made available after 48 hours (2 days)</value>
  </data>
  <data name="tcnTransit3Caption" xml:space="preserve">
    <value>Acreditation 72 hrs.</value>
  </data>
  <data name="tcnTransit3ToolTip" xml:space="preserve">
    <value>Amount that will be credited from the account and will be made available after 72 hours (3 days)</value>
  </data>
  <data name="tcnTransit4Caption" xml:space="preserve">
    <value>Acreditation 96 hrs.</value>
  </data>
  <data name="tcnTransit4ToolTip" xml:space="preserve">
    <value>Amount that will be credited from the account and will be made available after 96 hours (4 days)</value>
  </data>
  <data name="tcnTransit5Caption" xml:space="preserve">
    <value>Acreditation 120 hrs.</value>
  </data>
  <data name="tcnTransit5ToolTip" xml:space="preserve">
    <value>Amount that will be credited from the account and will be made available after 120 hours (5 days)</value>
  </data>
  <data name="AnchorRelación con contabilidad2Caption" xml:space="preserve">
    <value>Accounting interface</value>
  </data>
  <data name="valLedCompanCaption" xml:space="preserve">
    <value>Accounting company</value>
  </data>
  <data name="valLedCompanToolTip" xml:space="preserve">
    <value>Ledger company to which the ledger account belongs</value>
  </data>
  <data name="valAccLedgerCaption" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="valAccLedgerToolTip" xml:space="preserve">
    <value>Account of the ledger plan</value>
  </data>
  <data name="valAuxAccountCaption" xml:space="preserve">
    <value>Subsidiary</value>
  </data>
  <data name="valAuxAccountToolTip" xml:space="preserve">
    <value>Code of the subsidiary account that complements the ledger account.</value>
  </data>
</root>