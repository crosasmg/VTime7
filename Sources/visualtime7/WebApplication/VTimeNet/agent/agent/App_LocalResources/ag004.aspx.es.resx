<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnchorAnticipoCaption" xml:space="preserve">
    <value>Anticipo</value>
  </data>
  <data name="tcdEffecDateCaption" xml:space="preserve">
    <value>Fecha de efecto</value>
  </data>
  <data name="tcdEffecDateToolTip" xml:space="preserve">
    <value>Fecha en que se otorga el anticipo al intermediario</value>
  </data>
  <data name="cbeLoanTypeCaption" xml:space="preserve">
    <value>Tipo</value>
  </data>
  <data name="cbeLoanTypeToolTip" xml:space="preserve">
    <value>Tipo de préstamo o anticipo en tratamiento.</value>
  </data>
  <data name="cbeLoanStaCaption" xml:space="preserve">
    <value>Estado</value>
  </data>
  <data name="cbeLoanStaToolTip" xml:space="preserve">
    <value>Estado actual del anticipo/préstamo</value>
  </data>
  <data name="cbeCurrencyCaption" xml:space="preserve">
    <value>Moneda</value>
  </data>
  <data name="cbeCurrencyToolTip" xml:space="preserve">
    <value>Moneda en que se realiza el préstamo o anticipo al intermediario.</value>
  </data>
  <data name="tcnLoanAmountCaption" xml:space="preserve">
    <value>Monto</value>
  </data>
  <data name="tcnLoanAmountToolTip" xml:space="preserve">
    <value>Monto que se presta o anticipa al intermediario</value>
  </data>
  <data name="tcnLoanBalanceCaption" xml:space="preserve">
    <value>Saldo</value>
  </data>
  <data name="tcnLoanBalanceToolTip" xml:space="preserve">
    <value>Saldo deudor del préstamo o anticipo del intermediario hacia la compañía de seguros.</value>
  </data>
  <data name="AnchorAplicaCaption" xml:space="preserve">
    <value>Aplica sobre</value>
  </data>
  <data name="cbeBranchCaption" xml:space="preserve">
    <value>Ramo</value>
  </data>
  <data name="cbeBranchToolTip" xml:space="preserve">
    <value>Código del ramo en tratamiento</value>
  </data>
  <data name="valProductCaption" xml:space="preserve">
    <value>Producto</value>
  </data>
  <data name="valProductToolTip" xml:space="preserve">
    <value>Código del producto en tratamiento</value>
  </data>
  <data name="tcnPolicyCaption" xml:space="preserve">
    <value>Póliza</value>
  </data>
  <data name="tcnPolicyToolTip" xml:space="preserve">
    <value>Número de la póliza en tratamiento</value>
  </data>
  <data name="tcnCommBaseCaption" xml:space="preserve">
    <value>Monto de comisión</value>
  </data>
  <data name="tcnCommBaseToolTip" xml:space="preserve">
    <value>Monto de comisión del intermediario</value>
  </data>
  <data name="cbeModeCaption" xml:space="preserve">
    <value>Modalidad</value>
  </data>
  <data name="cbeModeToolTip" xml:space="preserve">
    <value>Modalidad para rentas vitalicias</value>
  </data>
  <data name="tcnPercentCaption" xml:space="preserve">
    <value>Porcentaje a aplicar</value>
  </data>
  <data name="tcnPercentToolTip" xml:space="preserve">
    <value>Porcentaje de anticipo a otorgar</value>
  </data>
  <data name="AnchorPagoCaption" xml:space="preserve">
    <value>Pago</value>
  </data>
  <data name="cbePayFormCaption" xml:space="preserve">
    <value>Forma</value>
  </data>
  <data name="cbePayFormToolTip" xml:space="preserve">
    <value>Forma en que el intermediario cancelará el préstamo</value>
  </data>
  <data name="tcnPercent_antCaption" xml:space="preserve">
    <value>Porcentaje de anticipo</value>
  </data>
  <data name="tcnPercent_antToolTip" xml:space="preserve">
    <value>Porcentaje de retención a aplicar</value>
  </data>
  <data name="tcnInterest_antCaption" xml:space="preserve">
    <value>Porcentaje de interés</value>
  </data>
  <data name="tcnInterest_antToolTip" xml:space="preserve">
    <value>Rata de interés anual a aplicar al monto del anticipo/préstamo</value>
  </data>
  <data name="tcnMonthlyCaption" xml:space="preserve">
    <value>Cuota mensual</value>
  </data>
  <data name="tcnMonthlyToolTip" xml:space="preserve">
    <value>Monto de la cuota mensual que se descuenta del estado de cuenta del intermediario</value>
  </data>
  <data name="AnchorOrden de pagoCaption" xml:space="preserve">
    <value>Orden de pago</value>
  </data>
  <data name="cbePayOrderCaption" xml:space="preserve">
    <value>Orden</value>
  </data>
  <data name="cbePayOrderToolTip" xml:space="preserve">
    <value>Tipo de orden de pago a procesar</value>
  </data>
  <data name="tctReqCheqCaption" xml:space="preserve">
    <value>Solicitud/Cheque</value>
  </data>
  <data name="tctReqCheqToolTip" xml:space="preserve">
    <value>Número de solicitud de pago o cheque</value>
  </data>
</root>