<Activity mc:Ignorable="sads sap" x:Class="VerifyRequirementLifePolicyNN" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:iacg="clr-namespace:InMotionGIT.AddressManager.Contract.General;assembly=InMotionGIT.AddressManager.Contract" xmlns:iacm="clr-namespace:InMotionGIT.AddressManager.Contract.Models;assembly=InMotionGIT.AddressManager.Contract" xmlns:ica="clr-namespace:InMotionGIT.Correspondence.Activity;assembly=InMotionGIT.Correspondence.Activity" xmlns:ica1="clr-namespace:InMotionGIT.Common.Activities;assembly=InMotionGIT.Common.Activities" xmlns:ica2="clr-namespace:InMotionGIT.Client.Activities;assembly=InMotionGIT.Client.Activities" xmlns:icag="clr-namespace:InMotionGIT.Common.Activities.General;assembly=InMotionGIT.Common.Activities" xmlns:icc="clr-namespace:InMotionGIT.Common.Contracts;assembly=InMotionGIT.Common.Contracts" xmlns:icce="clr-namespace:InMotionGIT.Common.Contracts.Errors;assembly=InMotionGIT.Common.Contracts" xmlns:iccp="clr-namespace:InMotionGIT.Common.Contracts.Process;assembly=InMotionGIT.Common.Contracts" xmlns:icd="clr-namespace:InMotionGIT.Common.DataType;assembly=InMotionGIT.Common" xmlns:icec="clr-namespace:InMotionGIT.Client.Entity.Contracts;assembly=InMotionGIT.Client.Entity.Contracts" xmlns:ida="clr-namespace:InMotionGIT.DecisionTable.Activity;assembly=InMotionGIT.DecisionTable.Activity" xmlns:igecg="clr-namespace:InMotionGIT.General.Entity.Contracts.General;assembly=InMotionGIT.General.Entity.Contracts" xmlns:iiec="clr-namespace:InMotionGIT.Intermedia.Entity.Contracts;assembly=InMotionGIT.Intermedia.Entity.Contracts" xmlns:ilec="clr-namespace:InMotionGIT.LineOfBusiness.Entity.Contracts;assembly=InMotionGIT.LineOfBusiness.Entity.Contracts" xmlns:ipec="clr-namespace:InMotionGIT.Policy.Entity.Contracts;assembly=InMotionGIT.Policy.Entity.Contracts" xmlns:ipec1="clr-namespace:InMotionGIT.Product.Entity.Contracts;assembly=InMotionGIT.Product.Entity.Contracts" xmlns:ipeci="clr-namespace:InMotionGIT.Policy.Entity.Contracts.Interfaces;assembly=InMotionGIT.Policy.Entity.Contracts" xmlns:iq="clr-namespace:InMotionGIT.Questionnaires;assembly=InMotionGIT.Questionnaires" xmlns:iua="clr-namespace:InMotionGIT.Underwriting.Activities;assembly=InMotionGIT.Underwriting.Activities" xmlns:iuc="clr-namespace:InMotionGIT.Underwriting.Contracts;assembly=InMotionGIT.Underwriting.Contracts" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:mvc="clr-namespace:Microsoft.VisualBasic.CompilerServices;assembly=Microsoft.VisualBasic" xmlns:s="clr-namespace:System;assembly=System" xmlns:s1="clr-namespace:System;assembly=mscorlib" xmlns:s10="clr-namespace:System;assembly=System.Core" xmlns:s11="clr-namespace:System;assembly=System.ServiceModel" xmlns:s12="clr-namespace:System;assembly=System.Runtime.WindowsRuntime" xmlns:s2="clr-namespace:System;assembly=System.AddIn" xmlns:s3="clr-namespace:System;assembly=System.Drawing.Design" xmlns:s4="clr-namespace:System;assembly=System.Design" xmlns:s5="clr-namespace:System;assembly=System.Configuration.Install" xmlns:s6="clr-namespace:System;assembly=System.DirectoryServices" xmlns:s7="clr-namespace:System;assembly=InRule.Authoring" xmlns:s8="clr-namespace:System;assembly=System.ComponentModel.Composition" xmlns:s9="clr-namespace:System;assembly=DevExpress.Utils.v13.1" xmlns:sa="clr-namespace:System.Activities;assembly=System.Activities" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Core" xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=System" xmlns:scg2="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:scg3="clr-namespace:System.Collections.Generic;assembly=System.ServiceModel" xmlns:srs="clr-namespace:System.Runtime.Serialization;assembly=System.Runtime.Serialization" xmlns:srs1="clr-namespace:System.Runtime.Serialization;assembly=mscorlib" xmlns:srs2="clr-namespace:System.Runtime.Serialization;assembly=System.Workflow.ComponentModel" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="RiskInformation" Type="InOutArgument(ipec:RiskInformation)" />
    <x:Property Name="context" Type="InOutArgument(icc:Context)" />
    <x:Property Name="PlanType" Type="InArgument(x:Int32)" />
    <x:Property Name="UsercodeFASI" Type="InArgument(x:Int32)" />
    <x:Property Name="QuestionnairesAvailable" Type="InArgument(iq:QuestionnairesAvailable)" />
    <x:Property Name="QuestionnaireRequest" Type="InOutArgument(x:Boolean)" />
    <x:Property Name="UnderwritingCase" Type="InOutArgument(iuc:UnderwritingCase)" />
    <x:Property Name="PrimaryInsured" Type="InArgument(iuc:RoleInCase)" />
    <x:Property Name="ConsumerInformation" Type="InArgument(iccp:ConsumerInformation)" />
    <x:Property Name="eMail" Type="InArgument(x:String)" />
    <x:Property Name="ProducerClientID" Type="InArgument(x:String)" />
    <x:Property Name="Currency" Type="InArgument(x:Int32)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>1054.4,2292.8</sap:VirtualizedContainerService.HintSize>
  <mva:VisualBasic.Settings>Assembly references and imported namespaces serialized as XML namespaces</mva:VisualBasic.Settings>
  <sap:WorkflowViewStateService.ViewState>
    <scg2:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg2:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Flowchart DisplayName="VerifyRequirementLifePolicyNN" sap:VirtualizedContainerService.HintSize="1014.4,2252.8" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:Decimal" Name="masaCorporal" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg2:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
        <av:Point x:Key="ShapeLocation">390,12.4</av:Point>
        <av:Size x:Key="ShapeSize">60,75.2</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">420,87.6 420,183.6</av:PointCollection>
        <x:Double x:Key="Height">2216.4</x:Double>
        <x:Double x:Key="Width">1000</x:Double>
      </scg2:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID3">
        <sap:WorkflowViewStateService.ViewState>
          <scg2:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">338.4,183.6</av:Point>
            <av:Size x:Key="ShapeSize">163.2,132.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">420,316.4 420,369.6</av:PointCollection>
          </scg2:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ica1:ProcessIdentifier sap:VirtualizedContainerService.HintSize="163.2,132.8">
          <ica1:ProcessIdentifier.Identifier>
            <icd:LocalizedString Language="1" Value="VerifyRequirementLifePolicyNN. { Value /RiskInformation/PrimaryInsured/Client/FirstName } { Value /RiskInformation/PrimaryInsured/Client/LastName } { Value /RiskInformation/PrimaryInsured/Client/LastName2 }" />
            <icd:LocalizedString Language="2" Value="ProcessRequestOfLifePolicyStandard. { Value /RiskInformation/PrimaryInsured/Client/FirstName } { Value /RiskInformation/PrimaryInsured/Client/LastName } { Value /RiskInformation/PrimaryInsured/Client/LastName2 }" />
          </ica1:ProcessIdentifier.Identifier>
        </ica1:ProcessIdentifier>
        <FlowStep.Next>
          <FlowStep x:Name="__ReferenceID4">
            <sap:WorkflowViewStateService.ViewState>
              <scg2:Dictionary x:TypeArguments="x:String, x:Object">
                <av:Point x:Key="ShapeLocation">298.4,369.6</av:Point>
                <av:Size x:Key="ShapeSize">243.2,60.8</av:Size>
                <av:PointCollection x:Key="ConnectorLocation">420,430.4 420,506.4</av:PointCollection>
              </scg2:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="AssignQuestionnaireRequestFalse" sap:VirtualizedContainerService.HintSize="243.2,60.8">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[QuestionnaireRequest]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
            <FlowStep.Next>
              <FlowStep x:Name="__ReferenceID5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg2:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">280.8,506.4</av:Point>
                    <av:Size x:Key="ShapeSize">278.4,107.2</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">420,613.6 420,673.6</av:PointCollection>
                  </scg2:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <icag:ExecuteWorkflow CallMode="Synchronous" DisplayName="ExecuteVerifyInsuredRequirementUW" sap:VirtualizedContainerService.HintSize="278.4,107.2" ModelId="8057500F-FBF9-4867-8D9C-C95662FC1333" Release="8" Tracking="True" WorkflowPath="VerifyInsuredRequirementUW">
                  <icag:ExecuteWorkflow.ChildArguments>
                    <InOutArgument x:TypeArguments="ipec:RiskInformation" x:Key="RiskInformation">[RiskInformation]</InOutArgument>
                    <InOutArgument x:TypeArguments="iuc:UnderwritingCase" x:Key="UnderwritingCase">[UnderwritingCase]</InOutArgument>
                    <InOutArgument x:TypeArguments="x:Decimal" x:Key="MasaCorporal">[MasaCorporal]</InOutArgument>
                    <InOutArgument x:TypeArguments="iq:QuestionnairesAvailable" x:Key="QuestionnairesAvailable">[QuestionnairesAvailable]</InOutArgument>
                    <InArgument x:TypeArguments="x:Decimal" x:Key="InsuredAmount">[RiskInformation.InsuredAmount]</InArgument>
                    <InOutArgument x:TypeArguments="icc:Context" x:Key="context">[context]</InOutArgument>
                    <InArgument x:TypeArguments="x:Int32" x:Key="PlanType">[PlanType]</InArgument>
                    <OutArgument x:TypeArguments="x:Boolean" x:Key="QuestionnaireRequest">[QuestionnaireRequest]</OutArgument>
                    <InArgument x:TypeArguments="x:Int32" x:Key="UsercodeFASI">[UsercodeFASI]</InArgument>
                  </icag:ExecuteWorkflow.ChildArguments>
                </icag:ExecuteWorkflow>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID6">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg2:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">320,673.6</av:Point>
                        <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                        <av:PointCollection x:Key="ConnectorLocation">420,726.4 420,783.6</av:PointCollection>
                      </scg2:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="VerifyLaboratoryRequirement" sap:VirtualizedContainerService.HintSize="200,52.8">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:Boolean" Name="ElementFound" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg2:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg2:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ida:DecisionTable HasBeenFound="[ElementFound]" sap:VirtualizedContainerService.HintSize="464,131.2">
                        <ida:DecisionTable.Parameters>
                          <InArgument x:TypeArguments="x:Int32" x:Key="PlanType">[PlanType]</InArgument>
                          <InArgument x:TypeArguments="x:Int32" x:Key="Currency">[Currency]</InArgument>
                          <InArgument x:TypeArguments="x:Decimal" x:Key="Monto">[RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation]</InArgument>
                        </ida:DecisionTable.Parameters>
                        <ida:DecisionTable.Settings>
                          <ida:EntitySettings CancellationDate="{x:Null}" Entity="{x:Null}" RecordEffectiveDate="{x:Null}" Repository="{x:Null}" ExcelFileName="D:\TablasDeDecision\TD_Laboratorio.xlsx" ExpressionRow="2" FirstColumn="65" FirstRow="1" InternalDataTable="&lt;DocumentElement&gt;&#xA;  &lt;RangeExcel&gt;&#xA;    &lt;column0&gt;2&lt;/column0&gt;&#xA;    &lt;column1&gt;1&lt;/column1&gt;&#xA;    &lt;column2&gt;1000000&lt;/column2&gt;&#xA;    &lt;column3&gt;999999999999&lt;/column3&gt;&#xA;  &lt;/RangeExcel&gt;&#xA;  &lt;RangeExcel&gt;&#xA;    &lt;column0&gt;2&lt;/column0&gt;&#xA;    &lt;column1&gt;2&lt;/column1&gt;&#xA;    &lt;column2&gt;100000&lt;/column2&gt;&#xA;    &lt;column3&gt;999999999999&lt;/column3&gt;&#xA;  &lt;/RangeExcel&gt;&#xA;  &lt;RangeExcel&gt;&#xA;    &lt;column0&gt;2&lt;/column0&gt;&#xA;    &lt;column1&gt;3&lt;/column1&gt;&#xA;    &lt;column2&gt;100000&lt;/column2&gt;&#xA;    &lt;column3&gt;999999999999&lt;/column3&gt;&#xA;  &lt;/RangeExcel&gt;&#xA;  &lt;RangeExcel&gt;&#xA;    &lt;column0&gt;2&lt;/column0&gt;&#xA;    &lt;column1&gt;4&lt;/column1&gt;&#xA;    &lt;column2&gt;500&lt;/column2&gt;&#xA;    &lt;column3&gt;999999999999&lt;/column3&gt;&#xA;  &lt;/RangeExcel&gt;&#xA;  &lt;RangeExcel&gt;&#xA;    &lt;column0&gt;3&lt;/column0&gt;&#xA;    &lt;column1&gt;1&lt;/column1&gt;&#xA;    &lt;column2&gt;500&lt;/column2&gt;&#xA;    &lt;column3&gt;999999999999&lt;/column3&gt;&#xA;  &lt;/RangeExcel&gt;&#xA;  &lt;RangeExcel&gt;&#xA;    &lt;column0&gt;3&lt;/column0&gt;&#xA;    &lt;column1&gt;2&lt;/column1&gt;&#xA;    &lt;column2&gt;500&lt;/column2&gt;&#xA;    &lt;column3&gt;999999999999&lt;/column3&gt;&#xA;  &lt;/RangeExcel&gt;&#xA;  &lt;RangeExcel&gt;&#xA;    &lt;column0&gt;3&lt;/column0&gt;&#xA;    &lt;column1&gt;3&lt;/column1&gt;&#xA;    &lt;column2&gt;500&lt;/column2&gt;&#xA;    &lt;column3&gt;999999999999&lt;/column3&gt;&#xA;  &lt;/RangeExcel&gt;&#xA;  &lt;RangeExcel&gt;&#xA;    &lt;column0&gt;3&lt;/column0&gt;&#xA;    &lt;column1&gt;4&lt;/column1&gt;&#xA;    &lt;column2&gt;500&lt;/column2&gt;&#xA;    &lt;column3&gt;999999999999&lt;/column3&gt;&#xA;  &lt;/RangeExcel&gt;&#xA;&lt;/DocumentElement&gt;" InternalSchemaDataTable="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&#xA;&lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;  &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;RangeExcel&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;    &lt;xs:complexType&gt;&#xA;      &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;        &lt;xs:element name=&quot;RangeExcel&quot;&gt;&#xA;          &lt;xs:complexType&gt;&#xA;            &lt;xs:sequence&gt;&#xA;              &lt;xs:element name=&quot;column0&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;xs:element name=&quot;column1&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;xs:element name=&quot;column2&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;xs:element name=&quot;column3&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;            &lt;/xs:sequence&gt;&#xA;          &lt;/xs:complexType&gt;&#xA;        &lt;/xs:element&gt;&#xA;      &lt;/xs:choice&gt;&#xA;    &lt;/xs:complexType&gt;&#xA;  &lt;/xs:element&gt;&#xA;&lt;/xs:schema&gt;" LastColumn="68" LastRow="9" RangeName="" SheetName="Sheet1" Source="Excel">
                            <ida:EntitySettings.Elements>
                              <ida:ElementSettings x:Name="__ReferenceID0" Caption="PlanType" Description="" Input="True" Name="PlanType" Operator="IsEqualTo" Output="False" ParameterName="PlanType" Scale="0" Type="Integer" />
                              <ida:ElementSettings x:Name="__ReferenceID1" Caption="Currency" Description="" Input="True" Name="Currency" Operator="IsEqualTo" Output="False" ParameterName="Currency" Scale="0" Type="Integer" />
                              <ida:ElementSettings x:Name="__ReferenceID2" Caption="Monto" Description="" Input="True" Name="Monto" Operator="IsGreaterThanOrEqualTo" Output="False" ParameterName="Monto" Scale="0" Type="Decimal" />
                              <ida:ElementSettings Caption="MontoFinal" Description="" Input="True" Name="MontoFinal" Operator="IsLessThanOrEqualTo" Output="False" ParameterName="Monto" Scale="0" Type="Decimal" />
                            </ida:EntitySettings.Elements>
                            <ida:EntitySettings.InputElements>
                              <x:Reference>__ReferenceID0</x:Reference>
                              <x:Reference>__ReferenceID1</x:Reference>
                              <x:Reference>__ReferenceID2</x:Reference>
                            </ida:EntitySettings.InputElements>
                          </ida:EntitySettings>
                        </ida:DecisionTable.Settings>
                      </ida:DecisionTable>
                      <If Condition="[ElementFound]" DisplayName="LaboratoryElementFound" sap:VirtualizedContainerService.HintSize="464,443.2">
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="299.2,332.8">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg2:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg2:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <icag:ExecuteWorkflow CallMode="Synchronous" DisplayName="ExecuteVerifyVendorRequirementUW" sap:VirtualizedContainerService.HintSize="276.8,107.2" ModelId="A170DF29-C4F5-48D6-A1B2-F7AC63B1D254" Release="10" Tracking="True" WorkflowPath="VerifyVendorRequirementUW">
                              <icag:ExecuteWorkflow.ChildArguments>
                                <InOutArgument x:TypeArguments="ipec:RiskInformation" x:Key="RiskInformation">[RiskInformation]</InOutArgument>
                                <InOutArgument x:TypeArguments="iuc:UnderwritingCase" x:Key="UnderwritingCase">[UnderwritingCase]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="eMail">[eMail]</InOutArgument>
                                <InOutArgument x:TypeArguments="icc:Context" x:Key="context">[context]</InOutArgument>
                                <InArgument x:TypeArguments="iccp:ConsumerInformation" x:Key="ConsumerInformation">[ConsumerInformation]</InArgument>
                                <InArgument x:TypeArguments="x:Int32" x:Key="UsercodeFASI">[UsercodeFASI]</InArgument>
                              </icag:ExecuteWorkflow.ChildArguments>
                            </icag:ExecuteWorkflow>
                            <Assign DisplayName="AssignQuestionnaireRequestTrueVendor" sap:VirtualizedContainerService.HintSize="276.8,60.8">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Boolean">[QuestionnaireRequest]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                      </If>
                    </Sequence>
                    <FlowStep.Next>
                      <FlowStep x:Name="__ReferenceID7">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg2:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">320,783.6</av:Point>
                            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                          </scg2:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="VerifyProducerRquirement" sap:VirtualizedContainerService.HintSize="200,52.8">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg2:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg2:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation &gt; 50000 andalso ProducerClientID &lt;&gt; nothing]" DisplayName="LifeLineOfBusiness.InsuredAmountForCalculation &gt; 50000" sap:VirtualizedContainerService.HintSize="464,443.2">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg2:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg2:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="308.8,332.8">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg2:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg2:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <icag:ExecuteWorkflow CallMode="Synchronous" DisplayName="ExecuteVerifyProducerRequirementUW" sap:VirtualizedContainerService.HintSize="286.4,107.2" ModelId="4E59E031-33E3-4F8D-8416-6922D10C3920" Release="8" Tracking="True" WorkflowPath="VerifyProducerRequirementUW">
                                  <icag:ExecuteWorkflow.ChildArguments>
                                    <InOutArgument x:TypeArguments="ipec:RiskInformation" x:Key="RiskInformation">[RiskInformation]</InOutArgument>
                                    <InOutArgument x:TypeArguments="iuc:UnderwritingCase" x:Key="UnderwritingCase">[UnderwritingCase]</InOutArgument>
                                    <InOutArgument x:TypeArguments="x:String" x:Key="eMail">[eMail]</InOutArgument>
                                    <InOutArgument x:TypeArguments="x:String" x:Key="ProducerClientID">[ProducerClientID]</InOutArgument>
                                    <InOutArgument x:TypeArguments="icc:Context" x:Key="context">[context]</InOutArgument>
                                    <InArgument x:TypeArguments="iccp:ConsumerInformation" x:Key="ConsumerInformation">[ConsumerInformation]</InArgument>
                                    <InArgument x:TypeArguments="x:Int32" x:Key="UsercodeFASI">[UsercodeFASI]</InArgument>
                                  </icag:ExecuteWorkflow.ChildArguments>
                                </icag:ExecuteWorkflow>
                                <Assign DisplayName="AssignQuestionnaireRequestTrueProducer" sap:VirtualizedContainerService.HintSize="286.4,60.8">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[QuestionnaireRequest]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                      </FlowStep>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
            </FlowStep.Next>
          </FlowStep>
        </FlowStep.Next>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
  </Flowchart>
</Activity>