'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Form Designer Oracle v7.3.1 at 2019-07-02 model release 17
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"
    
Imports Artem.Google.UI
Imports DashboardBusiness.Helpers
Imports DevExpress.Web
Imports DevExpress.Web.ASPxClasses
Imports DevExpress.Web.ASPxEditors
Imports DevExpress.Web.ASPxGridView
Imports GIT.Core
Imports InMotionGIT.FrontOffice.Support.Enumerations
Imports InMotionGIT.FrontOffice.Support.Helpers.ControlHandler
Imports InMotionGIT.BarCode
Imports InMotionGIT.BarCode.Enumerations
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.DatosNoEstruct.ContratoDeDatos.DTOs
Imports InMotionGIT.DatosNoEstruct.ContratoDeDatos.Modelo
Imports System.IO
Imports InMotionGIT.FrontOffice.Support
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Data
Imports System.Data.Common
Imports System.Globalization
Imports System.Linq
Imports System.Threading.Thread
Imports System.Xml.Linq
Imports System.Net


#End Region

Partial Public Class NNCotizacionesTodosLosRamosIconosUserControl
    Inherits GIT.Core.UserControlBase
    Implements Dropthings.Widget.Framework.IWidget

#Region "IWidget Members"
    
    
    

    Public Sub Closed() Implements Dropthings.Widget.Framework.IWidget.Closed
    End Sub

    Public Sub HideSettings() Implements Dropthings.Widget.Framework.IWidget.HideSettings

    End Sub

    Public Sub Init1(host As Dropthings.Widget.Framework.IWidgetHost) Implements Dropthings.Widget.Framework.IWidget.Init

    End Sub

    Public Sub Maximized() Implements Dropthings.Widget.Framework.IWidget.Maximized

    End Sub

    Public Sub Minimized() Implements Dropthings.Widget.Framework.IWidget.Minimized

    End Sub

    Public Sub ShowSettings() Implements Dropthings.Widget.Framework.IWidget.ShowSettings

    End Sub

#End Region

#Region "Private fields"

    Private _formData As NNCotizacionesTodosLosRamosIconosParameter = Nothing
    Private _CurrentParameterInstance As Boolean = False
    Private _loading As Boolean = False
    Private _loadcompleted As Boolean = False
    Private _webTransfer as String  
    
        
#End Region

#Region "Public properties"

    Public Property FormData() As NNCotizacionesTodosLosRamosIconosParameter
        Get
            Dim formDefinition As String = String.Empty               
             
            If IsNothing(_formData) Then
                If Not IsPostBack Then
                    If Not String.IsNullOrEmpty(Request.QueryString("id")) Then
                        Dim _id As Guid
                        
                        If Guid.TryParse(Request.QueryString("id"), _id) Then
		                        _FormID.Text = Request.QueryString("id")  
                            
                            formDefinition = Session(String.Format(CultureInfo.InvariantCulture, "FormStorage.{0}", _FormID.Text))
    
           If Not String.IsNullOrEmpty(formDefinition) Then
              _formData = Serialize.Deserialize(Of NNCotizacionesTodosLosRamosIconosParameter)(formDefinition)
           End If
                        End If
                    End If

                    If IsNothing(_formData) Then
                        _formData = New NNCotizacionesTodosLosRamosIconosParameter
                       
                        If String.IsNullOrEmpty(_FormID.Text) Then
                        	_FormID.Text = System.Guid.NewGuid().ToString                       
                        End If
											
                        _formData.InternalId = _FormID.Text
                        
                        If Not String.IsNullOrEmpty(Request.QueryString("fromid")) OrElse
                           Not String.IsNullOrEmpty(Session("fromid")) Then
                           
                            GetTransferParameters()
                        End If
                        
                        
                        
                        SetDefaultValuesFromQueryString()
                        ValidateParametersInstance(_formData)
                        
                        popupNotifyMessage.ShowOnPageLoad = false                        
                        
                        ControlsInitialization()
                        ExecuteActionsInitializationForm()
                         
                        If Not String.IsNullOrEmpty(Request.QueryString("readonly")) Then
                            SetReadOnlyControls()
                        End If
                        
                        If Not String.IsNullOrEmpty(Request.QueryString("btnCotizarFinal")) Then
                            btnCotizarFinal_Click(nothing, nothing)
                        End If
                        If Not String.IsNullOrEmpty(Request.QueryString("button9")) Then
                            button9_Click(nothing, nothing)
                        End If
                        If Not String.IsNullOrEmpty(Request.QueryString("button3MVVNN")) Then
                            button3MVVNN_Click(nothing, nothing)
                        End If
                        If Not String.IsNullOrEmpty(Request.QueryString("buttonCotVI")) Then
                            buttonCotVI_Click(nothing, nothing)
                        End If
                        If Not String.IsNullOrEmpty(Request.QueryString("CotizaMAD")) Then
                            CotizaMAD_Click(nothing, nothing)
                        End If
                        If Not String.IsNullOrEmpty(Request.QueryString("CotizaHV")) Then
                            CotizaHV_Click(nothing, nothing)
                        End If
                        If Not String.IsNullOrEmpty(Request.QueryString("CotizaHV2")) Then
                            CotizaHV2_Click(nothing, nothing)
                        End If
                        If Not String.IsNullOrEmpty(Request.QueryString("button13")) Then
                            button13_Click(nothing, nothing)
                        End If

                    Else
                    		SetDefaultValuesFromQueryString()
                        
                    End If

                Else
                     formDefinition = Session(String.Format(CultureInfo.InvariantCulture, "FormStorage.{0}", _FormID.Text))
    
           If Not String.IsNullOrEmpty(formDefinition) Then
              _formData = Serialize.Deserialize(Of NNCotizacionesTodosLosRamosIconosParameter)(formDefinition)
           End If                    

                    If IsNothing(_formData) Then
                        _formData = New NNCotizacionesTodosLosRamosIconosParameter
                    End If
                End If
            End If

            Return _formData
        End Get

        Set(value As NNCotizacionesTodosLosRamosIconosParameter)
            _formData = value
        End Set
    End Property
    
#End Region

#Region "Form Events"

    Protected Sub Page_Load(sender As Object, e As EventArgs) Handles Me.Load
        ErrorsGridView.Visible = False
        
        If ConfigurationManager.AppSettings("ActivateFASIKey") Then
            If Not InMotionGIT.FrontOffice.Proxy.Helpers.RoleManager.ValidateAccess(UserInfo, "9000;9001;9002;9010;9011;100;9015;9050;9056;MAR1;3535;601;1001;2001;2002;2003;3001;3002;1003;4001;4002;5001;6001;444;INTER;PRU12;666;CHNGPW;MARKET;IsaacTest;252525;Anonimo;Cliente;Productor;1007;555;1000;523;EASE1;PANTX;1004;1002;Suscriptor;3030;4040;PortalUser;TOGNA;4646;1201;3200;588;ABC001;ADM003;BEN001;BEN002;BEN004;CBZ002;CLIENT;ECB005;EMI006;EMI007;ERROR;LALALA;PRUEB1;PRUEB2;PRUEB3;PRUEBA;SEC000;IsaacTest1;600;DNEAdmin;DNEGet;DNEUpdate;DNEAdd;DNEDelete;DNEOwner;EASE2;EMI008") AndAlso
              (Request.QueryString.IsEmpty OrElse Request.QueryString("Key").IsEmpty OrElse Not KeyValidator.KeyValidator(Request.QueryString("Key"))) Then

                Response.Redirect(String.Format(CultureInfo.InvariantCulture, "~/dropthings/Error.aspx?id={0}", GetGlobalResourceObject("Resource", "DeniedAccess")))
            End If

        Else
            If Not InMotionGIT.FrontOffice.Proxy.Helpers.RoleManager.ValidateAccess(UserInfo, "9000;9001;9002;9010;9011;100;9015;9050;9056;MAR1;3535;601;1001;2001;2002;2003;3001;3002;1003;4001;4002;5001;6001;444;INTER;PRU12;666;CHNGPW;MARKET;IsaacTest;252525;Anonimo;Cliente;Productor;1007;555;1000;523;EASE1;PANTX;1004;1002;Suscriptor;3030;4040;PortalUser;TOGNA;4646;1201;3200;588;ABC001;ADM003;BEN001;BEN002;BEN004;CBZ002;CLIENT;ECB005;EMI006;EMI007;ERROR;LALALA;PRUEB1;PRUEB2;PRUEB3;PRUEBA;SEC000;IsaacTest1;600;DNEAdmin;DNEGet;DNEUpdate;DNEAdd;DNEDelete;DNEOwner;EASE2;EMI008") Then
                Response.Redirect(String.Format(CultureInfo.InvariantCulture, "~/dropthings/Error.aspx?id={0}", GetGlobalResourceObject("Resource", "DeniedAccess")))
            End If
        End If
        
        Dim formData As NNCotizacionesTodosLosRamosIconosParameter = Me.FormData        
           
        If Not IsPostBack  AndAlso Not GridViewPostBack() Then                     
            
            
            _loadcompleted = True
            
            
            If IsPostBack And Not _CurrentParameterInstance Then
                MapPageToClass(formData)
                _CurrentParameterInstance = True
            End If

            MapClassToPage(formData)
            VerifySecurityLevel()
            
            
        Else
            
            
            
        End If        
        
        If Not FormResources.Contains("ComboBoxErrorText") Then
            FormResources.Add("ComboBoxErrorText", GetGlobalResourceObject("Resource", "ComboBoxErrorText").ToString())
        End If
        
        
    End Sub    

    Protected Sub Page_Unload(sender As Object, e As EventArgs) Handles Me.Unload        
        If Not IsNothing(_formData) Then  
                       Session(String.Format(CultureInfo.InvariantCulture, "FormStorage.{0}", _FormID.Text)) = Serialize.Serialize(Of NNCotizacionesTodosLosRamosIconosParameter)(_formData)
                       Session(String.Format(CultureInfo.InvariantCulture, "FormTitle.{0}", _FormID.Text)) = Page.Title
        End If 
        
        If Not IsNothing(_formData) Then
             If Not IsNothing(Session("Form.Track")) AndAlso Session("Form.Track").ToString.ToLower = "true" Then
                 Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}", IO.Path.GetFileNameWithoutExtension(Page.AppRelativeVirtualPath))) = _formData
             End If   
       
             If Not IsNothing(Session("Form.Track.Parameters")) AndAlso Session("Form.Track.Parameters").ToString.ToLower = "true" Then
                  InMotionGIT.Common.Helpers.Serialize.SerializeToFile(Of NNCotizacionesTodosLosRamosIconosParameter) _
                  (formData, String.Format(CultureInfo.InvariantCulture, "{0}\{1}.NNCotizacionesTodosLosRamosIconos.xml",  ConfigurationManager.AppSettings("Path.Logs"), formData.InternalId), True)
             End If        
        End If  
   End Sub

#End Region

#Region "Controls Events"


    Private Function GridViewPostBack() As Boolean
        For index As Integer = 0 To Request.Params.Count - 1
            If Request.Params(index).EndsWith("$")  Then
                Return True
            End If
        Next
        
        Return False
    End Function    
        
    
    
#End Region

#Region "ClienteProductor On Items Requested Events"

    Protected Sub ClienteProductor_OnItemsRequestedByFilterCondition(source As Object, e As ListEditItemsRequestedByFilterConditionEventArgs)
        Dim query As String = String.Format(CultureInfo.CurrentCulture, "SELECT DISTINCT SCLIENT, SCLIENAME FROM (SELECT DISTINCT TRIM(ROLES.SCLIENT) SCLIENT, TRIM(CLIENT.SCLIENAME) SCLIENAME, ROW_NUMBER() OVER (ORDER BY SCLIENAME) ROW_NUM FROM COMMISSION COMMISSION JOIN CERTIFICAT CERTIFICAT ON CERTIFICAT.SCERTYPE = COMMISSION.SCERTYPE  AND CERTIFICAT.NBRANCH = COMMISSION.NBRANCH  AND CERTIFICAT.NPRODUCT = COMMISSION.NPRODUCT  AND CERTIFICAT.NPOLICY = COMMISSION.NPOLICY  AND CERTIFICAT.NCERTIF = COMMISSION.NCERTIF JOIN ROLES ROLES ON ROLES.SCERTYPE = CERTIFICAT.SCERTYPE  AND ROLES.NBRANCH = CERTIFICAT.NBRANCH  AND ROLES.NPRODUCT = CERTIFICAT.NPRODUCT  AND ROLES.NPOLICY = CERTIFICAT.NPOLICY  AND ROLES.NCERTIF = CERTIFICAT.NCERTIF JOIN CLIENT CLIENT ON CLIENT.SCLIENT = ROLES.SCLIENT  WHERE ROLES.NROLE <> {0} AND COMMISSION.NINTERMED = '{1}' AND %FILTER% ) Result WHERE Row_Num BETWEEN {2} AND {3}",13, _formData.ProducerCode, e.BeginIndex + 1, e.EndIndex + 1)
        
        
        If String.IsNullOrEmpty(e.Filter) Then
            query = query.Replace("%FILTER%", "CLIENT.SCLIENAME IS NOT NULL")
            
        Else
            Dim filter As String = e.Filter.Trim.ToUpper

            If filter.IndexOf("%") = -1 Then
                filter = String.Format(CultureInfo.CurrentCulture, "%{0}%", filter)
            End If

            query = query.Replace("%FILTER%", String.Format(CultureInfo.CurrentCulture, "(UPPER(CLIENT.SCLIENAME) LIKE '{0}')", filter))
        End If
             
        With New DataManagerFactory(query, "ClienteProductor", "Linked.LatCombined")
             
             ClienteProductor.DataSource = .QueryExecuteToTable(True)
        End With             
       
        ClienteProductor.DataBind()
        
    End Sub

    Protected Sub ClienteProductor_OnItemRequestedByValue(source As Object, e As ListEditItemRequestedByValueEventArgs)
        
        If String.IsNullOrEmpty(e.Value)  Then
            Return
        End If

        With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                  "SELECT DISTINCT TRIM(ROLES.SCLIENT) SCLIENT, TRIM(CLIENT.SCLIENAME) SCLIENAME FROM COMMISSION COMMISSION JOIN CERTIFICAT CERTIFICAT ON CERTIFICAT.SCERTYPE = COMMISSION.SCERTYPE  AND CERTIFICAT.NBRANCH = COMMISSION.NBRANCH  AND CERTIFICAT.NPRODUCT = COMMISSION.NPRODUCT  AND CERTIFICAT.NPOLICY = COMMISSION.NPOLICY  AND CERTIFICAT.NCERTIF = COMMISSION.NCERTIF JOIN ROLES ROLES ON ROLES.SCERTYPE = CERTIFICAT.SCERTYPE  AND ROLES.NBRANCH = CERTIFICAT.NBRANCH  AND ROLES.NPRODUCT = CERTIFICAT.NPRODUCT  AND ROLES.NPOLICY = CERTIFICAT.NPOLICY  AND ROLES.NCERTIF = CERTIFICAT.NCERTIF JOIN CLIENT CLIENT ON CLIENT.SCLIENT = ROLES.SCLIENT  WHERE ROLES.NROLE <> {0} AND COMMISSION.NINTERMED = '{1}'  AND ROLES.SCLIENT = '{2}' ", 13, _formData.ProducerCode, e.Value.ToString), 
                                                  "ClienteProductor", "Linked.LatCombined")
                                                  
             ClienteProductor.DataSource = .QueryExecuteToTable(True)
        End With  
               
        ClienteProductor.DataBind()
        
    End Sub

#End Region

#Region "PopupMenu Events"

    
    
#End Region

#Region "Mapping methods"

    Public Sub ValidateParametersInstance(ByRef NNCotizacionesTodosLosRamosIconosParameterInstance As NNCotizacionesTodosLosRamosIconosParameter)
        If IsNothing(NNCotizacionesTodosLosRamosIconosParameterInstance.RiskInformation) Then
            NNCotizacionesTodosLosRamosIconosParameterInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
        End If
        If IsNothing(NNCotizacionesTodosLosRamosIconosParameterInstance.RiskInformation.PrimaryInsured) Then
            NNCotizacionesTodosLosRamosIconosParameterInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
        End If
        If IsNothing(NNCotizacionesTodosLosRamosIconosParameterInstance.RiskInformation.PrimaryInsured.Client) Then
            NNCotizacionesTodosLosRamosIconosParameterInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
        End If
   
    End Sub
    
    ''' <summary>
    ''' This method moves the data from the class to the page
    ''' </summary>
    ''' <param name="NNCotizacionesTodosLosRamosIconosParameterInstance"></param>
    ''' <remarks></remarks>
    Public Sub MapClassToPage(ByRef NNCotizacionesTodosLosRamosIconosParameterInstance As NNCotizacionesTodosLosRamosIconosParameter, Optional calledBy As String = "")
        Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
        ValidateParametersInstance(NNCotizacionesTodosLosRamosIconosParameterInstance)

        ClienteProductor.DataBind()

       
        With NNCotizacionesTodosLosRamosIconosParameterInstance
          
                      CompleteClientNameCTLR.Text = .RiskInformation.PrimaryInsured.Client.CompleteClientName
            If Not String.IsNullOrEmpty(.ImagenSeleccionada) Then
                image9.ImageUrl = .ImagenSeleccionada
            Else
                image9.ImageUrl = "/images/empty.png"
            End If

            ClientID.Text = .RiskInformation.PrimaryInsured.Client.ClientID
            ClienteProductor.Value = .ClienteProductor
            ClienteProductor_OnItemRequestedByValue(ClienteProductor, New ListEditItemRequestedByValueEventArgs(.ClienteProductor))
            ClienteProductor.SelectedItem = ClienteProductor.Items.FindByValue(.ClienteProductor)
       ContactoMailTelefonoEnWidget.MapClassToPage(ContactoMailTelefonoEnWidget.FormData)

              
                  
           
 
          
               
            
            
       End With


if (Not ("".IndexOf(calledBy) > -1)) Or String.IsNullOrEmpty(calledBy) then        
            
         

        End If          
    End Sub

    ''' <summary>
    ''' This method moves the data from the page to the class
    ''' </summary>
    ''' <param name="NNCotizacionesTodosLosRamosIconosParameterInstance"></param>
    Public Sub MapPageToClass(ByRef NNCotizacionesTodosLosRamosIconosParameterInstance As NNCotizacionesTodosLosRamosIconosParameter)
        _loading = True

        ValidateParametersInstance(NNCotizacionesTodosLosRamosIconosParameterInstance)

        With NNCotizacionesTodosLosRamosIconosParameterInstance
            .RiskInformation.PrimaryInsured.Client.CompleteClientName = CompleteClientNameCTLR.Text.Trim()
            .RiskInformation.PrimaryInsured.Client.ClientID = ClientID.Text
            .ClienteProductor = ClienteProductor.Value





        End With




        _loading = False
    End Sub

#End Region








#Region "AutoPostBack Events Handles"

Protected Sub btnCotizarFinal_Click(sender As Object, e As EventArgs)  
        Dim NNCotizacionesTodosLosRamosIconosParameterInstance As NNCotizacionesTodosLosRamosIconosParameter = Nothing
        Dim _formContext As New InMotionGIT.Common.Contracts.Context(LanguageHelper.CurrentCultureToLanguage, formData.InternalId) With {.UserId = Session("UserId"), .UserCode = Session("nUsercode"), .SecuritySchemeCode = Session("sSche_code"), .AccessToken = Session("AccessToken")}
        Dim currentAction As String = SessionTrace("btnCotizarFinal_Click")
        Dim parametersDictionary As Dictionary(Of String, Object) = Nothing  
        
        popupNotifyMessage.ShowOnPageLoad = false
        
        Try 
            Dim messageAction As String = String.Empty             
            Dim lastURL As String = String.Empty
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean  = False             
            

        
           
        
           GetCurrentParameterInstance(NNCotizacionesTodosLosRamosIconosParameterInstance, True)
         
           ParametersToDictionary(parametersDictionary)  
        
                       currentAction = SessionTrace("1. _formData.StatusRun = true...") 
 
            currentAction = SessionTrace("1.1. _formData.StatusRun = true...")

 _formData.StatusRun = true 

            currentAction = SessionTrace("2. _formData.RiskInformation.EffectiveDate = today...") 
 
            currentAction = SessionTrace("2.1. _formData.RiskInformation.EffectiveDate = today...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation.EffectiveDate = today 

            currentAction = SessionTrace("3. If _formData.IsEmployee = true AND _formData.RiskInformation.PrimaryInsured.Client.ClientID Not Is Null Or Not Empty '' Then") 
If _formData.IsEmployee = true AndAlso Not String.IsNullOrEmpty(_formData.RiskInformation.PrimaryInsured.Client.ClientID) Then

            currentAction = SessionTrace("4. Call Shared Function 'Retrieve Client' with parameters (Client Identification)") 
            Dim _Client_ea51402f8f7b4cadb08c5e362a350a3f As InMotionGIT.Client.Entity.Contracts.Client 
                      If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
                      If IsNothing(_formData.RiskInformation.PrimaryInsured) Then
              _formData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
          End If 
                      If IsNothing(_formData.RiskInformation.PrimaryInsured.Client) Then
              _formData.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
          End If 
            
      _Client_ea51402f8f7b4cadb08c5e362a350a3f = (New InMotionGIT.Client.Services.ClientManager).Retrieve(clientId:=_formData.RiskInformation.PrimaryInsured.Client.ClientID, atDate:=Date.Today, childFilter:= "All")
      isNullResult = (IsNothing(_Client_ea51402f8f7b4cadb08c5e362a350a3f))
      isFoundData  = Not isNullResult
     
            _formData.RiskInformation.PrimaryInsured.Client = _Client_ea51402f8f7b4cadb08c5e362a350a3f 

            currentAction = SessionTrace("5. _formData.ClientExistInDB = true...") 
 
            currentAction = SessionTrace("5.1. _formData.ClientExistInDB = true...")

 _formData.ClientExistInDB = true 

            currentAction = SessionTrace("6. _formData.RiskInformation.PrimaryInsured.Client.IsNew = false...") 
 
            currentAction = SessionTrace("6.1. _formData.RiskInformation.PrimaryInsured.Client.IsNew = false...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured) Then
              _formData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured.Client) Then
              _formData.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
          End If 

 _formData.RiskInformation.PrimaryInsured.Client.IsNew = false 

            End If
            currentAction = SessionTrace("7. If _formData.IsProducer = true AND _formData.ClienteProductor Not Is Null Or Not Empty '' Then") 
If _formData.IsProducer = true AndAlso Not String.IsNullOrEmpty(_formData.ClienteProductor) Then

            currentAction = SessionTrace("8. Call Shared Function 'Retrieve Client' with parameters (Client Identification)") 
            Dim _Client_408afc1aac814dd6b55dcc3c531ef09c As InMotionGIT.Client.Entity.Contracts.Client 
                      If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
                      If IsNothing(_formData.RiskInformation.PrimaryInsured) Then
              _formData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
          End If 
                      If IsNothing(_formData.RiskInformation.PrimaryInsured.Client) Then
              _formData.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
          End If 
            
      _Client_408afc1aac814dd6b55dcc3c531ef09c = (New InMotionGIT.Client.Services.ClientManager).Retrieve(clientId:=_formData.ClienteProductor, atDate:=Date.Today, childFilter:= "All")
      isNullResult = (IsNothing(_Client_408afc1aac814dd6b55dcc3c531ef09c))
      isFoundData  = Not isNullResult
     
            _formData.RiskInformation.PrimaryInsured.Client = _Client_408afc1aac814dd6b55dcc3c531ef09c 

            currentAction = SessionTrace("9. _formData.ClientExistInDB = true...") 
 
            currentAction = SessionTrace("9.1. _formData.ClientExistInDB = true...")

 _formData.ClientExistInDB = true 

            currentAction = SessionTrace("10. _formData.RiskInformation.PrimaryInsured.Client.IsNew = false...") 
 
            currentAction = SessionTrace("10.1. _formData.RiskInformation.PrimaryInsured.Client.IsNew = false...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured) Then
              _formData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured.Client) Then
              _formData.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
          End If 

 _formData.RiskInformation.PrimaryInsured.Client.IsNew = false 

            End If
            currentAction = SessionTrace("11. _formData.Currency = 0...") 
 
            currentAction = SessionTrace("11.1. _formData.Currency = 0...")

 _formData.Currency = 0 

            currentAction = SessionTrace("12. If _formData.PlanType = 2 Then") 
If _formData.PlanType = 2 Then

            currentAction = SessionTrace("13. _formData.RiskInformation.LineOfBusiness = 2...") 
 
            currentAction = SessionTrace("13.1. _formData.RiskInformation.LineOfBusiness = 2...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation.LineOfBusiness = 2 

            currentAction = SessionTrace("14. _formData.RiskInformation.ProductCode = 6664...") 
 
            currentAction = SessionTrace("14.1. _formData.RiskInformation.ProductCode = 6664...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation.ProductCode = 6664 

            End If
            currentAction = SessionTrace("15. If _formData.PlanType = 3 Then") 
If _formData.PlanType = 3 Then

            currentAction = SessionTrace("16. _formData.RiskInformation.LineOfBusiness = 2...") 
 
            currentAction = SessionTrace("16.1. _formData.RiskInformation.LineOfBusiness = 2...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation.LineOfBusiness = 2 

            currentAction = SessionTrace("17. _formData.RiskInformation.ProductCode = 605...") 
 
            currentAction = SessionTrace("17.1. _formData.RiskInformation.ProductCode = 605...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation.ProductCode = 605 

            End If
            currentAction = SessionTrace("18. If _formData.PlanType = 10 Then") 
If _formData.PlanType = 10 Then

            currentAction = SessionTrace("19. _formData.RiskInformation.LineOfBusiness = 6...") 
 
            currentAction = SessionTrace("19.1. _formData.RiskInformation.LineOfBusiness = 6...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation.LineOfBusiness = 6 

            currentAction = SessionTrace("20. _formData.RiskInformation.ProductCode = 9300...") 
 
            currentAction = SessionTrace("20.1. _formData.RiskInformation.ProductCode = 9300...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation.ProductCode = 9300 

            End If
            currentAction = SessionTrace("21. If _formData.PlanType = 20 Then") 
If _formData.PlanType = 20 Then

            currentAction = SessionTrace("22. _formData.RiskInformation.LineOfBusiness = 9...") 
 
            currentAction = SessionTrace("22.1. _formData.RiskInformation.LineOfBusiness = 9...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation.LineOfBusiness = 9 
            currentAction = SessionTrace("22.2. _formData.RiskInformation.ProductCode = 2...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation.ProductCode = 2 

            End If
            currentAction = SessionTrace("23. If _formData.PlanType = 40 Then") 
If _formData.PlanType = 40 Then

            currentAction = SessionTrace("24. _formData.RiskInformation.LineOfBusiness = 20...") 
 
            currentAction = SessionTrace("24.1. _formData.RiskInformation.LineOfBusiness = 20...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation.LineOfBusiness = 20 
            currentAction = SessionTrace("24.2. _formData.RiskInformation.ProductCode = 2...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation.ProductCode = 2 
            currentAction = SessionTrace("24.3. _formData.RiskInformation.EffectiveDate = Date.Today...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation.EffectiveDate = Date.Today 

            End If
            currentAction = SessionTrace("25. If _formData.PlanType = 50 Then") 
If _formData.PlanType = 50 Then

            currentAction = SessionTrace("26. _formData.RiskInformation.LineOfBusiness = 2...") 
 
            currentAction = SessionTrace("26.1. _formData.RiskInformation.LineOfBusiness = 2...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation.LineOfBusiness = 2 
            currentAction = SessionTrace("26.2. _formData.RiskInformation.ProductCode = 70...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation.ProductCode = 70 
            currentAction = SessionTrace("26.3. _formData.RiskInformation.EffectiveDate = Date.Today...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation.EffectiveDate = Date.Today 

            End If
            currentAction = SessionTrace("27. If _formData.PlanType <> 0 Then") 
If _formData.PlanType <> 0 Then

            currentAction = SessionTrace("28. Call Function 'Retrieve Product Master' with parameters (Line of Business, Product Id, Effective Date)") 
            Dim _ProductMaster_7d07fa2993e04036972f32d3567346a3 As InMotionGIT.Product.Entity.Contracts.ProductMaster 
            _ProductMaster_7d07fa2993e04036972f32d3567346a3 = (New InMotionGIT.Product.Services.ProductManager).RetrieveWithCaching            (lineOfBusiness:=_formData.RiskInformation.LineOfBusiness, productId:=_formData.RiskInformation.ProductCode, atDate:=Date.Today) 
             
            _formData.ProductMaster = _ProductMaster_7d07fa2993e04036972f32d3567346a3 
            isNullResult = (IsNothing(_ProductMaster_7d07fa2993e04036972f32d3567346a3)) 

            currentAction = SessionTrace("29. _formData.ProductMasterDescription = _formData.ProductMaster.Description...") 
 
            currentAction = SessionTrace("29.1. _formData.ProductMasterDescription = _formData.ProductMaster.Description...")

 _formData.ProductMasterDescription = _formData.ProductMaster.Description 

            currentAction = SessionTrace("30. _formData.PaymentMethod = _formData.ProductMaster.ProductGene...") 
 
            currentAction = SessionTrace("30.1. _formData.PaymentMethod = _formData.ProductMaster.ProductGene...")

 _formData.PaymentMethod = _formData.ProductMaster.ProductGeneralInformation.PaymentMethod 
            currentAction = SessionTrace("30.2. _formData.ProductMasterDescription = _formData.ProductMaster.Description...")

 _formData.ProductMasterDescription = _formData.ProductMaster.Description 

            currentAction = SessionTrace("31. _formData.RiskInformation.PaymentFrequency = _formData.ProductMaster.ProductGene...") 
 
            currentAction = SessionTrace("31.1. _formData.RiskInformation.PaymentFrequency = _formData.ProductMaster.ProductGene...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation.PaymentFrequency = _formData.ProductMaster.ProductGeneralInformation.PaymentFrequency 
            currentAction = SessionTrace("31.2. _formData.RiskInformation.Policy.PaymentFrequency = _formData.ProductMaster.ProductGene...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.Policy) Then
              _formData.RiskInformation.Policy = New InMotionGIT.Policy.Entity.Contracts.Policy
          End If 

 _formData.RiskInformation.Policy.PaymentFrequency = _formData.ProductMaster.ProductGeneralInformation.PaymentFrequency 
            currentAction = SessionTrace("31.3. _formData.RiskInformation.PaymentMethod = _formData.ProductMaster.ProductGene...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation.PaymentMethod = _formData.ProductMaster.ProductGeneralInformation.PaymentMethod 

currentAction = SessionTrace("32. SELECT CUR_ALLOW.NBRANCH, CUR_ALLOW.NPRODUCT, CUR_ALLOW.NCURRENCY FROM CUR_ALLOW... WHERE CUR_ALLOW.NBRANCH = _formData.RiskInformation.LineOfBusiness AND CUR_ALLOW.NPRODUCT = _formData.RiskInformation.ProductCode AND CUR_ALLOW.SDEFAULTI = 1 )") 
            isFoundData = False 
            With New DataManagerFactory("SELECT DISTINCT CUR_ALLOW.NCURRENCY FROM CUR_ALLOW CUR_ALLOW  WHERE CUR_ALLOW.NBRANCH = @:CUR_ALLOWNBRANCH0 AND CUR_ALLOW.NPRODUCT = @:CUR_ALLOWNPRODUCT1 AND CUR_ALLOW.SDEFAULTI = '1'", "CUR_ALLOW", "Linked.LatCombined")
             .AddParameter("CUR_ALLOWNBRANCH0", DbType.Int32, 5, False, _formData.RiskInformation.LineOfBusiness)
.AddParameter("CUR_ALLOWNPRODUCT1", DbType.Int32, 5, False, _formData.RiskInformation.ProductCode)
 
             _formData.Currency = .QueryExecuteScalarToInteger()  
        End With

            currentAction = SessionTrace("33. If _formData.Currency Is Null Or Empty  OR _formData.Currency = 0 Then") 
If IsNothing(_formData.Currency) OrElse _formData.Currency = 0 Then

            currentAction = SessionTrace("34. _formData.Currency = 1...") 
 
            currentAction = SessionTrace("34.1. _formData.Currency = 1...")

 _formData.Currency = 1 

            End If
            End If
            currentAction = SessionTrace("35. _formData.RiskInformation.Currency = _formData.Currency...") 
 
            currentAction = SessionTrace("35.1. _formData.RiskInformation.Currency = _formData.Currency...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation.Currency = _formData.Currency 

            currentAction = SessionTrace("36. If _formData.PlanType = 1 OR _formData.PlanType = 2 Then") 
If _formData.PlanType = 1 OrElse _formData.PlanType = 2 Then

            currentAction = SessionTrace("37. _formData.RiskInformation.Policy.PolicyType = 1...") 
 
            currentAction = SessionTrace("37.1. _formData.RiskInformation.Policy.PolicyType = 1...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.Policy) Then
              _formData.RiskInformation.Policy = New InMotionGIT.Policy.Entity.Contracts.Policy
          End If 

 _formData.RiskInformation.Policy.PolicyType = 1 

            currentAction = SessionTrace("38. _formData.RiskInformation.PaymentFrequency = _formData.ProductMaster.ProductGene...") 
 
            currentAction = SessionTrace("38.1. _formData.RiskInformation.PaymentFrequency = _formData.ProductMaster.ProductGene...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation.PaymentFrequency = _formData.ProductMaster.ProductGeneralInformation.PaymentFrequency 
            currentAction = SessionTrace("38.2. _formData.RiskInformation.Policy.PaymentFrequency = _formData.ProductMaster.ProductGene...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.Policy) Then
              _formData.RiskInformation.Policy = New InMotionGIT.Policy.Entity.Contracts.Policy
          End If 

 _formData.RiskInformation.Policy.PaymentFrequency = _formData.ProductMaster.ProductGeneralInformation.PaymentFrequency 
            currentAction = SessionTrace("38.3. _formData.RiskInformation.PaymentMethod = _formData.ProductMaster.ProductGene...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation.PaymentMethod = _formData.ProductMaster.ProductGeneralInformation.PaymentMethod 

            currentAction = SessionTrace("39. _formData.RiskInformation.LifeLineOfBusiness.DurationOfPayments = _formData.ProductMaster.ProductLife...") 
 
            currentAction = SessionTrace("39.1. _formData.RiskInformation.LifeLineOfBusiness.DurationOfPayments = _formData.ProductMaster.ProductLife...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.LifeLineOfBusiness) Then
              _formData.RiskInformation.LifeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness
          End If 

 _formData.RiskInformation.LifeLineOfBusiness.DurationOfPayments = _formData.ProductMaster.ProductLifeLineOfBusiness.DurationOfPayments 

            currentAction = SessionTrace("40. _formData.RiskInformation.LifeLineOfBusiness.TypeOfInsurancePeriod = _formData.ProductMaster.ProductLife...") 
 
            currentAction = SessionTrace("40.1. _formData.RiskInformation.LifeLineOfBusiness.TypeOfInsurancePeriod = _formData.ProductMaster.ProductLife...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.LifeLineOfBusiness) Then
              _formData.RiskInformation.LifeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness
          End If 

 _formData.RiskInformation.LifeLineOfBusiness.TypeOfInsurancePeriod = _formData.ProductMaster.ProductLifeLineOfBusiness.TypeOfInsuranceDuration 

            currentAction = SessionTrace("41. _formData.RiskInformation.LifeLineOfBusiness.InsuranceDuration = _formData.ProductMaster.ProductLife...") 
 
            currentAction = SessionTrace("41.1. _formData.RiskInformation.LifeLineOfBusiness.InsuranceDuration = _formData.ProductMaster.ProductLife...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.LifeLineOfBusiness) Then
              _formData.RiskInformation.LifeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness
          End If 

 _formData.RiskInformation.LifeLineOfBusiness.InsuranceDuration = _formData.ProductMaster.ProductLifeLineOfBusiness.InsuranceDuration 

            currentAction = SessionTrace("42. _formData.RiskInformation.Currency = _formData.ProductMaster.ProductLife...") 
 
            currentAction = SessionTrace("42.1. _formData.RiskInformation.Currency = _formData.ProductMaster.ProductLife...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation.Currency = _formData.ProductMaster.ProductLifeLineOfBusiness.Currency 
            currentAction = SessionTrace("42.2. _formData.Currency = _formData.ProductMaster.ProductLife...")

 _formData.Currency = _formData.ProductMaster.ProductLifeLineOfBusiness.Currency 

            currentAction = SessionTrace("43. _formData.Currency = _formData.ProductMaster.ProductLife...") 
 
            currentAction = SessionTrace("43.1. _formData.Currency = _formData.ProductMaster.ProductLife...")

 _formData.Currency = _formData.ProductMaster.ProductLifeLineOfBusiness.Currency 

            currentAction = SessionTrace("44. Call 'Mi Vida vale' form with transferring parameters") 
Session(_FormID.Text) = _formData 
 Session("fromid") = _FormID.Text 
     
_webtransfer = String.Format(CultureInfo.InvariantCulture, "{0}/NNCotizacionMiVidaValeII.aspx?fromid={1}", ConfigurationManager.AppSettings("Url.Form"), _FormID.Text, "") 
        Else 
            currentAction = SessionTrace("45. If _formData.PlanType = 3 Then") 
If _formData.PlanType = 3 Then

            currentAction = SessionTrace("46. _formData.RiskInformation.PrimaryInsured.Client.BusinessAddress = New InMotionGIT.General.Entity.Cont...") 
 
            currentAction = SessionTrace("46.1. _formData.RiskInformation.PrimaryInsured.Client.BusinessAddress = New InMotionGIT.General.Entity.Cont...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured) Then
              _formData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured.Client) Then
              _formData.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured.Client.BusinessAddress) Then
              _formData.RiskInformation.PrimaryInsured.Client.BusinessAddress = New InMotionGIT.General.Entity.Contracts.Address.Address
          End If 

 _formData.RiskInformation.PrimaryInsured.Client.BusinessAddress = New InMotionGIT.General.Entity.Contracts.Address.Address 

            currentAction = SessionTrace("47. _formData.RiskInformation.Policy.PolicyType = 1...") 
 
            currentAction = SessionTrace("47.1. _formData.RiskInformation.Policy.PolicyType = 1...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.Policy) Then
              _formData.RiskInformation.Policy = New InMotionGIT.Policy.Entity.Contracts.Policy
          End If 

 _formData.RiskInformation.Policy.PolicyType = 1 

            currentAction = SessionTrace("48. '_formData.InvestmentFundRelatedToProductCollection' = New 'InMotionGIT.Product.Entit'...'") 
             _formData.InvestmentFundRelatedToProductCollection = New InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProductCollection

            currentAction = SessionTrace("49. For Each investmentfundrelatedtoproductItem As 'InMotionGIT.Product.Entit...' In '_formData.ProductMaster.I...'") 
            For Each investmentfundrelatedtoproductItem As InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct In _formData.ProductMaster.InvestmentFundRelatedToProducts 
                If Not parametersDictionary.ExistsProperty("investmentfundrelatedtoproductItem") Then 
                    parametersDictionary("investmentfundrelatedtoproductItem") = investmentfundrelatedtoproductItem 
                End If 

            currentAction = SessionTrace("50. '_formData.InvestmentFundRelatedToProductCollection'.Add('investmentfundrelatedtoproductItem')") 
             _formData.InvestmentFundRelatedToProductCollection.Add(investmentfundrelatedtoproductItem)

            Next
            currentAction = SessionTrace("51. _formData.PaymentMethod = _formData.ProductMaster.ProductGene...") 
 
            currentAction = SessionTrace("51.1. _formData.PaymentMethod = _formData.ProductMaster.ProductGene...")

 _formData.PaymentMethod = _formData.ProductMaster.ProductGeneralInformation.PaymentMethod 
            currentAction = SessionTrace("51.2. _formData.ProductMasterDescription = _formData.ProductMaster.Description...")

 _formData.ProductMasterDescription = _formData.ProductMaster.Description 

            currentAction = SessionTrace("52. _formData.RiskInformation.LifeLineOfBusiness.TypeOfPaymentsPeriod = 1...") 
 
            currentAction = SessionTrace("52.1. _formData.RiskInformation.LifeLineOfBusiness.TypeOfPaymentsPeriod = 1...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.LifeLineOfBusiness) Then
              _formData.RiskInformation.LifeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness
          End If 

 _formData.RiskInformation.LifeLineOfBusiness.TypeOfPaymentsPeriod = 1 

            currentAction = SessionTrace("53. _formData.RiskInformation.LifeLineOfBusiness.InsuranceDuration = _formData.ProductMaster.ProductLife...") 
 
            currentAction = SessionTrace("53.1. _formData.RiskInformation.LifeLineOfBusiness.InsuranceDuration = _formData.ProductMaster.ProductLife...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.LifeLineOfBusiness) Then
              _formData.RiskInformation.LifeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness
          End If 

 _formData.RiskInformation.LifeLineOfBusiness.InsuranceDuration = _formData.ProductMaster.ProductLifeLineOfBusiness.InsuranceDuration 

            currentAction = SessionTrace("54. _formData.Currency = _formData.ProductMaster.ProductLife...") 
 
            currentAction = SessionTrace("54.1. _formData.Currency = _formData.ProductMaster.ProductLife...")

 _formData.Currency = _formData.ProductMaster.ProductLifeLineOfBusiness.Currency 

            currentAction = SessionTrace("55. _formData.RiskInformation.Currency = _formData.ProductMaster.ProductLife...") 
 
            currentAction = SessionTrace("55.1. _formData.RiskInformation.Currency = _formData.ProductMaster.ProductLife...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation.Currency = _formData.ProductMaster.ProductLifeLineOfBusiness.Currency 

            currentAction = SessionTrace("56. _formData.RiskInformation.LifeLineOfBusiness.TypeOfInsurancePeriod = _formData.ProductMaster.ProductLife...") 
 
            currentAction = SessionTrace("56.1. _formData.RiskInformation.LifeLineOfBusiness.TypeOfInsurancePeriod = _formData.ProductMaster.ProductLife...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.LifeLineOfBusiness) Then
              _formData.RiskInformation.LifeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness
          End If 

 _formData.RiskInformation.LifeLineOfBusiness.TypeOfInsurancePeriod = _formData.ProductMaster.ProductLifeLineOfBusiness.TypeOfInsuranceDuration 

            currentAction = SessionTrace("57. _formData.ProductMasterDescription = _formData.ProductMaster.Description...") 
 
            currentAction = SessionTrace("57.1. _formData.ProductMasterDescription = _formData.ProductMaster.Description...")

 _formData.ProductMasterDescription = _formData.ProductMaster.Description 

            currentAction = SessionTrace("58. _formData.RiskInformation.LifeLineOfBusiness.DurationOfPayments = _formData.ProductMaster.ProductLife...") 
 
            currentAction = SessionTrace("58.1. _formData.RiskInformation.LifeLineOfBusiness.DurationOfPayments = _formData.ProductMaster.ProductLife...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.LifeLineOfBusiness) Then
              _formData.RiskInformation.LifeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness
          End If 

 _formData.RiskInformation.LifeLineOfBusiness.DurationOfPayments = _formData.ProductMaster.ProductLifeLineOfBusiness.DurationOfPayments 

            currentAction = SessionTrace("59. Call 'Mi Inversión Segura' form with transferring parameters") 
Session(_FormID.Text) = _formData 
 Session("fromid") = _FormID.Text 
     
_webtransfer = String.Format(CultureInfo.InvariantCulture, "{0}/NNCotizacionMiInversionSeguraII.aspx?fromid={1}", ConfigurationManager.AppSettings("Url.Form"), _FormID.Text, "") 
        Else 
            currentAction = SessionTrace("60. If _formData.PlanType = 10 Then") 
If _formData.PlanType = 10 Then

            currentAction = SessionTrace("61. _formData.RiskInformation.Policy.PolicyType = 1...") 
 
            currentAction = SessionTrace("61.1. _formData.RiskInformation.Policy.PolicyType = 1...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.Policy) Then
              _formData.RiskInformation.Policy = New InMotionGIT.Policy.Entity.Contracts.Policy
          End If 

 _formData.RiskInformation.Policy.PolicyType = 1 

            currentAction = SessionTrace("62. _formData.RiskInformation.PrimaryInsured.Client.BusinessAddress = New InMotionGIT.General.Entity.Cont...") 
 
            currentAction = SessionTrace("62.1. _formData.RiskInformation.PrimaryInsured.Client.BusinessAddress = New InMotionGIT.General.Entity.Cont...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured) Then
              _formData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured.Client) Then
              _formData.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured.Client.BusinessAddress) Then
              _formData.RiskInformation.PrimaryInsured.Client.BusinessAddress = New InMotionGIT.General.Entity.Contracts.Address.Address
          End If 

 _formData.RiskInformation.PrimaryInsured.Client.BusinessAddress = New InMotionGIT.General.Entity.Contracts.Address.Address 

            currentAction = SessionTrace("63. Call 'Mi Auto aDorado - Recuperada' form with transferring parameters") 
Session(_FormID.Text) = _formData 
 Session("fromid") = _FormID.Text 
     
_webtransfer = String.Format(CultureInfo.InvariantCulture, "{0}/NNCotizacionMiAutoaDoradoII.aspx?fromid={1}", ConfigurationManager.AppSettings("Url.Form"), _FormID.Text, "") 
        Else 
            currentAction = SessionTrace("64. If _formData.PlanType = 20 Then") 
If _formData.PlanType = 20 Then

            currentAction = SessionTrace("65. _formData.RiskInformation.Policy.PolicyType = _formData.ProductMaster.ProductGene...") 
 
            currentAction = SessionTrace("65.1. _formData.RiskInformation.Policy.PolicyType = _formData.ProductMaster.ProductGene...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.Policy) Then
              _formData.RiskInformation.Policy = New InMotionGIT.Policy.Entity.Contracts.Policy
          End If 

 _formData.RiskInformation.Policy.PolicyType = _formData.ProductMaster.ProductGeneralInformation.PolicyType 

            currentAction = SessionTrace("66. Call 'Póliza Hogar Seguro' form with transferring parameters") 
Session(_FormID.Text) = _formData 
 Session("fromid") = _FormID.Text 
     
_webtransfer = String.Format(CultureInfo.InvariantCulture, "{0}/NNCotizacionPolizaHogarSeguro.aspx?fromid={1}", ConfigurationManager.AppSettings("Url.Form"), _FormID.Text, "") 
        Else 
            currentAction = SessionTrace("67. If _formData.PlanType = 50 Then") 
If _formData.PlanType = 50 Then

            currentAction = SessionTrace("68. _formData.RiskInformation.Policy.PolicyType = _formData.ProductMaster.ProductGene...") 
 
            currentAction = SessionTrace("68.1. _formData.RiskInformation.Policy.PolicyType = _formData.ProductMaster.ProductGene...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.Policy) Then
              _formData.RiskInformation.Policy = New InMotionGIT.Policy.Entity.Contracts.Policy
          End If 

 _formData.RiskInformation.Policy.PolicyType = _formData.ProductMaster.ProductGeneralInformation.PolicyType 

            currentAction = SessionTrace("69. Call 'Mi Salud Vale Oro' form with transferring parameters") 
Session(_FormID.Text) = _formData 
 Session("fromid") = _FormID.Text 
     
_webtransfer = String.Format(CultureInfo.InvariantCulture, "{0}/NNCotizacionMiSaludValeOro.aspx?fromid={1}", ConfigurationManager.AppSettings("Url.Form"), _FormID.Text, "") 
        Else 
            currentAction = SessionTrace("70. The message 'Producto en proceso ...' will displayed as 'Popup'") 
            messageAction = GetLocalResourceObject("btnCotizarFinal6_MessageActionResource").ToString() 
            ParametersToDictionary(parametersDictionary)
            messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary) 
            ShowWindowPopupMessage(messageAction) 

            End If
            End If
            End If
            End If
            End If


          
           currentAction = String.Empty
             
        
           
                         
          
          SetCurrentParameterInstance(NNCotizacionesTodosLosRamosIconosParameterInstance,"")
          
        
          If NNCotizacionesTodosLosRamosIconosParameterInstance.Behavior <> InMotionGIT.FrontOffice.Support.Enumerations.enumBehavior.None Then
             If Not String.IsNullOrEmpty(NNCotizacionesTodosLosRamosIconosParameterInstance.NotifyMessage) Then
                 ShowWindowPopupMessage(NNCotizacionesTodosLosRamosIconosParameterInstance.NotifyMessage)
             End If           
            
             NNCotizacionesTodosLosRamosIconosParameterInstance.Behavior = InMotionGIT.FrontOffice.Support.Enumerations.enumBehavior.None
          End If
        
          If Not String.IsNullOrEmpty(NNCotizacionesTodosLosRamosIconosParameterInstance.BehaviorShowControls) Then
               BehaviorShowControls(NNCotizacionesTodosLosRamosIconosParameterInstance.BehaviorShowControls)
          End If        
                  
          If Not IsNothing(_formContext.Errors) AndAlso _formContext.Errors.Count > 0 Then
				_formData.Errors.AddErrorList(_formContext.Errors)
           End If         
          
      Catch ex As Exception
           InMotionGIT.Common.Helpers.LogHandler.ErrorLog(Page.AppRelativeVirtualPath, currentAction, ex)
		   _formData.Errors.Add(New InMotionGIT.Common.Contracts.Errors.Error With {.Message = currentAction & " " & ex.Message, .Severity = InMotionGIT.Common.Contracts.Errors.Enumerations.EnumSeverity.Error})

           
           If Request.QueryString("debug").IsNotEmpty Then
               FormMessageLabel.Text = InMotionGIT.Common.Helpers.ExceptionHandlers.TraceInnerExceptionMessage(ex, True)
               FormMessageLabel.ForeColor = Drawing.Color.Black
               FormMessageLabel.Font.Bold = True
               MessageTable.Visible = True
           End If           
           
      Finally
            If _formData.Errors.Count > 0 Then
               SetErrors(_formData.Errors)
            End If
            
             ClosePopupWindow()      
                
           If  _formData.Errors.Count = 0 AndAlso Not String.IsNullOrEmpty(_webTransfer) Then
               If Page.IsCallback Then
                  DevExpress.Web.ASPxClasses.ASPxWebControl.RedirectOnCallback(_webTransfer)
               Else
                   Response.ClearHeaders()        
                   Response.ClearContent()        
                   Response.Redirect(_webTransfer)
               End If          
           End If
		   NNCotizacionesTodosLosRamosIconosUpdatePanel.Update
      End Try
      
    End Sub
Protected Sub button9_Click(sender As Object, e As EventArgs)  
        Dim NNCotizacionesTodosLosRamosIconosParameterInstance As NNCotizacionesTodosLosRamosIconosParameter = Nothing
        Dim _formContext As New InMotionGIT.Common.Contracts.Context(LanguageHelper.CurrentCultureToLanguage, formData.InternalId) With {.UserId = Session("UserId"), .UserCode = Session("nUsercode"), .SecuritySchemeCode = Session("sSche_code"), .AccessToken = Session("AccessToken")}
        Dim currentAction As String = SessionTrace("button9_Click")
        Dim parametersDictionary As Dictionary(Of String, Object) = Nothing  
        
        popupNotifyMessage.ShowOnPageLoad = false
        
        Try 
            Dim messageAction As String = String.Empty             
            Dim lastURL As String = String.Empty
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean  = False             
            

        
           
        
           GetCurrentParameterInstance(NNCotizacionesTodosLosRamosIconosParameterInstance, True)
         
           ParametersToDictionary(parametersDictionary)  
        
                       currentAction = SessionTrace("1. zone7.Visible = true") 
            currentAction = SessionTrace("1.1. zone7.Visible = true...")
BehaviorShowControls("zone7,Visible")

            currentAction = SessionTrace("2. ContactoMailTelefonoEnWidget.zone0Contacto.Visible = true") 
            currentAction = SessionTrace("2.1. ContactoMailTelefonoEnWidget.zone0Contacto.Visible = true...")
ContactoMailTelefonoEnWidget.BehaviorShowControls("zone0Contacto,Visible")



          
           currentAction = String.Empty
             
        
           
                         
          
          SetCurrentParameterInstance(NNCotizacionesTodosLosRamosIconosParameterInstance,"")
          
        
          If NNCotizacionesTodosLosRamosIconosParameterInstance.Behavior <> InMotionGIT.FrontOffice.Support.Enumerations.enumBehavior.None Then
             If Not String.IsNullOrEmpty(NNCotizacionesTodosLosRamosIconosParameterInstance.NotifyMessage) Then
                 ShowWindowPopupMessage(NNCotizacionesTodosLosRamosIconosParameterInstance.NotifyMessage)
             End If           
            
             NNCotizacionesTodosLosRamosIconosParameterInstance.Behavior = InMotionGIT.FrontOffice.Support.Enumerations.enumBehavior.None
          End If
        
          If Not String.IsNullOrEmpty(NNCotizacionesTodosLosRamosIconosParameterInstance.BehaviorShowControls) Then
               BehaviorShowControls(NNCotizacionesTodosLosRamosIconosParameterInstance.BehaviorShowControls)
          End If        
                  
          If Not IsNothing(_formContext.Errors) AndAlso _formContext.Errors.Count > 0 Then
				_formData.Errors.AddErrorList(_formContext.Errors)
           End If         
          
      Catch ex As Exception
           InMotionGIT.Common.Helpers.LogHandler.ErrorLog(Page.AppRelativeVirtualPath, currentAction, ex)
		   _formData.Errors.Add(New InMotionGIT.Common.Contracts.Errors.Error With {.Message = currentAction & " " & ex.Message, .Severity = InMotionGIT.Common.Contracts.Errors.Enumerations.EnumSeverity.Error})

           
           If Request.QueryString("debug").IsNotEmpty Then
               FormMessageLabel.Text = InMotionGIT.Common.Helpers.ExceptionHandlers.TraceInnerExceptionMessage(ex, True)
               FormMessageLabel.ForeColor = Drawing.Color.Black
               FormMessageLabel.Font.Bold = True
               MessageTable.Visible = True
           End If           
           
      Finally
            If _formData.Errors.Count > 0 Then
               SetErrors(_formData.Errors)
            End If
            
             ClosePopupWindow()      
                
           If  _formData.Errors.Count = 0 AndAlso Not String.IsNullOrEmpty(_webTransfer) Then
               If Page.IsCallback Then
                  DevExpress.Web.ASPxClasses.ASPxWebControl.RedirectOnCallback(_webTransfer)
               Else
                   Response.ClearHeaders()        
                   Response.ClearContent()        
                   Response.Redirect(_webTransfer)
               End If          
           End If
		   NNCotizacionesTodosLosRamosIconosUpdatePanel.Update
      End Try
      
    End Sub
Protected Sub button3MVVNN_Click(sender As Object, e As EventArgs)  
        Dim NNCotizacionesTodosLosRamosIconosParameterInstance As NNCotizacionesTodosLosRamosIconosParameter = Nothing
        Dim _formContext As New InMotionGIT.Common.Contracts.Context(LanguageHelper.CurrentCultureToLanguage, formData.InternalId) With {.UserId = Session("UserId"), .UserCode = Session("nUsercode"), .SecuritySchemeCode = Session("sSche_code"), .AccessToken = Session("AccessToken")}
        Dim currentAction As String = SessionTrace("button3MVVNN_Click")
        Dim parametersDictionary As Dictionary(Of String, Object) = Nothing  
        
        popupNotifyMessage.ShowOnPageLoad = false
        
        Try 
            Dim messageAction As String = String.Empty             
            Dim lastURL As String = String.Empty
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean  = False             
            

        
           
        
           GetCurrentParameterInstance(NNCotizacionesTodosLosRamosIconosParameterInstance, True)
         
           ParametersToDictionary(parametersDictionary)  
        
                       currentAction = SessionTrace("1. image9.Visible = true, btnCotizarFinal.Visible = true") 
            currentAction = SessionTrace("1.1. image9.Visible = true...")
BehaviorShowControls("image9,Visible")
            currentAction = SessionTrace("1.2. btnCotizarFinal.Visible = true...")
BehaviorShowControls("btnCotizarFinal,Visible")

            currentAction = SessionTrace("2. zone2daParte.Visible = false, zone1raParte.Visible = true") 
            currentAction = SessionTrace("2.1. zone2daParte.Visible = false...")
BehaviorShowControls("zone2daParte,Hidden")
            currentAction = SessionTrace("2.2. zone1raParte.Visible = true...")
BehaviorShowControls("zone1raParte,Visible")

            currentAction = SessionTrace("3. _formData.PlanType = 2...") 
 
            currentAction = SessionTrace("3.1. _formData.PlanType = 2...")

 _formData.PlanType = 2 

            currentAction = SessionTrace("4. _formData.ImagenSeleccionada = '/images/iconramos/2.png'...") 
 
            currentAction = SessionTrace("4.1. _formData.ImagenSeleccionada = '/images/iconramos/2.png'...")

 _formData.ImagenSeleccionada = "/images/iconramos/2.png" 



          
           currentAction = String.Empty
             
        
           
                         
          
          SetCurrentParameterInstance(NNCotizacionesTodosLosRamosIconosParameterInstance,"")
          
        
          If NNCotizacionesTodosLosRamosIconosParameterInstance.Behavior <> InMotionGIT.FrontOffice.Support.Enumerations.enumBehavior.None Then
             If Not String.IsNullOrEmpty(NNCotizacionesTodosLosRamosIconosParameterInstance.NotifyMessage) Then
                 ShowWindowPopupMessage(NNCotizacionesTodosLosRamosIconosParameterInstance.NotifyMessage)
             End If           
            
             NNCotizacionesTodosLosRamosIconosParameterInstance.Behavior = InMotionGIT.FrontOffice.Support.Enumerations.enumBehavior.None
          End If
        
          If Not String.IsNullOrEmpty(NNCotizacionesTodosLosRamosIconosParameterInstance.BehaviorShowControls) Then
               BehaviorShowControls(NNCotizacionesTodosLosRamosIconosParameterInstance.BehaviorShowControls)
          End If        
                  
          If Not IsNothing(_formContext.Errors) AndAlso _formContext.Errors.Count > 0 Then
				_formData.Errors.AddErrorList(_formContext.Errors)
           End If         
          
      Catch ex As Exception
           InMotionGIT.Common.Helpers.LogHandler.ErrorLog(Page.AppRelativeVirtualPath, currentAction, ex)
		   _formData.Errors.Add(New InMotionGIT.Common.Contracts.Errors.Error With {.Message = currentAction & " " & ex.Message, .Severity = InMotionGIT.Common.Contracts.Errors.Enumerations.EnumSeverity.Error})

           
           If Request.QueryString("debug").IsNotEmpty Then
               FormMessageLabel.Text = InMotionGIT.Common.Helpers.ExceptionHandlers.TraceInnerExceptionMessage(ex, True)
               FormMessageLabel.ForeColor = Drawing.Color.Black
               FormMessageLabel.Font.Bold = True
               MessageTable.Visible = True
           End If           
           
      Finally
            If _formData.Errors.Count > 0 Then
               SetErrors(_formData.Errors)
            End If
            
             ClosePopupWindow()      
                
           If  _formData.Errors.Count = 0 AndAlso Not String.IsNullOrEmpty(_webTransfer) Then
               If Page.IsCallback Then
                  DevExpress.Web.ASPxClasses.ASPxWebControl.RedirectOnCallback(_webTransfer)
               Else
                   Response.ClearHeaders()        
                   Response.ClearContent()        
                   Response.Redirect(_webTransfer)
               End If          
           End If
		   NNCotizacionesTodosLosRamosIconosUpdatePanel.Update
      End Try
      
    End Sub
Protected Sub buttonCotVI_Click(sender As Object, e As EventArgs)  
        Dim NNCotizacionesTodosLosRamosIconosParameterInstance As NNCotizacionesTodosLosRamosIconosParameter = Nothing
        Dim _formContext As New InMotionGIT.Common.Contracts.Context(LanguageHelper.CurrentCultureToLanguage, formData.InternalId) With {.UserId = Session("UserId"), .UserCode = Session("nUsercode"), .SecuritySchemeCode = Session("sSche_code"), .AccessToken = Session("AccessToken")}
        Dim currentAction As String = SessionTrace("buttonCotVI_Click")
        Dim parametersDictionary As Dictionary(Of String, Object) = Nothing  
        
        popupNotifyMessage.ShowOnPageLoad = false
        
        Try 
            Dim messageAction As String = String.Empty             
            Dim lastURL As String = String.Empty
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean  = False             
            

        
           
        
           GetCurrentParameterInstance(NNCotizacionesTodosLosRamosIconosParameterInstance, True)
         
           ParametersToDictionary(parametersDictionary)  
        
                       currentAction = SessionTrace("1. _formData.PlanType = 3...") 
 
            currentAction = SessionTrace("1.1. _formData.PlanType = 3...")

 _formData.PlanType = 3 

            currentAction = SessionTrace("2. _formData.ImagenSeleccionada = '/images/iconramos/family-care.png'...") 
 
            currentAction = SessionTrace("2.1. _formData.ImagenSeleccionada = '/images/iconramos/family-care.png'...")

 _formData.ImagenSeleccionada = "/images/iconramos/family-care.png" 

            currentAction = SessionTrace("3. image9.Visible = true, btnCotizarFinal.Visible = true") 
            currentAction = SessionTrace("3.1. image9.Visible = true...")
BehaviorShowControls("image9,Visible")
            currentAction = SessionTrace("3.2. btnCotizarFinal.Visible = true...")
BehaviorShowControls("btnCotizarFinal,Visible")

            currentAction = SessionTrace("4. zone2daParte.Visible = false, zone1raParte.Visible = true") 
            currentAction = SessionTrace("4.1. zone2daParte.Visible = false...")
BehaviorShowControls("zone2daParte,Hidden")
            currentAction = SessionTrace("4.2. zone1raParte.Visible = true...")
BehaviorShowControls("zone1raParte,Visible")



          
           currentAction = String.Empty
             
        
           
                         
          
          SetCurrentParameterInstance(NNCotizacionesTodosLosRamosIconosParameterInstance,"")
          
        
          If NNCotizacionesTodosLosRamosIconosParameterInstance.Behavior <> InMotionGIT.FrontOffice.Support.Enumerations.enumBehavior.None Then
             If Not String.IsNullOrEmpty(NNCotizacionesTodosLosRamosIconosParameterInstance.NotifyMessage) Then
                 ShowWindowPopupMessage(NNCotizacionesTodosLosRamosIconosParameterInstance.NotifyMessage)
             End If           
            
             NNCotizacionesTodosLosRamosIconosParameterInstance.Behavior = InMotionGIT.FrontOffice.Support.Enumerations.enumBehavior.None
          End If
        
          If Not String.IsNullOrEmpty(NNCotizacionesTodosLosRamosIconosParameterInstance.BehaviorShowControls) Then
               BehaviorShowControls(NNCotizacionesTodosLosRamosIconosParameterInstance.BehaviorShowControls)
          End If        
                  
          If Not IsNothing(_formContext.Errors) AndAlso _formContext.Errors.Count > 0 Then
				_formData.Errors.AddErrorList(_formContext.Errors)
           End If         
          
      Catch ex As Exception
           InMotionGIT.Common.Helpers.LogHandler.ErrorLog(Page.AppRelativeVirtualPath, currentAction, ex)
		   _formData.Errors.Add(New InMotionGIT.Common.Contracts.Errors.Error With {.Message = currentAction & " " & ex.Message, .Severity = InMotionGIT.Common.Contracts.Errors.Enumerations.EnumSeverity.Error})

           
           If Request.QueryString("debug").IsNotEmpty Then
               FormMessageLabel.Text = InMotionGIT.Common.Helpers.ExceptionHandlers.TraceInnerExceptionMessage(ex, True)
               FormMessageLabel.ForeColor = Drawing.Color.Black
               FormMessageLabel.Font.Bold = True
               MessageTable.Visible = True
           End If           
           
      Finally
            If _formData.Errors.Count > 0 Then
               SetErrors(_formData.Errors)
            End If
            
             ClosePopupWindow()      
                
           If  _formData.Errors.Count = 0 AndAlso Not String.IsNullOrEmpty(_webTransfer) Then
               If Page.IsCallback Then
                  DevExpress.Web.ASPxClasses.ASPxWebControl.RedirectOnCallback(_webTransfer)
               Else
                   Response.ClearHeaders()        
                   Response.ClearContent()        
                   Response.Redirect(_webTransfer)
               End If          
           End If
		   NNCotizacionesTodosLosRamosIconosUpdatePanel.Update
      End Try
      
    End Sub
Protected Sub CotizaMAD_Click(sender As Object, e As EventArgs)  
        Dim NNCotizacionesTodosLosRamosIconosParameterInstance As NNCotizacionesTodosLosRamosIconosParameter = Nothing
        Dim _formContext As New InMotionGIT.Common.Contracts.Context(LanguageHelper.CurrentCultureToLanguage, formData.InternalId) With {.UserId = Session("UserId"), .UserCode = Session("nUsercode"), .SecuritySchemeCode = Session("sSche_code"), .AccessToken = Session("AccessToken")}
        Dim currentAction As String = SessionTrace("CotizaMAD_Click")
        Dim parametersDictionary As Dictionary(Of String, Object) = Nothing  
        
        popupNotifyMessage.ShowOnPageLoad = false
        
        Try 
            Dim messageAction As String = String.Empty             
            Dim lastURL As String = String.Empty
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean  = False             
            

        
           
        
           GetCurrentParameterInstance(NNCotizacionesTodosLosRamosIconosParameterInstance, True)
         
           ParametersToDictionary(parametersDictionary)  
        
                       currentAction = SessionTrace("1. _formData.PlanType = 10...") 
 
            currentAction = SessionTrace("1.1. _formData.PlanType = 10...")

 _formData.PlanType = 10 

            currentAction = SessionTrace("2. _formData.ImagenSeleccionada = '/images/iconramos/6.png'...") 
 
            currentAction = SessionTrace("2.1. _formData.ImagenSeleccionada = '/images/iconramos/6.png'...")

 _formData.ImagenSeleccionada = "/images/iconramos/6.png" 

            currentAction = SessionTrace("3. image9.Visible = true, btnCotizarFinal.Visible = true") 
            currentAction = SessionTrace("3.1. image9.Visible = true...")
BehaviorShowControls("image9,Visible")
            currentAction = SessionTrace("3.2. btnCotizarFinal.Visible = true...")
BehaviorShowControls("btnCotizarFinal,Visible")

            currentAction = SessionTrace("4. zone2daParte.Visible = false, zone1raParte.Visible = true") 
            currentAction = SessionTrace("4.1. zone2daParte.Visible = false...")
BehaviorShowControls("zone2daParte,Hidden")
            currentAction = SessionTrace("4.2. zone1raParte.Visible = true...")
BehaviorShowControls("zone1raParte,Visible")



          
           currentAction = String.Empty
             
        
           
                         
          
          SetCurrentParameterInstance(NNCotizacionesTodosLosRamosIconosParameterInstance,"")
          
        
          If NNCotizacionesTodosLosRamosIconosParameterInstance.Behavior <> InMotionGIT.FrontOffice.Support.Enumerations.enumBehavior.None Then
             If Not String.IsNullOrEmpty(NNCotizacionesTodosLosRamosIconosParameterInstance.NotifyMessage) Then
                 ShowWindowPopupMessage(NNCotizacionesTodosLosRamosIconosParameterInstance.NotifyMessage)
             End If           
            
             NNCotizacionesTodosLosRamosIconosParameterInstance.Behavior = InMotionGIT.FrontOffice.Support.Enumerations.enumBehavior.None
          End If
        
          If Not String.IsNullOrEmpty(NNCotizacionesTodosLosRamosIconosParameterInstance.BehaviorShowControls) Then
               BehaviorShowControls(NNCotizacionesTodosLosRamosIconosParameterInstance.BehaviorShowControls)
          End If        
                  
          If Not IsNothing(_formContext.Errors) AndAlso _formContext.Errors.Count > 0 Then
				_formData.Errors.AddErrorList(_formContext.Errors)
           End If         
          
      Catch ex As Exception
           InMotionGIT.Common.Helpers.LogHandler.ErrorLog(Page.AppRelativeVirtualPath, currentAction, ex)
		   _formData.Errors.Add(New InMotionGIT.Common.Contracts.Errors.Error With {.Message = currentAction & " " & ex.Message, .Severity = InMotionGIT.Common.Contracts.Errors.Enumerations.EnumSeverity.Error})

           
           If Request.QueryString("debug").IsNotEmpty Then
               FormMessageLabel.Text = InMotionGIT.Common.Helpers.ExceptionHandlers.TraceInnerExceptionMessage(ex, True)
               FormMessageLabel.ForeColor = Drawing.Color.Black
               FormMessageLabel.Font.Bold = True
               MessageTable.Visible = True
           End If           
           
      Finally
            If _formData.Errors.Count > 0 Then
               SetErrors(_formData.Errors)
            End If
            
             ClosePopupWindow()      
                
           If  _formData.Errors.Count = 0 AndAlso Not String.IsNullOrEmpty(_webTransfer) Then
               If Page.IsCallback Then
                  DevExpress.Web.ASPxClasses.ASPxWebControl.RedirectOnCallback(_webTransfer)
               Else
                   Response.ClearHeaders()        
                   Response.ClearContent()        
                   Response.Redirect(_webTransfer)
               End If          
           End If
		   NNCotizacionesTodosLosRamosIconosUpdatePanel.Update
      End Try
      
    End Sub
Protected Sub CotizaHV_Click(sender As Object, e As EventArgs)  
        Dim NNCotizacionesTodosLosRamosIconosParameterInstance As NNCotizacionesTodosLosRamosIconosParameter = Nothing
        Dim _formContext As New InMotionGIT.Common.Contracts.Context(LanguageHelper.CurrentCultureToLanguage, formData.InternalId) With {.UserId = Session("UserId"), .UserCode = Session("nUsercode"), .SecuritySchemeCode = Session("sSche_code"), .AccessToken = Session("AccessToken")}
        Dim currentAction As String = SessionTrace("CotizaHV_Click")
        Dim parametersDictionary As Dictionary(Of String, Object) = Nothing  
        
        popupNotifyMessage.ShowOnPageLoad = false
        
        Try 
            Dim messageAction As String = String.Empty             
            Dim lastURL As String = String.Empty
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean  = False             
            

        
           
        
           GetCurrentParameterInstance(NNCotizacionesTodosLosRamosIconosParameterInstance, True)
         
           ParametersToDictionary(parametersDictionary)  
        
                       currentAction = SessionTrace("1. _formData.PlanType = 20...") 
 
            currentAction = SessionTrace("1.1. _formData.PlanType = 20...")

 _formData.PlanType = 20 

            currentAction = SessionTrace("2. _formData.ImagenSeleccionada = '/images/iconramos/9.png'...") 
 
            currentAction = SessionTrace("2.1. _formData.ImagenSeleccionada = '/images/iconramos/9.png'...")

 _formData.ImagenSeleccionada = "/images/iconramos/9.png" 

            currentAction = SessionTrace("3. image9.Visible = true, btnCotizarFinal.Visible = true") 
            currentAction = SessionTrace("3.1. image9.Visible = true...")
BehaviorShowControls("image9,Visible")
            currentAction = SessionTrace("3.2. btnCotizarFinal.Visible = true...")
BehaviorShowControls("btnCotizarFinal,Visible")

            currentAction = SessionTrace("4. zone2daParte.Visible = true, zone1raParte.Visible = false") 
            currentAction = SessionTrace("4.1. zone2daParte.Visible = true...")
BehaviorShowControls("zone2daParte,Visible")
            currentAction = SessionTrace("4.2. zone1raParte.Visible = false...")
BehaviorShowControls("zone1raParte,Hidden")



          
           currentAction = String.Empty
             
        
           
                         
          
          SetCurrentParameterInstance(NNCotizacionesTodosLosRamosIconosParameterInstance,"")
          
        
          If NNCotizacionesTodosLosRamosIconosParameterInstance.Behavior <> InMotionGIT.FrontOffice.Support.Enumerations.enumBehavior.None Then
             If Not String.IsNullOrEmpty(NNCotizacionesTodosLosRamosIconosParameterInstance.NotifyMessage) Then
                 ShowWindowPopupMessage(NNCotizacionesTodosLosRamosIconosParameterInstance.NotifyMessage)
             End If           
            
             NNCotizacionesTodosLosRamosIconosParameterInstance.Behavior = InMotionGIT.FrontOffice.Support.Enumerations.enumBehavior.None
          End If
        
          If Not String.IsNullOrEmpty(NNCotizacionesTodosLosRamosIconosParameterInstance.BehaviorShowControls) Then
               BehaviorShowControls(NNCotizacionesTodosLosRamosIconosParameterInstance.BehaviorShowControls)
          End If        
                  
          If Not IsNothing(_formContext.Errors) AndAlso _formContext.Errors.Count > 0 Then
				_formData.Errors.AddErrorList(_formContext.Errors)
           End If         
          
      Catch ex As Exception
           InMotionGIT.Common.Helpers.LogHandler.ErrorLog(Page.AppRelativeVirtualPath, currentAction, ex)
		   _formData.Errors.Add(New InMotionGIT.Common.Contracts.Errors.Error With {.Message = currentAction & " " & ex.Message, .Severity = InMotionGIT.Common.Contracts.Errors.Enumerations.EnumSeverity.Error})

           
           If Request.QueryString("debug").IsNotEmpty Then
               FormMessageLabel.Text = InMotionGIT.Common.Helpers.ExceptionHandlers.TraceInnerExceptionMessage(ex, True)
               FormMessageLabel.ForeColor = Drawing.Color.Black
               FormMessageLabel.Font.Bold = True
               MessageTable.Visible = True
           End If           
           
      Finally
            If _formData.Errors.Count > 0 Then
               SetErrors(_formData.Errors)
            End If
            
             ClosePopupWindow()      
                
           If  _formData.Errors.Count = 0 AndAlso Not String.IsNullOrEmpty(_webTransfer) Then
               If Page.IsCallback Then
                  DevExpress.Web.ASPxClasses.ASPxWebControl.RedirectOnCallback(_webTransfer)
               Else
                   Response.ClearHeaders()        
                   Response.ClearContent()        
                   Response.Redirect(_webTransfer)
               End If          
           End If
		   NNCotizacionesTodosLosRamosIconosUpdatePanel.Update
      End Try
      
    End Sub
Protected Sub CotizaHV2_Click(sender As Object, e As EventArgs)  
        Dim NNCotizacionesTodosLosRamosIconosParameterInstance As NNCotizacionesTodosLosRamosIconosParameter = Nothing
        Dim _formContext As New InMotionGIT.Common.Contracts.Context(LanguageHelper.CurrentCultureToLanguage, formData.InternalId) With {.UserId = Session("UserId"), .UserCode = Session("nUsercode"), .SecuritySchemeCode = Session("sSche_code"), .AccessToken = Session("AccessToken")}
        Dim currentAction As String = SessionTrace("CotizaHV2_Click")
        Dim parametersDictionary As Dictionary(Of String, Object) = Nothing  
        
        popupNotifyMessage.ShowOnPageLoad = false
        
        Try 
            Dim messageAction As String = String.Empty             
            Dim lastURL As String = String.Empty
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean  = False             
            

        
           
        
           GetCurrentParameterInstance(NNCotizacionesTodosLosRamosIconosParameterInstance, True)
         
           ParametersToDictionary(parametersDictionary)  
        
                       currentAction = SessionTrace("1. _formData.PlanType = 40...") 
 
            currentAction = SessionTrace("1.1. _formData.PlanType = 40...")

 _formData.PlanType = 40 

            currentAction = SessionTrace("2. _formData.ImagenSeleccionada = '/images/iconramos/Crédito.png'...") 
 
            currentAction = SessionTrace("2.1. _formData.ImagenSeleccionada = '/images/iconramos/Crédito.png'...")

 _formData.ImagenSeleccionada = "/images/iconramos/Crédito.png" 

            currentAction = SessionTrace("3. image9.Visible = true, btnCotizarFinal.Visible = true") 
            currentAction = SessionTrace("3.1. image9.Visible = true...")
BehaviorShowControls("image9,Visible")
            currentAction = SessionTrace("3.2. btnCotizarFinal.Visible = true...")
BehaviorShowControls("btnCotizarFinal,Visible")

            currentAction = SessionTrace("4. zone2daParte.Visible = true, zone1raParte.Visible = false") 
            currentAction = SessionTrace("4.1. zone2daParte.Visible = true...")
BehaviorShowControls("zone2daParte,Visible")
            currentAction = SessionTrace("4.2. zone1raParte.Visible = false...")
BehaviorShowControls("zone1raParte,Hidden")



          
           currentAction = String.Empty
             
        
           
                         
          
          SetCurrentParameterInstance(NNCotizacionesTodosLosRamosIconosParameterInstance,"")
          
        
          If NNCotizacionesTodosLosRamosIconosParameterInstance.Behavior <> InMotionGIT.FrontOffice.Support.Enumerations.enumBehavior.None Then
             If Not String.IsNullOrEmpty(NNCotizacionesTodosLosRamosIconosParameterInstance.NotifyMessage) Then
                 ShowWindowPopupMessage(NNCotizacionesTodosLosRamosIconosParameterInstance.NotifyMessage)
             End If           
            
             NNCotizacionesTodosLosRamosIconosParameterInstance.Behavior = InMotionGIT.FrontOffice.Support.Enumerations.enumBehavior.None
          End If
        
          If Not String.IsNullOrEmpty(NNCotizacionesTodosLosRamosIconosParameterInstance.BehaviorShowControls) Then
               BehaviorShowControls(NNCotizacionesTodosLosRamosIconosParameterInstance.BehaviorShowControls)
          End If        
                  
          If Not IsNothing(_formContext.Errors) AndAlso _formContext.Errors.Count > 0 Then
				_formData.Errors.AddErrorList(_formContext.Errors)
           End If         
          
      Catch ex As Exception
           InMotionGIT.Common.Helpers.LogHandler.ErrorLog(Page.AppRelativeVirtualPath, currentAction, ex)
		   _formData.Errors.Add(New InMotionGIT.Common.Contracts.Errors.Error With {.Message = currentAction & " " & ex.Message, .Severity = InMotionGIT.Common.Contracts.Errors.Enumerations.EnumSeverity.Error})

           
           If Request.QueryString("debug").IsNotEmpty Then
               FormMessageLabel.Text = InMotionGIT.Common.Helpers.ExceptionHandlers.TraceInnerExceptionMessage(ex, True)
               FormMessageLabel.ForeColor = Drawing.Color.Black
               FormMessageLabel.Font.Bold = True
               MessageTable.Visible = True
           End If           
           
      Finally
            If _formData.Errors.Count > 0 Then
               SetErrors(_formData.Errors)
            End If
            
             ClosePopupWindow()      
                
           If  _formData.Errors.Count = 0 AndAlso Not String.IsNullOrEmpty(_webTransfer) Then
               If Page.IsCallback Then
                  DevExpress.Web.ASPxClasses.ASPxWebControl.RedirectOnCallback(_webTransfer)
               Else
                   Response.ClearHeaders()        
                   Response.ClearContent()        
                   Response.Redirect(_webTransfer)
               End If          
           End If
		   NNCotizacionesTodosLosRamosIconosUpdatePanel.Update
      End Try
      
    End Sub
Protected Sub button13_Click(sender As Object, e As EventArgs)  
        Dim NNCotizacionesTodosLosRamosIconosParameterInstance As NNCotizacionesTodosLosRamosIconosParameter = Nothing
        Dim _formContext As New InMotionGIT.Common.Contracts.Context(LanguageHelper.CurrentCultureToLanguage, formData.InternalId) With {.UserId = Session("UserId"), .UserCode = Session("nUsercode"), .SecuritySchemeCode = Session("sSche_code"), .AccessToken = Session("AccessToken")}
        Dim currentAction As String = SessionTrace("button13_Click")
        Dim parametersDictionary As Dictionary(Of String, Object) = Nothing  
        
        popupNotifyMessage.ShowOnPageLoad = false
        
        Try 
            Dim messageAction As String = String.Empty             
            Dim lastURL As String = String.Empty
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean  = False             
            

        
           
        
           GetCurrentParameterInstance(NNCotizacionesTodosLosRamosIconosParameterInstance, True)
         
           ParametersToDictionary(parametersDictionary)  
        
                       currentAction = SessionTrace("1. _formData.PlanType = 50...") 
 
            currentAction = SessionTrace("1.1. _formData.PlanType = 50...")

 _formData.PlanType = 50 

            currentAction = SessionTrace("2. _formData.ImagenSeleccionada = '/images/iconramos/5.png'...") 
 
            currentAction = SessionTrace("2.1. _formData.ImagenSeleccionada = '/images/iconramos/5.png'...")

 _formData.ImagenSeleccionada = "/images/iconramos/5.png" 

            currentAction = SessionTrace("3. image9.Visible = true, btnCotizarFinal.Visible = true") 
            currentAction = SessionTrace("3.1. image9.Visible = true...")
BehaviorShowControls("image9,Visible")
            currentAction = SessionTrace("3.2. btnCotizarFinal.Visible = true...")
BehaviorShowControls("btnCotizarFinal,Visible")

            currentAction = SessionTrace("4. zone2daParte.Visible = true, zone1raParte.Visible = false") 
            currentAction = SessionTrace("4.1. zone2daParte.Visible = true...")
BehaviorShowControls("zone2daParte,Visible")
            currentAction = SessionTrace("4.2. zone1raParte.Visible = false...")
BehaviorShowControls("zone1raParte,Hidden")



          
           currentAction = String.Empty
             
        
           
                         
          
          SetCurrentParameterInstance(NNCotizacionesTodosLosRamosIconosParameterInstance,"")
          
        
          If NNCotizacionesTodosLosRamosIconosParameterInstance.Behavior <> InMotionGIT.FrontOffice.Support.Enumerations.enumBehavior.None Then
             If Not String.IsNullOrEmpty(NNCotizacionesTodosLosRamosIconosParameterInstance.NotifyMessage) Then
                 ShowWindowPopupMessage(NNCotizacionesTodosLosRamosIconosParameterInstance.NotifyMessage)
             End If           
            
             NNCotizacionesTodosLosRamosIconosParameterInstance.Behavior = InMotionGIT.FrontOffice.Support.Enumerations.enumBehavior.None
          End If
        
          If Not String.IsNullOrEmpty(NNCotizacionesTodosLosRamosIconosParameterInstance.BehaviorShowControls) Then
               BehaviorShowControls(NNCotizacionesTodosLosRamosIconosParameterInstance.BehaviorShowControls)
          End If        
                  
          If Not IsNothing(_formContext.Errors) AndAlso _formContext.Errors.Count > 0 Then
				_formData.Errors.AddErrorList(_formContext.Errors)
           End If         
          
      Catch ex As Exception
           InMotionGIT.Common.Helpers.LogHandler.ErrorLog(Page.AppRelativeVirtualPath, currentAction, ex)
		   _formData.Errors.Add(New InMotionGIT.Common.Contracts.Errors.Error With {.Message = currentAction & " " & ex.Message, .Severity = InMotionGIT.Common.Contracts.Errors.Enumerations.EnumSeverity.Error})

           
           If Request.QueryString("debug").IsNotEmpty Then
               FormMessageLabel.Text = InMotionGIT.Common.Helpers.ExceptionHandlers.TraceInnerExceptionMessage(ex, True)
               FormMessageLabel.ForeColor = Drawing.Color.Black
               FormMessageLabel.Font.Bold = True
               MessageTable.Visible = True
           End If           
           
      Finally
            If _formData.Errors.Count > 0 Then
               SetErrors(_formData.Errors)
            End If
            
             ClosePopupWindow()      
                
           If  _formData.Errors.Count = 0 AndAlso Not String.IsNullOrEmpty(_webTransfer) Then
               If Page.IsCallback Then
                  DevExpress.Web.ASPxClasses.ASPxWebControl.RedirectOnCallback(_webTransfer)
               Else
                   Response.ClearHeaders()        
                   Response.ClearContent()        
                   Response.Redirect(_webTransfer)
               End If          
           End If
		   NNCotizacionesTodosLosRamosIconosUpdatePanel.Update
      End Try
      
    End Sub


#End Region

#Region "UserControls Events Handles"

    



#End Region

#Region "Form Manager"

    Private Sub VerifySecurityLevel()








    End Sub

      

    Private Sub GetCurrentParameterInstance(ByRef NNCotizacionesTodosLosRamosIconosParameterInstance As NNCotizacionesTodosLosRamosIconosParameter, force As Boolean)
        If _loadcompleted Or force Then
            If Not _CurrentParameterInstance Then

                NNCotizacionesTodosLosRamosIconosParameterInstance = FormData

                If Page.IsPostBack Then
                    MapPageToClass(NNCotizacionesTodosLosRamosIconosParameterInstance)
                End If

                _CurrentParameterInstance = True
            Else
                NNCotizacionesTodosLosRamosIconosParameterInstance = _formData
            End If
        Else
            NNCotizacionesTodosLosRamosIconosParameterInstance = Nothing
        End If
    End Sub

    Protected Sub SetCurrentParameterInstance(ByRef NNCotizacionesTodosLosRamosIconosParameterInstance As NNCotizacionesTodosLosRamosIconosParameter, calledBy As String)
        FormData = NNCotizacionesTodosLosRamosIconosParameterInstance
        MapClassToPage(NNCotizacionesTodosLosRamosIconosParameterInstance,calledBy)
    End Sub

    Protected Sub SetErrors(errors As InMotionGIT.Common.Contracts.Errors.ErrorCollection)
        Dim errorList As InMotionGIT.Common.Contracts.Errors.ErrorCollection = ViewState("Errors")

        If IsNothing(errorList) Then
            errorList = New InMotionGIT.Common.Contracts.Errors.ErrorCollection
        End If

        errorList = errors

        ViewState("Errors") = errorList
        ShowErrors()
    End Sub

    Public Sub ShowErrors()
        If Not IsNothing(ViewState("Errors")) Then
            Dim errorList As InMotionGIT.Common.Contracts.Errors.ErrorCollection = ViewState("Errors")

            Dim queryOut = From lst In errorList Select lst Order By lst.ErrorId

            ErrorsGridView.Visible = True
            ErrorsGridView.DataSource = queryOut.ToList
            ErrorsGridView.DataBind()
            UpdatePanelErrors.Update()
        End If
    End Sub
   
    Private Sub ShowWindowPopupMessage(message As String)
        NotifyMessageLabel.Text = message
        popupNotifyMessage.ShowOnPageLoad = True
    End Sub

    Private Sub ClosePopupWindow()
        popControl.Windows(0).ShowOnPageLoad = False
    End Sub

    Private Sub GetTransferParameters()
        Dim fromDocumentCache As Object = Nothing

        If Not String.IsNullOrEmpty(Request.QueryString("fromid")) Then
            fromDocumentCache = Session( Request.QueryString("fromid"))
            Session.Remove(Request.QueryString("fromid"))
            
        Else
            fromDocumentCache = Session(Session("fromid"))
            Session.Remove(Session("fromid"))
            Session.Remove("fromid")   
        End If
        
        If Not IsNothing(fromDocumentCache) Then
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("RiskInformation", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("LifeProductSelected", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UserIsClient", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("IsProducer", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClientExistInDB", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("StatusRun", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("IsEmployee", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("IsAnonymous", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProductMaster", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PlanType", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Currency", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Client", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("IsClient", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProducerClientID", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProducerCode", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PaymentMethod", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProductMasterDescription", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("InvestmentFundRelatedToProductCollection", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClienteConectado", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UsercodeBO", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UsercodeFASI", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PolicyLocal", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ImagenSeleccionada", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Name", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("eMail", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("eMailConfirm", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("MessageText", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PhoneNumber", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("FormaContactenos", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClienteProductor", fromDocumentCache, _formData)
            
        End If
    End Sub
    
    

    Private Sub SetDefaultValuesFromQueryString()

        If Request.Form("LifeProductSelected").IsNotEmpty Then
                FormData.LifeProductSelected = Request.Form("LifeProductSelected") 

ElseIf Request.QueryString("LifeProductSelected").IsNotEmpty Then
                FormData.LifeProductSelected = Request.QueryString("LifeProductSelected") 
End If 

If Request.Form("UserIsClient").IsNotEmpty Then
                FormData.UserIsClient = Request.Form("UserIsClient") 

ElseIf Request.QueryString("UserIsClient").IsNotEmpty Then
                FormData.UserIsClient = Request.QueryString("UserIsClient") 
End If 

If Request.Form("IsProducer").IsNotEmpty Then
                FormData.IsProducer = Request.Form("IsProducer") 

ElseIf Request.QueryString("IsProducer").IsNotEmpty Then
                FormData.IsProducer = Request.QueryString("IsProducer") 
End If 

If Request.Form("ClientExistInDB").IsNotEmpty Then
                FormData.ClientExistInDB = Request.Form("ClientExistInDB") 

ElseIf Request.QueryString("ClientExistInDB").IsNotEmpty Then
                FormData.ClientExistInDB = Request.QueryString("ClientExistInDB") 
End If 

If Request.Form("StatusRun").IsNotEmpty Then
                FormData.StatusRun = Request.Form("StatusRun") 

ElseIf Request.QueryString("StatusRun").IsNotEmpty Then
                FormData.StatusRun = Request.QueryString("StatusRun") 
End If 

If Request.Form("IsEmployee").IsNotEmpty Then
                FormData.IsEmployee = Request.Form("IsEmployee") 

ElseIf Request.QueryString("IsEmployee").IsNotEmpty Then
                FormData.IsEmployee = Request.QueryString("IsEmployee") 
End If 

If Request.Form("IsAnonymous").IsNotEmpty Then
                FormData.IsAnonymous = Request.Form("IsAnonymous") 

ElseIf Request.QueryString("IsAnonymous").IsNotEmpty Then
                FormData.IsAnonymous = Request.QueryString("IsAnonymous") 
End If 

If Request.Form("PlanType").IsNotEmpty Then
                FormData.PlanType = Request.Form("PlanType") 

ElseIf Request.QueryString("PlanType").IsNotEmpty Then
                FormData.PlanType = Request.QueryString("PlanType") 
End If 

If Request.Form("Currency").IsNotEmpty Then
                FormData.Currency = Request.Form("Currency") 

ElseIf Request.QueryString("Currency").IsNotEmpty Then
                FormData.Currency = Request.QueryString("Currency") 
End If 

If Request.Form("IsClient").IsNotEmpty Then
                FormData.IsClient = Request.Form("IsClient") 

ElseIf Request.QueryString("IsClient").IsNotEmpty Then
                FormData.IsClient = Request.QueryString("IsClient") 
End If 

If Request.Form("ProducerClientID").IsNotEmpty Then
                FormData.ProducerClientID = Request.Form("ProducerClientID") 

ElseIf Request.QueryString("ProducerClientID").IsNotEmpty Then
                FormData.ProducerClientID = Request.QueryString("ProducerClientID") 
End If 

If Request.Form("ProducerCode").IsNotEmpty Then
                FormData.ProducerCode = Request.Form("ProducerCode") 

ElseIf Request.QueryString("ProducerCode").IsNotEmpty Then
                FormData.ProducerCode = Request.QueryString("ProducerCode") 
End If 

If Request.Form("PaymentMethod").IsNotEmpty Then
                FormData.PaymentMethod = Request.Form("PaymentMethod") 

ElseIf Request.QueryString("PaymentMethod").IsNotEmpty Then
                FormData.PaymentMethod = Request.QueryString("PaymentMethod") 
End If 

If Request.Form("ProductMasterDescription").IsNotEmpty Then
                FormData.ProductMasterDescription = Request.Form("ProductMasterDescription") 

ElseIf Request.QueryString("ProductMasterDescription").IsNotEmpty Then
                FormData.ProductMasterDescription = Request.QueryString("ProductMasterDescription") 
End If 

If Request.Form("ClienteConectado").IsNotEmpty Then
                FormData.ClienteConectado = Request.Form("ClienteConectado") 

ElseIf Request.QueryString("ClienteConectado").IsNotEmpty Then
                FormData.ClienteConectado = Request.QueryString("ClienteConectado") 
End If 

If Request.Form("UsercodeBO").IsNotEmpty Then
                FormData.UsercodeBO = Request.Form("UsercodeBO") 

ElseIf Request.QueryString("UsercodeBO").IsNotEmpty Then
                FormData.UsercodeBO = Request.QueryString("UsercodeBO") 
End If 

If Request.Form("UsercodeFASI").IsNotEmpty Then
                FormData.UsercodeFASI = Request.Form("UsercodeFASI") 

ElseIf Request.QueryString("UsercodeFASI").IsNotEmpty Then
                FormData.UsercodeFASI = Request.QueryString("UsercodeFASI") 
End If 

If Request.Form("ImagenSeleccionada").IsNotEmpty Then
                FormData.ImagenSeleccionada = Request.Form("ImagenSeleccionada") 

ElseIf Request.QueryString("ImagenSeleccionada").IsNotEmpty Then
                FormData.ImagenSeleccionada = Request.QueryString("ImagenSeleccionada") 
End If 

If Request.Form("Name").IsNotEmpty Then
                FormData.Name = Request.Form("Name") 

ElseIf Request.QueryString("Name").IsNotEmpty Then
                FormData.Name = Request.QueryString("Name") 
End If 

If Request.Form("eMail").IsNotEmpty Then
                FormData.eMail = Request.Form("eMail") 

ElseIf Request.QueryString("eMail").IsNotEmpty Then
                FormData.eMail = Request.QueryString("eMail") 
End If 

If Request.Form("eMailConfirm").IsNotEmpty Then
                FormData.eMailConfirm = Request.Form("eMailConfirm") 

ElseIf Request.QueryString("eMailConfirm").IsNotEmpty Then
                FormData.eMailConfirm = Request.QueryString("eMailConfirm") 
End If 

If Request.Form("MessageText").IsNotEmpty Then
                FormData.MessageText = Request.Form("MessageText") 

ElseIf Request.QueryString("MessageText").IsNotEmpty Then
                FormData.MessageText = Request.QueryString("MessageText") 
End If 

If Request.Form("PhoneNumber").IsNotEmpty Then
                FormData.PhoneNumber = Request.Form("PhoneNumber") 

ElseIf Request.QueryString("PhoneNumber").IsNotEmpty Then
                FormData.PhoneNumber = Request.QueryString("PhoneNumber") 
End If 

If Request.Form("FormaContactenos").IsNotEmpty Then
                FormData.FormaContactenos = Request.Form("FormaContactenos") 

ElseIf Request.QueryString("FormaContactenos").IsNotEmpty Then
                FormData.FormaContactenos = Request.QueryString("FormaContactenos") 
End If 

If Request.Form("ClienteProductor").IsNotEmpty Then
                FormData.ClienteProductor = Request.Form("ClienteProductor") 

ElseIf Request.QueryString("ClienteProductor").IsNotEmpty Then
                FormData.ClienteProductor = Request.QueryString("ClienteProductor") 
End If 


    End Sub
    
    Private Sub BehaviorControls(controlItem As Control, isEnable As Boolean)
        InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValueSimple("Enabled", controlItem, isEnable)           
    End Sub
    
    Private Sub SetReadOnlyControls()
    
        BehaviorControls(ClientID, False)
        BehaviorControls(ClienteProductor, False)
        BehaviorControls(btnCotizarFinal, False)
        BehaviorControls(button9, False)
        BehaviorControls(button12, False)
        BehaviorControls(button3MVVNN, False)
        BehaviorControls(buttonCotVI, False)
        BehaviorControls(CotizaMAD, False)
        BehaviorControls(button3, False)
        BehaviorControls(button5, False)
        BehaviorControls(CotizaHV, False)
        BehaviorControls(CotizaHV2, False)
        BehaviorControls(button13, False)
        BehaviorControls(button14, False)
    
    End Sub
     
#End Region

#Region "Actions Data Methods"

    Private Function SessionTrace(message As String) As String

        If Not IsNothing(Session("Form.Track")) AndAlso Session("Form.Track").ToString.ToLower = "true" Then
            Dim tracelog As String = Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension(Page.AppRelativeVirtualPath)))

            tracelog += String.Format(CultureInfo.InvariantCulture, "{0} {1}<br>{2}", Now.ToString("hh:mm:ss.fff"), message, vbCrLf)
            Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension(Page.AppRelativeVirtualPath))) = tracelog
        End If

        Return message
    End Function
    
    Private Sub ControlsInitialization()

    End Sub     
  
    Private Sub ParametersToDictionary(ByRef target As Dictionary(Of String, Object))
        If IsNothing(target) Then
            target = New Dictionary(Of String, Object)

            target.Add("RiskInformation", _formData.RiskInformation) 
            target.Add("LifeProductSelected", _formData.LifeProductSelected) 
            target.Add("UserIsClient", _formData.UserIsClient) 
            target.Add("IsProducer", _formData.IsProducer) 
            target.Add("ClientExistInDB", _formData.ClientExistInDB) 
            target.Add("StatusRun", _formData.StatusRun) 
            target.Add("IsEmployee", _formData.IsEmployee) 
            target.Add("IsAnonymous", _formData.IsAnonymous) 
            target.Add("ProductMaster", _formData.ProductMaster) 
            target.Add("PlanType", _formData.PlanType) 
            target.Add("Currency", _formData.Currency) 
            target.Add("Client", _formData.Client) 
            target.Add("IsClient", _formData.IsClient) 
            target.Add("ProducerClientID", _formData.ProducerClientID) 
            target.Add("ProducerCode", _formData.ProducerCode) 
            target.Add("PaymentMethod", _formData.PaymentMethod) 
            target.Add("ProductMasterDescription", _formData.ProductMasterDescription) 
            target.Add("InvestmentFundRelatedToProductCollection", _formData.InvestmentFundRelatedToProductCollection) 
            target.Add("ClienteConectado", _formData.ClienteConectado) 
            target.Add("UsercodeBO", _formData.UsercodeBO) 
            target.Add("UsercodeFASI", _formData.UsercodeFASI) 
            target.Add("PolicyLocal", _formData.PolicyLocal) 
            target.Add("ImagenSeleccionada", _formData.ImagenSeleccionada) 
            target.Add("Name", _formData.Name) 
            target.Add("eMail", _formData.eMail) 
            target.Add("eMailConfirm", _formData.eMailConfirm) 
            target.Add("MessageText", _formData.MessageText) 
            target.Add("PhoneNumber", _formData.PhoneNumber) 
            target.Add("FormaContactenos", _formData.FormaContactenos) 
            target.Add("ClienteProductor", _formData.ClienteProductor) 

        Else
            target("RiskInformation") = _formData.RiskInformation 
            target("LifeProductSelected") = _formData.LifeProductSelected 
            target("UserIsClient") = _formData.UserIsClient 
            target("IsProducer") = _formData.IsProducer 
            target("ClientExistInDB") = _formData.ClientExistInDB 
            target("StatusRun") = _formData.StatusRun 
            target("IsEmployee") = _formData.IsEmployee 
            target("IsAnonymous") = _formData.IsAnonymous 
            target("ProductMaster") = _formData.ProductMaster 
            target("PlanType") = _formData.PlanType 
            target("Currency") = _formData.Currency 
            target("Client") = _formData.Client 
            target("IsClient") = _formData.IsClient 
            target("ProducerClientID") = _formData.ProducerClientID 
            target("ProducerCode") = _formData.ProducerCode 
            target("PaymentMethod") = _formData.PaymentMethod 
            target("ProductMasterDescription") = _formData.ProductMasterDescription 
            target("InvestmentFundRelatedToProductCollection") = _formData.InvestmentFundRelatedToProductCollection 
            target("ClienteConectado") = _formData.ClienteConectado 
            target("UsercodeBO") = _formData.UsercodeBO 
            target("UsercodeFASI") = _formData.UsercodeFASI 
            target("PolicyLocal") = _formData.PolicyLocal 
            target("ImagenSeleccionada") = _formData.ImagenSeleccionada 
            target("Name") = _formData.Name 
            target("eMail") = _formData.eMail 
            target("eMailConfirm") = _formData.eMailConfirm 
            target("MessageText") = _formData.MessageText 
            target("PhoneNumber") = _formData.PhoneNumber 
            target("FormaContactenos") = _formData.FormaContactenos 
            target("ClienteProductor") = _formData.ClienteProductor 

        End If     
    End Sub
    
    
    Private Sub ExecuteActionsInitializationForm()
                    Dim currentAction As String = SessionTrace("ActionsInitializationForm")
                    
                    Try                          
                        Dim _formContext As New InMotionGIT.Common.Contracts.Context(LanguageHelper.CurrentCultureToLanguage, formData.InternalId) With {.UserId = Session("UserId"), .UserCode = Session("nUsercode"), .SecuritySchemeCode = Session("sSche_code"), .AccessToken = Session("AccessToken")}
                        Dim messageAction As String = String.Empty
                        Dim lastURL As String = String.Empty
                        Dim isNullResult As Boolean = True 
                        Dim isFoundData As Boolean  = False 
                        Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
                        
                        ParametersToDictionary(parametersDictionary)
                        Dim selectDataTableItem As DataTable 
  
                        
                                    currentAction = SessionTrace("1. _formData.ClientExistInDB = false...") 
 
            currentAction = SessionTrace("1.1. _formData.ClientExistInDB = false...")

 _formData.ClientExistInDB = false 

            currentAction = SessionTrace("2. _formData.RiskInformation.PrimaryInsured.Client.IsNew = True...") 
 
            currentAction = SessionTrace("2.1. _formData.RiskInformation.PrimaryInsured.Client.IsNew = True...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured) Then
              _formData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured.Client) Then
              _formData.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
          End If 

 _formData.RiskInformation.PrimaryInsured.Client.IsNew = True 

            currentAction = SessionTrace("3. Call Shared Function 'User Profile' without parameters") 
            Dim _Client_be3f857e07a442ef8f1ef3e8dc565274 As InMotionGIT.Client.Entity.Contracts.Client 
            

      If Not IsNothing(UserInfo) AndAlso Not IsNothing(UserInfo.User) then
         _Client_be3f857e07a442ef8f1ef3e8dc565274 = New InMotionGIT.Client.Entity.Contracts.Client

         With _Client_be3f857e07a442ef8f1ef3e8dc565274
             .ClientID = UserInfo.User.ClientID
             .FirstName = UserInfo.User.FirstName
             .LastName = UserInfo.User.LastName
             .LastName2 = UserInfo.User.SecondLastName
             .BirthDate = UserInfo.User.DateOfBirth
             .LegalName = UserInfo.User.CompanyName
             .GenderEnum = IIf(UserInfo.User.Gender = "Male", InMotionGIT.Common.Contracts.Enumerations.EnumGender.Male, InMotionGIT.Common.Contracts.Enumerations.EnumGender.Female)
             .eMailAddressDefault = UserInfo.User.Email
             .CompleteClientName = .CompleteClientNameValid
         End With

	isNullResult = (IsNothing(_Client_be3f857e07a442ef8f1ef3e8dc565274))
	isFoundData  = Not isNullResult
      End If
     
            _formData.Client = _Client_be3f857e07a442ef8f1ef3e8dc565274 

            currentAction = SessionTrace("4. _formData.IsClient = Security.IsClient()...") 
 
            currentAction = SessionTrace("4.1. _formData.IsClient = Security.IsClient()...")

 _formData.IsClient = Security.IsClient() 
            currentAction = SessionTrace("4.2. _formData.IsEmployee = Security.IsEmployee()...")

 _formData.IsEmployee = Security.IsEmployee() 
            currentAction = SessionTrace("4.3. _formData.UsercodeBO = Session('nUserCode')...")

 _formData.UsercodeBO = Session("nUserCode") 
            currentAction = SessionTrace("4.4. _formData.UsercodeFASI = UserInfo.UserId...")

 _formData.UsercodeFASI = UserInfo.UserId 
            currentAction = SessionTrace("4.5. _formData.IsProducer = UserInfo.IsProducer()...")

 _formData.IsProducer = UserInfo.IsProducer() 
            currentAction = SessionTrace("4.6. _formData.IsAnonymous = UserInfo.IsAnonymous()...")

 _formData.IsAnonymous = UserInfo.IsAnonymous() 
            currentAction = SessionTrace("4.7. _formData.ProducerCode = UserInfo.ProducerID...")

 _formData.ProducerCode = UserInfo.ProducerID 
            currentAction = SessionTrace("4.8. _formData.ClienteConectado = UserInfo.ClientID...")

 _formData.ClienteConectado = UserInfo.ClientID 

            currentAction = SessionTrace("5. zone12CTLR.Visible = false") 
            currentAction = SessionTrace("5.1. zone12CTLR.Visible = false...")
BehaviorShowControls("zone12CTLR,Hidden")

            currentAction = SessionTrace("6. '_formData.PolicyLocal' = New 'InMotionGIT.Policy.Entity'...'") 
             _formData.PolicyLocal = New InMotionGIT.Policy.Entity.Contracts.Policy

currentAction = SessionTrace("7. SELECT AGENCIES.NAGENCY, AGENCIES.NOFFICEAGEN, AGENCIES.NBRAN_OFF FROM AGENCIES... WHERE AGENCIES.NAGENCY = 999 )") 
            isFoundData = False 
With New DataManagerFactory("SELECT AGENCIES.NAGENCY, AGENCIES.NOFFICEAGEN, AGENCIES.NBRAN_OFF FROM AGENCIES AGENCIES  WHERE AGENCIES.NAGENCY = 999", "AGENCIES", "Linked.LatCombined")
              
             selectDataTableItem = .QueryExecuteToTable(True)  
        End With
            With selectDataTableItem
                If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                     isFoundData = True 
                               If IsNothing(_formData.PolicyLocal) Then
              _formData.PolicyLocal = New InMotionGIT.Policy.Entity.Contracts.Policy
          End If 
                        _formData.PolicyLocal.Agency = .Rows(0).NumericValue("NAGENCY") 
                        _formData.PolicyLocal.OfficeCode = .Rows(0).NumericValue("NOFFICEAGEN") 
                        _formData.PolicyLocal.BranchOffice = .Rows(0).NumericValue("NBRAN_OFF") 

                End If
            End With

            currentAction = SessionTrace("8. If _formData.IsClient = true Then") 
If _formData.IsClient = true Then

            currentAction = SessionTrace("9. _formData.UsercodeBO = 9998...") 
 
            currentAction = SessionTrace("9.1. _formData.UsercodeBO = 9998...")

 _formData.UsercodeBO = 9998 

            currentAction = SessionTrace("10. zone12CTLR.Visible = false, zone10AgenteCTLR.Visible = false") 
            currentAction = SessionTrace("10.1. zone12CTLR.Visible = false...")
BehaviorShowControls("zone12CTLR,Hidden")
            currentAction = SessionTrace("10.2. zone10AgenteCTLR.Visible = false...")
BehaviorShowControls("zone10AgenteCTLR,Hidden")

            currentAction = SessionTrace("11. Call Shared Function 'Retrieve Client' with parameters (Client Identification)") 
            Dim _Client_331844dc26444f99909a04e50f3209cb As InMotionGIT.Client.Entity.Contracts.Client 
                      If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
                      If IsNothing(_formData.RiskInformation.PrimaryInsured) Then
              _formData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
          End If 
                      If IsNothing(_formData.RiskInformation.PrimaryInsured.Client) Then
              _formData.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
          End If 
            
      _Client_331844dc26444f99909a04e50f3209cb = (New InMotionGIT.Client.Services.ClientManager).Retrieve(clientId:=_formData.ClienteConectado, atDate:=Date.Today, childFilter:= "All")
      isNullResult = (IsNothing(_Client_331844dc26444f99909a04e50f3209cb))
      isFoundData  = Not isNullResult
     
            _formData.RiskInformation.PrimaryInsured.Client = _Client_331844dc26444f99909a04e50f3209cb 

            currentAction = SessionTrace("12. _formData.ClienteConectado = _formData.RiskInformation.PrimaryIn...") 
 
            currentAction = SessionTrace("12.1. _formData.ClienteConectado = _formData.RiskInformation.PrimaryIn...")

 _formData.ClienteConectado = _formData.RiskInformation.PrimaryInsured.Client.ClientID 

            currentAction = SessionTrace("13. If Form.IsNullResult = true Then") 
If isNullResult = true Then

            currentAction = SessionTrace("14. _formData.ClientExistInDB = false...") 
 
            currentAction = SessionTrace("14.1. _formData.ClientExistInDB = false...")

 _formData.ClientExistInDB = false 

            currentAction = SessionTrace("15. _formData.RiskInformation.PrimaryInsured.Client.IsNew = True...") 
 
            currentAction = SessionTrace("15.1. _formData.RiskInformation.PrimaryInsured.Client.IsNew = True...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured) Then
              _formData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured.Client) Then
              _formData.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
          End If 

 _formData.RiskInformation.PrimaryInsured.Client.IsNew = True 

            currentAction = SessionTrace("16. CompleteClientNameCTLR.Visible = false") 
            currentAction = SessionTrace("16.1. CompleteClientNameCTLR.Visible = false...")
BehaviorShowControls("CompleteClientNameCTLR,Hidden")

        Else 
            currentAction = SessionTrace("17. _formData.ClientExistInDB = true...") 
 
            currentAction = SessionTrace("17.1. _formData.ClientExistInDB = true...")

 _formData.ClientExistInDB = true 

            currentAction = SessionTrace("18. CompleteClientNameCTLR.Visible = true") 
            currentAction = SessionTrace("18.1. CompleteClientNameCTLR.Visible = true...")
BehaviorShowControls("CompleteClientNameCTLR,Visible")

            End If
        Else 
            currentAction = SessionTrace("19. _formData.RiskInformation.PrimaryInsured.Client.IsNew = True...") 
 
            currentAction = SessionTrace("19.1. _formData.RiskInformation.PrimaryInsured.Client.IsNew = True...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured) Then
              _formData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured.Client) Then
              _formData.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
          End If 

 _formData.RiskInformation.PrimaryInsured.Client.IsNew = True 

            currentAction = SessionTrace("20. _formData.ClientExistInDB = false...") 
 
            currentAction = SessionTrace("20.1. _formData.ClientExistInDB = false...")

 _formData.ClientExistInDB = false 

            End If
            currentAction = SessionTrace("21. If _formData.IsEmployee = true Then") 
If _formData.IsEmployee = true Then

            currentAction = SessionTrace("22. zone12CTLR.Visible = true, zone10AgenteCTLR.Visible = false") 
            currentAction = SessionTrace("22.1. zone12CTLR.Visible = true...")
BehaviorShowControls("zone12CTLR,Visible")
            currentAction = SessionTrace("22.2. zone10AgenteCTLR.Visible = false...")
BehaviorShowControls("zone10AgenteCTLR,Hidden")

currentAction = SessionTrace("23. SELECT USERS.NAGENCY, USERS.NUSERCODE FROM USERS... WHERE USERS.NUSERCODE = _formData.UsercodeBO )") 
            isFoundData = False 
                      If IsNothing(_formData.PolicyLocal) Then
              _formData.PolicyLocal = New InMotionGIT.Policy.Entity.Contracts.Policy
          End If 
With New DataManagerFactory("SELECT USERS.NAGENCY FROM USERS USERS  WHERE USERS.NUSERCODE = @:USERSNUSERCODE0", "USERS", "Linked.LatCombined")
             .AddParameter("USERSNUSERCODE0", DbType.Int32, 5, False, _formData.UsercodeBO)
 
             _formData.PolicyLocal.Agency = .QueryExecuteScalarToInteger()  
        End With

currentAction = SessionTrace("24. SELECT AGENCIES.NAGENCY, AGENCIES.NOFFICEAGEN, AGENCIES.NBRAN_OFF FROM AGENCIES... WHERE AGENCIES.NAGENCY = _formData.PolicyLocal.Agency )") 
            isFoundData = False 
With New DataManagerFactory("SELECT AGENCIES.NAGENCY, AGENCIES.NOFFICEAGEN, AGENCIES.NBRAN_OFF FROM AGENCIES AGENCIES  WHERE AGENCIES.NAGENCY = @:AGENCIESNAGENCY0", "AGENCIES", "Linked.LatCombined")
             .AddParameter("AGENCIESNAGENCY0", DbType.Int32, 5, False, _formData.PolicyLocal.Agency)
 
             selectDataTableItem = .QueryExecuteToTable(True)  
        End With
            With selectDataTableItem
                If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                     isFoundData = True 
                               If IsNothing(_formData.PolicyLocal) Then
              _formData.PolicyLocal = New InMotionGIT.Policy.Entity.Contracts.Policy
          End If 
                        _formData.PolicyLocal.Agency = .Rows(0).NumericValue("NAGENCY") 
                        _formData.PolicyLocal.OfficeCode = .Rows(0).NumericValue("NOFFICEAGEN") 
                        _formData.PolicyLocal.BranchOffice = .Rows(0).NumericValue("NBRAN_OFF") 

                End If
            End With

            End If
            currentAction = SessionTrace("25. _formData.RiskInformation.Policy = _formData.PolicyLocal...") 
 
            currentAction = SessionTrace("25.1. _formData.RiskInformation.Policy = _formData.PolicyLocal...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.Policy) Then
              _formData.RiskInformation.Policy = New InMotionGIT.Policy.Entity.Contracts.Policy
          End If 

 _formData.RiskInformation.Policy = _formData.PolicyLocal 

            currentAction = SessionTrace("26. If _formData.IsProducer = true Then") 
If _formData.IsProducer = true Then

            currentAction = SessionTrace("27. zone12CTLR.Visible = false, zone10AgenteCTLR.Visible = true") 
            currentAction = SessionTrace("27.1. zone12CTLR.Visible = false...")
BehaviorShowControls("zone12CTLR,Hidden")
            currentAction = SessionTrace("27.2. zone10AgenteCTLR.Visible = true...")
BehaviorShowControls("zone10AgenteCTLR,Visible")

            currentAction = SessionTrace("28. _formData.RiskInformation.PrimaryInsured.Client.IsNew = True...") 
 
            currentAction = SessionTrace("28.1. _formData.RiskInformation.PrimaryInsured.Client.IsNew = True...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured) Then
              _formData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured.Client) Then
              _formData.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
          End If 

 _formData.RiskInformation.PrimaryInsured.Client.IsNew = True 

            currentAction = SessionTrace("29. If (_formData.ProducerCode Is Null Or Empty  OR _formData.ProducerCode = 0) Then") 
If (IsNothing(_formData.ProducerCode) OrElse _formData.ProducerCode = 0) Then

            currentAction = SessionTrace("30. The message 'Usted no está autori...' will displayed as 'Popup'") 
            messageAction = GetLocalResourceObject("NNCotizacionesTodosLosRamosIconos0_MessageActionResource").ToString() 
            ParametersToDictionary(parametersDictionary)
            messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary) 
            ShowWindowPopupMessage(messageAction) 

        Else 
            currentAction = SessionTrace("31. _formData.UsercodeBO = 9998...") 
 
            currentAction = SessionTrace("31.1. _formData.UsercodeBO = 9998...")

 _formData.UsercodeBO = 9998 

            currentAction = SessionTrace("32. Call Shared Function 'Retrieve Producer Information' with parameters (Producer Code, Effective Date, With Lookup Information, Child Filter, provider, CompanyID)") 
            Dim _Producer_a1ec166b817a4d3e8de2d633181e98e0 As InMotionGIT.Intermedia.Entity.Contracts.Producer 
                      If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
                      If IsNothing(_formData.RiskInformation.PrimaryProducer) Then
              _formData.RiskInformation.PrimaryProducer = New InMotionGIT.Policy.Entity.Contracts.Role
          End If 
                      If IsNothing(_formData.RiskInformation.PrimaryProducer.Producer) Then
              _formData.RiskInformation.PrimaryProducer.Producer = New InMotionGIT.Intermedia.Entity.Contracts.Producer
          End If 
            _Producer_a1ec166b817a4d3e8de2d633181e98e0 = InMotionGIT.Intermedia.Proxy.Manager.Retrieve            (ProducerCode:=_formData.ProducerCode, AtDate:=Date.Today, WithLookupInformation:=False, ChildFilter:="All", Provider:="Core", CompanyID:=0) 
             
            _formData.RiskInformation.PrimaryProducer.Producer = _Producer_a1ec166b817a4d3e8de2d633181e98e0 
            isNullResult = (IsNothing(_Producer_a1ec166b817a4d3e8de2d633181e98e0)) 

            currentAction = SessionTrace("33. Call Shared Function 'Retrieve Client' with parameters (Client Identification)") 
            Dim _Client_b401f69fd8b94090af2b8d0a504e53c7 As InMotionGIT.Client.Entity.Contracts.Client 
                      If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
                      If IsNothing(_formData.RiskInformation.PrimaryProducer) Then
              _formData.RiskInformation.PrimaryProducer = New InMotionGIT.Policy.Entity.Contracts.Role
          End If 
                      If IsNothing(_formData.RiskInformation.PrimaryProducer.Client) Then
              _formData.RiskInformation.PrimaryProducer.Client = New InMotionGIT.Client.Entity.Contracts.Client
          End If 
            
      _Client_b401f69fd8b94090af2b8d0a504e53c7 = (New InMotionGIT.Client.Services.ClientManager).Retrieve(clientId:=_formData.RiskInformation.PrimaryProducer.Producer.ClientID, atDate:=Date.Today, childFilter:= "All")
      isNullResult = (IsNothing(_Client_b401f69fd8b94090af2b8d0a504e53c7))
      isFoundData  = Not isNullResult
     
            _formData.RiskInformation.PrimaryProducer.Client = _Client_b401f69fd8b94090af2b8d0a504e53c7 

            currentAction = SessionTrace("34. _formData.ProducerClientID = _formData.RiskInformation.PrimaryPr...") 
 
            currentAction = SessionTrace("34.1. _formData.ProducerClientID = _formData.RiskInformation.PrimaryPr...")

 _formData.ProducerClientID = _formData.RiskInformation.PrimaryProducer.Client.ClientID 

            currentAction = SessionTrace("35. '_formData.PolicyLocal' = New 'InMotionGIT.Policy.Entity'...'") 
             _formData.PolicyLocal = New InMotionGIT.Policy.Entity.Contracts.Policy

currentAction = SessionTrace("36. SELECT AGENCIES.NAGENCY, AGENCIES.NOFFICEAGEN, AGENCIES.NBRAN_OFF FROM AGENCIES... WHERE AGENCIES.NAGENCY = _formData.RiskInformation.PrimaryProducer.Producer.Agency )") 
            isFoundData = False 
With New DataManagerFactory("SELECT AGENCIES.NAGENCY, AGENCIES.NOFFICEAGEN, AGENCIES.NBRAN_OFF FROM AGENCIES AGENCIES  WHERE AGENCIES.NAGENCY = @:AGENCIESNAGENCY0", "AGENCIES", "Linked.LatCombined")
             .AddParameter("AGENCIESNAGENCY0", DbType.Int32, 5, False, _formData.RiskInformation.PrimaryProducer.Producer.Agency)
 
             selectDataTableItem = .QueryExecuteToTable(True)  
        End With
            With selectDataTableItem
                If Not IsNothing(.Rows) AndAlso .Rows.Count > 0 Then
                     isFoundData = True 
                               If IsNothing(_formData.PolicyLocal) Then
              _formData.PolicyLocal = New InMotionGIT.Policy.Entity.Contracts.Policy
          End If 
                        _formData.PolicyLocal.Agency = .Rows(0).NumericValue("NAGENCY") 
                        _formData.PolicyLocal.OfficeCode = .Rows(0).NumericValue("NOFFICEAGEN") 
                        _formData.PolicyLocal.BranchOffice = .Rows(0).NumericValue("NBRAN_OFF") 

                End If
            End With

            currentAction = SessionTrace("37. _formData.RiskInformation.Policy = _formData.PolicyLocal...") 
 
            currentAction = SessionTrace("37.1. _formData.RiskInformation.Policy = _formData.PolicyLocal...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.Policy) Then
              _formData.RiskInformation.Policy = New InMotionGIT.Policy.Entity.Contracts.Policy
          End If 

 _formData.RiskInformation.Policy = _formData.PolicyLocal 

            End If
        Else 
            currentAction = SessionTrace("38. '_formData.RiskInformation.PrimaryProducer' = New 'InMotionGIT.Policy.Entity'...'") 
             _formData.RiskInformation.PrimaryProducer = New InMotionGIT.Policy.Entity.Contracts.Role

            currentAction = SessionTrace("39. _formData.ProducerClientID = Nothing...") 
 
            currentAction = SessionTrace("39.1. _formData.ProducerClientID = Nothing...")

 _formData.ProducerClientID = Nothing 

            End If
            currentAction = SessionTrace("40. If _formData.IsAnonymous = true Then") 
If _formData.IsAnonymous = true Then

            currentAction = SessionTrace("41. zone12CTLR.Visible = false, zone10AgenteCTLR.Visible = false") 
            currentAction = SessionTrace("41.1. zone12CTLR.Visible = false...")
BehaviorShowControls("zone12CTLR,Hidden")
            currentAction = SessionTrace("41.2. zone10AgenteCTLR.Visible = false...")
BehaviorShowControls("zone10AgenteCTLR,Hidden")

            currentAction = SessionTrace("42. _formData.UsercodeBO = 9998...") 
 
            currentAction = SessionTrace("42.1. _formData.UsercodeBO = 9998...")

 _formData.UsercodeBO = 9998 
            currentAction = SessionTrace("42.2. _formData.UsercodeFASI = 9998...")

 _formData.UsercodeFASI = 9998 

            End If
            currentAction = SessionTrace("43. _formData.FormaContactenos = '#setting.Url.WebApplication#' & '/...") 
 
            currentAction = SessionTrace("43.1. _formData.FormaContactenos = '#setting.Url.WebApplication#' & '/...")

 _formData.FormaContactenos = "#setting.Url.WebApplication#" & "/generated/form/ContactoMailTelefonoEnWidget.aspx" 

            currentAction = SessionTrace("44. _formData.ImagenSeleccionada = '/images/iconramos/2.png'...") 
 
            currentAction = SessionTrace("44.1. _formData.ImagenSeleccionada = '/images/iconramos/2.png'...")

 _formData.ImagenSeleccionada = "/images/iconramos/2.png" 

            currentAction = SessionTrace("45. _formData.RiskInformation.LineOfBusiness = 2...") 
 
            currentAction = SessionTrace("45.1. _formData.RiskInformation.LineOfBusiness = 2...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation.LineOfBusiness = 2 

            currentAction = SessionTrace("46. _formData.RiskInformation.ProductCode = 6664...") 
 
            currentAction = SessionTrace("46.1. _formData.RiskInformation.ProductCode = 6664...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation.ProductCode = 6664 

            currentAction = SessionTrace("47. _formData.PlanType = 2...") 
 
            currentAction = SessionTrace("47.1. _formData.PlanType = 2...")

 _formData.PlanType = 2 

            currentAction = SessionTrace("48. image9.Visible = true, btnCotizarFinal.Visible = true") 
            currentAction = SessionTrace("48.1. image9.Visible = true...")
BehaviorShowControls("image9,Visible")
            currentAction = SessionTrace("48.2. btnCotizarFinal.Visible = true...")
BehaviorShowControls("btnCotizarFinal,Visible")


                        
                        currentAction = String.Empty
                         
                    Catch ex As Exception
                        InMotionGIT.Common.Helpers.LogHandler.ErrorLog(Page.AppRelativeVirtualPath, currentAction, ex)
						_formData.Errors.Add(New InMotionGIT.Common.Contracts.Errors.Error With {.Message = currentAction & " " & ex.Message, .Severity = InMotionGIT.Common.Contracts.Errors.Enumerations.EnumSeverity.Error})

                        If Request.QueryString("debug").IsNotEmpty Then
                            FormMessageLabel.Text = InMotionGIT.Common.Helpers.ExceptionHandlers.TraceInnerExceptionMessage(ex, True)
                            FormMessageLabel.ForeColor = Drawing.Color.Black
                            FormMessageLabel.Font.Bold = True
                            MessageTable.Visible = True
                        End If
                        
                    Finally                     
                        If _formData.Errors.Count > 0 Then
                            SetErrors(_formData.Errors)
                        End If
                        
                        If _formData.Errors.Count = 0 AndAlso Not String.IsNullOrEmpty(_webTransfer) Then
                            If Page.IsCallback Then
                                DevExpress.Web.ASPxClasses.ASPxWebControl.RedirectOnCallback(_webTransfer)
                            Else
                                Response.Redirect(_webTransfer)
                            End If
                        End If
                   End Try
                   
               End Sub
    
    
#End Region






End Class

<Serializable()>
Public Class NNCotizacionesTodosLosRamosIconosParameter
    Inherits InMotionGIT.FrontOffice.Support.DataType.FormBase(Of  NNCotizacionesTodosLosRamosIconosParameter)

    ' Methods
    Public Sub New()
        MyBase.New()
    End Sub

    ' Properties
    Public Property RiskInformation As InMotionGIT.Policy.Entity.Contracts.RiskInformation
    Public Property LifeProductSelected As Int32
    Public Property UserIsClient As Boolean
    Public Property IsProducer As Boolean
    Public Property ClientExistInDB As Boolean
    Public Property StatusRun As Boolean
    Public Property IsEmployee As Boolean
    Public Property IsAnonymous As Boolean
    Public Property ProductMaster As InMotionGIT.Product.Entity.Contracts.ProductMaster
    Public Property PlanType As Int32
    Public Property Currency As Int32
    Public Property Client As InMotionGIT.Client.Entity.Contracts.Client
    Public Property IsClient As Boolean
    Public Property ProducerClientID As String
    Public Property ProducerCode As Int32
    Public Property PaymentMethod As Int32
    Public Property ProductMasterDescription As String
    Public Property InvestmentFundRelatedToProductCollection As InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProductCollection
    Public Property ClienteConectado As String
    Public Property UsercodeBO As Int32
    Public Property UsercodeFASI As Int32
    Public Property PolicyLocal As InMotionGIT.Policy.Entity.Contracts.Policy
    Public Property ImagenSeleccionada As String
    Public Property Name As String
    Public Property eMail As String
    Public Property eMailConfirm As String
    Public Property MessageText As String
    Public Property PhoneNumber As String
    Public Property FormaContactenos As String
    Public Property ClienteProductor As String


End Class