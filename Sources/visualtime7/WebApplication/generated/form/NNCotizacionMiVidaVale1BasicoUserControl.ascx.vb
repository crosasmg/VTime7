'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Form Designer Oracle v7.1.1 at 2018-09-14 model release 11
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"
    
Imports Artem.Google.UI
Imports DashboardBusiness.Helpers
Imports DevExpress.Web
Imports DevExpress.Web.ASPxClasses
Imports DevExpress.Web.ASPxEditors
Imports DevExpress.Web.ASPxGridView
Imports GIT.Core
Imports InMotionGIT.FrontOffice.Support.Enumerations
Imports InMotionGIT.FrontOffice.Support.Helpers.ControlHandler
Imports InMotionGIT.BarCode
Imports InMotionGIT.BarCode.Enumerations
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.DatosNoEstruct.ContratoDeDatos.DTOs
Imports InMotionGIT.DatosNoEstruct.ContratoDeDatos.Modelo
Imports System.IO
Imports InMotionGIT.FrontOffice.Support
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Data
Imports System.Data.Common
Imports System.Globalization
Imports System.Linq
Imports System.Threading.Thread
Imports System.Xml.Linq
Imports System.Net


#End Region

Partial Public Class NNCotizacionMiVidaVale1BasicoUserControl
    Inherits GIT.Core.UserControlBase
    Implements Dropthings.Widget.Framework.IWidget

#Region "IWidget Members"
    
    
    

    Public Sub Closed() Implements Dropthings.Widget.Framework.IWidget.Closed
    End Sub

    Public Sub HideSettings() Implements Dropthings.Widget.Framework.IWidget.HideSettings

    End Sub

    Public Sub Init1(host As Dropthings.Widget.Framework.IWidgetHost) Implements Dropthings.Widget.Framework.IWidget.Init

    End Sub

    Public Sub Maximized() Implements Dropthings.Widget.Framework.IWidget.Maximized

    End Sub

    Public Sub Minimized() Implements Dropthings.Widget.Framework.IWidget.Minimized

    End Sub

    Public Sub ShowSettings() Implements Dropthings.Widget.Framework.IWidget.ShowSettings

    End Sub

#End Region

#Region "Private fields"

    Private _formData As NNCotizacionMiVidaVale1BasicoParameter = Nothing
    Private _CurrentParameterInstance As Boolean = False
    Private _loading As Boolean = False
    Private _loadcompleted As Boolean = False
    Private _webTransfer as String  
    Private _foundData As Boolean = False
    Private _CoverageForAmendmentList As InMotionGIT.Policy.Entity.Contracts.CoverageForAmendmentCollection = Nothing
    
#End Region

#Region "Public properties"

    Public Property FormData() As NNCotizacionMiVidaVale1BasicoParameter
        Get
            Dim formDefinition As String = String.Empty               
             
            If IsNothing(_formData) Then
                If Not IsPostBack Then
                    If Not String.IsNullOrEmpty(Request.QueryString("id")) Then
                        Dim _id As Guid
                        
                        If Guid.TryParse(Request.QueryString("id"), _id) Then
		                        _FormID.Text = Request.QueryString("id")  
                            
                            _foundData = RetrieveFormInformation()
                        End If
                    End If

                    If IsNothing(_formData) Then
                        _formData = New NNCotizacionMiVidaVale1BasicoParameter
                       
                        If String.IsNullOrEmpty(_FormID.Text) Then
                        	_FormID.Text = System.Guid.NewGuid().ToString                       
                        End If
											
                        _formData.InternalId = _FormID.Text
                        
                        If Not String.IsNullOrEmpty(Request.QueryString("fromid")) OrElse
                           Not String.IsNullOrEmpty(Session("fromid")) Then
                           
                            GetTransferParameters()
                        End If
                        
                        
                        
                        SetDefaultValuesFromQueryString()
                        ValidateParametersInstance(_formData)
                        
                        popupNotifyMessage.ShowOnPageLoad = false                        
                        
                        ControlsInitialization()
                        ExecuteActionsInitializationForm()
                         
                        If Not String.IsNullOrEmpty(Request.QueryString("readonly")) Then
                            SetReadOnlyControls()
                        End If
                        
                        If Not String.IsNullOrEmpty(Request.QueryString("Cotizar")) Then
                            Cotizar_Click(nothing, nothing)
                        End If
                        If Not String.IsNullOrEmpty(Request.QueryString("Acepto")) Then
                            Acepto_Click(nothing, nothing)
                        End If

                    Else
                    		SetDefaultValuesFromQueryString()
                        ExecuteActionsLoadForm()
                    End If

                Else
                     _foundData = RetrieveFormInformation()                    

                    If IsNothing(_formData) Then
                        _formData = New NNCotizacionMiVidaVale1BasicoParameter
                    End If
                End If
            End If

            Return _formData
        End Get

        Set(value As NNCotizacionMiVidaVale1BasicoParameter)
            _formData = value
        End Set
    End Property
    
#End Region

#Region "Form Events"

    Protected Sub Page_Load(sender As Object, e As EventArgs) Handles Me.Load
        ErrorsGridView.Visible = False
        
        
        
        Dim formData As NNCotizacionMiVidaVale1BasicoParameter = Me.FormData        
           
        If Not IsPostBack  AndAlso Not GridViewPostBack() Then                     
            
            
            _loadcompleted = True
            
            
            If IsPostBack And Not _CurrentParameterInstance Then
                MapPageToClass(formData)
                _CurrentParameterInstance = True
            End If

            MapClassToPage(formData)
            VerifySecurityLevel()
            
            
        Else
            
            
            
        End If        
        
        
        
        
    End Sub    

    Protected Sub Page_Unload(sender As Object, e As EventArgs) Handles Me.Unload        
StoreFormInformation() 
        
        If Not IsNothing(_formData) Then
             If Not IsNothing(Session("Form.Track")) AndAlso Session("Form.Track").ToString.ToLower = "true" Then
                 Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}", IO.Path.GetFileNameWithoutExtension(Page.AppRelativeVirtualPath))) = _formData
             End If   
       
             If Not IsNothing(Session("Form.Track.Parameters")) AndAlso Session("Form.Track.Parameters").ToString.ToLower = "true" Then
                  InMotionGIT.Common.Helpers.Serialize.SerializeToFile(Of NNCotizacionMiVidaVale1BasicoParameter) _
                  (formData, String.Format(CultureInfo.InvariantCulture, "{0}\{1}.NNCotizacionMiVidaVale1Basico.xml",  ConfigurationManager.AppSettings("Path.Logs"), formData.InternalId), True)
             End If        
        End If  
   End Sub

#End Region

#Region "Controls Events"


    Private Function GridViewPostBack() As Boolean
        For index As Integer = 0 To Request.Params.Count - 1
            If Request.Params(index).EndsWith("$CoverageForAmendment")  Then
                Return True
            End If
        Next
        
        Return False
    End Function    
    Protected Sub PaymentFrequency_Callback(sender As Object, e As CallbackEventArgsBase) Handles PaymentFrequency.Callback
               If Not String.IsNullOrEmpty(e.Parameter) Then
                   Dim parameters As String() = e.Parameter.Split(",")
                   Dim value As Integer = 0
                   
                   For index As Integer = 0 To parameters.Length - 1
                      Select Case index
                    Case 0
                        FormData.RiskInformation.LineOfBusiness = parameters(index)
                    Case 1
                        FormData.RiskInformation.ProductCode = parameters(index)
                    Case 2
                        FormData.RiskInformation.PaymentMethod = parameters(index)
                    Case 3
                        value = parameters(index)

                          
                      End Select                  
                   Next
               
                   PaymentFrequency_DataBinding(PaymentFrequency, New CallbackEventArgsBase(String.Empty))
                  PaymentFrequency.DataBind()  
                  
                   If value.IsNotEmpty Then
                       PaymentFrequency.SelectedItem = PaymentFrequency.Items.FindByValue(value)
                   End If
              End If
  End Sub
Protected Sub RiskInformationProductCode_Callback(sender As Object, e As CallbackEventArgsBase) Handles RiskInformationProductCode.Callback
               If Not String.IsNullOrEmpty(e.Parameter) Then
                   Dim parameters As String() = e.Parameter.Split(",")
                   Dim value As Integer = 0
                   
                   For index As Integer = 0 To parameters.Length - 1
                      Select Case index
                    Case 0
                        FormData.RiskInformation.LineOfBusiness = parameters(index)
                    Case 1
                        value = parameters(index)

                          
                      End Select                  
                   Next
               
                   RiskInformationProductCode_DataBinding(RiskInformationProductCode, New CallbackEventArgsBase(String.Empty))
                  RiskInformationProductCode.DataBind()  
                  
                   If value.IsNotEmpty Then
                       RiskInformationProductCode.SelectedItem = RiskInformationProductCode.Items.FindByValue(value)
                   End If
              End If
  End Sub
    
    Protected Sub Currency_DataBinding(sender As Object, e As EventArgs) Handles Currency.DataBinding
	Dim source As DataTable = Nothing

	With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture, 
											  "SELECT  TABLE11.NCODIGINT, TABLE11.SDESCRIPT, TABLE11.SSTATREGT, TABLE11.SSHORT_DES FROM TABLE11 TABLE11  WHERE TABLE11.SSTATREGT = '{0}'  ORDER BY TABLE11.SDESCRIPT ASC", "1"), "TABLE11", "Linked.LatCombined")

		
		.Cache = InMotionGIT.Common.Enumerations.EnumCache.CacheWithFullParameters
		source = .QueryExecuteToTable(True)
		Currency.DataSource = source
	End With
End Sub
Protected Sub PaymentFrequency_DataBinding(sender As Object, e As EventArgs) Handles PaymentFrequency.DataBinding
           With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                    "SELECT  TABLE36.NPAYFREQ, TABLE36.SSTATREGT, TABLE36.SDESCRIPT, PAY_FRACTI.NBRANCH, PAY_FRACTI.NPRODUCT, PAY_FRACTI.DNULLDATE, WAY_PAY_PROD.NWAY_PAY, WAY_PAY_PROD.DNULLDATE FROM TABLE36 TABLE36 JOIN PAY_FRACTI PAY_FRACTI ON PAY_FRACTI.NPAYFREQ = TABLE36.NPAYFREQ JOIN WAY_PAY_PROD WAY_PAY_PROD ON WAY_PAY_PROD.NBRANCH = PAY_FRACTI.NBRANCH  AND WAY_PAY_PROD.NPRODUCT = PAY_FRACTI.NPRODUCT  WHERE  ( TABLE36.SSTATREGT = '{0}' AND PAY_FRACTI.SSTATREGT = '{1}' AND PAY_FRACTI.DNULLDATE IS NULL AND WAY_PAY_PROD.DNULLDATE IS NULL )   AND (PAY_FRACTI.NBRANCH = @:PAY_FRACTINBRANCHDependen AND PAY_FRACTI.NPRODUCT = @:PAY_FRACTINPRODUCTDepende AND WAY_PAY_PROD.NWAY_PAY = @:WAY_PAY_PRODNWAY_PAYDepen AND NOT SDESCRIPT IS NULL) ORDER BY SDESCRIPT ", "1", "1"), 
                                                    "TABLE36", "Linked.LatCombined")                                                                      
                  .AddParameter("PAY_FRACTINBRANCHDependen", DbType.Int32, 0, False, FormData.RiskInformation.LineOfBusiness)
.AddParameter("PAY_FRACTINPRODUCTDepende", DbType.Int32, 0, False, FormData.RiskInformation.ProductCode)
.AddParameter("WAY_PAY_PRODNWAY_PAYDepen", DbType.Int32, 0, False, FormData.RiskInformation.PaymentMethod)

                  PaymentFrequency.DataSource = .QueryExecuteToTable(True)
           End With  
    End Sub
Protected Sub PaymentMethod_DataBinding(sender As Object, e As EventArgs) Handles PaymentMethod.DataBinding
	Dim source As DataTable = Nothing

	With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture, 
											  "SELECT  TABLE5002.NWAY_PAY, TABLE5002.SSTATREGT, TABLE5002.SDESCRIPT FROM TABLE5002 TABLE5002  WHERE TABLE5002.SSTATREGT = '{0}'  AND NOT SDESCRIPT IS NULL ORDER BY SDESCRIPT", "1"), "TABLE5002", "Linked.LatCombined")

		
		.Cache = InMotionGIT.Common.Enumerations.EnumCache.CacheWithFullParameters
		source = .QueryExecuteToTable(True)
		PaymentMethod.DataSource = source
	End With
End Sub
Protected Sub LineOfBusiness_DataBinding(sender As Object, e As EventArgs) Handles LineOfBusiness.DataBinding
	Dim source As DataTable = Nothing

	With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture, 
											  "SELECT  TABLE10.NBRANCH, TABLE10.SDESCRIPT FROM TABLE10 TABLE10  WHERE  ( TABLE10.SSTATREGT = 1 )   AND NOT SDESCRIPT IS NULL ORDER BY SDESCRIPT", "1"), "TABLE10", "Linked.LatCombined")

		
		.Cache = InMotionGIT.Common.Enumerations.EnumCache.CacheWithFullParameters
		source = .QueryExecuteToTable(True)
		LineOfBusiness.DataSource = source
	End With
End Sub
Protected Sub RiskInformationProductCode_DataBinding(sender As Object, e As EventArgs) Handles RiskInformationProductCode.DataBinding
	Dim source As DataTable = Nothing

	With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture, 
											  "SELECT  PRODMASTER.NBRANCH, PRODMASTER.NPRODUCT, PRODMASTER.SDESCRIPT FROM PRODMASTER PRODMASTER  WHERE PRODMASTER.SSTATREGT = 1  AND (PRODMASTER.NBRANCH = @:PRODMASTERNBRANCHDependen AND NOT SDESCRIPT IS NULL) ORDER BY SDESCRIPT ", "1"), "PRODMASTER", "Linked.LatCombined")

		.AddParameter("PRODMASTERNBRANCHDependen", DbType.Int32, 0, False, FormData.RiskInformation.LineOfBusiness)

		.Cache = InMotionGIT.Common.Enumerations.EnumCache.CacheWithFullParameters
		source = .QueryExecuteToTable(True)
		RiskInformationProductCode.DataSource = source
	End With
End Sub

    
#End Region


#Region "PopupMenu Events"

    
    
#End Region

#Region "Mapping methods"

    Public Sub ValidateParametersInstance(ByRef NNCotizacionMiVidaVale1BasicoParameterInstance As NNCotizacionMiVidaVale1BasicoParameter)
        If IsNothing(NNCotizacionMiVidaVale1BasicoParameterInstance.RiskInformation) Then
            NNCotizacionMiVidaVale1BasicoParameterInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
        End If
        If IsNothing(NNCotizacionMiVidaVale1BasicoParameterInstance.ClientIncluded) Then
            NNCotizacionMiVidaVale1BasicoParameterInstance.ClientIncluded = New InMotionGIT.Client.Entity.Contracts.Client
        End If
        If IsNothing(NNCotizacionMiVidaVale1BasicoParameterInstance.RiskInformation.LifeLineOfBusiness) Then
            NNCotizacionMiVidaVale1BasicoParameterInstance.RiskInformation.LifeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness
        End If
        If IsNothing(NNCotizacionMiVidaVale1BasicoParameterInstance.RiskInformation.Policy) Then
            NNCotizacionMiVidaVale1BasicoParameterInstance.RiskInformation.Policy = New InMotionGIT.Policy.Entity.Contracts.Policy
        End If
   
    End Sub
    
    ''' <summary>
    ''' This method moves the data from the class to the page
    ''' </summary>
    ''' <param name="NNCotizacionMiVidaVale1BasicoParameterInstance"></param>
    ''' <remarks></remarks>
    Public Sub MapClassToPage(ByRef NNCotizacionMiVidaVale1BasicoParameterInstance As NNCotizacionMiVidaVale1BasicoParameter, Optional calledBy As String = "")
        Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
        ValidateParametersInstance(NNCotizacionMiVidaVale1BasicoParameterInstance)

        Gender.DataBind()
SmokerIndicator.DataBind()
Currency.DataBind()
InsuredAmountSelected.DataBind()
PaymentFrequency.DataBind()
PaymentMethod.DataBind()
LineOfBusiness.DataBind()
RiskInformationProductCode.DataBind()

       
        With NNCotizacionMiVidaVale1BasicoParameterInstance
          
                      ProductMasterDescription.Text = .ProductMasterDescription
            RiskInformationEffectiveDate.Value = .RiskInformation.EffectiveDate
            uwcaseid.Text = .uwcaseid
       NNCotizacionMiVidaValeSecuencia.MapClassToPage(NNCotizacionMiVidaValeSecuencia.FormData)
            Gender.SelectedItem = Gender.Items.FindByValue(.ClientIncluded.Gender)
            SmokerIndicator.SelectedItem = SmokerIndicator.Items.FindByValue(.ClientIncluded.SmokerIndicator)
            If .ClientIncluded.BirthDate.IsNotEmpty Then
                BirthDate.Value = .ClientIncluded.BirthDate
            Else
                BirthDate.Value = Nothing
                
            End If
            InsuredAmountForCalculation.Text = .RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation
            Currency.SelectedItem = Currency.Items.FindByValue(.Currency)
            InsuredAmountSelected.SelectedItem = InsuredAmountSelected.Items.FindByValue(.InsuredAmountSelected)
            AccumulatedAmount.Text = .AccumulatedAmount.tostring("###,###,###,##0")
            PaymentFrequency.SelectedItem = PaymentFrequency.Items.FindByValue(.RiskInformation.Policy.PaymentFrequency)
            PaymentMethod.SelectedItem = PaymentMethod.Items.FindByValue(.RiskInformation.PaymentMethod)
            FinalMessageLabel.Text = .FinalMessage
            LineOfBusiness.SelectedItem = LineOfBusiness.Items.FindByValue(.RiskInformation.LineOfBusiness)
            RiskInformationProductCode.SelectedItem = RiskInformationProductCode.Items.FindByValue(.RiskInformation.ProductCode)

                      If IsNothing(.RiskInformation) Then
                .RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation()
            End If
            If IsNothing(.RiskInformation.AmendmentInformation) Then
                .RiskInformation.AmendmentInformation = New InMotionGIT.Policy.Entity.Contracts.AmendmentInformation()
            End If
            If IsNothing(.RiskInformation.AmendmentInformation.Coverages) Then
                .RiskInformation.AmendmentInformation.Coverages = New InMotionGIT.Policy.Entity.Contracts.CoverageForAmendmentCollection()
            End If

            _CoverageForAmendmentList = .RiskInformation.AmendmentInformation.Coverages
            CoverageForAmendment.DataSource = _CoverageForAmendmentList
            CoverageForAmendment.DataBind()
    
          CoverageForAmendment.FilterExpression = String.Format(CultureInfo.InvariantCulture," ( Selected = {0} ) ",true) 
        
           
             If Not IsNothing(LineOfBusiness.SelectedItem) Then
                PaymentFrequency_Callback(PaymentFrequency, New CallbackEventArgsBase(LineOfBusiness.SelectedItem.Value))
                If .RiskInformation.Policy.PaymentFrequency.IsNotEmpty  Then
                PaymentFrequency.SelectedItem = PaymentFrequency.Items.FindByValue(.RiskInformation.Policy.PaymentFrequency)
                Else
                PaymentFrequency.SelectedItem = Nothing
                End If
            End If 
  
  
             If Not IsNothing(LineOfBusiness.SelectedItem) Then
                RiskInformationProductCode_Callback(RiskInformationProductCode, New CallbackEventArgsBase(LineOfBusiness.SelectedItem.Value))
                If .RiskInformation.ProductCode.IsNotEmpty  Then
                RiskInformationProductCode.SelectedItem = RiskInformationProductCode.Items.FindByValue(.RiskInformation.ProductCode)
                Else
                RiskInformationProductCode.SelectedItem = Nothing
                End If
            End If 
 
          
               
            
            
       End With


if (Not ("CoverageForAmendment".IndexOf(calledBy) > -1)) Or String.IsNullOrEmpty(calledBy) then        
            
         

        End If          
    End Sub

    ''' <summary>
    ''' This method moves the data from the page to the class
    ''' </summary>
    ''' <param name="NNCotizacionMiVidaVale1BasicoParameterInstance"></param>
    Public Sub MapPageToClass(ByRef NNCotizacionMiVidaVale1BasicoParameterInstance As NNCotizacionMiVidaVale1BasicoParameter)
        _loading = True

        ValidateParametersInstance(NNCotizacionMiVidaVale1BasicoParameterInstance)

        With NNCotizacionMiVidaVale1BasicoParameterInstance
            .ProductMasterDescription = ProductMasterDescription.Text.Trim()
            .RiskInformation.EffectiveDate = RiskInformationEffectiveDate.Value
            .uwcaseid = uwcaseid.Text
            .ClientIncluded.Gender = Gender.Value
            .ClientIncluded.SmokerIndicator = SmokerIndicator.Value
            .ClientIncluded.BirthDate = BirthDate.Value
            .RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation = InsuredAmountForCalculation.Text
            .Currency = Currency.Value
            .InsuredAmountSelected = InsuredAmountSelected.Value
            .AccumulatedAmount = AccumulatedAmount.Text
            .RiskInformation.Policy.PaymentFrequency = PaymentFrequency.Value
            .RiskInformation.PaymentMethod = PaymentMethod.Value
            .RiskInformation.LineOfBusiness = LineOfBusiness.Value
            .RiskInformation.ProductCode = RiskInformationProductCode.Value


        'GetViewStateCoverageForAmendmentList()
        '.RiskInformation.AmendmentInformation.Coverages = _CoverageForAmendmentList
        '.RiskInformation.AmendmentInformation.Coverages.CurrentIndex= CoverageForAmendment.EditIndex
        'ViewState.Remove("CoverageForAmendmentList")



        End With




        _loading = False
    End Sub

#End Region

#Region "CoverageForAmendment GridView Controls with dependencies Events"
    


#End Region

#Region "CoverageForAmendment GridView editing support"    

    Protected Sub CoverageForAmendment_DataBinding(sender As Object, e As EventArgs) Handles CoverageForAmendment.DataBinding        
 
            If IsNothing(FormData.RiskInformation) Then
                FormData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation()
            End If
            If IsNothing(FormData.RiskInformation.AmendmentInformation) Then
                FormData.RiskInformation.AmendmentInformation = New InMotionGIT.Policy.Entity.Contracts.AmendmentInformation()
            End If
            If IsNothing(FormData.RiskInformation.AmendmentInformation.Coverages) Then
                FormData.RiskInformation.AmendmentInformation.Coverages = New InMotionGIT.Policy.Entity.Contracts.CoverageForAmendmentCollection()
            End If

        _CoverageForAmendmentList = FormData.RiskInformation.AmendmentInformation.Coverages
        CoverageForAmendment.DataSource = _CoverageForAmendmentList      
    End Sub
    
    Protected Sub CoverageForAmendment_CustomColumnDisplayText(sender As Object, e As ASPxGridViewColumnDisplayTextEventArgs) Handles CoverageForAmendment.CustomColumnDisplayText  
          Dim data As DataTable
          Dim rows() As DataRow
          
          Select Case e.Column.FieldName
      
            Case Else
          End Select
    End Sub 
    
    Private Sub SetCoverageForAmendmentListDataBind(Optional editIndex As Integer = -1, Optional isCancel As Boolean = False)
        Dim FormData As NNCotizacionMiVidaVale1BasicoParameter

         GetCurrentParameterInstance(FormData, True)

        FormData.RiskInformation.AmendmentInformation.Coverages = _CoverageForAmendmentList
        CoverageForAmendment.DataSource = _CoverageForAmendmentList
        CoverageForAmendment.DataBind()
    End Sub
   
    Private Sub GetViewStateCoverageForAmendmentList()
        Dim FormData As NNCotizacionMiVidaVale1BasicoParameter

         GetCurrentParameterInstance(FormData, True)

        _CoverageForAmendmentList = FormData.RiskInformation.AmendmentInformation.Coverages

        If IsNothing(_CoverageForAmendmentList) Then
            _CoverageForAmendmentList = New InMotionGIT.Policy.Entity.Contracts.CoverageForAmendmentCollection()
        End If        
    End Sub
    
    
    
    
#End Region







#Region "AutoPostBack Events Handles"

Protected Sub InsuredAmountSelected_SelectedIndexChanged(sender As Object, e As EventArgs)  
        Dim NNCotizacionMiVidaVale1BasicoParameterInstance As NNCotizacionMiVidaVale1BasicoParameter = Nothing
        Dim _formContext As New InMotionGIT.Common.Contracts.Context(LanguageHelper.CurrentCultureToLanguage, _formData.InternalId)
        Dim currentAction As String = SessionTrace("InsuredAmountSelected_SelectedIndex")
        Dim parametersDictionary As Dictionary(Of String, Object) = Nothing  
        
        popupNotifyMessage.ShowOnPageLoad = false
        
        Try 
            Dim messageAction As String = String.Empty             
            Dim lastURL As String = String.Empty
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean  = False             
            

        
           
        
           GetCurrentParameterInstance(NNCotizacionMiVidaVale1BasicoParameterInstance, True)
         
           ParametersToDictionary(parametersDictionary)  
        
                       currentAction = SessionTrace("1. Coverages.Visible = False") 
            currentAction = SessionTrace("1.1. Coverages.Visible = False...")
BehaviorShowControls("Coverages,Hidden")

            currentAction = SessionTrace("2. _formData.RiskInformation.LifeLineOfBusiness.InsuredAmount = _formData.InsuredAmountSelected...") 
 
            currentAction = SessionTrace("2.1. _formData.RiskInformation.LifeLineOfBusiness.InsuredAmount = _formData.InsuredAmountSelected...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.LifeLineOfBusiness) Then
              _formData.RiskInformation.LifeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness
          End If 

 _formData.RiskInformation.LifeLineOfBusiness.InsuredAmount = _formData.InsuredAmountSelected 
            currentAction = SessionTrace("2.2. _formData.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation = _formData.InsuredAmountSelected...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.LifeLineOfBusiness) Then
              _formData.RiskInformation.LifeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness
          End If 

 _formData.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation = _formData.InsuredAmountSelected 

            currentAction = SessionTrace("3. '_formData.RiskInformation.AmendmentInformation' = New 'InMotionGIT.Policy.Entity'...'") 
             _formData.RiskInformation.AmendmentInformation = New InMotionGIT.Policy.Entity.Contracts.AmendmentInformation

            currentAction = SessionTrace("4. '_formData.RiskInformation.Coverages' = New 'InMotionGIT.Policy.Entity'...'") 
             _formData.RiskInformation.Coverages = New InMotionGIT.Policy.Entity.Contracts.CoverageCollection



          
           currentAction = String.Empty
             
        
           
                         
          
          SetCurrentParameterInstance(NNCotizacionMiVidaVale1BasicoParameterInstance,"CoverageForAmendment")
          
        
          If NNCotizacionMiVidaVale1BasicoParameterInstance.Behavior <> InMotionGIT.FrontOffice.Support.Enumerations.enumBehavior.None Then
             If Not String.IsNullOrEmpty(NNCotizacionMiVidaVale1BasicoParameterInstance.NotifyMessage) Then
                 ShowWindowPopupMessage(NNCotizacionMiVidaVale1BasicoParameterInstance.NotifyMessage)
             End If           
            
             NNCotizacionMiVidaVale1BasicoParameterInstance.Behavior = InMotionGIT.FrontOffice.Support.Enumerations.enumBehavior.None
          End If
        
          If Not String.IsNullOrEmpty(NNCotizacionMiVidaVale1BasicoParameterInstance.BehaviorShowControls) Then
               BehaviorShowControls(NNCotizacionMiVidaVale1BasicoParameterInstance.BehaviorShowControls)
          End If        
                  
          If Not IsNothing(_formContext.Errors) AndAlso _formContext.Errors.Count > 0 Then
				_formData.Errors.AddErrorList(_formContext.Errors)
           End If         
          
      Catch ex As Exception
           InMotionGIT.Common.Helpers.LogHandler.ErrorLog(Page.AppRelativeVirtualPath, currentAction, ex)
		   _formData.Errors.Add(New InMotionGIT.Common.Contracts.Errors.Error With {.Message = currentAction & " " & ex.Message, .Severity = InMotionGIT.Common.Contracts.Errors.Enumerations.EnumSeverity.Error})

           
           If Request.QueryString("debug").IsNotEmpty Then
               FormMessageLabel.Text = InMotionGIT.Common.Helpers.ExceptionHandlers.TraceInnerExceptionMessage(ex, True)
               FormMessageLabel.ForeColor = Drawing.Color.Black
               FormMessageLabel.Font.Bold = True
               MessageTable.Visible = True
           End If           
           
      Finally
            If _formData.Errors.Count > 0 Then
               SetErrors(_formData.Errors)
            End If
            
             ClosePopupWindow()      
                
           If  _formData.Errors.Count = 0 AndAlso Not String.IsNullOrEmpty(_webTransfer) Then
               If Page.IsCallback Then
                  DevExpress.Web.ASPxClasses.ASPxWebControl.RedirectOnCallback(_webTransfer)
               Else
                   Response.ClearHeaders()        
                   Response.ClearContent()        
                   Response.Redirect(_webTransfer)
               End If          
           End If
		   NNCotizacionMiVidaVale1BasicoUpdatePanel.Update
      End Try         
    End Sub
Protected Sub Cotizar_Click(sender As Object, e As EventArgs)  
        Dim NNCotizacionMiVidaVale1BasicoParameterInstance As NNCotizacionMiVidaVale1BasicoParameter = Nothing
        Dim _formContext As New InMotionGIT.Common.Contracts.Context(LanguageHelper.CurrentCultureToLanguage, _formData.InternalId)
        Dim currentAction As String = SessionTrace("Cotizar_Click")
        Dim parametersDictionary As Dictionary(Of String, Object) = Nothing  
        
        popupNotifyMessage.ShowOnPageLoad = false
        
        Try 
            Dim messageAction As String = String.Empty             
            Dim lastURL As String = String.Empty
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean  = False             
            Dim WorkflowInArguments  As New Dictionary(Of String, Object)
Dim WorkflowOutArguments As IDictionary(Of String, Object)


        
           
        
           GetCurrentParameterInstance(NNCotizacionMiVidaVale1BasicoParameterInstance, True)
         
           ParametersToDictionary(parametersDictionary)  
        
                       currentAction = SessionTrace("1. _formData.RiskInformation.PrimaryInsured.Client.BirthDate = _formData.ClientIncluded.BirthDate...") 
 
            currentAction = SessionTrace("1.1. _formData.RiskInformation.PrimaryInsured.Client.BirthDate = _formData.ClientIncluded.BirthDate...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured) Then
              _formData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured.Client) Then
              _formData.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
          End If 

 _formData.RiskInformation.PrimaryInsured.Client.BirthDate = _formData.ClientIncluded.BirthDate 
            currentAction = SessionTrace("1.2. _formData.RiskInformation.PrimaryInsured.Client.Gender = _formData.ClientIncluded.Gender...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured) Then
              _formData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured.Client) Then
              _formData.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
          End If 

 _formData.RiskInformation.PrimaryInsured.Client.Gender = _formData.ClientIncluded.Gender 
            currentAction = SessionTrace("1.3. _formData.RiskInformation.PrimaryInsured.Client.SmokerIndicator = _formData.ClientIncluded.SmokerIndi...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured) Then
              _formData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured.Client) Then
              _formData.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
          End If 

 _formData.RiskInformation.PrimaryInsured.Client.SmokerIndicator = _formData.ClientIncluded.SmokerIndicator 

            currentAction = SessionTrace("2. '_formData.LookUpValueCollection' = New 'InMotionGIT.Common.DataTy'...'") 
             _formData.LookUpValueCollection = New InMotionGIT.Common.DataType.LookUpValueCollection

            currentAction = SessionTrace("3. _formData.InRuleErros = False...") 
 
            currentAction = SessionTrace("3.1. _formData.InRuleErros = False...")

 _formData.InRuleErros = False 

            currentAction = SessionTrace("4. _formData.RiskInformation.LifeLineOfBusiness.ActuarialAge = year(Date.Today) - year(_formData.R...") 
 
            currentAction = SessionTrace("4.1. _formData.RiskInformation.LifeLineOfBusiness.ActuarialAge = year(Date.Today) - year(_formData.R...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.LifeLineOfBusiness) Then
              _formData.RiskInformation.LifeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness
          End If 

 _formData.RiskInformation.LifeLineOfBusiness.ActuarialAge = year(Date.Today) - year(_formData.RiskInformation.PrimaryInsured.Client.BirthDate) 

            currentAction = SessionTrace("5. If _formData.RiskInformation.LifeLineOfBusiness.ActuarialAge < 18 Then") 
If _formData.RiskInformation.LifeLineOfBusiness.ActuarialAge < 18 Then

            currentAction = SessionTrace("6. The message 'El solicitante del s...' will displayed as 'Splash'") 
            messageAction = "El solicitante del seguro debe ser mayor de edad ({ Value /RiskInformation/LifeLineOfBusiness/ActuarialAge })" 
            ParametersToDictionary(parametersDictionary)
            messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary) 
            NNCotizacionMiVidaVale1BasicoTablePage.Visible = False 
            MessageTable.Visible = True 
            FormMessageLabel.Text = messageAction 

            currentAction = SessionTrace("7. _formData.InRuleErros = True...") 
 
            currentAction = SessionTrace("7.1. _formData.InRuleErros = True...")

 _formData.InRuleErros = True 

            currentAction = SessionTrace("8. '_formData.LookUpValue' = New 'InMotionGIT.Common.DataTy'...'") 
             _formData.LookUpValue = New InMotionGIT.Common.DataType.LookUpValue

            currentAction = SessionTrace("9. _formData.LookUpValue.Code = 1...") 
 
            currentAction = SessionTrace("9.1. _formData.LookUpValue.Code = 1...")
          If IsNothing(_formData.LookUpValue) Then
              _formData.LookUpValue = New InMotionGIT.Common.DataType.LookUpValue
          End If 

 _formData.LookUpValue.Code = 1 
            currentAction = SessionTrace("9.2. _formData.LookUpValue.Description = 'El solicitante del seguro debe ser...")
          If IsNothing(_formData.LookUpValue) Then
              _formData.LookUpValue = New InMotionGIT.Common.DataType.LookUpValue
          End If 

 _formData.LookUpValue.Description = "El solicitante del seguro debe ser mayor de edad (" & _formData.RiskInformation.LifeLineOfBusiness.ActuarialAge &")" 

            currentAction = SessionTrace("10. '_formData.LookUpValueCollection'.Add('_formData.LookUpValue')") 
             _formData.LookUpValueCollection.Add(_formData.LookUpValue)

            End If
            currentAction = SessionTrace("11. If _formData.InRuleErros = false Then") 
If _formData.InRuleErros = false Then

            currentAction = SessionTrace("12. If _formData.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation Is Null Or Empty  OR _formData.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation = 0 Then") 
If IsNothing(_formData.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation) OrElse _formData.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation = 0 Then

            currentAction = SessionTrace("13. The message 'Indique la suma aseg...' will displayed as 'Popup'") 
            messageAction = "Indique la suma asegurada" 
            ParametersToDictionary(parametersDictionary)
            messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary) 
            ShowWindowPopupMessage(messageAction) 

            currentAction = SessionTrace("14. _formData.InRuleErros = true...") 
 
            currentAction = SessionTrace("14.1. _formData.InRuleErros = true...")

 _formData.InRuleErros = true 

            End If
            End If
            currentAction = SessionTrace("15. If _formData.InRuleErros = False Then") 
If _formData.InRuleErros = False Then

            currentAction = SessionTrace("16. Coverages.Visible = true") 
            currentAction = SessionTrace("16.1. Coverages.Visible = true...")
BehaviorShowControls("Coverages,Visible")

            currentAction = SessionTrace("17. Acepto.Visible = true") 
            currentAction = SessionTrace("17.1. Acepto.Visible = true...")
BehaviorShowControls("Acepto,Visible")

            currentAction = SessionTrace("18. label6.Visible = true, label1.Visible = false") 
            currentAction = SessionTrace("18.1. label6.Visible = true...")
BehaviorShowControls("label6,Visible")
            currentAction = SessionTrace("18.2. label1.Visible = false...")
BehaviorShowControls("label1,Hidden")

            currentAction = SessionTrace("19. _formData.RiskInformation.Currency = _formData.Currency...") 
 
            currentAction = SessionTrace("19.1. _formData.RiskInformation.Currency = _formData.Currency...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation.Currency = _formData.Currency 

            currentAction = SessionTrace("20. _formData.RiskInformation.PrimaryInsured.RiskType = 1...") 
 
            currentAction = SessionTrace("20.1. _formData.RiskInformation.PrimaryInsured.RiskType = 1...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured) Then
              _formData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
          End If 

 _formData.RiskInformation.PrimaryInsured.RiskType = 1 

            currentAction = SessionTrace("21. _formData.RiskInformation.PrimaryInsured.ClientRole = 2...") 
 
            currentAction = SessionTrace("21.1. _formData.RiskInformation.PrimaryInsured.ClientRole = 2...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured) Then
              _formData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
          End If 

 _formData.RiskInformation.PrimaryInsured.ClientRole = 2 

            End If
            currentAction = SessionTrace("22. If _formData.PlanType = 1 Then") 
If _formData.PlanType = 1 Then

            currentAction = SessionTrace("23. _formData.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation = _formData.InsuredAmountSelected...") 
 
            currentAction = SessionTrace("23.1. _formData.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation = _formData.InsuredAmountSelected...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.LifeLineOfBusiness) Then
              _formData.RiskInformation.LifeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness
          End If 

 _formData.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation = _formData.InsuredAmountSelected 
            currentAction = SessionTrace("23.2. _formData.RiskInformation.LifeLineOfBusiness.InsuredAmountCalculation = _formData.InsuredAmountSelected...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.LifeLineOfBusiness) Then
              _formData.RiskInformation.LifeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness
          End If 

 _formData.RiskInformation.LifeLineOfBusiness.InsuredAmountCalculation = _formData.InsuredAmountSelected 

            End If
            currentAction = SessionTrace("24. If _formData.InRuleErros = false Then") 
If _formData.InRuleErros = false Then

            currentAction = SessionTrace("25. '_formData.RiskInformation.AmendmentInformation' = New 'InMotionGIT.Policy.Entity'...'") 
             _formData.RiskInformation.AmendmentInformation = New InMotionGIT.Policy.Entity.Contracts.AmendmentInformation

            currentAction = SessionTrace("26. '_formData.RiskInformation.Coverages' = New 'InMotionGIT.Policy.Entity'...'") 
             _formData.RiskInformation.Coverages = New InMotionGIT.Policy.Entity.Contracts.CoverageCollection

            currentAction = SessionTrace("27. Call 'Asigna módulos seleccionados por defecto' workflow in Synchronous mode with tracking") 
            WorkflowInArguments = New Dictionary(Of String, Object)
            With WorkflowInArguments
                .Add("context", _formContext) 
                .Add("ModulosRiskInformation", _formData.RiskInformation.Modules) 
                .Add("ProcessDate", _formData.RiskInformation.EffectiveDate) 
                .Add("LineOfBusiness", _formData.RiskInformation.LineOfBusiness) 
                .Add("ProductCode", _formData.RiskInformation.ProductCode) 
                .Add("Currency", _formData.Currency) 
            End With
            WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("AsignaModulosPorDefecto", "f7b4e740-4915-411e-bc5b-a5027c73d125", 0, WorkflowInArguments, True, True, Me.AppRelativeVirtualPath, _formData.InternalId)
             currentAction += " 'Mapping Outputs'" 
                _formData.RiskInformation.Modules = WorkflowOutArguments("ModulosRiskInformation")

            currentAction = SessionTrace("28. Call Shared Sub 'Coverage Rating' with parameters (RiskInformation Object, Error List)") 
InMotionGIT.PolicyManager.Services.Rating.Calculate.Process            (riskInformation:=_formData.RiskInformation, errors:=_formContext.Errors) 
             

            currentAction = SessionTrace("29. Call Function 'Amendment setup' with parameters (RiskInformation Object, Effective Date)") 
            Dim _RiskInformation_11ef41f7976d4e5382d511337eda1c2e As InMotionGIT.Policy.Entity.Contracts.RiskInformation 
            _RiskInformation_11ef41f7976d4e5382d511337eda1c2e = (New InMotionGIT.PolicyManager.Services.RiskManager).AmendmentSetup            (risk:=_formData.RiskInformation, atDate:=Date.Today) 
             
            _formData.RiskInformation = _RiskInformation_11ef41f7976d4e5382d511337eda1c2e 
            isNullResult = (IsNothing(_RiskInformation_11ef41f7976d4e5382d511337eda1c2e)) 

            currentAction = SessionTrace("30. Call Shared Sub 'Clear Form Errors' without parameters") 
            
        _formData.Errors.Clear()
	_formContext.Errors.Clear()
     

            End If
            currentAction = SessionTrace("31. _formData.FormStatus = 1...") 
 
            currentAction = SessionTrace("31.1. _formData.FormStatus = 1...")

 _formData.FormStatus = 1 

            currentAction = SessionTrace("32. FinalMessageLabel.Visible = false") 
            currentAction = SessionTrace("32.1. FinalMessageLabel.Visible = false...")
BehaviorShowControls("FinalMessageLabel,Hidden")



          
           currentAction = String.Empty
             
        
           
                         
          
          SetCurrentParameterInstance(NNCotizacionMiVidaVale1BasicoParameterInstance,"")
          
        
          If NNCotizacionMiVidaVale1BasicoParameterInstance.Behavior <> InMotionGIT.FrontOffice.Support.Enumerations.enumBehavior.None Then
             If Not String.IsNullOrEmpty(NNCotizacionMiVidaVale1BasicoParameterInstance.NotifyMessage) Then
                 ShowWindowPopupMessage(NNCotizacionMiVidaVale1BasicoParameterInstance.NotifyMessage)
             End If           
            
             NNCotizacionMiVidaVale1BasicoParameterInstance.Behavior = InMotionGIT.FrontOffice.Support.Enumerations.enumBehavior.None
          End If
        
          If Not String.IsNullOrEmpty(NNCotizacionMiVidaVale1BasicoParameterInstance.BehaviorShowControls) Then
               BehaviorShowControls(NNCotizacionMiVidaVale1BasicoParameterInstance.BehaviorShowControls)
          End If        
                  
          If Not IsNothing(_formContext.Errors) AndAlso _formContext.Errors.Count > 0 Then
				_formData.Errors.AddErrorList(_formContext.Errors)
           End If         
          
      Catch ex As Exception
           InMotionGIT.Common.Helpers.LogHandler.ErrorLog(Page.AppRelativeVirtualPath, currentAction, ex)
		   _formData.Errors.Add(New InMotionGIT.Common.Contracts.Errors.Error With {.Message = currentAction & " " & ex.Message, .Severity = InMotionGIT.Common.Contracts.Errors.Enumerations.EnumSeverity.Error})

           
           If Request.QueryString("debug").IsNotEmpty Then
               FormMessageLabel.Text = InMotionGIT.Common.Helpers.ExceptionHandlers.TraceInnerExceptionMessage(ex, True)
               FormMessageLabel.ForeColor = Drawing.Color.Black
               FormMessageLabel.Font.Bold = True
               MessageTable.Visible = True
           End If           
           
      Finally
            If _formData.Errors.Count > 0 Then
               SetErrors(_formData.Errors)
            End If
            
             ClosePopupWindow()      
                
           If  _formData.Errors.Count = 0 AndAlso Not String.IsNullOrEmpty(_webTransfer) Then
               If Page.IsCallback Then
                  DevExpress.Web.ASPxClasses.ASPxWebControl.RedirectOnCallback(_webTransfer)
               Else
                   Response.ClearHeaders()        
                   Response.ClearContent()        
                   Response.Redirect(_webTransfer)
               End If          
           End If
		   NNCotizacionMiVidaVale1BasicoUpdatePanel.Update
      End Try         
    End Sub
Protected Sub Acepto_Click(sender As Object, e As EventArgs)  
        Dim NNCotizacionMiVidaVale1BasicoParameterInstance As NNCotizacionMiVidaVale1BasicoParameter = Nothing
        Dim _formContext As New InMotionGIT.Common.Contracts.Context(LanguageHelper.CurrentCultureToLanguage, _formData.InternalId)
        Dim currentAction As String = SessionTrace("Acepto_Click")
        Dim parametersDictionary As Dictionary(Of String, Object) = Nothing  
        
        popupNotifyMessage.ShowOnPageLoad = false
        
        Try 
            Dim messageAction As String = String.Empty             
            Dim lastURL As String = String.Empty
            Dim isNullResult As Boolean = True
            Dim isFoundData As Boolean  = False             
            Dim errors As InMotionGIT.Common.DataType.Notify


        
           
        
           GetCurrentParameterInstance(NNCotizacionMiVidaVale1BasicoParameterInstance, True)
         
           ParametersToDictionary(parametersDictionary)  
        
           With parametersDictionary
    .Add("errors", errors)
End With
            currentAction = SessionTrace("1. _formData.ErrorsFound = false...") 
 
            currentAction = SessionTrace("1.1. _formData.ErrorsFound = false...")

 _formData.ErrorsFound = false 

            currentAction = SessionTrace("2. If _formData.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation Is Null Or Empty  OR _formData.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation = 0 Then") 
If IsNothing(_formData.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation) OrElse _formData.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation = 0 Then

parametersDictionary("errors") = errors
            currentAction = SessionTrace("3. The message 'Indique la suma aseg...' will displayed as 'Popup'") 
            messageAction = "Indique la suma asegurada" 
            ParametersToDictionary(parametersDictionary)
            messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary) 
            ShowWindowPopupMessage(messageAction) 

            currentAction = SessionTrace("4. _formData.ErrorsFound = true...") 
 
            currentAction = SessionTrace("4.1. _formData.ErrorsFound = true...")

 _formData.ErrorsFound = true 

            currentAction = SessionTrace("5. label1.Visible = true, Cotizar.Visible = true, label6.Visible = false...") 
            currentAction = SessionTrace("5.1. label1.Visible = true...")
BehaviorShowControls("label1,Visible")
            currentAction = SessionTrace("5.2. Cotizar.Visible = true...")
BehaviorShowControls("Cotizar,Visible")
            currentAction = SessionTrace("5.3. label6.Visible = false...")
BehaviorShowControls("label6,Hidden")
            currentAction = SessionTrace("5.4. Acepto.Visible = false...")
BehaviorShowControls("Acepto,Hidden")

            End If
            currentAction = SessionTrace("6. If _formData.ErrorsFound = false Then") 
If _formData.ErrorsFound = false Then

            currentAction = SessionTrace("7. _formData.RiskInformation.InsuredAmount = _formData.RiskInformation.LifeLineO...") 
 
            currentAction = SessionTrace("7.1. _formData.RiskInformation.InsuredAmount = _formData.RiskInformation.LifeLineO...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation.InsuredAmount = _formData.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation 

            currentAction = SessionTrace("8. InsuredAmountSelected.Enabled = false, InsuredAmountForCalculation.Enabled = false, zone8.Visible = true...") 
            currentAction = SessionTrace("8.1. InsuredAmountSelected.Enabled = false...")
BehaviorShowControls("InsuredAmountSelected,Disabled")
            currentAction = SessionTrace("8.2. InsuredAmountForCalculation.Enabled = false...")
BehaviorShowControls("InsuredAmountForCalculation,Disabled")
            currentAction = SessionTrace("8.3. zone8.Visible = true...")
BehaviorShowControls("zone8,Visible")
            currentAction = SessionTrace("8.4. zone5.Visible = false...")
BehaviorShowControls("zone5,Hidden")
            currentAction = SessionTrace("8.5. RiskInformationEffectiveDate.Enabled = false...")
BehaviorShowControls("RiskInformationEffectiveDate,Disabled")
            currentAction = SessionTrace("8.6. PaymentFrequency.Enabled = false...")
BehaviorShowControls("PaymentFrequency,Disabled")

            currentAction = SessionTrace("9. _formData.FormStatus = 2...") 
 
            currentAction = SessionTrace("9.1. _formData.FormStatus = 2...")

 _formData.FormStatus = 2 

            currentAction = SessionTrace("10. _formData.ConsumerInformation.CompanyId = 1...") 
 
            currentAction = SessionTrace("10.1. _formData.ConsumerInformation.CompanyId = 1...")
          If IsNothing(_formData.ConsumerInformation) Then
              _formData.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
          End If 

 _formData.ConsumerInformation.CompanyId = 1 
            currentAction = SessionTrace("10.2. _formData.ConsumerInformation.Country = 58...")
          If IsNothing(_formData.ConsumerInformation) Then
              _formData.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
          End If 

 _formData.ConsumerInformation.Country = 58 
            currentAction = SessionTrace("10.3. _formData.ConsumerInformation.Security.Usercode = 9998...")
          If IsNothing(_formData.ConsumerInformation) Then
              _formData.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
          End If 
          If IsNothing(_formData.ConsumerInformation.Security) Then
              _formData.ConsumerInformation.Security = New InMotionGIT.Common.Contracts.Process.SecurityInformation
          End If 

 _formData.ConsumerInformation.Security.Usercode = 9998 

            currentAction = SessionTrace("11. _formData.CurrentYear = year(Date.Today)...") 
 
            currentAction = SessionTrace("11.1. _formData.CurrentYear = year(Date.Today)...")

 _formData.CurrentYear = year(Date.Today) 

            currentAction = SessionTrace("12. _formData.ConsumerInformation.CompanyId = 1...") 
 
            currentAction = SessionTrace("12.1. _formData.ConsumerInformation.CompanyId = 1...")
          If IsNothing(_formData.ConsumerInformation) Then
              _formData.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
          End If 

 _formData.ConsumerInformation.CompanyId = 1 
            currentAction = SessionTrace("12.2. _formData.ConsumerInformation.Country = 58...")
          If IsNothing(_formData.ConsumerInformation) Then
              _formData.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
          End If 

 _formData.ConsumerInformation.Country = 58 
            currentAction = SessionTrace("12.3. _formData.ConsumerInformation.Security.Usercode = 9998...")
          If IsNothing(_formData.ConsumerInformation) Then
              _formData.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
          End If 
          If IsNothing(_formData.ConsumerInformation.Security) Then
              _formData.ConsumerInformation.Security = New InMotionGIT.Common.Contracts.Process.SecurityInformation
          End If 

 _formData.ConsumerInformation.Security.Usercode = 9998 

            End If
            currentAction = SessionTrace("13. If _formData.ErrorsFound = false Then") 
If _formData.ErrorsFound = false Then

            currentAction = SessionTrace("14. _formData.ShowBasicInformation = true...") 
 
            currentAction = SessionTrace("14.1. _formData.ShowBasicInformation = true...")

 _formData.ShowBasicInformation = true 

currentAction = SessionTrace("15. NNCotizacionMiVidaValeSecuencia.StatusRun = StatusRun...") 
NNCotizacionMiVidaValeSecuencia.FormData.StatusRun = FormData.StatusRun
NNCotizacionMiVidaValeSecuencia.FormData.ShowAdditionalInformation = FormData.ShowAdditionalInformation
NNCotizacionMiVidaValeSecuencia.FormData.ShowHealthInformation = FormData.ShowHealthInformation
NNCotizacionMiVidaValeSecuencia.FormData.ShowBeneficiariesInformation = FormData.ShowBeneficiariesInformation
NNCotizacionMiVidaValeSecuencia.FormData.ShowPaymentInformation = FormData.ShowPaymentInformation
NNCotizacionMiVidaValeSecuencia.FormData.ShowBasicInformation = FormData.ShowBasicInformation
NNCotizacionMiVidaValeSecuencia.FormData.RiskInformation = FormData.RiskInformation
NNCotizacionMiVidaValeSecuencia.FormData.uwcaseid = FormData.uwcaseid
NNCotizacionMiVidaValeSecuencia.FormData.uwreqid = FormData.uwreqid
NNCotizacionMiVidaValeSecuencia.FormData.PlanType = FormData.PlanType
NNCotizacionMiVidaValeSecuencia.FormData.ClientExistInDB = FormData.ClientExistInDB
NNCotizacionMiVidaValeSecuencia.FormData.eMail = FormData.eMail
NNCotizacionMiVidaValeSecuencia.FormData.Currency = FormData.Currency
NNCotizacionMiVidaValeSecuencia.FormData.Age = FormData.Age
NNCotizacionMiVidaValeSecuencia.FormData.QuestionnairesAvailable = FormData.QuestionnairesAvailable
NNCotizacionMiVidaValeSecuencia.FormData.ProducerClientID = FormData.ProducerClientID
NNCotizacionMiVidaValeSecuencia.FormData.BeneficiaryType = FormData.BeneficiaryType
NNCotizacionMiVidaValeSecuencia.FormData.SendMailIndicator = FormData.SendMailIndicator
NNCotizacionMiVidaValeSecuencia.FormData.MailToProducerIndicator = FormData.MailToProducerIndicator
NNCotizacionMiVidaValeSecuencia.FormData.InRuleErros = FormData.InRuleErros
NNCotizacionMiVidaValeSecuencia.FormData.AccumulatedAmount = FormData.AccumulatedAmount
NNCotizacionMiVidaValeSecuencia.FormData.CancelledPoliciesQuantity = FormData.CancelledPoliciesQuantity
NNCotizacionMiVidaValeSecuencia.FormData.OtherPoliciesSameRiskQuantity = FormData.OtherPoliciesSameRiskQuantity
NNCotizacionMiVidaValeSecuencia.FormData.ConsumerInformation = FormData.ConsumerInformation
NNCotizacionMiVidaValeSecuencia.FormData.OnLinePrintIndicator = FormData.OnLinePrintIndicator
NNCotizacionMiVidaValeSecuencia.FormData.OnLinePrintResult = FormData.OnLinePrintResult
NNCotizacionMiVidaValeSecuencia.FormData.PolicyDocument = FormData.PolicyDocument
NNCotizacionMiVidaValeSecuencia.FormData.ErrorsFound = FormData.ErrorsFound
NNCotizacionMiVidaValeSecuencia.FormData.ReportURL = FormData.ReportURL
NNCotizacionMiVidaValeSecuencia.FormData.FormStatus = FormData.FormStatus
NNCotizacionMiVidaValeSecuencia.FormData.OnLinePrint = FormData.OnLinePrint
NNCotizacionMiVidaValeSecuencia.FormData.StatusCase = FormData.StatusCase
NNCotizacionMiVidaValeSecuencia.FormData.RecoveryCaseIndicator = FormData.RecoveryCaseIndicator
NNCotizacionMiVidaValeSecuencia.FormData.AnswerDiabetes = FormData.AnswerDiabetes
NNCotizacionMiVidaValeSecuencia.FormData.AnswerHeart = FormData.AnswerHeart
NNCotizacionMiVidaValeSecuencia.FormData.AnswerCancer = FormData.AnswerCancer
NNCotizacionMiVidaValeSecuencia.FormData.PaymentMethod = FormData.PaymentMethod
NNCotizacionMiVidaValeSecuencia.FormData.ProductMasterDescription = FormData.ProductMasterDescription
NNCotizacionMiVidaValeSecuencia.FormData.PreviousPayment = FormData.PreviousPayment
NNCotizacionMiVidaValeSecuencia.FormData.ClienteIndicado = FormData.ClienteIndicado
NNCotizacionMiVidaValeSecuencia.FormData.ServiceResultData = FormData.ServiceResultData
NNCotizacionMiVidaValeSecuencia.FormData.CompleteAddress = FormData.CompleteAddress
NNCotizacionMiVidaValeSecuencia.FormData.AddresseMailDLI = FormData.AddresseMailDLI
NNCotizacionMiVidaValeSecuencia.FormData.VerificarCuestionariosIndicador = FormData.VerificarCuestionariosIndicador
NNCotizacionMiVidaValeSecuencia.FormData.PlanillaModificacion = FormData.PlanillaModificacion
NNCotizacionMiVidaValeSecuencia.FormData.PlanillaVisualizacion = FormData.PlanillaVisualizacion
NNCotizacionMiVidaValeSecuencia.FormData.ProductDescription = FormData.ProductDescription
NNCotizacionMiVidaValeSecuencia.FormData.PrimaTotalAnual = FormData.PrimaTotalAnual
NNCotizacionMiVidaValeSecuencia.FormData.PrimaRecibo = FormData.PrimaRecibo
NNCotizacionMiVidaValeSecuencia.FormData.MonedaRecibo = FormData.MonedaRecibo
NNCotizacionMiVidaValeSecuencia.FormData.CurrentYear = FormData.CurrentYear
NNCotizacionMiVidaValeSecuencia.FormData.ClientIncluded = FormData.ClientIncluded
NNCotizacionMiVidaValeSecuencia.FormData.IsAnonymous = FormData.IsAnonymous
NNCotizacionMiVidaValeSecuencia.FormData.UnderwritingCase = FormData.UnderwritingCase
NNCotizacionMiVidaValeSecuencia.FormData.LookUpValue = FormData.LookUpValue
NNCotizacionMiVidaValeSecuencia.FormData.LookUpValueCollection = FormData.LookUpValueCollection
NNCotizacionMiVidaValeSecuencia.FormData.BeneficiariosMail = FormData.BeneficiariosMail
NNCotizacionMiVidaValeSecuencia.FormData.Codigo = FormData.Codigo
NNCotizacionMiVidaValeSecuencia.FormData.Descripcion = FormData.Descripcion
NNCotizacionMiVidaValeSecuencia.FormData.FondosMail = FormData.FondosMail
NNCotizacionMiVidaValeSecuencia.FormData.UsercodeBO = FormData.UsercodeBO
NNCotizacionMiVidaValeSecuencia.FormData.UsercodeFASI = FormData.UsercodeFASI
NNCotizacionMiVidaValeSecuencia.FormData.QRegistros = FormData.QRegistros
NNCotizacionMiVidaValeSecuencia.FormData.frompanel = FormData.frompanel
NNCotizacionMiVidaValeSecuencia.FormData.ShowGeneral = FormData.ShowGeneral
NNCotizacionMiVidaValeSecuencia.FormData.InsuredAmount = FormData.InsuredAmount
NNCotizacionMiVidaValeSecuencia.FormData.InsuredAmountSelected = FormData.InsuredAmountSelected
NNCotizacionMiVidaValeSecuencia.FormData.ValorAcumulado = FormData.ValorAcumulado
NNCotizacionMiVidaValeSecuencia.FormData.FinalMessage = FormData.FinalMessage
NNCotizacionMiVidaValeSecuencia.FormData.DireccionMostrar = FormData.DireccionMostrar

            currentAction = SessionTrace("16. If _formData.IsAnonymous = true OR (_formData.ProducerClientID Not Is Null Or Not Empty '' AND ... Then") 
If _formData.IsAnonymous = true OrElse (Not String.IsNullOrEmpty(_formData.ProducerClientID) AndAlso String.IsNullOrEmpty(_formData.RiskInformation.PrimaryInsured.Client.ClientID)) Then

            currentAction = SessionTrace("17. Call 'Autenticación' form with transferring parameters") 
Session(_FormID.Text) = _formData 
 Session("fromid") = _FormID.Text 
     
_webtransfer = String.Format(CultureInfo.InvariantCulture, "{0}/NNCotizacionAutenticacion.aspx?fromid={1}", ConfigurationManager.AppSettings("Url.Form"), _FormID.Text, "") 
        Else 
            currentAction = SessionTrace("18. Call 'Mi Vida vale' form with transferring parameters") 
Session(_FormID.Text) = _formData 
 Session("fromid") = _FormID.Text 
     
_webtransfer = String.Format(CultureInfo.InvariantCulture, "{0}/NNCotizacionMiVidaVale2Adicional.aspx?fromid={1}", ConfigurationManager.AppSettings("Url.Form"), _FormID.Text, "") 
            End If
            End If


          
           currentAction = String.Empty
             
        
           
                         
          
          SetCurrentParameterInstance(NNCotizacionMiVidaVale1BasicoParameterInstance,"")
          
        
          If NNCotizacionMiVidaVale1BasicoParameterInstance.Behavior <> InMotionGIT.FrontOffice.Support.Enumerations.enumBehavior.None Then
             If Not String.IsNullOrEmpty(NNCotizacionMiVidaVale1BasicoParameterInstance.NotifyMessage) Then
                 ShowWindowPopupMessage(NNCotizacionMiVidaVale1BasicoParameterInstance.NotifyMessage)
             End If           
            
             NNCotizacionMiVidaVale1BasicoParameterInstance.Behavior = InMotionGIT.FrontOffice.Support.Enumerations.enumBehavior.None
          End If
        
          If Not String.IsNullOrEmpty(NNCotizacionMiVidaVale1BasicoParameterInstance.BehaviorShowControls) Then
               BehaviorShowControls(NNCotizacionMiVidaVale1BasicoParameterInstance.BehaviorShowControls)
          End If        
                  
          If Not IsNothing(_formContext.Errors) AndAlso _formContext.Errors.Count > 0 Then
				_formData.Errors.AddErrorList(_formContext.Errors)
           End If         
          
      Catch ex As Exception
           InMotionGIT.Common.Helpers.LogHandler.ErrorLog(Page.AppRelativeVirtualPath, currentAction, ex)
		   _formData.Errors.Add(New InMotionGIT.Common.Contracts.Errors.Error With {.Message = currentAction & " " & ex.Message, .Severity = InMotionGIT.Common.Contracts.Errors.Enumerations.EnumSeverity.Error})

           
           If Request.QueryString("debug").IsNotEmpty Then
               FormMessageLabel.Text = InMotionGIT.Common.Helpers.ExceptionHandlers.TraceInnerExceptionMessage(ex, True)
               FormMessageLabel.ForeColor = Drawing.Color.Black
               FormMessageLabel.Font.Bold = True
               MessageTable.Visible = True
           End If           
           
      Finally
            If _formData.Errors.Count > 0 Then
               SetErrors(_formData.Errors)
            End If
            
             ClosePopupWindow()      
                
           If  _formData.Errors.Count = 0 AndAlso Not String.IsNullOrEmpty(_webTransfer) Then
               If Page.IsCallback Then
                  DevExpress.Web.ASPxClasses.ASPxWebControl.RedirectOnCallback(_webTransfer)
               Else
                   Response.ClearHeaders()        
                   Response.ClearContent()        
                   Response.Redirect(_webTransfer)
               End If          
           End If
		   NNCotizacionMiVidaVale1BasicoUpdatePanel.Update
      End Try         
    End Sub


#End Region

#Region "UserControls Events Handles"

    



#End Region

#Region "Form Manager"

    Private Sub VerifySecurityLevel()












    End Sub

      

    Private Sub GetCurrentParameterInstance(ByRef NNCotizacionMiVidaVale1BasicoParameterInstance As NNCotizacionMiVidaVale1BasicoParameter, force As Boolean)
        If _loadcompleted Or force Then
            If Not _CurrentParameterInstance Then

                NNCotizacionMiVidaVale1BasicoParameterInstance = FormData

                If Page.IsPostBack Then
                    MapPageToClass(NNCotizacionMiVidaVale1BasicoParameterInstance)
                End If

                _CurrentParameterInstance = True
            Else
                NNCotizacionMiVidaVale1BasicoParameterInstance = _formData
            End If
        Else
            NNCotizacionMiVidaVale1BasicoParameterInstance = Nothing
        End If
    End Sub

    Protected Sub SetCurrentParameterInstance(ByRef NNCotizacionMiVidaVale1BasicoParameterInstance As NNCotizacionMiVidaVale1BasicoParameter, calledBy As String)
        FormData = NNCotizacionMiVidaVale1BasicoParameterInstance
        MapClassToPage(NNCotizacionMiVidaVale1BasicoParameterInstance,calledBy)
    End Sub

    Protected Sub SetErrors(errors As InMotionGIT.Common.Contracts.Errors.ErrorCollection)
        Dim errorList As InMotionGIT.Common.Contracts.Errors.ErrorCollection = ViewState("Errors")

        If IsNothing(errorList) Then
            errorList = New InMotionGIT.Common.Contracts.Errors.ErrorCollection
        End If

        errorList = errors

        ViewState("Errors") = errorList
        ShowErrors()
    End Sub

    Public Sub ShowErrors()
        If Not IsNothing(ViewState("Errors")) Then
            Dim errorList As InMotionGIT.Common.Contracts.Errors.ErrorCollection = ViewState("Errors")

            Dim queryOut = From lst In errorList Select lst Order By lst.ErrorId

            ErrorsGridView.Visible = True
            ErrorsGridView.DataSource = queryOut.ToList
            ErrorsGridView.DataBind()
            UpdatePanelErrors.Update()
        End If
    End Sub
   
    Private Sub ShowWindowPopupMessage(message As String)
        NotifyMessageLabel.Text = message
        popupNotifyMessage.ShowOnPageLoad = True
    End Sub

    Private Sub ClosePopupWindow()
        popControl.Windows(0).ShowOnPageLoad = False
    End Sub

    Private Sub GetTransferParameters()
        Dim fromDocumentCache As Object = Nothing

        If Not String.IsNullOrEmpty(Request.QueryString("fromid")) Then
            fromDocumentCache = Session( Request.QueryString("fromid"))
            Session.Remove(Request.QueryString("fromid"))
            
        Else
            fromDocumentCache = Session(Session("fromid"))
            Session.Remove(Session("fromid"))
            Session.Remove("fromid")   
        End If
        
        If Not IsNothing(fromDocumentCache) Then
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("RiskInformation", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("uwcaseid", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("uwreqid", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("InsuredAmount", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("InsuredAmountSelected", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PlanType", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClientExistInDB", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("eMail", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Currency", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Age", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("QuestionnairesAvailable", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProducerClientID", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("BeneficiaryType", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("SendMailIndicator", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("MailToProducerIndicator", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("InRuleErros", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AccumulatedAmount", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CancelledPoliciesQuantity", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OtherPoliciesSameRiskQuantity", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ConsumerInformation", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OnLinePrintIndicator", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OnLinePrintResult", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PolicyDocument", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ErrorsFound", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ReportURL", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("FormStatus", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OnLinePrint", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("StatusRun", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("StatusCase", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("RecoveryCaseIndicator", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AnswerDiabetes", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AnswerHeart", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AnswerCancer", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PaymentMethod", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProductMasterDescription", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PreviousPayment", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClienteIndicado", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ServiceResultData", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CompleteAddress", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AddresseMailDLI", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("VerificarCuestionariosIndicador", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PlanillaModificacion", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PlanillaVisualizacion", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProductDescription", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PrimaTotalAnual", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PrimaRecibo", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("MonedaRecibo", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CurrentYear", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClientIncluded", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("IsAnonymous", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UnderwritingCase", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ValorAcumulado", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("LookUpValue", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("LookUpValueCollection", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("BeneficiariosMail", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Codigo", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Descripcion", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("FondosMail", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UsercodeBO", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UsercodeFASI", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("QRegistros", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("frompanel", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowAdditionalInformation", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowHealthInformation", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowBeneficiariesInformation", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowPaymentInformation", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowGeneral", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowBasicInformation", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("FinalMessage", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("DireccionMostrar", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CompleteCliename", fromDocumentCache, _formData)
            
        End If
    End Sub
    
    

    Private Sub SetDefaultValuesFromQueryString()

        If Request.Form("uwcaseid").IsNotEmpty Then
                FormData.uwcaseid = Request.Form("uwcaseid") 

ElseIf Request.QueryString("uwcaseid").IsNotEmpty Then
                FormData.uwcaseid = Request.QueryString("uwcaseid") 
End If 

If Request.Form("uwreqid").IsNotEmpty Then
                FormData.uwreqid = Request.Form("uwreqid") 

ElseIf Request.QueryString("uwreqid").IsNotEmpty Then
                FormData.uwreqid = Request.QueryString("uwreqid") 
End If 

If Request.Form("InsuredAmount").IsNotEmpty Then
                FormData.InsuredAmount = Request.Form("InsuredAmount") 

ElseIf Request.QueryString("InsuredAmount").IsNotEmpty Then
                FormData.InsuredAmount = Request.QueryString("InsuredAmount") 
End If 

If Request.Form("InsuredAmountSelected").IsNotEmpty Then
                FormData.InsuredAmountSelected = Request.Form("InsuredAmountSelected") 

ElseIf Request.QueryString("InsuredAmountSelected").IsNotEmpty Then
                FormData.InsuredAmountSelected = Request.QueryString("InsuredAmountSelected") 
End If 

If Request.Form("PlanType").IsNotEmpty Then
                FormData.PlanType = Request.Form("PlanType") 

ElseIf Request.QueryString("PlanType").IsNotEmpty Then
                FormData.PlanType = Request.QueryString("PlanType") 
End If 

If Request.Form("ClientExistInDB").IsNotEmpty Then
                FormData.ClientExistInDB = Request.Form("ClientExistInDB") 

ElseIf Request.QueryString("ClientExistInDB").IsNotEmpty Then
                FormData.ClientExistInDB = Request.QueryString("ClientExistInDB") 
End If 

If Request.Form("eMail").IsNotEmpty Then
                FormData.eMail = Request.Form("eMail") 

ElseIf Request.QueryString("eMail").IsNotEmpty Then
                FormData.eMail = Request.QueryString("eMail") 
End If 

If Request.Form("Currency").IsNotEmpty Then
                FormData.Currency = Request.Form("Currency") 

ElseIf Request.QueryString("Currency").IsNotEmpty Then
                FormData.Currency = Request.QueryString("Currency") 
End If 

If Request.Form("Age").IsNotEmpty Then
                FormData.Age = Request.Form("Age") 

ElseIf Request.QueryString("Age").IsNotEmpty Then
                FormData.Age = Request.QueryString("Age") 
End If 

If Request.Form("ProducerClientID").IsNotEmpty Then
                FormData.ProducerClientID = Request.Form("ProducerClientID") 

ElseIf Request.QueryString("ProducerClientID").IsNotEmpty Then
                FormData.ProducerClientID = Request.QueryString("ProducerClientID") 
End If 

If Request.Form("BeneficiaryType").IsNotEmpty Then
                FormData.BeneficiaryType = Request.Form("BeneficiaryType") 

ElseIf Request.QueryString("BeneficiaryType").IsNotEmpty Then
                FormData.BeneficiaryType = Request.QueryString("BeneficiaryType") 
End If 

If Request.Form("SendMailIndicator").IsNotEmpty Then
                FormData.SendMailIndicator = Request.Form("SendMailIndicator") 

ElseIf Request.QueryString("SendMailIndicator").IsNotEmpty Then
                FormData.SendMailIndicator = Request.QueryString("SendMailIndicator") 
End If 

If Request.Form("MailToProducerIndicator").IsNotEmpty Then
                FormData.MailToProducerIndicator = Request.Form("MailToProducerIndicator") 

ElseIf Request.QueryString("MailToProducerIndicator").IsNotEmpty Then
                FormData.MailToProducerIndicator = Request.QueryString("MailToProducerIndicator") 
End If 

If Request.Form("InRuleErros").IsNotEmpty Then
                FormData.InRuleErros = Request.Form("InRuleErros") 

ElseIf Request.QueryString("InRuleErros").IsNotEmpty Then
                FormData.InRuleErros = Request.QueryString("InRuleErros") 
End If 

If Request.Form("AccumulatedAmount").IsNotEmpty Then
                FormData.AccumulatedAmount = Request.Form("AccumulatedAmount") 

ElseIf Request.QueryString("AccumulatedAmount").IsNotEmpty Then
                FormData.AccumulatedAmount = Request.QueryString("AccumulatedAmount") 
End If 

If Request.Form("CancelledPoliciesQuantity").IsNotEmpty Then
                FormData.CancelledPoliciesQuantity = Request.Form("CancelledPoliciesQuantity") 

ElseIf Request.QueryString("CancelledPoliciesQuantity").IsNotEmpty Then
                FormData.CancelledPoliciesQuantity = Request.QueryString("CancelledPoliciesQuantity") 
End If 

If Request.Form("OtherPoliciesSameRiskQuantity").IsNotEmpty Then
                FormData.OtherPoliciesSameRiskQuantity = Request.Form("OtherPoliciesSameRiskQuantity") 

ElseIf Request.QueryString("OtherPoliciesSameRiskQuantity").IsNotEmpty Then
                FormData.OtherPoliciesSameRiskQuantity = Request.QueryString("OtherPoliciesSameRiskQuantity") 
End If 

If Request.Form("OnLinePrintIndicator").IsNotEmpty Then
                FormData.OnLinePrintIndicator = Request.Form("OnLinePrintIndicator") 

ElseIf Request.QueryString("OnLinePrintIndicator").IsNotEmpty Then
                FormData.OnLinePrintIndicator = Request.QueryString("OnLinePrintIndicator") 
End If 

If Request.Form("OnLinePrintResult").IsNotEmpty Then
                FormData.OnLinePrintResult = Request.Form("OnLinePrintResult") 

ElseIf Request.QueryString("OnLinePrintResult").IsNotEmpty Then
                FormData.OnLinePrintResult = Request.QueryString("OnLinePrintResult") 
End If 

If Request.Form("PolicyDocument").IsNotEmpty Then
                FormData.PolicyDocument = Request.Form("PolicyDocument") 

ElseIf Request.QueryString("PolicyDocument").IsNotEmpty Then
                FormData.PolicyDocument = Request.QueryString("PolicyDocument") 
End If 

If Request.Form("ErrorsFound").IsNotEmpty Then
                FormData.ErrorsFound = Request.Form("ErrorsFound") 

ElseIf Request.QueryString("ErrorsFound").IsNotEmpty Then
                FormData.ErrorsFound = Request.QueryString("ErrorsFound") 
End If 

If Request.Form("ReportURL").IsNotEmpty Then
                FormData.ReportURL = Request.Form("ReportURL") 

ElseIf Request.QueryString("ReportURL").IsNotEmpty Then
                FormData.ReportURL = Request.QueryString("ReportURL") 
End If 

If Request.Form("FormStatus").IsNotEmpty Then
                FormData.FormStatus = Request.Form("FormStatus") 

ElseIf Request.QueryString("FormStatus").IsNotEmpty Then
                FormData.FormStatus = Request.QueryString("FormStatus") 
End If 

If Request.Form("OnLinePrint").IsNotEmpty Then
                FormData.OnLinePrint = Request.Form("OnLinePrint") 

ElseIf Request.QueryString("OnLinePrint").IsNotEmpty Then
                FormData.OnLinePrint = Request.QueryString("OnLinePrint") 
End If 

If Request.Form("StatusRun").IsNotEmpty Then
                FormData.StatusRun = Request.Form("StatusRun") 

ElseIf Request.QueryString("StatusRun").IsNotEmpty Then
                FormData.StatusRun = Request.QueryString("StatusRun") 
End If 

If Request.Form("StatusCase").IsNotEmpty Then
                FormData.StatusCase = Request.Form("StatusCase") 

ElseIf Request.QueryString("StatusCase").IsNotEmpty Then
                FormData.StatusCase = Request.QueryString("StatusCase") 
End If 

If Request.Form("RecoveryCaseIndicator").IsNotEmpty Then
                FormData.RecoveryCaseIndicator = Request.Form("RecoveryCaseIndicator") 

ElseIf Request.QueryString("RecoveryCaseIndicator").IsNotEmpty Then
                FormData.RecoveryCaseIndicator = Request.QueryString("RecoveryCaseIndicator") 
End If 

If Request.Form("AnswerDiabetes").IsNotEmpty Then
                FormData.AnswerDiabetes = Request.Form("AnswerDiabetes") 

ElseIf Request.QueryString("AnswerDiabetes").IsNotEmpty Then
                FormData.AnswerDiabetes = Request.QueryString("AnswerDiabetes") 
End If 

If Request.Form("AnswerHeart").IsNotEmpty Then
                FormData.AnswerHeart = Request.Form("AnswerHeart") 

ElseIf Request.QueryString("AnswerHeart").IsNotEmpty Then
                FormData.AnswerHeart = Request.QueryString("AnswerHeart") 
End If 

If Request.Form("AnswerCancer").IsNotEmpty Then
                FormData.AnswerCancer = Request.Form("AnswerCancer") 

ElseIf Request.QueryString("AnswerCancer").IsNotEmpty Then
                FormData.AnswerCancer = Request.QueryString("AnswerCancer") 
End If 

If Request.Form("PaymentMethod").IsNotEmpty Then
                FormData.PaymentMethod = Request.Form("PaymentMethod") 

ElseIf Request.QueryString("PaymentMethod").IsNotEmpty Then
                FormData.PaymentMethod = Request.QueryString("PaymentMethod") 
End If 

If Request.Form("ProductMasterDescription").IsNotEmpty Then
                FormData.ProductMasterDescription = Request.Form("ProductMasterDescription") 

ElseIf Request.QueryString("ProductMasterDescription").IsNotEmpty Then
                FormData.ProductMasterDescription = Request.QueryString("ProductMasterDescription") 
End If 

If Request.Form("PreviousPayment").IsNotEmpty Then
                FormData.PreviousPayment = Request.Form("PreviousPayment") 

ElseIf Request.QueryString("PreviousPayment").IsNotEmpty Then
                FormData.PreviousPayment = Request.QueryString("PreviousPayment") 
End If 

If Request.Form("ClienteIndicado").IsNotEmpty Then
                FormData.ClienteIndicado = Request.Form("ClienteIndicado") 

ElseIf Request.QueryString("ClienteIndicado").IsNotEmpty Then
                FormData.ClienteIndicado = Request.QueryString("ClienteIndicado") 
End If 

If Request.Form("CompleteAddress").IsNotEmpty Then
                FormData.CompleteAddress = Request.Form("CompleteAddress") 

ElseIf Request.QueryString("CompleteAddress").IsNotEmpty Then
                FormData.CompleteAddress = Request.QueryString("CompleteAddress") 
End If 

If Request.Form("VerificarCuestionariosIndicador").IsNotEmpty Then
                FormData.VerificarCuestionariosIndicador = Request.Form("VerificarCuestionariosIndicador") 

ElseIf Request.QueryString("VerificarCuestionariosIndicador").IsNotEmpty Then
                FormData.VerificarCuestionariosIndicador = Request.QueryString("VerificarCuestionariosIndicador") 
End If 

If Request.Form("PlanillaModificacion").IsNotEmpty Then
                FormData.PlanillaModificacion = Request.Form("PlanillaModificacion") 

ElseIf Request.QueryString("PlanillaModificacion").IsNotEmpty Then
                FormData.PlanillaModificacion = Request.QueryString("PlanillaModificacion") 
End If 

If Request.Form("PlanillaVisualizacion").IsNotEmpty Then
                FormData.PlanillaVisualizacion = Request.Form("PlanillaVisualizacion") 

ElseIf Request.QueryString("PlanillaVisualizacion").IsNotEmpty Then
                FormData.PlanillaVisualizacion = Request.QueryString("PlanillaVisualizacion") 
End If 

If Request.Form("ProductDescription").IsNotEmpty Then
                FormData.ProductDescription = Request.Form("ProductDescription") 

ElseIf Request.QueryString("ProductDescription").IsNotEmpty Then
                FormData.ProductDescription = Request.QueryString("ProductDescription") 
End If 

If Request.Form("PrimaTotalAnual").IsNotEmpty Then
                FormData.PrimaTotalAnual = Request.Form("PrimaTotalAnual") 

ElseIf Request.QueryString("PrimaTotalAnual").IsNotEmpty Then
                FormData.PrimaTotalAnual = Request.QueryString("PrimaTotalAnual") 
End If 

If Request.Form("PrimaRecibo").IsNotEmpty Then
                FormData.PrimaRecibo = Request.Form("PrimaRecibo") 

ElseIf Request.QueryString("PrimaRecibo").IsNotEmpty Then
                FormData.PrimaRecibo = Request.QueryString("PrimaRecibo") 
End If 

If Request.Form("MonedaRecibo").IsNotEmpty Then
                FormData.MonedaRecibo = Request.Form("MonedaRecibo") 

ElseIf Request.QueryString("MonedaRecibo").IsNotEmpty Then
                FormData.MonedaRecibo = Request.QueryString("MonedaRecibo") 
End If 

If Request.Form("CurrentYear").IsNotEmpty Then
                FormData.CurrentYear = Request.Form("CurrentYear") 

ElseIf Request.QueryString("CurrentYear").IsNotEmpty Then
                FormData.CurrentYear = Request.QueryString("CurrentYear") 
End If 

If Request.Form("IsAnonymous").IsNotEmpty Then
                FormData.IsAnonymous = Request.Form("IsAnonymous") 

ElseIf Request.QueryString("IsAnonymous").IsNotEmpty Then
                FormData.IsAnonymous = Request.QueryString("IsAnonymous") 
End If 

If Request.Form("ValorAcumulado").IsNotEmpty Then
                FormData.ValorAcumulado = Request.Form("ValorAcumulado") 

ElseIf Request.QueryString("ValorAcumulado").IsNotEmpty Then
                FormData.ValorAcumulado = Request.QueryString("ValorAcumulado") 
End If 

If Request.Form("BeneficiariosMail").IsNotEmpty Then
                FormData.BeneficiariosMail = Request.Form("BeneficiariosMail") 

ElseIf Request.QueryString("BeneficiariosMail").IsNotEmpty Then
                FormData.BeneficiariosMail = Request.QueryString("BeneficiariosMail") 
End If 

If Request.Form("Codigo").IsNotEmpty Then
                FormData.Codigo = Request.Form("Codigo") 

ElseIf Request.QueryString("Codigo").IsNotEmpty Then
                FormData.Codigo = Request.QueryString("Codigo") 
End If 

If Request.Form("Descripcion").IsNotEmpty Then
                FormData.Descripcion = Request.Form("Descripcion") 

ElseIf Request.QueryString("Descripcion").IsNotEmpty Then
                FormData.Descripcion = Request.QueryString("Descripcion") 
End If 

If Request.Form("FondosMail").IsNotEmpty Then
                FormData.FondosMail = Request.Form("FondosMail") 

ElseIf Request.QueryString("FondosMail").IsNotEmpty Then
                FormData.FondosMail = Request.QueryString("FondosMail") 
End If 

If Request.Form("UsercodeBO").IsNotEmpty Then
                FormData.UsercodeBO = Request.Form("UsercodeBO") 

ElseIf Request.QueryString("UsercodeBO").IsNotEmpty Then
                FormData.UsercodeBO = Request.QueryString("UsercodeBO") 
End If 

If Request.Form("UsercodeFASI").IsNotEmpty Then
                FormData.UsercodeFASI = Request.Form("UsercodeFASI") 

ElseIf Request.QueryString("UsercodeFASI").IsNotEmpty Then
                FormData.UsercodeFASI = Request.QueryString("UsercodeFASI") 
End If 

If Request.Form("QRegistros").IsNotEmpty Then
                FormData.QRegistros = Request.Form("QRegistros") 

ElseIf Request.QueryString("QRegistros").IsNotEmpty Then
                FormData.QRegistros = Request.QueryString("QRegistros") 
End If 

If Request.Form("frompanel").IsNotEmpty Then
                FormData.frompanel = Request.Form("frompanel") 

ElseIf Request.QueryString("frompanel").IsNotEmpty Then
                FormData.frompanel = Request.QueryString("frompanel") 
End If 

If Request.Form("ShowAdditionalInformation").IsNotEmpty Then
                FormData.ShowAdditionalInformation = Request.Form("ShowAdditionalInformation") 

ElseIf Request.QueryString("ShowAdditionalInformation").IsNotEmpty Then
                FormData.ShowAdditionalInformation = Request.QueryString("ShowAdditionalInformation") 
End If 

If Request.Form("ShowHealthInformation").IsNotEmpty Then
                FormData.ShowHealthInformation = Request.Form("ShowHealthInformation") 

ElseIf Request.QueryString("ShowHealthInformation").IsNotEmpty Then
                FormData.ShowHealthInformation = Request.QueryString("ShowHealthInformation") 
End If 

If Request.Form("ShowBeneficiariesInformation").IsNotEmpty Then
                FormData.ShowBeneficiariesInformation = Request.Form("ShowBeneficiariesInformation") 

ElseIf Request.QueryString("ShowBeneficiariesInformation").IsNotEmpty Then
                FormData.ShowBeneficiariesInformation = Request.QueryString("ShowBeneficiariesInformation") 
End If 

If Request.Form("ShowPaymentInformation").IsNotEmpty Then
                FormData.ShowPaymentInformation = Request.Form("ShowPaymentInformation") 

ElseIf Request.QueryString("ShowPaymentInformation").IsNotEmpty Then
                FormData.ShowPaymentInformation = Request.QueryString("ShowPaymentInformation") 
End If 

If Request.Form("ShowGeneral").IsNotEmpty Then
                FormData.ShowGeneral = Request.Form("ShowGeneral") 

ElseIf Request.QueryString("ShowGeneral").IsNotEmpty Then
                FormData.ShowGeneral = Request.QueryString("ShowGeneral") 
End If 

If Request.Form("ShowBasicInformation").IsNotEmpty Then
                FormData.ShowBasicInformation = Request.Form("ShowBasicInformation") 

ElseIf Request.QueryString("ShowBasicInformation").IsNotEmpty Then
                FormData.ShowBasicInformation = Request.QueryString("ShowBasicInformation") 
End If 

If Request.Form("FinalMessage").IsNotEmpty Then
                FormData.FinalMessage = Request.Form("FinalMessage") 

ElseIf Request.QueryString("FinalMessage").IsNotEmpty Then
                FormData.FinalMessage = Request.QueryString("FinalMessage") 
End If 

If Request.Form("DireccionMostrar").IsNotEmpty Then
                FormData.DireccionMostrar = Request.Form("DireccionMostrar") 

ElseIf Request.QueryString("DireccionMostrar").IsNotEmpty Then
                FormData.DireccionMostrar = Request.QueryString("DireccionMostrar") 
End If 

If Request.Form("CompleteCliename").IsNotEmpty Then
                FormData.CompleteCliename = Request.Form("CompleteCliename") 

ElseIf Request.QueryString("CompleteCliename").IsNotEmpty Then
                FormData.CompleteCliename = Request.QueryString("CompleteCliename") 
End If 


    End Sub
    
    Private Sub BehaviorControls(controlItem As Control, isEnable As Boolean)
        InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValueSimple("Enabled", controlItem, isEnable)           
    End Sub
    
    Private Sub SetReadOnlyControls()
    
        BehaviorControls(RiskInformationEffectiveDate, False)
        BehaviorControls(uwcaseid, False)
        BehaviorControls(Gender, False)
        BehaviorControls(SmokerIndicator, False)
        BehaviorControls(BirthDate, False)
        BehaviorControls(InsuredAmountForCalculation, False)
        BehaviorControls(Currency, False)
        BehaviorControls(InsuredAmountSelected, False)
        BehaviorControls(PaymentFrequency, False)
        BehaviorControls(PaymentMethod, False)
        BehaviorControls(CoverageForAmendment, False)
        BehaviorControls(Cotizar, False)
        BehaviorControls(Acepto, False)
        BehaviorControls(LineOfBusiness, False)
        BehaviorControls(RiskInformationProductCode, False)
    
    End Sub
     
#End Region

#Region "Actions Data Methods"

    Private Function SessionTrace(message As String) As String

        If Not IsNothing(Session("Form.Track")) AndAlso Session("Form.Track").ToString.ToLower = "true" Then
            Dim tracelog As String = Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension(Page.AppRelativeVirtualPath)))

            tracelog += String.Format(CultureInfo.InvariantCulture, "{0} {1}<br>{2}", Now.ToString("hh:mm:ss.fff"), message, vbCrLf)
            Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension(Page.AppRelativeVirtualPath))) = tracelog
        End If

        Return message
    End Function
    
    Private Sub ControlsInitialization()
        CoverageForAmendment.ClientVisible = True
        CoverageForAmendment.Enabled = True

    End Sub     
  
    Private Sub ParametersToDictionary(ByRef target As Dictionary(Of String, Object))
        If IsNothing(target) Then
            target = New Dictionary(Of String, Object)

            target.Add("RiskInformation", _formData.RiskInformation) 
            target.Add("uwcaseid", _formData.uwcaseid) 
            target.Add("uwreqid", _formData.uwreqid) 
            target.Add("InsuredAmount", _formData.InsuredAmount) 
            target.Add("InsuredAmountSelected", _formData.InsuredAmountSelected) 
            target.Add("PlanType", _formData.PlanType) 
            target.Add("ClientExistInDB", _formData.ClientExistInDB) 
            target.Add("eMail", _formData.eMail) 
            target.Add("Currency", _formData.Currency) 
            target.Add("Age", _formData.Age) 
            target.Add("QuestionnairesAvailable", _formData.QuestionnairesAvailable) 
            target.Add("ProducerClientID", _formData.ProducerClientID) 
            target.Add("BeneficiaryType", _formData.BeneficiaryType) 
            target.Add("SendMailIndicator", _formData.SendMailIndicator) 
            target.Add("MailToProducerIndicator", _formData.MailToProducerIndicator) 
            target.Add("InRuleErros", _formData.InRuleErros) 
            target.Add("AccumulatedAmount", _formData.AccumulatedAmount) 
            target.Add("CancelledPoliciesQuantity", _formData.CancelledPoliciesQuantity) 
            target.Add("OtherPoliciesSameRiskQuantity", _formData.OtherPoliciesSameRiskQuantity) 
            target.Add("ConsumerInformation", _formData.ConsumerInformation) 
            target.Add("OnLinePrintIndicator", _formData.OnLinePrintIndicator) 
            target.Add("OnLinePrintResult", _formData.OnLinePrintResult) 
            target.Add("PolicyDocument", _formData.PolicyDocument) 
            target.Add("ErrorsFound", _formData.ErrorsFound) 
            target.Add("ReportURL", _formData.ReportURL) 
            target.Add("FormStatus", _formData.FormStatus) 
            target.Add("OnLinePrint", _formData.OnLinePrint) 
            target.Add("StatusRun", _formData.StatusRun) 
            target.Add("StatusCase", _formData.StatusCase) 
            target.Add("RecoveryCaseIndicator", _formData.RecoveryCaseIndicator) 
            target.Add("AnswerDiabetes", _formData.AnswerDiabetes) 
            target.Add("AnswerHeart", _formData.AnswerHeart) 
            target.Add("AnswerCancer", _formData.AnswerCancer) 
            target.Add("PaymentMethod", _formData.PaymentMethod) 
            target.Add("ProductMasterDescription", _formData.ProductMasterDescription) 
            target.Add("PreviousPayment", _formData.PreviousPayment) 
            target.Add("ClienteIndicado", _formData.ClienteIndicado) 
            target.Add("ServiceResultData", _formData.ServiceResultData) 
            target.Add("CompleteAddress", _formData.CompleteAddress) 
            target.Add("AddresseMailDLI", _formData.AddresseMailDLI) 
            target.Add("VerificarCuestionariosIndicador", _formData.VerificarCuestionariosIndicador) 
            target.Add("PlanillaModificacion", _formData.PlanillaModificacion) 
            target.Add("PlanillaVisualizacion", _formData.PlanillaVisualizacion) 
            target.Add("ProductDescription", _formData.ProductDescription) 
            target.Add("PrimaTotalAnual", _formData.PrimaTotalAnual) 
            target.Add("PrimaRecibo", _formData.PrimaRecibo) 
            target.Add("MonedaRecibo", _formData.MonedaRecibo) 
            target.Add("CurrentYear", _formData.CurrentYear) 
            target.Add("ClientIncluded", _formData.ClientIncluded) 
            target.Add("IsAnonymous", _formData.IsAnonymous) 
            target.Add("UnderwritingCase", _formData.UnderwritingCase) 
            target.Add("ValorAcumulado", _formData.ValorAcumulado) 
            target.Add("LookUpValue", _formData.LookUpValue) 
            target.Add("LookUpValueCollection", _formData.LookUpValueCollection) 
            target.Add("BeneficiariosMail", _formData.BeneficiariosMail) 
            target.Add("Codigo", _formData.Codigo) 
            target.Add("Descripcion", _formData.Descripcion) 
            target.Add("FondosMail", _formData.FondosMail) 
            target.Add("UsercodeBO", _formData.UsercodeBO) 
            target.Add("UsercodeFASI", _formData.UsercodeFASI) 
            target.Add("QRegistros", _formData.QRegistros) 
            target.Add("frompanel", _formData.frompanel) 
            target.Add("ShowAdditionalInformation", _formData.ShowAdditionalInformation) 
            target.Add("ShowHealthInformation", _formData.ShowHealthInformation) 
            target.Add("ShowBeneficiariesInformation", _formData.ShowBeneficiariesInformation) 
            target.Add("ShowPaymentInformation", _formData.ShowPaymentInformation) 
            target.Add("ShowGeneral", _formData.ShowGeneral) 
            target.Add("ShowBasicInformation", _formData.ShowBasicInformation) 
            target.Add("FinalMessage", _formData.FinalMessage) 
            target.Add("DireccionMostrar", _formData.DireccionMostrar) 
            target.Add("CompleteCliename", _formData.CompleteCliename) 

        Else
            target("RiskInformation") = _formData.RiskInformation 
            target("uwcaseid") = _formData.uwcaseid 
            target("uwreqid") = _formData.uwreqid 
            target("InsuredAmount") = _formData.InsuredAmount 
            target("InsuredAmountSelected") = _formData.InsuredAmountSelected 
            target("PlanType") = _formData.PlanType 
            target("ClientExistInDB") = _formData.ClientExistInDB 
            target("eMail") = _formData.eMail 
            target("Currency") = _formData.Currency 
            target("Age") = _formData.Age 
            target("QuestionnairesAvailable") = _formData.QuestionnairesAvailable 
            target("ProducerClientID") = _formData.ProducerClientID 
            target("BeneficiaryType") = _formData.BeneficiaryType 
            target("SendMailIndicator") = _formData.SendMailIndicator 
            target("MailToProducerIndicator") = _formData.MailToProducerIndicator 
            target("InRuleErros") = _formData.InRuleErros 
            target("AccumulatedAmount") = _formData.AccumulatedAmount 
            target("CancelledPoliciesQuantity") = _formData.CancelledPoliciesQuantity 
            target("OtherPoliciesSameRiskQuantity") = _formData.OtherPoliciesSameRiskQuantity 
            target("ConsumerInformation") = _formData.ConsumerInformation 
            target("OnLinePrintIndicator") = _formData.OnLinePrintIndicator 
            target("OnLinePrintResult") = _formData.OnLinePrintResult 
            target("PolicyDocument") = _formData.PolicyDocument 
            target("ErrorsFound") = _formData.ErrorsFound 
            target("ReportURL") = _formData.ReportURL 
            target("FormStatus") = _formData.FormStatus 
            target("OnLinePrint") = _formData.OnLinePrint 
            target("StatusRun") = _formData.StatusRun 
            target("StatusCase") = _formData.StatusCase 
            target("RecoveryCaseIndicator") = _formData.RecoveryCaseIndicator 
            target("AnswerDiabetes") = _formData.AnswerDiabetes 
            target("AnswerHeart") = _formData.AnswerHeart 
            target("AnswerCancer") = _formData.AnswerCancer 
            target("PaymentMethod") = _formData.PaymentMethod 
            target("ProductMasterDescription") = _formData.ProductMasterDescription 
            target("PreviousPayment") = _formData.PreviousPayment 
            target("ClienteIndicado") = _formData.ClienteIndicado 
            target("ServiceResultData") = _formData.ServiceResultData 
            target("CompleteAddress") = _formData.CompleteAddress 
            target("AddresseMailDLI") = _formData.AddresseMailDLI 
            target("VerificarCuestionariosIndicador") = _formData.VerificarCuestionariosIndicador 
            target("PlanillaModificacion") = _formData.PlanillaModificacion 
            target("PlanillaVisualizacion") = _formData.PlanillaVisualizacion 
            target("ProductDescription") = _formData.ProductDescription 
            target("PrimaTotalAnual") = _formData.PrimaTotalAnual 
            target("PrimaRecibo") = _formData.PrimaRecibo 
            target("MonedaRecibo") = _formData.MonedaRecibo 
            target("CurrentYear") = _formData.CurrentYear 
            target("ClientIncluded") = _formData.ClientIncluded 
            target("IsAnonymous") = _formData.IsAnonymous 
            target("UnderwritingCase") = _formData.UnderwritingCase 
            target("ValorAcumulado") = _formData.ValorAcumulado 
            target("LookUpValue") = _formData.LookUpValue 
            target("LookUpValueCollection") = _formData.LookUpValueCollection 
            target("BeneficiariosMail") = _formData.BeneficiariosMail 
            target("Codigo") = _formData.Codigo 
            target("Descripcion") = _formData.Descripcion 
            target("FondosMail") = _formData.FondosMail 
            target("UsercodeBO") = _formData.UsercodeBO 
            target("UsercodeFASI") = _formData.UsercodeFASI 
            target("QRegistros") = _formData.QRegistros 
            target("frompanel") = _formData.frompanel 
            target("ShowAdditionalInformation") = _formData.ShowAdditionalInformation 
            target("ShowHealthInformation") = _formData.ShowHealthInformation 
            target("ShowBeneficiariesInformation") = _formData.ShowBeneficiariesInformation 
            target("ShowPaymentInformation") = _formData.ShowPaymentInformation 
            target("ShowGeneral") = _formData.ShowGeneral 
            target("ShowBasicInformation") = _formData.ShowBasicInformation 
            target("FinalMessage") = _formData.FinalMessage 
            target("DireccionMostrar") = _formData.DireccionMostrar 
            target("CompleteCliename") = _formData.CompleteCliename 

        End If     
    End Sub
    
    Private Sub ExecuteActionsLoadForm()
                    Dim currentAction As String = SessionTrace("ActionsLoadForm")
                    
                    Try                          
                        Dim _formContext As New InMotionGIT.Common.Contracts.Context(LanguageHelper.CurrentCultureToLanguage, _formData.InternalId)
                        Dim messageAction As String = String.Empty
                        Dim lastURL As String = String.Empty
                        Dim isNullResult As Boolean = True 
                        Dim isFoundData As Boolean  = False  
                        Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
                        
                        ParametersToDictionary(parametersDictionary) 
                        
                        Dim WorkflowInArguments As New Dictionary(Of String, Object) 
 Dim WorkflowOutArguments As IDictionary(Of String, Object) 
   
                                                
                                    currentAction = SessionTrace("1. zone5.Visible = false, Coverages.Visible = true") 
            currentAction = SessionTrace("1.1. zone5.Visible = false...")
BehaviorShowControls("zone5,Hidden")
            currentAction = SessionTrace("1.2. Coverages.Visible = true...")
BehaviorShowControls("Coverages,Visible")

            currentAction = SessionTrace("2. _formData.RecoveryCaseIndicator = true...") 
 
            currentAction = SessionTrace("2.1. _formData.RecoveryCaseIndicator = true...")

 _formData.RecoveryCaseIndicator = true 

            currentAction = SessionTrace("3. Call Shared Function 'Retrieve Underwriting Case' with parameters (Case ID, Effective Date)") 
            Dim _UnderwritingCase_ec7f1d955e564ac0b3f91201bbb6fb6c As InMotionGIT.Underwriting.Contracts.UnderwritingCase 
            _UnderwritingCase_ec7f1d955e564ac0b3f91201bbb6fb6c = InMotionGIT.Underwriting.Proxy.Manager.Retrieve            (underwritingCaseID:=_formData.uwcaseid, atDate:=Date.Today) 
             
            _formData.UnderwritingCase = _UnderwritingCase_ec7f1d955e564ac0b3f91201bbb6fb6c 
            isNullResult = (IsNothing(_UnderwritingCase_ec7f1d955e564ac0b3f91201bbb6fb6c)) 

            currentAction = SessionTrace("4. _formData.RiskInformation = _formData.UnderwritingCase.RiskInfo...") 
 
            currentAction = SessionTrace("4.1. _formData.RiskInformation = _formData.UnderwritingCase.RiskInfo...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 

 _formData.RiskInformation = _formData.UnderwritingCase.RiskInformation 

            currentAction = SessionTrace("5. Call Function 'Amendment setup' with parameters (RiskInformation Object, Effective Date)") 
            Dim _RiskInformation_04051984577e444e8e5eb9c3794f7cea As InMotionGIT.Policy.Entity.Contracts.RiskInformation 
            _RiskInformation_04051984577e444e8e5eb9c3794f7cea = (New InMotionGIT.PolicyManager.Services.RiskManager).AmendmentSetup            (risk:=_formData.UnderwritingCase.RiskInformation, atDate:=Date.Today) 
             
            _formData.RiskInformation = _RiskInformation_04051984577e444e8e5eb9c3794f7cea 
            isNullResult = (IsNothing(_RiskInformation_04051984577e444e8e5eb9c3794f7cea)) 

            currentAction = SessionTrace("6. Call Shared Sub 'Clear Form Errors' without parameters") 
            
        _formData.Errors.Clear()
	_formContext.Errors.Clear()
     

            currentAction = SessionTrace("7. Call Shared Function 'Retrieve Client' with parameters (Client Identification)") 
            Dim _Client_a9ec74404cff4142b98a392cb9039473 As InMotionGIT.Client.Entity.Contracts.Client 
                      If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
                      If IsNothing(_formData.RiskInformation.PrimaryInsured) Then
              _formData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
          End If 
                      If IsNothing(_formData.RiskInformation.PrimaryInsured.Client) Then
              _formData.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
          End If 
            
      _Client_a9ec74404cff4142b98a392cb9039473 = (New InMotionGIT.Client.Services.ClientManager).Retrieve(clientId:=_formData.RiskInformation.PrimaryInsured.Client.ClientID, atDate:=Date.Today, childFilter:= "All")
      isNullResult = (IsNothing(_Client_a9ec74404cff4142b98a392cb9039473))
      isFoundData  = Not isNullResult
     
            _formData.RiskInformation.PrimaryInsured.Client = _Client_a9ec74404cff4142b98a392cb9039473 

            currentAction = SessionTrace("8. InsuredAmountForCalculation.Visible = true, InsuredAmountSelected.Visible = false") 
            currentAction = SessionTrace("8.1. InsuredAmountForCalculation.Visible = true...")
BehaviorShowControls("InsuredAmountForCalculation,Visible")
            currentAction = SessionTrace("8.2. InsuredAmountSelected.Visible = false...")
BehaviorShowControls("InsuredAmountSelected,Hidden")

            currentAction = SessionTrace("9. _formData.InsuredAmountSelected = _formData.RiskInformation.LifeLineO...") 
 
            currentAction = SessionTrace("9.1. _formData.InsuredAmountSelected = _formData.RiskInformation.LifeLineO...")

 _formData.InsuredAmountSelected = _formData.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation 
            currentAction = SessionTrace("9.2. _formData.InsuredAmount = _formData.RiskInformation.LifeLineO...")

 _formData.InsuredAmount = _formData.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation 
            currentAction = SessionTrace("9.3. _formData.eMail = _formData.RiskInformation.PrimaryIn...")

 _formData.eMail = _formData.RiskInformation.PrimaryInsured.Client.eMailAddressDefault 
            currentAction = SessionTrace("9.4. _formData.Currency = _formData.RiskInformation.Currency...")

 _formData.Currency = _formData.RiskInformation.Currency 

            currentAction = SessionTrace("10. _formData.ClientExistInDB = true...") 
 
            currentAction = SessionTrace("10.1. _formData.ClientExistInDB = true...")

 _formData.ClientExistInDB = true 

            currentAction = SessionTrace("11. uwcaseid.Visible = true") 
            currentAction = SessionTrace("11.1. uwcaseid.Visible = true...")
BehaviorShowControls("uwcaseid,Visible")

            currentAction = SessionTrace("12. Call 'Get the face amount of the Life policies of the insured person' workflow in Synchronous mode with tracking") 
            WorkflowInArguments = New Dictionary(Of String, Object)
            With WorkflowInArguments
                .Add("context", _formContext) 
                .Add("ClientID", _formData.RiskInformation.PrimaryInsured.Client.ClientID) 
                .Add("CurrencyID", _formData.Currency) 
                .Add("Amount", _formData.AccumulatedAmount) 
                .Add("ProcessDate", _formData.RiskInformation.EffectiveDate) 
            End With
            WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("GetFaceAmountOfLifePoliciesOfTheInsuredPerson", "a240a822-d493-4dff-a365-ccb17551e006", 2, WorkflowInArguments, True, True, Me.AppRelativeVirtualPath, _formData.InternalId)
             currentAction += " 'Mapping Outputs'" 
                _formData.RiskInformation.PrimaryInsured.Client.ClientID = WorkflowOutArguments("ClientID")
                _formData.Currency = WorkflowOutArguments("CurrencyID")
                _formData.AccumulatedAmount = WorkflowOutArguments("Amount")
                _formData.RiskInformation.EffectiveDate = WorkflowOutArguments("ProcessDate")

            currentAction = SessionTrace("13. If _formData.RiskInformation.Beneficiaries Not Is Null Or Not Empty  AND _formData.RiskInformation.Beneficiaries.Count <> 0 Then") 
If Not IsNothing(_formData.RiskInformation.Beneficiaries) AndAlso _formData.RiskInformation.Beneficiaries.Count <> 0 Then

            currentAction = SessionTrace("14. _formData.BeneficiaryType = 3...") 
 
            currentAction = SessionTrace("14.1. _formData.BeneficiaryType = 3...")

 _formData.BeneficiaryType = 3 

            End If
            currentAction = SessionTrace("15. If _formData.frompanel = True Then") 
If _formData.frompanel = True Then

            currentAction = SessionTrace("16. zone5.Visible = false") 
            currentAction = SessionTrace("16.1. zone5.Visible = false...")
BehaviorShowControls("zone5,Hidden")

            End If
            currentAction = SessionTrace("17. _formData.ConsumerInformation.CompanyId = 1...") 
 
            currentAction = SessionTrace("17.1. _formData.ConsumerInformation.CompanyId = 1...")
          If IsNothing(_formData.ConsumerInformation) Then
              _formData.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
          End If 

 _formData.ConsumerInformation.CompanyId = 1 
            currentAction = SessionTrace("17.2. _formData.ConsumerInformation.Country = 58...")
          If IsNothing(_formData.ConsumerInformation) Then
              _formData.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
          End If 

 _formData.ConsumerInformation.Country = 58 
            currentAction = SessionTrace("17.3. _formData.ConsumerInformation.Security.Usercode = _formData.UsercodeBO...")
          If IsNothing(_formData.ConsumerInformation) Then
              _formData.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
          End If 
          If IsNothing(_formData.ConsumerInformation.Security) Then
              _formData.ConsumerInformation.Security = New InMotionGIT.Common.Contracts.Process.SecurityInformation
          End If 

 _formData.ConsumerInformation.Security.Usercode = _formData.UsercodeBO 

            currentAction = SessionTrace("18. _formData.AddresseMailDLI = New InMotionGIT.AddressManager.Cont...") 
 
            currentAction = SessionTrace("18.1. _formData.AddresseMailDLI = New InMotionGIT.AddressManager.Cont...")
          If IsNothing(_formData.AddresseMailDLI) Then
              _formData.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
          End If 

 _formData.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI 
            currentAction = SessionTrace("18.2. _formData.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Cont...")
          If IsNothing(_formData.AddresseMailDLI) Then
              _formData.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
          End If 
          If IsNothing(_formData.AddresseMailDLI.eMailAddress) Then
              _formData.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Contract.General.eMailAddress
          End If 

 _formData.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Contract.General.eMailAddress 
            currentAction = SessionTrace("18.3. _formData.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Cont...")
          If IsNothing(_formData.AddresseMailDLI) Then
              _formData.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
          End If 
          If IsNothing(_formData.AddresseMailDLI.Address) Then
              _formData.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
          End If 

 _formData.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address 

            currentAction = SessionTrace("19. _formData.AddresseMailDLI.Address.RecordOwnerID = _formData.RiskInformation.PrimaryIn...") 
 
            currentAction = SessionTrace("19.1. _formData.AddresseMailDLI.Address.RecordOwnerID = _formData.RiskInformation.PrimaryIn...")
          If IsNothing(_formData.AddresseMailDLI) Then
              _formData.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
          End If 
          If IsNothing(_formData.AddresseMailDLI.Address) Then
              _formData.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
          End If 

 _formData.AddresseMailDLI.Address.RecordOwnerID = _formData.RiskInformation.PrimaryInsured.Client.ClientID 
            currentAction = SessionTrace("19.2. _formData.AddresseMailDLI.Address.RecordOwnerType = 1...")
          If IsNothing(_formData.AddresseMailDLI) Then
              _formData.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
          End If 
          If IsNothing(_formData.AddresseMailDLI.Address) Then
              _formData.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
          End If 
          If IsNothing(_formData.AddresseMailDLI.Address.RecordOwnerType) Then
              _formData.AddresseMailDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
          End If 

 _formData.AddresseMailDLI.Address.RecordOwnerType = 1 
            currentAction = SessionTrace("19.3. _formData.AddresseMailDLI.Address.AddressID = _formData.RiskInformation.PrimaryIn...")
          If IsNothing(_formData.AddresseMailDLI) Then
              _formData.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
          End If 
          If IsNothing(_formData.AddresseMailDLI.Address) Then
              _formData.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
          End If 

 _formData.AddresseMailDLI.Address.AddressID = _formData.RiskInformation.PrimaryInsured.Client.NADDRESSID 

            currentAction = SessionTrace("20. _formData.AddresseMailDLI.Address.RecordOwnerType = 1...") 
 
            currentAction = SessionTrace("20.1. _formData.AddresseMailDLI.Address.RecordOwnerType = 1...")
          If IsNothing(_formData.AddresseMailDLI) Then
              _formData.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
          End If 
          If IsNothing(_formData.AddresseMailDLI.Address) Then
              _formData.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
          End If 
          If IsNothing(_formData.AddresseMailDLI.Address.RecordOwnerType) Then
              _formData.AddresseMailDLI.Address.RecordOwnerType = New InMotionGIT.Common.Contracts.Enumerations.EnumRecordOwnerType
          End If 

 _formData.AddresseMailDLI.Address.RecordOwnerType = 1 
            currentAction = SessionTrace("20.2. _formData.AddresseMailDLI.Address.TypeOfAddress = 3...")
          If IsNothing(_formData.AddresseMailDLI) Then
              _formData.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
          End If 
          If IsNothing(_formData.AddresseMailDLI.Address) Then
              _formData.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
          End If 
          If IsNothing(_formData.AddresseMailDLI.Address.TypeOfAddress) Then
              _formData.AddresseMailDLI.Address.TypeOfAddress = New InMotionGIT.AddressManager.Contract.Enumerations.EnumTypeOfAddress
          End If 

 _formData.AddresseMailDLI.Address.TypeOfAddress = 3 
            currentAction = SessionTrace("20.3. _formData.AddresseMailDLI.Address.UserCompany.Code = 1...")
          If IsNothing(_formData.AddresseMailDLI) Then
              _formData.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
          End If 
          If IsNothing(_formData.AddresseMailDLI.Address) Then
              _formData.AddresseMailDLI.Address = New InMotionGIT.AddressManager.Contract.General.Address
          End If 
          If IsNothing(_formData.AddresseMailDLI.Address.UserCompany) Then
              _formData.AddresseMailDLI.Address.UserCompany = New InMotionGIT.Common.DataType.LookUpValueExtend
          End If 

 _formData.AddresseMailDLI.Address.UserCompany.Code = 1 


                        
                        currentAction = String.Empty
                         
                    Catch ex As Exception
                        InMotionGIT.Common.Helpers.LogHandler.ErrorLog(Page.AppRelativeVirtualPath, currentAction, ex)
						_formData.Errors.Add(New InMotionGIT.Common.Contracts.Errors.Error With {.Message = currentAction & " " & ex.Message, .Severity = InMotionGIT.Common.Contracts.Errors.Enumerations.EnumSeverity.Error})

                        If Request.QueryString("debug").IsNotEmpty Then
                            FormMessageLabel.Text = InMotionGIT.Common.Helpers.ExceptionHandlers.TraceInnerExceptionMessage(ex, True)
                            FormMessageLabel.ForeColor = Drawing.Color.Black
                            FormMessageLabel.Font.Bold = True
                            MessageTable.Visible = True
                        End If
                        
                    Finally                     
                        If _formData.Errors.Count > 0 Then
                            SetErrors(_formData.Errors)
                        End If
                        
                        If _formData.Errors.Count = 0 AndAlso Not String.IsNullOrEmpty(_webTransfer) Then
                            If Page.IsCallback Then
                                DevExpress.Web.ASPxClasses.ASPxWebControl.RedirectOnCallback(_webTransfer)
                            Else
                                Response.ClearHeaders()
                                Response.ClearContent()
                                Response.Redirect(_webTransfer)
                            End If
                        End If
                   End Try
               End Sub
    Private Sub ExecuteActionsInitializationForm()
                    Dim currentAction As String = SessionTrace("ActionsInitializationForm")
                    
                    Try                          
                        Dim _formContext As New InMotionGIT.Common.Contracts.Context(LanguageHelper.CurrentCultureToLanguage, _formData.InternalId)
                        Dim messageAction As String = String.Empty
                        Dim lastURL As String = String.Empty
                        Dim isNullResult As Boolean = True 
                        Dim isFoundData As Boolean  = False 
                        Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
                        
                        ParametersToDictionary(parametersDictionary)
                        Dim WorkflowInArguments As New Dictionary(Of String, Object) 
 Dim WorkflowOutArguments As IDictionary(Of String, Object) 
 Dim errors As InMotionGIT.Common.DataType.Notify
 
                        With parametersDictionary
    .Add("errors", errors)
End With

                                    currentAction = SessionTrace("1. _formData.PlanillaModificacion = 'NNCotizacionMiVidaValeEdit'...") 
 
            currentAction = SessionTrace("1.1. _formData.PlanillaModificacion = 'NNCotizacionMiVidaValeEdit'...")

 _formData.PlanillaModificacion = "NNCotizacionMiVidaValeEdit" 
            currentAction = SessionTrace("1.2. _formData.PlanillaVisualizacion = 'NNCotizacionMiVidaValeView'...")

 _formData.PlanillaVisualizacion = "NNCotizacionMiVidaValeView" 

            currentAction = SessionTrace("2. _formData.RecoveryCaseIndicator = false...") 
 
            currentAction = SessionTrace("2.1. _formData.RecoveryCaseIndicator = false...")

 _formData.RecoveryCaseIndicator = false 

            currentAction = SessionTrace("3. _formData.InRuleErros = False...") 
 
            currentAction = SessionTrace("3.1. _formData.InRuleErros = False...")

 _formData.InRuleErros = False 

            currentAction = SessionTrace("4. _formData.SendMailIndicator = True...") 
 
            currentAction = SessionTrace("4.1. _formData.SendMailIndicator = True...")

 _formData.SendMailIndicator = True 

            currentAction = SessionTrace("5. If _formData.uwcaseid <> '0' AND _formData.uwcaseid Not Is Null Or Not Empty  Then") 
If _formData.uwcaseid <> "0" AndAlso Not IsNothing(_formData.uwcaseid) Then

            currentAction = SessionTrace("6. _formData.RecoveryCaseIndicator = true...") 
 
            currentAction = SessionTrace("6.1. _formData.RecoveryCaseIndicator = true...")

 _formData.RecoveryCaseIndicator = true 

            currentAction = SessionTrace("7. Call 'Retrieve Case Information for Request of policy' workflow in Synchronous mode with tracking") 
            WorkflowInArguments = New Dictionary(Of String, Object)
            With WorkflowInArguments
                .Add("uwcaseid", _formData.uwcaseid) 
                .Add("ClientName", _formData.CompleteCliename) 
                .Add("StatusCase", _formData.StatusCase) 
                .Add("RiskInformation", _formData.RiskInformation) 
                .Add("Identifier", "MiVidaVale") 
                .Add("context", _formContext) 
            End With
            WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("RetrieveCaseInformationRequestPolicy", "3967f9a8-6bc2-41d6-8672-ad0ede452cf2", 10, WorkflowInArguments, True, True, Me.AppRelativeVirtualPath, _formData.InternalId)
             currentAction += " 'Mapping Outputs'" 
                _formData.uwcaseid = WorkflowOutArguments("uwcaseid")
                _formData.CompleteCliename = WorkflowOutArguments("ClientName")
                _formData.StatusCase = WorkflowOutArguments("StatusCase")
                _formData.RiskInformation = WorkflowOutArguments("RiskInformation")

            currentAction = SessionTrace("8. Call Shared Function 'Retrieve Client' with parameters (Client Identification)") 
            Dim _Client_36febce4b94b480cade977ffe525101c As InMotionGIT.Client.Entity.Contracts.Client 
                      If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
                      If IsNothing(_formData.RiskInformation.PrimaryInsured) Then
              _formData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
          End If 
                      If IsNothing(_formData.RiskInformation.PrimaryInsured.Client) Then
              _formData.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
          End If 
            
      _Client_36febce4b94b480cade977ffe525101c = (New InMotionGIT.Client.Services.ClientManager).Retrieve(clientId:=_formData.RiskInformation.PrimaryInsured.Client.ClientID, atDate:=Date.Today, childFilter:= "All")
      isNullResult = (IsNothing(_Client_36febce4b94b480cade977ffe525101c))
      isFoundData  = Not isNullResult
     
            _formData.RiskInformation.PrimaryInsured.Client = _Client_36febce4b94b480cade977ffe525101c 

            currentAction = SessionTrace("9. _formData.ClientIncluded = _formData.RiskInformation.PrimaryIn...") 
 
            currentAction = SessionTrace("9.1. _formData.ClientIncluded = _formData.RiskInformation.PrimaryIn...")
          If IsNothing(_formData.ClientIncluded) Then
              _formData.ClientIncluded = New InMotionGIT.Client.Entity.Contracts.Client
          End If 

 _formData.ClientIncluded = _formData.RiskInformation.PrimaryInsured.Client 

            currentAction = SessionTrace("10. _formData.InsuredAmountSelected = _formData.RiskInformation.LifeLineO...") 
 
            currentAction = SessionTrace("10.1. _formData.InsuredAmountSelected = _formData.RiskInformation.LifeLineO...")

 _formData.InsuredAmountSelected = _formData.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation 
            currentAction = SessionTrace("10.2. _formData.InsuredAmount = _formData.RiskInformation.LifeLineO...")

 _formData.InsuredAmount = _formData.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation 
            currentAction = SessionTrace("10.3. _formData.eMail = _formData.RiskInformation.PrimaryIn...")

 _formData.eMail = _formData.RiskInformation.PrimaryInsured.Client.eMailAddressDefault 
            currentAction = SessionTrace("10.4. _formData.Currency = _formData.RiskInformation.Currency...")

 _formData.Currency = _formData.RiskInformation.Currency 

            currentAction = SessionTrace("11. Acepto.Visible = true, Coverages.Visible = true") 
            currentAction = SessionTrace("11.1. Acepto.Visible = true...")
BehaviorShowControls("Acepto,Visible")
            currentAction = SessionTrace("11.2. Coverages.Visible = true...")
BehaviorShowControls("Coverages,Visible")

            currentAction = SessionTrace("12. _formData.ClientExistInDB = true...") 
 
            currentAction = SessionTrace("12.1. _formData.ClientExistInDB = true...")

 _formData.ClientExistInDB = true 

            currentAction = SessionTrace("13. uwcaseid.Visible = true") 
            currentAction = SessionTrace("13.1. uwcaseid.Visible = true...")
BehaviorShowControls("uwcaseid,Visible")

            currentAction = SessionTrace("14. _formData.StatusRun = true...") 
 
            currentAction = SessionTrace("14.1. _formData.StatusRun = true...")

 _formData.StatusRun = true 

        Else 
            currentAction = SessionTrace("15. Coverages.Visible = false, uwcaseid.Visible = false") 
            currentAction = SessionTrace("15.1. Coverages.Visible = false...")
BehaviorShowControls("Coverages,Hidden")
            currentAction = SessionTrace("15.2. uwcaseid.Visible = false...")
BehaviorShowControls("uwcaseid,Hidden")

            End If
            currentAction = SessionTrace("16. If _formData.StatusRun <> true Then") 
If _formData.StatusRun <> true Then

parametersDictionary("errors") = errors
            currentAction = SessionTrace("17. The message 'You are not authoriz...' will displayed as 'Splash'") 
            messageAction = "You are not authorized to execute this transaction" 
            ParametersToDictionary(parametersDictionary)
            messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary) 
            NNCotizacionMiVidaVale1BasicoTablePage.Visible = False 
            MessageTable.Visible = True 
            FormMessageLabel.Text = messageAction 

            currentAction = SessionTrace("18. _formData.ClienteIndicado = _formData.RiskInformation.PrimaryIn...") 
 
            currentAction = SessionTrace("18.1. _formData.ClienteIndicado = _formData.RiskInformation.PrimaryIn...")

 _formData.ClienteIndicado = _formData.RiskInformation.PrimaryInsured.Client.ClientID 

            End If
            currentAction = SessionTrace("19. Hide 'InsuredAmountForCalculation' control") 
        BehaviorShowControls("InsuredAmountForCalculation,Hidden")
            currentAction = SessionTrace("20. _formData.AccumulatedAmount = 0...") 
 
            currentAction = SessionTrace("20.1. _formData.AccumulatedAmount = 0...")

 _formData.AccumulatedAmount = 0 

            currentAction = SessionTrace("21. If _formData.ClientExistInDB = True Then") 
If _formData.ClientExistInDB = True Then

            currentAction = SessionTrace("22. Call 'Get the face amount of the Life policies of the insured person' workflow in Synchronous mode with tracking") 
            WorkflowInArguments = New Dictionary(Of String, Object)
            With WorkflowInArguments
                .Add("context", _formContext) 
                .Add("ClientID", _formData.RiskInformation.PrimaryInsured.Client.ClientID) 
                .Add("CurrencyID", _formData.Currency) 
                .Add("Amount", _formData.AccumulatedAmount) 
                .Add("ProcessDate", _formData.RiskInformation.EffectiveDate) 
            End With
            WorkflowOutArguments = InMotionGIT.Workflow.Support.Runtime.DoWorkFromForm("GetFaceAmountOfLifePoliciesOfTheInsuredPerson", "a240a822-d493-4dff-a365-ccb17551e006", 2, WorkflowInArguments, True, True, Me.AppRelativeVirtualPath, _formData.InternalId)
             currentAction += " 'Mapping Outputs'" 
                _formData.RiskInformation.PrimaryInsured.Client.ClientID = WorkflowOutArguments("ClientID")
                _formData.Currency = WorkflowOutArguments("CurrencyID")
                _formData.AccumulatedAmount = WorkflowOutArguments("Amount")
                _formData.RiskInformation.EffectiveDate = WorkflowOutArguments("ProcessDate")

            currentAction = SessionTrace("23. _formData.CancelledPoliciesQuantity = 0...") 
 
            currentAction = SessionTrace("23.1. _formData.CancelledPoliciesQuantity = 0...")

 _formData.CancelledPoliciesQuantity = 0 

currentAction = SessionTrace("24. SELECT CERTIFICAT.SCERTYPE, CERTIFICAT.NBRANCH, CERTIFICAT.NPRODUCT FROM CERTIFICAT... WHERE CERTIFICAT.SCERTYPE = 2 AND CERTIFICAT.SSTATUSVA <> 3 AND CERTIFICAT.NNULLCODE <> 2 AND )") 
            isFoundData = False 
            With New DataManagerFactory("SELECT DISTINCT COUNT(CERTIFICAT.NPOLICY) NPOLICY FROM CERTIFICAT CERTIFICAT JOIN ROLES ROLES ON ROLES.SCERTYPE = CERTIFICAT.SCERTYPE  AND ROLES.NBRANCH = CERTIFICAT.NBRANCH  AND ROLES.NPRODUCT = CERTIFICAT.NPRODUCT  AND ROLES.NPOLICY = CERTIFICAT.NPOLICY  AND ROLES.NCERTIF = CERTIFICAT.NCERTIF  WHERE CERTIFICAT.SCERTYPE = '2' AND CERTIFICAT.SSTATUSVA <> '3' AND ROLES.NROLE = 2 AND ROLES.SCLIENT = @:ROLESSCLIENT3 AND (CERTIFICAT.NNULLCODE <> 2 AND CERTIFICAT.NNULLCODE <> 3 AND CERTIFICAT.NNULLCODE <> 0 AND CERTIFICAT.NNULLCODE IS NOT NULL)", "CERTIFICAT", "Linked.LatCombined")
             .AddParameter("ROLESSCLIENT3", DbType.AnsiStringFixedLength, 14, (_formData.RiskInformation.PrimaryInsured.Client.ClientID = String.Empty), _formData.RiskInformation.PrimaryInsured.Client.ClientID)
 
             _formData.CancelledPoliciesQuantity = .QueryExecuteScalarToInteger()  
        End With

            currentAction = SessionTrace("25. _formData.OtherPoliciesSameRiskQuantity = 0...") 
 
            currentAction = SessionTrace("25.1. _formData.OtherPoliciesSameRiskQuantity = 0...")

 _formData.OtherPoliciesSameRiskQuantity = 0 

currentAction = SessionTrace("26. SELECT CERTIFICAT.SCERTYPE, CERTIFICAT.NBRANCH, CERTIFICAT.NPRODUCT FROM CERTIFICAT... WHERE CERTIFICAT.SCERTYPE = 2 AND CERTIFICAT.SSTATUSVA <> 3 AND CERTIFICAT.NBRANCH = _formData.RiskInformation.LineOfBusiness AND )") 
            isFoundData = False 
            With New DataManagerFactory("SELECT DISTINCT COUNT(CERTIFICAT.NPOLICY) NPOLICY FROM CERTIFICAT CERTIFICAT JOIN ROLES ROLES ON ROLES.SCERTYPE = CERTIFICAT.SCERTYPE  AND ROLES.NBRANCH = CERTIFICAT.NBRANCH  AND ROLES.NPRODUCT = CERTIFICAT.NPRODUCT  AND ROLES.NPOLICY = CERTIFICAT.NPOLICY  AND ROLES.NCERTIF = CERTIFICAT.NCERTIF  WHERE CERTIFICAT.SCERTYPE = '2' AND CERTIFICAT.SSTATUSVA <> '3' AND ROLES.NROLE = 2 AND ROLES.SCLIENT = @:ROLESSCLIENT3 AND CERTIFICAT.NBRANCH = @:CERTIFICATNBRANCH4 AND CERTIFICAT.NNULLCODE IS NULL", "CERTIFICAT", "Linked.LatCombined")
             .AddParameter("ROLESSCLIENT3", DbType.AnsiStringFixedLength, 14, (_formData.RiskInformation.PrimaryInsured.Client.ClientID = String.Empty), _formData.RiskInformation.PrimaryInsured.Client.ClientID)
.AddParameter("CERTIFICATNBRANCH4", DbType.Int32, 5, False, _formData.RiskInformation.LineOfBusiness)
 
             _formData.OtherPoliciesSameRiskQuantity = .QueryExecuteScalarToInteger()  
        End With

            currentAction = SessionTrace("27. If (_formData.InRuleErros = True) Then") 
If (_formData.InRuleErros = True) Then

parametersDictionary("errors") = errors
            currentAction = SessionTrace("28. The message 'Existe(n) poliza(s) ...' will displayed as 'Popup'") 
            messageAction = "Existe(n) poliza(s) anulada(s) para el cliente." 
            ParametersToDictionary(parametersDictionary)
            messageAction = InMotionGIT.FrontOffice.Proxy.Helpers.Email.Process(messageAction, parametersDictionary) 
            ShowWindowPopupMessage(messageAction) 

            End If
            End If
            currentAction = SessionTrace("29. If _formData.ClientExistInDB = false Then") 
If _formData.ClientExistInDB = false Then

            currentAction = SessionTrace("30. _formData.RiskInformation.PrimaryInsured.Client = Nothing...") 
 
            currentAction = SessionTrace("30.1. _formData.RiskInformation.PrimaryInsured.Client = Nothing...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured) Then
              _formData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured.Client) Then
              _formData.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
          End If 

 _formData.RiskInformation.PrimaryInsured.Client = Nothing 

            currentAction = SessionTrace("31. _formData.RiskInformation.PrimaryInsured.Client.NADDRESSID = 0...") 
 
            currentAction = SessionTrace("31.1. _formData.RiskInformation.PrimaryInsured.Client.NADDRESSID = 0...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured) Then
              _formData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured.Client) Then
              _formData.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
          End If 

 _formData.RiskInformation.PrimaryInsured.Client.NADDRESSID = 0 

        Else 
            currentAction = SessionTrace("32. Call Shared Function 'Retrieve Client' with parameters (Client Identification)") 
            Dim _ClientIncluded_4e10dc7d7e8748858ad700dac37d61bb As InMotionGIT.Client.Entity.Contracts.Client 
            
      _ClientIncluded_4e10dc7d7e8748858ad700dac37d61bb = (New InMotionGIT.Client.Services.ClientManager).Retrieve(clientId:=_formData.RiskInformation.PrimaryInsured.Client.ClientID, atDate:=Date.Today, childFilter:= "All")
      isNullResult = (IsNothing(_ClientIncluded_4e10dc7d7e8748858ad700dac37d61bb))
      isFoundData  = Not isNullResult
     
            _formData.ClientIncluded = _ClientIncluded_4e10dc7d7e8748858ad700dac37d61bb 

            currentAction = SessionTrace("33. Cotizar.Enabled = true") 
            currentAction = SessionTrace("33.1. Cotizar.Enabled = true...")
BehaviorShowControls("Cotizar,Enabled")

            End If
            currentAction = SessionTrace("34. If _formData.ClientExistInDB = true Then") 
If _formData.ClientExistInDB = true Then

            currentAction = SessionTrace("35. If _formData.RiskInformation.PrimaryInsured.Client.BirthDate Is Null Or Empty '' Then") 
If IsNothing(_formData.RiskInformation.PrimaryInsured.Client.BirthDate) OrElse _formData.RiskInformation.PrimaryInsured.Client.BirthDate = Date.MinValue Then

            currentAction = SessionTrace("36. Enable 'Fecha de nacimiento' control") 
        BehaviorShowControls("BirthDate,Enabled")
            currentAction = SessionTrace("37. _formData.RiskInformation.PrimaryInsured.Client.IsDirty = True...") 
 
            currentAction = SessionTrace("37.1. _formData.RiskInformation.PrimaryInsured.Client.IsDirty = True...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured) Then
              _formData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured.Client) Then
              _formData.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
          End If 

 _formData.RiskInformation.PrimaryInsured.Client.IsDirty = True 

        Else 
            currentAction = SessionTrace("38. BirthDate.Enabled = false") 
            currentAction = SessionTrace("38.1. BirthDate.Enabled = false...")
BehaviorShowControls("BirthDate,Disabled")

            End If
            End If
            currentAction = SessionTrace("39. If _formData.ClientExistInDB = true Then") 
If _formData.ClientExistInDB = true Then

            currentAction = SessionTrace("40. If _formData.RiskInformation.PrimaryInsured.Client.Gender Is Null Or Empty '' OR _formData.RiskInformation.PrimaryInsured.Client.Gender = 3 Then") 
If String.IsNullOrEmpty(_formData.RiskInformation.PrimaryInsured.Client.Gender) OrElse _formData.RiskInformation.PrimaryInsured.Client.Gender = 3 Then

            currentAction = SessionTrace("41. Enable 'Sexo' control") 
        BehaviorShowControls("Gender,Enabled")
            currentAction = SessionTrace("42. _formData.RiskInformation.PrimaryInsured.Client.IsDirty = True...") 
 
            currentAction = SessionTrace("42.1. _formData.RiskInformation.PrimaryInsured.Client.IsDirty = True...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured) Then
              _formData.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
          End If 
          If IsNothing(_formData.RiskInformation.PrimaryInsured.Client) Then
              _formData.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
          End If 

 _formData.RiskInformation.PrimaryInsured.Client.IsDirty = True 

        Else 
            currentAction = SessionTrace("43. Gender.Enabled = false") 
            currentAction = SessionTrace("43.1. Gender.Enabled = false...")
BehaviorShowControls("Gender,Disabled")

            End If
            End If
            currentAction = SessionTrace("44. If _formData.PlanType = 1 Then") 
If _formData.PlanType = 1 Then

            currentAction = SessionTrace("45. Show 'InsuredAmountSelected' control") 
        BehaviorShowControls("InsuredAmountSelected,Visible")
            currentAction = SessionTrace("46. _formData.InsuredAmountSelected = 10000...") 
 
            currentAction = SessionTrace("46.1. _formData.InsuredAmountSelected = 10000...")

 _formData.InsuredAmountSelected = 10000 

            currentAction = SessionTrace("47. _formData.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation = 10000...") 
 
            currentAction = SessionTrace("47.1. _formData.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation = 10000...")
          If IsNothing(_formData.RiskInformation) Then
              _formData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
          End If 
          If IsNothing(_formData.RiskInformation.LifeLineOfBusiness) Then
              _formData.RiskInformation.LifeLineOfBusiness = New InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness
          End If 

 _formData.RiskInformation.LifeLineOfBusiness.InsuredAmountForCalculation = 10000 

            currentAction = SessionTrace("48. Hide 'Suma asegurada' control") 
        BehaviorShowControls("InsuredAmountForCalculation,Hidden")
        Else 
            currentAction = SessionTrace("49. Show 'Suma asegurada' control") 
        BehaviorShowControls("InsuredAmountForCalculation,Visible")
            currentAction = SessionTrace("50. Hide 'InsuredAmountSelected' control") 
        BehaviorShowControls("InsuredAmountSelected,Hidden")
            End If
            currentAction = SessionTrace("51. _formData.InRuleErros = False...") 
 
            currentAction = SessionTrace("51.1. _formData.InRuleErros = False...")

 _formData.InRuleErros = False 

            currentAction = SessionTrace("52. _formData.FormStatus = 0...") 
 
            currentAction = SessionTrace("52.1. _formData.FormStatus = 0...")

 _formData.FormStatus = 0 

            currentAction = SessionTrace("53. _formData.OnLinePrint = 0...") 
 
            currentAction = SessionTrace("53.1. _formData.OnLinePrint = 0...")

 _formData.OnLinePrint = 0 

            currentAction = SessionTrace("54. _formData.OnLinePrintIndicator = true...") 
 
            currentAction = SessionTrace("54.1. _formData.OnLinePrintIndicator = true...")

 _formData.OnLinePrintIndicator = true 

            currentAction = SessionTrace("55. _formData.PreviousPayment = false...") 
 
            currentAction = SessionTrace("55.1. _formData.PreviousPayment = false...")

 _formData.PreviousPayment = false 

            currentAction = SessionTrace("56. _formData.ConsumerInformation = New InMotionGIT.Common.Contracts.Pr...") 
 
            currentAction = SessionTrace("56.1. _formData.ConsumerInformation = New InMotionGIT.Common.Contracts.Pr...")
          If IsNothing(_formData.ConsumerInformation) Then
              _formData.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
          End If 

 _formData.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation 
            currentAction = SessionTrace("56.2. _formData.ConsumerInformation.CompanyId = 1...")
          If IsNothing(_formData.ConsumerInformation) Then
              _formData.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
          End If 

 _formData.ConsumerInformation.CompanyId = 1 
            currentAction = SessionTrace("56.3. _formData.ConsumerInformation.Security.Usercode = _formData.UsercodeBO...")
          If IsNothing(_formData.ConsumerInformation) Then
              _formData.ConsumerInformation = New InMotionGIT.Common.Contracts.Process.ConsumerInformation
          End If 
          If IsNothing(_formData.ConsumerInformation.Security) Then
              _formData.ConsumerInformation.Security = New InMotionGIT.Common.Contracts.Process.SecurityInformation
          End If 

 _formData.ConsumerInformation.Security.Usercode = _formData.UsercodeBO 

            currentAction = SessionTrace("57. _formData.VerificarCuestionariosIndicador = true...") 
 
            currentAction = SessionTrace("57.1. _formData.VerificarCuestionariosIndicador = true...")

 _formData.VerificarCuestionariosIndicador = true 

            currentAction = SessionTrace("58. If _formData.AccumulatedAmount <> 0 AND _formData.AccumulatedAmount Not Is Null Or Not Empty  Then") 
If _formData.AccumulatedAmount <> 0 AndAlso Not IsNothing(_formData.AccumulatedAmount) Then

            currentAction = SessionTrace("59. zone3Cumulo.Visible = true") 
            currentAction = SessionTrace("59.1. zone3Cumulo.Visible = true...")
BehaviorShowControls("zone3Cumulo,Visible")

        Else 
            currentAction = SessionTrace("60. zone3Cumulo.Visible = false") 
            currentAction = SessionTrace("60.1. zone3Cumulo.Visible = false...")
BehaviorShowControls("zone3Cumulo,Hidden")

            End If
currentAction = SessionTrace("61. NNCotizacionMiVidaValeSecuencia.StatusRun = StatusRun...") 
NNCotizacionMiVidaValeSecuencia.FormData.StatusRun = FormData.StatusRun
NNCotizacionMiVidaValeSecuencia.FormData.ShowAdditionalInformation = FormData.ShowAdditionalInformation
NNCotizacionMiVidaValeSecuencia.FormData.ShowHealthInformation = FormData.ShowHealthInformation
NNCotizacionMiVidaValeSecuencia.FormData.ShowBeneficiariesInformation = FormData.ShowBeneficiariesInformation
NNCotizacionMiVidaValeSecuencia.FormData.ShowPaymentInformation = FormData.ShowPaymentInformation
NNCotizacionMiVidaValeSecuencia.FormData.ShowBasicInformation = FormData.ShowBasicInformation
NNCotizacionMiVidaValeSecuencia.FormData.RiskInformation = FormData.RiskInformation
NNCotizacionMiVidaValeSecuencia.FormData.uwcaseid = FormData.uwcaseid
NNCotizacionMiVidaValeSecuencia.FormData.uwreqid = FormData.uwreqid
NNCotizacionMiVidaValeSecuencia.FormData.PlanType = FormData.PlanType
NNCotizacionMiVidaValeSecuencia.FormData.ClientExistInDB = FormData.ClientExistInDB
NNCotizacionMiVidaValeSecuencia.FormData.eMail = FormData.eMail
NNCotizacionMiVidaValeSecuencia.FormData.Currency = FormData.Currency
NNCotizacionMiVidaValeSecuencia.FormData.Age = FormData.Age
NNCotizacionMiVidaValeSecuencia.FormData.QuestionnairesAvailable = FormData.QuestionnairesAvailable
NNCotizacionMiVidaValeSecuencia.FormData.ProducerClientID = FormData.ProducerClientID
NNCotizacionMiVidaValeSecuencia.FormData.BeneficiaryType = FormData.BeneficiaryType
NNCotizacionMiVidaValeSecuencia.FormData.SendMailIndicator = FormData.SendMailIndicator
NNCotizacionMiVidaValeSecuencia.FormData.MailToProducerIndicator = FormData.MailToProducerIndicator
NNCotizacionMiVidaValeSecuencia.FormData.InRuleErros = FormData.InRuleErros
NNCotizacionMiVidaValeSecuencia.FormData.AccumulatedAmount = FormData.AccumulatedAmount
NNCotizacionMiVidaValeSecuencia.FormData.CancelledPoliciesQuantity = FormData.CancelledPoliciesQuantity
NNCotizacionMiVidaValeSecuencia.FormData.OtherPoliciesSameRiskQuantity = FormData.OtherPoliciesSameRiskQuantity
NNCotizacionMiVidaValeSecuencia.FormData.ConsumerInformation = FormData.ConsumerInformation
NNCotizacionMiVidaValeSecuencia.FormData.OnLinePrintIndicator = FormData.OnLinePrintIndicator
NNCotizacionMiVidaValeSecuencia.FormData.OnLinePrintResult = FormData.OnLinePrintResult
NNCotizacionMiVidaValeSecuencia.FormData.PolicyDocument = FormData.PolicyDocument
NNCotizacionMiVidaValeSecuencia.FormData.ErrorsFound = FormData.ErrorsFound
NNCotizacionMiVidaValeSecuencia.FormData.ReportURL = FormData.ReportURL
NNCotizacionMiVidaValeSecuencia.FormData.FormStatus = FormData.FormStatus
NNCotizacionMiVidaValeSecuencia.FormData.OnLinePrint = FormData.OnLinePrint
NNCotizacionMiVidaValeSecuencia.FormData.StatusCase = FormData.StatusCase
NNCotizacionMiVidaValeSecuencia.FormData.RecoveryCaseIndicator = FormData.RecoveryCaseIndicator
NNCotizacionMiVidaValeSecuencia.FormData.AnswerDiabetes = FormData.AnswerDiabetes
NNCotizacionMiVidaValeSecuencia.FormData.AnswerHeart = FormData.AnswerHeart
NNCotizacionMiVidaValeSecuencia.FormData.AnswerCancer = FormData.AnswerCancer
NNCotizacionMiVidaValeSecuencia.FormData.PaymentMethod = FormData.PaymentMethod
NNCotizacionMiVidaValeSecuencia.FormData.ProductMasterDescription = FormData.ProductMasterDescription
NNCotizacionMiVidaValeSecuencia.FormData.PreviousPayment = FormData.PreviousPayment
NNCotizacionMiVidaValeSecuencia.FormData.ClienteIndicado = FormData.ClienteIndicado
NNCotizacionMiVidaValeSecuencia.FormData.ServiceResultData = FormData.ServiceResultData
NNCotizacionMiVidaValeSecuencia.FormData.CompleteAddress = FormData.CompleteAddress
NNCotizacionMiVidaValeSecuencia.FormData.AddresseMailDLI = FormData.AddresseMailDLI
NNCotizacionMiVidaValeSecuencia.FormData.VerificarCuestionariosIndicador = FormData.VerificarCuestionariosIndicador
NNCotizacionMiVidaValeSecuencia.FormData.PlanillaModificacion = FormData.PlanillaModificacion
NNCotizacionMiVidaValeSecuencia.FormData.PlanillaVisualizacion = FormData.PlanillaVisualizacion
NNCotizacionMiVidaValeSecuencia.FormData.ProductDescription = FormData.ProductDescription
NNCotizacionMiVidaValeSecuencia.FormData.PrimaTotalAnual = FormData.PrimaTotalAnual
NNCotizacionMiVidaValeSecuencia.FormData.PrimaRecibo = FormData.PrimaRecibo
NNCotizacionMiVidaValeSecuencia.FormData.MonedaRecibo = FormData.MonedaRecibo
NNCotizacionMiVidaValeSecuencia.FormData.CurrentYear = FormData.CurrentYear
NNCotizacionMiVidaValeSecuencia.FormData.ClientIncluded = FormData.ClientIncluded
NNCotizacionMiVidaValeSecuencia.FormData.IsAnonymous = FormData.IsAnonymous
NNCotizacionMiVidaValeSecuencia.FormData.UnderwritingCase = FormData.UnderwritingCase
NNCotizacionMiVidaValeSecuencia.FormData.LookUpValue = FormData.LookUpValue
NNCotizacionMiVidaValeSecuencia.FormData.LookUpValueCollection = FormData.LookUpValueCollection
NNCotizacionMiVidaValeSecuencia.FormData.BeneficiariosMail = FormData.BeneficiariosMail
NNCotizacionMiVidaValeSecuencia.FormData.Codigo = FormData.Codigo
NNCotizacionMiVidaValeSecuencia.FormData.Descripcion = FormData.Descripcion
NNCotizacionMiVidaValeSecuencia.FormData.FondosMail = FormData.FondosMail
NNCotizacionMiVidaValeSecuencia.FormData.UsercodeBO = FormData.UsercodeBO
NNCotizacionMiVidaValeSecuencia.FormData.UsercodeFASI = FormData.UsercodeFASI
NNCotizacionMiVidaValeSecuencia.FormData.QRegistros = FormData.QRegistros
NNCotizacionMiVidaValeSecuencia.FormData.frompanel = FormData.frompanel
NNCotizacionMiVidaValeSecuencia.FormData.ShowGeneral = FormData.ShowGeneral
NNCotizacionMiVidaValeSecuencia.FormData.InsuredAmount = FormData.InsuredAmount
NNCotizacionMiVidaValeSecuencia.FormData.InsuredAmountSelected = FormData.InsuredAmountSelected
NNCotizacionMiVidaValeSecuencia.FormData.ValorAcumulado = FormData.ValorAcumulado
NNCotizacionMiVidaValeSecuencia.FormData.FinalMessage = FormData.FinalMessage
NNCotizacionMiVidaValeSecuencia.FormData.DireccionMostrar = FormData.DireccionMostrar

            currentAction = SessionTrace("62. If _formData.ShowBasicInformation = true Then") 
If _formData.ShowBasicInformation = true Then

            currentAction = SessionTrace("63. zone12IB.Enabled = false, zone5.Visible = false, Coverages.Visible = true...") 
            currentAction = SessionTrace("63.1. zone12IB.Enabled = false...")
BehaviorShowControls("zone12IB,Disabled")
            currentAction = SessionTrace("63.2. zone5.Visible = false...")
BehaviorShowControls("zone5,Hidden")
            currentAction = SessionTrace("63.3. Coverages.Visible = true...")
BehaviorShowControls("Coverages,Visible")
            currentAction = SessionTrace("63.4. NNCotizacionMiVidaValeSecuencia.button32.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button32,Visible")

            End If
            currentAction = SessionTrace("64. If _formData.ShowAdditionalInformation = true Then") 
If _formData.ShowAdditionalInformation = true Then

            currentAction = SessionTrace("65. NNCotizacionMiVidaValeSecuencia.button32.Visible = true, NNCotizacionMiVidaValeSecuencia.button34.Visible = true") 
            currentAction = SessionTrace("65.1. NNCotizacionMiVidaValeSecuencia.button32.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button32,Visible")
            currentAction = SessionTrace("65.2. NNCotizacionMiVidaValeSecuencia.button34.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button34,Visible")

            End If
            currentAction = SessionTrace("66. If _formData.ShowHealthInformation = true Then") 
If _formData.ShowHealthInformation = true Then

            currentAction = SessionTrace("67. NNCotizacionMiVidaValeSecuencia.button34.Visible = true, NNCotizacionMiVidaValeSecuencia.button35.Visible = true") 
            currentAction = SessionTrace("67.1. NNCotizacionMiVidaValeSecuencia.button34.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button34,Visible")
            currentAction = SessionTrace("67.2. NNCotizacionMiVidaValeSecuencia.button35.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button35,Visible")

            End If
            currentAction = SessionTrace("68. If _formData.ShowBeneficiariesInformation = true Then") 
If _formData.ShowBeneficiariesInformation = true Then

            currentAction = SessionTrace("69. NNCotizacionMiVidaValeSecuencia.button35.Visible = true, NNCotizacionMiVidaValeSecuencia.button36.Visible = true") 
            currentAction = SessionTrace("69.1. NNCotizacionMiVidaValeSecuencia.button35.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button35,Visible")
            currentAction = SessionTrace("69.2. NNCotizacionMiVidaValeSecuencia.button36.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button36,Visible")

            currentAction = SessionTrace("70. NNCotizacionMiVidaValeSecuencia.button19.Visible = true, NNCotizacionMiVidaValeSecuencia.EnviarCotizacionEmail.Visible = true, NNCotizacionMiVidaValeSecuencia.eMail.Visible = true") 
            currentAction = SessionTrace("70.1. NNCotizacionMiVidaValeSecuencia.button19.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button19,Visible")
            currentAction = SessionTrace("70.2. NNCotizacionMiVidaValeSecuencia.EnviarCotizacionEmail.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("EnviarCotizacionEmail,Visible")
            currentAction = SessionTrace("70.3. NNCotizacionMiVidaValeSecuencia.eMail.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("eMail,Visible")

            End If
            currentAction = SessionTrace("71. If _formData.ShowPaymentInformation = true Then") 
If _formData.ShowPaymentInformation = true Then

            currentAction = SessionTrace("72. NNCotizacionMiVidaValeSecuencia.button36.Visible = true") 
            currentAction = SessionTrace("72.1. NNCotizacionMiVidaValeSecuencia.button36.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button36,Visible")

            currentAction = SessionTrace("73. NNCotizacionMiVidaValeSecuencia.button19.Visible = true, NNCotizacionMiVidaValeSecuencia.EnviarCotizacionEmail.Visible = true, NNCotizacionMiVidaValeSecuencia.eMail.Visible = true") 
            currentAction = SessionTrace("73.1. NNCotizacionMiVidaValeSecuencia.button19.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button19,Visible")
            currentAction = SessionTrace("73.2. NNCotizacionMiVidaValeSecuencia.EnviarCotizacionEmail.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("EnviarCotizacionEmail,Visible")
            currentAction = SessionTrace("73.3. NNCotizacionMiVidaValeSecuencia.eMail.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("eMail,Visible")

            End If
            currentAction = SessionTrace("74. If _formData.ShowGeneral = true Then") 
If _formData.ShowGeneral = true Then

            currentAction = SessionTrace("75. NNCotizacionMiVidaValeSecuencia.button19.Visible = true, NNCotizacionMiVidaValeSecuencia.EnviarCotizacionEmail.Visible = true, NNCotizacionMiVidaValeSecuencia.eMail.Visible = true...") 
            currentAction = SessionTrace("75.1. NNCotizacionMiVidaValeSecuencia.button19.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button19,Visible")
            currentAction = SessionTrace("75.2. NNCotizacionMiVidaValeSecuencia.EnviarCotizacionEmail.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("EnviarCotizacionEmail,Visible")
            currentAction = SessionTrace("75.3. NNCotizacionMiVidaValeSecuencia.eMail.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("eMail,Visible")
            currentAction = SessionTrace("75.4. NNCotizacionMiVidaValeSecuencia.Accept.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("Accept,Visible")
            currentAction = SessionTrace("75.5. NNCotizacionMiVidaValeSecuencia.OnLinePrintIndicator.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("OnLinePrintIndicator,Visible")

            End If
            currentAction = SessionTrace("76. If _formData.ErrorsFound = true Then") 
If _formData.ErrorsFound = true Then

            currentAction = SessionTrace("77. FinalMessageLabel.Visible = true") 
            currentAction = SessionTrace("77.1. FinalMessageLabel.Visible = true...")
BehaviorShowControls("FinalMessageLabel,Visible")

            currentAction = SessionTrace("78. _formData.ErrorsFound = false...") 
 
            currentAction = SessionTrace("78.1. _formData.ErrorsFound = false...")

 _formData.ErrorsFound = false 

        Else 
            currentAction = SessionTrace("79. FinalMessageLabel.Visible = false") 
            currentAction = SessionTrace("79.1. FinalMessageLabel.Visible = false...")
BehaviorShowControls("FinalMessageLabel,Hidden")

            End If
            currentAction = SessionTrace("80. If _formData.frompanel = true Then") 
If _formData.frompanel = true Then

            currentAction = SessionTrace("81. Coverages.Visible = true, zone5.Visible = false, zone39.Enabled = false") 
            currentAction = SessionTrace("81.1. Coverages.Visible = true...")
BehaviorShowControls("Coverages,Visible")
            currentAction = SessionTrace("81.2. zone5.Visible = false...")
BehaviorShowControls("zone5,Hidden")
            currentAction = SessionTrace("81.3. zone39.Enabled = false...")
BehaviorShowControls("zone39,Disabled")

            currentAction = SessionTrace("82. NNCotizacionMiVidaValeSecuencia.button32.Visible = true, NNCotizacionMiVidaValeSecuencia.button34.Visible = true, NNCotizacionMiVidaValeSecuencia.button35.Visible = true...") 
            currentAction = SessionTrace("82.1. NNCotizacionMiVidaValeSecuencia.button32.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button32,Visible")
            currentAction = SessionTrace("82.2. NNCotizacionMiVidaValeSecuencia.button34.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button34,Visible")
            currentAction = SessionTrace("82.3. NNCotizacionMiVidaValeSecuencia.button35.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button35,Visible")
            currentAction = SessionTrace("82.4. NNCotizacionMiVidaValeSecuencia.button36.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button36,Visible")
            currentAction = SessionTrace("82.5. NNCotizacionMiVidaValeSecuencia.button19.Visible = false...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button19,Hidden")
            currentAction = SessionTrace("82.6. NNCotizacionMiVidaValeSecuencia.EnviarCotizacionEmail.Visible = false...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("EnviarCotizacionEmail,Hidden")
            currentAction = SessionTrace("82.7. NNCotizacionMiVidaValeSecuencia.eMail.Visible = false...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("eMail,Hidden")
            currentAction = SessionTrace("82.8. NNCotizacionMiVidaValeSecuencia.Accept.Visible = false...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("Accept,Hidden")
            currentAction = SessionTrace("82.9. NNCotizacionMiVidaValeSecuencia.OnLinePrintIndicator.Visible = false...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("OnLinePrintIndicator,Hidden")
            currentAction = SessionTrace("82.10. NNCotizacionMiVidaValeSecuencia.btnSalirSinGuardar.Visible = false...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("btnSalirSinGuardar,Hidden")

            End If

                        
                        currentAction = String.Empty
                         
                    Catch ex As Exception
                        InMotionGIT.Common.Helpers.LogHandler.ErrorLog(Page.AppRelativeVirtualPath, currentAction, ex)
						_formData.Errors.Add(New InMotionGIT.Common.Contracts.Errors.Error With {.Message = currentAction & " " & ex.Message, .Severity = InMotionGIT.Common.Contracts.Errors.Enumerations.EnumSeverity.Error})

                        If Request.QueryString("debug").IsNotEmpty Then
                            FormMessageLabel.Text = InMotionGIT.Common.Helpers.ExceptionHandlers.TraceInnerExceptionMessage(ex, True)
                            FormMessageLabel.ForeColor = Drawing.Color.Black
                            FormMessageLabel.Font.Bold = True
                            MessageTable.Visible = True
                        End If
                        
                    Finally                     
                        If _formData.Errors.Count > 0 Then
                            SetErrors(_formData.Errors)
                        End If
                        
                        If _formData.Errors.Count = 0 AndAlso Not String.IsNullOrEmpty(_webTransfer) Then
                            If Page.IsCallback Then
                                DevExpress.Web.ASPxClasses.ASPxWebControl.RedirectOnCallback(_webTransfer)
                            Else
                                Response.ClearHeaders()
                                Response.ClearContent()
                                Response.Redirect(_webTransfer)
                            End If
                        End If
                   End Try
               End Sub
    

    
#End Region

#Region "Storage Data Methods"

    Private Sub StoreFormInformation()
      If Not IsNothing(_formData) Then

            If _foundData Then
                UpdateStorageData()
            Else
                InsertStorageData()
            End If
       End If
End Sub

    Private Function RetrieveFormInformation() As Boolean
        Dim result As Boolean = False
        Dim records As DataTable

        With New DataManagerFactory("SELECT Content FROM FrontOffice.DocumentCache WHERE FormId = @:FormId",
                                    "FrontOffice.DocumentCache", "FrontOfficeConnectionString")
                                    
            .AddParameter("FormId", DbType.AnsiStringFixedLength, 36, False, _FormID.Text)
            records = .QueryExecuteToTable(True)
        End With

        If records.Rows.Count > 0 Then
            result = True            
            _formData = Serialize.Deserialize(Of NNCotizacionMiVidaVale1BasicoParameter)(records.Rows(0).Item("Content"))
        End If
        
        Return result
    End Function

    Private Sub InsertStorageData()
        With New DataManagerFactory("INSERT INTO FrontOffice.DocumentCache (FormId, ModelId, UserId, Page, Content, CreationDate, UpdateDate) VALUES(@:FormId, @:ModelId, @:UserId, @:Page, @:Content, @:CreationDate, @:UpdateDate)",
                                    "FrontOffice.DocumentCache", "FrontOfficeConnectionString")
                                    
            .AddParameter("FormId", DbType.AnsiStringFixedLength, 36, False, _FormID.Text)
            .AddParameter("ModelId", DbType.AnsiStringFixedLength, 36, False, "48bf9625-f15e-44da-848c-12177547884f")
            .AddParameter("UserId", DbType.AnsiString, 256, False, UserInfo.UserName)
            .AddParameter("Page", DbType.AnsiString, 255, False, Me.AppRelativeVirtualPath)
            .AddParameter("Content", DbType.Xml, 1, False, Serialize.Serialize(Of NNCotizacionMiVidaVale1BasicoParameter)(_formData))
            .AddParameter("CreationDate", DbType.DateTime, 20, False, Now)
            .AddParameter("UpdateDate", DbType.DateTime, 20, False, Now)

            .CommandExecute()
        End With
    End Sub

    Private Sub UpdateStorageData()
        With New DataManagerFactory("UPDATE FrontOffice.DocumentCache SET ModelId = @:ModelId, UserId = @:UserId, Page = @:Page, Content = @:Content, UpdateDate = @:UpdateDate WHERE FormId = @:FormId",
                                    "FrontOffice.DocumentCache", "FrontOfficeConnectionString")
                                    
            .AddParameter("ModelId", DbType.AnsiStringFixedLength, 36, False, "48bf9625-f15e-44da-848c-12177547884f")
            .AddParameter("UserId", DbType.AnsiString, 256, False, UserInfo.UserName)
            .AddParameter("Page", DbType.AnsiString, 255, False, Me.AppRelativeVirtualPath)
            .AddParameter("Content", DbType.Xml, 1, False, Serialize.Serialize(Of NNCotizacionMiVidaVale1BasicoParameter)(_formData))
            .AddParameter("UpdateDate", DbType.DateTime, 20, False, Now)
            .AddParameter("FormId", DbType.AnsiStringFixedLength, 36, False, _FormID.Text)

            .CommandExecute()
        End With
    End Sub

#End Region




End Class

<Serializable()>
Public Class NNCotizacionMiVidaVale1BasicoParameter
    Inherits InMotionGIT.FrontOffice.Support.DataType.FormBase(Of  NNCotizacionMiVidaVale1BasicoParameter)

    ' Methods
    Public Sub New()
        MyBase.New()
    End Sub

    ' Properties
    Public Property RiskInformation As InMotionGIT.Policy.Entity.Contracts.RiskInformation
    Public Property uwcaseid As Int64
    Public Property uwreqid As Int64
    Public Property InsuredAmount As Decimal
    Public Property InsuredAmountSelected As Decimal
    Public Property PlanType As Int32
    Public Property ClientExistInDB As Boolean
    Public Property eMail As String
    Public Property Currency As Int32
    Public Property Age As Int32
    Public Property QuestionnairesAvailable As InMotionGIT.Questionnaires.QuestionnairesAvailable
    Public Property ProducerClientID As String
    Public Property BeneficiaryType As Int32
    Public Property SendMailIndicator As Boolean
    Public Property MailToProducerIndicator As Boolean
    Public Property InRuleErros As Boolean
    Public Property AccumulatedAmount As Decimal
    Public Property CancelledPoliciesQuantity As Int32
    Public Property OtherPoliciesSameRiskQuantity As Int32
    Public Property ConsumerInformation As InMotionGIT.Common.Contracts.Process.ConsumerInformation
    Public Property OnLinePrintIndicator As Boolean
    Public Property OnLinePrintResult As Int32
    Public Property PolicyDocument As String
    Public Property ErrorsFound As Boolean
    Public Property ReportURL As String
    Public Property FormStatus As Int32
    Public Property OnLinePrint As Int32
    Public Property StatusRun As Boolean
    Public Property StatusCase As Int32
    Public Property RecoveryCaseIndicator As Boolean
    Public Property AnswerDiabetes As String
    Public Property AnswerHeart As String
    Public Property AnswerCancer As String
    Public Property PaymentMethod As Int32
    Public Property ProductMasterDescription As String
    Public Property PreviousPayment As Boolean
    Public Property ClienteIndicado As String
    Public Property ServiceResultData As InMotionGIT.Common.Contracts.ServiceResultData
    Public Property CompleteAddress As String
    Public Property AddresseMailDLI As InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
    Public Property VerificarCuestionariosIndicador As Boolean
    Public Property PlanillaModificacion As String
    Public Property PlanillaVisualizacion As String
    Public Property ProductDescription As String
    Public Property PrimaTotalAnual As Decimal
    Public Property PrimaRecibo As Decimal
    Public Property MonedaRecibo As Int32
    Public Property CurrentYear As Int32
    Public Property ClientIncluded As InMotionGIT.Client.Entity.Contracts.Client
    Public Property IsAnonymous As Boolean
    Public Property UnderwritingCase As InMotionGIT.Underwriting.Contracts.UnderwritingCase
    Public Property ValorAcumulado As Decimal
    Public Property LookUpValue As InMotionGIT.Common.DataType.LookUpValue
    Public Property LookUpValueCollection As InMotionGIT.Common.DataType.LookUpValueCollection
    Public Property BeneficiariosMail As String
    Public Property Codigo As Int32
    Public Property Descripcion As String
    Public Property FondosMail As String
    Public Property UsercodeBO As Int32
    Public Property UsercodeFASI As Int32
    Public Property QRegistros As Int32
    Public Property frompanel As Boolean
    Public Property ShowAdditionalInformation As Boolean
    Public Property ShowHealthInformation As Boolean
    Public Property ShowBeneficiariesInformation As Boolean
    Public Property ShowPaymentInformation As Boolean
    Public Property ShowGeneral As Boolean
    Public Property ShowBasicInformation As Boolean
    Public Property FinalMessage As String
    Public Property DireccionMostrar As String
    Public Property CompleteCliename As String


End Class