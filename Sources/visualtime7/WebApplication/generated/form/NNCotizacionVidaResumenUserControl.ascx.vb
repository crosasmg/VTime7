'---------------------------------------------------------------------------------------------------
' <generated>
'     This code was generated by Form Designer Oracle v7.1.1 at 2018-09-14 model release 9
'     
'     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
' </generated>
'---------------------------------------------------------------------------------------------------
      
#Region "using"
    
Imports Artem.Google.UI
Imports DashboardBusiness.Helpers
Imports DevExpress.Web
Imports DevExpress.Web.ASPxClasses
Imports DevExpress.Web.ASPxEditors
Imports DevExpress.Web.ASPxGridView
Imports GIT.Core
Imports InMotionGIT.FrontOffice.Support.Enumerations
Imports InMotionGIT.FrontOffice.Support.Helpers.ControlHandler
Imports InMotionGIT.BarCode
Imports InMotionGIT.BarCode.Enumerations
Imports InMotionGIT.Common.Helpers
Imports InMotionGIT.Common.Proxy
Imports InMotionGIT.DatosNoEstruct.ContratoDeDatos.DTOs
Imports InMotionGIT.DatosNoEstruct.ContratoDeDatos.Modelo
Imports System.IO
Imports InMotionGIT.FrontOffice.Support
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Data
Imports System.Data.Common
Imports System.Globalization
Imports System.Linq
Imports System.Threading.Thread
Imports System.Xml.Linq
Imports System.Net


#End Region

Partial Public Class NNCotizacionVidaResumenUserControl
    Inherits GIT.Core.UserControlBase
    Implements Dropthings.Widget.Framework.IWidget

#Region "IWidget Members"
    
    
    

    Public Sub Closed() Implements Dropthings.Widget.Framework.IWidget.Closed
    End Sub

    Public Sub HideSettings() Implements Dropthings.Widget.Framework.IWidget.HideSettings

    End Sub

    Public Sub Init1(host As Dropthings.Widget.Framework.IWidgetHost) Implements Dropthings.Widget.Framework.IWidget.Init

    End Sub

    Public Sub Maximized() Implements Dropthings.Widget.Framework.IWidget.Maximized

    End Sub

    Public Sub Minimized() Implements Dropthings.Widget.Framework.IWidget.Minimized

    End Sub

    Public Sub ShowSettings() Implements Dropthings.Widget.Framework.IWidget.ShowSettings

    End Sub

#End Region

#Region "Private fields"

    Private _formData As NNCotizacionVidaResumenParameter = Nothing
    Private _CurrentParameterInstance As Boolean = False
    Private _loading As Boolean = False
    Private _loadcompleted As Boolean = False
    Private _webTransfer as String  
    
    Private _CoverageWithCalculatedPremiumList As InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremiumCollection = Nothing
Private _BeneficiaryList As InMotionGIT.Policy.Entity.Contracts.BeneficiaryCollection = Nothing
    
#End Region

#Region "Public properties"

    Public Property FormData() As NNCotizacionVidaResumenParameter
        Get
            Dim formDefinition As String = String.Empty               
             
            If IsNothing(_formData) Then
                If Not IsPostBack Then
                    If Not String.IsNullOrEmpty(Request.QueryString("id")) Then
                        Dim _id As Guid
                        
                        If Guid.TryParse(Request.QueryString("id"), _id) Then
		                        _FormID.Text = Request.QueryString("id")  
                            
                            formDefinition = Session(String.Format(CultureInfo.InvariantCulture, "FormStorage.{0}", _FormID.Text))
    
           If Not String.IsNullOrEmpty(formDefinition) Then
              _formData = Serialize.Deserialize(Of NNCotizacionVidaResumenParameter)(formDefinition)
           End If
                        End If
                    End If

                    If IsNothing(_formData) Then
                        _formData = New NNCotizacionVidaResumenParameter
                       
                        If String.IsNullOrEmpty(_FormID.Text) Then
                        	_FormID.Text = System.Guid.NewGuid().ToString                       
                        End If
											
                        _formData.InternalId = _FormID.Text
                        
                        If Not String.IsNullOrEmpty(Request.QueryString("fromid")) OrElse
                           Not String.IsNullOrEmpty(Session("fromid")) Then
                           
                            GetTransferParameters()
                        End If
                        
                        
                        
                        SetDefaultValuesFromQueryString()
                        ValidateParametersInstance(_formData)
                        
                        popupNotifyMessage.ShowOnPageLoad = false                        
                        
                        ControlsInitialization()
                        ExecuteActionsInitializationForm()
                         
                        If Not String.IsNullOrEmpty(Request.QueryString("readonly")) Then
                            SetReadOnlyControls()
                        End If
                        

                    Else
                    		SetDefaultValuesFromQueryString()
                        
                    End If

                Else
                     formDefinition = Session(String.Format(CultureInfo.InvariantCulture, "FormStorage.{0}", _FormID.Text))
    
           If Not String.IsNullOrEmpty(formDefinition) Then
              _formData = Serialize.Deserialize(Of NNCotizacionVidaResumenParameter)(formDefinition)
           End If                    

                    If IsNothing(_formData) Then
                        _formData = New NNCotizacionVidaResumenParameter
                    End If
                End If
            End If

            Return _formData
        End Get

        Set(value As NNCotizacionVidaResumenParameter)
            _formData = value
        End Set
    End Property
    
#End Region

#Region "Form Events"

    Protected Sub Page_Load(sender As Object, e As EventArgs) Handles Me.Load
        ErrorsGridView.Visible = False
        
        
        
        Dim formData As NNCotizacionVidaResumenParameter = Me.FormData        
           
        If Not IsPostBack  AndAlso Not GridViewPostBack() Then                     
            
            
            _loadcompleted = True
            
            
            If IsPostBack And Not _CurrentParameterInstance Then
                MapPageToClass(formData)
                _CurrentParameterInstance = True
            End If

            MapClassToPage(formData)
            VerifySecurityLevel()
            
            
        Else
            
            
            
        End If        
        
        
        
        
    End Sub    

    Protected Sub Page_Unload(sender As Object, e As EventArgs) Handles Me.Unload        
        If Not IsNothing(_formData) Then  
                       Session(String.Format(CultureInfo.InvariantCulture, "FormStorage.{0}", _FormID.Text)) = Serialize.Serialize(Of NNCotizacionVidaResumenParameter)(_formData)
                       Session(String.Format(CultureInfo.InvariantCulture, "FormTitle.{0}", _FormID.Text)) = Page.Title
        End If 
        
        If Not IsNothing(_formData) Then
             If Not IsNothing(Session("Form.Track")) AndAlso Session("Form.Track").ToString.ToLower = "true" Then
                 Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}", IO.Path.GetFileNameWithoutExtension(Page.AppRelativeVirtualPath))) = _formData
             End If   
       
             If Not IsNothing(Session("Form.Track.Parameters")) AndAlso Session("Form.Track.Parameters").ToString.ToLower = "true" Then
                  InMotionGIT.Common.Helpers.Serialize.SerializeToFile(Of NNCotizacionVidaResumenParameter) _
                  (formData, String.Format(CultureInfo.InvariantCulture, "{0}\{1}.NNCotizacionVidaResumen.xml",  ConfigurationManager.AppSettings("Path.Logs"), formData.InternalId), True)
             End If        
        End If  
   End Sub

#End Region

#Region "Controls Events"


    Private Function GridViewPostBack() As Boolean
        For index As Integer = 0 To Request.Params.Count - 1
            If Request.Params(index).EndsWith("$CoverageWithCalculatedPremium") or Request.Params(index).EndsWith("$Beneficiary")  Then
                Return True
            End If
        Next
        
        Return False
    End Function    
        
    Protected Sub Gender_DataBinding(sender As Object, e As EventArgs) Handles Gender.DataBinding
           With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                    "SELECT  TABLE18.SSEXCLIEN, TABLE18.SSTATREGT, TABLE18.SDESCRIPT FROM TABLE18 TABLE18  WHERE TABLE18.SSTATREGT = '{0}'  AND NOT SDESCRIPT IS NULL ORDER BY SDESCRIPT", "1"), 
                                                    "TABLE18", "Linked.LatCombined")                                                                      
                  
                  Gender.DataSource = .QueryExecuteToTable(True)
           End With  
    End Sub
Protected Sub Currency_DataBinding(sender As Object, e As EventArgs) Handles Currency.DataBinding
           With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture,
                                                    "SELECT  TABLE11.NCODIGINT, TABLE11.SDESCRIPT, TABLE11.SSHORT_DES FROM TABLE11 TABLE11  WHERE TABLE11.SSTATREGT = '{0}'  ORDER BY TABLE11.SDESCRIPT ASC", "1"), 
                                                    "TABLE11", "Linked.LatCombined")                                                                      
                  
                  Currency.DataSource = .QueryExecuteToTable(True)
           End With  
    End Sub

    
#End Region


#Region "PopupMenu Events"

    
    
#End Region

#Region "Mapping methods"

    Public Sub ValidateParametersInstance(ByRef NNCotizacionVidaResumenParameterInstance As NNCotizacionVidaResumenParameter)
        If IsNothing(NNCotizacionVidaResumenParameterInstance.RiskInformation) Then
            NNCotizacionVidaResumenParameterInstance.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation
        End If
        If IsNothing(NNCotizacionVidaResumenParameterInstance.RiskInformation.PrimaryInsured) Then
            NNCotizacionVidaResumenParameterInstance.RiskInformation.PrimaryInsured = New InMotionGIT.Policy.Entity.Contracts.Role
        End If
        If IsNothing(NNCotizacionVidaResumenParameterInstance.RiskInformation.PrimaryInsured.Client) Then
            NNCotizacionVidaResumenParameterInstance.RiskInformation.PrimaryInsured.Client = New InMotionGIT.Client.Entity.Contracts.Client
        End If
        If IsNothing(NNCotizacionVidaResumenParameterInstance.AddresseMailDLI) Then
            NNCotizacionVidaResumenParameterInstance.AddresseMailDLI = New InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
        End If
        If IsNothing(NNCotizacionVidaResumenParameterInstance.AddresseMailDLI.eMailAddress) Then
            NNCotizacionVidaResumenParameterInstance.AddresseMailDLI.eMailAddress = New InMotionGIT.AddressManager.Contract.General.eMailAddress
        End If
        If IsNothing(NNCotizacionVidaResumenParameterInstance.QuestionnairesAvailable) Then
            NNCotizacionVidaResumenParameterInstance.QuestionnairesAvailable = New InMotionGIT.Questionnaires.QuestionnairesAvailable
        End If
   
    End Sub
    
    ''' <summary>
    ''' This method moves the data from the class to the page
    ''' </summary>
    ''' <param name="NNCotizacionVidaResumenParameterInstance"></param>
    ''' <remarks></remarks>
    Public Sub MapClassToPage(ByRef NNCotizacionVidaResumenParameterInstance As NNCotizacionVidaResumenParameter, Optional calledBy As String = "")
        Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
        ValidateParametersInstance(NNCotizacionVidaResumenParameterInstance)

        Gender.DataBind()
SmokerIndicator.DataBind()
Currency.DataBind()
BeneficiaryType.DataBind()
radiobuttonlist1.DataBind()
radiobuttonlist2.DataBind()
Radiobutton3.DataBind()

       
        With NNCotizacionVidaResumenParameterInstance
          
                 NNCotizacionMiVidaValeSecuencia.MapClassToPage(NNCotizacionMiVidaValeSecuencia.FormData)
            EffectiveDate.Value = .RiskInformation.EffectiveDate
            ProductMasterDescription.Text = .ProductMasterDescription
            PrimaryInsuredClientFirstName.Text = .RiskInformation.PrimaryInsured.Client.FirstName
            PrimaryInsuredClientLastName.Text = .RiskInformation.PrimaryInsured.Client.LastName
            PrimaryInsuredClientLastName2.Text = .RiskInformation.PrimaryInsured.Client.LastName2
            BirthDate.Value = .RiskInformation.PrimaryInsured.Client.BirthDate
            Gender.SelectedItem = Gender.Items.FindByValue(.RiskInformation.PrimaryInsured.Client.Gender)
            Height.Text = .RiskInformation.PrimaryInsured.Client.Height.tostring("###,0.00")
            Weight.Text = .RiskInformation.PrimaryInsured.Client.Weight.tostring("###,#0.00")
            SmokerIndicator.SelectedItem = SmokerIndicator.Items.FindByValue(.RiskInformation.PrimaryInsured.Client.SmokerIndicator)
            DireccionMostrar.Text = .DireccionMostrar
            eMail.Text = .AddresseMailDLI.eMailAddress.eMail
            InsuredAmount.Text = .RiskInformation.InsuredAmount
            Currency.SelectedItem = Currency.Items.FindByValue(.Currency)
            TotalOriginalAnnualPremium.Text = .RiskInformation.TotalOriginalAnnualPremium
            BeneficiaryType.SelectedItem = BeneficiaryType.Items.FindByValue(.BeneficiaryType)
            radiobuttonlist1.SelectedItem = radiobuttonlist1.Items.FindByValue(.QuestionnairesAvailable.Diabetes)
            radiobuttonlist2.SelectedItem = radiobuttonlist2.Items.FindByValue(.QuestionnairesAvailable.Heart)
            Radiobutton3.SelectedItem = Radiobutton3.Items.FindByValue(.QuestionnairesAvailable.Cancer)

                      If IsNothing(.RiskInformation) Then
                .RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation()
            End If
            If IsNothing(.RiskInformation.CoveragesWithCalculatedPremium) Then
                .RiskInformation.CoveragesWithCalculatedPremium = New InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremiumCollection()
            End If
            If IsNothing(.RiskInformation) Then
                .RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation()
            End If
            If IsNothing(.RiskInformation.Beneficiaries) Then
                .RiskInformation.Beneficiaries = New InMotionGIT.Policy.Entity.Contracts.BeneficiaryCollection()
            End If

            _CoverageWithCalculatedPremiumList = .RiskInformation.CoveragesWithCalculatedPremium
            CoverageWithCalculatedPremium.DataSource = _CoverageWithCalculatedPremiumList
            CoverageWithCalculatedPremium.DataBind()
            If IsNothing(.RiskInformation) Then
                .RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation()
            End If
            If IsNothing(.RiskInformation.Beneficiaries) Then
                .RiskInformation.Beneficiaries = New InMotionGIT.Policy.Entity.Contracts.BeneficiaryCollection()
            End If

            _BeneficiaryList = .RiskInformation.Beneficiaries
            Beneficiary.DataSource = _BeneficiaryList
            Beneficiary.DataBind()
    
          CoverageWithCalculatedPremium.FilterExpression = String.Format(CultureInfo.InvariantCulture,"SelectedByDefault = {0}",true) 
        
           
  
 
          
               
            
            
       End With


if (Not ("CoverageWithCalculatedPremium|Beneficiary".IndexOf(calledBy) > -1)) Or String.IsNullOrEmpty(calledBy) then        
            
         

        End If          
    End Sub

    ''' <summary>
    ''' This method moves the data from the page to the class
    ''' </summary>
    ''' <param name="NNCotizacionVidaResumenParameterInstance"></param>
    Public Sub MapPageToClass(ByRef NNCotizacionVidaResumenParameterInstance As NNCotizacionVidaResumenParameter)
        _loading = True

        ValidateParametersInstance(NNCotizacionVidaResumenParameterInstance)

        With NNCotizacionVidaResumenParameterInstance
            .RiskInformation.EffectiveDate = EffectiveDate.Value
            .ProductMasterDescription = ProductMasterDescription.Text
            .RiskInformation.PrimaryInsured.Client.FirstName = PrimaryInsuredClientFirstName.Text
            .RiskInformation.PrimaryInsured.Client.LastName = PrimaryInsuredClientLastName.Text
            .RiskInformation.PrimaryInsured.Client.LastName2 = PrimaryInsuredClientLastName2.Text
            .RiskInformation.PrimaryInsured.Client.BirthDate = BirthDate.Value
            .RiskInformation.PrimaryInsured.Client.Gender = Gender.Value
            .RiskInformation.PrimaryInsured.Client.Height = Height.Text
            .RiskInformation.PrimaryInsured.Client.Weight = Weight.Text
            .RiskInformation.PrimaryInsured.Client.SmokerIndicator = SmokerIndicator.Value
            .DireccionMostrar = DireccionMostrar.Text
            .AddresseMailDLI.eMailAddress.eMail = eMail.Text
            .RiskInformation.InsuredAmount = InsuredAmount.Text
            .Currency = Currency.Value
            .BeneficiaryType = BeneficiaryType.Value
            .QuestionnairesAvailable.Diabetes = radiobuttonlist1.Value
            .QuestionnairesAvailable.Heart = radiobuttonlist2.Value
            .QuestionnairesAvailable.Cancer = Radiobutton3.Value


        'GetViewStateCoverageWithCalculatedPremiumList()
        '.RiskInformation.CoveragesWithCalculatedPremium = _CoverageWithCalculatedPremiumList
        '.RiskInformation.CoveragesWithCalculatedPremium.CurrentIndex= CoverageWithCalculatedPremium.EditIndex
        'ViewState.Remove("CoverageWithCalculatedPremiumList")
        'GetViewStateBeneficiaryList()
        '.RiskInformation.Beneficiaries = _BeneficiaryList
        '.RiskInformation.Beneficiaries.CurrentIndex= Beneficiary.EditIndex
        'ViewState.Remove("BeneficiaryList")



        End With




        _loading = False
    End Sub

#End Region

#Region "CoverageWithCalculatedPremium GridView Controls with dependencies Events"
    


#End Region

#Region "CoverageWithCalculatedPremium GridView editing support"    

    Protected Sub CoverageWithCalculatedPremium_DataBinding(sender As Object, e As EventArgs) Handles CoverageWithCalculatedPremium.DataBinding        
            With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture, 
                                                                 "SELECT  TABLE55.NRELATION, TABLE55.SSTATREGT, TABLE55.SDESCRIPT FROM TABLE55 TABLE55  WHERE TABLE55.SSTATREGT = '{0}'  AND NOT SDESCRIPT IS NULL ORDER BY SDESCRIPT", "1"), "TABLE55", "Linked.LatCombined")
                        
                    
                    DirectCast(Beneficiary.Columns("Relationship"), GridViewDataComboBoxColumn).PropertiesComboBox.DataSource = .QueryExecuteToTable(True)
            End With    
 
            If IsNothing(FormData.RiskInformation) Then
                FormData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation()
            End If
            If IsNothing(FormData.RiskInformation.CoveragesWithCalculatedPremium) Then
                FormData.RiskInformation.CoveragesWithCalculatedPremium = New InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremiumCollection()
            End If

        _CoverageWithCalculatedPremiumList = FormData.RiskInformation.CoveragesWithCalculatedPremium
        CoverageWithCalculatedPremium.DataSource = _CoverageWithCalculatedPremiumList      
    End Sub
    
    Protected Sub CoverageWithCalculatedPremium_CustomColumnDisplayText(sender As Object, e As ASPxGridViewColumnDisplayTextEventArgs) Handles CoverageWithCalculatedPremium.CustomColumnDisplayText  
          Dim data As DataTable
          Dim rows() As DataRow
          
          Select Case e.Column.FieldName
      
            Case Else
          End Select
    End Sub 
    
    Private Sub SetCoverageWithCalculatedPremiumListDataBind(Optional editIndex As Integer = -1, Optional isCancel As Boolean = False)
        Dim FormData As NNCotizacionVidaResumenParameter

         GetCurrentParameterInstance(FormData, True)

        FormData.RiskInformation.CoveragesWithCalculatedPremium = _CoverageWithCalculatedPremiumList
        CoverageWithCalculatedPremium.DataSource = _CoverageWithCalculatedPremiumList
        CoverageWithCalculatedPremium.DataBind()
    End Sub
   
    Private Sub GetViewStateCoverageWithCalculatedPremiumList()
        Dim FormData As NNCotizacionVidaResumenParameter

         GetCurrentParameterInstance(FormData, True)

        _CoverageWithCalculatedPremiumList = FormData.RiskInformation.CoveragesWithCalculatedPremium

        If IsNothing(_CoverageWithCalculatedPremiumList) Then
            _CoverageWithCalculatedPremiumList = New InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremiumCollection()
        End If        
    End Sub
    
    
    
    
#End Region
#Region "Beneficiary GridView Controls with dependencies Events"
    


#End Region

#Region "Beneficiary GridView editing support"    

    Protected Sub Beneficiary_DataBinding(sender As Object, e As EventArgs) Handles Beneficiary.DataBinding        
            With New DataManagerFactory(String.Format(CultureInfo.CurrentCulture, 
                                                                 "SELECT  TABLE55.NRELATION, TABLE55.SSTATREGT, TABLE55.SDESCRIPT FROM TABLE55 TABLE55  WHERE TABLE55.SSTATREGT = '{0}'  AND NOT SDESCRIPT IS NULL ORDER BY SDESCRIPT", "1"), "TABLE55", "Linked.LatCombined")
                        
                    
                    DirectCast(Beneficiary.Columns("Relationship"), GridViewDataComboBoxColumn).PropertiesComboBox.DataSource = .QueryExecuteToTable(True)
            End With    
 
            If IsNothing(FormData.RiskInformation) Then
                FormData.RiskInformation = New InMotionGIT.Policy.Entity.Contracts.RiskInformation()
            End If
            If IsNothing(FormData.RiskInformation.Beneficiaries) Then
                FormData.RiskInformation.Beneficiaries = New InMotionGIT.Policy.Entity.Contracts.BeneficiaryCollection()
            End If

        _BeneficiaryList = FormData.RiskInformation.Beneficiaries
        Beneficiary.DataSource = _BeneficiaryList      
    End Sub
    
    Protected Sub Beneficiary_CustomColumnDisplayText(sender As Object, e As ASPxGridViewColumnDisplayTextEventArgs) Handles Beneficiary.CustomColumnDisplayText  
          Dim data As DataTable
          Dim rows() As DataRow
          
          Select Case e.Column.FieldName
      
            Case Else
          End Select
    End Sub 
    
    Private Sub SetBeneficiaryListDataBind(Optional editIndex As Integer = -1, Optional isCancel As Boolean = False)
        Dim FormData As NNCotizacionVidaResumenParameter

         GetCurrentParameterInstance(FormData, True)

        FormData.RiskInformation.Beneficiaries = _BeneficiaryList
        Beneficiary.DataSource = _BeneficiaryList
        Beneficiary.DataBind()
    End Sub
   
    Private Sub GetViewStateBeneficiaryList()
        Dim FormData As NNCotizacionVidaResumenParameter

         GetCurrentParameterInstance(FormData, True)

        _BeneficiaryList = FormData.RiskInformation.Beneficiaries

        If IsNothing(_BeneficiaryList) Then
            _BeneficiaryList = New InMotionGIT.Policy.Entity.Contracts.BeneficiaryCollection()
        End If        
    End Sub
    
    
    
    
#End Region







#Region "AutoPostBack Events Handles"



#End Region

#Region "UserControls Events Handles"

    



#End Region

#Region "Form Manager"

    Private Sub VerifySecurityLevel()










    End Sub

      

    Private Sub GetCurrentParameterInstance(ByRef NNCotizacionVidaResumenParameterInstance As NNCotizacionVidaResumenParameter, force As Boolean)
        If _loadcompleted Or force Then
            If Not _CurrentParameterInstance Then

                NNCotizacionVidaResumenParameterInstance = FormData

                If Page.IsPostBack Then
                    MapPageToClass(NNCotizacionVidaResumenParameterInstance)
                End If

                _CurrentParameterInstance = True
            Else
                NNCotizacionVidaResumenParameterInstance = _formData
            End If
        Else
            NNCotizacionVidaResumenParameterInstance = Nothing
        End If
    End Sub

    Protected Sub SetCurrentParameterInstance(ByRef NNCotizacionVidaResumenParameterInstance As NNCotizacionVidaResumenParameter, calledBy As String)
        FormData = NNCotizacionVidaResumenParameterInstance
        MapClassToPage(NNCotizacionVidaResumenParameterInstance,calledBy)
    End Sub

    Protected Sub SetErrors(errors As InMotionGIT.Common.Contracts.Errors.ErrorCollection)
        Dim errorList As InMotionGIT.Common.Contracts.Errors.ErrorCollection = ViewState("Errors")

        If IsNothing(errorList) Then
            errorList = New InMotionGIT.Common.Contracts.Errors.ErrorCollection
        End If

        errorList = errors

        ViewState("Errors") = errorList
        ShowErrors()
    End Sub

    Public Sub ShowErrors()
        If Not IsNothing(ViewState("Errors")) Then
            Dim errorList As InMotionGIT.Common.Contracts.Errors.ErrorCollection = ViewState("Errors")

            Dim queryOut = From lst In errorList Select lst Order By lst.ErrorId

            ErrorsGridView.Visible = True
            ErrorsGridView.DataSource = queryOut.ToList
            ErrorsGridView.DataBind()
            UpdatePanelErrors.Update()
        End If
    End Sub
   
    Private Sub ShowWindowPopupMessage(message As String)
        NotifyMessageLabel.Text = message
        popupNotifyMessage.ShowOnPageLoad = True
    End Sub

    Private Sub ClosePopupWindow()
        popControl.Windows(0).ShowOnPageLoad = False
    End Sub

    Private Sub GetTransferParameters()
        Dim fromDocumentCache As Object = Nothing

        If Not String.IsNullOrEmpty(Request.QueryString("fromid")) Then
            fromDocumentCache = Session( Request.QueryString("fromid"))
            Session.Remove(Request.QueryString("fromid"))
            
        Else
            fromDocumentCache = Session(Session("fromid"))
            Session.Remove(Session("fromid"))
            Session.Remove("fromid")   
        End If
        
        If Not IsNothing(fromDocumentCache) Then
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("RiskInformation", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("uwcaseid", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("uwreqid", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("InsuredAmount", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("InsuredAmountSelected", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PlanType", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClientExistInDB", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("eMail", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Currency", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("QueryType", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("MasaCorporal", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Age", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("MessagePopUp", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("MessageIndicator", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("QuestionnairesAvailable", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProducerClientID", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("BeneficiaryType", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("DefaultAddresses", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("LaboratoryRequired", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("LaboratorySelectedByUser", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PrimaryInsured", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("SendMailIndicator", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("MailToProducerIndicator", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("InRuleErros", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AccumulatedAmount", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CancelledPoliciesQuantity", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OtherPoliciesSameRiskQuantity", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("InRuleMessage", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OnLinePrintIndicator", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OnLinePrintResult", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PolicyDocument", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ErrorsFound", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ReportURL", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("FormStatus", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("OnLinePrint", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("StatusRun", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AddresseMailDLI", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProductMasterDescription", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("DireccionMostrar", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ConsumerInformation", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowGeneral", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("StatusCase", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("RecoveryCaseIndicator", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AnswerDiabetes", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AnswerHeart", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AnswerCancer", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PaymentMethod", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PreviousPayment", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClienteIndicado", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CompleteAddress", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("VerificarCuestionariosIndicador", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PlanillaModificacion", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PlanillaVisualizacion", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ProductDescription", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PrimaTotalAnual", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("PrimaRecibo", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("MonedaRecibo", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("CurrentYear", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("MesTarjeta", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AnoTarjeta", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ImagenMostrada", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ImagenIncluida", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("IsAnonymous", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("AgregarBeneficiario", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("TypeOfPersonBenef", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ValorAcumulado", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("BeneficiariosMail", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Codigo", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("Descripcion", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("FondosMail", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UsercodeBO", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UsercodeFASI", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClienteInformaExiste", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ClienteInformaEsUsuario", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UsuarioClaveEntrada", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("UsuarioPassword", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("QRegistros", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("frompanel", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("GenderClient", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowAdditionalInformation", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowHealthInformation", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowBeneficiariesInformation", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowPaymentInformation", fromDocumentCache, _formData)
            InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValue("ShowBasicInformation", fromDocumentCache, _formData)
            
        End If
    End Sub
    
    

    Private Sub SetDefaultValuesFromQueryString()

        If Request.Form("uwcaseid").IsNotEmpty Then
                FormData.uwcaseid = Request.Form("uwcaseid") 

ElseIf Request.QueryString("uwcaseid").IsNotEmpty Then
                FormData.uwcaseid = Request.QueryString("uwcaseid") 
End If 

If Request.Form("uwreqid").IsNotEmpty Then
                FormData.uwreqid = Request.Form("uwreqid") 

ElseIf Request.QueryString("uwreqid").IsNotEmpty Then
                FormData.uwreqid = Request.QueryString("uwreqid") 
End If 

If Request.Form("InsuredAmount").IsNotEmpty Then
                FormData.InsuredAmount = Request.Form("InsuredAmount") 

ElseIf Request.QueryString("InsuredAmount").IsNotEmpty Then
                FormData.InsuredAmount = Request.QueryString("InsuredAmount") 
End If 

If Request.Form("InsuredAmountSelected").IsNotEmpty Then
                FormData.InsuredAmountSelected = Request.Form("InsuredAmountSelected") 

ElseIf Request.QueryString("InsuredAmountSelected").IsNotEmpty Then
                FormData.InsuredAmountSelected = Request.QueryString("InsuredAmountSelected") 
End If 

If Request.Form("PlanType").IsNotEmpty Then
                FormData.PlanType = Request.Form("PlanType") 

ElseIf Request.QueryString("PlanType").IsNotEmpty Then
                FormData.PlanType = Request.QueryString("PlanType") 
End If 

If Request.Form("ClientExistInDB").IsNotEmpty Then
                FormData.ClientExistInDB = Request.Form("ClientExistInDB") 

ElseIf Request.QueryString("ClientExistInDB").IsNotEmpty Then
                FormData.ClientExistInDB = Request.QueryString("ClientExistInDB") 
End If 

If Request.Form("eMail").IsNotEmpty Then
                FormData.eMail = Request.Form("eMail") 

ElseIf Request.QueryString("eMail").IsNotEmpty Then
                FormData.eMail = Request.QueryString("eMail") 
End If 

If Request.Form("Currency").IsNotEmpty Then
                FormData.Currency = Request.Form("Currency") 

ElseIf Request.QueryString("Currency").IsNotEmpty Then
                FormData.Currency = Request.QueryString("Currency") 
End If 

If Request.Form("QueryType").IsNotEmpty Then
                FormData.QueryType = Request.Form("QueryType") 

ElseIf Request.QueryString("QueryType").IsNotEmpty Then
                FormData.QueryType = Request.QueryString("QueryType") 
End If 

If Request.Form("MasaCorporal").IsNotEmpty Then
                FormData.MasaCorporal = Request.Form("MasaCorporal") 

ElseIf Request.QueryString("MasaCorporal").IsNotEmpty Then
                FormData.MasaCorporal = Request.QueryString("MasaCorporal") 
End If 

If Request.Form("Age").IsNotEmpty Then
                FormData.Age = Request.Form("Age") 

ElseIf Request.QueryString("Age").IsNotEmpty Then
                FormData.Age = Request.QueryString("Age") 
End If 

If Request.Form("MessagePopUp").IsNotEmpty Then
                FormData.MessagePopUp = Request.Form("MessagePopUp") 

ElseIf Request.QueryString("MessagePopUp").IsNotEmpty Then
                FormData.MessagePopUp = Request.QueryString("MessagePopUp") 
End If 

If Request.Form("MessageIndicator").IsNotEmpty Then
                FormData.MessageIndicator = Request.Form("MessageIndicator") 

ElseIf Request.QueryString("MessageIndicator").IsNotEmpty Then
                FormData.MessageIndicator = Request.QueryString("MessageIndicator") 
End If 

If Request.Form("ProducerClientID").IsNotEmpty Then
                FormData.ProducerClientID = Request.Form("ProducerClientID") 

ElseIf Request.QueryString("ProducerClientID").IsNotEmpty Then
                FormData.ProducerClientID = Request.QueryString("ProducerClientID") 
End If 

If Request.Form("BeneficiaryType").IsNotEmpty Then
                FormData.BeneficiaryType = Request.Form("BeneficiaryType") 

ElseIf Request.QueryString("BeneficiaryType").IsNotEmpty Then
                FormData.BeneficiaryType = Request.QueryString("BeneficiaryType") 
End If 

If Request.Form("DefaultAddresses").IsNotEmpty Then
                FormData.DefaultAddresses = Request.Form("DefaultAddresses") 

ElseIf Request.QueryString("DefaultAddresses").IsNotEmpty Then
                FormData.DefaultAddresses = Request.QueryString("DefaultAddresses") 
End If 

If Request.Form("LaboratoryRequired").IsNotEmpty Then
                FormData.LaboratoryRequired = Request.Form("LaboratoryRequired") 

ElseIf Request.QueryString("LaboratoryRequired").IsNotEmpty Then
                FormData.LaboratoryRequired = Request.QueryString("LaboratoryRequired") 
End If 

If Request.Form("LaboratorySelectedByUser").IsNotEmpty Then
                FormData.LaboratorySelectedByUser = Request.Form("LaboratorySelectedByUser") 

ElseIf Request.QueryString("LaboratorySelectedByUser").IsNotEmpty Then
                FormData.LaboratorySelectedByUser = Request.QueryString("LaboratorySelectedByUser") 
End If 

If Request.Form("PrimaryInsured").IsNotEmpty Then
                FormData.PrimaryInsured = Request.Form("PrimaryInsured") 

ElseIf Request.QueryString("PrimaryInsured").IsNotEmpty Then
                FormData.PrimaryInsured = Request.QueryString("PrimaryInsured") 
End If 

If Request.Form("SendMailIndicator").IsNotEmpty Then
                FormData.SendMailIndicator = Request.Form("SendMailIndicator") 

ElseIf Request.QueryString("SendMailIndicator").IsNotEmpty Then
                FormData.SendMailIndicator = Request.QueryString("SendMailIndicator") 
End If 

If Request.Form("MailToProducerIndicator").IsNotEmpty Then
                FormData.MailToProducerIndicator = Request.Form("MailToProducerIndicator") 

ElseIf Request.QueryString("MailToProducerIndicator").IsNotEmpty Then
                FormData.MailToProducerIndicator = Request.QueryString("MailToProducerIndicator") 
End If 

If Request.Form("InRuleErros").IsNotEmpty Then
                FormData.InRuleErros = Request.Form("InRuleErros") 

ElseIf Request.QueryString("InRuleErros").IsNotEmpty Then
                FormData.InRuleErros = Request.QueryString("InRuleErros") 
End If 

If Request.Form("AccumulatedAmount").IsNotEmpty Then
                FormData.AccumulatedAmount = Request.Form("AccumulatedAmount") 

ElseIf Request.QueryString("AccumulatedAmount").IsNotEmpty Then
                FormData.AccumulatedAmount = Request.QueryString("AccumulatedAmount") 
End If 

If Request.Form("CancelledPoliciesQuantity").IsNotEmpty Then
                FormData.CancelledPoliciesQuantity = Request.Form("CancelledPoliciesQuantity") 

ElseIf Request.QueryString("CancelledPoliciesQuantity").IsNotEmpty Then
                FormData.CancelledPoliciesQuantity = Request.QueryString("CancelledPoliciesQuantity") 
End If 

If Request.Form("OtherPoliciesSameRiskQuantity").IsNotEmpty Then
                FormData.OtherPoliciesSameRiskQuantity = Request.Form("OtherPoliciesSameRiskQuantity") 

ElseIf Request.QueryString("OtherPoliciesSameRiskQuantity").IsNotEmpty Then
                FormData.OtherPoliciesSameRiskQuantity = Request.QueryString("OtherPoliciesSameRiskQuantity") 
End If 

If Request.Form("InRuleMessage").IsNotEmpty Then
                FormData.InRuleMessage = Request.Form("InRuleMessage") 

ElseIf Request.QueryString("InRuleMessage").IsNotEmpty Then
                FormData.InRuleMessage = Request.QueryString("InRuleMessage") 
End If 

If Request.Form("OnLinePrintIndicator").IsNotEmpty Then
                FormData.OnLinePrintIndicator = Request.Form("OnLinePrintIndicator") 

ElseIf Request.QueryString("OnLinePrintIndicator").IsNotEmpty Then
                FormData.OnLinePrintIndicator = Request.QueryString("OnLinePrintIndicator") 
End If 

If Request.Form("OnLinePrintResult").IsNotEmpty Then
                FormData.OnLinePrintResult = Request.Form("OnLinePrintResult") 

ElseIf Request.QueryString("OnLinePrintResult").IsNotEmpty Then
                FormData.OnLinePrintResult = Request.QueryString("OnLinePrintResult") 
End If 

If Request.Form("PolicyDocument").IsNotEmpty Then
                FormData.PolicyDocument = Request.Form("PolicyDocument") 

ElseIf Request.QueryString("PolicyDocument").IsNotEmpty Then
                FormData.PolicyDocument = Request.QueryString("PolicyDocument") 
End If 

If Request.Form("ErrorsFound").IsNotEmpty Then
                FormData.ErrorsFound = Request.Form("ErrorsFound") 

ElseIf Request.QueryString("ErrorsFound").IsNotEmpty Then
                FormData.ErrorsFound = Request.QueryString("ErrorsFound") 
End If 

If Request.Form("ReportURL").IsNotEmpty Then
                FormData.ReportURL = Request.Form("ReportURL") 

ElseIf Request.QueryString("ReportURL").IsNotEmpty Then
                FormData.ReportURL = Request.QueryString("ReportURL") 
End If 

If Request.Form("FormStatus").IsNotEmpty Then
                FormData.FormStatus = Request.Form("FormStatus") 

ElseIf Request.QueryString("FormStatus").IsNotEmpty Then
                FormData.FormStatus = Request.QueryString("FormStatus") 
End If 

If Request.Form("OnLinePrint").IsNotEmpty Then
                FormData.OnLinePrint = Request.Form("OnLinePrint") 

ElseIf Request.QueryString("OnLinePrint").IsNotEmpty Then
                FormData.OnLinePrint = Request.QueryString("OnLinePrint") 
End If 

If Request.Form("StatusRun").IsNotEmpty Then
                FormData.StatusRun = Request.Form("StatusRun") 

ElseIf Request.QueryString("StatusRun").IsNotEmpty Then
                FormData.StatusRun = Request.QueryString("StatusRun") 
End If 

If Request.Form("ProductMasterDescription").IsNotEmpty Then
                FormData.ProductMasterDescription = Request.Form("ProductMasterDescription") 

ElseIf Request.QueryString("ProductMasterDescription").IsNotEmpty Then
                FormData.ProductMasterDescription = Request.QueryString("ProductMasterDescription") 
End If 

If Request.Form("DireccionMostrar").IsNotEmpty Then
                FormData.DireccionMostrar = Request.Form("DireccionMostrar") 

ElseIf Request.QueryString("DireccionMostrar").IsNotEmpty Then
                FormData.DireccionMostrar = Request.QueryString("DireccionMostrar") 
End If 

If Request.Form("ShowGeneral").IsNotEmpty Then
                FormData.ShowGeneral = Request.Form("ShowGeneral") 

ElseIf Request.QueryString("ShowGeneral").IsNotEmpty Then
                FormData.ShowGeneral = Request.QueryString("ShowGeneral") 
End If 

If Request.Form("StatusCase").IsNotEmpty Then
                FormData.StatusCase = Request.Form("StatusCase") 

ElseIf Request.QueryString("StatusCase").IsNotEmpty Then
                FormData.StatusCase = Request.QueryString("StatusCase") 
End If 

If Request.Form("RecoveryCaseIndicator").IsNotEmpty Then
                FormData.RecoveryCaseIndicator = Request.Form("RecoveryCaseIndicator") 

ElseIf Request.QueryString("RecoveryCaseIndicator").IsNotEmpty Then
                FormData.RecoveryCaseIndicator = Request.QueryString("RecoveryCaseIndicator") 
End If 

If Request.Form("AnswerDiabetes").IsNotEmpty Then
                FormData.AnswerDiabetes = Request.Form("AnswerDiabetes") 

ElseIf Request.QueryString("AnswerDiabetes").IsNotEmpty Then
                FormData.AnswerDiabetes = Request.QueryString("AnswerDiabetes") 
End If 

If Request.Form("AnswerHeart").IsNotEmpty Then
                FormData.AnswerHeart = Request.Form("AnswerHeart") 

ElseIf Request.QueryString("AnswerHeart").IsNotEmpty Then
                FormData.AnswerHeart = Request.QueryString("AnswerHeart") 
End If 

If Request.Form("AnswerCancer").IsNotEmpty Then
                FormData.AnswerCancer = Request.Form("AnswerCancer") 

ElseIf Request.QueryString("AnswerCancer").IsNotEmpty Then
                FormData.AnswerCancer = Request.QueryString("AnswerCancer") 
End If 

If Request.Form("PaymentMethod").IsNotEmpty Then
                FormData.PaymentMethod = Request.Form("PaymentMethod") 

ElseIf Request.QueryString("PaymentMethod").IsNotEmpty Then
                FormData.PaymentMethod = Request.QueryString("PaymentMethod") 
End If 

If Request.Form("PreviousPayment").IsNotEmpty Then
                FormData.PreviousPayment = Request.Form("PreviousPayment") 

ElseIf Request.QueryString("PreviousPayment").IsNotEmpty Then
                FormData.PreviousPayment = Request.QueryString("PreviousPayment") 
End If 

If Request.Form("ClienteIndicado").IsNotEmpty Then
                FormData.ClienteIndicado = Request.Form("ClienteIndicado") 

ElseIf Request.QueryString("ClienteIndicado").IsNotEmpty Then
                FormData.ClienteIndicado = Request.QueryString("ClienteIndicado") 
End If 

If Request.Form("CompleteAddress").IsNotEmpty Then
                FormData.CompleteAddress = Request.Form("CompleteAddress") 

ElseIf Request.QueryString("CompleteAddress").IsNotEmpty Then
                FormData.CompleteAddress = Request.QueryString("CompleteAddress") 
End If 

If Request.Form("VerificarCuestionariosIndicador").IsNotEmpty Then
                FormData.VerificarCuestionariosIndicador = Request.Form("VerificarCuestionariosIndicador") 

ElseIf Request.QueryString("VerificarCuestionariosIndicador").IsNotEmpty Then
                FormData.VerificarCuestionariosIndicador = Request.QueryString("VerificarCuestionariosIndicador") 
End If 

If Request.Form("PlanillaModificacion").IsNotEmpty Then
                FormData.PlanillaModificacion = Request.Form("PlanillaModificacion") 

ElseIf Request.QueryString("PlanillaModificacion").IsNotEmpty Then
                FormData.PlanillaModificacion = Request.QueryString("PlanillaModificacion") 
End If 

If Request.Form("PlanillaVisualizacion").IsNotEmpty Then
                FormData.PlanillaVisualizacion = Request.Form("PlanillaVisualizacion") 

ElseIf Request.QueryString("PlanillaVisualizacion").IsNotEmpty Then
                FormData.PlanillaVisualizacion = Request.QueryString("PlanillaVisualizacion") 
End If 

If Request.Form("ProductDescription").IsNotEmpty Then
                FormData.ProductDescription = Request.Form("ProductDescription") 

ElseIf Request.QueryString("ProductDescription").IsNotEmpty Then
                FormData.ProductDescription = Request.QueryString("ProductDescription") 
End If 

If Request.Form("PrimaTotalAnual").IsNotEmpty Then
                FormData.PrimaTotalAnual = Request.Form("PrimaTotalAnual") 

ElseIf Request.QueryString("PrimaTotalAnual").IsNotEmpty Then
                FormData.PrimaTotalAnual = Request.QueryString("PrimaTotalAnual") 
End If 

If Request.Form("PrimaRecibo").IsNotEmpty Then
                FormData.PrimaRecibo = Request.Form("PrimaRecibo") 

ElseIf Request.QueryString("PrimaRecibo").IsNotEmpty Then
                FormData.PrimaRecibo = Request.QueryString("PrimaRecibo") 
End If 

If Request.Form("MonedaRecibo").IsNotEmpty Then
                FormData.MonedaRecibo = Request.Form("MonedaRecibo") 

ElseIf Request.QueryString("MonedaRecibo").IsNotEmpty Then
                FormData.MonedaRecibo = Request.QueryString("MonedaRecibo") 
End If 

If Request.Form("CurrentYear").IsNotEmpty Then
                FormData.CurrentYear = Request.Form("CurrentYear") 

ElseIf Request.QueryString("CurrentYear").IsNotEmpty Then
                FormData.CurrentYear = Request.QueryString("CurrentYear") 
End If 

If Request.Form("MesTarjeta").IsNotEmpty Then
                FormData.MesTarjeta = Request.Form("MesTarjeta") 

ElseIf Request.QueryString("MesTarjeta").IsNotEmpty Then
                FormData.MesTarjeta = Request.QueryString("MesTarjeta") 
End If 

If Request.Form("AnoTarjeta").IsNotEmpty Then
                FormData.AnoTarjeta = Request.Form("AnoTarjeta") 

ElseIf Request.QueryString("AnoTarjeta").IsNotEmpty Then
                FormData.AnoTarjeta = Request.QueryString("AnoTarjeta") 
End If 

If Request.Form("ImagenMostrada").IsNotEmpty Then
                FormData.ImagenMostrada = Request.Form("ImagenMostrada") 

ElseIf Request.QueryString("ImagenMostrada").IsNotEmpty Then
                FormData.ImagenMostrada = Request.QueryString("ImagenMostrada") 
End If 

If Request.Form("ImagenIncluida").IsNotEmpty Then
                FormData.ImagenIncluida = Request.Form("ImagenIncluida") 

ElseIf Request.QueryString("ImagenIncluida").IsNotEmpty Then
                FormData.ImagenIncluida = Request.QueryString("ImagenIncluida") 
End If 

If Request.Form("IsAnonymous").IsNotEmpty Then
                FormData.IsAnonymous = Request.Form("IsAnonymous") 

ElseIf Request.QueryString("IsAnonymous").IsNotEmpty Then
                FormData.IsAnonymous = Request.QueryString("IsAnonymous") 
End If 

If Request.Form("AgregarBeneficiario").IsNotEmpty Then
                FormData.AgregarBeneficiario = Request.Form("AgregarBeneficiario") 

ElseIf Request.QueryString("AgregarBeneficiario").IsNotEmpty Then
                FormData.AgregarBeneficiario = Request.QueryString("AgregarBeneficiario") 
End If 

If Request.Form("TypeOfPersonBenef").IsNotEmpty Then
                FormData.TypeOfPersonBenef = Request.Form("TypeOfPersonBenef") 

ElseIf Request.QueryString("TypeOfPersonBenef").IsNotEmpty Then
                FormData.TypeOfPersonBenef = Request.QueryString("TypeOfPersonBenef") 
End If 

If Request.Form("ValorAcumulado").IsNotEmpty Then
                FormData.ValorAcumulado = Request.Form("ValorAcumulado") 

ElseIf Request.QueryString("ValorAcumulado").IsNotEmpty Then
                FormData.ValorAcumulado = Request.QueryString("ValorAcumulado") 
End If 

If Request.Form("BeneficiariosMail").IsNotEmpty Then
                FormData.BeneficiariosMail = Request.Form("BeneficiariosMail") 

ElseIf Request.QueryString("BeneficiariosMail").IsNotEmpty Then
                FormData.BeneficiariosMail = Request.QueryString("BeneficiariosMail") 
End If 

If Request.Form("Codigo").IsNotEmpty Then
                FormData.Codigo = Request.Form("Codigo") 

ElseIf Request.QueryString("Codigo").IsNotEmpty Then
                FormData.Codigo = Request.QueryString("Codigo") 
End If 

If Request.Form("Descripcion").IsNotEmpty Then
                FormData.Descripcion = Request.Form("Descripcion") 

ElseIf Request.QueryString("Descripcion").IsNotEmpty Then
                FormData.Descripcion = Request.QueryString("Descripcion") 
End If 

If Request.Form("FondosMail").IsNotEmpty Then
                FormData.FondosMail = Request.Form("FondosMail") 

ElseIf Request.QueryString("FondosMail").IsNotEmpty Then
                FormData.FondosMail = Request.QueryString("FondosMail") 
End If 

If Request.Form("UsercodeBO").IsNotEmpty Then
                FormData.UsercodeBO = Request.Form("UsercodeBO") 

ElseIf Request.QueryString("UsercodeBO").IsNotEmpty Then
                FormData.UsercodeBO = Request.QueryString("UsercodeBO") 
End If 

If Request.Form("UsercodeFASI").IsNotEmpty Then
                FormData.UsercodeFASI = Request.Form("UsercodeFASI") 

ElseIf Request.QueryString("UsercodeFASI").IsNotEmpty Then
                FormData.UsercodeFASI = Request.QueryString("UsercodeFASI") 
End If 

If Request.Form("ClienteInformaExiste").IsNotEmpty Then
                FormData.ClienteInformaExiste = Request.Form("ClienteInformaExiste") 

ElseIf Request.QueryString("ClienteInformaExiste").IsNotEmpty Then
                FormData.ClienteInformaExiste = Request.QueryString("ClienteInformaExiste") 
End If 

If Request.Form("ClienteInformaEsUsuario").IsNotEmpty Then
                FormData.ClienteInformaEsUsuario = Request.Form("ClienteInformaEsUsuario") 

ElseIf Request.QueryString("ClienteInformaEsUsuario").IsNotEmpty Then
                FormData.ClienteInformaEsUsuario = Request.QueryString("ClienteInformaEsUsuario") 
End If 

If Request.Form("UsuarioClaveEntrada").IsNotEmpty Then
                FormData.UsuarioClaveEntrada = Request.Form("UsuarioClaveEntrada") 

ElseIf Request.QueryString("UsuarioClaveEntrada").IsNotEmpty Then
                FormData.UsuarioClaveEntrada = Request.QueryString("UsuarioClaveEntrada") 
End If 

If Request.Form("UsuarioPassword").IsNotEmpty Then
                FormData.UsuarioPassword = Request.Form("UsuarioPassword") 

ElseIf Request.QueryString("UsuarioPassword").IsNotEmpty Then
                FormData.UsuarioPassword = Request.QueryString("UsuarioPassword") 
End If 

If Request.Form("QRegistros").IsNotEmpty Then
                FormData.QRegistros = Request.Form("QRegistros") 

ElseIf Request.QueryString("QRegistros").IsNotEmpty Then
                FormData.QRegistros = Request.QueryString("QRegistros") 
End If 

If Request.Form("frompanel").IsNotEmpty Then
                FormData.frompanel = Request.Form("frompanel") 

ElseIf Request.QueryString("frompanel").IsNotEmpty Then
                FormData.frompanel = Request.QueryString("frompanel") 
End If 

If Request.Form("GenderClient").IsNotEmpty Then
                FormData.GenderClient = Request.Form("GenderClient") 

ElseIf Request.QueryString("GenderClient").IsNotEmpty Then
                FormData.GenderClient = Request.QueryString("GenderClient") 
End If 

If Request.Form("ShowAdditionalInformation").IsNotEmpty Then
                FormData.ShowAdditionalInformation = Request.Form("ShowAdditionalInformation") 

ElseIf Request.QueryString("ShowAdditionalInformation").IsNotEmpty Then
                FormData.ShowAdditionalInformation = Request.QueryString("ShowAdditionalInformation") 
End If 

If Request.Form("ShowHealthInformation").IsNotEmpty Then
                FormData.ShowHealthInformation = Request.Form("ShowHealthInformation") 

ElseIf Request.QueryString("ShowHealthInformation").IsNotEmpty Then
                FormData.ShowHealthInformation = Request.QueryString("ShowHealthInformation") 
End If 

If Request.Form("ShowBeneficiariesInformation").IsNotEmpty Then
                FormData.ShowBeneficiariesInformation = Request.Form("ShowBeneficiariesInformation") 

ElseIf Request.QueryString("ShowBeneficiariesInformation").IsNotEmpty Then
                FormData.ShowBeneficiariesInformation = Request.QueryString("ShowBeneficiariesInformation") 
End If 

If Request.Form("ShowPaymentInformation").IsNotEmpty Then
                FormData.ShowPaymentInformation = Request.Form("ShowPaymentInformation") 

ElseIf Request.QueryString("ShowPaymentInformation").IsNotEmpty Then
                FormData.ShowPaymentInformation = Request.QueryString("ShowPaymentInformation") 
End If 

If Request.Form("ShowBasicInformation").IsNotEmpty Then
                FormData.ShowBasicInformation = Request.Form("ShowBasicInformation") 

ElseIf Request.QueryString("ShowBasicInformation").IsNotEmpty Then
                FormData.ShowBasicInformation = Request.QueryString("ShowBasicInformation") 
End If 


    End Sub
    
    Private Sub BehaviorControls(controlItem As Control, isEnable As Boolean)
        InMotionGIT.FrontOffice.Support.Helpers.ReflectionHandler.AssignPropertyValueSimple("Enabled", controlItem, isEnable)           
    End Sub
    
    Private Sub SetReadOnlyControls()
    
        BehaviorControls(EffectiveDate, False)
        BehaviorControls(ProductMasterDescription, False)
        BehaviorControls(BirthDate, False)
        BehaviorControls(Gender, False)
        BehaviorControls(SmokerIndicator, False)
        BehaviorControls(DireccionMostrar, False)
        BehaviorControls(eMail, False)
        BehaviorControls(InsuredAmount, False)
        BehaviorControls(Currency, False)
        BehaviorControls(TotalOriginalAnnualPremium, False)
        BehaviorControls(CoverageWithCalculatedPremium, False)
        BehaviorControls(BeneficiaryType, False)
        BehaviorControls(Beneficiary, False)
        BehaviorControls(radiobuttonlist1, False)
        BehaviorControls(radiobuttonlist2, False)
        BehaviorControls(Radiobutton3, False)
    
    End Sub
     
#End Region

#Region "Actions Data Methods"

    Private Function SessionTrace(message As String) As String

        If Not IsNothing(Session("Form.Track")) AndAlso Session("Form.Track").ToString.ToLower = "true" Then
            Dim tracelog As String = Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension(Page.AppRelativeVirtualPath)))

            tracelog += String.Format(CultureInfo.InvariantCulture, "{0} {1}<br>{2}", Now.ToString("hh:mm:ss.fff"), message, vbCrLf)
            Session(String.Format(CultureInfo.InvariantCulture, "Form.{0}.trace", IO.Path.GetFileNameWithoutExtension(Page.AppRelativeVirtualPath))) = tracelog
        End If

        Return message
    End Function
    
    Private Sub ControlsInitialization()
        CoverageWithCalculatedPremium.ClientVisible = True
        CoverageWithCalculatedPremium.Enabled = False
        Beneficiary.ClientVisible = True
        Beneficiary.Enabled = True

    End Sub     
  
    Private Sub ParametersToDictionary(ByRef target As Dictionary(Of String, Object))
        If IsNothing(target) Then
            target = New Dictionary(Of String, Object)

            target.Add("RiskInformation", _formData.RiskInformation) 
            target.Add("uwcaseid", _formData.uwcaseid) 
            target.Add("uwreqid", _formData.uwreqid) 
            target.Add("InsuredAmount", _formData.InsuredAmount) 
            target.Add("InsuredAmountSelected", _formData.InsuredAmountSelected) 
            target.Add("PlanType", _formData.PlanType) 
            target.Add("ClientExistInDB", _formData.ClientExistInDB) 
            target.Add("eMail", _formData.eMail) 
            target.Add("Currency", _formData.Currency) 
            target.Add("QueryType", _formData.QueryType) 
            target.Add("MasaCorporal", _formData.MasaCorporal) 
            target.Add("Age", _formData.Age) 
            target.Add("MessagePopUp", _formData.MessagePopUp) 
            target.Add("MessageIndicator", _formData.MessageIndicator) 
            target.Add("QuestionnairesAvailable", _formData.QuestionnairesAvailable) 
            target.Add("ProducerClientID", _formData.ProducerClientID) 
            target.Add("BeneficiaryType", _formData.BeneficiaryType) 
            target.Add("DefaultAddresses", _formData.DefaultAddresses) 
            target.Add("LaboratoryRequired", _formData.LaboratoryRequired) 
            target.Add("LaboratorySelectedByUser", _formData.LaboratorySelectedByUser) 
            target.Add("PrimaryInsured", _formData.PrimaryInsured) 
            target.Add("SendMailIndicator", _formData.SendMailIndicator) 
            target.Add("MailToProducerIndicator", _formData.MailToProducerIndicator) 
            target.Add("InRuleErros", _formData.InRuleErros) 
            target.Add("AccumulatedAmount", _formData.AccumulatedAmount) 
            target.Add("CancelledPoliciesQuantity", _formData.CancelledPoliciesQuantity) 
            target.Add("OtherPoliciesSameRiskQuantity", _formData.OtherPoliciesSameRiskQuantity) 
            target.Add("InRuleMessage", _formData.InRuleMessage) 
            target.Add("OnLinePrintIndicator", _formData.OnLinePrintIndicator) 
            target.Add("OnLinePrintResult", _formData.OnLinePrintResult) 
            target.Add("PolicyDocument", _formData.PolicyDocument) 
            target.Add("ErrorsFound", _formData.ErrorsFound) 
            target.Add("ReportURL", _formData.ReportURL) 
            target.Add("FormStatus", _formData.FormStatus) 
            target.Add("OnLinePrint", _formData.OnLinePrint) 
            target.Add("StatusRun", _formData.StatusRun) 
            target.Add("AddresseMailDLI", _formData.AddresseMailDLI) 
            target.Add("ProductMasterDescription", _formData.ProductMasterDescription) 
            target.Add("DireccionMostrar", _formData.DireccionMostrar) 
            target.Add("ConsumerInformation", _formData.ConsumerInformation) 
            target.Add("ShowGeneral", _formData.ShowGeneral) 
            target.Add("StatusCase", _formData.StatusCase) 
            target.Add("RecoveryCaseIndicator", _formData.RecoveryCaseIndicator) 
            target.Add("AnswerDiabetes", _formData.AnswerDiabetes) 
            target.Add("AnswerHeart", _formData.AnswerHeart) 
            target.Add("AnswerCancer", _formData.AnswerCancer) 
            target.Add("PaymentMethod", _formData.PaymentMethod) 
            target.Add("PreviousPayment", _formData.PreviousPayment) 
            target.Add("ClienteIndicado", _formData.ClienteIndicado) 
            target.Add("CompleteAddress", _formData.CompleteAddress) 
            target.Add("VerificarCuestionariosIndicador", _formData.VerificarCuestionariosIndicador) 
            target.Add("PlanillaModificacion", _formData.PlanillaModificacion) 
            target.Add("PlanillaVisualizacion", _formData.PlanillaVisualizacion) 
            target.Add("ProductDescription", _formData.ProductDescription) 
            target.Add("PrimaTotalAnual", _formData.PrimaTotalAnual) 
            target.Add("PrimaRecibo", _formData.PrimaRecibo) 
            target.Add("MonedaRecibo", _formData.MonedaRecibo) 
            target.Add("CurrentYear", _formData.CurrentYear) 
            target.Add("MesTarjeta", _formData.MesTarjeta) 
            target.Add("AnoTarjeta", _formData.AnoTarjeta) 
            target.Add("ImagenMostrada", _formData.ImagenMostrada) 
            target.Add("ImagenIncluida", _formData.ImagenIncluida) 
            target.Add("IsAnonymous", _formData.IsAnonymous) 
            target.Add("AgregarBeneficiario", _formData.AgregarBeneficiario) 
            target.Add("TypeOfPersonBenef", _formData.TypeOfPersonBenef) 
            target.Add("ValorAcumulado", _formData.ValorAcumulado) 
            target.Add("BeneficiariosMail", _formData.BeneficiariosMail) 
            target.Add("Codigo", _formData.Codigo) 
            target.Add("Descripcion", _formData.Descripcion) 
            target.Add("FondosMail", _formData.FondosMail) 
            target.Add("UsercodeBO", _formData.UsercodeBO) 
            target.Add("UsercodeFASI", _formData.UsercodeFASI) 
            target.Add("ClienteInformaExiste", _formData.ClienteInformaExiste) 
            target.Add("ClienteInformaEsUsuario", _formData.ClienteInformaEsUsuario) 
            target.Add("UsuarioClaveEntrada", _formData.UsuarioClaveEntrada) 
            target.Add("UsuarioPassword", _formData.UsuarioPassword) 
            target.Add("QRegistros", _formData.QRegistros) 
            target.Add("frompanel", _formData.frompanel) 
            target.Add("GenderClient", _formData.GenderClient) 
            target.Add("ShowAdditionalInformation", _formData.ShowAdditionalInformation) 
            target.Add("ShowHealthInformation", _formData.ShowHealthInformation) 
            target.Add("ShowBeneficiariesInformation", _formData.ShowBeneficiariesInformation) 
            target.Add("ShowPaymentInformation", _formData.ShowPaymentInformation) 
            target.Add("ShowBasicInformation", _formData.ShowBasicInformation) 

        Else
            target("RiskInformation") = _formData.RiskInformation 
            target("uwcaseid") = _formData.uwcaseid 
            target("uwreqid") = _formData.uwreqid 
            target("InsuredAmount") = _formData.InsuredAmount 
            target("InsuredAmountSelected") = _formData.InsuredAmountSelected 
            target("PlanType") = _formData.PlanType 
            target("ClientExistInDB") = _formData.ClientExistInDB 
            target("eMail") = _formData.eMail 
            target("Currency") = _formData.Currency 
            target("QueryType") = _formData.QueryType 
            target("MasaCorporal") = _formData.MasaCorporal 
            target("Age") = _formData.Age 
            target("MessagePopUp") = _formData.MessagePopUp 
            target("MessageIndicator") = _formData.MessageIndicator 
            target("QuestionnairesAvailable") = _formData.QuestionnairesAvailable 
            target("ProducerClientID") = _formData.ProducerClientID 
            target("BeneficiaryType") = _formData.BeneficiaryType 
            target("DefaultAddresses") = _formData.DefaultAddresses 
            target("LaboratoryRequired") = _formData.LaboratoryRequired 
            target("LaboratorySelectedByUser") = _formData.LaboratorySelectedByUser 
            target("PrimaryInsured") = _formData.PrimaryInsured 
            target("SendMailIndicator") = _formData.SendMailIndicator 
            target("MailToProducerIndicator") = _formData.MailToProducerIndicator 
            target("InRuleErros") = _formData.InRuleErros 
            target("AccumulatedAmount") = _formData.AccumulatedAmount 
            target("CancelledPoliciesQuantity") = _formData.CancelledPoliciesQuantity 
            target("OtherPoliciesSameRiskQuantity") = _formData.OtherPoliciesSameRiskQuantity 
            target("InRuleMessage") = _formData.InRuleMessage 
            target("OnLinePrintIndicator") = _formData.OnLinePrintIndicator 
            target("OnLinePrintResult") = _formData.OnLinePrintResult 
            target("PolicyDocument") = _formData.PolicyDocument 
            target("ErrorsFound") = _formData.ErrorsFound 
            target("ReportURL") = _formData.ReportURL 
            target("FormStatus") = _formData.FormStatus 
            target("OnLinePrint") = _formData.OnLinePrint 
            target("StatusRun") = _formData.StatusRun 
            target("AddresseMailDLI") = _formData.AddresseMailDLI 
            target("ProductMasterDescription") = _formData.ProductMasterDescription 
            target("DireccionMostrar") = _formData.DireccionMostrar 
            target("ConsumerInformation") = _formData.ConsumerInformation 
            target("ShowGeneral") = _formData.ShowGeneral 
            target("StatusCase") = _formData.StatusCase 
            target("RecoveryCaseIndicator") = _formData.RecoveryCaseIndicator 
            target("AnswerDiabetes") = _formData.AnswerDiabetes 
            target("AnswerHeart") = _formData.AnswerHeart 
            target("AnswerCancer") = _formData.AnswerCancer 
            target("PaymentMethod") = _formData.PaymentMethod 
            target("PreviousPayment") = _formData.PreviousPayment 
            target("ClienteIndicado") = _formData.ClienteIndicado 
            target("CompleteAddress") = _formData.CompleteAddress 
            target("VerificarCuestionariosIndicador") = _formData.VerificarCuestionariosIndicador 
            target("PlanillaModificacion") = _formData.PlanillaModificacion 
            target("PlanillaVisualizacion") = _formData.PlanillaVisualizacion 
            target("ProductDescription") = _formData.ProductDescription 
            target("PrimaTotalAnual") = _formData.PrimaTotalAnual 
            target("PrimaRecibo") = _formData.PrimaRecibo 
            target("MonedaRecibo") = _formData.MonedaRecibo 
            target("CurrentYear") = _formData.CurrentYear 
            target("MesTarjeta") = _formData.MesTarjeta 
            target("AnoTarjeta") = _formData.AnoTarjeta 
            target("ImagenMostrada") = _formData.ImagenMostrada 
            target("ImagenIncluida") = _formData.ImagenIncluida 
            target("IsAnonymous") = _formData.IsAnonymous 
            target("AgregarBeneficiario") = _formData.AgregarBeneficiario 
            target("TypeOfPersonBenef") = _formData.TypeOfPersonBenef 
            target("ValorAcumulado") = _formData.ValorAcumulado 
            target("BeneficiariosMail") = _formData.BeneficiariosMail 
            target("Codigo") = _formData.Codigo 
            target("Descripcion") = _formData.Descripcion 
            target("FondosMail") = _formData.FondosMail 
            target("UsercodeBO") = _formData.UsercodeBO 
            target("UsercodeFASI") = _formData.UsercodeFASI 
            target("ClienteInformaExiste") = _formData.ClienteInformaExiste 
            target("ClienteInformaEsUsuario") = _formData.ClienteInformaEsUsuario 
            target("UsuarioClaveEntrada") = _formData.UsuarioClaveEntrada 
            target("UsuarioPassword") = _formData.UsuarioPassword 
            target("QRegistros") = _formData.QRegistros 
            target("frompanel") = _formData.frompanel 
            target("GenderClient") = _formData.GenderClient 
            target("ShowAdditionalInformation") = _formData.ShowAdditionalInformation 
            target("ShowHealthInformation") = _formData.ShowHealthInformation 
            target("ShowBeneficiariesInformation") = _formData.ShowBeneficiariesInformation 
            target("ShowPaymentInformation") = _formData.ShowPaymentInformation 
            target("ShowBasicInformation") = _formData.ShowBasicInformation 

        End If     
    End Sub
    
    
    Private Sub ExecuteActionsInitializationForm()
                    Dim currentAction As String = SessionTrace("ActionsInitializationForm")
                    
                    Try                          
                        Dim _formContext As New InMotionGIT.Common.Contracts.Context(LanguageHelper.CurrentCultureToLanguage, _formData.InternalId)
                        Dim messageAction As String = String.Empty
                        Dim lastURL As String = String.Empty
                        Dim isNullResult As Boolean = True 
                        Dim isFoundData As Boolean  = False 
                        Dim parametersDictionary As Dictionary(Of String, Object) = Nothing
                        
                        ParametersToDictionary(parametersDictionary)
                        Dim errors As InMotionGIT.Common.DataType.Notify
 
                        With parametersDictionary
    .Add("errors", errors)
End With

                        currentAction = SessionTrace("1. NNCotizacionMiVidaValeSecuencia.StatusRun = StatusRun...") 
NNCotizacionMiVidaValeSecuencia.FormData.StatusRun = FormData.StatusRun
NNCotizacionMiVidaValeSecuencia.FormData.ShowAdditionalInformation = FormData.ShowAdditionalInformation
NNCotizacionMiVidaValeSecuencia.FormData.ShowHealthInformation = FormData.ShowHealthInformation
NNCotizacionMiVidaValeSecuencia.FormData.ShowBeneficiariesInformation = FormData.ShowBeneficiariesInformation
NNCotizacionMiVidaValeSecuencia.FormData.ShowPaymentInformation = FormData.ShowPaymentInformation
NNCotizacionMiVidaValeSecuencia.FormData.ShowBasicInformation = FormData.ShowBasicInformation
NNCotizacionMiVidaValeSecuencia.FormData.RiskInformation = FormData.RiskInformation
NNCotizacionMiVidaValeSecuencia.FormData.uwcaseid = FormData.uwcaseid
NNCotizacionMiVidaValeSecuencia.FormData.uwreqid = FormData.uwreqid
NNCotizacionMiVidaValeSecuencia.FormData.PlanType = FormData.PlanType
NNCotizacionMiVidaValeSecuencia.FormData.ClientExistInDB = FormData.ClientExistInDB
NNCotizacionMiVidaValeSecuencia.FormData.eMail = FormData.eMail
NNCotizacionMiVidaValeSecuencia.FormData.Currency = FormData.Currency
NNCotizacionMiVidaValeSecuencia.FormData.Age = FormData.Age
NNCotizacionMiVidaValeSecuencia.FormData.QuestionnairesAvailable = FormData.QuestionnairesAvailable
NNCotizacionMiVidaValeSecuencia.FormData.ProducerClientID = FormData.ProducerClientID
NNCotizacionMiVidaValeSecuencia.FormData.BeneficiaryType = FormData.BeneficiaryType
NNCotizacionMiVidaValeSecuencia.FormData.SendMailIndicator = FormData.SendMailIndicator
NNCotizacionMiVidaValeSecuencia.FormData.MailToProducerIndicator = FormData.MailToProducerIndicator
NNCotizacionMiVidaValeSecuencia.FormData.InRuleErros = FormData.InRuleErros
NNCotizacionMiVidaValeSecuencia.FormData.AccumulatedAmount = FormData.AccumulatedAmount
NNCotizacionMiVidaValeSecuencia.FormData.CancelledPoliciesQuantity = FormData.CancelledPoliciesQuantity
NNCotizacionMiVidaValeSecuencia.FormData.OtherPoliciesSameRiskQuantity = FormData.OtherPoliciesSameRiskQuantity
NNCotizacionMiVidaValeSecuencia.FormData.ConsumerInformation = FormData.ConsumerInformation
NNCotizacionMiVidaValeSecuencia.FormData.OnLinePrintIndicator = FormData.OnLinePrintIndicator
NNCotizacionMiVidaValeSecuencia.FormData.OnLinePrintResult = FormData.OnLinePrintResult
NNCotizacionMiVidaValeSecuencia.FormData.PolicyDocument = FormData.PolicyDocument
NNCotizacionMiVidaValeSecuencia.FormData.ErrorsFound = FormData.ErrorsFound
NNCotizacionMiVidaValeSecuencia.FormData.ReportURL = FormData.ReportURL
NNCotizacionMiVidaValeSecuencia.FormData.FormStatus = FormData.FormStatus
NNCotizacionMiVidaValeSecuencia.FormData.OnLinePrint = FormData.OnLinePrint
NNCotizacionMiVidaValeSecuencia.FormData.StatusCase = FormData.StatusCase
NNCotizacionMiVidaValeSecuencia.FormData.RecoveryCaseIndicator = FormData.RecoveryCaseIndicator
NNCotizacionMiVidaValeSecuencia.FormData.AnswerDiabetes = FormData.AnswerDiabetes
NNCotizacionMiVidaValeSecuencia.FormData.AnswerHeart = FormData.AnswerHeart
NNCotizacionMiVidaValeSecuencia.FormData.AnswerCancer = FormData.AnswerCancer
NNCotizacionMiVidaValeSecuencia.FormData.PaymentMethod = FormData.PaymentMethod
NNCotizacionMiVidaValeSecuencia.FormData.ProductMasterDescription = FormData.ProductMasterDescription
NNCotizacionMiVidaValeSecuencia.FormData.PreviousPayment = FormData.PreviousPayment
NNCotizacionMiVidaValeSecuencia.FormData.ClienteIndicado = FormData.ClienteIndicado
NNCotizacionMiVidaValeSecuencia.FormData.CompleteAddress = FormData.CompleteAddress
NNCotizacionMiVidaValeSecuencia.FormData.AddresseMailDLI = FormData.AddresseMailDLI
NNCotizacionMiVidaValeSecuencia.FormData.VerificarCuestionariosIndicador = FormData.VerificarCuestionariosIndicador
NNCotizacionMiVidaValeSecuencia.FormData.PlanillaModificacion = FormData.PlanillaModificacion
NNCotizacionMiVidaValeSecuencia.FormData.PlanillaVisualizacion = FormData.PlanillaVisualizacion
NNCotizacionMiVidaValeSecuencia.FormData.ProductDescription = FormData.ProductDescription
NNCotizacionMiVidaValeSecuencia.FormData.PrimaTotalAnual = FormData.PrimaTotalAnual
NNCotizacionMiVidaValeSecuencia.FormData.PrimaRecibo = FormData.PrimaRecibo
NNCotizacionMiVidaValeSecuencia.FormData.MonedaRecibo = FormData.MonedaRecibo
NNCotizacionMiVidaValeSecuencia.FormData.CurrentYear = FormData.CurrentYear
NNCotizacionMiVidaValeSecuencia.FormData.IsAnonymous = FormData.IsAnonymous
NNCotizacionMiVidaValeSecuencia.FormData.BeneficiariosMail = FormData.BeneficiariosMail
NNCotizacionMiVidaValeSecuencia.FormData.Codigo = FormData.Codigo
NNCotizacionMiVidaValeSecuencia.FormData.Descripcion = FormData.Descripcion
NNCotizacionMiVidaValeSecuencia.FormData.FondosMail = FormData.FondosMail
NNCotizacionMiVidaValeSecuencia.FormData.UsercodeBO = FormData.UsercodeBO
NNCotizacionMiVidaValeSecuencia.FormData.UsercodeFASI = FormData.UsercodeFASI
NNCotizacionMiVidaValeSecuencia.FormData.QRegistros = FormData.QRegistros
NNCotizacionMiVidaValeSecuencia.FormData.frompanel = FormData.frompanel
NNCotizacionMiVidaValeSecuencia.FormData.ShowGeneral = FormData.ShowGeneral
NNCotizacionMiVidaValeSecuencia.FormData.InsuredAmount = FormData.InsuredAmount
NNCotizacionMiVidaValeSecuencia.FormData.InsuredAmountSelected = FormData.InsuredAmountSelected
NNCotizacionMiVidaValeSecuencia.FormData.ValorAcumulado = FormData.ValorAcumulado
NNCotizacionMiVidaValeSecuencia.FormData.GenderClient = FormData.GenderClient
NNCotizacionMiVidaValeSecuencia.FormData.DireccionMostrar = FormData.DireccionMostrar

            currentAction = SessionTrace("2. NNCotizacionMiVidaValeSecuencia.button19.Visible = false, NNCotizacionMiVidaValeSecuencia.EnviarCotizacionEmail.Visible = false, NNCotizacionMiVidaValeSecuencia.eMail.Visible = false...") 
            currentAction = SessionTrace("2.1. NNCotizacionMiVidaValeSecuencia.button19.Visible = false...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button19,Hidden")
            currentAction = SessionTrace("2.2. NNCotizacionMiVidaValeSecuencia.EnviarCotizacionEmail.Visible = false...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("EnviarCotizacionEmail,Hidden")
            currentAction = SessionTrace("2.3. NNCotizacionMiVidaValeSecuencia.eMail.Visible = false...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("eMail,Hidden")
            currentAction = SessionTrace("2.4. NNCotizacionMiVidaValeSecuencia.Accept.Visible = false...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("Accept,Hidden")
            currentAction = SessionTrace("2.5. NNCotizacionMiVidaValeSecuencia.OnLinePrintIndicator.Visible = false...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("OnLinePrintIndicator,Hidden")

            currentAction = SessionTrace("3. If _formData.ShowBasicInformation = true Then") 
If _formData.ShowBasicInformation = true Then

            currentAction = SessionTrace("4. zone12IB.Enabled = false, label1.Visible = false, Cotizar.Visible = false...") 
            currentAction = SessionTrace("4.1. zone12IB.Enabled = false...")
BehaviorShowControls("zone12IB,Disabled")
            currentAction = SessionTrace("4.2. label1.Visible = false...")
BehaviorShowControls("label1,Hidden")
            currentAction = SessionTrace("4.3. Cotizar.Visible = false...")
BehaviorShowControls("Cotizar,Hidden")
            currentAction = SessionTrace("4.4. label6.Visible = false...")
BehaviorShowControls("label6,Hidden")
            currentAction = SessionTrace("4.5. Acepto.Visible = true...")
BehaviorShowControls("Acepto,Visible")
            currentAction = SessionTrace("4.6. zone5.Visible = true...")
BehaviorShowControls("zone5,Visible")
            currentAction = SessionTrace("4.7. Coverages.Visible = true...")
BehaviorShowControls("Coverages,Visible")

        Else 
            currentAction = SessionTrace("5. zone5.Visible = true") 
            currentAction = SessionTrace("5.1. zone5.Visible = true...")
BehaviorShowControls("zone5,Visible")

            End If
            currentAction = SessionTrace("6. If _formData.ShowAdditionalInformation = true Then") 
If _formData.ShowAdditionalInformation = true Then

            currentAction = SessionTrace("7. NNCotizacionMiVidaValeSecuencia.button32.Visible = true") 
            currentAction = SessionTrace("7.1. NNCotizacionMiVidaValeSecuencia.button32.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button32,Visible")

            currentAction = SessionTrace("8. NNCotizacionMiVidaValeSecuencia.button19.Visible = true, NNCotizacionMiVidaValeSecuencia.EnviarCotizacionEmail.Visible = true, NNCotizacionMiVidaValeSecuencia.eMail.Visible = true") 
            currentAction = SessionTrace("8.1. NNCotizacionMiVidaValeSecuencia.button19.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button19,Visible")
            currentAction = SessionTrace("8.2. NNCotizacionMiVidaValeSecuencia.EnviarCotizacionEmail.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("EnviarCotizacionEmail,Visible")
            currentAction = SessionTrace("8.3. NNCotizacionMiVidaValeSecuencia.eMail.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("eMail,Visible")

        Else 
            currentAction = SessionTrace("9. NNCotizacionMiVidaValeSecuencia.button32.Visible = false") 
            currentAction = SessionTrace("9.1. NNCotizacionMiVidaValeSecuencia.button32.Visible = false...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button32,Hidden")

            End If
            currentAction = SessionTrace("10. If _formData.ShowHealthInformation = true Then") 
If _formData.ShowHealthInformation = true Then

            currentAction = SessionTrace("11. NNCotizacionMiVidaValeSecuencia.button34.Visible = true") 
            currentAction = SessionTrace("11.1. NNCotizacionMiVidaValeSecuencia.button34.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button34,Visible")

        Else 
            currentAction = SessionTrace("12. NNCotizacionMiVidaValeSecuencia.button34.Visible = false") 
            currentAction = SessionTrace("12.1. NNCotizacionMiVidaValeSecuencia.button34.Visible = false...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button34,Hidden")

            End If
            currentAction = SessionTrace("13. If _formData.ShowBeneficiariesInformation = true Then") 
If _formData.ShowBeneficiariesInformation = true Then

            currentAction = SessionTrace("14. NNCotizacionMiVidaValeSecuencia.button35.Visible = true") 
            currentAction = SessionTrace("14.1. NNCotizacionMiVidaValeSecuencia.button35.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button35,Visible")

            currentAction = SessionTrace("15. NNCotizacionMiVidaValeSecuencia.button19.Visible = true, NNCotizacionMiVidaValeSecuencia.EnviarCotizacionEmail.Visible = true, NNCotizacionMiVidaValeSecuencia.eMail.Visible = true") 
            currentAction = SessionTrace("15.1. NNCotizacionMiVidaValeSecuencia.button19.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button19,Visible")
            currentAction = SessionTrace("15.2. NNCotizacionMiVidaValeSecuencia.EnviarCotizacionEmail.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("EnviarCotizacionEmail,Visible")
            currentAction = SessionTrace("15.3. NNCotizacionMiVidaValeSecuencia.eMail.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("eMail,Visible")

        Else 
            currentAction = SessionTrace("16. NNCotizacionMiVidaValeSecuencia.button35.Visible = false, NNCotizacionMiVidaValeSecuencia.button19.Visible = false, NNCotizacionMiVidaValeSecuencia.EnviarCotizacionEmail.Visible = false...") 
            currentAction = SessionTrace("16.1. NNCotizacionMiVidaValeSecuencia.button35.Visible = false...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button35,Hidden")
            currentAction = SessionTrace("16.2. NNCotizacionMiVidaValeSecuencia.button19.Visible = false...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button19,Hidden")
            currentAction = SessionTrace("16.3. NNCotizacionMiVidaValeSecuencia.EnviarCotizacionEmail.Visible = false...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("EnviarCotizacionEmail,Hidden")
            currentAction = SessionTrace("16.4. NNCotizacionMiVidaValeSecuencia.eMail.Visible = false...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("eMail,Hidden")

            End If
            currentAction = SessionTrace("17. If _formData.ShowPaymentInformation = true Then") 
If _formData.ShowPaymentInformation = true Then

            currentAction = SessionTrace("18. NNCotizacionMiVidaValeSecuencia.button36.Visible = true") 
            currentAction = SessionTrace("18.1. NNCotizacionMiVidaValeSecuencia.button36.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button36,Visible")

            currentAction = SessionTrace("19. NNCotizacionMiVidaValeSecuencia.button19.Visible = true, NNCotizacionMiVidaValeSecuencia.EnviarCotizacionEmail.Visible = true, NNCotizacionMiVidaValeSecuencia.eMail.Visible = true") 
            currentAction = SessionTrace("19.1. NNCotizacionMiVidaValeSecuencia.button19.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button19,Visible")
            currentAction = SessionTrace("19.2. NNCotizacionMiVidaValeSecuencia.EnviarCotizacionEmail.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("EnviarCotizacionEmail,Visible")
            currentAction = SessionTrace("19.3. NNCotizacionMiVidaValeSecuencia.eMail.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("eMail,Visible")

        Else 
            currentAction = SessionTrace("20. NNCotizacionMiVidaValeSecuencia.button36.Visible = false") 
            currentAction = SessionTrace("20.1. NNCotizacionMiVidaValeSecuencia.button36.Visible = false...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button36,Hidden")

            End If
            currentAction = SessionTrace("21. If _formData.ShowGeneral = true Then") 
If _formData.ShowGeneral = true Then

            currentAction = SessionTrace("22. NNCotizacionMiVidaValeSecuencia.button19.Visible = true, NNCotizacionMiVidaValeSecuencia.EnviarCotizacionEmail.Visible = true, NNCotizacionMiVidaValeSecuencia.eMail.Visible = true...") 
            currentAction = SessionTrace("22.1. NNCotizacionMiVidaValeSecuencia.button19.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("button19,Visible")
            currentAction = SessionTrace("22.2. NNCotizacionMiVidaValeSecuencia.EnviarCotizacionEmail.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("EnviarCotizacionEmail,Visible")
            currentAction = SessionTrace("22.3. NNCotizacionMiVidaValeSecuencia.eMail.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("eMail,Visible")
            currentAction = SessionTrace("22.4. NNCotizacionMiVidaValeSecuencia.Accept.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("Accept,Visible")
            currentAction = SessionTrace("22.5. NNCotizacionMiVidaValeSecuencia.OnLinePrintIndicator.Visible = true...")
NNCotizacionMiVidaValeSecuencia.BehaviorShowControls("OnLinePrintIndicator,Visible")

            End If

                        
                        currentAction = String.Empty
                         
                    Catch ex As Exception
                        InMotionGIT.Common.Helpers.LogHandler.ErrorLog(Page.AppRelativeVirtualPath, currentAction, ex)
						_formData.Errors.Add(New InMotionGIT.Common.Contracts.Errors.Error With {.Message = currentAction & " " & ex.Message, .Severity = InMotionGIT.Common.Contracts.Errors.Enumerations.EnumSeverity.Error})

                        If Request.QueryString("debug").IsNotEmpty Then
                            FormMessageLabel.Text = InMotionGIT.Common.Helpers.ExceptionHandlers.TraceInnerExceptionMessage(ex, True)
                            FormMessageLabel.ForeColor = Drawing.Color.Black
                            FormMessageLabel.Font.Bold = True
                            MessageTable.Visible = True
                        End If
                        
                    Finally                     
                        If _formData.Errors.Count > 0 Then
                            SetErrors(_formData.Errors)
                        End If
                        
                        If _formData.Errors.Count = 0 AndAlso Not String.IsNullOrEmpty(_webTransfer) Then
                            If Page.IsCallback Then
                                DevExpress.Web.ASPxClasses.ASPxWebControl.RedirectOnCallback(_webTransfer)
                            Else
                                Response.ClearHeaders()
                                Response.ClearContent()
                                Response.Redirect(_webTransfer)
                            End If
                        End If
                   End Try
               End Sub
    


    
#End Region






End Class

<Serializable()>
Public Class NNCotizacionVidaResumenParameter
    Inherits InMotionGIT.FrontOffice.Support.DataType.FormBase(Of  NNCotizacionVidaResumenParameter)

    ' Methods
    Public Sub New()
        MyBase.New()
    End Sub

    ' Properties
    Public Property RiskInformation As InMotionGIT.Policy.Entity.Contracts.RiskInformation
    Public Property uwcaseid As Int64
    Public Property uwreqid As Int64
    Public Property InsuredAmount As Decimal
    Public Property InsuredAmountSelected As Decimal
    Public Property PlanType As Int32
    Public Property ClientExistInDB As Boolean
    Public Property eMail As String
    Public Property Currency As Int32
    Public Property QueryType As Int32
    Public Property MasaCorporal As Decimal
    Public Property Age As Int32
    Public Property MessagePopUp As String
    Public Property MessageIndicator As Boolean
    Public Property QuestionnairesAvailable As InMotionGIT.Questionnaires.QuestionnairesAvailable
    Public Property ProducerClientID As String
    Public Property BeneficiaryType As Int32
    Public Property DefaultAddresses As Boolean
    Public Property LaboratoryRequired As Boolean
    Public Property LaboratorySelectedByUser As Boolean
    Public Property PrimaryInsured As String
    Public Property SendMailIndicator As Boolean
    Public Property MailToProducerIndicator As Boolean
    Public Property InRuleErros As Boolean
    Public Property AccumulatedAmount As Decimal
    Public Property CancelledPoliciesQuantity As Int32
    Public Property OtherPoliciesSameRiskQuantity As Int32
    Public Property InRuleMessage As String
    Public Property OnLinePrintIndicator As Boolean
    Public Property OnLinePrintResult As Int32
    Public Property PolicyDocument As String
    Public Property ErrorsFound As Boolean
    Public Property ReportURL As String
    Public Property FormStatus As Int32
    Public Property OnLinePrint As Int32
    Public Property StatusRun As Boolean
    Public Property AddresseMailDLI As InMotionGIT.AddressManager.Contract.Models.AddresseMailDLI
    Public Property ProductMasterDescription As String
    Public Property DireccionMostrar As String
    Public Property ConsumerInformation As InMotionGIT.Common.Contracts.Process.ConsumerInformation
    Public Property ShowGeneral As Boolean
    Public Property StatusCase As Int32
    Public Property RecoveryCaseIndicator As Boolean
    Public Property AnswerDiabetes As String
    Public Property AnswerHeart As String
    Public Property AnswerCancer As String
    Public Property PaymentMethod As Int32
    Public Property PreviousPayment As Boolean
    Public Property ClienteIndicado As String
    Public Property CompleteAddress As String
    Public Property VerificarCuestionariosIndicador As Boolean
    Public Property PlanillaModificacion As String
    Public Property PlanillaVisualizacion As String
    Public Property ProductDescription As String
    Public Property PrimaTotalAnual As Decimal
    Public Property PrimaRecibo As Decimal
    Public Property MonedaRecibo As Int32
    Public Property CurrentYear As Int32
    Public Property MesTarjeta As Int32
    Public Property AnoTarjeta As Int32
    Public Property ImagenMostrada As String
    Public Property ImagenIncluida As String
    Public Property IsAnonymous As Boolean
    Public Property AgregarBeneficiario As Boolean
    Public Property TypeOfPersonBenef As Int32
    Public Property ValorAcumulado As Decimal
    Public Property BeneficiariosMail As String
    Public Property Codigo As Int32
    Public Property Descripcion As String
    Public Property FondosMail As String
    Public Property UsercodeBO As Int32
    Public Property UsercodeFASI As Int32
    Public Property ClienteInformaExiste As Boolean
    Public Property ClienteInformaEsUsuario As Boolean
    Public Property UsuarioClaveEntrada As String
    Public Property UsuarioPassword As String
    Public Property QRegistros As Int32
    Public Property frompanel As Boolean
    Public Property GenderClient As String
    Public Property ShowAdditionalInformation As Boolean
    Public Property ShowHealthInformation As Boolean
    Public Property ShowBeneficiariesInformation As Boolean
    Public Property ShowPaymentInformation As Boolean
    Public Property ShowBasicInformation As Boolean


End Class