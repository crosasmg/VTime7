<?xml version="1.0"?>
<doc>
<assembly>
<name>
InMotionGIT.Rating.Routines.Entity.Contracts
</name>
</assembly>
<members>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.My.Resources.Resources">
<summary>
  Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
</summary>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.My.Resources.Resources.ResourceManager">
<summary>
  Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
</summary>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.My.Resources.Resources.Culture">
<summary>
  Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
  búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
</summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.Enumerations.EnumAditionalCoverageFireChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.Enumerations.EnumBasicRateForFireChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.Enumerations.EnumBasicRateForIndustrialRiskChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.Enumerations.EnumBasicRateOrdinaryRiskFireChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.Enumerations.EnumFlatRateOFTaxChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.Enumerations.EnumRatingTableActivityCategoryFireChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.Enumerations.EnumRatingTableAPVProductChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.Enumerations.EnumRatingTableEarthquakeFireChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.Enumerations.EnumRatingTableForAutoChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.Enumerations.EnumRatingTableForMoneyInSafeChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.Enumerations.EnumRatingTableHurricaneFireChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.Enumerations.EnumRatingTableTheftContentChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.Enumerations.EnumRatingTableTraditionalLifeChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.Enumerations.EnumTheftInsuredAmountChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire">
 <summary>
 Table of additional coverages Fire.
 </summary>
<remarks>Data-source is 'TAR_COVER_FH'.</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.CreateNewAditionalCoverageFire">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire._ConstructionClass">
<summary>
Class of construction.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire._StateOrProvince">
<summary>
Code of the state or province where the risk is located.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire._Municipality">
<summary>
Code of the municipality.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire._LowestInsuredAmount">
<summary>
Lowest limit of the sum insured of the coverage to which the rate or premium is applied
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire._HighestInsuredAmount">
<summary>
Highest limit of the sum insured of the coverage to which the rate or premium is applied
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire._RatePerThousand">
<summary>
Rate (o/oo) to be applied to the sum insured in order to obtain the premium of the module or coverage.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire._PremiumAmount">
<summary>
Premium amount or amount to be added to the premium
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAR_COVER_FH.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAR_COVER_FH.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'TAR_COVER_FH.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'TAR_COVER_FH.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'TAR_COVER_FH.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAR_COVER_FH.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.ConstructionClass">
<summary>
Class of construction. (NCONSTCAT)..
</summary>
<remarks>Data-source is 'TAR_COVER_FH.NCONSTCAT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.StateOrProvince">
<summary>
Code of the state or province where the risk is located. (NPROVINCE)..
</summary>
<remarks>Data-source is 'TAR_COVER_FH.NPROVINCE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.Municipality">
<summary>
Code of the municipality. (NMUNICIPALITY)..
</summary>
<remarks>Data-source is 'TAR_COVER_FH.NMUNICIPALITY'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.LowestInsuredAmount">
<summary>
Lowest limit of the sum insured of the coverage to which the rate or premium is applied (NCAP_INITIAL)..
</summary>
<remarks>Data-source is 'TAR_COVER_FH.NCAP_INITIAL'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAR_COVER_FH.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.HighestInsuredAmount">
<summary>
Highest limit of the sum insured of the coverage to which the rate or premium is applied (NCAP_END)..
</summary>
<remarks>Data-source is 'TAR_COVER_FH.NCAP_END'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.RatePerThousand">
<summary>
Rate (o/oo) to be applied to the sum insured in order to obtain the premium of the module or coverage. (NRATE)..
</summary>
<remarks>Data-source is 'TAR_COVER_FH.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.PremiumAmount">
<summary>
Premium amount or amount to be added to the premium (NPREMIUM)..
</summary>
<remarks>Data-source is 'TAR_COVER_FH.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAR_COVER_FH.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAR_COVER_FH.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="AditionalCoverageFireItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFire.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFireCollection">
 <summary>
 Collection for AditionalCoverageFire class
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFireCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFireCollection.AddAditionalCoverageFire">
 <summary>
 Add an instance of class 'AditionalCoverageFire' in the AditionalCoverageFireCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFireCollection.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFireCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFireCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFireCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.AditionalCoverageFireCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire">
 <summary>
 Basic coverage rate of fire
 </summary>
<remarks>Data-source is 'TAR_FIRE_FH'.</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.CreateNewBasicRateForFire">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire._ConstructionClass">
<summary>
Class of construction.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire._LowestInsuredAmount">
<summary>
Lowest limit of the sum insured of the coverage to which the rate or premium is applied
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire._HighestInsuredAmount">
<summary>
Highest limit of the sum insured of the coverage to which the rate or premium is applied
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire._RatePerThousand">
<summary>
Rate (o/oo) to be applied to the sum insured in order to obtain the premium of the module or coverage.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire._PremiumAmount">
<summary>
Premium amount or amount to be added to the premium
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAR_FIRE_FH.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAR_FIRE_FH.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'TAR_FIRE_FH.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'TAR_FIRE_FH.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'TAR_FIRE_FH.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAR_FIRE_FH.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.ConstructionClass">
<summary>
Class of construction. (NCONSTCAT)..
</summary>
<remarks>Data-source is 'TAR_FIRE_FH.NCONSTCAT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.LowestInsuredAmount">
<summary>
Lowest limit of the sum insured of the coverage to which the rate or premium is applied (NCAP_INITIAL)..
</summary>
<remarks>Data-source is 'TAR_FIRE_FH.NCAP_INITIAL'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAR_FIRE_FH.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.HighestInsuredAmount">
<summary>
Highest limit of the sum insured of the coverage to which the rate or premium is applied (NCAP_END)..
</summary>
<remarks>Data-source is 'TAR_FIRE_FH.NCAP_END'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.RatePerThousand">
<summary>
Rate (o/oo) to be applied to the sum insured in order to obtain the premium of the module or coverage. (NRATE)..
</summary>
<remarks>Data-source is 'TAR_FIRE_FH.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.PremiumAmount">
<summary>
Premium amount or amount to be added to the premium (NPREMIUM)..
</summary>
<remarks>Data-source is 'TAR_FIRE_FH.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAR_FIRE_FH.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAR_FIRE_FH.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="BasicRateForFireItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFire.ConstructionClassDescription">
 <summary>
 Class of construction.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE233'.
 </remarks>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFireCollection">
 <summary>
 Collection for BasicRateForFire class
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFireCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFireCollection.AddBasicRateForFire">
 <summary>
 Add an instance of class 'BasicRateForFire' in the BasicRateForFireCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFireCollection.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFireCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFireCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFireCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForFireCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk">
 <summary>
 Basic Rate Table of Industrial Risks.
 </summary>
<remarks>Data-source is 'TAR_FIREBASIND'.</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.CreateNewBasicRateForIndustrialRisk">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk._Article">
<summary>
FIELD DELETED FROM THE SYSTEM
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk._TypeOfBusiness">
<summary>
Type of business.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk._BuldingRate">
<summary>
Building Rate
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk._ContentRate">
<summary>
Content Rate
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk._LiabilityRate">
<summary>
Rate for liability.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.Article">
<summary>
FIELD DELETED FROM THE SYSTEM (NARTICLE)..
</summary>
<remarks>Data-source is 'TAR_FIREBASIND.NARTICLE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.TypeOfBusiness">
<summary>
Type of business. (NDETAILART)..
</summary>
<remarks>Data-source is 'TAR_FIREBASIND.NDETAILART'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAR_FIREBASIND.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.BuldingRate">
<summary>
Building Rate (NRATEBUILD)..
</summary>
<remarks>Data-source is 'TAR_FIREBASIND.NRATEBUILD'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.ContentRate">
<summary>
Content Rate (NRATECONT)..
</summary>
<remarks>Data-source is 'TAR_FIREBASIND.NRATECONT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.LiabilityRate">
<summary>
Rate for liability. (NRATERC)..
</summary>
<remarks>Data-source is 'TAR_FIREBASIND.NRATERC'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAR_FIREBASIND.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAR_FIREBASIND.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAR_FIREBASIND.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'TAR_FIREBASIND.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="BasicRateForIndustrialRiskItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRisk.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRiskCollection">
 <summary>
 Collection for BasicRateForIndustrialRisk class
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRiskCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRiskCollection.AddBasicRateForIndustrialRisk">
 <summary>
 Add an instance of class 'BasicRateForIndustrialRisk' in the BasicRateForIndustrialRiskCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRiskCollection.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRiskCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRiskCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRiskCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateForIndustrialRiskCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire">
 <summary>
 Basic rate for ordinary risks of fire.
 </summary>
<remarks>Data-source is 'TAR_FIREBASORD'.</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.CreateNewBasicRateOrdinaryRiskFire">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire._NARTICLE">
<summary>
Type of business.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire._TypeOfBusiness">
<summary>
Type of business.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire._ActivityCategory">
<summary>
Category of the activity
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.NARTICLE">
<summary>
Type of business..
</summary>
<remarks>Data-source is 'TAR_FIREBASORD.NARTICLE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.TypeOfBusiness">
<summary>
Type of business. (NDETAILART)..
</summary>
<remarks>Data-source is 'TAR_FIREBASORD.NDETAILART'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAR_FIREBASORD.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.ActivityCategory">
<summary>
Category of the activity (NACTIVITYCAT)..
</summary>
<remarks>Data-source is 'TAR_FIREBASORD.NACTIVITYCAT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAR_FIREBASORD.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAR_FIREBASORD.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAR_FIREBASORD.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'TAR_FIREBASORD.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="BasicRateOrdinaryRiskFireItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFire.ActivityCategoryDescription">
 <summary>
 Category of the activity
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7044'.
 </remarks>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFireCollection">
 <summary>
 Collection for BasicRateOrdinaryRiskFire class
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFireCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFireCollection.AddBasicRateOrdinaryRiskFire">
 <summary>
 Add an instance of class 'BasicRateOrdinaryRiskFire' in the BasicRateOrdinaryRiskFireCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFireCollection.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFireCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFireCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFireCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.BasicRateOrdinaryRiskFireCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax">
 <summary>
 Table of flat rates of tax.
 </summary>
<remarks>Data-source is 'TAX_FIXVAL'.</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.CreateNewFlatRateOFTax">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax._TaxCode">
<summary>
Code of the tax.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax._TaxType">
<summary>
Tax type.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax._SupportingDocument">
<summary>
Type of support document.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax._Percentage">
<summary>
Percentage to be applied
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax._CodeLineBusiness">
<summary>
Code of the line of business
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax._Currency">
<summary>
Currency
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.TaxCode">
<summary>
Code of the tax. (NCODE)..
</summary>
<remarks>Data-source is 'TAX_FIXVAL.NCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.TaxType">
<summary>
Tax type. (STYPETAX)..
</summary>
<remarks>Data-source is 'TAX_FIXVAL.STYPETAX'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAX_FIXVAL.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.SupportingDocument">
<summary>
Type of support document. (NTYPESUPPORT)..
</summary>
<remarks>Data-source is 'TAX_FIXVAL.NTYPESUPPORT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.Percentage">
<summary>
Percentage to be applied (NPERCENT)..
</summary>
<remarks>Data-source is 'TAX_FIXVAL.NPERCENT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAX_FIXVAL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAX_FIXVAL.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAX_FIXVAL.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.CodeLineBusiness">
<summary>
Code of the line of business (NBRANCH)..
Source 'InMotion-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAX_FIXVAL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.Currency">
<summary>
Currency (NCURRENCY)..
Source 'InMotion-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAX_FIXVAL.NCURRENCY'.</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="FlatRateOFTaxItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.TaxTypeDescription">
 <summary>
 Tax type.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5602'.
 </remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTax.SupportingDocumentDescription">
 <summary>
 Type of support document.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5570'.
 </remarks>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTaxCollection">
 <summary>
 Collection for FlatRateOFTax class
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTaxCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTaxCollection.AddFlatRateOFTax">
 <summary>
 Add an instance of class 'FlatRateOFTax' in the FlatRateOFTaxCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTaxCollection.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTaxCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTaxCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTaxCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.FlatRateOFTaxCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire">
 <summary>
 Rates per category of activity - Fire.
 </summary>
<remarks>Data-source is 'TAR_FIRECAT'.</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.CreateNewRatingTableActivityCategoryFire">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire._ActivityCategory">
<summary>
Category of the activity
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire._ConstructionClass">
<summary>
Class of construction.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire._BuldingRate">
<summary>
Building Rate
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire._ContentRate">
<summary>
Content Rate
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire._LiabilityRate">
<summary>
Rate for liability.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.ActivityCategory">
<summary>
Category of the activity (NACTIVITYCAT)..
</summary>
<remarks>Data-source is 'TAR_FIRECAT.NACTIVITYCAT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.ConstructionClass">
<summary>
Class of construction. (NCONSTCAT)..
</summary>
<remarks>Data-source is 'TAR_FIRECAT.NCONSTCAT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAR_FIRECAT.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.BuldingRate">
<summary>
Building Rate (NRATEBUILD)..
</summary>
<remarks>Data-source is 'TAR_FIRECAT.NRATEBUILD'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.ContentRate">
<summary>
Content Rate (NRATECONT)..
</summary>
<remarks>Data-source is 'TAR_FIRECAT.NRATECONT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.LiabilityRate">
<summary>
Rate for liability. (NRATERC)..
</summary>
<remarks>Data-source is 'TAR_FIRECAT.NRATERC'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAR_FIRECAT.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAR_FIRECAT.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAR_FIRECAT.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'TAR_FIRECAT.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="RatingTableActivityCategoryFireItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.ActivityCategoryDescription">
 <summary>
 Category of the activity
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7044'.
 </remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFire.ConstructionClassDescription">
 <summary>
 Class of construction.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE233'.
 </remarks>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFireCollection">
 <summary>
 Collection for RatingTableActivityCategoryFire class
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFireCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFireCollection.AddRatingTableActivityCategoryFire">
 <summary>
 Add an instance of class 'RatingTableActivityCategoryFire' in the RatingTableActivityCategoryFireCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFireCollection.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFireCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFireCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFireCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableActivityCategoryFireCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct">
 <summary>
 Rating table of the APV product.
 </summary>
<remarks>Data-source is 'TAR_APV'.</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.CreateNewRatingTableAPVProduct">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._ClientRole">
<summary>
Role of the client in the policy.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._NOPTION">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._YoungestAge">
<summary>
Youngest age for this rate.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._nAge_end">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._LowestLimit">
<summary>
Lowest limit of the sum-insured range
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._HighestLimit">
<summary>
Highest limit of the sum-insured range
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._LowestYear">
<summary>
Lowest limit of the range of years for the rate.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._Gender">
<summary>
Gender of the insured person.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._TypeOfCalculation">
<summary>
Type of calculation.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._SmokerIndicator">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._RiskType">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._Rate">
<summary>
Rate to be applied according to the risk.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._FixedAmount">
<summary>
Amount of fixed cost to be added to the risk premium.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._RateType">
<summary>
Rate type (percent or per thousand)
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._Currency">
<summary>
Code of The Currency in which the fixed cost is expressed
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._HighestYear">
<summary>
Highest limit of the range of years for the rate.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAR_APV.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAR_APV.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAR_APV.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.ClientRole">
<summary>
Role of the client in the policy. (NROLE)..
</summary>
<remarks>Data-source is 'TAR_APV.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.ClientRoleEnum">
<summary>
Role of the client in the policy.
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.ClientRoleEnumText">
<summary>
Role of the client in the policy.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'TAR_APV.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'TAR_APV.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.NOPTION">
<summary>
.
</summary>
<remarks>Data-source is 'TAR_APV.NOPTION'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.YoungestAge">
<summary>
Youngest age for this rate. (NAGE_INIT)..
</summary>
<remarks>Data-source is 'TAR_APV.NAGE_INIT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.nAge_end">
<summary>
.
</summary>
<remarks>Data-source is 'TAR_APV.NAGE_END'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.LowestLimit">
<summary>
Lowest limit of the sum-insured range (NCAPITAL_INIT)..
</summary>
<remarks>Data-source is 'TAR_APV.NCAPITAL_INIT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.HighestLimit">
<summary>
Highest limit of the sum-insured range (NCAPITAL_END)..
</summary>
<remarks>Data-source is 'TAR_APV.NCAPITAL_END'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.LowestYear">
<summary>
Lowest limit of the range of years for the rate. (NPOLICY_YEAR_INI)..
</summary>
<remarks>Data-source is 'TAR_APV.NPOLICY_YEAR_INI'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.Gender">
<summary>
Gender of the insured person. (NSEX)..
</summary>
<remarks>Data-source is 'TAR_APV.NSEX'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.GenderEnum">
<summary>
Gender of the insured person.
</summary>
<remarks>This property use a enumeration based on property 'Gender'</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.GenderEnumText">
<summary>
Gender of the insured person.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.TypeOfCalculation">
<summary>
Type of calculation. (NTYPE_CALC)..
</summary>
<remarks>Data-source is 'TAR_APV.NTYPE_CALC'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.SmokerIndicator">
<summary>
 (SSMOKING)..
</summary>
<remarks>Data-source is 'TAR_APV.SSMOKING'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.SmokerIndicatorEnum">
<summary>

</summary>
<remarks>This property use a enumeration based on property 'SmokerIndicator'</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.SmokerIndicatorEnumText">
<summary>

</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.RiskType">
<summary>
 (NTYPERISK)..
</summary>
<remarks>Data-source is 'TAR_APV.NTYPERISK'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.RiskTypeEnum">
<summary>

</summary>
<remarks>This property use a enumeration based on property 'RiskType'</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.RiskTypeEnumText">
<summary>

</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.Rate">
<summary>
Rate to be applied according to the risk. (NRATE)..
</summary>
<remarks>Data-source is 'TAR_APV.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.FixedAmount">
<summary>
Amount of fixed cost to be added to the risk premium. (NFIX_COST)..
</summary>
<remarks>Data-source is 'TAR_APV.NFIX_COST'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.RateType">
<summary>
Rate type (percent or per thousand) (NTYPE_TAR)..
</summary>
<remarks>Data-source is 'TAR_APV.NTYPE_TAR'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.RateTypeEnum">
<summary>
Rate type (percent or per thousand)
</summary>
<remarks>This property use a enumeration based on property 'RateType'</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.RateTypeEnumText">
<summary>
Rate type (percent or per thousand)
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAR_APV.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAR_APV.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAR_APV.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.Currency">
<summary>
Code of The Currency in which the fixed cost is expressed (NCURRENCY)..
</summary>
<remarks>Data-source is 'TAR_APV.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.HighestYear">
<summary>
Highest limit of the range of years for the rate. (NPOLICY_YEAR_END)..
</summary>
<remarks>Data-source is 'TAR_APV.NPOLICY_YEAR_END'.</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="RatingTableAPVProductItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProduct.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProductCollection">
 <summary>
 Collection for RatingTableAPVProduct class
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProductCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProductCollection.AddRatingTableAPVProduct">
 <summary>
 Add an instance of class 'RatingTableAPVProduct' in the RatingTableAPVProductCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProductCollection.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProductCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProductCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProductCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableAPVProductCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire">
 <summary>
 Rate Earthquake - Fire Policies.
 </summary>
<remarks>Data-source is 'TAR_EARTHQ'.</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.CreateNewRatingTableEarthquakeFire">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire._SeismicZone">
<summary>
Seismic Zone
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire._TypeOfSeismicConstruction">
<summary>
Type of seismic construction.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire._MaximumNumberOfFloors">
<summary>
Maximum number of floors.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire._MinimumNumberOfFloors">
<summary>
Minimum number of floors.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire._BuildingRate">
<summary>
Building rate
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire._ContentRate">
<summary>
Content rate
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.SeismicZone">
<summary>
Seismic Zone (NSEISMICZONE)..
</summary>
<remarks>Data-source is 'TAR_EARTHQ.NSEISMICZONE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.TypeOfSeismicConstruction">
<summary>
Type of seismic construction. (NBUILDTYPE)..
</summary>
<remarks>Data-source is 'TAR_EARTHQ.NBUILDTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.MaximumNumberOfFloors">
<summary>
Maximum number of floors. (NMAXNUMFLOOR)..
</summary>
<remarks>Data-source is 'TAR_EARTHQ.NMAXNUMFLOOR'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.MinimumNumberOfFloors">
<summary>
Minimum number of floors. (NMINNUMFLOOR)..
</summary>
<remarks>Data-source is 'TAR_EARTHQ.NMINNUMFLOOR'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAR_EARTHQ.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.BuildingRate">
<summary>
Building rate (NRATEBUILD)..
</summary>
<remarks>Data-source is 'TAR_EARTHQ.NRATEBUILD'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.ContentRate">
<summary>
Content rate (NRATECONT)..
</summary>
<remarks>Data-source is 'TAR_EARTHQ.NRATECONT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAR_EARTHQ.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAR_EARTHQ.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAR_EARTHQ.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'TAR_EARTHQ.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="RatingTableEarthquakeFireItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.SeismicZoneDescription">
 <summary>
 Seismic Zone
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7047'.
 </remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFire.TypeOfSeismicConstructionDescription">
 <summary>
 Type of seismic construction.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7039'.
 </remarks>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFireCollection">
 <summary>
 Collection for RatingTableEarthquakeFire class
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFireCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFireCollection.AddRatingTableEarthquakeFire">
 <summary>
 Add an instance of class 'RatingTableEarthquakeFire' in the RatingTableEarthquakeFireCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFireCollection.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFireCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFireCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFireCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableEarthquakeFireCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto">
 <summary>
 Tabla de tarifa de automoviles.
 </summary>
<remarks>Data-source is 'TAR_AUTO'.</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.CreateNewRatingTableForAuto">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto._ConsecutiveNumber">
<summary>
Consecutive number identifying the record.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto._VehicleCode">
<summary>
Code of The Insured Vehicle
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto._RatePerThousand">
<summary>
Rate (per thousand).
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto._nPrem_fix">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAR_AUTO.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAR_AUTO.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'TAR_AUTO.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'TAR_AUTO.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'TAR_AUTO.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAR_AUTO.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.ConsecutiveNumber">
<summary>
Consecutive number identifying the record. (NID)..
</summary>
<remarks>Data-source is 'TAR_AUTO.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.VehicleCode">
<summary>
Code of The Insured Vehicle (SVEHCODE)..
</summary>
<remarks>Data-source is 'TAR_AUTO.SVEHCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAR_AUTO.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.RatePerThousand">
<summary>
Rate (per thousand). (NRATE)..
</summary>
<remarks>Data-source is 'TAR_AUTO.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.nPrem_fix">
<summary>
.
</summary>
<remarks>Data-source is 'TAR_AUTO.NPREM_FIX'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAR_AUTO.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAR_AUTO.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="RatingTableForAutoItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAuto.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAutoCollection">
 <summary>
 Collection for RatingTableForAuto class
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAutoCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAutoCollection.AddRatingTableForAuto">
 <summary>
 Add an instance of class 'RatingTableForAuto' in the RatingTableForAutoCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAutoCollection.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAutoCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAutoCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAutoCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForAutoCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe">
 <summary>
 Money rates in safes.
 </summary>
<remarks>Data-source is 'TAR_THEFT_CASH'.</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.CreateNewRatingTableForMoneyInSafe">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe._RatingTableForTheft">
<summary>
Code of the rating table for theft.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe._RiskLocation">
<summary>
Risk location.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe._RatePerThousand">
<summary>
Rate (o/oo) to be applied to the sum insured of the coverage to obtain the premium
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.RatingTableForTheft">
<summary>
Code of the rating table for theft. (NTAR_THEFT)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CASH.NTAR_THEFT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.RiskLocation">
<summary>
Risk location. (NUBICATION)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CASH.NUBICATION'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CASH.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CASH.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CASH.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.RatePerThousand">
<summary>
Rate (o/oo) to be applied to the sum insured of the coverage to obtain the premium (NRATE)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CASH.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CASH.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="RatingTableForMoneyInSafeItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafe.RiskLocationDescription">
 <summary>
 Risk location.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE239'.
 </remarks>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafeCollection">
 <summary>
 Collection for RatingTableForMoneyInSafe class
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafeCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafeCollection.AddRatingTableForMoneyInSafe">
 <summary>
 Add an instance of class 'RatingTableForMoneyInSafe' in the RatingTableForMoneyInSafeCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafeCollection.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafeCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafeCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafeCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableForMoneyInSafeCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire">
 <summary>
 Hurricane rate - Fire.
 </summary>
<remarks>Data-source is 'TAR_HURRICANE'.</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.CreateNewRatingTableHurricaneFire">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire._SideClosureType">
<summary>
Types of side closures.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire._ConstructionClass">
<summary>
Class of construction.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire._BuildingRate">
<summary>
Building Rate
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire._ContentRate">
<summary>
Content Rate
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.SideClosureType">
<summary>
Types of side closures. (NSIDECLOSETYPE)..
</summary>
<remarks>Data-source is 'TAR_HURRICANE.NSIDECLOSETYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.ConstructionClass">
<summary>
Class of construction. (NCONSTCAT)..
</summary>
<remarks>Data-source is 'TAR_HURRICANE.NCONSTCAT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAR_HURRICANE.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.BuildingRate">
<summary>
Building Rate (NRATEBUILD)..
</summary>
<remarks>Data-source is 'TAR_HURRICANE.NRATEBUILD'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.ContentRate">
<summary>
Content Rate (NRATECONT)..
</summary>
<remarks>Data-source is 'TAR_HURRICANE.NRATECONT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAR_HURRICANE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAR_HURRICANE.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAR_HURRICANE.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'TAR_HURRICANE.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="RatingTableHurricaneFireItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.SideClosureTypeDescription">
 <summary>
 Types of side closures.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7037'.
 </remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFire.ConstructionClassDescription">
 <summary>
 Class of construction.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE233'.
 </remarks>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFireCollection">
 <summary>
 Collection for RatingTableHurricaneFire class
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFireCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFireCollection.AddRatingTableHurricaneFire">
 <summary>
 Add an instance of class 'RatingTableHurricaneFire' in the RatingTableHurricaneFireCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFireCollection.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFireCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFireCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFireCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableHurricaneFireCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent">
 <summary>
 Rates of theft of content.
 </summary>
<remarks>Data-source is 'TAR_THEFT_CON'.</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.CreateNewRatingTableTheftContent">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent._RatingTableForTheft">
<summary>
Code of the rating table for theft.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent._RiskClass">
<summary>
Risk classification
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent._InsuredPercentage">
<summary>
Insured risk percentage.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent._RiskLocation">
<summary>
Risk location.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent._RatePerThousand">
<summary>
Rate o/oo to be applied to a sum insured to obtain the coverage premium
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.RatingTableForTheft">
<summary>
Code of the rating table for theft. (NTAR_THEFT)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CON.NTAR_THEFT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.RiskClass">
<summary>
Risk classification (NRISKCLASS)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CON.NRISKCLASS'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.InsuredPercentage">
<summary>
Insured risk percentage. (NINSURED)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CON.NINSURED'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.RiskLocation">
<summary>
Risk location. (NUBICATION)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CON.NUBICATION'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CON.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CON.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CON.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.RatePerThousand">
<summary>
Rate o/oo to be applied to a sum insured to obtain the coverage premium (NRATE)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CON.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CON.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="RatingTableTheftContentItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.RiskClassDescription">
 <summary>
 Risk classification
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE241'.
 </remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContent.RiskLocationDescription">
 <summary>
 Risk location.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE239'.
 </remarks>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContentCollection">
 <summary>
 Collection for RatingTableTheftContent class
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContentCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContentCollection.AddRatingTableTheftContent">
 <summary>
 Add an instance of class 'RatingTableTheftContent' in the RatingTableTheftContentCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContentCollection.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContentCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContentCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContentCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTheftContentCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife">
 <summary>
 Rate of traditional life.
 </summary>
<remarks>Data-source is 'TAR_TRALIFE'.</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.CreateNewRatingTableTraditionalLife">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._RiskType">
<summary>
Type of risk.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._ConsecutiveNumber">
<summary>
Consecutive number identifying the record as unique.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._Age">
<summary>
Age of the rate
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._SmokerIndicator">
<summary>
Smoker client indicator.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._InsuranceLowestYearsLimit">
<summary>
Lowest limit of the number of years of the insurance period
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._RateForWomen">
<summary>
Rate for women.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._PaymentLowestYearsLimit">
<summary>
Lowest limit of the number of years of the payment period
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._PremiumForWomen">
<summary>
Premium amount for women.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._RateForMen">
<summary>
Rate for men.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._PremiumForMen">
<summary>
Premium amount for men.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._RatingTableType">
<summary>
Type of rating.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._FinalYearOfInsurance">
<summary>
Final year of the insurance period of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._FinalYearOfPayment">
<summary>
Final year of the payment period of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._SingleRate">
<summary>
Single rate.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._SinglePremium">
<summary>
Single Premium
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.RiskType">
<summary>
Type of risk. (NTYPERISK)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NTYPERISK'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.RiskTypeEnum">
<summary>
Type of risk.
</summary>
<remarks>This property use a enumeration based on property 'RiskType'</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.RiskTypeEnumText">
<summary>
Type of risk.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.ConsecutiveNumber">
<summary>
Consecutive number identifying the record as unique. (NID)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.Age">
<summary>
Age of the rate (NAGE)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.SmokerIndicator">
<summary>
Smoker client indicator. (SSMOKING)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.SSMOKING'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.SmokerIndicatorEnum">
<summary>
Smoker client indicator.
</summary>
<remarks>This property use a enumeration based on property 'SmokerIndicator'</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.SmokerIndicatorEnumText">
<summary>
Smoker client indicator.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.InsuranceLowestYearsLimit">
<summary>
Lowest limit of the number of years of the insurance period (NINIPERCOV)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NINIPERCOV'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.RateForWomen">
<summary>
Rate for women. (NRATEWOMEN)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NRATEWOMEN'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.PaymentLowestYearsLimit">
<summary>
Lowest limit of the number of years of the payment period (NINIPAYCOV)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NINIPAYCOV'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.PremiumForWomen">
<summary>
Premium amount for women. (NPREMWOMEN)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NPREMWOMEN'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.RateForMen">
<summary>
Rate for men. (NRATEMEN)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NRATEMEN'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.PremiumForMen">
<summary>
Premium amount for men. (NPREMMEN)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NPREMMEN'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.RatingTableType">
<summary>
Type of rating. (NTYPE_TAR)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NTYPE_TAR'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.RatingTableTypeEnum">
<summary>
Type of rating.
</summary>
<remarks>This property use a enumeration based on property 'RatingTableType'</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.RatingTableTypeEnumText">
<summary>
Type of rating.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.FinalYearOfInsurance">
<summary>
Final year of the insurance period of the coverage. (NENDPERCOV)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NENDPERCOV'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.FinalYearOfPayment">
<summary>
Final year of the payment period of the coverage. (NENDPAYCOV)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NENDPAYCOV'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.SingleRate">
<summary>
Single rate. (NRATE)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.SinglePremium">
<summary>
Single Premium (NPREMIUM)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NPREMIUM'.</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="RatingTableTraditionalLifeItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.RiskTypeDescription">
 <summary>
 Type of risk.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5639'.
 </remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLife.RatingTableTypeDescription">
 <summary>
 Type of rating.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5584'.
 </remarks>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLifeCollection">
 <summary>
 Collection for RatingTableTraditionalLife class
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLifeCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLifeCollection.AddRatingTableTraditionalLife">
 <summary>
 Add an instance of class 'RatingTableTraditionalLife' in the RatingTableTraditionalLifeCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLifeCollection.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLifeCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLifeCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLifeCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.RatingTableTraditionalLifeCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount">
 <summary>
 Theft insured amounts.
 </summary>
<remarks>Data-source is 'TAR_THEFT_CAP'.</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.CreateNewTheftInsuredAmount">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount._LowestLimit">
<summary>
Lowest limit of the sum-insured range
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount._HighestLimit">
<summary>
Highest limit of the sum-insured range
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount._RatingTableForTheft">
<summary>
Code of the rating table for theft.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CAP.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CAP.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CAP.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CAP.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.LowestLimit">
<summary>
Lowest limit of the sum-insured range (NCAP_INIT)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CAP.NCAP_INIT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CAP.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.HighestLimit">
<summary>
Highest limit of the sum-insured range (NCAP_END)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CAP.NCAP_END'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CAP.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CAP.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.RatingTableForTheft">
<summary>
Code of the rating table for theft. (NTAR_THEFT)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CAP.NTAR_THEFT'.</remarks>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAR_THEFT_CAP.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="TheftInsuredAmountItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmount.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmountCollection">
 <summary>
 Collection for TheftInsuredAmount class
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmountCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmountCollection.AddTheftInsuredAmount">
 <summary>
 Add an instance of class 'TheftInsuredAmount' in the TheftInsuredAmountCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmountCollection.Compare(InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmountCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmountCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmountCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Rating.Routines.Entity.Contracts.TheftInsuredAmountCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
</members>
</doc>
