<?xml version="1.0"?>
<doc>
<assembly>
<name>
InMotionGIT.Product.Entity.Contracts
</name>
</assembly>
<members>
<member name="T:InMotionGIT.Product.Entity.Contracts.My.Resources.Resources">
<summary>
  Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.My.Resources.Resources.ResourceManager">
<summary>
  Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.My.Resources.Resources.Culture">
<summary>
  Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
  búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
</summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumActiveLifePlanChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumAgreementsByWayOfPaymentChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumAttributeOfRiskTypeChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumAttributesSpecificTypesOfRiskChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumBasicAmountChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumBasicInsuredAmountChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumBasicRatingTableForHealthProductChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumBillingConceptsProductChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumCalculateCommissionEndorsementChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumCampaignReleaseChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumCancellationPolicyConditionChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumCIIU_ActCommerChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumClientAllowedInClaimPerProductChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumClientAllowedInPolicyPerProductChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumClientInformationRequiredChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumColumnAllowedInLogicalTariffTableChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumColumnBelongToLogicalTariffTableChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumCommercialActivityRatingChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumCommercialCampaignChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumCommercialProductChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumCommercialSetChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumConditionsForDiscountExtraPremiumTaxChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumControlDatesAPVChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumCoverageInsuredAmountChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumCoveragesCombinedForMaxEventChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumCoveragesLimitsPerEventChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumCurrencyAllowedInProductChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumDescriptionCoverPrinterChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumDetailOfCommercialSetChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumDetailsPremiumRateHealthProductChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumDiscountExtraPremiumTaxOfProductChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumDiscountPremiumBasicChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumDurationPaymentAssociatedProductChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumEffectiveDateInputForProductLifeChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumEndorsementTypeByLineBusinessAndProductChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumExcludedIllnessByProductInHealthPolicyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumFileNameUsedInLineOfBusinessChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumFrequencyAllowedByPaymentProductChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumFrequencyAndExtraPremiumAllowedChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumFundDistributionChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumGenericCoverageForPropertyAndCasualtyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumGuaranteedIssueLimitChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumHealthPolicyIllnesChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumInsuranceProductDurationChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumIntegralRateCommerceChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumInternationalStandardIndustrialClassificationChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumInvestmentFundRelatedToProductChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumLifeAccountChargeChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumLifeCoverageRolChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumLifeGenericCoverageChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumLifeProductCoverageChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumModulesAvailableByCommercialActivityChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumOrderOriginAccountChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumOriginByTypePaymentChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumParticularDataOfTheProductoChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumPaymentWaysAllowedByProductChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumPlanProfitabilityPercentageChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumProductAddCapitalToCoverageChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumProductAllowPerVehicleChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumProductClauseChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumProductCoverageRateOnCapitalChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumProductGeneralInformationChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumProductGuaranteedValueChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumProductionPeriodChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumProductionPeriodsDetChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumProductLifeLineOfBusinessChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumProductMasterChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumProductModuleChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumProductPropertyAndCasualtyLineOfBusinessChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumProductProtectionElementChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumPropertyAndCasualtyCoverageChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumRateDetailChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumRateTableChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumRateTablePerProductChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumRatingTableAPVProductChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumRequerimentExclusionProductChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumSequencePolicyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumShortTermInsuranceChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumSiCoverGes_APLChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumSpecificationForProductLifeChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumStipendProductChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumSumInsDiscChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumSurrenderValueRetentionChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumTabOriginRateChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumUnderwritingCriteriasForHomePolicyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumUnderwritingCriteriasForMultiRiskPolicyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumValueOfColumnOfLogicalTariffTableChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumValueOfTariffAssociatedWithRowOfLogicalTariffTableChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumValuesAttributeChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumCriteriaToDetermineDuplicationInUpload">
 <summary>
 Criterio de duplicidad en la nomina
 </summary>
 <remarks>DataSource: Table5677</remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumOptionInGroups">
 <summary>
 Allocation of covers/extra-premiums/claims in group products 
 </summary>
 <remarks>LookUp table 'Table92'</remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumProductClass">
 <summary>
 Tipos de productos de vida
 </summary>
 <remarks></remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumRateType">
 <summary>
 Rate Type
 </summary>
 <remarks>table5584</remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumReinsuranceOptionInCaseOfAccumulations.ToRedistribute">
 <summary>
 Redistribuir
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumReinsuranceOptionInCaseOfAccumulations.ToTakeLackingly">
 <summary>
 Tomar faltante
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumReinsuranceOptionInCaseOfAccumulations.ToIgnore">
 <summary>
 Ignorar
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumRiskType">
 <summary>
 Risk Type
 </summary>
 <remarks>Table5639</remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumTypeOfAccumulation.Insured">
 <summary>
 Cúmulo por asegurado
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumTypeOfAccumulation.RiskLocation">
 <summary>
 Cúmulo por código de riesgo
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumTypeOfAccumulation.AccumulationCode">
 <summary>
 Cúmulo por código de cúmulo
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumTypeOfAccumulation.None">
 <summary>
 Sin cúmulo
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumTypeOfPremiumRecalculation">
 <summary>
 Recalculation type of a coverage. 
 </summary>
 <remarks>LookUp table 'Table5559'</remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumTypeOfReinsuranceForGroups.ByPolicy">
 <summary>
 Reaseguro por póliza
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.Enumerations.EnumTypeOfReinsuranceForGroups.ByCertificate">
 <summary>
 Reaseguro por certificado
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan">
 <summary>
 Terms of Active Life Plans.
 </summary>
<remarks>Data-source is 'TAB_ACTIVELIFE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.CreateNewActiveLifePlan">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._TypeOfIndemnity">
<summary>
Type of Indemnity.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._CurrencyCode">
<summary>
Code of the currency.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._MinimumInsuredAmount">
<summary>
Minimum Insured amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._MaximumRedirectionsPerYear">
<summary>
Maximum number of redirections in a year.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._MarginOfError">
<summary>
Error margin to calculate the projected premium.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._DeathBenefitPercentage">
<summary>
Percentage of obtaining the death benefit
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._MinimumValueOfBasicPremium">
<summary>
Minimum value that the policy must have as the basic premium
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._MaximumValueOfBasicPremium">
<summary>
Maximum value that the policy must have as the basic premium.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._MinimumValueOfMinimumPremium">
<summary>
Minimum value that the policy must have as the minimum premium.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._MaximumValueOfMinimumPremium">
<summary>
Maximum value that the policy must have as the minimum premium.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._MinimumValueOfExcessPremium">
<summary>
Minimum value that the policy must have as the excess premium.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._MaximumValueOfExcessPremium">
<summary>
Maximum value that the policy must have as the excess premium.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._MinimumValueOfAgreedPremium">
<summary>
Minimum value that the policy must have as the agreed premium.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._MaximumValueOfAgreedPremium">
<summary>
Maximum value that the policy must have as the agreed premium.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._nTypeAcc">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._nAfecBasAdi">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._RoutineAgreedPremiumCalculation">
<summary>
Routine for the calculation of minimum agreed premium
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._MinimumPValue">
<summary>
Minimum VP required in the projection for the first year. If it has no value it is not validated
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAB_ACTIVELIFE.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAB_ACTIVELIFE.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'TAB_ACTIVELIFE.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAB_ACTIVELIFE.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.TypeOfIndemnity">
<summary>
Type of Indemnity. (NOPTION)..
</summary>
<remarks>Data-source is 'TAB_ACTIVELIFE.NOPTION'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.CurrencyCode">
<summary>
Code of the currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'TAB_ACTIVELIFE.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.MinimumInsuredAmount">
<summary>
Minimum Insured amount. (NCAPMIN)..
</summary>
<remarks>Data-source is 'TAB_ACTIVELIFE.NCAPMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAB_ACTIVELIFE.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_ACTIVELIFE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_ACTIVELIFE.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.MaximumRedirectionsPerYear">
<summary>
Maximum number of redirections in a year. (NMCHAINVES)..
</summary>
<remarks>Data-source is 'TAB_ACTIVELIFE.NMCHAINVES'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.MarginOfError">
<summary>
Error margin to calculate the projected premium. (NERRRANGE)..
</summary>
<remarks>Data-source is 'TAB_ACTIVELIFE.NERRRANGE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.DeathBenefitPercentage">
<summary>
Percentage of obtaining the death benefit (NPERCENT)..
</summary>
<remarks>Data-source is 'TAB_ACTIVELIFE.NPERCENT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.MinimumValueOfBasicPremium">
<summary>
Minimum value that the policy must have as the basic premium (NMIN_PREMBAS)..
</summary>
<remarks>Data-source is 'TAB_ACTIVELIFE.NMIN_PREMBAS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.MaximumValueOfBasicPremium">
<summary>
Maximum value that the policy must have as the basic premium. (NMAX_PREMBAS)..
</summary>
<remarks>Data-source is 'TAB_ACTIVELIFE.NMAX_PREMBAS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.MinimumValueOfMinimumPremium">
<summary>
Minimum value that the policy must have as the minimum premium. (NMIN_PREMMIN)..
</summary>
<remarks>Data-source is 'TAB_ACTIVELIFE.NMIN_PREMMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.MaximumValueOfMinimumPremium">
<summary>
Maximum value that the policy must have as the minimum premium. (NMAX_PREMMIN)..
</summary>
<remarks>Data-source is 'TAB_ACTIVELIFE.NMAX_PREMMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.MinimumValueOfExcessPremium">
<summary>
Minimum value that the policy must have as the excess premium. (NMIN_PREMEXC)..
</summary>
<remarks>Data-source is 'TAB_ACTIVELIFE.NMIN_PREMEXC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.MaximumValueOfExcessPremium">
<summary>
Maximum value that the policy must have as the excess premium. (NMAX_PREMEXC)..
</summary>
<remarks>Data-source is 'TAB_ACTIVELIFE.NMAX_PREMEXC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.MinimumValueOfAgreedPremium">
<summary>
Minimum value that the policy must have as the agreed premium. (NMIN_PREMPAC)..
</summary>
<remarks>Data-source is 'TAB_ACTIVELIFE.NMIN_PREMPAC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.MaximumValueOfAgreedPremium">
<summary>
Maximum value that the policy must have as the agreed premium. (NMAX_PREMPAC)..
</summary>
<remarks>Data-source is 'TAB_ACTIVELIFE.NMAX_PREMPAC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.nTypeAcc">
<summary>
 (NTYPEAFEC)..
</summary>
<remarks>Data-source is 'TAB_ACTIVELIFE.NTYPEAFEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.nAfecBasAdi">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_ACTIVELIFE.NAFECBASADI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.RoutineAgreedPremiumCalculation">
<summary>
Routine for the calculation of minimum agreed premium (SROUTINE_PPM)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_ACTIVELIFE.SROUTINE_PPM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.MinimumPValue">
<summary>
Minimum VP required in the projection for the first year. If it has no value it is not validated (NVPMIN)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_ACTIVELIFE.NVPMIN'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.Compare(InMotionGIT.Product.Entity.Contracts.ActiveLifePlan,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ActiveLifePlanItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlan.TypeOfIndemnityDescription">
 <summary>
 Type of Indemnity.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5519'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ActiveLifePlanCollection">
 <summary>
 Collection for ActiveLifePlan class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ActiveLifePlanCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ActiveLifePlanCollection.AddActiveLifePlan">
 <summary>
 Add an instance of class 'ActiveLifePlan' in the ActiveLifePlanCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ActiveLifePlanCollection.Compare(InMotionGIT.Product.Entity.Contracts.ActiveLifePlanCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ActiveLifePlanCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ActiveLifePlanCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ActiveLifePlanCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment">
 <summary>
 Agreements by way of payment
 </summary>
<remarks>Data-source is 'AGREE_WAY_PROD'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.CreateNewAgreementsByWayOfPayment">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment._PaymentMethod">
<summary>
Code of the payment method.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment._AgreementCode">
<summary>
Discount or Agreement Code.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment._Code">
<summary>
Code of the record status.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment._AnnullmemtDate">
<summary>
Date of Annullment of the record
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'AGREE_WAY_PROD.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'AGREE_WAY_PROD.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.PaymentMethod">
<summary>
Code of the payment method. (NWAY_PAY)..
</summary>
<remarks>Data-source is 'AGREE_WAY_PROD.NWAY_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.AgreementCode">
<summary>
Discount or Agreement Code. (NCOD_AGREE)..
</summary>
<remarks>Data-source is 'AGREE_WAY_PROD.NCOD_AGREE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'AGREE_WAY_PROD.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.Code">
<summary>
Code of the record status. (SSTATREGT)..
</summary>
<remarks>Data-source is 'AGREE_WAY_PROD.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.CodeEnum">
<summary>
Code of the record status.
</summary>
<remarks>This property use a enumeration based on property 'Code'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.CodeEnumText">
<summary>
Code of the record status.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'AGREE_WAY_PROD.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'AGREE_WAY_PROD.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.AnnullmemtDate">
<summary>
Date of Annullment of the record (NCOMMERNUM)..
</summary>
<remarks>Data-source is 'AGREE_WAY_PROD.NCOMMERNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'AGREE_WAY_PROD.DNULLDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.Compare(InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="AgreementsByWayOfPaymentItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.PaymentMethodDescription">
 <summary>
 Code of the payment method.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5002'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPayment.CodeDescription">
 <summary>
 Code of the record status.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE26'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPaymentCollection">
 <summary>
 Collection for AgreementsByWayOfPayment class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPaymentCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPaymentCollection.AddAgreementsByWayOfPayment">
 <summary>
 Add an instance of class 'AgreementsByWayOfPayment' in the AgreementsByWayOfPaymentCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPaymentCollection.Compare(InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPaymentCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPaymentCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPaymentCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AgreementsByWayOfPaymentCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType">
 <summary>
 Attribute of risk type
 </summary>
<remarks>Data-source is 'RISK_ATTRIBUTES'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.CreateNewAttributeOfRiskType">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType._CodeGenericCoverage">
<summary>
Code of the generic coverage
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType._CodeRiskType">
<summary>
Type of Code risk type
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType._CodeDefinitionType">
<summary>
Code definition type
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType._RequiredFieldIndicator">
<summary>
Required field indicator
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType._FieldIndicatorEnabledOnSale">
<summary>
Field indicator enabled on sale.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.CodeGenericCoverage">
<summary>
Code of the generic coverage (NCOVERGEN)..
</summary>
<remarks>Data-source is 'RISK_ATTRIBUTES.NCOVERGEN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.CodeRiskType">
<summary>
Type of Code risk type (NRISKTYPE)..
</summary>
<remarks>Data-source is 'RISK_ATTRIBUTES.NRISKTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.CodeDefinitionType">
<summary>
Code definition type (NDEFTYPE)..
</summary>
<remarks>Data-source is 'RISK_ATTRIBUTES.NDEFTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.RequiredFieldIndicator">
<summary>
Required field indicator (SREQUIRED)..
</summary>
<remarks>Data-source is 'RISK_ATTRIBUTES.SREQUIRED'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.FieldIndicatorEnabledOnSale">
<summary>
Field indicator enabled on sale. (SENABLE)..
</summary>
<remarks>Data-source is 'RISK_ATTRIBUTES.SENABLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'RISK_ATTRIBUTES.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'RISK_ATTRIBUTES.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.Compare(InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="AttributeOfRiskTypeItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.CodeRiskTypeDescription">
 <summary>
 Type of Code risk type
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6785' on the table 'TABLE6785'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskType.CodeDefinitionTypeDescription">
 <summary>
 Code definition type
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6786' on the table 'TABLE6786'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskTypeCollection">
 <summary>
 Collection for AttributeOfRiskType class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskTypeCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskTypeCollection.AddAttributeOfRiskType">
 <summary>
 Add an instance of class 'AttributeOfRiskType' in the AttributeOfRiskTypeCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskTypeCollection.Compare(InMotionGIT.Product.Entity.Contracts.AttributeOfRiskTypeCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskTypeCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskTypeCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributeOfRiskTypeCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk">
 <summary>
 Attributes specific types of risks
 </summary>
<remarks>Data-source is 'CAT_PROPERTY'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.CreateNewAttributesSpecificTypesOfRisk">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk._CodeRiskType">
<summary>
Type of Code risk type
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk._CodeDefinitionType">
<summary>
Code definition type
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk._DataTypeCode">
<summary>
Code of the data type
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk._ValuesAttributes">
<summary>
Values attributes
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.CodeRiskType">
<summary>
Type of Code risk type (NRISKTYPE)..
</summary>
<remarks>Data-source is 'CAT_PROPERTY.NRISKTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.CodeDefinitionType">
<summary>
Code definition type (NDEFTYPE)..
</summary>
<remarks>Data-source is 'CAT_PROPERTY.NDEFTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.DataTypeCode">
<summary>
Code of the data type (nDatatype)..
</summary>
<remarks>Data-source is 'CAT_PROPERTY.nDatatype'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.ComputersDate">
<summary>
Date of the computer (dCompDate)..
</summary>
<remarks>Data-source is 'CAT_PROPERTY.dCompDate'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.User">
<summary>
UserCode (nUserCode)..
</summary>
<remarks>Data-source is 'CAT_PROPERTY.nUserCode'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.NewValuesAttributesInstance">
<summary>
Initializes the 'ValuesAttributes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.NewValuesAttributeItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ValuesAttributes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ValuesAttribute' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.ValuesAttributes">
<summary>
Values attributes collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.Compare(InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="AttributesSpecificTypesOfRiskItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.CodeRiskTypeDescription">
 <summary>
 Type of Code risk type
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6785' on the table 'TABLE6785'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.CodeDefinitionTypeDescription">
 <summary>
 Code definition type
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6786' on the table 'TABLE6786'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRisk.DataTypeCodeDescription">
 <summary>
 Code of the data type
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6805' on the table 'TABLE6805'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRiskCollection">
 <summary>
 Collection for AttributesSpecificTypesOfRisk class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRiskCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRiskCollection.AddAttributesSpecificTypesOfRisk">
 <summary>
 Add an instance of class 'AttributesSpecificTypesOfRisk' in the AttributesSpecificTypesOfRiskCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRiskCollection.Compare(InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRiskCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRiskCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRiskCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.AttributesSpecificTypesOfRiskCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.BasicAmount">
 <summary>
 Basic insured amount associated with a product.
 </summary>
<remarks>Data-source is 'BAS_SUMINS'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicAmount.CreateNewBasicAmount">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicAmount.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicAmount._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicAmount._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicAmount._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicAmount._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicAmount._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicAmount._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicAmount._CodeOfTheInsuredAmount">
<summary>
Code that identifies the limit.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicAmount._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicAmount._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicAmount._Description">
<summary>
Description of the basic sum insured.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicAmount._ShortDescription">
<summary>
Short description of the basic sum insured.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicAmount._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicAmount._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicAmount._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicAmount.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicAmount.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicAmount.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicAmount.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicAmount.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicAmount.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'BAS_SUMINS.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicAmount.CodeOfTheInsuredAmount">
<summary>
Code that identifies the limit. (NSUMINS_CO)..
</summary>
<remarks>Data-source is 'BAS_SUMINS.NSUMINS_CO'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicAmount.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'BAS_SUMINS.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicAmount.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'BAS_SUMINS.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicAmount.Description">
<summary>
Description of the basic sum insured. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'BAS_SUMINS.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicAmount.ShortDescription">
<summary>
Short description of the basic sum insured. (SSHORT_DES)..
</summary>
<remarks>Data-source is 'BAS_SUMINS.SSHORT_DES'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicAmount.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'BAS_SUMINS.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicAmount.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'BAS_SUMINS.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicAmount.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'BAS_SUMINS.DCOMPDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicAmount.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicAmount.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicAmount.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicAmount.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicAmount.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicAmount.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicAmount.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicAmount.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicAmount.Compare(InMotionGIT.Product.Entity.Contracts.BasicAmount,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="BasicAmountItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicAmount.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicAmount.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicAmount.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicAmount.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.BasicAmountCollection">
 <summary>
 Collection for BasicAmount class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicAmountCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicAmountCollection.AddBasicAmount">
 <summary>
 Add an instance of class 'BasicAmount' in the BasicAmountCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicAmountCollection.Compare(InMotionGIT.Product.Entity.Contracts.BasicAmountCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicAmountCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicAmountCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicAmountCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount">
 <summary>
 Basic insured amount associated with a product.
 </summary>
<remarks>Data-source is 'BAS_SUMINS'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.CreateNewBasicInsuredAmount">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount._CodeOfTheInsuredAmount">
<summary>
Code that identifies the limit.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount._Description">
<summary>
Description of the basic sum insured.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount._ShortDescription">
<summary>
Short description of the basic sum insured.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'BAS_SUMINS.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.CodeOfTheInsuredAmount">
<summary>
Code that identifies the limit. (NSUMINS_CO)..
</summary>
<remarks>Data-source is 'BAS_SUMINS.NSUMINS_CO'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'BAS_SUMINS.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'BAS_SUMINS.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.Description">
<summary>
Description of the basic sum insured. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'BAS_SUMINS.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.ShortDescription">
<summary>
Short description of the basic sum insured. (SSHORT_DES)..
</summary>
<remarks>Data-source is 'BAS_SUMINS.SSHORT_DES'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'BAS_SUMINS.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'BAS_SUMINS.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'BAS_SUMINS.DCOMPDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.Compare(InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="BasicInsuredAmountItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmount.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmountCollection">
 <summary>
 Collection for BasicInsuredAmount class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmountCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmountCollection.AddBasicInsuredAmount">
 <summary>
 Add an instance of class 'BasicInsuredAmount' in the BasicInsuredAmountCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmountCollection.Compare(InMotionGIT.Product.Entity.Contracts.BasicInsuredAmountCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmountCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmountCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicInsuredAmountCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct">
 <summary>
 Basic information about rates associated with the Health Care Products.
 </summary>
<remarks>Data-source is 'TAR_AM_BASPROD'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.CreateNewBasicRatingTableForHealthProduct">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct._RatingTable">
<summary>
Code of the rating table related to the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct._BenefitType">
<summary>
Code of the type of benefit.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct._SelectedByDefault">
<summary>
Indicator of &#34;selected by default&#34; for the Treatment of policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct._Deductible">
<summary>
Amount of deductible related to the rating table.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct._Limit">
<summary>
Insured limit of the rating table.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct._RatingChangesAreAllowed">
<summary>
The user is allowed to change the rating values when issuing a policy
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct._CoverageModule">
<summary>
Code of the module of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct._Coverage">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct._RateDescription">
<summary>
Rate description.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct._DetailsPremiumRateHealthProducts">
<summary>
Details of premium rates associated with medical products.
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAR_AM_BASPROD.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAR_AM_BASPROD.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.RatingTable">
<summary>
Code of the rating table related to the product. (NTARIFF)..
</summary>
<remarks>Data-source is 'TAR_AM_BASPROD.NTARIFF'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAR_AM_BASPROD.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAR_AM_BASPROD.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAR_AM_BASPROD.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.BenefitType">
<summary>
Code of the type of benefit. (NBENEF_TYPE)..
</summary>
<remarks>Data-source is 'TAR_AM_BASPROD.NBENEF_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAR_AM_BASPROD.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.SelectedByDefault">
<summary>
Indicator of &#34;selected by default&#34; for the Treatment of policy. (SDEFAULTI)..
</summary>
<remarks>Data-source is 'TAR_AM_BASPROD.SDEFAULTI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.Deductible">
<summary>
Amount of deductible related to the rating table. (NDED_AMOUNT)..
</summary>
<remarks>Data-source is 'TAR_AM_BASPROD.NDED_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.Limit">
<summary>
Insured limit of the rating table. (NLIMIT)..
</summary>
<remarks>Data-source is 'TAR_AM_BASPROD.NLIMIT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.RatingChangesAreAllowed">
<summary>
The user is allowed to change the rating values when issuing a policy (SCHANGES)..
</summary>
<remarks>Data-source is 'TAR_AM_BASPROD.SCHANGES'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.CoverageModule">
<summary>
Code of the module of the coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'TAR_AM_BASPROD.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.Coverage">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'TAR_AM_BASPROD.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.RateDescription">
<summary>
Rate description. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'TAR_AM_BASPROD.SDESCRIPT'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.NewDetailsPremiumRateHealthProductsInstance">
<summary>
Initializes the 'DetailsPremiumRateHealthProducts' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.NewDetailsPremiumRateHealthProductItem(System.Boolean)">
<summary>
Add a new item to the collection of 'DetailsPremiumRateHealthProducts', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'DetailsPremiumRateHealthProduct' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.DetailsPremiumRateHealthProducts">
<summary>
Details of premium rates associated with medical products. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.Compare(InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="BasicRatingTableForHealthProductItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProduct.BenefitTypeDescription">
 <summary>
 Code of the type of benefit.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE270'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProductCollection">
 <summary>
 Collection for BasicRatingTableForHealthProduct class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProductCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProductCollection.AddBasicRatingTableForHealthProduct">
 <summary>
 Add an instance of class 'BasicRatingTableForHealthProduct' in the BasicRatingTableForHealthProductCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProductCollection.Compare(InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProductCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProductCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProductCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BasicRatingTableForHealthProductCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct">
 <summary>
 Billing Concepts product.
 </summary>
<remarks>Data-source is 'TAB_BILL_I'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.CreateNewBillingConceptsProduct">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct._BillingItem">
<summary>
Code of the billing item.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct._Description">
<summary>
Description of the billing item.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct._ShortDescription">
<summary>
Short description of the billing item.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct._SDESCCFDI">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAB_BILL_I.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAB_BILL_I.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.BillingItem">
<summary>
Code of the billing item. (NBILL_ITEM)..
</summary>
<remarks>Data-source is 'TAB_BILL_I.NBILL_ITEM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAB_BILL_I.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_BILL_I.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.Description">
<summary>
Description of the billing item. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'TAB_BILL_I.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAB_BILL_I.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.ShortDescription">
<summary>
Short description of the billing item. (SSHORT_DES)..
</summary>
<remarks>Data-source is 'TAB_BILL_I.SSHORT_DES'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_BILL_I.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.SDESCCFDI">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_BILL_I.SDESCCFDI'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.Compare(InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="BillingConceptsProductItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BillingConceptsProduct.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.BillingConceptsProductCollection">
 <summary>
 Collection for BillingConceptsProduct class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BillingConceptsProductCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BillingConceptsProductCollection.AddBillingConceptsProduct">
 <summary>
 Add an instance of class 'BillingConceptsProduct' in the BillingConceptsProductCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BillingConceptsProductCollection.Compare(InMotionGIT.Product.Entity.Contracts.BillingConceptsProductCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.BillingConceptsProductCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BillingConceptsProductCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.BillingConceptsProductCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement">
 <summary>
 Conditions for calculating commission endorsements.
 </summary>
<remarks>Data-source is 'COMM_MOD'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.CreateNewCalculateCommissionEndorsement">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement._ModuleOfDeletedCoverage">
<summary>
Module of the coverage excluded from the endorsement.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement._ExcludedCoverage">
<summary>
Coverage excluded from the endorsement.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement._RoleOfExcludedCoverage">
<summary>
Role of the client related to the coverage excluded in the endorsement.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement._ModuleOfAddedCoverage">
<summary>
Module of the coverage included in this endorsement.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement._CoverageAdded">
<summary>
Coverage added in the endorsement
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement._RoleOfIncludedCoverage">
<summary>
Role of the client related to the coverage included in the endorsement.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement._CommissionType">
<summary>
Type of commission for the endorsement.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'COMM_MOD.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'COMM_MOD.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.ModuleOfDeletedCoverage">
<summary>
Module of the coverage excluded from the endorsement. (NMODULEC_EX)..
</summary>
<remarks>Data-source is 'COMM_MOD.NMODULEC_EX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.ExcludedCoverage">
<summary>
Coverage excluded from the endorsement. (NCOVER_EX)..
</summary>
<remarks>Data-source is 'COMM_MOD.NCOVER_EX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.RoleOfExcludedCoverage">
<summary>
Role of the client related to the coverage excluded in the endorsement. (NROLE_EX)..
</summary>
<remarks>Data-source is 'COMM_MOD.NROLE_EX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.ModuleOfAddedCoverage">
<summary>
Module of the coverage included in this endorsement. (NMODULEC_AD)..
</summary>
<remarks>Data-source is 'COMM_MOD.NMODULEC_AD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.CoverageAdded">
<summary>
Coverage added in the endorsement (NCOVER_AD)..
</summary>
<remarks>Data-source is 'COMM_MOD.NCOVER_AD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.RoleOfIncludedCoverage">
<summary>
Role of the client related to the coverage included in the endorsement. (NROLE_AD)..
</summary>
<remarks>Data-source is 'COMM_MOD.NROLE_AD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'COMM_MOD.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.CommissionType">
<summary>
Type of commission for the endorsement. (NTYPE_COMM)..
</summary>
<remarks>Data-source is 'COMM_MOD.NTYPE_COMM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'COMM_MOD.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'COMM_MOD.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'COMM_MOD.DNULLDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.Compare(InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CalculateCommissionEndorsementItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsement.CommissionTypeDescription">
 <summary>
 Type of commission for the endorsement.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5671'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsementCollection">
 <summary>
 Collection for CalculateCommissionEndorsement class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsementCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsementCollection.AddCalculateCommissionEndorsement">
 <summary>
 Add an instance of class 'CalculateCommissionEndorsement' in the CalculateCommissionEndorsementCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsementCollection.Compare(InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsementCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsementCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsementCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CalculateCommissionEndorsementCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.CampaignRelease">
 <summary>
 Campaign Releases
 </summary>
<remarks>Data-source is 'CAMP_RELEASE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CampaignRelease.CreateNewCampaignRelease">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CampaignRelease.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CampaignRelease._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CampaignRelease._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CampaignRelease._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CampaignRelease._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CampaignRelease._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CampaignRelease._CampaignRelease">
<summary>
Campaign release number
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CampaignRelease._CampaignNumber">
<summary>
Campaign number
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CampaignRelease._CommercialProduct">
<summary>
Commercial Product Code
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CampaignRelease._DistributionChannel">
<summary>
Code of distribution channel
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CampaignRelease._InitialDate">
<summary>
Initial date of the campaign release
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CampaignRelease._FinalDate">
<summary>
Final date of the campaign release
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CampaignRelease._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CampaignRelease._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CampaignRelease.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CampaignRelease.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CampaignRelease.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CampaignRelease.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CampaignRelease.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CampaignRelease.CampaignRelease">
<summary>
Campaign release number (NCAMP_RELEASE)..
</summary>
<remarks>Data-source is 'CAMP_RELEASE.NCAMP_RELEASE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CampaignRelease.CampaignNumber">
<summary>
Campaign number (NCAMPAIGN)..
</summary>
<remarks>Data-source is 'CAMP_RELEASE.NCAMPAIGN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CampaignRelease.CommercialProduct">
<summary>
Commercial Product Code (SCOMERPRODUCT)..
</summary>
<remarks>Data-source is 'CAMP_RELEASE.SCOMERPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CampaignRelease.DistributionChannel">
<summary>
Code of distribution channel (NSELLCHANNEL)..
</summary>
<remarks>Data-source is 'CAMP_RELEASE.NSELLCHANNEL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CampaignRelease.InitialDate">
<summary>
Initial date of the campaign release (DDATE_FROM)..
</summary>
<remarks>Data-source is 'CAMP_RELEASE.DDATE_FROM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CampaignRelease.FinalDate">
<summary>
Final date of the campaign release (DDATE_TO)..
</summary>
<remarks>Data-source is 'CAMP_RELEASE.DDATE_TO'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CampaignRelease.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CAMP_RELEASE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CampaignRelease.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'CAMP_RELEASE.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CampaignRelease.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CampaignRelease.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CampaignRelease.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CampaignRelease.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CampaignRelease.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CampaignRelease.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CampaignRelease.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CampaignRelease.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CampaignRelease.Compare(InMotionGIT.Product.Entity.Contracts.CampaignRelease,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CampaignReleaseItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CampaignRelease.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CampaignRelease.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CampaignRelease.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CampaignRelease.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CampaignRelease.DistributionChannelDescription">
 <summary>
 Code of distribution channel
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5532'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.CampaignReleaseCollection">
 <summary>
 Collection for CampaignRelease class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CampaignReleaseCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CampaignReleaseCollection.AddCampaignRelease">
 <summary>
 Add an instance of class 'CampaignRelease' in the CampaignReleaseCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CampaignReleaseCollection.Compare(InMotionGIT.Product.Entity.Contracts.CampaignReleaseCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CampaignReleaseCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CampaignReleaseCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CampaignReleaseCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition">
 <summary>
 Conditions for cancellation of policy.
 </summary>
<remarks>Data-source is 'NULL_CONDI'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.CreateNewCancellationPolicyCondition">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._CancellationCode">
<summary>
Policy/Certificate Cancellation Code.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._MinimumSecurityLevel">
<summary>
Minimum updating level (security) that the user must have in order to execute the transaction update.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._RecordType">
<summary>
Type of Record to which the Reason pertains.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._RefundConditions">
<summary>
It specifies the money refund conditions related to the reason for cancellation.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._FixedPremiumRefunfPercentage">
<summary>
Fixed premium refund percentage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._ReinstatementDisabled">
<summary>
Indicator of not allowing the reinstatement.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._AutomaticReinstatementAllowed">
<summary>
Indicator to allow automatic reinstatement.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._RoutineCalculationRefundPremium">
<summary>
Calculation routine return of premium
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._DaysToWithdrawAnReturnFullPremium">
<summary>
Days within which the client can withdraw the policy, and the return of the premium must be integrated
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._TwistingExclude">
<summary>
Twisting exclude
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._SLETTERONLINE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._SLETTERPROV">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._NPENALIZEDAYS">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._NPENALIZEFIXAMOUNT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._NPENALIZEPERCENT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'NULL_CONDI.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'NULL_CONDI.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.CancellationCode">
<summary>
Policy/Certificate Cancellation Code. (NNULLCODE)..
</summary>
<remarks>Data-source is 'NULL_CONDI.NNULLCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'NULL_CONDI.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.MinimumSecurityLevel">
<summary>
Minimum updating level (security) that the user must have in order to execute the transaction update. (NAMELEVEL)..
</summary>
<remarks>Data-source is 'NULL_CONDI.NAMELEVEL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'NULL_CONDI.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.RecordType">
<summary>
Type of Record to which the Reason pertains. (SREGTYPEN)..
</summary>
<remarks>Data-source is 'NULL_CONDI.SREGTYPEN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.RefundConditions">
<summary>
It specifies the money refund conditions related to the reason for cancellation. (SRETURN_IND)..
</summary>
<remarks>Data-source is 'NULL_CONDI.SRETURN_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.FixedPremiumRefunfPercentage">
<summary>
Fixed premium refund percentage. (NRETURN_RAT)..
</summary>
<remarks>Data-source is 'NULL_CONDI.NRETURN_RAT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'NULL_CONDI.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'NULL_CONDI.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'NULL_CONDI.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.ReinstatementDisabled">
<summary>
Indicator of not allowing the reinstatement. (SNOTREHAB)..
</summary>
<remarks>Data-source is 'NULL_CONDI.SNOTREHAB'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.AutomaticReinstatementAllowed">
<summary>
Indicator to allow automatic reinstatement. (SREHAB_AUTO)..
</summary>
<remarks>Data-source is 'NULL_CONDI.SREHAB_AUTO'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.RoutineCalculationRefundPremium">
<summary>
Calculation routine return of premium (SROUTINE_PAY)..
</summary>
<remarks>Data-source is 'NULL_CONDI.SROUTINE_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.DaysToWithdrawAnReturnFullPremium">
<summary>
Days within which the client can withdraw the policy, and the return of the premium must be integrated (NRETRACTION)..
</summary>
<remarks>Data-source is 'NULL_CONDI.NRETRACTION'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.TwistingExclude">
<summary>
Twisting exclude (NTWISTINGEXCLUDE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'NULL_CONDI.NTWISTINGEXCLUDE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.SLETTERONLINE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'NULL_CONDI.SLETTERONLINE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.SLETTERPROV">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'NULL_CONDI.SLETTERPROV'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.NPENALIZEDAYS">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'NULL_CONDI.NPENALIZEDAYS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.NPENALIZEFIXAMOUNT">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'NULL_CONDI.NPENALIZEFIXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.NPENALIZEPERCENT">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'NULL_CONDI.NPENALIZEPERCENT'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.Compare(InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CancellationPolicyConditionItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyCondition.CancellationCodeDescription">
 <summary>
 Policy/Certificate Cancellation Code.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE13'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.CancellationPolicyConditionCollection">
 <summary>
 Collection for CancellationPolicyCondition class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CancellationPolicyConditionCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CancellationPolicyConditionCollection.AddCancellationPolicyCondition">
 <summary>
 Add an instance of class 'CancellationPolicyCondition' in the CancellationPolicyConditionCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CancellationPolicyConditionCollection.Compare(InMotionGIT.Product.Entity.Contracts.CancellationPolicyConditionCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CancellationPolicyConditionCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CancellationPolicyConditionCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CancellationPolicyConditionCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer">
 <summary>
 CIIUs linked with the Commercial Activity
 </summary>
<remarks>Data-source is 'CIIU_ACTCOMMER'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.CreateNewCIIU_ActCommer">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer._CIIUCode">
<summary>
CIIU Code
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer._CommercialActivityCode">
<summary>
Commercial Activity Code
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CIIU_ACTCOMMER.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.CIIUCode">
<summary>
CIIU Code (NCIIU)..
</summary>
<remarks>Data-source is 'CIIU_ACTCOMMER.NCIIU'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.CommercialActivityCode">
<summary>
Commercial Activity Code (NCOMMER_ACTIVITY)..
</summary>
<remarks>Data-source is 'CIIU_ACTCOMMER.NCOMMER_ACTIVITY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'CIIU_ACTCOMMER.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CIIU_ACTCOMMER.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'CIIU_ACTCOMMER.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.Compare(InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CIIU_ActCommerItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommer.CommercialActivityCodeDescription">
 <summary>
 Commercial Activity Code
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9015'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommerCollection">
 <summary>
 Collection for CIIU_ActCommer class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommerCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommerCollection.AddCIIU_ActCommer">
 <summary>
 Add an instance of class 'CIIU_ActCommer' in the CIIU_ActCommerCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommerCollection.Compare(InMotionGIT.Product.Entity.Contracts.CIIU_ActCommerCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommerCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommerCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CIIU_ActCommerCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct">
 <summary>
 Clients allowed in a claim for a product.
 </summary>
<remarks>Data-source is 'CLIALLOCLA'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.CreateNewClientAllowedInClaimPerProduct">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct._ClientRole">
<summary>
Role of the client in the policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct._Required">
<summary>
Role required.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct._MaximumNumber">
<summary>
Maximum number of clients with the same role.
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'CLIALLOCLA.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'CLIALLOCLA.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.ClientRole">
<summary>
Role of the client in the policy. (NROLE)..
</summary>
<remarks>Data-source is 'CLIALLOCLA.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.ClientRoleEnum">
<summary>
Role of the client in the policy.
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.ClientRoleEnumText">
<summary>
Role of the client in the policy.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLIALLOCLA.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.Required">
<summary>
Role required. (SREQUIRE)..
</summary>
<remarks>Data-source is 'CLIALLOCLA.SREQUIRE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLIALLOCLA.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.MaximumNumber">
<summary>
Maximum number of clients with the same role. (NMAXNUM_ROL)..
</summary>
<remarks>Data-source is 'CLIALLOCLA.NMAXNUM_ROL'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.Compare(InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClientAllowedInClaimPerProductItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProduct.ClientRoleDescription">
 <summary>
 Role of the client in the policy.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE12'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProductCollection">
 <summary>
 Collection for ClientAllowedInClaimPerProduct class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProductCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProductCollection.AddClientAllowedInClaimPerProduct">
 <summary>
 Add an instance of class 'ClientAllowedInClaimPerProduct' in the ClientAllowedInClaimPerProductCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProductCollection.Compare(InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProductCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProductCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProductCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInClaimPerProductCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct">
 <summary>
 Clients allowed in a policy for a product.
 </summary>
<remarks>Data-source is 'CLIALLOPRO'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.CreateNewClientAllowedInPolicyPerProduct">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct._PolicyType">
<summary>
Policy type.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct._Component">
<summary>
Component of the policy being processed.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct._ClientRole">
<summary>
Role of the client in the policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct._SelectedByDefault">
<summary>
Indicator of &#34;selected by default&#34; for the Treatment of policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct._Required">
<summary>
Role required.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct._MaximumNumber">
<summary>
Maximum number of clients with the same role.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct._OptionalRoleQuotingIndicator">
<summary>
The role is optional at the time of quoting
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct._DateAddRole">
<summary>
Date on which the figure was included in the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct._EstipendIndicator">
<summary>
Estipend Indicator.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct._ProducerCode">
<summary>
Code of the producer.
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'CLIALLOPRO.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'CLIALLOPRO.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.PolicyType">
<summary>
Policy type. (SPOLITYPE)..
</summary>
<remarks>Data-source is 'CLIALLOPRO.SPOLITYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.PolicyTypeEnum">
<summary>
Policy type.
</summary>
<remarks>This property use a enumeration based on property 'PolicyType'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.PolicyTypeEnumText">
<summary>
Policy type.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.Component">
<summary>
Component of the policy being processed. (SCOMPON)..
</summary>
<remarks>Data-source is 'CLIALLOPRO.SCOMPON'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.ClientRole">
<summary>
Role of the client in the policy. (NROLE)..
</summary>
<remarks>Data-source is 'CLIALLOPRO.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.ClientRoleEnum">
<summary>
Role of the client in the policy.
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.ClientRoleEnumText">
<summary>
Role of the client in the policy.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLIALLOPRO.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.SelectedByDefault">
<summary>
Indicator of &#34;selected by default&#34; for the Treatment of policy. (SDEFAULTI)..
</summary>
<remarks>Data-source is 'CLIALLOPRO.SDEFAULTI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.Required">
<summary>
Role required. (SREQUIRE)..
</summary>
<remarks>Data-source is 'CLIALLOPRO.SREQUIRE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.MaximumNumber">
<summary>
Maximum number of clients with the same role. (NMAX_ROLE)..
</summary>
<remarks>Data-source is 'CLIALLOPRO.NMAX_ROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLIALLOPRO.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.OptionalRoleQuotingIndicator">
<summary>
The role is optional at the time of quoting (SOPTIONALQUO)..
</summary>
<remarks>Data-source is 'CLIALLOPRO.SOPTIONALQUO'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.DateAddRole">
<summary>
Date on which the figure was included in the product. (DDATE_NROLE)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIALLOPRO.DDATE_NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.EstipendIndicator">
<summary>
Estipend Indicator. (SSTIPEND)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIALLOPRO.SSTIPEND'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.ClientID">
<summary>
Code of the client. (SCLIENT)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIALLOPRO.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.ProducerCode">
<summary>
Code of the producer. (NINTERMED)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLIALLOPRO.NINTERMED'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.Compare(InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClientAllowedInPolicyPerProductItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProduct.ClientRoleDescription">
 <summary>
 Role of the client in the policy.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE12'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProductCollection">
 <summary>
 Collection for ClientAllowedInPolicyPerProduct class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProductCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProductCollection.AddClientAllowedInPolicyPerProduct">
 <summary>
 Add an instance of class 'ClientAllowedInPolicyPerProduct' in the ClientAllowedInPolicyPerProductCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProductCollection.Compare(InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProductCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProductCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProductCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientAllowedInPolicyPerProductCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired">
 <summary>
 Client information required.
 </summary>
<remarks>Data-source is 'CLIENT_REQ'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.CreateNewClientInformationRequired">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired._ClientRole">
<summary>
Role of the client in the policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired._PolicyTransactionType">
<summary>
Transaction type to do on a Policy, Proporsal or Quotation.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired._RequiredFieldcode">
<summary>
Code of the field to be validated.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired._DateOfBirthRequired">
<summary>
It indicates that the date of birth of the client is required.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired._CivilStatusIsRequired">
<summary>
Civil status of the client is required.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired._RequiredFieldIndicator">
<summary>
Indicates when The Field is required.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired._OccupationIsRequired">
<summary>
Occupation/specialty required.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired._GenderIsRequired">
<summary>
Gender of the client is required.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired._TaxSituationRequired">
<summary>
Tax situation is required.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired._AddressIsRequired">
<summary>
It indicates that the address is required.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired._LineOfCreditRequired">
<summary>
Line of credit of the client is required.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'CLIENT_REQ.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'CLIENT_REQ.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.ClientRole">
<summary>
Role of the client in the policy. (NROLE)..
</summary>
<remarks>Data-source is 'CLIENT_REQ.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.ClientRoleEnum">
<summary>
Role of the client in the policy.
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.ClientRoleEnumText">
<summary>
Role of the client in the policy.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.PolicyTransactionType">
<summary>
Transaction type to do on a Policy, Proporsal or Quotation. (NTRATYPEP)..
</summary>
<remarks>Data-source is 'CLIENT_REQ.NTRATYPEP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.RequiredFieldcode">
<summary>
Code of the field to be validated. (NFIELD)..
</summary>
<remarks>Data-source is 'CLIENT_REQ.NFIELD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CLIENT_REQ.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.DateOfBirthRequired">
<summary>
It indicates that the date of birth of the client is required. (SBIRTHDAI)..
</summary>
<remarks>Data-source is 'CLIENT_REQ.SBIRTHDAI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.CivilStatusIsRequired">
<summary>
Civil status of the client is required. (SCIVISTAI)..
</summary>
<remarks>Data-source is 'CLIENT_REQ.SCIVISTAI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLIENT_REQ.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'CLIENT_REQ.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.RequiredFieldIndicator">
<summary>
Indicates when The Field is required. (SREQUIRED)..
</summary>
<remarks>Data-source is 'CLIENT_REQ.SREQUIRED'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.OccupationIsRequired">
<summary>
Occupation/specialty required. (SOCCUPATI)..
</summary>
<remarks>Data-source is 'CLIENT_REQ.SOCCUPATI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.GenderIsRequired">
<summary>
Gender of the client is required. (SSEXINSUI)..
</summary>
<remarks>Data-source is 'CLIENT_REQ.SSEXINSUI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLIENT_REQ.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.TaxSituationRequired">
<summary>
Tax situation is required. (STAX_SITUA)..
</summary>
<remarks>Data-source is 'CLIENT_REQ.STAX_SITUA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.AddressIsRequired">
<summary>
It indicates that the address is required. (SADDRESS)..
</summary>
<remarks>Data-source is 'CLIENT_REQ.SADDRESS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.LineOfCreditRequired">
<summary>
Line of credit of the client is required. (SCREDITLINE)..
</summary>
<remarks>Data-source is 'CLIENT_REQ.SCREDITLINE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.Compare(InMotionGIT.Product.Entity.Contracts.ClientInformationRequired,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClientInformationRequiredItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientInformationRequired.RequiredFieldcodeDescription">
 <summary>
 Code of the field to be validated.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE8017'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ClientInformationRequiredCollection">
 <summary>
 Collection for ClientInformationRequired class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientInformationRequiredCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientInformationRequiredCollection.AddClientInformationRequired">
 <summary>
 Add an instance of class 'ClientInformationRequired' in the ClientInformationRequiredCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientInformationRequiredCollection.Compare(InMotionGIT.Product.Entity.Contracts.ClientInformationRequiredCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ClientInformationRequiredCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientInformationRequiredCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ClientInformationRequiredCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable">
 <summary>
 
 </summary>
<remarks>Data-source is 'TARIF_COLUMN'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.CreateNewColumnAllowedInLogicalTariffTable">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable._ColumnCode">
<summary>
Code identifying the column
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable._Table">
<summary>
Database table of the data to which the column belongs
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable._ReferenceColumn">
<summary>
Column of the database table
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable._Column">
<summary>
Name of the column to be used in the logic table
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable._DataType">
<summary>
Type of the column data
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable._Length">
<summary>
Length of the column
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable._Decimals">
<summary>
Number of decimals of the column
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable._STABLEFK">
<summary>

</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.ColumnCode">
<summary>
Code identifying the column (NID_COLUMN)..
</summary>
<remarks>Data-source is 'TARIF_COLUMN.NID_COLUMN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.Table">
<summary>
Database table of the data to which the column belongs (STABLE)..
</summary>
<remarks>Data-source is 'TARIF_COLUMN.STABLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.ReferenceColumn">
<summary>
Column of the database table (SCOLUMN)..
</summary>
<remarks>Data-source is 'TARIF_COLUMN.SCOLUMN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.Column">
<summary>
Name of the column to be used in the logic table (SNAME_COL)..
</summary>
<remarks>Data-source is 'TARIF_COLUMN.SNAME_COL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.DataType">
<summary>
Type of the column data (NDATA_TYPE)..
</summary>
<remarks>Data-source is 'TARIF_COLUMN.NDATA_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.Length">
<summary>
Length of the column (NSIZE)..
</summary>
<remarks>Data-source is 'TARIF_COLUMN.NSIZE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.Decimals">
<summary>
Number of decimals of the column (NDECIMAL)..
</summary>
<remarks>Data-source is 'TARIF_COLUMN.NDECIMAL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TARIF_COLUMN.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TARIF_COLUMN.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.STABLEFK">
<summary>
.
</summary>
<remarks>Data-source is 'TARIF_COLUMN.STABLEFK'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.Compare(InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ColumnAllowedInLogicalTariffTableItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTable.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTableCollection">
 <summary>
 Collection for ColumnAllowedInLogicalTariffTable class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTableCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTableCollection.AddColumnAllowedInLogicalTariffTable">
 <summary>
 Add an instance of class 'ColumnAllowedInLogicalTariffTable' in the ColumnAllowedInLogicalTariffTableCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTableCollection.Compare(InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTableCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTableCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTableCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnAllowedInLogicalTariffTableCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable">
 <summary>
 
 </summary>
<remarks>Data-source is 'TARIF_TAB_COL'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.CreateNewColumnBelongToLogicalTariffTable">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable._TableCode">
<summary>
Code of the logic table
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable._ColumnCode">
<summary>
Code of the column
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable._Operator">
<summary>
Search operator in the logic table of the rate
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable._CalculationType">
<summary>
Type of calculation of the column value
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable._OrderNumber">
<summary>
Number of the order of appearance of the logic table fields
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable._ValuesOfColumnsOfLogicalTariffTable">
<summary>

</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.TableCode">
<summary>
Code of the logic table (NID_TABLE)..
</summary>
<remarks>Data-source is 'TARIF_TAB_COL.NID_TABLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.ColumnCode">
<summary>
Code of the column (NID_COLUMN)..
</summary>
<remarks>Data-source is 'TARIF_TAB_COL.NID_COLUMN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.Operator">
<summary>
Search operator in the logic table of the rate (SOPERATOR)..
</summary>
<remarks>Data-source is 'TARIF_TAB_COL.SOPERATOR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.CalculationType">
<summary>
Type of calculation of the column value (NTYPE_CALC)..
</summary>
<remarks>Data-source is 'TARIF_TAB_COL.NTYPE_CALC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.OrderNumber">
<summary>
Number of the order of appearance of the logic table fields (NORDER)..
</summary>
<remarks>Data-source is 'TARIF_TAB_COL.NORDER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TARIF_TAB_COL.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TARIF_TAB_COL.DCOMPDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.NewValuesOfColumnsOfLogicalTariffTableInstance">
<summary>
Initializes the 'ValuesOfColumnsOfLogicalTariffTable' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.NewValueOfColumnOfLogicalTariffTableItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ValuesOfColumnsOfLogicalTariffTable', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ValueOfColumnOfLogicalTariffTable' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.ValuesOfColumnsOfLogicalTariffTable">
<summary>
 collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.Compare(InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ColumnBelongToLogicalTariffTableItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTable.TableCodeDescription">
 <summary>
 Code of the logic table
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5800'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTableCollection">
 <summary>
 Collection for ColumnBelongToLogicalTariffTable class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTableCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTableCollection.AddColumnBelongToLogicalTariffTable">
 <summary>
 Add an instance of class 'ColumnBelongToLogicalTariffTable' in the ColumnBelongToLogicalTariffTableCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTableCollection.Compare(InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTableCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTableCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTableCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ColumnBelongToLogicalTariffTableCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating">
 <summary>
 Commercial Activity used for Rating
 </summary>
<remarks>Data-source is 'TAB_ACTCOMMER'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.CreateNewCommercialActivityRating">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating._CommercialActivityCode">
<summary>
Commercial Activity Code
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating._InsurableCommercialActivityIndicator">
<summary>
Insurable Commercial Activity Indicator
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating._InspectCommerceIndicator">
<summary>
Inspect Commerce Indicator
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.CommercialActivityCode">
<summary>
Commercial Activity Code (NCOMMER_ACTIVITY)..
</summary>
<remarks>Data-source is 'TAB_ACTCOMMER.NCOMMER_ACTIVITY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAB_ACTCOMMER.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.InsurableCommercialActivityIndicator">
<summary>
Insurable Commercial Activity Indicator (SINSURABLEACTCOMMER)..
</summary>
<remarks>Data-source is 'TAB_ACTCOMMER.SINSURABLEACTCOMMER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.InspectCommerceIndicator">
<summary>
Inspect Commerce Indicator (SINSPECTACTIVITY)..
</summary>
<remarks>Data-source is 'TAB_ACTCOMMER.SINSPECTACTIVITY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAB_ACTCOMMER.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_ACTCOMMER.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_ACTCOMMER.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.Compare(InMotionGIT.Product.Entity.Contracts.CommercialActivityRating,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CommercialActivityRatingItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialActivityRating.CommercialActivityCodeDescription">
 <summary>
 Commercial Activity Code
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9015'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.CommercialActivityRatingCollection">
 <summary>
 Collection for CommercialActivityRating class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialActivityRatingCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialActivityRatingCollection.AddCommercialActivityRating">
 <summary>
 Add an instance of class 'CommercialActivityRating' in the CommercialActivityRatingCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialActivityRatingCollection.Compare(InMotionGIT.Product.Entity.Contracts.CommercialActivityRatingCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialActivityRatingCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialActivityRatingCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialActivityRatingCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.CommercialCampaign">
 <summary>
 Commercial Campaigns
 </summary>
<remarks>Data-source is 'CAMPAIGN'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.CreateNewCommercialCampaign">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialCampaign._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialCampaign._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialCampaign._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialCampaign._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialCampaign._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialCampaign._CampaignNumber">
<summary>
Campaign number
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialCampaign._LongDescription">
<summary>
Long description
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialCampaign._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialCampaign._DistributionChannel">
<summary>
Code of distribution channel
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialCampaign._ReleaseInitialDate">
<summary>
Initial date of the campaign
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialCampaign._ReleaseFinalDate">
<summary>
Expiration date of the campaign
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialCampaign._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialCampaign._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.CampaignNumber">
<summary>
Campaign number (NCAMPAIGN)..
</summary>
<remarks>Data-source is 'CAMPAIGN.NCAMPAIGN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.LongDescription">
<summary>
Long description (SDESCRIPT)..
</summary>
<remarks>Data-source is 'CAMPAIGN.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'CAMPAIGN.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.DistributionChannel">
<summary>
Code of distribution channel (NSELLCHANNEL)..
</summary>
<remarks>Data-source is 'CAMPAIGN.NSELLCHANNEL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.ReleaseInitialDate">
<summary>
Initial date of the campaign (DDATE_FROM)..
</summary>
<remarks>Data-source is 'CAMPAIGN.DDATE_FROM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.ReleaseFinalDate">
<summary>
Expiration date of the campaign (DDATE_TO)..
</summary>
<remarks>Data-source is 'CAMPAIGN.DDATE_TO'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CAMPAIGN.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'CAMPAIGN.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.Compare(InMotionGIT.Product.Entity.Contracts.CommercialCampaign,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CommercialCampaignItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialCampaign.DistributionChannelDescription">
 <summary>
 Code of distribution channel
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5532'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.CommercialCampaignCollection">
 <summary>
 Collection for CommercialCampaign class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialCampaignCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialCampaignCollection.AddCommercialCampaign">
 <summary>
 Add an instance of class 'CommercialCampaign' in the CommercialCampaignCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialCampaignCollection.Compare(InMotionGIT.Product.Entity.Contracts.CommercialCampaignCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialCampaignCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialCampaignCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialCampaignCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.CommercialProduct">
 <summary>
 Master of commercial products
 </summary>
<remarks>Data-source is 'COMERPRODUCT'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialProduct.CreateNewCommercialProduct">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialProduct.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialProduct._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialProduct._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialProduct._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialProduct._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialProduct._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialProduct._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialProduct._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialProduct._ClientCode">
<summary>
Client Code
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialProduct._ComercialProduct">
<summary>
Commercial Product Code
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialProduct._LoadingCode">
<summary>
Loading code reported in the files
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialProduct._LongDescription">
<summary>
Long description
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialProduct._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialProduct._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialProduct.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialProduct.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialProduct.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialProduct.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialProduct.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialProduct.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'COMERPRODUCT.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialProduct.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'COMERPRODUCT.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialProduct.ClientCode">
<summary>
Client Code (SCLIENT)..
</summary>
<remarks>Data-source is 'COMERPRODUCT.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialProduct.ComercialProduct">
<summary>
Commercial Product Code (SCOMERPRODUCT)..
</summary>
<remarks>Data-source is 'COMERPRODUCT.SCOMERPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialProduct.LoadingCode">
<summary>
Loading code reported in the files (SLOADCODE)..
</summary>
<remarks>Data-source is 'COMERPRODUCT.SLOADCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialProduct.LongDescription">
<summary>
Long description (SDESCRIPT)..
</summary>
<remarks>Data-source is 'COMERPRODUCT.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialProduct.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'COMERPRODUCT.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialProduct.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'COMERPRODUCT.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialProduct.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialProduct.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialProduct.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialProduct.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialProduct.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialProduct.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialProduct.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialProduct.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialProduct.Compare(InMotionGIT.Product.Entity.Contracts.CommercialProduct,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CommercialProductItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialProduct.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialProduct.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialProduct.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialProduct.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.CommercialProductCollection">
 <summary>
 Collection for CommercialProduct class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialProductCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialProductCollection.AddCommercialProduct">
 <summary>
 Add an instance of class 'CommercialProduct' in the CommercialProductCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialProductCollection.Compare(InMotionGIT.Product.Entity.Contracts.CommercialProductCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialProductCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialProductCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialProductCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.CommercialSet">
 <summary>
 Commercial sets
 </summary>
<remarks>Data-source is 'COMMERCIALSET'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialSet.CreateNewCommercialSet">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialSet.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialSet._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialSet._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialSet._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialSet._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialSet._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialSet._CodeOfCommercialSet">
<summary>
Code of commercial set
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialSet._CurrencyCode">
<summary>
Code of The Currency
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialSet._Status">
<summary>
Register status
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialSet._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialSet._UserCode">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CommercialSet._DetailOfCommercialSet">
<summary>
Detail of commercial set
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialSet.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialSet.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialSet.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialSet.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialSet.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialSet.CodeOfCommercialSet">
<summary>
Code of commercial set (NCOMMSET)..
</summary>
<remarks>Data-source is 'COMMERCIALSET.NCOMMSET'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialSet.CurrencyCode">
<summary>
Code of The Currency (NCURRENCY)..
</summary>
<remarks>Data-source is 'COMMERCIALSET.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialSet.Status">
<summary>
Register status (SSTATREGT)..
</summary>
<remarks>Data-source is 'COMMERCIALSET.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialSet.StatusEnum">
<summary>
Register status
</summary>
<remarks>This property use a enumeration based on property 'Status'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialSet.StatusEnumText">
<summary>
Register status
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialSet.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'COMMERCIALSET.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialSet.UserCode">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'COMMERCIALSET.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialSet.NewDetailOfCommercialSetInstance">
<summary>
Initializes the 'DetailOfCommercialSet' instance.
</summary>
 <returns>The 'DetailOfCommercialSet' class instance.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialSet.DetailOfCommercialSet">
<summary>
Detail of commercial set collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialSet.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialSet.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialSet.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialSet.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialSet.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialSet.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialSet.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialSet.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialSet.Compare(InMotionGIT.Product.Entity.Contracts.CommercialSet,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CommercialSetItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialSet.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialSet.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialSet.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialSet.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialSet.CodeOfCommercialSetDescription">
 <summary>
 Code of commercial set
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6762' on the table 'TABLE6762'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.CommercialSetCollection">
 <summary>
 Collection for CommercialSet class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialSetCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialSetCollection.AddCommercialSet">
 <summary>
 Add an instance of class 'CommercialSet' in the CommercialSetCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialSetCollection.Compare(InMotionGIT.Product.Entity.Contracts.CommercialSetCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CommercialSetCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialSetCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CommercialSetCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax">
 <summary>
 Conditions for application of extra-premium/discounts/taxes.
 </summary>
<remarks>Data-source is 'DSEX_CONDI'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.CreateNewConditionsForDiscountExtraPremiumTax">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax._ExtraPremiumDiscountOrTaxCode">
<summary>
Code of the extra-premium/discount/tax.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax._CoverageModule">
<summary>
Code of the module of the coverage on which the extra premium, discount or tax is applied.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax._ClientRole">
<summary>
Role of the client in the policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax._AppliesOn">
<summary>
Type of record to which the extra-premium/discount/tax applies.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax._ApplyOnItem">
<summary>
Code of the item (extra premium, discount, tax, coverage, basic insured amount) to which the extra premium or discount selected applies.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax._ExtraPremiumDiscountOrTax">
<summary>
Extra-premium/discount/tax percentage to be applied.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'DSEX_CONDI.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'DSEX_CONDI.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.ExtraPremiumDiscountOrTaxCode">
<summary>
Code of the extra-premium/discount/tax. (NDISEXPRC)..
</summary>
<remarks>Data-source is 'DSEX_CONDI.NDISEXPRC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.CoverageModule">
<summary>
Code of the module of the coverage on which the extra premium, discount or tax is applied. (NMODULEC)..
</summary>
<remarks>Data-source is 'DSEX_CONDI.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.ClientRole">
<summary>
Role of the client in the policy. (NROLE)..
</summary>
<remarks>Data-source is 'DSEX_CONDI.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.ClientRoleEnum">
<summary>
Role of the client in the policy.
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.ClientRoleEnumText">
<summary>
Role of the client in the policy.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.AppliesOn">
<summary>
Type of record to which the extra-premium/discount/tax applies. (NAPLICATION)..
</summary>
<remarks>Data-source is 'DSEX_CONDI.NAPLICATION'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.ApplyOnItem">
<summary>
Code of the item (extra premium, discount, tax, coverage, basic insured amount) to which the extra premium or discount selected applies. (NCODE)..
</summary>
<remarks>Data-source is 'DSEX_CONDI.NCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'DSEX_CONDI.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'DSEX_CONDI.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'DSEX_CONDI.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'DSEX_CONDI.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.ExtraPremiumDiscountOrTax">
<summary>
Extra-premium/discount/tax percentage to be applied. (NRATE)..
</summary>
<remarks>Data-source is 'DSEX_CONDI.NRATE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.Compare(InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ConditionsForDiscountExtraPremiumTaxItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTax.AppliesOnDescription">
 <summary>
 Type of record to which the extra-premium/discount/tax applies.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE298'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTaxCollection">
 <summary>
 Collection for ConditionsForDiscountExtraPremiumTax class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTaxCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTaxCollection.AddConditionsForDiscountExtraPremiumTax">
 <summary>
 Add an instance of class 'ConditionsForDiscountExtraPremiumTax' in the ConditionsForDiscountExtraPremiumTaxCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTaxCollection.Compare(InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTaxCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTaxCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTaxCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ConditionsForDiscountExtraPremiumTaxCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV">
 <summary>
 Control Table dates of the APV unified process.
 </summary>
<remarks>Data-source is 'CTROL_DATE_APV'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.CreateNewControlDatesAPV">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV._dLast_date">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV._DEFFECDATE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV._NIDPROCES">
<summary>

</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'CTROL_DATE_APV.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'CTROL_DATE_APV.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.dLast_date">
<summary>
.
</summary>
<remarks>Data-source is 'CTROL_DATE_APV.DLAST_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CTROL_DATE_APV.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CTROL_DATE_APV.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.DEFFECDATE">
<summary>
.
</summary>
<remarks>Data-source is 'CTROL_DATE_APV.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.NIDPROCES">
<summary>
.
</summary>
<remarks>Data-source is 'CTROL_DATE_APV.NIDPROCES'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.Compare(InMotionGIT.Product.Entity.Contracts.ControlDatesAPV,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ControlDatesAPVItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ControlDatesAPV.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ControlDatesAPVCollection">
 <summary>
 Collection for ControlDatesAPV class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ControlDatesAPVCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ControlDatesAPVCollection.AddControlDatesAPV">
 <summary>
 Add an instance of class 'ControlDatesAPV' in the ControlDatesAPVCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ControlDatesAPVCollection.Compare(InMotionGIT.Product.Entity.Contracts.ControlDatesAPVCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ControlDatesAPVCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ControlDatesAPVCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ControlDatesAPVCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount">
 <summary>
 Basic capitals for the calculation of cover capital.
 </summary>
<remarks>Data-source is 'SUMCOV_APL'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.CreateNewCoverageInsuredAmount">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount._CodeOfTheInsuredAmount">
<summary>
Code identifying the sum insured
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount._PercentageToApplyOnInsuredAmount">
<summary>
Percentage to be applied on the sum insured
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'SUMCOV_APL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'SUMCOV_APL.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'SUMCOV_APL.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'SUMCOV_APL.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.CodeOfTheInsuredAmount">
<summary>
Code identifying the sum insured (NSUMINS_CO)..
</summary>
<remarks>Data-source is 'SUMCOV_APL.NSUMINS_CO'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'SUMCOV_APL.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.PercentageToApplyOnInsuredAmount">
<summary>
Percentage to be applied on the sum insured (NSUMINS_RAT)..
</summary>
<remarks>Data-source is 'SUMCOV_APL.NSUMINS_RAT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'SUMCOV_APL.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'SUMCOV_APL.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'SUMCOV_APL.DCOMPDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.Compare(InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CoverageInsuredAmountItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmount.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmountCollection">
 <summary>
 Collection for CoverageInsuredAmount class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmountCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmountCollection.AddCoverageInsuredAmount">
 <summary>
 Add an instance of class 'CoverageInsuredAmount' in the CoverageInsuredAmountCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmountCollection.Compare(InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmountCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmountCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmountCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoverageInsuredAmountCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent">
 <summary>
 Conditions of Modules / Coverages for the control of Maximum Event in Claims
 </summary>
<remarks>Data-source is 'COVER_CLAIM_COMB'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.CreateNewCoveragesCombinedForMaxEvent">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent._Module">
<summary>
Module code
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent._Cover">
<summary>
Coverage code
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent._ModuleCombinedForMaxOfEvents">
<summary>
Module Combined For Max Of Events
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent._CoverageCombinedForMaxOfEvents">
<summary>
Coverage Combined For Max Of Events
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent._Status">
<summary>
Register status
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'COVER_CLAIM_COMB.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'COVER_CLAIM_COMB.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.Module">
<summary>
Module code (NMODULEC)..
</summary>
<remarks>Data-source is 'COVER_CLAIM_COMB.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.Cover">
<summary>
Coverage code (NCOVER)..
</summary>
<remarks>Data-source is 'COVER_CLAIM_COMB.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.ModuleCombinedForMaxOfEvents">
<summary>
Module Combined For Max Of Events (NMODULEC_COMB)..
</summary>
<remarks>Data-source is 'COVER_CLAIM_COMB.NMODULEC_COMB'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.CoverageCombinedForMaxOfEvents">
<summary>
Coverage Combined For Max Of Events (NCOVER_COMB)..
</summary>
<remarks>Data-source is 'COVER_CLAIM_COMB.NCOVER_COMB'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'COVER_CLAIM_COMB.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'COVER_CLAIM_COMB.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.Status">
<summary>
Register status (SSTATREGT)..
</summary>
<remarks>Data-source is 'COVER_CLAIM_COMB.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.StatusEnum">
<summary>
Register status
</summary>
<remarks>This property use a enumeration based on property 'Status'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.StatusEnumText">
<summary>
Register status
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'COVER_CLAIM_COMB.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'COVER_CLAIM_COMB.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.Compare(InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CoveragesCombinedForMaxEventItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEvent.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEventCollection">
 <summary>
 Collection for CoveragesCombinedForMaxEvent class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEventCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEventCollection.AddCoveragesCombinedForMaxEvent">
 <summary>
 Add an instance of class 'CoveragesCombinedForMaxEvent' in the CoveragesCombinedForMaxEventCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEventCollection.Compare(InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEventCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEventCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEventCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesCombinedForMaxEventCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent">
 <summary>
 Limits of coverage for events in claims
 </summary>
<remarks>Data-source is 'COVER_CLAIM_LIMIT'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.CreateNewCoveragesLimitsPerEvent">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent._ModuleCode">
<summary>
Module Code
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent._CoverCode">
<summary>
Coverage code
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent._EventNumber">
<summary>
Event number
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent._AmountLimitPerEvent">
<summary>
Amount Limit Per Event
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'COVER_CLAIM_LIMIT.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'COVER_CLAIM_LIMIT.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.ModuleCode">
<summary>
Module Code (NMODULEC)..
</summary>
<remarks>Data-source is 'COVER_CLAIM_LIMIT.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.CoverCode">
<summary>
Coverage code (NCOVER)..
</summary>
<remarks>Data-source is 'COVER_CLAIM_LIMIT.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.EventNumber">
<summary>
Event number (NEVENT_NUM)..
</summary>
<remarks>Data-source is 'COVER_CLAIM_LIMIT.NEVENT_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'COVER_CLAIM_LIMIT.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.AmountLimitPerEvent">
<summary>
Amount Limit Per Event (NEVENT_LIMIT)..
</summary>
<remarks>Data-source is 'COVER_CLAIM_LIMIT.NEVENT_LIMIT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'COVER_CLAIM_LIMIT.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'COVER_CLAIM_LIMIT.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'COVER_CLAIM_LIMIT.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.Compare(InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CoveragesLimitsPerEventItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEvent.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEventCollection">
 <summary>
 Collection for CoveragesLimitsPerEvent class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEventCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEventCollection.AddCoveragesLimitsPerEvent">
 <summary>
 Add an instance of class 'CoveragesLimitsPerEvent' in the CoveragesLimitsPerEventCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEventCollection.Compare(InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEventCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEventCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEventCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CoveragesLimitsPerEventCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct">
 <summary>
 Currencies allowed in the product of policy.
 </summary>
<remarks>Data-source is 'CUR_ALLOW'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.CreateNewCurrencyAllowedInProduct">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct._SelectedByDefault">
<summary>
Indicator of &#34;selected by default&#34; for the Treatment of policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'CUR_ALLOW.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'CUR_ALLOW.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'CUR_ALLOW.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CUR_ALLOW.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.SelectedByDefault">
<summary>
Indicator of &#34;selected by default&#34; for the Treatment of policy. (SDEFAULTI)..
</summary>
<remarks>Data-source is 'CUR_ALLOW.SDEFAULTI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CUR_ALLOW.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CUR_ALLOW.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'CUR_ALLOW.DNULLDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.Compare(InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CurrencyAllowedInProductItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProduct.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProductCollection">
 <summary>
 Collection for CurrencyAllowedInProduct class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProductCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProductCollection.AddCurrencyAllowedInProduct">
 <summary>
 Add an instance of class 'CurrencyAllowedInProduct' in the CurrencyAllowedInProductCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProductCollection.Compare(InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProductCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProductCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProductCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.CurrencyAllowedInProductCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter">
 <summary>
 Description of the cover in the printers
 </summary>
<remarks>Data-source is 'T_DESCOVPRINTER'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.CreateNewDescriptionCoverPrinter">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter._NBRANCH">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter._NPRODUCT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter._NMODULEC">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter._NCOVER">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter._SDESCRIPT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter._SSHORT_DES">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter._SSTATREGT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter._DCOMPDATE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter._NUSERCODE">
<summary>

</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.NBRANCH">
<summary>
.
</summary>
<remarks>Data-source is 'T_DESCOVPRINTER.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.NPRODUCT">
<summary>
.
</summary>
<remarks>Data-source is 'T_DESCOVPRINTER.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.NMODULEC">
<summary>
.
</summary>
<remarks>Data-source is 'T_DESCOVPRINTER.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.NCOVER">
<summary>
.
</summary>
<remarks>Data-source is 'T_DESCOVPRINTER.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.SDESCRIPT">
<summary>
.
</summary>
<remarks>Data-source is 'T_DESCOVPRINTER.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.SSHORT_DES">
<summary>
.
</summary>
<remarks>Data-source is 'T_DESCOVPRINTER.SSHORT_DES'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.SSTATREGT">
<summary>
.
</summary>
<remarks>Data-source is 'T_DESCOVPRINTER.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.SSTATREGTEnum">
<summary>

</summary>
<remarks>This property use a enumeration based on property 'SSTATREGT'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.SSTATREGTEnumText">
<summary>

</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.DCOMPDATE">
<summary>
.
</summary>
<remarks>Data-source is 'T_DESCOVPRINTER.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.NUSERCODE">
<summary>
.
</summary>
<remarks>Data-source is 'T_DESCOVPRINTER.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.Compare(InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="DescriptionCoverPrinterItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinter.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinterCollection">
 <summary>
 Collection for DescriptionCoverPrinter class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinterCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinterCollection.AddDescriptionCoverPrinter">
 <summary>
 Add an instance of class 'DescriptionCoverPrinter' in the DescriptionCoverPrinterCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinterCollection.Compare(InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinterCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinterCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinterCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DescriptionCoverPrinterCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet">
 <summary>
 Detail of commercial set
 </summary>
<remarks>Data-source is 'COMMERCIALSETDET'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.CreateNewDetailOfCommercialSet">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet._CodeOfCommercialSet">
<summary>
Code of commercial set
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet._CurrencyCode">
<summary>
Code of The Currency
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet._Role">
<summary>
Role of the client in the policy
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet._CoverageType">
<summary>
Coverage Type
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet._GenericCoverageCode">
<summary>
Code of the generic coverage
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet._NumberGrouping">
<summary>
Number grouping in commercial set
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet._TypeOfValueToSumInsuredCalculation">
<summary>
Type of base value to sum insured calculation
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet._MinimumInsuredAmount">
<summary>
Minimum insured amount
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet._MaximumInsuredAmount">
<summary>
Maximum insured amount
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet._DefaultInsuredAmount">
<summary>
Default insured amount
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet._TypeOfBaseToSumInsuredCalculation">
<summary>
Type of base value to sum insured calculation
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet._CalculationFixedAmount">
<summary>
Fixed amount according the type of base value.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet._UserCode">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.CodeOfCommercialSet">
<summary>
Code of commercial set (NCOMMSET)..
</summary>
<remarks>Data-source is 'COMMERCIALSETDET.NCOMMSET'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.CurrencyCode">
<summary>
Code of The Currency (NCURRENCY)..
</summary>
<remarks>Data-source is 'COMMERCIALSETDET.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'COMMERCIALSETDET.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.Role">
<summary>
Role of the client in the policy (NROLE)..
</summary>
<remarks>Data-source is 'COMMERCIALSETDET.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.RoleEnum">
<summary>
Role of the client in the policy
</summary>
<remarks>This property use a enumeration based on property 'Role'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.RoleEnumText">
<summary>
Role of the client in the policy
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.CoverageType">
<summary>
Coverage Type (NCOVERTYPE)..
</summary>
<remarks>Data-source is 'COMMERCIALSETDET.NCOVERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.GenericCoverageCode">
<summary>
Code of the generic coverage (NCOVERGEN)..
</summary>
<remarks>Data-source is 'COMMERCIALSETDET.NCOVERGEN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.NumberGrouping">
<summary>
Number grouping in commercial set (NOPTION)..
</summary>
<remarks>Data-source is 'COMMERCIALSETDET.NOPTION'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.TypeOfValueToSumInsuredCalculation">
<summary>
Type of base value to sum insured calculation (NCALCTYPE)..
</summary>
<remarks>Data-source is 'COMMERCIALSETDET.NCALCTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.MinimumInsuredAmount">
<summary>
Minimum insured amount (NSUMAMOUNTFROM)..
</summary>
<remarks>Data-source is 'COMMERCIALSETDET.NSUMAMOUNTFROM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.MaximumInsuredAmount">
<summary>
Maximum insured amount (NSUMAMOUNTTO)..
</summary>
<remarks>Data-source is 'COMMERCIALSETDET.NSUMAMOUNTTO'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.DefaultInsuredAmount">
<summary>
Default insured amount (NDEFAULTSUMAMOUNT)..
</summary>
<remarks>Data-source is 'COMMERCIALSETDET.NDEFAULTSUMAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.TypeOfBaseToSumInsuredCalculation">
<summary>
Type of base value to sum insured calculation (NCALCBASE)..
</summary>
<remarks>Data-source is 'COMMERCIALSETDET.NCALCBASE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.CalculationFixedAmount">
<summary>
Fixed amount according the type of base value. (NCALCVALUE)..
</summary>
<remarks>Data-source is 'COMMERCIALSETDET.NCALCVALUE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'COMMERCIALSETDET.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'COMMERCIALSETDET.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.UserCode">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'COMMERCIALSETDET.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.Compare(InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="DetailOfCommercialSetItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSet.TypeOfValueToSumInsuredCalculationDescription">
 <summary>
 Type of base value to sum insured calculation
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6764' on the table 'TABLE6764'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSetCollection">
 <summary>
 Collection for DetailOfCommercialSet class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSetCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSetCollection.AddDetailOfCommercialSet">
 <summary>
 Add an instance of class 'DetailOfCommercialSet' in the DetailOfCommercialSetCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSetCollection.Compare(InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSetCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSetCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSetCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailOfCommercialSetCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct">
 <summary>
 Details of premium rates associated with medical products.
 </summary>
<remarks>Data-source is 'TAR_AM_DETPROD'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.CreateNewDetailsPremiumRateHealthProduct">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct._RatingTable">
<summary>
Code of the rating table used for the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct._TypeOfInsuredPerson">
<summary>
Type of insured person (main insured, children, spouse, …) for rating purposes in Health insurance
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct._YoungestAge">
<summary>
Youngest age for this rate.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct._OldestAge">
<summary>
Oldest age for this rate.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct._PremiumAmount">
<summary>
Premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct._NMODULEC">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct._Coverage">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAR_AM_DETPROD.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAR_AM_DETPROD.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.RatingTable">
<summary>
Code of the rating table used for the product. (NTARIFF)..
</summary>
<remarks>Data-source is 'TAR_AM_DETPROD.NTARIFF'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.TypeOfInsuredPerson">
<summary>
Type of insured person (main insured, children, spouse, …) for rating purposes in Health insurance (NGROUP_COMP)..
</summary>
<remarks>Data-source is 'TAR_AM_DETPROD.NGROUP_COMP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.YoungestAge">
<summary>
Youngest age for this rate. (NAGE_INIT)..
</summary>
<remarks>Data-source is 'TAR_AM_DETPROD.NAGE_INIT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAR_AM_DETPROD.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.OldestAge">
<summary>
Oldest age for this rate. (NAGE_END)..
</summary>
<remarks>Data-source is 'TAR_AM_DETPROD.NAGE_END'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAR_AM_DETPROD.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAR_AM_DETPROD.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.PremiumAmount">
<summary>
Premium amount. (NPREMIUM)..
</summary>
<remarks>Data-source is 'TAR_AM_DETPROD.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAR_AM_DETPROD.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.NMODULEC">
<summary>
.
</summary>
<remarks>Data-source is 'TAR_AM_DETPROD.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.Coverage">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'TAR_AM_DETPROD.NCOVER'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.Compare(InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="DetailsPremiumRateHealthProductItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProduct.TypeOfInsuredPersonDescription">
 <summary>
 Type of insured person (main insured, children, spouse, …) for rating purposes in Health insurance
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE268'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProductCollection">
 <summary>
 Collection for DetailsPremiumRateHealthProduct class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProductCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProductCollection.AddDetailsPremiumRateHealthProduct">
 <summary>
 Add an instance of class 'DetailsPremiumRateHealthProduct' in the DetailsPremiumRateHealthProductCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProductCollection.Compare(InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProductCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProductCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProductCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DetailsPremiumRateHealthProductCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct">
 <summary>
 Extra-premiums/Discounts/Taxes of a product.
 </summary>
<remarks>Data-source is 'DISCO_EXPR'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.CreateNewDiscountExtraPremiumTaxOfProduct">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._ExtraPremiumDiscountOrTaxCode">
<summary>
Code of the extra-premium/discount/tax.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._ReinsuranceLineOfBusiness">
<summary>
Code of the line of business for reinsurance.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._BillingItem">
<summary>
Code of the billing item.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._TypeOfChangesAllowedOnExtrapremiumsDiscountsAndTaxes">
<summary>
Type of possible changes to make on extra premiums, discounts and taxes.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._SolvencyMarginClass">
<summary>
Classification code for the solvency margin.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._AffectsCommission">
<summary>
The extra-premium/discount amount is taken into account to calculate the commissions.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._AccountingLineOfBusiness">
<summary>
Code of the accounting line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._SelectedByDefault">
<summary>
Indicator of &#34;selected by default&#34; for the Treatment of policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._Description">
<summary>
Description of the extra-premium/discount/tax.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._RefundsPermitted">
<summary>
The extra-premium/discount provides for refunds.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._MaximumAmount">
<summary>
Maximum amount for the extra-premium/discount/tax.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._MinimumAmount">
<summary>
Minimum amount for the extra-premium/discount/tax.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._FixedAmount">
<summary>
Fixed amount of Surcharge/discount to be added
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._AppliesOnInsuredAmountOrPremium">
<summary>
It indicates whether the percentage is applied to the insured amount or to the premium.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._OrderOfApplication">
<summary>
Order in which the extra-premium/discount/tax will be applied.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._Fractionable">
<summary>
The amount will be distributed according to the payment mode
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._Required">
<summary>
Extra-premium/discount/tax required.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._Routine">
<summary>
Name of the routine to be used to calculate and/or validate the extra-premium/discount/tax amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._ShortDescription">
<summary>
Abbreviated description of the extra-premium/discount/tax.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._MinimumSecurityLevel">
<summary>
Minimum updating level (security) that the user must have in order to execute the transaction update.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._TypeOfItem">
<summary>
Extra-premium, discount or tax indicator.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._NoteID">
<summary>
Number of the note related to the extra-premium/discount/tax.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._DefinedInPolicyIndicator">
<summary>
Indicates that the extra-premium is defined in the policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._ProfitMarginIndicator">
<summary>
Profit margin indicator.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._VATIndicator">
<summary>
It indicates that the record is VAT (Value Added Tax)
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._ElementThatAppliesChargeOrCredit">
<summary>
It indicates on which element applies the definition of a charge or credit.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._ExtraPremiumPercentage">
<summary>
Extra premium percentage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._MaximumPercentageOfDecrease">
<summary>
Maximum percentage by which the extra-premium/discount/tax may be decreased.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._MaximumPercentageOfIncrease">
<summary>
Maximum percentage of increase for the extra-premium/discount/tax.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._SubtypeSurcharge">
<summary>
Sub-type of surcharge / discount / tax
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._SDESCCFDI">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._ParticipatesinStipends">
<summary>
The extra-premium/discount amount is taken into account to calculate the stipends
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._ApplyOnPremTotal">
<summary>
Indicates that it applies to the total premium of the coverages. It is not necessary to specify the concepts on which it applies.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.ExtraPremiumDiscountOrTaxCode">
<summary>
Code of the extra-premium/discount/tax. (NDISEXPRC)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.NDISEXPRC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.ReinsuranceLineOfBusiness">
<summary>
Code of the line of business for reinsurance. (NBRANCH_REI)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.NBRANCH_REI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.BillingItem">
<summary>
Code of the billing item. (NBILL_ITEM)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.NBILL_ITEM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.TypeOfChangesAllowedOnExtrapremiumsDiscountsAndTaxes">
<summary>
Type of possible changes to make on extra premiums, discounts and taxes. (SCHANALLO)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.SCHANALLO'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.SolvencyMarginClass">
<summary>
Classification code for the solvency margin. (NBRANCH_EST)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.NBRANCH_EST'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.AffectsCommission">
<summary>
The extra-premium/discount amount is taken into account to calculate the commissions. (SCOMMISSI_I)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.SCOMMISSI_I'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.AccountingLineOfBusiness">
<summary>
Code of the accounting line of business. (NBRANCH_LED)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.NBRANCH_LED'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.SelectedByDefault">
<summary>
Indicator of &#34;selected by default&#34; for the Treatment of policy. (SDEFAULTI)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.SDEFAULTI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.Description">
<summary>
Description of the extra-premium/discount/tax. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.RefundsPermitted">
<summary>
The extra-premium/discount provides for refunds. (SDEVOALLO)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.SDEVOALLO'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.MaximumAmount">
<summary>
Maximum amount for the extra-premium/discount/tax. (NDISEXMAX)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.NDISEXMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.MinimumAmount">
<summary>
Minimum amount for the extra-premium/discount/tax. (NDISEXMIN)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.NDISEXMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.FixedAmount">
<summary>
Fixed amount of Surcharge/discount to be added (NDISEXPRA)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.NDISEXPRA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.AppliesOnInsuredAmountOrPremium">
<summary>
It indicates whether the percentage is applied to the insured amount or to the premium. (SEDPERAPL)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.SEDPERAPL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.OrderOfApplication">
<summary>
Order in which the extra-premium/discount/tax will be applied. (NORDER_APL)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.NORDER_APL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.Fractionable">
<summary>
The amount will be distributed according to the payment mode (SPRORATE)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.SPRORATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.Required">
<summary>
Extra-premium/discount/tax required. (SREQUIRE)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.SREQUIRE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.Routine">
<summary>
Name of the routine to be used to calculate and/or validate the extra-premium/discount/tax amount. (SROUTINE)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.SROUTINE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.ShortDescription">
<summary>
Abbreviated description of the extra-premium/discount/tax. (SSHORT_DES)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.SSHORT_DES'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.MinimumSecurityLevel">
<summary>
Minimum updating level (security) that the user must have in order to execute the transaction update. (NAMELEVEL)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.NAMELEVEL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.TypeOfItem">
<summary>
Extra-premium, discount or tax indicator. (SDISEXPRI)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.SDISEXPRI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.NoteID">
<summary>
Number of the note related to the extra-premium/discount/tax. (NNOTENUM)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.DefinedInPolicyIndicator">
<summary>
Indicates that the extra-premium is defined in the policy. (SDEFPOL)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.SDEFPOL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.ProfitMarginIndicator">
<summary>
Profit margin indicator. (STYPMAR)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.STYPMAR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.VATIndicator">
<summary>
It indicates that the record is VAT (Value Added Tax) (SIVA)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.SIVA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.ElementThatAppliesChargeOrCredit">
<summary>
It indicates on which element applies the definition of a charge or credit. (NAPLY)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.NAPLY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.ExtraPremiumPercentage">
<summary>
Extra premium percentage. (NRATE)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.MaximumPercentageOfDecrease">
<summary>
Maximum percentage by which the extra-premium/discount/tax may be decreased. (NDISEXSUBPER)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.NDISEXSUBPER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.MaximumPercentageOfIncrease">
<summary>
Maximum percentage of increase for the extra-premium/discount/tax. (NDISEXADDPER)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.NDISEXADDPER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.SubtypeSurcharge">
<summary>
Sub-type of surcharge / discount / tax (NDISSUR_TYPE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DISCO_EXPR.NDISSUR_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.SDESCCFDI">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DISCO_EXPR.SDESCCFDI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.ParticipatesinStipends">
<summary>
The extra-premium/discount amount is taken into account to calculate the stipends (SIND_STIPENDS)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DISCO_EXPR.SIND_STIPENDS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.ApplyOnPremTotal">
<summary>
Indicates that it applies to the total premium of the coverages. It is not necessary to specify the concepts on which it applies. (SAPLY_PREM)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DISCO_EXPR.SAPLY_PREM'.</remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.Compare(InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="DiscountExtraPremiumTaxOfProductItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.ReinsuranceLineOfBusinessDescription">
 <summary>
 Code of the line of business for reinsurance.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5000'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.SolvencyMarginClassDescription">
 <summary>
 Classification code for the solvency margin.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE71'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.AccountingLineOfBusinessDescription">
 <summary>
 Code of the accounting line of business.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE75'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.TypeOfItemDescription">
 <summary>
 Extra-premium, discount or tax indicator.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE30'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProduct.SubtypeSurchargeDescription">
 <summary>
 Sub-type of surcharge / discount / tax
 </summary>
 <remarks>
 This property is associated with the field 'TABLE3007' on the table 'TABLE3007'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProductCollection">
 <summary>
 Collection for DiscountExtraPremiumTaxOfProduct class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProductCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProductCollection.AddDiscountExtraPremiumTaxOfProduct">
 <summary>
 Add an instance of class 'DiscountExtraPremiumTaxOfProduct' in the DiscountExtraPremiumTaxOfProductCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProductCollection.Compare(InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProductCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProductCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProductCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountExtraPremiumTaxOfProductCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic">
 <summary>
 Basic premium discounts.
 </summary>
<remarks>Data-source is 'DISC_PB'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.CreateNewDiscountPremiumBasic">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic._ProducerType">
<summary>
Type of producer.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic._Agreement">
<summary>
Agreement code.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic._NumberOfPaymentsOfBasicPremiums">
<summary>
Number of payments of basic premiums.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic._DiscountPercentage">
<summary>
Discount percentage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.ProducerType">
<summary>
Type of producer. (NINTERTYP)..
</summary>
<remarks>Data-source is 'DISC_PB.NINTERTYP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'DISC_PB.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'DISC_PB.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'DISC_PB.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.Agreement">
<summary>
Agreement code. (NAGREEMENT)..
</summary>
<remarks>Data-source is 'DISC_PB.NAGREEMENT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.NumberOfPaymentsOfBasicPremiums">
<summary>
Number of payments of basic premiums. (NQPB)..
</summary>
<remarks>Data-source is 'DISC_PB.NQPB'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'DISC_PB.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'DISC_PB.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.DiscountPercentage">
<summary>
Discount percentage. (NPERCENT)..
</summary>
<remarks>Data-source is 'DISC_PB.NPERCENT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'DISC_PB.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'DISC_PB.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.Compare(InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="DiscountPremiumBasicItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasic.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasicCollection">
 <summary>
 Collection for DiscountPremiumBasic class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasicCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasicCollection.AddDiscountPremiumBasic">
 <summary>
 Add an instance of class 'DiscountPremiumBasic' in the DiscountPremiumBasicCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasicCollection.Compare(InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasicCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasicCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasicCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DiscountPremiumBasicCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct">
 <summary>
 Duration of payments associated with the product.
 </summary>
<remarks>Data-source is 'DURPAY_PROD'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.CreateNewDurationPaymentAssociatedProduct">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct._ConsecutiveNumber">
<summary>
Consecutive Number identifying the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct._InsuranceDuration">
<summary>
Insurance duration expressed in years (number of years or age, in agreement with the value of the field type &#34;NTYPDURINS&#34;).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct._DurationOfPayments">
<summary>
Duration of premium payments.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct._TypeOfInsuranceDuration">
<summary>
Type of duration for the insurance.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct._TypeOfDuration">
<summary>
Duration type (payments/insurances).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'DURPAY_PROD.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'DURPAY_PROD.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.ConsecutiveNumber">
<summary>
Consecutive Number identifying the record. (NID)..
</summary>
<remarks>Data-source is 'DURPAY_PROD.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'DURPAY_PROD.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.InsuranceDuration">
<summary>
Insurance duration expressed in years (number of years or age, in agreement with the value of the field type &#34;NTYPDURINS&#34;). (NIDURAFIX)..
</summary>
<remarks>Data-source is 'DURPAY_PROD.NIDURAFIX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.DurationOfPayments">
<summary>
Duration of premium payments. (NPDURAFIX)..
</summary>
<remarks>Data-source is 'DURPAY_PROD.NPDURAFIX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'DURPAY_PROD.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'DURPAY_PROD.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'DURPAY_PROD.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.TypeOfInsuranceDuration">
<summary>
Type of duration for the insurance. (NTYPDURINS)..
</summary>
<remarks>Data-source is 'DURPAY_PROD.NTYPDURINS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.TypeOfInsuranceDurationEnum">
<summary>
Type of duration for the insurance.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfInsuranceDuration'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.TypeOfInsuranceDurationEnumText">
<summary>
Type of duration for the insurance.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.TypeOfDuration">
<summary>
Duration type (payments/insurances). (NTYPDURPAY)..
</summary>
<remarks>Data-source is 'DURPAY_PROD.NTYPDURPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.TypeOfDurationEnum">
<summary>
Duration type (payments/insurances).
</summary>
<remarks>This property use a enumeration based on property 'TypeOfDuration'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.TypeOfDurationEnumText">
<summary>
Duration type (payments/insurances).
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.Compare(InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="DurationPaymentAssociatedProductItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.TypeOfInsuranceDurationDescription">
 <summary>
 Type of duration for the insurance.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5589'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProduct.TypeOfDurationDescription">
 <summary>
 Duration type (payments/insurances).
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5589'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProductCollection">
 <summary>
 Collection for DurationPaymentAssociatedProduct class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProductCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProductCollection.AddDurationPaymentAssociatedProduct">
 <summary>
 Add an instance of class 'DurationPaymentAssociatedProduct' in the DurationPaymentAssociatedProductCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProductCollection.Compare(InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProductCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProductCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProductCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.DurationPaymentAssociatedProductCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife">
 <summary>
 Effective date of contributions to a product life.
 </summary>
<remarks>Data-source is 'EFFECT_DAT'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.CreateNewEffectiveDateInputForProductLife">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife._EndingDateOfEffectivePeriod">
<summary>
Last day of the contribution period.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife._InitialDateOfEffectivePeriod">
<summary>
First day of the contribution period.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife._DaysForDepositToBeEffective">
<summary>
Number of days to be added to the contribution&#39;s date in order to obtain the value date.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife._EffectiveMonth">
<summary>
Effective month of value for the contribution (current month or next month).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife._TypeOfEffectiveValueDate">
<summary>
Type of value of the contribution.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'EFFECT_DAT.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'EFFECT_DAT.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.EndingDateOfEffectivePeriod">
<summary>
Last day of the contribution period. (NDAYNUMEN)..
</summary>
<remarks>Data-source is 'EFFECT_DAT.NDAYNUMEN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.InitialDateOfEffectivePeriod">
<summary>
First day of the contribution period. (NDAYNUMIN)..
</summary>
<remarks>Data-source is 'EFFECT_DAT.NDAYNUMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'EFFECT_DAT.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.DaysForDepositToBeEffective">
<summary>
Number of days to be added to the contribution&#39;s date in order to obtain the value date. (NDAYADD)..
</summary>
<remarks>Data-source is 'EFFECT_DAT.NDAYADD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'EFFECT_DAT.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'EFFECT_DAT.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'EFFECT_DAT.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.EffectiveMonth">
<summary>
Effective month of value for the contribution (current month or next month). (NVALUESMO)..
</summary>
<remarks>Data-source is 'EFFECT_DAT.NVALUESMO'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.TypeOfEffectiveValueDate">
<summary>
Type of value of the contribution. (NVALUESTY)..
</summary>
<remarks>Data-source is 'EFFECT_DAT.NVALUESTY'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.Compare(InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="EffectiveDateInputForProductLifeItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.EffectiveMonthDescription">
 <summary>
 Effective month of value for the contribution (current month or next month).
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE126'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLife.TypeOfEffectiveValueDateDescription">
 <summary>
 Type of value of the contribution.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE125'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLifeCollection">
 <summary>
 Collection for EffectiveDateInputForProductLife class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLifeCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLifeCollection.AddEffectiveDateInputForProductLife">
 <summary>
 Add an instance of class 'EffectiveDateInputForProductLife' in the EffectiveDateInputForProductLifeCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLifeCollection.Compare(InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLifeCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLifeCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLifeCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EffectiveDateInputForProductLifeCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct">
 <summary>
 Table of types of endorsements by line of business and by product
 </summary>
<remarks>Data-source is 'TYPE_AMEND'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.CreateNewEndorsementTypeByLineBusinessAndProduct">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct._EndorsementType">
<summary>
Code of type of endorsement.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct._ServiceOrderRequired">
<summary>
Indicator of requirement of service order.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct._TypeOfEffectiveDate">
<summary>
Type of effective date.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct._MinimumSecurityLevelForRetroactiveEndorsements">
<summary>
Minimum updating level (security) that the user must have in order to break the rules defined (endorsement retroactive).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct._SRETARIF">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct._Description">
<summary>
Description of endorsement type.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TYPE_AMEND.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TYPE_AMEND.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TYPE_AMEND.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.EndorsementType">
<summary>
Code of type of endorsement. (NTYPE_AMEND)..
</summary>
<remarks>Data-source is 'TYPE_AMEND.NTYPE_AMEND'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TYPE_AMEND.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.ServiceOrderRequired">
<summary>
Indicator of requirement of service order. (SIND_ORDER_SERV)..
</summary>
<remarks>Data-source is 'TYPE_AMEND.SIND_ORDER_SERV'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TYPE_AMEND.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TYPE_AMEND.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.TypeOfEffectiveDate">
<summary>
Type of effective date. (NTYPEISSUE)..
</summary>
<remarks>Data-source is 'TYPE_AMEND.NTYPEISSUE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.MinimumSecurityLevelForRetroactiveEndorsements">
<summary>
Minimum updating level (security) that the user must have in order to break the rules defined (endorsement retroactive). (NLEVEL)..
</summary>
<remarks>Data-source is 'TYPE_AMEND.NLEVEL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.SRETARIF">
<summary>
.
</summary>
<remarks>Data-source is 'TYPE_AMEND.SRETARIF'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.Description">
<summary>
Description of endorsement type. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'TYPE_AMEND.SDESCRIPT'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.Compare(InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="EndorsementTypeByLineBusinessAndProductItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.LineOfBusinessDescription">
 <summary>
 Code of the line of business.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE10'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.EndorsementTypeDescription">
 <summary>
 Code of type of endorsement.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE6059'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProduct.TypeOfEffectiveDateDescription">
 <summary>
 Type of effective date.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5569'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProductCollection">
 <summary>
 Collection for EndorsementTypeByLineBusinessAndProduct class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProductCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProductCollection.AddEndorsementTypeByLineBusinessAndProduct">
 <summary>
 Add an instance of class 'EndorsementTypeByLineBusinessAndProduct' in the EndorsementTypeByLineBusinessAndProductCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProductCollection.Compare(InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProductCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProductCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProductCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.EndorsementTypeByLineBusinessAndProductCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy">
 <summary>
 Exclusion of illnesses from products.
 </summary>
<remarks>Data-source is 'TAB_AM_EXCPROD'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.CreateNewExcludedIllnessByProductInHealthPolicy">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy._RatingTable">
<summary>
Code of the rating table used for the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy._Illness">
<summary>
Code of the illness.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy._ExclusionCause">
<summary>
Code of the reason why the illness is excluded.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy._ExclusionDate">
<summary>
Date when the disease is excluded from the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy._EndingDate">
<summary>
Date up to which the illness will remain excluded.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAB_AM_EXCPROD.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAB_AM_EXCPROD.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.RatingTable">
<summary>
Code of the rating table used for the product. (NTARIFF)..
</summary>
<remarks>Data-source is 'TAB_AM_EXCPROD.NTARIFF'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAB_AM_EXCPROD.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.Illness">
<summary>
Code of the illness. (SILLNESS)..
</summary>
<remarks>Data-source is 'TAB_AM_EXCPROD.SILLNESS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.ExclusionCause">
<summary>
Code of the reason why the illness is excluded. (NEXC_CODE)..
</summary>
<remarks>Data-source is 'TAB_AM_EXCPROD.NEXC_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_AM_EXCPROD.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.ExclusionDate">
<summary>
Date when the disease is excluded from the product. (DINIT_DATE)..
</summary>
<remarks>Data-source is 'TAB_AM_EXCPROD.DINIT_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.EndingDate">
<summary>
Date up to which the illness will remain excluded. (DEND_DATE)..
</summary>
<remarks>Data-source is 'TAB_AM_EXCPROD.DEND_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAB_AM_EXCPROD.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_AM_EXCPROD.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.Compare(InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ExcludedIllnessByProductInHealthPolicyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicy.ExclusionCauseDescription">
 <summary>
 Code of the reason why the illness is excluded.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE271'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicyCollection">
 <summary>
 Collection for ExcludedIllnessByProductInHealthPolicy class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicyCollection.AddExcludedIllnessByProductInHealthPolicy">
 <summary>
 Add an instance of class 'ExcludedIllnessByProductInHealthPolicy' in the ExcludedIllnessByProductInHealthPolicyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicyCollection.Compare(InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ExcludedIllnessByProductInHealthPolicyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness">
 <summary>
 Particular information file names used by every line of business.
 </summary>
<remarks>Data-source is 'TAB_NAME_B'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness.CreateNewFileNameUsedInLineOfBusiness">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness._FileNameToProcess">
<summary>
File name to be processed.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAB_NAME_B.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_NAME_B.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness.FileNameToProcess">
<summary>
File name to be processed. (STABNAME)..
</summary>
<remarks>Data-source is 'TAB_NAME_B.STABNAME'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_NAME_B.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness.Compare(InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="FileNameUsedInLineOfBusinessItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusiness.LineOfBusinessDescription">
 <summary>
 Code of the line of business.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE10'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusinessCollection">
 <summary>
 Collection for FileNameUsedInLineOfBusiness class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusinessCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusinessCollection.AddFileNameUsedInLineOfBusiness">
 <summary>
 Add an instance of class 'FileNameUsedInLineOfBusiness' in the FileNameUsedInLineOfBusinessCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusinessCollection.Compare(InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusinessCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusinessCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusinessCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FileNameUsedInLineOfBusinessCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct">
 <summary>
 Frequencies allowed by way of payment and product.
 </summary>
<remarks>Data-source is 'FREQ_WAY_PROD'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.CreateNewFrequencyAllowedByPaymentProduct">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct._PaymentMethod">
<summary>
Code of the payment method.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct._PaymentFrequency">
<summary>
Code of the payment frequency allowed for this method of payment.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct._MinimumPremiumForNewPolicies">
<summary>
Minimum premium amount for new policies for the indicated payment method and frequency.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct._MinimumPremiumForEndorsement">
<summary>
Minimum endorsement premium amount for the indicated payment method and frequency.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct._LimitTaxsurplus">
<summary>
Limit tax surplus
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct._NumberOfAnnualBasicMinimumPremiumRequired">
<summary>
Number of annual basic minimum premium required...
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct._AdditionalCoverageIVAAllowedIndicator">
<summary>
Indicator that additional coverage VAT is allowed.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct._PaymentMethodNotAllowed">
<summary>
Payment method not allowed for sale
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'FREQ_WAY_PROD.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'FREQ_WAY_PROD.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.PaymentMethod">
<summary>
Code of the payment method. (NWAY_PAY)..
</summary>
<remarks>Data-source is 'FREQ_WAY_PROD.NWAY_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.PaymentFrequency">
<summary>
Code of the payment frequency allowed for this method of payment. (NPAYFREQ)..
</summary>
<remarks>Data-source is 'FREQ_WAY_PROD.NPAYFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.PaymentFrequencyEnum">
<summary>
Code of the payment frequency allowed for this method of payment.
</summary>
<remarks>This property use a enumeration based on property 'PaymentFrequency'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.PaymentFrequencyEnumText">
<summary>
Code of the payment frequency allowed for this method of payment.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'FREQ_WAY_PROD.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'FREQ_WAY_PROD.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.MinimumPremiumForNewPolicies">
<summary>
Minimum premium amount for new policies for the indicated payment method and frequency. (NPRE_ISSUE)..
</summary>
<remarks>Data-source is 'FREQ_WAY_PROD.NPRE_ISSUE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.MinimumPremiumForEndorsement">
<summary>
Minimum endorsement premium amount for the indicated payment method and frequency. (NPRE_AMEND)..
</summary>
<remarks>Data-source is 'FREQ_WAY_PROD.NPRE_AMEND'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'FREQ_WAY_PROD.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'FREQ_WAY_PROD.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'FREQ_WAY_PROD.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.LimitTaxsurplus">
<summary>
Limit tax surplus (NLIMIT_EXCTAX)..
</summary>
<remarks>Data-source is 'FREQ_WAY_PROD.NLIMIT_EXCTAX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.NumberOfAnnualBasicMinimumPremiumRequired">
<summary>
Number of annual basic minimum premium required... (NQPREM_BAS_ANN)..
</summary>
<remarks>Data-source is 'FREQ_WAY_PROD.NQPREM_BAS_ANN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.AdditionalCoverageIVAAllowedIndicator">
<summary>
Indicator that additional coverage VAT is allowed. (SIVA_COVER_IND)..
</summary>
<remarks>Data-source is 'FREQ_WAY_PROD.SIVA_COVER_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.PaymentMethodNotAllowed">
<summary>
Payment method not allowed for sale (SNO_SELL)..
</summary>
<remarks>Data-source is 'FREQ_WAY_PROD.SNO_SELL'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.Compare(InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="FrequencyAllowedByPaymentProductItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.PaymentMethodDescription">
 <summary>
 Code of the payment method.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5002'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProduct.PaymentFrequencyDescription">
 <summary>
 Code of the payment frequency allowed for this method of payment.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE36'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProductCollection">
 <summary>
 Collection for FrequencyAllowedByPaymentProduct class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProductCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProductCollection.AddFrequencyAllowedByPaymentProduct">
 <summary>
 Add an instance of class 'FrequencyAllowedByPaymentProduct' in the FrequencyAllowedByPaymentProductCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProductCollection.Compare(InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProductCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProductCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProductCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAllowedByPaymentProductCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed">
 <summary>
 Payment frequency allowed and extra-premium as per payment frequency.
 </summary>
<remarks>Data-source is 'PAY_FRACTI'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.CreateNewFrequencyAndExtraPremiumAllowed">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed._PaymentFrequency">
<summary>
Frequency of premium payment.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed._Installments">
<summary>
Number of installments to pay the premium.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed._ExtrachargeAsPerPaymentFrequency">
<summary>
Extra-premium percentage as per payment frequency.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed._Currency">
<summary>
Code of The
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'PAY_FRACTI.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'PAY_FRACTI.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.PaymentFrequency">
<summary>
Frequency of premium payment. (NPAYFREQ)..
</summary>
<remarks>Data-source is 'PAY_FRACTI.NPAYFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.PaymentFrequencyEnum">
<summary>
Frequency of premium payment.
</summary>
<remarks>This property use a enumeration based on property 'PaymentFrequency'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.PaymentFrequencyEnumText">
<summary>
Frequency of premium payment.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.Installments">
<summary>
Number of installments to pay the premium. (NQUOTA)..
</summary>
<remarks>Data-source is 'PAY_FRACTI.NQUOTA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'PAY_FRACTI.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'PAY_FRACTI.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'PAY_FRACTI.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.ExtrachargeAsPerPaymentFrequency">
<summary>
Extra-premium percentage as per payment frequency. (NRATEPAYF)..
</summary>
<remarks>Data-source is 'PAY_FRACTI.NRATEPAYF'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'PAY_FRACTI.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'PAY_FRACTI.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.Currency">
<summary>
Code of The (NCURRENCY)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PAY_FRACTI.NCURRENCY'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.Compare(InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="FrequencyAndExtraPremiumAllowedItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowed.PaymentFrequencyDescription">
 <summary>
 Frequency of premium payment.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE36'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowedCollection">
 <summary>
 Collection for FrequencyAndExtraPremiumAllowed class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowedCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowedCollection.AddFrequencyAndExtraPremiumAllowed">
 <summary>
 Add an instance of class 'FrequencyAndExtraPremiumAllowed' in the FrequencyAndExtraPremiumAllowedCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowedCollection.Compare(InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowedCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowedCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowedCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FrequencyAndExtraPremiumAllowedCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.FundDistribution">
 <summary>
 FundDistributions
 </summary>
<remarks>Data-source is 'FUND_DISTRIBUTION'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FundDistribution.CreateNewFundDistribution">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FundDistribution.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FundDistribution._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FundDistribution._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FundDistribution._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FundDistribution._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FundDistribution._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FundDistribution._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FundDistribution._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FundDistribution._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FundDistribution._CodeInvestorProfile">
<summary>
Code investor profile
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FundDistribution._InvestmentFund">
<summary>
Code of the investment fund.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FundDistribution._SourceAccount">
<summary>
Code of the source account by default.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FundDistribution._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FundDistribution._PercentageShare">
<summary>
Percentage of the Fund&#39;s involvement in the distribution of the type of profile
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FundDistribution._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FundDistribution._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.FundDistribution._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FundDistribution.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FundDistribution.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FundDistribution.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FundDistribution.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FundDistribution.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FundDistribution.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'FUND_DISTRIBUTION.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FundDistribution.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'FUND_DISTRIBUTION.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FundDistribution.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'FUND_DISTRIBUTION.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FundDistribution.CodeInvestorProfile">
<summary>
Code investor profile (NTYPEPROFILE)..
</summary>
<remarks>Data-source is 'FUND_DISTRIBUTION.NTYPEPROFILE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FundDistribution.InvestmentFund">
<summary>
Code of the investment fund. (NFUNDS)..
</summary>
<remarks>Data-source is 'FUND_DISTRIBUTION.NFUNDS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FundDistribution.SourceAccount">
<summary>
Code of the source account by default. (NORIGIN)..
</summary>
<remarks>Data-source is 'FUND_DISTRIBUTION.NORIGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FundDistribution.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'FUND_DISTRIBUTION.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FundDistribution.PercentageShare">
<summary>
Percentage of the Fund&#39;s involvement in the distribution of the type of profile (NPERCENT)..
</summary>
<remarks>Data-source is 'FUND_DISTRIBUTION.NPERCENT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FundDistribution.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'FUND_DISTRIBUTION.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FundDistribution.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'FUND_DISTRIBUTION.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FundDistribution.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FundDistribution.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FundDistribution.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FundDistribution.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FundDistribution.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FundDistribution.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FundDistribution.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FundDistribution.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FundDistribution.Compare(InMotionGIT.Product.Entity.Contracts.FundDistribution,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="FundDistributionItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FundDistribution.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FundDistribution.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FundDistribution.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FundDistribution.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FundDistribution.CodeInvestorProfileDescription">
 <summary>
 Code investor profile
 </summary>
 <remarks>
 This property is associated with the field 'TABLE8320' on the table 'TABLE8320'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.FundDistributionCollection">
 <summary>
 Collection for FundDistribution class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FundDistributionCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FundDistributionCollection.AddFundDistribution">
 <summary>
 Add an instance of class 'FundDistribution' in the FundDistributionCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FundDistributionCollection.Compare(InMotionGIT.Product.Entity.Contracts.FundDistributionCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.FundDistributionCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FundDistributionCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.FundDistributionCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty">
 <summary>
 Table of generic coverages of general line of business.
 </summary>
<remarks>Data-source is 'TAB_GENCOV'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.CreateNewGenericCoverageForPropertyAndCasualty">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._GenericCoverage">
<summary>
Code of the generic coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._AutomaticLimitReinstatement">
<summary>
Automatic reinstatement of limit or sum insured (Indicator).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._AccountingLineOfBusiness">
<summary>
Code of the accounting line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._SolvencyMarginClass">
<summary>
Classification code for the solvency margin.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._GenericLineOfBusiness">
<summary>
Code of the generic line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._ReinsuranceLineOfBusiness">
<summary>
Code of the line of business for reinsurance.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._Amount">
<summary>
Fixed amount of the sum insured.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._FreeInsuredAmount">
<summary>
The sum insured will be entered by the user at the moment of issuing the policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._UnlimitedCoverage">
<summary>
Unlimited sum insured indicator (infinite limit).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._IndexedLimit">
<summary>
Indexed limit indicator (indexed insured amount).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._Coverage">
<summary>
Code of the coverage that contains the premium of this coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._Description">
<summary>
Description of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._FranchiseOrDeductible">
<summary>
It indicates if a franchise or deductible is applied
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._FixedAmountOfFranchiseOrDeductible">
<summary>
Fixed franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._MaximumAmountOfFranchiseOrDeductible">
<summary>
Maximum franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._MinimumAmountOfFranchiseOrDeductible">
<summary>
Minimum franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._FranchiseOrDeductiblePercentage">
<summary>
Franchise or deductible percentage to be applied.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._FranchiseOrDeductibleIndicator">
<summary>
It indicates whether a franchise or deductible is applied
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._AverageAmount">
<summary>
Average amount to make the reserve of claim of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._FixedPremium">
<summary>
Fixed premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._MaximumPremium">
<summary>
Maximum premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._MinimumPremium">
<summary>
Minimum premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._RatePerThousand">
<summary>
Rate per thousands (o/oo) of calculation of the premium of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._RoutineForCalculationOfInsuredAmount">
<summary>
Calculation routine for sum insured or limit.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._RoutineForFranchiseOrDeductible">
<summary>
Calculation routine for franchise/deductible.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._CalculationRoutine">
<summary>
Routine of calculation and/or validation of the premium
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._RoutineForClaimReserve">
<summary>
Routine of calculation and/or validation of the claim reserve.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._ShortDescription">
<summary>
Short description of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._Approval">
<summary>
Official approval number by the Insurances Authority.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._InformToVendor">
<summary>
Indicator of &#34;Inform to vendor&#34;.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._Vendor">
<summary>
Client code that identifies the vendor/supplier.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._LargeRisk">
<summary>
Large risk indicator.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._CodeCoverType">
<summary>
Code cover type
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._SCOVERUSE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._SROUCHACA">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._SROU_COND_CAP">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._SINDSUMCLAIM">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._NFRANCRATCLA">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._NFRANCFIXCLA">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._NFRANXMINCLA">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._NFRANXMAXCLA">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty._SROUFRANCCLA">
<summary>

</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.GenericCoverage">
<summary>
Code of the generic coverage. (NCOVERGEN)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.NCOVERGEN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.AutomaticLimitReinstatement">
<summary>
Automatic reinstatement of limit or sum insured (Indicator). (SAUTOMREP)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.SAUTOMREP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.AccountingLineOfBusiness">
<summary>
Code of the accounting line of business. (NBRANCH_LED)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.NBRANCH_LED'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.SolvencyMarginClass">
<summary>
Classification code for the solvency margin. (NBRANCH_EST)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.NBRANCH_EST'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.GenericLineOfBusiness">
<summary>
Code of the generic line of business. (NBRANCH_GEN)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.NBRANCH_GEN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.ReinsuranceLineOfBusiness">
<summary>
Code of the line of business for reinsurance. (NBRANCH_REI)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.NBRANCH_REI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.Amount">
<summary>
Fixed amount of the sum insured. (NCACALFIX)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.NCACALFIX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.FreeInsuredAmount">
<summary>
The sum insured will be entered by the user at the moment of issuing the policy. (SCACALFRI)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.SCACALFRI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.UnlimitedCoverage">
<summary>
Unlimited sum insured indicator (infinite limit). (SCACALILI)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.SCACALILI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.IndexedLimit">
<summary>
Indexed limit indicator (indexed insured amount). (SCACALREI)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.SCACALREI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.Coverage">
<summary>
Code of the coverage that contains the premium of this coverage. (NCOVER_IN)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.NCOVER_IN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.Description">
<summary>
Description of the coverage. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.FranchiseOrDeductible">
<summary>
It indicates if a franchise or deductible is applied (SFRANCAPL)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.SFRANCAPL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.FixedAmountOfFranchiseOrDeductible">
<summary>
Fixed franchise or deductible amount. (NFRANCFIX)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.NFRANCFIX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.MaximumAmountOfFranchiseOrDeductible">
<summary>
Maximum franchise or deductible amount. (NFRANCMAX)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.NFRANCMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.MinimumAmountOfFranchiseOrDeductible">
<summary>
Minimum franchise or deductible amount. (NFRANCMIN)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.NFRANCMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.FranchiseOrDeductiblePercentage">
<summary>
Franchise or deductible percentage to be applied. (NFRANCRAT)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.NFRANCRAT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.FranchiseOrDeductibleIndicator">
<summary>
It indicates whether a franchise or deductible is applied (SFRANTYPE)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.SFRANTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.AverageAmount">
<summary>
Average amount to make the reserve of claim of the coverage. (NMEDRESER)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.NMEDRESER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.FixedPremium">
<summary>
Fixed premium amount. (NPREMIFIX)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.NPREMIFIX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.MaximumPremium">
<summary>
Maximum premium amount. (NPREMIMAX)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.NPREMIMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.MinimumPremium">
<summary>
Minimum premium amount. (NPREMIMIN)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.NPREMIMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.RatePerThousand">
<summary>
Rate per thousands (o/oo) of calculation of the premium of the coverage. (NPREMIRAT)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.NPREMIRAT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.RoutineForCalculationOfInsuredAmount">
<summary>
Calculation routine for sum insured or limit. (SROUCAPIT)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.SROUCAPIT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.RoutineForFranchiseOrDeductible">
<summary>
Calculation routine for franchise/deductible. (SROUFRANC)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.SROUFRANC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.CalculationRoutine">
<summary>
Routine of calculation and/or validation of the premium (SROUPREMI)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.SROUPREMI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.RoutineForClaimReserve">
<summary>
Routine of calculation and/or validation of the claim reserve. (SROURESER)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.SROURESER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.ShortDescription">
<summary>
Short description of the coverage. (SSHORT_DES)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.SSHORT_DES'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.Approval">
<summary>
Official approval number by the Insurances Authority. (SCONDSVS)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.SCONDSVS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.InformToVendor">
<summary>
Indicator of &#34;Inform to vendor&#34;. (SINFORPROV)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.SINFORPROV'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.Vendor">
<summary>
Client code that identifies the vendor/supplier. (SPROVIDER)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.SPROVIDER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.LargeRisk">
<summary>
Large risk indicator. (SRISK)..
</summary>
<remarks>Data-source is 'TAB_GENCOV.SRISK'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.CodeCoverType">
<summary>
Code cover type (NCOVERTYPE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_GENCOV.NCOVERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.SCOVERUSE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_GENCOV.SCOVERUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.SCOVERUSEEnum">
<summary>

</summary>
<remarks>This property use a enumeration based on property 'SCOVERUSE'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.SCOVERUSEEnumText">
<summary>

</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.SROUCHACA">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_GENCOV.SROUCHACA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.SROU_COND_CAP">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_GENCOV.SROU_COND_CAP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.SINDSUMCLAIM">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_GENCOV.SINDSUMCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.NFRANCRATCLA">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_GENCOV.NFRANCRATCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.NFRANCFIXCLA">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_GENCOV.NFRANCFIXCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.NFRANXMINCLA">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_GENCOV.NFRANXMINCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.NFRANXMAXCLA">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_GENCOV.NFRANXMAXCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.SROUFRANCCLA">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_GENCOV.SROUFRANCCLA'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.Compare(InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="GenericCoverageForPropertyAndCasualtyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.AccountingLineOfBusinessDescription">
 <summary>
 Code of the accounting line of business.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE75'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.SolvencyMarginClassDescription">
 <summary>
 Classification code for the solvency margin.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE71'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.GenericLineOfBusinessDescription">
 <summary>
 Code of the generic line of business.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE634'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.ReinsuranceLineOfBusinessDescription">
 <summary>
 Code of the line of business for reinsurance.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5000'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.FranchiseOrDeductibleDescription">
 <summary>
 It indicates if a franchise or deductible is applied
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE33'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.FranchiseOrDeductibleIndicatorDescription">
 <summary>
 It indicates whether a franchise or deductible is applied
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE64'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualty.CodeCoverTypeDescription">
 <summary>
 Code cover type
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6804' on the table 'TABLE6804'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualtyCollection">
 <summary>
 Collection for GenericCoverageForPropertyAndCasualty class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualtyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualtyCollection.AddGenericCoverageForPropertyAndCasualty">
 <summary>
 Add an instance of class 'GenericCoverageForPropertyAndCasualty' in the GenericCoverageForPropertyAndCasualtyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualtyCollection.Compare(InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualtyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualtyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualtyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GenericCoverageForPropertyAndCasualtyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit">
 <summary>
 Table of guaranteed issue limit.
 </summary>
<remarks>Data-source is 'LEG'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.CreateNewGuaranteedIssueLimit">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit._LowestInsuredAmount">
<summary>
Lowest limit of the sum-insured range
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit._HighestInsuredAmount">
<summary>
Highest limit of the sum-insured range
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit._Amount">
<summary>
Basic table amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit._AverageAmountFactor">
<summary>
Factor of average amount of the insurance.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit._MaximumAmount">
<summary>
Maximum amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'LEG.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'LEG.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'LEG.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.LowestInsuredAmount">
<summary>
Lowest limit of the sum-insured range (NCAPITALI)..
</summary>
<remarks>Data-source is 'LEG.NCAPITALI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.HighestInsuredAmount">
<summary>
Highest limit of the sum-insured range (NCAPITALF)..
</summary>
<remarks>Data-source is 'LEG.NCAPITALF'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.Amount">
<summary>
Basic table amount. (NAMOUNTBAS)..
</summary>
<remarks>Data-source is 'LEG.NAMOUNTBAS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.AverageAmountFactor">
<summary>
Factor of average amount of the insurance. (NFACT)..
</summary>
<remarks>Data-source is 'LEG.NFACT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.MaximumAmount">
<summary>
Maximum amount. (NAMOUNTMAX)..
</summary>
<remarks>Data-source is 'LEG.NAMOUNTMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'LEG.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'LEG.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'LEG.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'LEG.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.Compare(InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="GuaranteedIssueLimitItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimit.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimitCollection">
 <summary>
 Collection for GuaranteedIssueLimit class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimitCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimitCollection.AddGuaranteedIssueLimit">
 <summary>
 Add an instance of class 'GuaranteedIssueLimit' in the GuaranteedIssueLimitCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimitCollection.Compare(InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimitCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimitCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimitCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.GuaranteedIssueLimitCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes">
 <summary>
 Illness (Health policies).
 </summary>
<remarks>Data-source is 'TAB_AM_ILL'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.CreateNewHealthPolicyIllnes">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes._Illness">
<summary>
Code of the illness.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes._Description">
<summary>
Description of the illness.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes._IllnessAcordingToWHO">
<summary>
Code of the Illness according to the World Health Organization.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.Illness">
<summary>
Code of the illness. (SILLNESS)..
</summary>
<remarks>Data-source is 'TAB_AM_ILL.SILLNESS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_AM_ILL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.Description">
<summary>
Description of the illness. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'TAB_AM_ILL.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.IllnessAcordingToWHO">
<summary>
Code of the Illness according to the World Health Organization. (SILL_OMS)..
</summary>
<remarks>Data-source is 'TAB_AM_ILL.SILL_OMS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'TAB_AM_ILL.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_AM_ILL.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.Compare(InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="HealthPolicyIllnesItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnes.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnesCollection">
 <summary>
 Collection for HealthPolicyIllnes class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnesCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnesCollection.AddHealthPolicyIllnes">
 <summary>
 Add an instance of class 'HealthPolicyIllnes' in the HealthPolicyIllnesCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnesCollection.Compare(InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnesCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnesCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnesCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.HealthPolicyIllnesCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration">
 <summary>
 Insurance period associated with the product.
 </summary>
<remarks>Data-source is 'DURINSU_PROD'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.CreateNewInsuranceProductDuration">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration._TypeOfDuration">
<summary>
Duration type (payments/insurances).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration._InsuranceDuration">
<summary>
Insurance duration expressed in years (number of years or age, in agreement with the value of the field type &#39;NTYPDURINS&#39;).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration._InsuranceMinimumDuration">
<summary>
Minimum duration of insurance
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'DURINSU_PROD.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'DURINSU_PROD.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'DURINSU_PROD.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.TypeOfDuration">
<summary>
Duration type (payments/insurances). (NTYPDURINS)..
</summary>
<remarks>Data-source is 'DURINSU_PROD.NTYPDURINS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.TypeOfDurationEnum">
<summary>
Duration type (payments/insurances).
</summary>
<remarks>This property use a enumeration based on property 'TypeOfDuration'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.TypeOfDurationEnumText">
<summary>
Duration type (payments/insurances).
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.InsuranceDuration">
<summary>
Insurance duration expressed in years (number of years or age, in agreement with the value of the field type &#39;NTYPDURINS&#39;). (NIDURAFIX)..
</summary>
<remarks>Data-source is 'DURINSU_PROD.NIDURAFIX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'DURINSU_PROD.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'DURINSU_PROD.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'DURINSU_PROD.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.InsuranceMinimumDuration">
<summary>
Minimum duration of insurance (NMINDURINS)..
</summary>
<remarks>Data-source is 'DURINSU_PROD.NMINDURINS'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.Compare(InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="InsuranceProductDurationItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InsuranceProductDuration.TypeOfDurationDescription">
 <summary>
 Duration type (payments/insurances).
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5589'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.InsuranceProductDurationCollection">
 <summary>
 Collection for InsuranceProductDuration class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InsuranceProductDurationCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InsuranceProductDurationCollection.AddInsuranceProductDuration">
 <summary>
 Add an instance of class 'InsuranceProductDuration' in the InsuranceProductDurationCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InsuranceProductDurationCollection.Compare(InMotionGIT.Product.Entity.Contracts.InsuranceProductDurationCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InsuranceProductDurationCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InsuranceProductDurationCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InsuranceProductDurationCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce">
 <summary>
 Integral Rate Commerce
 </summary>
<remarks>Data-source is 'TAR_IC'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.CreateNewIntegralRateCommerce">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce._ProductCode">
<summary>
Code of the product
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce._CoverageCode">
<summary>
Code of the coverage
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce._CommercialActivityCode">
<summary>
Commercial Activity Code
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce._GeographicZone">
<summary>
Geographic zone
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce._ConsecutiveNumber">
<summary>
Consecutive Number
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce._ComprehensiveBusinessPremiumRates">
<summary>
Comprehensive Business Premium Rates
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAR_IC.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.ProductCode">
<summary>
Code of the product (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAR_IC.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'TAR_IC.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.CoverageCode">
<summary>
Code of the coverage (NCOVER)..
</summary>
<remarks>Data-source is 'TAR_IC.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAR_IC.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.CommercialActivityCode">
<summary>
Commercial Activity Code (NCOMMER_ACTIVITY)..
</summary>
<remarks>Data-source is 'TAR_IC.NCOMMER_ACTIVITY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.GeographicZone">
<summary>
Geographic zone (NZONE)..
</summary>
<remarks>Data-source is 'TAR_IC.NZONE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.ConsecutiveNumber">
<summary>
Consecutive Number (NCONSEC)..
</summary>
<remarks>Data-source is 'TAR_IC.NCONSEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.ComprehensiveBusinessPremiumRates">
<summary>
Comprehensive Business Premium Rates (NRATE)..
</summary>
<remarks>Data-source is 'TAR_IC.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAR_IC.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAR_IC.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAR_IC.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.Compare(InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="IntegralRateCommerceItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerce.CommercialActivityCodeDescription">
 <summary>
 Commercial Activity Code
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9015'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerceCollection">
 <summary>
 Collection for IntegralRateCommerce class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerceCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerceCollection.AddIntegralRateCommerce">
 <summary>
 Add an instance of class 'IntegralRateCommerce' in the IntegralRateCommerceCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerceCollection.Compare(InMotionGIT.Product.Entity.Contracts.IntegralRateCommerceCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerceCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerceCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.IntegralRateCommerceCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification">
 <summary>
 International Standard Industrial Classification
 </summary>
<remarks>Data-source is 'TAB_CIIU'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.CreateNewInternationalStandardIndustrialClassification">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification._CIIUCode">
<summary>
CIIU Code
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification._CIIUDescription">
<summary>
CIIU Description
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification._InsurableCIIUIndicator">
<summary>
Insurable CIIU Indicator
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification._InspectCIIUIndicator">
<summary>
Inspect CIIU Indicator
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification._User">
<summary>
Code of the user creating or updating the record
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.CIIUCode">
<summary>
CIIU Code (NCIIU)..
</summary>
<remarks>Data-source is 'TAB_CIIU.NCIIU'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAB_CIIU.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.CIIUDescription">
<summary>
CIIU Description (SDESCRIPT)..
</summary>
<remarks>Data-source is 'TAB_CIIU.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.InsurableCIIUIndicator">
<summary>
Insurable CIIU Indicator (SINSURABLECIIU)..
</summary>
<remarks>Data-source is 'TAB_CIIU.SINSURABLECIIU'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.InspectCIIUIndicator">
<summary>
Inspect CIIU Indicator (SINSPECTCIIU)..
</summary>
<remarks>Data-source is 'TAB_CIIU.SINSPECTCIIU'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAB_CIIU.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_CIIU.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.User">
<summary>
Code of the user creating or updating the record (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_CIIU.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.Compare(InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="InternationalStandardIndustrialClassificationItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassification.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassificationCollection">
 <summary>
 Collection for InternationalStandardIndustrialClassification class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassificationCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassificationCollection.AddInternationalStandardIndustrialClassification">
 <summary>
 Add an instance of class 'InternationalStandardIndustrialClassification' in the InternationalStandardIndustrialClassificationCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassificationCollection.Compare(InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassificationCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassificationCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassificationCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InternationalStandardIndustrialClassificationCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct">
 <summary>
 Associated investment funds to a product.
 </summary>
<remarks>Data-source is 'FUNDS'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.CreateNewInvestmentFundRelatedToProduct">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._InvestmentFund">
<summary>
Code of the investment fund.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._SourceAccount">
<summary>
Code of the source account (Values
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._BuyingCommission">
<summary>
Percentage to charge (commission) when purchasing units.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._MinimumSharePercentage">
<summary>
Minimum percentage of share in the fund.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._PercentageShare">
<summary>
Percentage of share in the fund.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._PercentageForUnitSells">
<summary>
Percentage to charge for sale of units.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._ProjectedProfitability">
<summary>
Projected profitability
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._ProjectedHighPerformanceAdvisor">
<summary>
Projected High Performance Advisor
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._ProjectedNetReturn">
<summary>
Projected net return
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._FundisRestrictedForSaleIndicator">
<summary>
Indicates if the fund is restricted for sale.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._MinimumBalance">
<summary>
It corresponds to the minimum balance that the fund must have after the sale of units by charges
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._Guarantee">
<summary>
Indicator if it corresponds to the loan guarantee fund 1.- Affirmative 2.- Negative
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._NPARTIC_MAX">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._NAMOUNTMIN">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._NFREELOOK">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'FUNDS.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'FUNDS.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.InvestmentFund">
<summary>
Code of the investment fund. (NFUNDS)..
</summary>
<remarks>Data-source is 'FUNDS.NFUNDS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.SourceAccount">
<summary>
Code of the source account (Values (NORIGIN)..
</summary>
<remarks>Data-source is 'FUNDS.NORIGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'FUNDS.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.BuyingCommission">
<summary>
Percentage to charge (commission) when purchasing units. (NBUY_COST)..
</summary>
<remarks>Data-source is 'FUNDS.NBUY_COST'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'FUNDS.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'FUNDS.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.MinimumSharePercentage">
<summary>
Minimum percentage of share in the fund. (NPARTIC_MIN)..
</summary>
<remarks>Data-source is 'FUNDS.NPARTIC_MIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.PercentageShare">
<summary>
Percentage of share in the fund. (NPARTICIP)..
</summary>
<remarks>Data-source is 'FUNDS.NPARTICIP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.PercentageForUnitSells">
<summary>
Percentage to charge for sale of units. (NSELL_COST)..
</summary>
<remarks>Data-source is 'FUNDS.NSELL_COST'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'FUNDS.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.ProjectedProfitability">
<summary>
Projected profitability (NINTPROY)..
</summary>
<remarks>Data-source is 'FUNDS.NINTPROY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.ProjectedHighPerformanceAdvisor">
<summary>
Projected High Performance Advisor (NINTPROYVARMAX)..
</summary>
<remarks>Data-source is 'FUNDS.NINTPROYVARMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.ProjectedNetReturn">
<summary>
Projected net return (NINTPROYVARCLE)..
</summary>
<remarks>Data-source is 'FUNDS.NINTPROYVARCLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.FundisRestrictedForSaleIndicator">
<summary>
Indicates if the fund is restricted for sale. (SVIGEN)..
</summary>
<remarks>Data-source is 'FUNDS.SVIGEN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.MinimumBalance">
<summary>
It corresponds to the minimum balance that the fund must have after the sale of units by charges (NMINBALANCE)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'FUNDS.NMINBALANCE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.Guarantee">
<summary>
Indicator if it corresponds to the loan guarantee fund 1.- Affirmative 2.- Negative (SGUARANTEE)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'FUNDS.SGUARANTEE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.NPARTIC_MAX">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'FUNDS.NPARTIC_MAX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.NAMOUNTMIN">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'FUNDS.NAMOUNTMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.NFREELOOK">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'FUNDS.NFREELOOK'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.Compare(InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="InvestmentFundRelatedToProductItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProduct.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProductCollection">
 <summary>
 Collection for InvestmentFundRelatedToProduct class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProductCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProductCollection.AddInvestmentFundRelatedToProduct">
 <summary>
 Add an instance of class 'InvestmentFundRelatedToProduct' in the InvestmentFundRelatedToProductCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProductCollection.Compare(InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProductCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProductCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProductCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.InvestmentFundRelatedToProductCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge">
 <summary>
 Current account charge for life products.
 </summary>
<remarks>Data-source is 'LIFE_LOAD'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.CreateNewLifeAccountCharge">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._nBranch">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._nProduct">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._ChargeCode">
<summary>
Code of current account charge.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._dEffecDate">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._MonthPolicyCoverageBeginsDebitCredit">
<summary>
Month of the policy / coverage that begins the implementation of The Charge (Debit) or Credit
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._Description">
<summary>
Description of the charge
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._ChargeType">
<summary>
Type of charge.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._AdministrativeChargeAmount">
<summary>
Amount of administrative expenses to be charged to the insured.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._AdministrativeChargePercentage">
<summary>
Percentage of administrative expenses to be charged to the insured.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._ShortDescription">
<summary>
Short description of the charge.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._PaymentFrequency">
<summary>
Code of the payment frequency.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._Routine">
<summary>
Code of the routine to be used to calculate the cost.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._ChargeBeforeInvestmentIndicator">
<summary>
It indicates that the charge must be applied before making the investment.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._TypeOfEntry">
<summary>
Type of current account entry.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._nCover">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._nModulec">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._ProrateChargeTheFirstTime">
<summary>
It indicates if this is the first time that the charge is applied.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._HowChargeCreditIsApplied">
<summary>
Indicator of how The Charge (Debit) or Credit applied
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._TaxableCharge">
<summary>
Taxable charge indicator.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._MonthPolicyCoverageTerminatesDebitCredit">
<summary>
Month of the policy / coverage in the application terminates the charge (debit) or credit.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._ElementDebitCreditToApply">
<summary>
Element on which the definition of The Charge (Debit) or Credit.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._SourceAccount">
<summary>
Code of the source account (
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._RetroactiveChargeCreditIndicator">
<summary>
Indicates whether the The Charge (Debit) or Credit to be applied retroactively
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._CargeCreditAffectMinimumPremiumIndicator">
<summary>
Indicate whether The Charge (Debit) or Credit should affect The Amount of Minimum Premium by issuing
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._FundCodeWhichChargeCreditApplies">
<summary>
Code of The Fund in particular on which The Charge (Debir) or Credit applies.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._RecordCorrespondsSubscriptionIndicator">
<summary>
Indicator that the record corresponds to a subscription
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._Indicatorwhenchargesapply">
<summary>
Indicator when charges apply.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._TypeOfProfitability">
<summary>
Type of profitability.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._OrderProcessed">
<summary>
Order in which the charge or credit must be processed
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._AgeCalculationType">
<summary>
Possible values according to table of age types table5748
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._TypeChargeCreditProcess">
<summary>
Type of charge or credit process
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._ExemptionPay">
<summary>
Exception of payment indicator 1.- Affirmative 2.- Negative
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._IndicBenefitGuaranteedDeath">
<summary>
beneficio de fallecimiento garantizado
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._UpdateDateLastCharge">
<summary>
Indicates if PUI should update the date of the last application of the charge in the control table
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._NLOADAMO_MIN">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._NLOADAMO_MAX">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.nBranch">
<summary>
.
</summary>
<remarks>Data-source is 'LIFE_LOAD.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.nProduct">
<summary>
.
</summary>
<remarks>Data-source is 'LIFE_LOAD.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.ChargeCode">
<summary>
Code of current account charge. (NLOAD_COD)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.NLOAD_COD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.dEffecDate">
<summary>
.
</summary>
<remarks>Data-source is 'LIFE_LOAD.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.MonthPolicyCoverageBeginsDebitCredit">
<summary>
Month of the policy / coverage that begins the implementation of The Charge (Debit) or Credit (NMONTHI)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.NMONTHI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.Description">
<summary>
Description of the charge (SDESCRIPT)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.ChargeType">
<summary>
Type of charge. (NLOAD_TYPE)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.NLOAD_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.AdministrativeChargeAmount">
<summary>
Amount of administrative expenses to be charged to the insured. (NLOADAMO)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.NLOADAMO'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.AdministrativeChargePercentage">
<summary>
Percentage of administrative expenses to be charged to the insured. (NLOADRATE)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.NLOADRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.ShortDescription">
<summary>
Short description of the charge. (SSHORT_DES)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.SSHORT_DES'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.PaymentFrequency">
<summary>
Code of the payment frequency. (NPAYFREQ)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.NPAYFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.PaymentFrequencyEnum">
<summary>
Code of the payment frequency.
</summary>
<remarks>This property use a enumeration based on property 'PaymentFrequency'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.PaymentFrequencyEnumText">
<summary>
Code of the payment frequency.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.Routine">
<summary>
Code of the routine to be used to calculate the cost. (SROUTINE)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.SROUTINE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.ChargeBeforeInvestmentIndicator">
<summary>
It indicates that the charge must be applied before making the investment. (SPREINV)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.SPREINV'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.TypeOfEntry">
<summary>
Type of current account entry. (NTYPE_MOVE)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.NTYPE_MOVE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.nCover">
<summary>
.
</summary>
<remarks>Data-source is 'LIFE_LOAD.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.nModulec">
<summary>
.
</summary>
<remarks>Data-source is 'LIFE_LOAD.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.ProrateChargeTheFirstTime">
<summary>
It indicates if this is the first time that the charge is applied. (SFIRST_COST_PRO)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.SFIRST_COST_PRO'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.HowChargeCreditIsApplied">
<summary>
Indicator of how The Charge (Debit) or Credit applied (NMONTH_ADVANCED)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.NMONTH_ADVANCED'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.TaxableCharge">
<summary>
Taxable charge indicator. (STAXIN)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.STAXIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.MonthPolicyCoverageTerminatesDebitCredit">
<summary>
Month of the policy / coverage in the application terminates the charge (debit) or credit. (NMONTHE)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.NMONTHE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.ElementDebitCreditToApply">
<summary>
Element on which the definition of The Charge (Debit) or Credit. (NAPLY)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.NAPLY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.SourceAccount">
<summary>
Code of the source account ( (NORIAPLY)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.NORIAPLY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.RetroactiveChargeCreditIndicator">
<summary>
Indicates whether the The Charge (Debit) or Credit to be applied retroactively (SRETRO)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.SRETRO'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.CargeCreditAffectMinimumPremiumIndicator">
<summary>
Indicate whether The Charge (Debit) or Credit should affect The Amount of Minimum Premium by issuing (SPREMBAS)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.SPREMBAS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.FundCodeWhichChargeCreditApplies">
<summary>
Code of The Fund in particular on which The Charge (Debir) or Credit applies. (NFUNDS)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.NFUNDS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.RecordCorrespondsSubscriptionIndicator">
<summary>
Indicator that the record corresponds to a subscription (SINSTALLIND)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.SINSTALLIND'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.Indicatorwhenchargesapply">
<summary>
Indicator when charges apply. (SFIRST_APPLY)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.SFIRST_APPLY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.TypeOfProfitability">
<summary>
Type of profitability. (NINDEX_TABLE)..
</summary>
<remarks>Data-source is 'LIFE_LOAD.NINDEX_TABLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.OrderProcessed">
<summary>
Order in which the charge or credit must be processed (NORDER)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE_LOAD.NORDER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.AgeCalculationType">
<summary>
Possible values according to table of age types table5748 (NTYPEAGE)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE_LOAD.NTYPEAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.TypeChargeCreditProcess">
<summary>
Type of charge or credit process (NTYPEPROC)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE_LOAD.NTYPEPROC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.ExemptionPay">
<summary>
Exception of payment indicator 1.- Affirmative 2.- Negative (SEXEMPTPAY)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE_LOAD.SEXEMPTPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.IndicBenefitGuaranteedDeath">
<summary>
beneficio de fallecimiento garantizado (SIND_BFG)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE_LOAD.SIND_BFG'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.UpdateDateLastCharge">
<summary>
Indicates if PUI should update the date of the last application of the charge in the control table (SUPD_LASTCHARG)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE_LOAD.SUPD_LASTCHARG'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.NLOADAMO_MIN">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE_LOAD.NLOADAMO_MIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.NLOADAMO_MAX">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE_LOAD.NLOADAMO_MAX'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.Compare(InMotionGIT.Product.Entity.Contracts.LifeAccountCharge,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="LifeAccountChargeItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.ChargeTypeDescription">
 <summary>
 Type of charge.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7996'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.PaymentFrequencyDescription">
 <summary>
 Code of the payment frequency.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE36'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.TypeOfEntryDescription">
 <summary>
 Type of current account entry.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5708'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.SourceAccountDescription">
 <summary>
 Code of the source account (
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5633'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountCharge.TypeOfProfitabilityDescription">
 <summary>
 Type of profitability.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5520'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.LifeAccountChargeCollection">
 <summary>
 Collection for LifeAccountCharge class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeAccountChargeCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeAccountChargeCollection.AddLifeAccountCharge">
 <summary>
 Add an instance of class 'LifeAccountCharge' in the LifeAccountChargeCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeAccountChargeCollection.Compare(InMotionGIT.Product.Entity.Contracts.LifeAccountChargeCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeAccountChargeCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeAccountChargeCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeAccountChargeCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol">
 <summary>
 Roles permitted for a life coverage.
 </summary>
<remarks>Data-source is 'TAB_COVROL'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.CreateNewLifeCoverageRol">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._ClientRole">
<summary>
Role of the client in the policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._RoleOfCoverageOverWhichAppliesThePercentOfInsuredAmount">
<summary>
Role of the coverage on which the insured amount calculation percentage is applied
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._Required">
<summary>
Role required for the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._SelectedByDefault">
<summary>
It indicates if the role should be taken into account by default for the coverage
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._RoutineForCalculationOfPremium">
<summary>
Routine of calculation and/or validation of the premium
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._MinimumEntryAgeMales">
<summary>
Minimum entry age for this role (males).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._MaximumEntryAgeMales">
<summary>
Maximum entry age for this role (males).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._MaximumAgeInsuranceMales">
<summary>
Maximum age of insurance (Masculine).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._MinimumEntryAgeFemales">
<summary>
Minimum entry age for this role (females).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._MaximumEntryAgeFemales">
<summary>
Maximum entry age for this role (females).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._MaximumAgeInsuranceFemale">
<summary>
Maximum age of insurance (Female).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._BaseCoverageForInsuredAmount">
<summary>
Code of the coverage to which a percentage must be applied to obtain this sum insured.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._FixedInsuredAmount">
<summary>
Fixed amount of the sum insured.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._MultipleBaseForInsuredAmount">
<summary>
Base to calculate insured amount as a multiple of it.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._PercentageOnOtherCoverage">
<summary>
Limit calculation percentage, which applies on the Limit of another coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._MaximumInsuredAmount">
<summary>
Maximum sum insured amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._MinimumInsuredAmount">
<summary>
Minimum sum insured
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._BaseCoverageThatContainThePremiumOfThis">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._RoleOfBaseCoverageThatContainThePremiumOfThis">
<summary>
Client role related to the coverage that contains the premium of this coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._FixedRate">
<summary>
Fixed rate for the premium.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._NoteID">
<summary>
Note number that contains the free text related to the coverage/insured type.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._CoverageDuration">
<summary>
Coverage duration (in years).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._UnleveledPremium">
<summary>
Unleveled premium indicator.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._RenewableCoverage">
<summary>
It indicates that the coverage is renewable at the expiration date of the period in force
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._RoutineForCalculationOfInsuredAmountAtRenewal">
<summary>
Calculation routine for sum insured or limit at renewal.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._RoutineForCalculationOfPremiumAtRenewal">
<summary>
Calculation routine for premium at renewal.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._DurationOfPayments">
<summary>
Number of Years/age for the time limit of payments.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._IndexedCoverage">
<summary>
Indicator of indexed coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._RoutineForCalculationOfInsuredAmount">
<summary>
Calculation routine for sum insured or limit.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._FixedAmountOfFranchiseOrDeductible">
<summary>
Fixed franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._FranchiseOrDeductible">
<summary>
It indicates if a franchise or deductible is applied
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._MaximumAmountOfFranchiseOrDeductible">
<summary>
Maximum franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._MinimumAmountOfFranchiseOrDeductible">
<summary>
Minimum franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._FranchiseOrDeductiblePercentage">
<summary>
Percentage of franchise/deductible to be applied.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._RoutineForFranchiseOrDeductible">
<summary>
Calculation routine for franchise/deductible.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._FranchiseOrDeductibleIndicator">
<summary>
It indicates whether a franchise or deductible is applied
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._FranchiseOrDeductibleRequired">
<summary>
The franchise/deductible is required.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._PossibleChangesToFranchiseOrDeductible">
<summary>
Type of changes allowed on the franchise/deductible
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._SecurityLevelForUpdatingFranchiseOrDeductible">
<summary>
Level of the user (update or query) for franchise/deductible.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._MaximumPercentageOfIncreaseForFranchiseOrDeductible">
<summary>
Allowed maximum percentage of increase of the franchise/deductible.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._MaximumPercentageOfDecreaseForFranchiseOrDeductible">
<summary>
Allowed maximum percentage of decrease of the franchise/deductible.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._PercentageToApply">
<summary>
Percentage of limit on another coverage to control the maximum permitted.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._BaseCoverageForMaximumInsuredAmountAllowed">
<summary>
Coverage code to apply the percentage to obtain the maximum insured amount permitted.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._Routine">
<summary>
Calculation routine of the cost coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._FixedRateCostCoverage">
<summary>
Fixed rate of the cost coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._FixedCost">
<summary>
Premium of the coverage when it is a fixed amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._BaseAmountForCostOfCoverage">
<summary>
Amount on which the cost of the coverage is calculated.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._SecurityLevelForUpdatingPremium">
<summary>
Security level needed for the user to update the premium.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._SecurityLevelForUpdatingInsuredAmount">
<summary>
Security level needed for the user to update the sum insured
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._MaximumPercentageOfIncreaseOfInsuredAmount">
<summary>
Allowed maximum percentage of increase of the sum insured.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._MaximumPercentageOfDecreaseOfInsuredAmount">
<summary>
Allowed maximum percentage of decrease of the sum insured.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._TypeOfChangesAllowedOnInsuredAmount">
<summary>
Type of changes allowed on the sum insured (limit).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._PercentageOfIncreasePermittedForPremium">
<summary>
Increase percentage permitted for premium.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._MaximumPercentageOfDecreaseOfPremium">
<summary>
Maximum percentage permitted of decrease of the premium.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._TypeOfChangesAllowedOnPremium">
<summary>
Type of changes allowed on the premium
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._RoutineForDurationOfPayments">
<summary>
Calculation routine of the coverage payment duration.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._TypeOfDurationOfPayments">
<summary>
Type of duration for the payments.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._TypeOfEliminationPeriod">
<summary>
Type of Elimination Period.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._TypeOfInsuranceDuration">
<summary>
Type of duration for the insurance.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._EliminationPeriod">
<summary>
Number of days, months, hours of the elimination period.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._sClAccidi">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._sClDeathi">
<summary>
FIELD DELETED FROM THE SYSTEM
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._sClIncapi">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._Fielddeletedfromthesystemn">
<summary>
Field deleted from the system
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._ClVehAci">
<summary>
FIELD DELETED FROM THE SYSTEM
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._sCliIllness">
<summary>
FIELD DELETED FROM THE SYSTEM
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._InsuredAmountCalculationType">
<summary>
Insured amount (limit) calculation type.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._FIELDDELETEDFROMTHESYSTEM">
<summary>
FIELD DELETED FROM THE SYSTEM
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._BaseRoleForCalculation">
<summary>
Role on which the percentage is applied to obtain the maximum permitted.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._MaximumNumber">
<summary>
Maximum number of clients with the same role.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._MaximumAnnuity">
<summary>
Maximum amount of the annuity.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._FixedPremium">
<summary>
Amount of fixed premium or amount to be added to the premium.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._SpecialLifeCoverage">
<summary>
Coverage related to Special Life products coverage, for the commission payment.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._RoleOfCoverageRelatedToSpecialLife">
<summary>
Role of the coverage related to Special Life products coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._MaximumPremium">
<summary>
Annual maximum premium of the coverage/role.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._GuaranteendUnderwritingLimit">
<summary>
It indicates if Guaranteed Underwriting Limit applies for the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._NUNITM">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._NUNITF">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._LogicRateTableId">
<summary>
Code of the rate logic table
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._NQMONTH_VIG">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._NQBETWEENMOD">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._NQMAX_MOD">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._MinimumPremium">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._NTYP_AGEMINM">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._NTYP_AGEMINF">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._SROU_COND_CAP">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._NPERCCOSTFP">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._NRECCOSTFP">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._NTYPEAGE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._SROURATE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._MinimumAmountCapitalDecrease">
<summary>
Minimum amount of capital decrease.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._MinimumAmountCapitalIncrease">
<summary>
Monto mínimo de aumento de capital.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._DaysDurationProvisionalCoverage">
<summary>
Duration in days of provisional coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._MaximoCapitalCoberturaProvisoria">
<summary>
Maximum capital provisional coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._ProvisionalCoverage">
<summary>
Indicator that coverage applies for Provisional Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._AllowsExcessPremiumRefund">
<summary>
Excess Premium return indicator.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._IndexType">
<summary>
Index type
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._CodeFrecuencyCapital">
<summary>
Code of frequency of capital
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._QuantityOfFrequenciesOfCapital">
<summary>
Quantity of frequencies of capital
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._AmountCapitalPerFrequency">
<summary>
Amount of capital per frequency
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._IncomesByPolicy">
<summary>
Maximum number of incomes by policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._IncomesByEvent">
<summary>
Maximum number of incomes by event.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._UnemploymentRoutine">
<summary>
Name of the Unemployment Routine.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._LitigationRoutine">
<summary>
Name of Litigation routine.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._CoinsurancePercentage">
<summary>
Percentage of coinsurance to apply.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._CoinsuranceAmount">
<summary>
Coinsurance Fix amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._CoinsuranceMaximumAmount">
<summary>
Coinsurance maximum amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._CoinsuranceMinimumAmount">
<summary>
Coinsurance minimum amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._CoinsuranceApplication">
<summary>
Coinsurance Flag application.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._SFDREHABREST">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._SCOROUTINE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._SCOREQUIRE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._SCOCHTYP">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._NCOUSERLEV">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._NCORATEADD">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._NCORATESUB">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._NORDERAPL">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._NFDCURRENCY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._NCOACURRENCY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._SAUTOMREP">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._TypeOfWaitPeriod">
<summary>
Type of waiting Period
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._TypePreexistenceWarningType">
<summary>
Type of preexistence warning
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._DurationOfWaitPeriod">
<summary>
Number of days, months, hours of the waiting period
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._PreexstenceWarningPeriod">
<summary>
Number of days, months, hours of period for preexistence warnings
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.ClientRole">
<summary>
Role of the client in the policy. (NROLE)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.ClientRoleEnum">
<summary>
Role of the client in the policy.
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.ClientRoleEnumText">
<summary>
Role of the client in the policy.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAB_COVROL.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.RoleOfCoverageOverWhichAppliesThePercentOfInsuredAmount">
<summary>
Role of the coverage on which the insured amount calculation percentage is applied (NROLCAP)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NROLCAP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.RoleOfCoverageOverWhichAppliesThePercentOfInsuredAmountEnum">
<summary>
Role of the coverage on which the insured amount calculation percentage is applied
</summary>
<remarks>This property use a enumeration based on property 'RoleOfCoverageOverWhichAppliesThePercentOfInsuredAmount'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.RoleOfCoverageOverWhichAppliesThePercentOfInsuredAmountEnumText">
<summary>
Role of the coverage on which the insured amount calculation percentage is applied
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.Required">
<summary>
Role required for the coverage. (SREQUIRED)..
</summary>
<remarks>Data-source is 'TAB_COVROL.SREQUIRED'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.SelectedByDefault">
<summary>
It indicates if the role should be taken into account by default for the coverage (SDEFAULTI)..
</summary>
<remarks>Data-source is 'TAB_COVROL.SDEFAULTI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.RoutineForCalculationOfPremium">
<summary>
Routine of calculation and/or validation of the premium (SROUPREMI)..
</summary>
<remarks>Data-source is 'TAB_COVROL.SROUPREMI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.MinimumEntryAgeMales">
<summary>
Minimum entry age for this role (males). (NAGEMININSM)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NAGEMININSM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.MaximumEntryAgeMales">
<summary>
Maximum entry age for this role (males). (NAGEMAXINSM)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NAGEMAXINSM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.MaximumAgeInsuranceMales">
<summary>
Maximum age of insurance (Masculine). (NAGEMAXPERM)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NAGEMAXPERM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.MinimumEntryAgeFemales">
<summary>
Minimum entry age for this role (females). (NAGEMININSF)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NAGEMININSF'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.MaximumEntryAgeFemales">
<summary>
Maximum entry age for this role (females). (NAGEMAXINSF)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NAGEMAXINSF'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.MaximumAgeInsuranceFemale">
<summary>
Maximum age of insurance (Female). (NAGEMAXPERF)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NAGEMAXPERF'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAB_COVROL.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_COVROL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.BaseCoverageForInsuredAmount">
<summary>
Code of the coverage to which a percentage must be applied to obtain this sum insured. (NCACALCOV)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NCACALCOV'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.FixedInsuredAmount">
<summary>
Fixed amount of the sum insured. (NCACALFIX)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NCACALFIX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.MultipleBaseForInsuredAmount">
<summary>
Base to calculate insured amount as a multiple of it. (NCACALMUL)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NCACALMUL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.PercentageOnOtherCoverage">
<summary>
Limit calculation percentage, which applies on the Limit of another coverage. (NCAPBASPE)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NCAPBASPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.MaximumInsuredAmount">
<summary>
Maximum sum insured amount. (NCAPMAXIM)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NCAPMAXIM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.MinimumInsuredAmount">
<summary>
Minimum sum insured (NCAPMINIM)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NCAPMINIM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.BaseCoverageThatContainThePremiumOfThis">
<summary>
 (NCOVER_IN)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NCOVER_IN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.RoleOfBaseCoverageThatContainThePremiumOfThis">
<summary>
Client role related to the coverage that contains the premium of this coverage. (NROLPREM)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NROLPREM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.RoleOfBaseCoverageThatContainThePremiumOfThisEnum">
<summary>
Client role related to the coverage that contains the premium of this coverage.
</summary>
<remarks>This property use a enumeration based on property 'RoleOfBaseCoverageThatContainThePremiumOfThis'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.RoleOfBaseCoverageThatContainThePremiumOfThisEnumText">
<summary>
Client role related to the coverage that contains the premium of this coverage.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.FixedRate">
<summary>
Fixed rate for the premium. (NPREMIRAT)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NPREMIRAT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.NoteID">
<summary>
Note number that contains the free text related to the coverage/insured type. (NNOTENUM)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.CoverageDuration">
<summary>
Coverage duration (in years). (NDURATIND)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NDURATIND'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.UnleveledPremium">
<summary>
Unleveled premium indicator. (SRECHAPRI)..
</summary>
<remarks>Data-source is 'TAB_COVROL.SRECHAPRI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.RenewableCoverage">
<summary>
It indicates that the coverage is renewable at the expiration date of the period in force (SRENEWALI)..
</summary>
<remarks>Data-source is 'TAB_COVROL.SRENEWALI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.RoutineForCalculationOfInsuredAmountAtRenewal">
<summary>
Calculation routine for sum insured or limit at renewal. (SROUCHACA)..
</summary>
<remarks>Data-source is 'TAB_COVROL.SROUCHACA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.RoutineForCalculationOfPremiumAtRenewal">
<summary>
Calculation routine for premium at renewal. (SROUCHAPR)..
</summary>
<remarks>Data-source is 'TAB_COVROL.SROUCHAPR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.DurationOfPayments">
<summary>
Number of Years/age for the time limit of payments. (NDURATPAY)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NDURATPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.IndexedCoverage">
<summary>
Indicator of indexed coverage. (SREVINDEX)..
</summary>
<remarks>Data-source is 'TAB_COVROL.SREVINDEX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.RoutineForCalculationOfInsuredAmount">
<summary>
Calculation routine for sum insured or limit. (SROUPRCAL)..
</summary>
<remarks>Data-source is 'TAB_COVROL.SROUPRCAL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.FixedAmountOfFranchiseOrDeductible">
<summary>
Fixed franchise or deductible amount. (NFRANCFIX)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NFRANCFIX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.FranchiseOrDeductible">
<summary>
It indicates if a franchise or deductible is applied (SFRANCAPL)..
</summary>
<remarks>Data-source is 'TAB_COVROL.SFRANCAPL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.MaximumAmountOfFranchiseOrDeductible">
<summary>
Maximum franchise or deductible amount. (NFRANCMAX)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NFRANCMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.MinimumAmountOfFranchiseOrDeductible">
<summary>
Minimum franchise or deductible amount. (NFRANCMIN)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NFRANCMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.FranchiseOrDeductiblePercentage">
<summary>
Percentage of franchise/deductible to be applied. (NFRANCRAT)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NFRANCRAT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.RoutineForFranchiseOrDeductible">
<summary>
Calculation routine for franchise/deductible. (SROUFRANC)..
</summary>
<remarks>Data-source is 'TAB_COVROL.SROUFRANC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.FranchiseOrDeductibleIndicator">
<summary>
It indicates whether a franchise or deductible is applied (SFRANTYPE)..
</summary>
<remarks>Data-source is 'TAB_COVROL.SFRANTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.FranchiseOrDeductibleRequired">
<summary>
The franchise/deductible is required. (SFDREQUIRE)..
</summary>
<remarks>Data-source is 'TAB_COVROL.SFDREQUIRE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.PossibleChangesToFranchiseOrDeductible">
<summary>
Type of changes allowed on the franchise/deductible (SFDCHANTYP)..
</summary>
<remarks>Data-source is 'TAB_COVROL.SFDCHANTYP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.SecurityLevelForUpdatingFranchiseOrDeductible">
<summary>
Level of the user (update or query) for franchise/deductible. (NFDUSERLEV)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NFDUSERLEV'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.MaximumPercentageOfIncreaseForFranchiseOrDeductible">
<summary>
Allowed maximum percentage of increase of the franchise/deductible. (NFDRATEADD)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NFDRATEADD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.MaximumPercentageOfDecreaseForFranchiseOrDeductible">
<summary>
Allowed maximum percentage of decrease of the franchise/deductible. (NFDRATESUB)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NFDRATESUB'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.PercentageToApply">
<summary>
Percentage of limit on another coverage to control the maximum permitted. (NCAMAXPER)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NCAMAXPER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.BaseCoverageForMaximumInsuredAmountAllowed">
<summary>
Coverage code to apply the percentage to obtain the maximum insured amount permitted. (NCAMAXCOV)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NCAMAXCOV'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.Routine">
<summary>
Calculation routine of the cost coverage. (SROUTINECC)..
</summary>
<remarks>Data-source is 'TAB_COVROL.SROUTINECC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.FixedRateCostCoverage">
<summary>
Fixed rate of the cost coverage. (NRATECC)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NRATECC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.FixedCost">
<summary>
Premium of the coverage when it is a fixed amount. (NAMOUNTCC)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NAMOUNTCC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.BaseAmountForCostOfCoverage">
<summary>
Amount on which the cost of the coverage is calculated. (SAPPLYCC)..
</summary>
<remarks>Data-source is 'TAB_COVROL.SAPPLYCC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.SecurityLevelForUpdatingPremium">
<summary>
Security level needed for the user to update the premium. (NCHPRELEV)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NCHPRELEV'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.SecurityLevelForUpdatingInsuredAmount">
<summary>
Security level needed for the user to update the sum insured (NCHCAPLEV)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NCHCAPLEV'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.MaximumPercentageOfIncreaseOfInsuredAmount">
<summary>
Allowed maximum percentage of increase of the sum insured. (NRATECAPADD)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NRATECAPADD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.MaximumPercentageOfDecreaseOfInsuredAmount">
<summary>
Allowed maximum percentage of decrease of the sum insured. (NRATECAPSUB)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NRATECAPSUB'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.TypeOfChangesAllowedOnInsuredAmount">
<summary>
Type of changes allowed on the sum insured (limit). (SCHTYPCAP)..
</summary>
<remarks>Data-source is 'TAB_COVROL.SCHTYPCAP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.PercentageOfIncreasePermittedForPremium">
<summary>
Increase percentage permitted for premium. (NRATEPREADD)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NRATEPREADD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.MaximumPercentageOfDecreaseOfPremium">
<summary>
Maximum percentage permitted of decrease of the premium. (NRATEPRESUB)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NRATEPRESUB'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.TypeOfChangesAllowedOnPremium">
<summary>
Type of changes allowed on the premium (SCHANGETYP)..
</summary>
<remarks>Data-source is 'TAB_COVROL.SCHANGETYP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'TAB_COVROL.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.RoutineForDurationOfPayments">
<summary>
Calculation routine of the coverage payment duration. (SROUT_PAY)..
</summary>
<remarks>Data-source is 'TAB_COVROL.SROUT_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.TypeOfDurationOfPayments">
<summary>
Type of duration for the payments. (NTYPDURPAY)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NTYPDURPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.TypeOfDurationOfPaymentsEnum">
<summary>
Type of duration for the payments.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfDurationOfPayments'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.TypeOfDurationOfPaymentsEnumText">
<summary>
Type of duration for the payments.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.TypeOfEliminationPeriod">
<summary>
Type of Elimination Period. (SCAREN_TYPE)..
</summary>
<remarks>Data-source is 'TAB_COVROL.SCAREN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.TypeOfInsuranceDuration">
<summary>
Type of duration for the insurance. (NTYPDURINS)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NTYPDURINS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.TypeOfInsuranceDurationEnum">
<summary>
Type of duration for the insurance.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfInsuranceDuration'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.TypeOfInsuranceDurationEnumText">
<summary>
Type of duration for the insurance.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.EliminationPeriod">
<summary>
Number of days, months, hours of the elimination period. (NCAREN_QUAN)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NCAREN_QUAN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.sClAccidi">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_COVROL.SCLACCIDI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.sClDeathi">
<summary>
FIELD DELETED FROM THE SYSTEM.
</summary>
<remarks>Data-source is 'TAB_COVROL.SCLDEATHI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.sClIncapi">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_COVROL.SCLINCAPI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.Fielddeletedfromthesystemn">
<summary>
Field deleted from the system (SCLINVALI)..
</summary>
<remarks>Data-source is 'TAB_COVROL.SCLINVALI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.ClVehAci">
<summary>
FIELD DELETED FROM THE SYSTEM (SCLVEHACI)..
</summary>
<remarks>Data-source is 'TAB_COVROL.SCLVEHACI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.sCliIllness">
<summary>
FIELD DELETED FROM THE SYSTEM.
</summary>
<remarks>Data-source is 'TAB_COVROL.SCLIILLNESS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.InsuredAmountCalculationType">
<summary>
Insured amount (limit) calculation type. (SCACALTYP)..
</summary>
<remarks>Data-source is 'TAB_COVROL.SCACALTYP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.FIELDDELETEDFROMTHESYSTEM">
<summary>
FIELD DELETED FROM THE SYSTEM (SCLSURVII)..
</summary>
<remarks>Data-source is 'TAB_COVROL.SCLSURVII'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.BaseRoleForCalculation">
<summary>
Role on which the percentage is applied to obtain the maximum permitted. (NCAMAXROL)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NCAMAXROL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.BaseRoleForCalculationEnum">
<summary>
Role on which the percentage is applied to obtain the maximum permitted.
</summary>
<remarks>This property use a enumeration based on property 'BaseRoleForCalculation'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.BaseRoleForCalculationEnumText">
<summary>
Role on which the percentage is applied to obtain the maximum permitted.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.MaximumNumber">
<summary>
Maximum number of clients with the same role. (NMAX_ROLE)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NMAX_ROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.MaximumAnnuity">
<summary>
Maximum amount of the annuity. (NMAXRENT)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NMAXRENT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.FixedPremium">
<summary>
Amount of fixed premium or amount to be added to the premium. (NPREMIFIX)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NPREMIFIX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.SpecialLifeCoverage">
<summary>
Coverage related to Special Life products coverage, for the commission payment. (NCOVACTIV_REL)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NCOVACTIV_REL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.RoleOfCoverageRelatedToSpecialLife">
<summary>
Role of the coverage related to Special Life products coverage. (NROLACTIV_REL)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NROLACTIV_REL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.RoleOfCoverageRelatedToSpecialLifeEnum">
<summary>
Role of the coverage related to Special Life products coverage.
</summary>
<remarks>This property use a enumeration based on property 'RoleOfCoverageRelatedToSpecialLife'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.RoleOfCoverageRelatedToSpecialLifeEnumText">
<summary>
Role of the coverage related to Special Life products coverage.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.MaximumPremium">
<summary>
Annual maximum premium of the coverage/role. (NPREMIMAX)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NPREMIMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.GuaranteendUnderwritingLimit">
<summary>
It indicates if Guaranteed Underwriting Limit applies for the coverage. (SLEG)..
</summary>
<remarks>Data-source is 'TAB_COVROL.SLEG'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.NUNITM">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_COVROL.NUNITM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.NUNITF">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_COVROL.NUNITF'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.LogicRateTableId">
<summary>
Code of the rate logic table (NID_TABLE)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NID_TABLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.NQMONTH_VIG">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_COVROL.NQMONTH_VIG'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.NQBETWEENMOD">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_COVROL.NQBETWEENMOD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.NQMAX_MOD">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_COVROL.NQMAX_MOD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.MinimumPremium">
<summary>
 (NPREMIMIN)..
</summary>
<remarks>Data-source is 'TAB_COVROL.NPREMIMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.NTYP_AGEMINM">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_COVROL.NTYP_AGEMINM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.NTYP_AGEMINMEnum">
<summary>

</summary>
<remarks>This property use a enumeration based on property 'NTYP_AGEMINM'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.NTYP_AGEMINMEnumText">
<summary>

</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.NTYP_AGEMINF">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_COVROL.NTYP_AGEMINF'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.NTYP_AGEMINFEnum">
<summary>

</summary>
<remarks>This property use a enumeration based on property 'NTYP_AGEMINF'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.NTYP_AGEMINFEnumText">
<summary>

</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.SROU_COND_CAP">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_COVROL.SROU_COND_CAP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.NPERCCOSTFP">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_COVROL.NPERCCOSTFP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.NRECCOSTFP">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_COVROL.NRECCOSTFP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.NTYPEAGE">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_COVROL.NTYPEAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.SROURATE">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_COVROL.SROURATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.MinimumAmountCapitalDecrease">
<summary>
Minimum amount of capital decrease. (NAMOUNTMIN_DECAP)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.NAMOUNTMIN_DECAP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.MinimumAmountCapitalIncrease">
<summary>
Monto mínimo de aumento de capital. (NAMOUNTMIN_INCAP)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.NAMOUNTMIN_INCAP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.DaysDurationProvisionalCoverage">
<summary>
Duration in days of provisional coverage. (NDURDAY)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.NDURDAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.MaximoCapitalCoberturaProvisoria">
<summary>
Maximum capital provisional coverage. (NMAXCAP_PROVCOV)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.NMAXCAP_PROVCOV'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.ProvisionalCoverage">
<summary>
Indicator that coverage applies for Provisional Coverage. (SPROVCOV)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.SPROVCOV'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.AllowsExcessPremiumRefund">
<summary>
Excess Premium return indicator. (SDEVPRIMEXCESS)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.SDEVPRIMEXCESS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.IndexType">
<summary>
Index type (NREVALTYPE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.NREVALTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.CodeFrecuencyCapital">
<summary>
Code of frequency of capital (NPAYFREQ)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.NPAYFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.CodeFrecuencyCapitalEnum">
<summary>
Code of frequency of capital
</summary>
<remarks>This property use a enumeration based on property 'CodeFrecuencyCapital'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.CodeFrecuencyCapitalEnumText">
<summary>
Code of frequency of capital
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.QuantityOfFrequenciesOfCapital">
<summary>
Quantity of frequencies of capital (NCAPFREQQUAN)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.NCAPFREQQUAN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.AmountCapitalPerFrequency">
<summary>
Amount of capital per frequency (NCAPFREQAMOUNT)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.NCAPFREQAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.IncomesByPolicy">
<summary>
Maximum number of incomes by policy. (NMAXPOLINC)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.NMAXPOLINC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.IncomesByEvent">
<summary>
Maximum number of incomes by event. (NMAXEVEINC)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.NMAXEVEINC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.UnemploymentRoutine">
<summary>
Name of the Unemployment Routine. (SROUUNEMPLOY)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.SROUUNEMPLOY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.LitigationRoutine">
<summary>
Name of Litigation routine. (SROULITIG)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.SROULITIG'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.CoinsurancePercentage">
<summary>
Percentage of coinsurance to apply. (NCOAPPLYPERC)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.NCOAPPLYPERC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.CoinsuranceAmount">
<summary>
Coinsurance Fix amount. (NCOFIXAMOUNT)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.NCOFIXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.CoinsuranceMaximumAmount">
<summary>
Coinsurance maximum amount. (NCOMAXAMOUNT)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.NCOMAXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.CoinsuranceMinimumAmount">
<summary>
Coinsurance minimum amount. (NCOMINAMOUNT)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.NCOMINAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.CoinsuranceApplication">
<summary>
Coinsurance Flag application. (SCOCAPL)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.SCOCAPL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.SFDREHABREST">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.SFDREHABREST'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.SCOROUTINE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.SCOROUTINE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.SCOREQUIRE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.SCOREQUIRE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.SCOCHTYP">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.SCOCHTYP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.NCOUSERLEV">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.NCOUSERLEV'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.NCORATEADD">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.NCORATEADD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.NCORATESUB">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.NCORATESUB'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.NORDERAPL">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.NORDERAPL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.NFDCURRENCY">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.NFDCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.NCOACURRENCY">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.NCOACURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.SAUTOMREP">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.SAUTOMREP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.TypeOfWaitPeriod">
<summary>
Type of waiting Period (SWAIT_TYPE)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.SWAIT_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.TypePreexistenceWarningType">
<summary>
Type of preexistence warning (SWARN_TYPE)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.SWARN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.DurationOfWaitPeriod">
<summary>
Number of days, months, hours of the waiting period (NWAIT_QUAN)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.NWAIT_QUAN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.PreexstenceWarningPeriod">
<summary>
Number of days, months, hours of period for preexistence warnings (NWARN_QUAN)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_COVROL.NWARN_QUAN'.</remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.Compare(InMotionGIT.Product.Entity.Contracts.LifeCoverageRol,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="LifeCoverageRolItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.ClientRoleDescription">
 <summary>
 Role of the client in the policy.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE12'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.RoleOfCoverageOverWhichAppliesThePercentOfInsuredAmountDescription">
 <summary>
 Role of the coverage on which the insured amount calculation percentage is applied
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE12'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.RoleOfBaseCoverageThatContainThePremiumOfThisDescription">
 <summary>
 Client role related to the coverage that contains the premium of this coverage.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE12'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.FranchiseOrDeductibleDescription">
 <summary>
 It indicates if a franchise or deductible is applied
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE33'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.FranchiseOrDeductibleIndicatorDescription">
 <summary>
 It indicates whether a franchise or deductible is applied
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE64'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.TypeOfDurationOfPaymentsDescription">
 <summary>
 Type of duration for the payments.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5589'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.TypeOfEliminationPeriodDescription">
 <summary>
 Type of Elimination Period.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE52'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.TypeOfInsuranceDurationDescription">
 <summary>
 Type of duration for the insurance.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5589'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.BaseRoleForCalculationDescription">
 <summary>
 Role on which the percentage is applied to obtain the maximum permitted.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE12'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.RoleOfCoverageRelatedToSpecialLifeDescription">
 <summary>
 Role of the coverage related to Special Life products coverage.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE12'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.LogicRateTableIdDescription">
 <summary>
 Code of the rate logic table
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5800'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.IndexTypeDescription">
 <summary>
 Index type
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6714' on the table 'TABLE6714'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.CodeFrecuencyCapitalDescription">
 <summary>
 Code of frequency of capital
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE36'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.TypeOfWaitPeriodDescription">
 <summary>
 Type of waiting Period
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE52'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRol.TypePreexistenceWarningTypeDescription">
 <summary>
 Type of preexistence warning
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE52'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.LifeCoverageRolCollection">
 <summary>
 Collection for LifeCoverageRol class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeCoverageRolCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeCoverageRolCollection.AddLifeCoverageRol">
 <summary>
 Add an instance of class 'LifeCoverageRol' in the LifeCoverageRolCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeCoverageRolCollection.Compare(InMotionGIT.Product.Entity.Contracts.LifeCoverageRolCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeCoverageRolCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeCoverageRolCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeCoverageRolCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage">
 <summary>
 Table of generic coverages of life line of business.
 </summary>
<remarks>Data-source is 'TAB_LIFCOV'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.CreateNewLifeGenericCoverage">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._GenericCoverage">
<summary>
Code of the generic coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._MaximumRenewalAge">
<summary>
Age of the insured up to which the coverage is renewed.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._SolvencyMarginClass">
<summary>
Classification code for the solvency margin.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._AccountingLineOfBusiness">
<summary>
Code of the accounting line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._GenericLineOfBusiness">
<summary>
Code of the generic line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._ReinsuranceLineOfBusiness">
<summary>
Code of the line of business for reinsurance.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._Amount">
<summary>
Fixed amount of the sum insured.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._FreeInsuredAmount">
<summary>
The sum insured will be entered by the user at the moment of issuing the policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._InsuredAmountAsFunctionOfPremium">
<summary>
The insured amount may be calculated as a function of the premium.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._CalculationRoutineForAccidentalClaimReserve">
<summary>
Calculation routine for accidental claim reserve (double indemnity)
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._CalculationRoutineForDeathClaimReserve">
<summary>
Calculation routine for death claim reserve
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._CalculationRoutineForDisablementClaimReserve">
<summary>
Calculation routine for disablement claim reserve
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._CalculationRoutineForDisabilityClaimReserve">
<summary>
Calculation routine for disability claim reserve
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._CalculationRoutineForSurvivalClaimReserve">
<summary>
Calculation routine for survival claim reserve
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._CalculationRoutineForRoadTrafficDamageReserve">
<summary>
Calculation routine for road traffic damage reserve (triple indemnity)
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._EnabledCoverage">
<summary>
Indicator of utilization permitted for the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._Description">
<summary>
Description of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._InsuranceDurationBasedOnAttainedAge">
<summary>
Insurance duration based on the Age Attained by the Insured.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._InsuranceDurationBasedOnNumberOfYears">
<summary>
Insurance duration based on the number of years.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._InsuranceDurationOpen">
<summary>
Indicator for &#34;open&#34; insurance period.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._InsuranceOrSaving">
<summary>
Insurance or saving indicator.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._Coverage">
<summary>
Code of the coverage that contains the premium of this coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._RatePerThousand">
<summary>
Rate per thousands (o/oo) of calculation of the premium of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._DurationOfPaymentsAsAttainedAge">
<summary>
Duration of payments expressed on the age attained by the insured.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._CoverageDuration">
<summary>
Duration of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._DurationOfPayments">
<summary>
Payments duration of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._IndexedCoverage">
<summary>
Indicator of indexed coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._DurationOfPaymentsOpen">
<summary>
Indicator for &#34;open&#34; premium payment period.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._DurationOfPaymentsAsNumberOfYears">
<summary>
Premium payments duration based on the number of years.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._PremiumCalculationAsAFunctionOfTheInsuredAmount">
<summary>
The premium may be calculated as a function of the sum insured.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._UnleveledPremium">
<summary>
Unleveled premium indicator.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._RenewableCoverage">
<summary>
Renewable coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._RoutineForCalculationOfInsuredAmountAtRenewal">
<summary>
Calculation routine for sum insured or limit at renewal.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._RoutineForCalculationOfPremiumAtRenewal">
<summary>
Calculation routine for premium at renewal.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._RoutineForCalculationOfPremium">
<summary>
Calculation routine of premium.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._RoutineForClaimReserve">
<summary>
Routine of calculation and/or validation of the claim reserve.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._RoutineForSurrenderValue">
<summary>
Calculation routine for surrender value.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._ShortDescription">
<summary>
Short description of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._SCLILLNESS">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._Approval">
<summary>
Official approval number by the Insurances Authority.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._InformToVendor">
<summary>
Indicator of &#34;Inform to vendor&#34;.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._Vendor">
<summary>
Client code that identifies the vendor/supplier.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._ClaimType">
<summary>
Code of the type of claim for Life.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._CoverageDescript">
<summary>
Coverage description regulation 2180
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage._NCODCUMUL">
<summary>

</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.GenericCoverage">
<summary>
Code of the generic coverage. (NCOVERGEN)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.NCOVERGEN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.MaximumRenewalAge">
<summary>
Age of the insured up to which the coverage is renewed. (NAGEMAXI)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.NAGEMAXI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.SolvencyMarginClass">
<summary>
Classification code for the solvency margin. (NBRANCH_EST)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.NBRANCH_EST'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.AccountingLineOfBusiness">
<summary>
Code of the accounting line of business. (NBRANCH_LED)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.NBRANCH_LED'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.GenericLineOfBusiness">
<summary>
Code of the generic line of business. (NBRANCH_GEN)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.NBRANCH_GEN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.ReinsuranceLineOfBusiness">
<summary>
Code of the line of business for reinsurance. (NBRANCH_REI)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.NBRANCH_REI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.Amount">
<summary>
Fixed amount of the sum insured. (NCACALFIX)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.NCACALFIX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.FreeInsuredAmount">
<summary>
The sum insured will be entered by the user at the moment of issuing the policy. (SCACALFRI)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SCACALFRI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.InsuredAmountAsFunctionOfPremium">
<summary>
The insured amount may be calculated as a function of the premium. (SCAPIPREM)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SCAPIPREM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.CalculationRoutineForAccidentalClaimReserve">
<summary>
Calculation routine for accidental claim reserve (double indemnity) (SCLACCIDI)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SCLACCIDI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.CalculationRoutineForDeathClaimReserve">
<summary>
Calculation routine for death claim reserve (SCLDEATHI)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SCLDEATHI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.CalculationRoutineForDisablementClaimReserve">
<summary>
Calculation routine for disablement claim reserve (SCLINCAPI)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SCLINCAPI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.CalculationRoutineForDisabilityClaimReserve">
<summary>
Calculation routine for disability claim reserve (SCLINVALI)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SCLINVALI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.CalculationRoutineForSurvivalClaimReserve">
<summary>
Calculation routine for survival claim reserve (SCLSURVII)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SCLSURVII'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.CalculationRoutineForRoadTrafficDamageReserve">
<summary>
Calculation routine for road traffic damage reserve (triple indemnity) (SCLVEHACI)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SCLVEHACI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.EnabledCoverage">
<summary>
Indicator of utilization permitted for the coverage. (SCOVERUSE)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SCOVERUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.EnabledCoverageEnum">
<summary>
Indicator of utilization permitted for the coverage.
</summary>
<remarks>This property use a enumeration based on property 'EnabledCoverage'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.EnabledCoverageEnumText">
<summary>
Indicator of utilization permitted for the coverage.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.Description">
<summary>
Description of the coverage. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.InsuranceDurationBasedOnAttainedAge">
<summary>
Insurance duration based on the Age Attained by the Insured. (SIDURAAGE)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SIDURAAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.InsuranceDurationBasedOnNumberOfYears">
<summary>
Insurance duration based on the number of years. (SIDURAYEAR)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SIDURAYEAR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.InsuranceDurationOpen">
<summary>
Indicator for &#34;open&#34; insurance period. (SIDUROPEI)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SIDUROPEI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.InsuranceOrSaving">
<summary>
Insurance or saving indicator. (SINSURINI)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SINSURINI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.Coverage">
<summary>
Code of the coverage that contains the premium of this coverage. (NCOVER_IN)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.NCOVER_IN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.RatePerThousand">
<summary>
Rate per thousands (o/oo) of calculation of the premium of the coverage. (NPREMIRAT)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.NPREMIRAT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.DurationOfPaymentsAsAttainedAge">
<summary>
Duration of payments expressed on the age attained by the insured. (SPDURAAGE)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SPDURAAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.CoverageDuration">
<summary>
Duration of the coverage. (NDURATIND)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.NDURATIND'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.DurationOfPayments">
<summary>
Payments duration of the coverage. (NDURATPAY)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.NDURATPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.IndexedCoverage">
<summary>
Indicator of indexed coverage. (SREVINDEX)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SREVINDEX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.DurationOfPaymentsOpen">
<summary>
Indicator for &#34;open&#34; premium payment period. (SPDUROPEI)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SPDUROPEI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.DurationOfPaymentsAsNumberOfYears">
<summary>
Premium payments duration based on the number of years. (SPDURYEAR)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SPDURYEAR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.PremiumCalculationAsAFunctionOfTheInsuredAmount">
<summary>
The premium may be calculated as a function of the sum insured. (SPREMCAPI)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SPREMCAPI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.UnleveledPremium">
<summary>
Unleveled premium indicator. (SRECHAPRI)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SRECHAPRI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.RenewableCoverage">
<summary>
Renewable coverage. (SRENEWALI)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SRENEWALI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.RoutineForCalculationOfInsuredAmountAtRenewal">
<summary>
Calculation routine for sum insured or limit at renewal. (SROUCHACA)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SROUCHACA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.RoutineForCalculationOfPremiumAtRenewal">
<summary>
Calculation routine for premium at renewal. (SROUCHAPR)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SROUCHAPR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.RoutineForCalculationOfPremium">
<summary>
Calculation routine of premium. (SROUPRCAL)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SROUPRCAL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.RoutineForClaimReserve">
<summary>
Routine of calculation and/or validation of the claim reserve. (SROURESER)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SROURESER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.RoutineForSurrenderValue">
<summary>
Calculation routine for surrender value. (SROUSURRE)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SROUSURRE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.ShortDescription">
<summary>
Short description of the coverage. (SSHORT_DES)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SSHORT_DES'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.SCLILLNESS">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SCLILLNESS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.Approval">
<summary>
Official approval number by the Insurances Authority. (SCONDSVS)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SCONDSVS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.InformToVendor">
<summary>
Indicator of &#34;Inform to vendor&#34;. (SINFORPROV)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SINFORPROV'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.Vendor">
<summary>
Client code that identifies the vendor/supplier. (SPROVIDER)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SPROVIDER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.ClaimType">
<summary>
Code of the type of claim for Life. (NCLA_LI_TYP)..
</summary>
<remarks>Data-source is 'TAB_LIFCOV.NCLA_LI_TYP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.CoverageDescript">
<summary>
Coverage description regulation 2180 (SDESCOVER)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_LIFCOV.SDESCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.NCODCUMUL">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_LIFCOV.NCODCUMUL'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.Compare(InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="LifeGenericCoverageItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.SolvencyMarginClassDescription">
 <summary>
 Classification code for the solvency margin.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE71'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.AccountingLineOfBusinessDescription">
 <summary>
 Code of the accounting line of business.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE75'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.GenericLineOfBusinessDescription">
 <summary>
 Code of the generic line of business.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE634'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.ReinsuranceLineOfBusinessDescription">
 <summary>
 Code of the line of business for reinsurance.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5000'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverage.ClaimTypeDescription">
 <summary>
 Code of the type of claim for Life.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE210'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverageCollection">
 <summary>
 Collection for LifeGenericCoverage class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverageCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverageCollection.AddLifeGenericCoverage">
 <summary>
 Add an instance of class 'LifeGenericCoverage' in the LifeGenericCoverageCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverageCollection.Compare(InMotionGIT.Product.Entity.Contracts.LifeGenericCoverageCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverageCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverageCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeGenericCoverageCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage">
 <summary>
 Covers of a life product.
 </summary>
<remarks>Data-source is 'LIFE_COVER'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.CreateNewLifeProductCoverage">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._AddsToObtainInsuredAmount">
<summary>
Indicator of the addition to obtain the insured amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._AddsToObtainSumReinsured">
<summary>
Indicator of the addition to obtain the reinsured amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._AddsToObtainBaseForTaxes">
<summary>
Indicator of the addition to obtain the base amount for taxes.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._GenericCoverage">
<summary>
Code of the generic coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._BillingItem">
<summary>
Billing item.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._GenericLineOfBusiness">
<summary>
Code of the generic line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._SolvencyMarginClass">
<summary>
Classification code for the solvency margin.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._AccountingLineOfBusiness">
<summary>
Code of the accounting line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._ReinsuranceLineOfBusiness">
<summary>
Code of the line of business for reinsurance.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._ExternalExpensesRate">
<summary>
Rate (o/oo) of external expenses, applied to the insured amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._MortalityTableForFemales">
<summary>
Code of the mortality table - female
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._InternalExpensesRate">
<summary>
Rate (o/oo) of internal expenses, applied to the insured amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._MortalityTableForMales">
<summary>
Code of the mortality table - male
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._TypeOfPremiumRecalculation">
<summary>
Type of recalculation of premium of a coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._CoverageEnabled">
<summary>
Indicator of utilization permitted for the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._InterestRate">
<summary>
Interest percentage pursuant to which the mortality table must be generated.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._NoteID">
<summary>
Number of the note containing the comments.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._ExternalPremiumExpenses">
<summary>
Percentage of external premiums expenses.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._InternalPremiumExpenses">
<summary>
Percentage of internal premiums expenses.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._RoutineForMathematicalReserve">
<summary>
Routine for the calculation of the mathematical reserve.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._RoutineForSurrenderValue">
<summary>
Calculation routine for surrender value.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._CoverageByInsuredPerson">
<summary>
Coverage by insured person indicator.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._PercentageForAverageCalculation">
<summary>
Percentage for the man/woman death probability average calculation.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._ReinsuranceRedistributionAtAnniversary">
<summary>
It indicates that the reinsurance will be redistributed each anniversary of the policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._DependenceFromMainInsured">
<summary>
Dependence indicator of the main insured.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._SurvivalCoverage">
<summary>
Survival coverage indicator.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._MaintainOriginalReinsurance">
<summary>
Indicator that the reinsurance distribution for the coverage should be done always under the conditions in force to the incorporation date of the coverage in the policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._Approval">
<summary>
Official approval number by Insurances Authority.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._RoutineClaimReserve">
<summary>
Routine calculation of claims reserves.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._RoutineReservesforUnexpiredRisks">
<summary>
Routine for calculating reserves for unexpired risks
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._FranchiseOrDeductiblePercentageClaim">
<summary>
Franchise or deductible percentage to be applied to the claim.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._FixedAmountOfFranchiseOrDeductibleClaim">
<summary>
fixed amount franchise or deductible amount to be applied to the claim
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._MinimumAmountOfFranchiseOrDeductibleClaim">
<summary>
Minimum amount franchise or deductible amount to be applied to the claim.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._MaximumAmountOfFranchiseOrDeductibleClaim">
<summary>
Maximum amount franchise or deductibleMaximum franchise or deductible amount to be applied to the claim.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._DiscountPercentageClaim">
<summary>
Percentage of discount because of franchise or deductible.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._DiscountAmountClaim">
<summary>
Amount of discount because of the franchise or deductible.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._DaysFranchiseDeductible">
<summary>
Days of franchise or deductible to be applied.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._RevalType">
<summary>
Indices of revaluation
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._SCATASTCOVER">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._NMAXEVENTS">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._SROUPROVIDER">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._SINDSERVCOST">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._SROUPROVCOST">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._SINDCOSTRESE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._SINSAGETOUSE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'LIFE_COVER.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.AddsToObtainInsuredAmount">
<summary>
Indicator of the addition to obtain the insured amount. (SADDSUINI)..
</summary>
<remarks>Data-source is 'LIFE_COVER.SADDSUINI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.AddsToObtainInsuredAmountEnum">
<summary>
Indicator of the addition to obtain the insured amount.
</summary>
<remarks>This property use a enumeration based on property 'AddsToObtainInsuredAmount'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.AddsToObtainInsuredAmountEnumText">
<summary>
Indicator of the addition to obtain the insured amount.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.AddsToObtainSumReinsured">
<summary>
Indicator of the addition to obtain the reinsured amount. (SADDREINI)..
</summary>
<remarks>Data-source is 'LIFE_COVER.SADDREINI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.AddsToObtainSumReinsuredEnum">
<summary>
Indicator of the addition to obtain the reinsured amount.
</summary>
<remarks>This property use a enumeration based on property 'AddsToObtainSumReinsured'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.AddsToObtainSumReinsuredEnumText">
<summary>
Indicator of the addition to obtain the reinsured amount.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.AddsToObtainBaseForTaxes">
<summary>
Indicator of the addition to obtain the base amount for taxes. (SADDTAXIN)..
</summary>
<remarks>Data-source is 'LIFE_COVER.SADDTAXIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.AddsToObtainBaseForTaxesEnum">
<summary>
Indicator of the addition to obtain the base amount for taxes.
</summary>
<remarks>This property use a enumeration based on property 'AddsToObtainBaseForTaxes'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.AddsToObtainBaseForTaxesEnumText">
<summary>
Indicator of the addition to obtain the base amount for taxes.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.GenericCoverage">
<summary>
Code of the generic coverage. (NCOVERGEN)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NCOVERGEN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.BillingItem">
<summary>
Billing item. (NBILL_ITEM)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NBILL_ITEM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.GenericLineOfBusiness">
<summary>
Code of the generic line of business. (NBRANCH_GEN)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NBRANCH_GEN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.SolvencyMarginClass">
<summary>
Classification code for the solvency margin. (NBRANCH_EST)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NBRANCH_EST'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.AccountingLineOfBusiness">
<summary>
Code of the accounting line of business. (NBRANCH_LED)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NBRANCH_LED'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.ReinsuranceLineOfBusiness">
<summary>
Code of the line of business for reinsurance. (NBRANCH_REI)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NBRANCH_REI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.ExternalExpensesRate">
<summary>
Rate (o/oo) of external expenses, applied to the insured amount. (NCAEXTEXP)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NCAEXTEXP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.MortalityTableForFemales">
<summary>
Code of the mortality table - female (SMORTACOF)..
</summary>
<remarks>Data-source is 'LIFE_COVER.SMORTACOF'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.InternalExpensesRate">
<summary>
Rate (o/oo) of internal expenses, applied to the insured amount. (NCAINTEXP)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NCAINTEXP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.MortalityTableForMales">
<summary>
Code of the mortality table - male (SMORTACOM)..
</summary>
<remarks>Data-source is 'LIFE_COVER.SMORTACOM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.TypeOfPremiumRecalculation">
<summary>
Type of recalculation of premium of a coverage. (NRETARIF)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NRETARIF'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.TypeOfPremiumRecalculationEnum">
<summary>
Type of recalculation of premium of a coverage.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfPremiumRecalculation'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.TypeOfPremiumRecalculationEnumText">
<summary>
Type of recalculation of premium of a coverage.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'LIFE_COVER.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.CoverageEnabled">
<summary>
Indicator of utilization permitted for the coverage. (SCOVERUSE)..
</summary>
<remarks>Data-source is 'LIFE_COVER.SCOVERUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.CoverageEnabledEnum">
<summary>
Indicator of utilization permitted for the coverage.
</summary>
<remarks>This property use a enumeration based on property 'CoverageEnabled'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.CoverageEnabledEnumText">
<summary>
Indicator of utilization permitted for the coverage.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.InterestRate">
<summary>
Interest percentage pursuant to which the mortality table must be generated. (NINTEREST)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NINTEREST'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'LIFE_COVER.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.NoteID">
<summary>
Number of the note containing the comments. (NNOTENUM)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.ExternalPremiumExpenses">
<summary>
Percentage of external premiums expenses. (NPREXTEXP)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NPREXTEXP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.InternalPremiumExpenses">
<summary>
Percentage of internal premiums expenses. (NPRINTEXP)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NPRINTEXP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.RoutineForMathematicalReserve">
<summary>
Routine for the calculation of the mathematical reserve. (SROURESER)..
</summary>
<remarks>Data-source is 'LIFE_COVER.SROURESER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.RoutineForSurrenderValue">
<summary>
Calculation routine for surrender value. (SROUSURRE)..
</summary>
<remarks>Data-source is 'LIFE_COVER.SROUSURRE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'LIFE_COVER.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.CoverageByInsuredPerson">
<summary>
Coverage by insured person indicator. (SCONTROL)..
</summary>
<remarks>Data-source is 'LIFE_COVER.SCONTROL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.PercentageForAverageCalculation">
<summary>
Percentage for the man/woman death probability average calculation. (NPER_TABMOR)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NPER_TABMOR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.ReinsuranceRedistributionAtAnniversary">
<summary>
It indicates that the reinsurance will be redistributed each anniversary of the policy. (SCALREIN)..
</summary>
<remarks>Data-source is 'LIFE_COVER.SCALREIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.DependenceFromMainInsured">
<summary>
Dependence indicator of the main insured. (SDEPEND)..
</summary>
<remarks>Data-source is 'LIFE_COVER.SDEPEND'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.SurvivalCoverage">
<summary>
Survival coverage indicator. (SSURV)..
</summary>
<remarks>Data-source is 'LIFE_COVER.SSURV'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.MaintainOriginalReinsurance">
<summary>
Indicator that the reinsurance distribution for the coverage should be done always under the conditions in force to the incorporation date of the coverage in the policy. (SREINORIGCOND)..
</summary>
<remarks>Data-source is 'LIFE_COVER.SREINORIGCOND'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.Approval">
<summary>
Official approval number by Insurances Authority. (SCONDSVS)..
</summary>
<remarks>Data-source is 'LIFE_COVER.SCONDSVS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.RoutineClaimReserve">
<summary>
Routine calculation of claims reserves. (SROUCLATEC)..
</summary>
<remarks>Data-source is 'LIFE_COVER.SROUCLATEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.RoutineReservesforUnexpiredRisks">
<summary>
Routine for calculating reserves for unexpired risks (SROUTRESRISK)..
</summary>
<remarks>Data-source is 'LIFE_COVER.SROUTRESRISK'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.FranchiseOrDeductiblePercentageClaim">
<summary>
Franchise or deductible percentage to be applied to the claim. (NRATECLA)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NRATECLA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.FixedAmountOfFranchiseOrDeductibleClaim">
<summary>
fixed amount franchise or deductible amount to be applied to the claim (NFIXAMOCLA)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NFIXAMOCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.MinimumAmountOfFranchiseOrDeductibleClaim">
<summary>
Minimum amount franchise or deductible amount to be applied to the claim. (NMINAMOCLA)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NMINAMOCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.MaximumAmountOfFranchiseOrDeductibleClaim">
<summary>
Maximum amount franchise or deductibleMaximum franchise or deductible amount to be applied to the claim. (NMAXAMOCLA)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NMAXAMOCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.DiscountPercentageClaim">
<summary>
Percentage of discount because of franchise or deductible. (NDISCCLA)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NDISCCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.DiscountAmountClaim">
<summary>
Amount of discount because of the franchise or deductible. (NDISC_AMOCLA)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NDISC_AMOCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.DaysFranchiseDeductible">
<summary>
Days of franchise or deductible to be applied. (NFRANCDAYS)..
</summary>
<remarks>Data-source is 'LIFE_COVER.NFRANCDAYS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.RevalType">
<summary>
Indices of revaluation (NREVALTYPE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE_COVER.NREVALTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.SCATASTCOVER">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE_COVER.SCATASTCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.NMAXEVENTS">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE_COVER.NMAXEVENTS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.SROUPROVIDER">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE_COVER.SROUPROVIDER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.SINDSERVCOST">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE_COVER.SINDSERVCOST'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.SROUPROVCOST">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE_COVER.SROUPROVCOST'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.SINDCOSTRESE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE_COVER.SINDCOSTRESE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.SINSAGETOUSE">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE_COVER.SINSAGETOUSE'.</remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.Compare(InMotionGIT.Product.Entity.Contracts.LifeProductCoverage,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="LifeProductCoverageItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.GenericLineOfBusinessDescription">
 <summary>
 Code of the generic line of business.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE634'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.SolvencyMarginClassDescription">
 <summary>
 Classification code for the solvency margin.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE71'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.AccountingLineOfBusinessDescription">
 <summary>
 Code of the accounting line of business.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE75'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.ReinsuranceLineOfBusinessDescription">
 <summary>
 Code of the line of business for reinsurance.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5000'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverage.TypeOfPremiumRecalculationDescription">
 <summary>
 Type of recalculation of premium of a coverage.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5559'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.LifeProductCoverageCollection">
 <summary>
 Collection for LifeProductCoverage class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeProductCoverageCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeProductCoverageCollection.AddLifeProductCoverage">
 <summary>
 Add an instance of class 'LifeProductCoverage' in the LifeProductCoverageCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeProductCoverageCollection.Compare(InMotionGIT.Product.Entity.Contracts.LifeProductCoverageCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.LifeProductCoverageCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeProductCoverageCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.LifeProductCoverageCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity">
 <summary>
 Modules available by Commercial Activity
 </summary>
<remarks>Data-source is 'MODULE_ACTCOMMER'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.CreateNewModulesAvailableByCommercialActivity">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity._CommercialActivityCode">
<summary>
Code of the Commercial Activity.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity._ModuleAvailableForCommercialActivity">
<summary>
Module available for the Commercial Activity
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'MODULE_ACTCOMMER.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'MODULE_ACTCOMMER.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'MODULE_ACTCOMMER.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'MODULE_ACTCOMMER.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.CommercialActivityCode">
<summary>
Code of the Commercial Activity. (NCOMMER_ACTIVITY)..
</summary>
<remarks>Data-source is 'MODULE_ACTCOMMER.NCOMMER_ACTIVITY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.ModuleAvailableForCommercialActivity">
<summary>
Module available for the Commercial Activity (SAVAILABLE)..
</summary>
<remarks>Data-source is 'MODULE_ACTCOMMER.SAVAILABLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'MODULE_ACTCOMMER.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'MODULE_ACTCOMMER.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'MODULE_ACTCOMMER.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.Compare(InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ModulesAvailableByCommercialActivityItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.LineOfBusinessDescription">
 <summary>
 Code of the line of business.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE10'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivity.CommercialActivityCodeDescription">
 <summary>
 Code of the Commercial Activity.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9015'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivityCollection">
 <summary>
 Collection for ModulesAvailableByCommercialActivity class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivityCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivityCollection.AddModulesAvailableByCommercialActivity">
 <summary>
 Add an instance of class 'ModulesAvailableByCommercialActivity' in the ModulesAvailableByCommercialActivityCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivityCollection.Compare(InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivityCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivityCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivityCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ModulesAvailableByCommercialActivityCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount">
 <summary>
 Table of order origin account usage.
 </summary>
<remarks>Data-source is 'TAB_ORD_ORIGIN'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.CreateNewOrderOriginAccount">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount._SourceAccount">
<summary>
Code of the source account (Values
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount._Order">
<summary>
Usage order of the origin account to pay a charge.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount._SPRIMARY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount._NPERC_COLLECT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount._SSELL_COST">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount._ExpirationDate">
<summary>
Expiration date of the account.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount._OrigenAccountForContributions">
<summary>
Source account to receive contributions in the case that the source has not allowed to receive the same for expiration date.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount._IntWarrantMin">
<summary>
Guaranteed profitability of the account / Product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount._OriginInterestExcess">
<summary>
Account where the excess interest will be capitalized
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAB_ORD_ORIGIN.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAB_ORD_ORIGIN.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.SourceAccount">
<summary>
Code of the source account (Values (NORIGIN)..
</summary>
<remarks>Data-source is 'TAB_ORD_ORIGIN.NORIGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.Order">
<summary>
Usage order of the origin account to pay a charge. (NORDER)..
</summary>
<remarks>Data-source is 'TAB_ORD_ORIGIN.NORDER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_ORD_ORIGIN.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_ORD_ORIGIN.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.SPRIMARY">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_ORD_ORIGIN.SPRIMARY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.NPERC_COLLECT">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_ORD_ORIGIN.NPERC_COLLECT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.SSELL_COST">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_ORD_ORIGIN.SSELL_COST'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.ExpirationDate">
<summary>
Expiration date of the account. (DEXPIRDAT)..
</summary>
<remarks>Data-source is 'TAB_ORD_ORIGIN.DEXPIRDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.OrigenAccountForContributions">
<summary>
Source account to receive contributions in the case that the source has not allowed to receive the same for expiration date. (NORIGEN_DEP)..
</summary>
<remarks>Data-source is 'TAB_ORD_ORIGIN.NORIGEN_DEP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.IntWarrantMin">
<summary>
Guaranteed profitability of the account / Product. (NINTWARRMIN)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_ORD_ORIGIN.NINTWARRMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.OriginInterestExcess">
<summary>
Account where the excess interest will be capitalized (NORIGININTEXC)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_ORD_ORIGIN.NORIGININTEXC'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.Compare(InMotionGIT.Product.Entity.Contracts.OrderOriginAccount,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="OrderOriginAccountItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.SourceAccountDescription">
 <summary>
 Code of the source account (Values
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5633'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OrderOriginAccount.OriginInterestExcessDescription">
 <summary>
 Account where the excess interest will be capitalized
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5633'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.OrderOriginAccountCollection">
 <summary>
 Collection for OrderOriginAccount class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OrderOriginAccountCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OrderOriginAccountCollection.AddOrderOriginAccount">
 <summary>
 Add an instance of class 'OrderOriginAccount' in the OrderOriginAccountCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OrderOriginAccountCollection.Compare(InMotionGIT.Product.Entity.Contracts.OrderOriginAccountCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OrderOriginAccountCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OrderOriginAccountCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OrderOriginAccountCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment">
 <summary>
 Account to be affected by each type of deposit
 </summary>
<remarks>Data-source is 'ORIGINPAYMENT'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.CreateNewOriginByTypePayment">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment._SourceAccount">
<summary>
Code of the source account (
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment._TypeOfDetailRecord">
<summary>
Type Of Detail Record
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment._DetailItemCode">
<summary>
Detail Item Code
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment._RecordEffectiveDate">
<summary>
Record Effective Date
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment._EntryType">
<summary>
Code of the type of entry
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'ORIGINPAYMENT.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'ORIGINPAYMENT.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.SourceAccount">
<summary>
Code of the source account ( (NORIGIN)..
</summary>
<remarks>Data-source is 'ORIGINPAYMENT.NORIGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.TypeOfDetailRecord">
<summary>
Type Of Detail Record (STYPE_DETAI)..
</summary>
<remarks>Data-source is 'ORIGINPAYMENT.STYPE_DETAI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.DetailItemCode">
<summary>
Detail Item Code (NDET_CODE)..
</summary>
<remarks>Data-source is 'ORIGINPAYMENT.NDET_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.RecordEffectiveDate">
<summary>
Record Effective Date (DEFFECDATE)..
</summary>
<remarks>Data-source is 'ORIGINPAYMENT.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.EntryType">
<summary>
Code of the type of entry (NTYPE_MOVE)..
</summary>
<remarks>Data-source is 'ORIGINPAYMENT.NTYPE_MOVE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'ORIGINPAYMENT.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'ORIGINPAYMENT.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.Compare(InMotionGIT.Product.Entity.Contracts.OriginByTypePayment,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="OriginByTypePaymentItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.SourceAccountDescription">
 <summary>
 Code of the source account (
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5633'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OriginByTypePayment.EntryTypeDescription">
 <summary>
 Code of the type of entry
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5708'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.OriginByTypePaymentCollection">
 <summary>
 Collection for OriginByTypePayment class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OriginByTypePaymentCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OriginByTypePaymentCollection.AddOriginByTypePayment">
 <summary>
 Add an instance of class 'OriginByTypePayment' in the OriginByTypePaymentCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OriginByTypePaymentCollection.Compare(InMotionGIT.Product.Entity.Contracts.OriginByTypePaymentCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.OriginByTypePaymentCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OriginByTypePaymentCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.OriginByTypePaymentCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto">
 <summary>
 Particular data of the producto
 </summary>
<remarks>Data-source is 'SPECIFIC_FIELD_PROD'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.CreateNewParticularDataOfTheProducto">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto._Module">
<summary>
Code of The Module of The Coverage
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto._Cover">
<summary>
Code of the coverage
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto._CodeDefinitionType">
<summary>
Code definition type
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto._Value">
<summary>
Value assigned to the coverage attribute
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto._Type">
<summary>
Attribute type
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto._Require">
<summary>
Required field indicator
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto._Disable">
<summary>
Field indicator disable on sale.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'SPECIFIC_FIELD_PROD.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'SPECIFIC_FIELD_PROD.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.Module">
<summary>
Code of The Module of The Coverage (NMODULEC)..
</summary>
<remarks>Data-source is 'SPECIFIC_FIELD_PROD.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.Cover">
<summary>
Code of the coverage (NCOVER)..
</summary>
<remarks>Data-source is 'SPECIFIC_FIELD_PROD.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.CodeDefinitionType">
<summary>
Code definition type (NDEFTYPE)..
</summary>
<remarks>Data-source is 'SPECIFIC_FIELD_PROD.NDEFTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'SPECIFIC_FIELD_PROD.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.Value">
<summary>
Value assigned to the coverage attribute (SVALUE)..
</summary>
<remarks>Data-source is 'SPECIFIC_FIELD_PROD.SVALUE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.Type">
<summary>
Attribute type (NTYPEATTRIBUT)..
</summary>
<remarks>Data-source is 'SPECIFIC_FIELD_PROD.NTYPEATTRIBUT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.Require">
<summary>
Required field indicator (SREQUIRE)..
</summary>
<remarks>Data-source is 'SPECIFIC_FIELD_PROD.SREQUIRE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.Disable">
<summary>
Field indicator disable on sale. (SDISABLE)..
</summary>
<remarks>Data-source is 'SPECIFIC_FIELD_PROD.SDISABLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'SPECIFIC_FIELD_PROD.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'SPECIFIC_FIELD_PROD.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'SPECIFIC_FIELD_PROD.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.Compare(InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ParticularDataOfTheProductoItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.CodeDefinitionTypeDescription">
 <summary>
 Code definition type
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6786' on the table 'TABLE6786'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProducto.TypeDescription">
 <summary>
 Attribute type
 </summary>
 <remarks>
 This property is associated with the field 'TABLE360' on the table 'TABLE360'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProductoCollection">
 <summary>
 Collection for ParticularDataOfTheProducto class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProductoCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProductoCollection.AddParticularDataOfTheProducto">
 <summary>
 Add an instance of class 'ParticularDataOfTheProducto' in the ParticularDataOfTheProductoCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProductoCollection.Compare(InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProductoCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProductoCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProductoCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ParticularDataOfTheProductoCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct">
 <summary>
 Ways of payment allowed by product.
 </summary>
<remarks>Data-source is 'WAY_PAY_PROD'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.CreateNewPaymentWaysAllowedByProduct">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct._PaymentMethod">
<summary>
Code of the payment method.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct._SurchargeRate">
<summary>
Percentage of surcharge on account of the payment method
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct._DiscountRate">
<summary>
Percentage of discount on account of the payment method
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct._MandatoryFirstPremium">
<summary>
Mandatory first premium indicator.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct._DaysBeforeCancellingForLatePayment">
<summary>
Days of grace before cancelling the policy due to late payment
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct._SIND_PREISSU">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct._SIND_PREREF">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct._SONERECEIPT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct._SLASTRECEIPT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct._OverPremiumRequest">
<summary>
Indicates that the premium shouldnt be required as part of the first premium payment. Possible values: 1.- Affirmative 2.- Negative
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct._NCOLLINIFILE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct._NCOLLSCHEFILE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct._NCOLLADDIFILE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'WAY_PAY_PROD.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'WAY_PAY_PROD.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.PaymentMethod">
<summary>
Code of the payment method. (NWAY_PAY)..
</summary>
<remarks>Data-source is 'WAY_PAY_PROD.NWAY_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'WAY_PAY_PROD.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.SurchargeRate">
<summary>
Percentage of surcharge on account of the payment method (NRATE_EX)..
</summary>
<remarks>Data-source is 'WAY_PAY_PROD.NRATE_EX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.DiscountRate">
<summary>
Percentage of discount on account of the payment method (NRATE_DISC)..
</summary>
<remarks>Data-source is 'WAY_PAY_PROD.NRATE_DISC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.MandatoryFirstPremium">
<summary>
Mandatory first premium indicator. (SPREM_FIRST)..
</summary>
<remarks>Data-source is 'WAY_PAY_PROD.SPREM_FIRST'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'WAY_PAY_PROD.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'WAY_PAY_PROD.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'WAY_PAY_PROD.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.DaysBeforeCancellingForLatePayment">
<summary>
Days of grace before cancelling the policy due to late payment (NNULL_DAY)..
</summary>
<remarks>Data-source is 'WAY_PAY_PROD.NNULL_DAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.SIND_PREISSU">
<summary>
.
</summary>
<remarks>Data-source is 'WAY_PAY_PROD.SIND_PREISSU'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.SIND_PREREF">
<summary>
.
</summary>
<remarks>Data-source is 'WAY_PAY_PROD.SIND_PREREF'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.SONERECEIPT">
<summary>
.
</summary>
<remarks>Data-source is 'WAY_PAY_PROD.SONERECEIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.SLASTRECEIPT">
<summary>
.
</summary>
<remarks>Data-source is 'WAY_PAY_PROD.SLASTRECEIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.OverPremiumRequest">
<summary>
Indicates that the premium shouldnt be required as part of the first premium payment. Possible values: 1.- Affirmative 2.- Negative (SPRFIRST_EXPR)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'WAY_PAY_PROD.SPRFIRST_EXPR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.NCOLLINIFILE">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'WAY_PAY_PROD.NCOLLINIFILE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.NCOLLSCHEFILE">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'WAY_PAY_PROD.NCOLLSCHEFILE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.NCOLLADDIFILE">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'WAY_PAY_PROD.NCOLLADDIFILE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.Compare(InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="PaymentWaysAllowedByProductItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProduct.PaymentMethodDescription">
 <summary>
 Code of the payment method.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5002'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProductCollection">
 <summary>
 Collection for PaymentWaysAllowedByProduct class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProductCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProductCollection.AddPaymentWaysAllowedByProduct">
 <summary>
 Add an instance of class 'PaymentWaysAllowedByProduct' in the PaymentWaysAllowedByProductCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProductCollection.Compare(InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProductCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProductCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProductCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PaymentWaysAllowedByProductCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage">
 <summary>
 Percentage of profitability per plan
 </summary>
<remarks>Data-source is 'PLAN_INTWAR'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.CreateNewPlanProfitabilityPercentage">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage._nModulec">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage._TypeOfProfitability">
<summary>
Type of profitability.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage._dEffecDate">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage._dNullDate">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage._nIntWarrMin">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage._nIntWarr">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage._ReturnGuaranteedAllowsChangesIndicator">
<summary>
It indicates whether the% return guaranteed, allows changes in product designer
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage._ProjectedNetReturn">
<summary>
Projected net return
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'PLAN_INTWAR.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'PLAN_INTWAR.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.nModulec">
<summary>
.
</summary>
<remarks>Data-source is 'PLAN_INTWAR.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.TypeOfProfitability">
<summary>
Type of profitability. (NTYPEINVEST)..
</summary>
<remarks>Data-source is 'PLAN_INTWAR.NTYPEINVEST'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.dEffecDate">
<summary>
.
</summary>
<remarks>Data-source is 'PLAN_INTWAR.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.dNullDate">
<summary>
.
</summary>
<remarks>Data-source is 'PLAN_INTWAR.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.nIntWarrMin">
<summary>
.
</summary>
<remarks>Data-source is 'PLAN_INTWAR.NINTWARRMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.nIntWarr">
<summary>
.
</summary>
<remarks>Data-source is 'PLAN_INTWAR.NINTWARR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.ReturnGuaranteedAllowsChangesIndicator">
<summary>
It indicates whether the% return guaranteed, allows changes in product designer (SMODIF)..
</summary>
<remarks>Data-source is 'PLAN_INTWAR.SMODIF'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.ProjectedNetReturn">
<summary>
Projected net return (NINTWARRCLEAR)..
</summary>
<remarks>Data-source is 'PLAN_INTWAR.NINTWARRCLEAR'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.Compare(InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="PlanProfitabilityPercentageItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentage.TypeOfProfitabilityDescription">
 <summary>
 Type of profitability.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5520'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentageCollection">
 <summary>
 Collection for PlanProfitabilityPercentage class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentageCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentageCollection.AddPlanProfitabilityPercentage">
 <summary>
 Add an instance of class 'PlanProfitabilityPercentage' in the PlanProfitabilityPercentageCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentageCollection.Compare(InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentageCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentageCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentageCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PlanProfitabilityPercentageCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage">
 <summary>
 Products that add capital to coverage (Traditional Life Products).
 </summary>
<remarks>Data-source is 'PROD_ADDCAP'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.CreateNewProductAddCapitalToCoverage">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage._GenericCoverage">
<summary>
Code of the generic coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage._LineOfBusinessToAdd">
<summary>
Line of business of the product that adds for the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage._ProductCodeToAdd">
<summary>
Product code that adds for the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage._ConsecutiveNumber">
<summary>
Correlative Number that makes the record unique in the table.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage._ClientRole">
<summary>
Role of the client in the policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage._InsuredAmount">
<summary>
Maximum Limit for the sum insured calculation according to cumulus
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage._CodeofCoverage">
<summary>
Code of the cover to be included in the product sumarization
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage._ClientRoleToAdd">
<summary>
Client role related to the coverage to add to insured amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage._AdditionIndicator">
<summary>
It indicates if the product adds for insured amount/cumulus
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'PROD_ADDCAP.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'PROD_ADDCAP.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.GenericCoverage">
<summary>
Code of the generic coverage. (NCOVERGEN)..
</summary>
<remarks>Data-source is 'PROD_ADDCAP.NCOVERGEN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.LineOfBusinessToAdd">
<summary>
Line of business of the product that adds for the coverage. (NBRANCHADD)..
</summary>
<remarks>Data-source is 'PROD_ADDCAP.NBRANCHADD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.ProductCodeToAdd">
<summary>
Product code that adds for the coverage. (NPRODUCTADD)..
</summary>
<remarks>Data-source is 'PROD_ADDCAP.NPRODUCTADD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'PROD_ADDCAP.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.ConsecutiveNumber">
<summary>
Correlative Number that makes the record unique in the table. (NID)..
</summary>
<remarks>Data-source is 'PROD_ADDCAP.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'PROD_ADDCAP.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'PROD_ADDCAP.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'PROD_ADDCAP.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.ClientRole">
<summary>
Role of the client in the policy. (NROLE)..
</summary>
<remarks>Data-source is 'PROD_ADDCAP.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.ClientRoleEnum">
<summary>
Role of the client in the policy.
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.ClientRoleEnumText">
<summary>
Role of the client in the policy.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.InsuredAmount">
<summary>
Maximum Limit for the sum insured calculation according to cumulus (NCAPITAL)..
</summary>
<remarks>Data-source is 'PROD_ADDCAP.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.CodeofCoverage">
<summary>
Code of the cover to be included in the product sumarization (NCOVERADD)..
</summary>
<remarks>Data-source is 'PROD_ADDCAP.NCOVERADD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.ClientRoleToAdd">
<summary>
Client role related to the coverage to add to insured amount. (NROLEADD)..
</summary>
<remarks>Data-source is 'PROD_ADDCAP.NROLEADD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.AdditionIndicator">
<summary>
It indicates if the product adds for insured amount/cumulus (NTYP_CUMUL)..
</summary>
<remarks>Data-source is 'PROD_ADDCAP.NTYP_CUMUL'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.Compare(InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ProductAddCapitalToCoverageItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverage.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverageCollection">
 <summary>
 Collection for ProductAddCapitalToCoverage class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverageCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverageCollection.AddProductAddCapitalToCoverage">
 <summary>
 Add an instance of class 'ProductAddCapitalToCoverage' in the ProductAddCapitalToCoverageCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverageCollection.Compare(InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverageCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverageCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverageCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAddCapitalToCoverageCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle">
 <summary>
 Line of business- products allowed per vehicle.
 </summary>
<remarks>Data-source is 'VEH_ALLOW'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle.CreateNewProductAllowPerVehicle">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle._VehicleCode">
<summary>
Code of The Insured Vehicle
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle.VehicleCode">
<summary>
Code of The Insured Vehicle (SVEHCODE)..
</summary>
<remarks>Data-source is 'VEH_ALLOW.SVEHCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'VEH_ALLOW.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'VEH_ALLOW.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'VEH_ALLOW.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'VEH_ALLOW.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle.Compare(InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ProductAllowPerVehicleItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicle.LineOfBusinessDescription">
 <summary>
 Code of the line of business.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE10'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicleCollection">
 <summary>
 Collection for ProductAllowPerVehicle class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicleCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicleCollection.AddProductAllowPerVehicle">
 <summary>
 Add an instance of class 'ProductAllowPerVehicle' in the ProductAllowPerVehicleCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicleCollection.Compare(InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicleCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicleCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicleCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductAllowPerVehicleCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ProductClause">
 <summary>
 Clauses in a product.
 </summary>
<remarks>Data-source is 'TAB_CLAUSE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductClause.CreateNewProductClause">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductClause.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._Clause">
<summary>
Number identifying the clause.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._SelectedByDefault">
<summary>
Indicator of &#34;selected by default&#34; for the Treatment of policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._Description">
<summary>
Description of the clause.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._NoteID">
<summary>
Number of the note containing the comments related to the clause.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._ShortDescription">
<summary>
Short description of the clause.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._RecordCanBeModifiied">
<summary>
It indicates that the record can be modified.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._NTYPE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._STYPE_CLAUSE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._SDOC_ATTACH">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._NORDEN">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._ExtraPremiumDiscountOrTaxCode">
<summary>
Code of the extra-premium/discount/tax
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._CommercialActivityCode">
<summary>
Commercial Activity Code
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._ExistenceOfComponentToPrint">
<summary>
Existence of Component to Print
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._ClauseSSN">
<summary>
Type of clause SSN
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._CoverClauseSSN">
<summary>
Type of cover clause SSN
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._ClauseOrderSSN">
<summary>
Clause order SSN
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAB_CLAUSE.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAB_CLAUSE.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'TAB_CLAUSE.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'TAB_CLAUSE.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.Clause">
<summary>
Number identifying the clause. (NCLAUSE)..
</summary>
<remarks>Data-source is 'TAB_CLAUSE.NCLAUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAB_CLAUSE.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_CLAUSE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.SelectedByDefault">
<summary>
Indicator of &#34;selected by default&#34; for the Treatment of policy. (SDEFAULTI)..
</summary>
<remarks>Data-source is 'TAB_CLAUSE.SDEFAULTI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.Description">
<summary>
Description of the clause. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'TAB_CLAUSE.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.NoteID">
<summary>
Number of the note containing the comments related to the clause. (NNOTENUM)..
</summary>
<remarks>Data-source is 'TAB_CLAUSE.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAB_CLAUSE.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.ShortDescription">
<summary>
Short description of the clause. (SSHORT_DES)..
</summary>
<remarks>Data-source is 'TAB_CLAUSE.SSHORT_DES'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_CLAUSE.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.RecordCanBeModifiied">
<summary>
It indicates that the record can be modified. (SMODIFIED)..
</summary>
<remarks>Data-source is 'TAB_CLAUSE.SMODIFIED'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.NTYPE">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_CLAUSE.NTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.STYPE_CLAUSE">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_CLAUSE.STYPE_CLAUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.SDOC_ATTACH">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_CLAUSE.SDOC_ATTACH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.NORDEN">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_CLAUSE.NORDEN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.ExtraPremiumDiscountOrTaxCode">
<summary>
Code of the extra-premium/discount/tax (NDISEXPRC)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_CLAUSE.NDISEXPRC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.CommercialActivityCode">
<summary>
Commercial Activity Code (NCOMMER_ACTIVITY)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_CLAUSE.NCOMMER_ACTIVITY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.ExistenceOfComponentToPrint">
<summary>
Existence of Component to Print (NEXIST)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_CLAUSE.NEXIST'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.ClauseSSN">
<summary>
Type of clause SSN (SSSNTYPE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_CLAUSE.SSSNTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.CoverClauseSSN">
<summary>
Type of cover clause SSN (SSSNCOVER)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_CLAUSE.SSSNCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.ClauseOrderSSN">
<summary>
Clause order SSN (SSSNORDER)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_CLAUSE.SSSNORDER'.</remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductClause._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductClause.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductClause.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductClause.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductClause.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductClause.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductClause.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductClause.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductClause.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductClause.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductClause.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductClause.Compare(InMotionGIT.Product.Entity.Contracts.ProductClause,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ProductClauseItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductClause.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductClause.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductClause.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductClause.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.NTYPEDescription">
 <summary>
 
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7509'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClause.CommercialActivityCodeDescription">
 <summary>
 Commercial Activity Code
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9015'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ProductClauseCollection">
 <summary>
 Collection for ProductClause class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductClauseCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductClauseCollection.AddProductClause">
 <summary>
 Add an instance of class 'ProductClause' in the ProductClauseCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductClauseCollection.Compare(InMotionGIT.Product.Entity.Contracts.ProductClauseCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductClauseCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductClauseCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductClauseCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital">
 <summary>
 Implementation of the basic rate on capital.
 </summary>
<remarks>Data-source is 'PRECOV_APL'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.CreateNewProductCoverageRateOnCapital">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital._nBranch">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital._nProduct">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital._nCover">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital._UsageOfBasicInsuredAmount">
<summary>
Usage of the basic insured amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital._CodeOfTheInsuredAmount">
<summary>
Code that identifies the limit.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.nBranch">
<summary>
.
</summary>
<remarks>Data-source is 'PRECOV_APL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.nProduct">
<summary>
.
</summary>
<remarks>Data-source is 'PRECOV_APL.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'PRECOV_APL.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.nCover">
<summary>
.
</summary>
<remarks>Data-source is 'PRECOV_APL.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.UsageOfBasicInsuredAmount">
<summary>
Usage of the basic insured amount. (NUSETYPE)..
</summary>
<remarks>Data-source is 'PRECOV_APL.NUSETYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.CodeOfTheInsuredAmount">
<summary>
Code that identifies the limit. (NSUMINS_CO)..
</summary>
<remarks>Data-source is 'PRECOV_APL.NSUMINS_CO'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'PRECOV_APL.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'PRECOV_APL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'PRECOV_APL.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'PRECOV_APL.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.Compare(InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ProductCoverageRateOnCapitalItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapital.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapitalCollection">
 <summary>
 Collection for ProductCoverageRateOnCapital class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapitalCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapitalCollection.AddProductCoverageRateOnCapital">
 <summary>
 Add an instance of class 'ProductCoverageRateOnCapital' in the ProductCoverageRateOnCapitalCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapitalCollection.Compare(InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapitalCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapitalCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapitalCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductCoverageRateOnCapitalCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation">
 <summary>
 General information of products.
 </summary>
<remarks>Data-source is 'PRODUCT'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.CreateNewProductGeneralInformation">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._CancellationNotice">
<summary>
Number of days of notice of cancellation of the policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._TypeOfBillForGroups">
<summary>
Type of bill for groups.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._DaysForClaimLapse">
<summary>
Number of days to be added to obtain the date when the claim lapses, counting from the date when the claim was made, if the documentation is not received.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._Copies">
<summary>
Default value for the number of copies to be printed
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._ReinsuranceOptionInCaseOfCumulus">
<summary>
Reinsurance processing in case of cumulus
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._MinimumNumberOfCertificates">
<summary>
Minimum number of certificates required.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._TypeOfCumulus">
<summary>
Type of cumulus related to the treaty
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._ReportingValuesIndicator">
<summary>
It indicates that the policy must report values.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._OptionForClausesInGroups">
<summary>
It indicates how clauses will be processed in groups.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._OptionForExtraPremiumAndDiscountsInGroups">
<summary>
It indicates how the extra-premiums/discounts will be processed in groups.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._OptionOfCoveragesForGroups">
<summary>
It indicates how coverages will be processed for groups.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._DurationInMonths">
<summary>
Number of months of duration, used to calculate the policy effective period.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._ProductAllowsGroups">
<summary>
Group policies allowed.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._ProductAllowsIndividualPolicies">
<summary>
Individual policies are allowed in the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._ProductAcceptsMultilocationPolicies">
<summary>
Multiple-location policies allowed.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._PaymentFrequency">
<summary>
Frequency of premium payment.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._PolicyType">
<summary>
Policy type.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._MaximumNumberOfCurrencies">
<summary>
Maximum number of currencies.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._CededReinsuranceType">
<summary>
Type of reinsurance ceded for groups (by certificate or group).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._AutomaticRenewal">
<summary>
Automatic renewal indicator.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._OptionToApplyIndexation">
<summary>
Option to apply indexation
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._IndexationPercentage">
<summary>
Fixed percentage of indexation
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._IndexationType">
<summary>
Type of indexation
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._CurrencyOptionToCommission">
<summary>
Code of the currency option in which the policy commission is billed.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._CurrencyOptiontoPremium">
<summary>
Code of the currency option in which the policy premium is billed.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._CurrencyOptionToTax">
<summary>
Code of the currency option in which the policy tax is billed.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._ProductVersion">
<summary>
Product version number.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._RenewalOptionForCertificates">
<summary>
Renewal option for certificates of a group.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._WindowForReportingValues">
<summary>
Logical code of the window to be used to report values.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._MaximumNumberOfInsuredPersons">
<summary>
Maximum number of insured that may be included in the policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._MinimumNumberOfInsuredPersons">
<summary>
Minimum number of insured that may be included in the policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._Payer">
<summary>
Holder of the bills (payer option).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._DaysOfPermanencePro">
<summary>
Maximum number of days that a quotation or application may remain stored in the system.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._Installments">
<summary>
Number of installments to pay the premium.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._ProductAllowsDivisionsForGroups">
<summary>
The product allows divisions within the group.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._PaymentMethod">
<summary>
Code of the payment method.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._BillDueDate">
<summary>
Due date of the premium bill.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._MaximumPeriodForReinstatement">
<summary>
Maximum period for the reinstatement of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._DirectDebitType">
<summary>
Type of direct debit.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._GuaranteedUnderwritingLimit">
<summary>
Indicator of calculation of Guaranteed Underwriting Limit.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._IndemnityGracePeriod">
<summary>
Grace period of indemnity.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._ReinstatementAlowed">
<summary>
Indicator to allow policy reinstatement.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._EffectiveDateCanBeSet">
<summary>
It indicates that it is possible to set the effective period .
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._ClaimsNoticeDays">
<summary>
Maximum number of days for making a claim after the loss.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._DaysOfPermanenceQuo">
<summary>
Number of days to be added in order to obtain the maximum date of permanence of a quotation.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._ClaimsPaymentDays">
<summary>
Maximum number of days to pay or settle a claim.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._MonthsToLapse">
<summary>
Months of expiration to automatic lapse.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._Firstpay">
<summary>
First Premium Indicator
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._RoutineForAutomaticReinstatement">
<summary>
Name of the routine that will verify if the policy/certificate allows to reinstate automatically.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._PolicyIDedAfterApplication">
<summary>
It indicates that the policy number is assigned according to the application number.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._ProrateFirstBillToGoWithMonth">
<summary>
It indicates if the first bill of the policy should be prorated when the effective date does not corresponds to the first of the month.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._Approval">
<summary>
Official approval number by Insurances Authority.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._AutomaticUnderwriting">
<summary>
Indicator of automatic underwriting.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._CriteriaToDetermineDuplicationInPayroll">
<summary>
Criteria to determine duplication in payroll.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._MinimumNumberOfDaysBetweenFirstAndSecondInstallment">
<summary>
Minimum number of days between the first and second installment.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._MaximumPeriodForAutomaticRehabilitation">
<summary>
Maximum Period for automatic rehabilitation of the Policy / Certificate
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._GenerateSecondBIllAtIssueTime">
<summary>
Indicator to be generated the second receipt at the time the policy was issued. .
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._RecalculatePremiumUsingIssueDate">
<summary>
Indicator the premium must be calculate using date of issue.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._CancellationMonths">
<summary>
Cancellation months. Indicates the number of months that must elapse from the final receipt for this to be overridden.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._BillCancellationIndicator">
<summary>
Bill cancellation. Indicates if applicable annular outstanding receipts, if they were not paid after a period.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._WindowIsPartOfQuotationIndicator">
<summary>
Indicates whether the window is part of the quotation..
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._SMASSIVE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._MaintainTariffOfquote">
<summary>
Indicator of which the product requires to maintain the tariff of propose quote.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._GracePeriodExpiredCollection">
<summary>
Grace Period Expired collection
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._GracePeriodEarlyCollection">
<summary>
Grace Period Early collection
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._NREACTPERIOD_AUT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._SREACTIVATION">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._NREACTPERIOD">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._SROUTREACT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._UserLevelChangeAutoAnswer">
<summary>
Level of the user to change auto answers in the treatment of policies.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._ReportNamePolicyDocument">
<summary>
Report Name associated with the policy document
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._CoverageCalculationByRatingService">
<summary>
Indicates coverage calculation used SERVICE RATING.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._RoutineWarningCharges">
<summary>
Routine associated with a warning message in the process of generation charges.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._RoutineValidationCover">
<summary>
Routine massive validation coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._CurrencyGenerationCurrency">
<summary>
Currency in which the charges were generated for the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._BasicPeriod">
<summary>
Period of validity of the basic policy for the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._ChangeOfficialPolicyNumber">
<summary>
Indicator for changing the official policy number annually
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._FrequencyRefreshIndex">
<summary>
Frequency refresh index
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._CodeOfProvidedID">
<summary>
Code of Provided ID
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._ProvidedAssignedDate">
<summary>
Provided assigned date
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._MinimalMandatoriesModules">
<summary>
Indicates the minimal mandatories modules by policy
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._AdvancedBillingCondition">
<summary>
Advanced billing’s condition
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._DividendPercentage">
<summary>
Percentage to be applied to policy result.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._DividendRoutine">
<summary>
Routine name that calculates the percentage to be applied to policy result.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._ExpensesReserveRate">
<summary>
Interest rate for the calculation of expenses reserve.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._RenewalWithoutSANS">
<summary>
Indicates if the policy/certificate will be renewed no matter the result of the SANS check
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._ConversionIndicator">
<summary>
Indicates that the certificate become an individual policy
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._NDAYS_DELAY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._NTYPECOLLECT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._NIBNRDIVIDENDIND">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._NGROUPEXP">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._NRETAINEARNPERC">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._NHOUREXPIR">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._NPRORATEFACT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._SINDCMP">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._NPRODINTBONUS">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._NORIGINALCOMP">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._NCOMSCHEMETYPE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._SeriesUsedReceiptStamped">
<summary>
Series to be used for the receipt stamped
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._KeyCodeServiceProduct">
<summary>
Key code of the service or product
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._ClientCodeCompanyWhomStampCFDI">
<summary>
Client code of the Company whom stamp the CFDI
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._CodeSchemeStamp">
<summary>
Code of the scheme of stamp
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._TraditionalLifeIncomingsAreStampedIndividually">
<summary>
Indicator that non-traditional life incomings are stamped individually
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._IndicatorWhoAllowSendAccountStatementsPrinter">
<summary>
Indicator who allow send the account statements to the printer
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._DurationType">
<summary>
Duration Type
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._TypeAccountsManagesProduct">
<summary>
Type of Accounts manages the product
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._MaximumDaysAllowed">
<summary>
Maximum days allowed
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._DaysGraceReceiptEmission">
<summary>
Days of grace for the receipt of Emission
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._GraceDaysRenewalReceipt">
<summary>
Grace days for the renewal receipt
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._Commercialproductocode">
<summary>
Commercial Product Code
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._SponsorCode">
<summary>
Code that identifies the authorized commercial partner to market the product
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._DistributionChannel">
<summary>
Code of distribution channel
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._ModulesAvailableByCommercialActivityCollection">
<summary>
Modules available by Commercial Activity
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation._SiCoverGes_APLCollection">
<summary>
SICOVERGES APL
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'PRODUCT.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'PRODUCT.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'PRODUCT.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.CancellationNotice">
<summary>
Number of days of notice of cancellation of the policy. (NCANCNOTI)..
</summary>
<remarks>Data-source is 'PRODUCT.NCANCNOTI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.TypeOfBillForGroups">
<summary>
Type of bill for groups. (SCOLINVOT)..
</summary>
<remarks>Data-source is 'PRODUCT.SCOLINVOT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.DaysForClaimLapse">
<summary>
Number of days to be added to obtain the date when the claim lapses, counting from the date when the claim was made, if the documentation is not received. (NCLAIM_PRES)..
</summary>
<remarks>Data-source is 'PRODUCT.NCLAIM_PRES'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'PRODUCT.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.Copies">
<summary>
Default value for the number of copies to be printed (NCOPIES)..
</summary>
<remarks>Data-source is 'PRODUCT.NCOPIES'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.ReinsuranceOptionInCaseOfCumulus">
<summary>
Reinsurance processing in case of cumulus (SCUMREINT)..
</summary>
<remarks>Data-source is 'PRODUCT.SCUMREINT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.ReinsuranceOptionInCaseOfCumulusEnum">
<summary>
Reinsurance processing in case of cumulus
</summary>
<remarks>This property use a enumeration based on property 'ReinsuranceOptionInCaseOfCumulus'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.ReinsuranceOptionInCaseOfCumulusEnumText">
<summary>
Reinsurance processing in case of cumulus
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.MinimumNumberOfCertificates">
<summary>
Minimum number of certificates required. (NQ_CERTIF)..
</summary>
<remarks>Data-source is 'PRODUCT.NQ_CERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.TypeOfCumulus">
<summary>
Type of cumulus related to the treaty (SCUMULTYP)..
</summary>
<remarks>Data-source is 'PRODUCT.SCUMULTYP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.TypeOfCumulusEnum">
<summary>
Type of cumulus related to the treaty
</summary>
<remarks>This property use a enumeration based on property 'TypeOfCumulus'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.TypeOfCumulusEnumText">
<summary>
Type of cumulus related to the treaty
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.ReportingValuesIndicator">
<summary>
It indicates that the policy must report values. (SDECLAAUT)..
</summary>
<remarks>Data-source is 'PRODUCT.SDECLAAUT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.OptionForClausesInGroups">
<summary>
It indicates how clauses will be processed in groups. (STYP_CLAUSE)..
</summary>
<remarks>Data-source is 'PRODUCT.STYP_CLAUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.OptionForClausesInGroupsEnum">
<summary>
It indicates how clauses will be processed in groups.
</summary>
<remarks>This property use a enumeration based on property 'OptionForClausesInGroups'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.OptionForClausesInGroupsEnumText">
<summary>
It indicates how clauses will be processed in groups.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.OptionForExtraPremiumAndDiscountsInGroups">
<summary>
It indicates how the extra-premiums/discounts will be processed in groups. (STYP_DISCXP)..
</summary>
<remarks>Data-source is 'PRODUCT.STYP_DISCXP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.OptionForExtraPremiumAndDiscountsInGroupsEnum">
<summary>
It indicates how the extra-premiums/discounts will be processed in groups.
</summary>
<remarks>This property use a enumeration based on property 'OptionForExtraPremiumAndDiscountsInGroups'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.OptionForExtraPremiumAndDiscountsInGroupsEnumText">
<summary>
It indicates how the extra-premiums/discounts will be processed in groups.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.OptionOfCoveragesForGroups">
<summary>
It indicates how coverages will be processed for groups. (STYP_MODULE)..
</summary>
<remarks>Data-source is 'PRODUCT.STYP_MODULE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.OptionOfCoveragesForGroupsEnum">
<summary>
It indicates how coverages will be processed for groups.
</summary>
<remarks>This property use a enumeration based on property 'OptionOfCoveragesForGroups'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.OptionOfCoveragesForGroupsEnumText">
<summary>
It indicates how coverages will be processed for groups.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.DurationInMonths">
<summary>
Number of months of duration, used to calculate the policy effective period. (NDURATION)..
</summary>
<remarks>Data-source is 'PRODUCT.NDURATION'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.ProductAllowsGroups">
<summary>
Group policies allowed. (SGROUPIND)..
</summary>
<remarks>Data-source is 'PRODUCT.SGROUPIND'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.ProductAllowsIndividualPolicies">
<summary>
Individual policies are allowed in the product. (SINDIVIND)..
</summary>
<remarks>Data-source is 'PRODUCT.SINDIVIND'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.ProductAcceptsMultilocationPolicies">
<summary>
Multiple-location policies allowed. (SMULTIIND)..
</summary>
<remarks>Data-source is 'PRODUCT.SMULTIIND'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'PRODUCT.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.PaymentFrequency">
<summary>
Frequency of premium payment. (NPAYFREQ)..
</summary>
<remarks>Data-source is 'PRODUCT.NPAYFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.PaymentFrequencyEnum">
<summary>
Frequency of premium payment.
</summary>
<remarks>This property use a enumeration based on property 'PaymentFrequency'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.PaymentFrequencyEnumText">
<summary>
Frequency of premium payment.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.PolicyType">
<summary>
Policy type. (SPOLITYPE)..
</summary>
<remarks>Data-source is 'PRODUCT.SPOLITYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.PolicyTypeEnum">
<summary>
Policy type.
</summary>
<remarks>This property use a enumeration based on property 'PolicyType'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.PolicyTypeEnumText">
<summary>
Policy type.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.MaximumNumberOfCurrencies">
<summary>
Maximum number of currencies. (NQMAXCURR)..
</summary>
<remarks>Data-source is 'PRODUCT.NQMAXCURR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.CededReinsuranceType">
<summary>
Type of reinsurance ceded for groups (by certificate or group). (SREINTYPE)..
</summary>
<remarks>Data-source is 'PRODUCT.SREINTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.AutomaticRenewal">
<summary>
Automatic renewal indicator. (SRENEWAL)..
</summary>
<remarks>Data-source is 'PRODUCT.SRENEWAL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.OptionToApplyIndexation">
<summary>
Option to apply indexation (SREVALAPL)..
</summary>
<remarks>Data-source is 'PRODUCT.SREVALAPL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.IndexationPercentage">
<summary>
Fixed percentage of indexation (NREVALRAT)..
</summary>
<remarks>Data-source is 'PRODUCT.NREVALRAT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.IndexationType">
<summary>
Type of indexation (SREVALTYP)..
</summary>
<remarks>Data-source is 'PRODUCT.SREVALTYP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.CurrencyOptionToCommission">
<summary>
Code of the currency option in which the policy commission is billed. (SSTYLE_COMM)..
</summary>
<remarks>Data-source is 'PRODUCT.SSTYLE_COMM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.CurrencyOptiontoPremium">
<summary>
Code of the currency option in which the policy premium is billed. (SSTYLE_PREM)..
</summary>
<remarks>Data-source is 'PRODUCT.SSTYLE_PREM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.CurrencyOptionToTax">
<summary>
Code of the currency option in which the policy tax is billed. (SSTYLE_TAX)..
</summary>
<remarks>Data-source is 'PRODUCT.SSTYLE_TAX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.ProductVersion">
<summary>
Product version number. (NTARIFF)..
</summary>
<remarks>Data-source is 'PRODUCT.NTARIFF'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.RenewalOptionForCertificates">
<summary>
Renewal option for certificates of a group. (STIMEREN)..
</summary>
<remarks>Data-source is 'PRODUCT.STIMEREN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'PRODUCT.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.WindowForReportingValues">
<summary>
Logical code of the window to be used to report values. (SWIN_DECLAR)..
</summary>
<remarks>Data-source is 'PRODUCT.SWIN_DECLAR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.MaximumNumberOfInsuredPersons">
<summary>
Maximum number of insured that may be included in the policy. (NINSMAXIQ)..
</summary>
<remarks>Data-source is 'PRODUCT.NINSMAXIQ'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.MinimumNumberOfInsuredPersons">
<summary>
Minimum number of insured that may be included in the policy. (NINSMINIQ)..
</summary>
<remarks>Data-source is 'PRODUCT.NINSMINIQ'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.Payer">
<summary>
Holder of the bills (payer option). (SHOLDER)..
</summary>
<remarks>Data-source is 'PRODUCT.SHOLDER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.DaysOfPermanencePro">
<summary>
Maximum number of days that a quotation or application may remain stored in the system. (NQDAYS_PRO)..
</summary>
<remarks>Data-source is 'PRODUCT.NQDAYS_PRO'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.Installments">
<summary>
Number of installments to pay the premium. (NQUOTA)..
</summary>
<remarks>Data-source is 'PRODUCT.NQUOTA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.ProductAllowsDivisionsForGroups">
<summary>
The product allows divisions within the group. (SGROUPSI)..
</summary>
<remarks>Data-source is 'PRODUCT.SGROUPSI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.PaymentMethod">
<summary>
Code of the payment method. (NWAY_PAY)..
</summary>
<remarks>Data-source is 'PRODUCT.NWAY_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.BillDueDate">
<summary>
Due date of the premium bill. (NBILL_DAY)..
</summary>
<remarks>Data-source is 'PRODUCT.NBILL_DAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.MaximumPeriodForReinstatement">
<summary>
Maximum period for the reinstatement of the policy/certificate. (NREHABPERIOD)..
</summary>
<remarks>Data-source is 'PRODUCT.NREHABPERIOD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.DirectDebitType">
<summary>
Type of direct debit. (STYP_DOM)..
</summary>
<remarks>Data-source is 'PRODUCT.STYP_DOM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.GuaranteedUnderwritingLimit">
<summary>
Indicator of calculation of Guaranteed Underwriting Limit. (SLEG)..
</summary>
<remarks>Data-source is 'PRODUCT.SLEG'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.IndemnityGracePeriod">
<summary>
Grace period of indemnity. (NNOTCANCELDAY)..
</summary>
<remarks>Data-source is 'PRODUCT.NNOTCANCELDAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.ReinstatementAlowed">
<summary>
Indicator to allow policy reinstatement. (SREINST)..
</summary>
<remarks>Data-source is 'PRODUCT.SREINST'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.EffectiveDateCanBeSet">
<summary>
It indicates that it is possible to set the effective period . (SDATECOLL)..
</summary>
<remarks>Data-source is 'PRODUCT.SDATECOLL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.ClaimsNoticeDays">
<summary>
Maximum number of days for making a claim after the loss. (NCLAIM_NOTICE)..
</summary>
<remarks>Data-source is 'PRODUCT.NCLAIM_NOTICE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.DaysOfPermanenceQuo">
<summary>
Number of days to be added in order to obtain the maximum date of permanence of a quotation. (NQDAYS_QUO)..
</summary>
<remarks>Data-source is 'PRODUCT.NQDAYS_QUO'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.ClaimsPaymentDays">
<summary>
Maximum number of days to pay or settle a claim. (NCLAIM_PAY)..
</summary>
<remarks>Data-source is 'PRODUCT.NCLAIM_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.MonthsToLapse">
<summary>
Months of expiration to automatic lapse. (NMONTH_SURR)..
</summary>
<remarks>Data-source is 'PRODUCT.NMONTH_SURR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.Firstpay">
<summary>
First Premium Indicator (SFIRST_PAY)..
</summary>
<remarks>Data-source is 'PRODUCT.SFIRST_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.RoutineForAutomaticReinstatement">
<summary>
Name of the routine that will verify if the policy/certificate allows to reinstate automatically. (SROUTAUT_R)..
</summary>
<remarks>Data-source is 'PRODUCT.SROUTAUT_R'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.PolicyIDedAfterApplication">
<summary>
It indicates that the policy number is assigned according to the application number. (SNUMPROP)..
</summary>
<remarks>Data-source is 'PRODUCT.SNUMPROP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.ProrateFirstBillToGoWithMonth">
<summary>
It indicates if the first bill of the policy should be prorated when the effective date does not corresponds to the first of the month. (SFRACRECEIP)..
</summary>
<remarks>Data-source is 'PRODUCT.SFRACRECEIP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.Approval">
<summary>
Official approval number by Insurances Authority. (SCONDSVS)..
</summary>
<remarks>Data-source is 'PRODUCT.SCONDSVS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.AutomaticUnderwriting">
<summary>
Indicator of automatic underwriting. (SAUTO_SUSC)..
</summary>
<remarks>Data-source is 'PRODUCT.SAUTO_SUSC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.CriteriaToDetermineDuplicationInPayroll">
<summary>
Criteria to determine duplication in payroll. (NREPINSURED)..
</summary>
<remarks>Data-source is 'PRODUCT.NREPINSURED'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.CriteriaToDetermineDuplicationInPayrollEnum">
<summary>
Criteria to determine duplication in payroll.
</summary>
<remarks>This property use a enumeration based on property 'CriteriaToDetermineDuplicationInPayroll'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.CriteriaToDetermineDuplicationInPayrollEnumText">
<summary>
Criteria to determine duplication in payroll.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.MinimumNumberOfDaysBetweenFirstAndSecondInstallment">
<summary>
Minimum number of days between the first and second installment. (NQDAYS_DIFQUO)..
</summary>
<remarks>Data-source is 'PRODUCT.NQDAYS_DIFQUO'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.MaximumPeriodForAutomaticRehabilitation">
<summary>
Maximum Period for automatic rehabilitation of the Policy / Certificate (NREHABPERIOD_AUT)..
</summary>
<remarks>Data-source is 'PRODUCT.NREHABPERIOD_AUT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.GenerateSecondBIllAtIssueTime">
<summary>
Indicator to be generated the second receipt at the time the policy was issued. . (SRECSEC)..
</summary>
<remarks>Data-source is 'PRODUCT.SRECSEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.RecalculatePremiumUsingIssueDate">
<summary>
Indicator the premium must be calculate using date of issue. (SRETARIF)..
</summary>
<remarks>Data-source is 'PRODUCT.SRETARIF'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.CancellationMonths">
<summary>
Cancellation months. Indicates the number of months that must elapse from the final receipt for this to be overridden. (NMONTH_SETPR)..
</summary>
<remarks>Data-source is 'PRODUCT.NMONTH_SETPR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.BillCancellationIndicator">
<summary>
Bill cancellation. Indicates if applicable annular outstanding receipts, if they were not paid after a period. (SSETPREM)..
</summary>
<remarks>Data-source is 'PRODUCT.SSETPREM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.WindowIsPartOfQuotationIndicator">
<summary>
Indicates whether the window is part of the quotation.. (SLETTER)..
</summary>
<remarks>Data-source is 'PRODUCT.SLETTER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.SMASSIVE">
<summary>
.
</summary>
<remarks>Data-source is 'PRODUCT.SMASSIVE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.MaintainTariffOfquote">
<summary>
Indicator of which the product requires to maintain the tariff of propose quote. (STARQUO_IND)..
</summary>
<remarks>Data-source is 'PRODUCT.STARQUO_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.GracePeriodExpiredCollection">
<summary>
Grace Period Expired collection (NPAYABLE)..
</summary>
<remarks>Data-source is 'PRODUCT.NPAYABLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.GracePeriodEarlyCollection">
<summary>
Grace Period Early collection (NADVANCE)..
</summary>
<remarks>Data-source is 'PRODUCT.NADVANCE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.NREACTPERIOD_AUT">
<summary>
.
</summary>
<remarks>Data-source is 'PRODUCT.NREACTPERIOD_AUT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.SREACTIVATION">
<summary>
.
</summary>
<remarks>Data-source is 'PRODUCT.SREACTIVATION'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.NREACTPERIOD">
<summary>
.
</summary>
<remarks>Data-source is 'PRODUCT.NREACTPERIOD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.SROUTREACT">
<summary>
.
</summary>
<remarks>Data-source is 'PRODUCT.SROUTREACT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.UserLevelChangeAutoAnswer">
<summary>
Level of the user to change auto answers in the treatment of policies. (NCHUSERLEV)..
</summary>
<remarks>Data-source is 'PRODUCT.NCHUSERLEV'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.ReportNamePolicyDocument">
<summary>
Report Name associated with the policy document (SNAME_REPORT)..
</summary>
<remarks>Data-source is 'PRODUCT.SNAME_REPORT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.CoverageCalculationByRatingService">
<summary>
Indicates coverage calculation used SERVICE RATING. (SRATINGSERVICEUSING)..
</summary>
<remarks>Data-source is 'PRODUCT.SRATINGSERVICEUSING'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.RoutineWarningCharges">
<summary>
Routine associated with a warning message in the process of generation charges. (SROU_WARNING_CHARG)..
</summary>
<remarks>Data-source is 'PRODUCT.SROU_WARNING_CHARG'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.RoutineValidationCover">
<summary>
Routine massive validation coverage. (SROU_COVER)..
</summary>
<remarks>Data-source is 'PRODUCT.SROU_COVER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.CurrencyGenerationCurrency">
<summary>
Currency in which the charges were generated for the product. (NCURR_RECEIPT)..
</summary>
<remarks>Data-source is 'PRODUCT.NCURR_RECEIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.BasicPeriod">
<summary>
Period of validity of the basic policy for the product. (NPERBASIC)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.NPERBASIC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.ChangeOfficialPolicyNumber">
<summary>
Indicator for changing the official policy number annually (SCHANGEOFFPOLNUM)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.SCHANGEOFFPOLNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.FrequencyRefreshIndex">
<summary>
Frequency refresh index (NFREQINDEX)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.NFREQINDEX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.CodeOfProvidedID">
<summary>
Code of Provided ID (SPROVIDEID)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.SPROVIDEID'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.ProvidedAssignedDate">
<summary>
Provided assigned date (DPROVIDEDATE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.DPROVIDEDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.MinimalMandatoriesModules">
<summary>
Indicates the minimal mandatories modules by policy (NMODULEMIN)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.NMODULEMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.AdvancedBillingCondition">
<summary>
Advanced billing’s condition (NBILLADVANCECOND)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.NBILLADVANCECOND'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.DividendPercentage">
<summary>
Percentage to be applied to policy result. (NDIVIDENDPERC)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.NDIVIDENDPERC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.DividendRoutine">
<summary>
Routine name that calculates the percentage to be applied to policy result. (SROUDIVIDPERC)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.SROUDIVIDPERC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.ExpensesReserveRate">
<summary>
Interest rate for the calculation of expenses reserve. (NRATE)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.RenewalWithoutSANS">
<summary>
Indicates if the policy/certificate will be renewed no matter the result of the SANS check (SSANSRENEWAL)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.SSANSRENEWAL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.ConversionIndicator">
<summary>
Indicates that the certificate become an individual policy (SCONVERT)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.SCONVERT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.NDAYS_DELAY">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.NDAYS_DELAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.NTYPECOLLECT">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.NTYPECOLLECT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.NIBNRDIVIDENDIND">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.NIBNRDIVIDENDIND'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.NGROUPEXP">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.NGROUPEXP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.NRETAINEARNPERC">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.NRETAINEARNPERC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.NHOUREXPIR">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.NHOUREXPIR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.NPRORATEFACT">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.NPRORATEFACT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.SINDCMP">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.SINDCMP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.NPRODINTBONUS">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.NPRODINTBONUS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.NORIGINALCOMP">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.NORIGINALCOMP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.NCOMSCHEMETYPE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.NCOMSCHEMETYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.SeriesUsedReceiptStamped">
<summary>
Series to be used for the receipt stamped (NSERIE)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.NSERIE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.KeyCodeServiceProduct">
<summary>
Key code of the service or product (SCFDI_KEY)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.SCFDI_KEY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.ClientCodeCompanyWhomStampCFDI">
<summary>
Client code of the Company whom stamp the CFDI (SCFDICLIENT)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.SCFDICLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.CodeSchemeStamp">
<summary>
Code of the scheme of stamp (NSCHE_CODE)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.NSCHE_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.TraditionalLifeIncomingsAreStampedIndividually">
<summary>
Indicator that non-traditional life incomings are stamped individually (SSTAMPVULES)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.SSTAMPVULES'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.IndicatorWhoAllowSendAccountStatementsPrinter">
<summary>
Indicator who allow send the account statements to the printer (SACCSTAMP)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.SACCSTAMP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.DurationType">
<summary>
Duration Type (STYPEDURCOMISS)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.STYPEDURCOMISS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.TypeAccountsManagesProduct">
<summary>
Type of Accounts manages the product (NTYPEACCOUNT)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.NTYPEACCOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.MaximumDaysAllowed">
<summary>
Maximum days allowed (NPRODUCTMAXDAYS)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.NPRODUCTMAXDAYS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.DaysGraceReceiptEmission">
<summary>
Days of grace for the receipt of Emission (NLIMITDAY_EMI)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.NLIMITDAY_EMI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.GraceDaysRenewalReceipt">
<summary>
Grace days for the renewal receipt (NLIMITDAY_REN)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.NLIMITDAY_REN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.Commercialproductocode">
<summary>
Commercial Product Code (SCOMERPRODUCT)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.SCOMERPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.SponsorCode">
<summary>
Code that identifies the authorized commercial partner to market the product (SCLIENT)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.DistributionChannel">
<summary>
Code of distribution channel (NSELLCHANNEL)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT.NSELLCHANNEL'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.NewModulesAvailableByCommercialActivityCollectionInstance">
<summary>
Initializes the 'ModulesAvailableByCommercialActivityCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.NewModulesAvailableByCommercialActivityItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ModulesAvailableByCommercialActivityCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ModulesAvailableByCommercialActivity' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.ModulesAvailableByCommercialActivityCollection">
<summary>
Modules available by Commercial Activity collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.NewSiCoverGes_APLCollectionInstance">
<summary>
Initializes the 'SiCoverGes_APLCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.NewSiCoverGes_APLItem(System.Boolean)">
<summary>
Add a new item to the collection of 'SiCoverGes_APLCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'SiCoverGes_APL' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.SiCoverGes_APLCollection">
<summary>
SICOVERGES APL collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.Compare(InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ProductGeneralInformationItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.TypeOfBillForGroupsDescription">
 <summary>
 Type of bill for groups.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE50'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.ReinsuranceOptionInCaseOfCumulusDescription">
 <summary>
 Reinsurance processing in case of cumulus
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE90'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.TypeOfCumulusDescription">
 <summary>
 Type of cumulus related to the treaty
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE79'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.OptionForClausesInGroupsDescription">
 <summary>
 It indicates how clauses will be processed in groups.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE92'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.OptionForExtraPremiumAndDiscountsInGroupsDescription">
 <summary>
 It indicates how the extra-premiums/discounts will be processed in groups.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE92'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.OptionOfCoveragesForGroupsDescription">
 <summary>
 It indicates how coverages will be processed for groups.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE92'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.PaymentFrequencyDescription">
 <summary>
 Frequency of premium payment.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE36'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.CededReinsuranceTypeDescription">
 <summary>
 Type of reinsurance ceded for groups (by certificate or group).
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE8'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.OptionToApplyIndexationDescription">
 <summary>
 Option to apply indexation
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE154'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.IndexationTypeDescription">
 <summary>
 Type of indexation
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE46'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.CurrencyOptionToCommissionDescription">
 <summary>
 Code of the currency option in which the policy commission is billed.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE161'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.CurrencyOptiontoPremiumDescription">
 <summary>
 Code of the currency option in which the policy premium is billed.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE161'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.CurrencyOptionToTaxDescription">
 <summary>
 Code of the currency option in which the policy tax is billed.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE161'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.RenewalOptionForCertificatesDescription">
 <summary>
 Renewal option for certificates of a group.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE25'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.PayerDescription">
 <summary>
 Holder of the bills (payer option).
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE45'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.PaymentMethodDescription">
 <summary>
 Code of the payment method.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5002'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.CriteriaToDetermineDuplicationInPayrollDescription">
 <summary>
 Criteria to determine duplication in payroll.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5677'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformation.DistributionChannelDescription">
 <summary>
 Code of distribution channel
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5532'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformationCollection">
 <summary>
 Collection for ProductGeneralInformation class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformationCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformationCollection.AddProductGeneralInformation">
 <summary>
 Add an instance of class 'ProductGeneralInformation' in the ProductGeneralInformationCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformationCollection.Compare(InMotionGIT.Product.Entity.Contracts.ProductGeneralInformationCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformationCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformationCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGeneralInformationCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue">
 <summary>
 Table of guaranteed value of a product.
 </summary>
<remarks>Data-source is 'TAB_GUARANTVAL'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.CreateNewProductGuaranteedValue">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._DurationOfPayments">
<summary>
Duration of the payments.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._Year">
<summary>
Year of the non-forfeiture values.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._Age">
<summary>
Actuarial age of the insured person.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._Month">
<summary>
Actuarial month.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._DeferredValue">
<summary>
Deferred value for this year.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._DeferredValueType">
<summary>
Type of deferred value
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._ExtendedYears">
<summary>
Extended years related to the year of the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._SurrenderValue">
<summary>
Surrender value for the year.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._ReducedPaidUpAmountForDeath">
<summary>
Reduced insured amount of the death coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._AssuredSex">
<summary>
Sex of the Insured Values according to Table18.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._NMODULEC">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._NCOVER">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._NINSUR_TIME">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._NPRO_MONTH">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._NPRO_DAY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._SSMOKING">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAB_GUARANTVAL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAB_GUARANTVAL.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.DurationOfPayments">
<summary>
Duration of the payments. (NDURPAY)..
</summary>
<remarks>Data-source is 'TAB_GUARANTVAL.NDURPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.Year">
<summary>
Year of the non-forfeiture values. (NYEAR)..
</summary>
<remarks>Data-source is 'TAB_GUARANTVAL.NYEAR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.Age">
<summary>
Actuarial age of the insured person. (NAGE)..
</summary>
<remarks>Data-source is 'TAB_GUARANTVAL.NAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.Month">
<summary>
Actuarial month. (NMONTH)..
</summary>
<remarks>Data-source is 'TAB_GUARANTVAL.NMONTH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAB_GUARANTVAL.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'TAB_GUARANTVAL.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_GUARANTVAL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.DeferredValue">
<summary>
Deferred value for this year. (NDEFAMOUNT)..
</summary>
<remarks>Data-source is 'TAB_GUARANTVAL.NDEFAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.DeferredValueType">
<summary>
Type of deferred value (NDEFERRED)..
</summary>
<remarks>Data-source is 'TAB_GUARANTVAL.NDEFERRED'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.ExtendedYears">
<summary>
Extended years related to the year of the record. (NPRO_YEAR)..
</summary>
<remarks>Data-source is 'TAB_GUARANTVAL.NPRO_YEAR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.SurrenderValue">
<summary>
Surrender value for the year. (NRESC_VAL)..
</summary>
<remarks>Data-source is 'TAB_GUARANTVAL.NRESC_VAL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.ReducedPaidUpAmountForDeath">
<summary>
Reduced insured amount of the death coverage. (NSALDVALKM)..
</summary>
<remarks>Data-source is 'TAB_GUARANTVAL.NSALDVALKM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_GUARANTVAL.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAB_GUARANTVAL.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.AssuredSex">
<summary>
Sex of the Insured Values according to Table18. (SSEXCLIEN)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_GUARANTVAL.SSEXCLIEN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.AssuredSexEnum">
<summary>
Sex of the Insured Values according to Table18.
</summary>
<remarks>This property use a enumeration based on property 'AssuredSex'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.AssuredSexEnumText">
<summary>
Sex of the Insured Values according to Table18.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.NMODULEC">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_GUARANTVAL.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.NCOVER">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_GUARANTVAL.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.NINSUR_TIME">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_GUARANTVAL.NINSUR_TIME'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.NPRO_MONTH">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_GUARANTVAL.NPRO_MONTH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.NPRO_DAY">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_GUARANTVAL.NPRO_DAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.SSMOKING">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_GUARANTVAL.SSMOKING'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.SSMOKINGEnum">
<summary>

</summary>
<remarks>This property use a enumeration based on property 'SSMOKING'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.SSMOKINGEnumText">
<summary>

</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.Compare(InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ProductGuaranteedValueItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.DeferredValueTypeDescription">
 <summary>
 Type of deferred value
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5586'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValue.AssuredSexDescription">
 <summary>
 Sex of the Insured Values according to Table18.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE18'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValueCollection">
 <summary>
 Collection for ProductGuaranteedValue class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValueCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValueCollection.AddProductGuaranteedValue">
 <summary>
 Add an instance of class 'ProductGuaranteedValue' in the ProductGuaranteedValueCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValueCollection.Compare(InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValueCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValueCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValueCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductGuaranteedValueCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ProductionPeriod">
 <summary>
 Production periods
 </summary>
<remarks>Data-source is 'PRODUCTIONPERIODS'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.CreateNewProductionPeriod">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductionPeriod._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductionPeriod._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductionPeriod._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductionPeriod._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductionPeriod._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductionPeriod._TypeOfProductionPeriod">
<summary>
Type of production period
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductionPeriod._TypeOfEffectiveDate">
<summary>
Type of effective date
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductionPeriod._ComputerDate">
<summary>
Computer date.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductionPeriod._UserCode">
<summary>
Code of the user creating or updating the record
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductionPeriod._ProductionPeriodsDet">
<summary>
Details of production periods
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.TypeOfProductionPeriod">
<summary>
Type of production period (NPRODPERIOD)..
</summary>
<remarks>Data-source is 'PRODUCTIONPERIODS.NPRODPERIOD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.TypeOfEffectiveDate">
<summary>
Type of effective date (NEFFECDATETYPE)..
</summary>
<remarks>Data-source is 'PRODUCTIONPERIODS.NEFFECDATETYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.ComputerDate">
<summary>
Computer date. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'PRODUCTIONPERIODS.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.UserCode">
<summary>
Code of the user creating or updating the record (NUSERCODE)..
</summary>
<remarks>Data-source is 'PRODUCTIONPERIODS.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.NewProductionPeriodsDetInstance">
<summary>
Initializes the 'ProductionPeriodsDet' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.NewProductionPeriodsDetItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ProductionPeriodsDet', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ProductionPeriodsDet' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.ProductionPeriodsDet">
<summary>
Details of production periods collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.Compare(InMotionGIT.Product.Entity.Contracts.ProductionPeriod,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ProductionPeriodItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductionPeriod.TypeOfProductionPeriodDescription">
 <summary>
 Type of production period
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6768' on the table 'TABLE6768'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ProductionPeriodCollection">
 <summary>
 Collection for ProductionPeriod class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriodCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriodCollection.AddProductionPeriod">
 <summary>
 Add an instance of class 'ProductionPeriod' in the ProductionPeriodCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriodCollection.Compare(InMotionGIT.Product.Entity.Contracts.ProductionPeriodCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductionPeriodCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriodCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriodCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet">
 <summary>
 Details of production periods
 </summary>
<remarks>Data-source is 'PRODUCTIONPERIODSDET'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.CreateNewProductionPeriodsDet">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet._TypeOfProductionPeriod">
<summary>
Type of production period
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet._ProductionPeriod">
<summary>
Production period
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet._YearOfThetTypeOfProductionPeriod">
<summary>
Year of the tType of production
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet._PeriodInitialDate">
<summary>
Period initial date
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet._PeriodIEndingDate">
<summary>
Period ending date
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet._EffectDate">
<summary>
Date from which the record is valid
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet._ComputerDate">
<summary>
Computer date.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet._UserCode">
<summary>
Code of the user creating or updating the record
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.TypeOfProductionPeriod">
<summary>
Type of production period (NPRODPERIOD)..
</summary>
<remarks>Data-source is 'PRODUCTIONPERIODSDET.NPRODPERIOD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.ProductionPeriod">
<summary>
Production period (NPERIOD)..
</summary>
<remarks>Data-source is 'PRODUCTIONPERIODSDET.NPERIOD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.YearOfThetTypeOfProductionPeriod">
<summary>
Year of the tType of production (NYEAR)..
</summary>
<remarks>Data-source is 'PRODUCTIONPERIODSDET.NYEAR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.PeriodInitialDate">
<summary>
Period initial date (DDATEFROM)..
</summary>
<remarks>Data-source is 'PRODUCTIONPERIODSDET.DDATEFROM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.PeriodIEndingDate">
<summary>
Period ending date (DDATETO)..
</summary>
<remarks>Data-source is 'PRODUCTIONPERIODSDET.DDATETO'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.EffectDate">
<summary>
Date from which the record is valid (DEFFECDATE)..
</summary>
<remarks>Data-source is 'PRODUCTIONPERIODSDET.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.ComputerDate">
<summary>
Computer date. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'PRODUCTIONPERIODSDET.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.UserCode">
<summary>
Code of the user creating or updating the record (NUSERCODE)..
</summary>
<remarks>Data-source is 'PRODUCTIONPERIODSDET.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.Compare(InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ProductionPeriodsDetItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDet.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDetCollection">
 <summary>
 Collection for ProductionPeriodsDet class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDetCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDetCollection.AddProductionPeriodsDet">
 <summary>
 Add an instance of class 'ProductionPeriodsDet' in the ProductionPeriodsDetCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDetCollection.Compare(InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDetCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDetCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDetCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductionPeriodsDetCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness">
 <summary>
 General information of the life products.
 </summary>
<remarks>Data-source is 'PRODUCT_LI'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.CreateNewProductLifeLineOfBusiness">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._CurrentAccountIndicator">
<summary>
It indicates that the policy will use the client&#39;s current account.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._InterestMode">
<summary>
Modality to charge interest.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MaximumAnnualContributions">
<summary>
Maximum annual amount of contributions.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._JointLifePolicesArePossible">
<summary>
It indicates that joint-life policies can be insured.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._InvestmentOption">
<summary>
Invest only contributions, or dividends plus contributions
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MinimumCashValueToApplyGuaranteedInterest">
<summary>
Minimum amount of the cash value to which the guaranteed percentage applies.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MinimumGuaranteedPercentage">
<summary>
Minimum percentage guaranteed in investment profits.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._ExcessGuaranteedPercenage">
<summary>
Guaranteed percentage on the excess of the minimum effective value.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._ChargeForPartialSurrenderBelowMinimumAllowed">
<summary>
Percentage to be applied as a charge when a partial surrender is performed and the cash value is smaller than the &#39;minimum cash value&#39; required.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._PaymentByRefundingAllPremiums">
<summary>
It indicates that the claims may be paid in the form of refunding all premiums.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._RoutineOfClaimPeriodicalPayment">
<summary>
Routine of claim payment in the form of periodical payment over a given period.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._RoutineOfClaimPaymentByPureLifeAnnuity">
<summary>
Routine of claim payment in the form of a pure life annuity.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._PaymentByWaivingPremiuns">
<summary>
It indicates that claims may be paid by waiving premiums.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._PaymentByRefundingPaidPremiums">
<summary>
It indicates that the claims may be paid in the form of refunding paid premiums.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._SimplePayment">
<summary>
Claim payment indicator in the form of a simple payment.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._PaymentByPayingTheSurrenderValue">
<summary>
Claim payment indicator in the form of surrender value.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._PaymentByTransferingBonds">
<summary>
Claim payment indicator in the form of transfer of bonds to beneficiaries.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._FrequencyOfInsuranceDeduction">
<summary>
Frequency at which the insurance component is deducted.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._EntryFee">
<summary>
Client entry fee amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MinimumFrequencyForPartialSurrender">
<summary>
Minimum allowed frequency for partial surrenders.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._InsuranceDuration">
<summary>
Fixed duration of the insurance.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._TypeOfInsuranceDuration">
<summary>
Type of duration for the insurance.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._InsuranceDurationVariable">
<summary>
Variable duration indicator of the insurance.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._InterestPercentage">
<summary>
Interest percentage to be applied to loans.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._UseAverageAgeMethod">
<summary>
Indicator for use of average age method to calculate the premium of a group insured.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._UseAveragePremiumMethod">
<summary>
Indicator for use of average premium method to calculate the premium of a group insured.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._UseIndividualPremiumMethod">
<summary>
Indicator for use of individual premium method per insured in the group.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._AcceptanceIndicator">
<summary>
Indicator for sum insured increases accepted.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._NonPeriodicalPayments">
<summary>
Non-periodical payments indicator.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._BaseOfMultipleAmount">
<summary>
Standard amount &#34;multiple of &#34; for non-periodical payments.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MaximumNonStandardAmount">
<summary>
Maximum non-standard amount with non-periodical payment.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MinimumNonStandardAmountNonPeriodical">
<summary>
Minimum non-standard amount with non-periodical payment.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._StandardNonPeriodicalPayments">
<summary>
Standard amount indicator with non-periodical payment.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._InitialPayment">
<summary>
Initial payment at the moment of issuing the policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._BillsToChargeLoanInterests">
<summary>
Type of bill used to charge interests on loans.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._PeriodicalPayments">
<summary>
Periodical payments indicator.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._InsuredAmountMustBeAMultipleOfThisAmount">
<summary>
Standard amount &#34;multiple of&#34; for periodical payment.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._NonPaymentExpensesPercentage">
<summary>
Percentage of expenses for non-payments.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MaximumNonStandardAmountNose">
<summary>
Maximum non-standard amount, periodical payment.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MinimumNonStandardAmountPeriodical">
<summary>
Minimum non-standard amount, periodical payment.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._Indexation">
<summary>
Indexation factor of the periodical payment ( when the type is fixed).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._IndexationType">
<summary>
Type of indexation
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._UniformPeriodicalPayments">
<summary>
Uniform amount indicator with periodical payment.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._ProductClass">
<summary>
Life product class.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MaximumNumberOfBonds">
<summary>
Maximum numbers of bonds allowed (capitalization).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MinimumNumberOfBonds">
<summary>
Minimum numbers of bonds allowed (capitalization).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MaximumRenewalAge">
<summary>
Maximum attained age for renewal purposes.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._CalculationRoutineForMaximumLoan">
<summary>
Calculation routine/formula for maximum loan amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._RoutineExtendedTerm">
<summary>
Calculation routine/formula for reduced duration (extended term).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._RoutinePaidUp">
<summary>
Calculation routine/formula for reduced sum insured amount (paid up).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._RoutineForSurrenderValue">
<summary>
Calculation routine/formula for policy surrender.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MaximumAgeNewpolicies">
<summary>
Maximum age for new policies.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MinimumAgeNewpolicies">
<summary>
Minimum age for new policies.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MinimumPolicyValueToAvoidSurrenderCharges">
<summary>
Minimum effective value that should exist to avoid surrender charges.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._PartialSurrenderAllowed">
<summary>
Partial surrenders allowed indicator.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._TotalSurrenderAllowed">
<summary>
Total surrenders allowed indicator.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._FundsChangesArePossible">
<summary>
The product allows the user to change funds and percentages indicated by default.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MaximumNumberOfFunds">
<summary>
Maximum number of funds allowed.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._ChargeForRedirection">
<summary>
Amount to be charged on account of redirection.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._PeriodWithoutCharge">
<summary>
Period without charge by redirection of units.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MaximumNumberOfRedirections">
<summary>
Maximum number of redirections allowed
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._RedirectionsWithoutCharge">
<summary>
Maximum number of redirections that the client can make without being charged.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._ChargePerSwitch">
<summary>
Amount to be charged for every switch made by the client after having exhausted the maximum number of free switches.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MaximumNumberOfSwitches">
<summary>
Maximum number of switches allowed.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._TypeOfJointLife">
<summary>
Type of joint-life policy first-to-die, or last-to-die.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._SwitchesWithoutCharges">
<summary>
Maximum number of switches that the client may make without being charged.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._PeriodForFreeSwitches">
<summary>
Period without charge by unit switch operations.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._StyleForInvestmentProfits">
<summary>
It indicates how investment profits will be returned.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._BondValue">
<summary>
Value of each bond.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._YearToSubtractToNonSmokers">
<summary>
Years to be subtracted to non-smokers.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._YearToSubtractToWomen">
<summary>
Years to be subtracted to women.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._YearsToAddToSmokers">
<summary>
Years to be added to smokers.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._PremiumType">
<summary>
Type of premium.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._FactorToAdjustDeathRateOfSmokers">
<summary>
Factor to be applied in order to determine the death probability(q(x)) of the insured smoker.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._FactorToAdjustDeathRateOfNonSmokers">
<summary>
Factor to be applied in order to determine the death probability(q(x)) of the insured non-smoker.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._PartialSurrenderCharge">
<summary>
Amount to be charged on account of partial surrender.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MonthlyCharge">
<summary>
Monthly operating charge of current account.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._AdministrativeExpensesPercentage">
<summary>
Percentage of administrative expenses.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MinimumEffectiveMonthsForLoans">
<summary>
Minimum months of effective period of the policy for loans.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MaximumNumberOfLoansPerMonth">
<summary>
Maximum number of loans per month.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MaximumNumberOfLoansPerYear">
<summary>
Maximum number of loans per year.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MinimumLoanAmount">
<summary>
Minimum amount of the loan
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MaximumLoanAmount">
<summary>
Maximum amount of the loan
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MaximumForLoans">
<summary>
Percentage on the mathematical reserves of the policy to calculate the maximum permitted for loans.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._Tolerance">
<summary>
Tolerance percentage permitted.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MinimumEffectiveMonthsForSurrender">
<summary>
Minimum months of effective period of the policy for surrender.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MaximumNumberOfSurrendersPerMonth">
<summary>
Maximum number of surrenders per month.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MaximumNumberOfSurrendersPerYear">
<summary>
Maximum number of surrenders per year.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MinimumPartialSurrender">
<summary>
Minimum amount of partial surrender.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MaximumPartialSurrender">
<summary>
Maximum amount of the partial surrender.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MaximumForSurrender">
<summary>
Percentage on the mathematical reserves of the policy to calculate the maximum permitted for surrender.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MinimumRemainingInsuredAmount">
<summary>
Minimum insured amount remaining after the partial surrender.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._TaxPercentageForLoans">
<summary>
Tax percentage to apply to loans.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MinimumPremium">
<summary>
Amount of minimum premium to be charged.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._NumberOfMonthsOfNegativePolicyValueToCancel">
<summary>
Number of negative policy-value months to cancel the policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._NumberOfMonthsToKeepCalculatingPolicyValueWhenItIsNegative">
<summary>
Number of months to continue calculating the policy value when it is negative.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._FactorOnBasicPremiumForReinstatement">
<summary>
Factor on the basic premium to charge for reinstatement.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._RoutineForCalculationOfAmountOfInterest">
<summary>
Calculation routine of the amount of interest.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._BillingItem">
<summary>
Billing concept code in which the interest total will be grouped .
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._RoutineForCalculationOfInsuredAmount">
<summary>
Calculation routine for sum insured or limit.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MinimumAnnuity">
<summary>
Minimum amount of the annuity.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MaximumAnnuity">
<summary>
Maximum amount of the annuity.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._RoutineOfCapitalizacion">
<summary>
Routine for the calculation of funds capitalization.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._DurationOfPayments">
<summary>
Duration of premium payments.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._DurationOfPaymentsVariable">
<summary>
Variable duration indicator of premium payments.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._TypeOfDurationOfPayments">
<summary>
Type of duration for the payments.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._RoutineForCalculationOfPremium">
<summary>
Calculation routine for premium.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._SavingPercentage">
<summary>
Percentage of each contribution that will be invested in savings (Non-Traditional Life).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._CapitalizationIndexTable">
<summary>
Code of the capitalization index table that will use the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._GuaranteedInterestTable">
<summary>
Code of the guaranteed interest table that the product will use.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._SavingPercentageChangesAllowed">
<summary>
It indicates that allows changes of the percentage of savings.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._Index">
<summary>
It indicates that allows changes of the index when issuing.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._AllowedChangesOfTableOfGuaranteedInterest">
<summary>
Indicator of allowed changes of the guaranteed interest table when issuing
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._TypeOfAccountStatement">
<summary>
Type of account statement (Non-traditional Life).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._DaysGuaranteedDeathBenefitToExpire">
<summary>
Days of guaranteed death benefit to expire
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._VUL_APVIndicator">
<summary>
Indicates if the VUL product corresponds to VUL-APV
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MinimumAmountAlloedToMakeSwitch">
<summary>
Minimum amount allowed by the product to make a switch
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._CostOfReprintPolicyDocument">
<summary>
Cost of reprint the policy document
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._YearsRemainsInEffectGuaranteedDeathBenefit">
<summary>
Years in which remains in effect guaranteed death benefit.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._AgeRemainsInEffectGuaranteedDeathBenefit">
<summary>
Age of insured up which remains in force the guaranteed death benefit..
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._RefundPercentageDeathOfChild">
<summary>
Percentage of refund, in case of death of the child.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._NDAYBUYUNIT">
<summary>
Number of days after which to effect the sale of units from charges
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MaximumChargeAmountPerWithdrawal">
<summary>
Maximum amount of charge related to each withdrawal
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._AccountAllowedSurrenders">
<summary>
Account allowed to make surrenders
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._AccountAllowedLoans">
<summary>
Account allowed to make loans
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MinimumMonthsSwitch">
<summary>
Minimum months of duration to make Switch
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MinimumMonthsRedirections">
<summary>
Minimum months of duration to make redirections
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._NULSWMAXPER">
<summary>
Type of period
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._NULRDMAXPER">
<summary>
Type of period
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._NULSWMQT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._NULRDMQT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._NULSWMQTPER">
<summary>
Type of period
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._NULRDMQTPER">
<summary>
Type of period
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._ChargePercentagePerSwitch">
<summary>
Percentage of charge per switch
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._ChargePercentagePerRedirection">
<summary>
Percentage of charge per redirections
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MinimumAmountApprovalClaimPaymentIndicator">
<summary>
Indicator minimum amount, for approval of payment of claims
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._DayOfIssueOfThePolicy">
<summary>
Day of issue of the policy, from which the next billing date skips a month of issue plus 2 months (To avoid 2 consecutive collection when the collection day is 1st of each month)
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._PercentageSafetyMargin">
<summary>
Percentage to indicate safety margin in the valuation of funds share value unknown
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._SROUTINESURR">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._SAPPLYROUSURR">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._HandlesMirrorAccountIndicator">
<summary>
Indicator that the product has handles mirror account
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._InterestsGuaranteedTableToMirrorAccount">
<summary>
Code table Interests guaranteed to the mirror account
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._ShortestEffectiveForPartialSurrenders">
<summary>
Shortest effective for partial surrenders.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MinimumAmountRemainigAfterPartialSurrender">
<summary>
Minimum amount of remaining balance after a partial recovery.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._TimeBenefitBeforeApplyingCancellationPeriod">
<summary>
Time benefit will be taken into account before applying the cancellation period of the policy
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._RoutineConditionsProductExpiration">
<summary>
Routine conditions product expiration
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._ApportionmentBetweenAccountsApplyCostIndicator">
<summary>
Indicator apportionment between accounts to apply the cost
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._MinimumAcumAfterRetirement">
<summary>
Minimum accumulated value after retirement, expressed in the amount of monthly basic premiums
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._FixedChargeOperatingExpensesLoans">
<summary>
Fixed amount corresponding to operating expenses for loans
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._DaysForNoSales">
<summary>
Number of end-of-month days that unit sales requests are not generated
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._TechnicalMinPremiumPercentage">
<summary>
Technical mini-mum premium calculation percentage
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._AmountMonthsEvaluatePolicyVPNegative">
<summary>
Indicate the minimum number of months that the policy must have to evaluate if it has a negative VP
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._AllowsRefinancePreviousLoans">
<summary>
Indicator allows you to refinance previous loans (1- Si , 2 - No).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._RoutineCalculationMinimumBalanceAfterRetirement">
<summary>
Routine for the calculation of the minimum balance after retirement.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._RoutineRequiredPremium">
<summary>
Routine for required premium calculation
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._IndicatesPostponeExpiration">
<summary>
Indicates whether you can postpone expiration
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._RoutinePremiumRequiredNotExpire">
<summary>
Routine for premium required to not expire
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._PercentageRequestAdditionalRandom">
<summary>
Percentage to request Additional Random Requirements
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._CreateLoanGuarantee">
<summary>
It indicates that a guarantee must be constituted for the loan amount, which is withdrawn from the normal investment funds and invested in a special fund. This field applies only to unit linked products. (1- Yes, 2 - No)
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._TypeCountingMarketingCost">
<summary>
Type of counting for marketing cost
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._SROUMAXCONT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._NQMAXSALARY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._SDOLLARAUTH">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._NDAYS_EXP">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._NDAYS_GOAL">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._SNO_HOLIDAYS">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._NTYPE_RATEPROY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._SFLAGTABLEDA">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._NFLAGEXPDATE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.CurrentAccountIndicator">
<summary>
It indicates that the policy will use the client&#39;s current account. (SACCOUNTI)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SACCOUNTI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.InterestMode">
<summary>
Modality to charge interest. (NANLIFINT)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NANLIFINT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MaximumAnnualContributions">
<summary>
Maximum annual amount of contributions. (NANNUALAP)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NANNUALAP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.JointLifePolicesArePossible">
<summary>
It indicates that joint-life policies can be insured. (SASSOCIAI)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SASSOCIAI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.InvestmentOption">
<summary>
Invest only contributions, or dividends plus contributions (NBENEFAPL)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NBENEFAPL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MinimumCashValueToApplyGuaranteedInterest">
<summary>
Minimum amount of the cash value to which the guaranteed percentage applies. (NBENEFEXC)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NBENEFEXC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MinimumGuaranteedPercentage">
<summary>
Minimum percentage guaranteed in investment profits. (NBENEFITR)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NBENEFITR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.ExcessGuaranteedPercenage">
<summary>
Guaranteed percentage on the excess of the minimum effective value. (NBENEXCRA)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NBENEXCRA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.ChargeForPartialSurrenderBelowMinimumAllowed">
<summary>
Percentage to be applied as a charge when a partial surrender is performed and the cash value is smaller than the &#39;minimum cash value&#39; required. (NCHARGE)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NCHARGE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.PaymentByRefundingAllPremiums">
<summary>
It indicates that the claims may be paid in the form of refunding all premiums. (SCLALLPRE)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SCLALLPRE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.RoutineOfClaimPeriodicalPayment">
<summary>
Routine of claim payment in the form of periodical payment over a given period. (SCLANNPEI)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SCLANNPEI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.RoutineOfClaimPaymentByPureLifeAnnuity">
<summary>
Routine of claim payment in the form of a pure life annuity. (SCLLIFEAI)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SCLLIFEAI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.PaymentByWaivingPremiuns">
<summary>
It indicates that claims may be paid by waiving premiums. (SCLNOPREI)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SCLNOPREI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.PaymentByRefundingPaidPremiums">
<summary>
It indicates that the claims may be paid in the form of refunding paid premiums. (SCLPAYPRI)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SCLPAYPRI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.SimplePayment">
<summary>
Claim payment indicator in the form of a simple payment. (SCLSIMPAI)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SCLSIMPAI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.PaymentByPayingTheSurrenderValue">
<summary>
Claim payment indicator in the form of surrender value. (SCLSURREI)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SCLSURREI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.PaymentByTransferingBonds">
<summary>
Claim payment indicator in the form of transfer of bonds to beneficiaries. (SCLTRANSI)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SCLTRANSI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.FrequencyOfInsuranceDeduction">
<summary>
Frequency at which the insurance component is deducted. (NDEDUFREQ)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NDEDUFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.FrequencyOfInsuranceDeductionEnum">
<summary>
Frequency at which the insurance component is deducted.
</summary>
<remarks>This property use a enumeration based on property 'FrequencyOfInsuranceDeduction'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.FrequencyOfInsuranceDeductionEnumText">
<summary>
Frequency at which the insurance component is deducted.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.EntryFee">
<summary>
Client entry fee amount. (NENTRANCE)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NENTRANCE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MinimumFrequencyForPartialSurrender">
<summary>
Minimum allowed frequency for partial surrenders. (NSURRFREQ)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NSURRFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.InsuranceDuration">
<summary>
Fixed duration of the insurance. (NIDURAFIX)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NIDURAFIX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.TypeOfInsuranceDuration">
<summary>
Type of duration for the insurance. (NTYPDURINS)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NTYPDURINS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.TypeOfInsuranceDurationEnum">
<summary>
Type of duration for the insurance.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfInsuranceDuration'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.TypeOfInsuranceDurationEnumText">
<summary>
Type of duration for the insurance.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.InsuranceDurationVariable">
<summary>
Variable duration indicator of the insurance. (SIDURVARI)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SIDURVARI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.InterestPercentage">
<summary>
Interest percentage to be applied to loans. (NINTEREST)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NINTEREST'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.UseAverageAgeMethod">
<summary>
Indicator for use of average age method to calculate the premium of a group insured. (SMETHAGAV)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SMETHAGAV'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.UseAveragePremiumMethod">
<summary>
Indicator for use of average premium method to calculate the premium of a group insured. (SMETHPRAV)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SMETHPRAV'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.UseIndividualPremiumMethod">
<summary>
Indicator for use of individual premium method per insured in the group. (SMETHPRIN)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SMETHPRIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.AcceptanceIndicator">
<summary>
Indicator for sum insured increases accepted. (SMORCAPII)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SMORCAPII'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.NonPeriodicalPayments">
<summary>
Non-periodical payments indicator. (SNOPERIOD)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SNOPERIOD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.BaseOfMultipleAmount">
<summary>
Standard amount &#34;multiple of &#34; for non-periodical payments. (NNPEMULTI)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NNPEMULTI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MaximumNonStandardAmount">
<summary>
Maximum non-standard amount with non-periodical payment. (NNPENUMAI)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NNPENUMAI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MinimumNonStandardAmountNonPeriodical">
<summary>
Minimum non-standard amount with non-periodical payment. (NNPENUNMI)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NNPENUNMI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.StandardNonPeriodicalPayments">
<summary>
Standard amount indicator with non-periodical payment. (SNPEUNIFA)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SNPEUNIFA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.InitialPayment">
<summary>
Initial payment at the moment of issuing the policy. (NPAYINITI)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NPAYINITI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.BillsToChargeLoanInterests">
<summary>
Type of bill used to charge interests on loans. (NPAYINTER)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NPAYINTER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.PeriodicalPayments">
<summary>
Periodical payments indicator. (SPERIODIC)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SPERIODIC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.InsuredAmountMustBeAMultipleOfThisAmount">
<summary>
Standard amount &#34;multiple of&#34; for periodical payment. (NPERMULTI)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NPERMULTI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.NonPaymentExpensesPercentage">
<summary>
Percentage of expenses for non-payments. (NPERNOPAY)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NPERNOPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MaximumNonStandardAmountNose">
<summary>
Maximum non-standard amount, periodical payment. (NPERNUMAI)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NPERNUMAI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MinimumNonStandardAmountPeriodical">
<summary>
Minimum non-standard amount, periodical payment. (NPERNUNMI)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NPERNUNMI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.Indexation">
<summary>
Indexation factor of the periodical payment ( when the type is fixed). (NPERREVFA)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NPERREVFA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.IndexationType">
<summary>
Type of indexation (SREVALTYP)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SREVALTYP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.UniformPeriodicalPayments">
<summary>
Uniform amount indicator with periodical payment. (SPERUNIFA)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SPERUNIFA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.ProductClass">
<summary>
Life product class. (NPRODCLAS)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NPRODCLAS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MaximumNumberOfBonds">
<summary>
Maximum numbers of bonds allowed (capitalization). (NQBONUSMA)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NQBONUSMA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MinimumNumberOfBonds">
<summary>
Minimum numbers of bonds allowed (capitalization). (NQBONUSMI)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NQBONUSMI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MaximumRenewalAge">
<summary>
Maximum attained age for renewal purposes. (NREAGEMAX)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NREAGEMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.CalculationRoutineForMaximumLoan">
<summary>
Calculation routine/formula for maximum loan amount. (SROUADVAN)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SROUADVAN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.RoutineExtendedTerm">
<summary>
Calculation routine/formula for reduced duration (extended term). (SROUREDDC)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SROUREDDC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.RoutinePaidUp">
<summary>
Calculation routine/formula for reduced sum insured amount (paid up). (SROUREDUC)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SROUREDUC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.RoutineForSurrenderValue">
<summary>
Calculation routine/formula for policy surrender. (SROUSURRE)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SROUSURRE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MaximumAgeNewpolicies">
<summary>
Maximum age for new policies. (NSUAGEMAX)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NSUAGEMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MinimumAgeNewpolicies">
<summary>
Minimum age for new policies. (NSUAGEMIN)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NSUAGEMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MinimumPolicyValueToAvoidSurrenderCharges">
<summary>
Minimum effective value that should exist to avoid surrender charges. (NSURCASHV)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NSURCASHV'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.PartialSurrenderAllowed">
<summary>
Partial surrenders allowed indicator. (SSURRENPI)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SSURRENPI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.TotalSurrenderAllowed">
<summary>
Total surrenders allowed indicator. (SSURRENTI)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SSURRENTI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.FundsChangesArePossible">
<summary>
The product allows the user to change funds and percentages indicated by default. (SULFCHANI)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SULFCHANI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MaximumNumberOfFunds">
<summary>
Maximum number of funds allowed. (NULFMAXQU)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NULFMAXQU'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.ChargeForRedirection">
<summary>
Amount to be charged on account of redirection. (NULRCHARG)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NULRCHARG'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.PeriodWithoutCharge">
<summary>
Period without charge by redirection of units. (NULREDPER)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NULREDPER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.PeriodWithoutChargeEnum">
<summary>
Period without charge by redirection of units.
</summary>
<remarks>This property use a enumeration based on property 'PeriodWithoutCharge'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.PeriodWithoutChargeEnumText">
<summary>
Period without charge by redirection of units.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MaximumNumberOfRedirections">
<summary>
Maximum number of redirections allowed (NULRMAXQU)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NULRMAXQU'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.RedirectionsWithoutCharge">
<summary>
Maximum number of redirections that the client can make without being charged. (NULRSCHAR)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NULRSCHAR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.ChargePerSwitch">
<summary>
Amount to be charged for every switch made by the client after having exhausted the maximum number of free switches. (NULSCHARG)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NULSCHARG'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MaximumNumberOfSwitches">
<summary>
Maximum number of switches allowed. (NULSMAXQU)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NULSMAXQU'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.TypeOfJointLife">
<summary>
Type of joint-life policy first-to-die, or last-to-die. (SASSOTOTAL)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SASSOTOTAL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.SwitchesWithoutCharges">
<summary>
Maximum number of switches that the client may make without being charged. (NULSSCHAR)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NULSSCHAR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.PeriodForFreeSwitches">
<summary>
Period without charge by unit switch operations. (NULSWIPER)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NULSWIPER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.PeriodForFreeSwitchesEnum">
<summary>
Period without charge by unit switch operations.
</summary>
<remarks>This property use a enumeration based on property 'PeriodForFreeSwitches'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.PeriodForFreeSwitchesEnumText">
<summary>
Period without charge by unit switch operations.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.StyleForInvestmentProfits">
<summary>
It indicates how investment profits will be returned. (SBENRES)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SBENRES'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.BondValue">
<summary>
Value of each bond. (NVALUEBON)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NVALUEBON'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.YearToSubtractToNonSmokers">
<summary>
Years to be subtracted to non-smokers. (NYEARMINS)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NYEARMINS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.YearToSubtractToWomen">
<summary>
Years to be subtracted to women. (NYEARMINW)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NYEARMINW'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.YearsToAddToSmokers">
<summary>
Years to be added to smokers. (NYEARMORS)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NYEARMORS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.PremiumType">
<summary>
Type of premium. (SPREMIUMTYPE)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SPREMIUMTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.FactorToAdjustDeathRateOfSmokers">
<summary>
Factor to be applied in order to determine the death probability(q(x)) of the insured smoker. (NTAXSMOKE)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NTAXSMOKE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.FactorToAdjustDeathRateOfNonSmokers">
<summary>
Factor to be applied in order to determine the death probability(q(x)) of the insured non-smoker. (NTAXNSMOKE)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NTAXNSMOKE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.PartialSurrenderCharge">
<summary>
Amount to be charged on account of partial surrender. (NCHARGEAMO)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NCHARGEAMO'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MonthlyCharge">
<summary>
Monthly operating charge of current account. (NMONTHAMO)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NMONTHAMO'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.AdministrativeExpensesPercentage">
<summary>
Percentage of administrative expenses. (NADMINRATE)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NADMINRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MinimumEffectiveMonthsForLoans">
<summary>
Minimum months of effective period of the policy for loans. (NQMEPLOANS)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NQMEPLOANS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MaximumNumberOfLoansPerMonth">
<summary>
Maximum number of loans per month. (NQMMLOANS)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NQMMLOANS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MaximumNumberOfLoansPerYear">
<summary>
Maximum number of loans per year. (NQMYLOANS)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NQMYLOANS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MinimumLoanAmount">
<summary>
Minimum amount of the loan (NAMINLOANS)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NAMINLOANS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MaximumLoanAmount">
<summary>
Maximum amount of the loan (NAMAXLOANS)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NAMAXLOANS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MaximumForLoans">
<summary>
Percentage on the mathematical reserves of the policy to calculate the maximum permitted for loans. (NPERVSLOANS)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NPERVSLOANS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.Tolerance">
<summary>
Tolerance percentage permitted. (NPERCTOL)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NPERCTOL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MinimumEffectiveMonthsForSurrender">
<summary>
Minimum months of effective period of the policy for surrender. (NQMEPSURR)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NQMEPSURR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MaximumNumberOfSurrendersPerMonth">
<summary>
Maximum number of surrenders per month. (NQMMSURR)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NQMMSURR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MaximumNumberOfSurrendersPerYear">
<summary>
Maximum number of surrenders per year. (NQMYSURR)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NQMYSURR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MinimumPartialSurrender">
<summary>
Minimum amount of partial surrender. (NAMINSURR)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NAMINSURR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MaximumPartialSurrender">
<summary>
Maximum amount of the partial surrender. (NAMAXSURR)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NAMAXSURR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MaximumForSurrender">
<summary>
Percentage on the mathematical reserves of the policy to calculate the maximum permitted for surrender. (NPERVSSURR)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NPERVSSURR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MinimumRemainingInsuredAmount">
<summary>
Minimum insured amount remaining after the partial surrender. (NCAPMINSURR)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NCAPMINSURR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.TaxPercentageForLoans">
<summary>
Tax percentage to apply to loans. (NTAXES)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NTAXES'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MinimumPremium">
<summary>
Amount of minimum premium to be charged. (NPREMMIN)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NPREMMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.NumberOfMonthsOfNegativePolicyValueToCancel">
<summary>
Number of negative policy-value months to cancel the policy. (NQMONVPN)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NQMONVPN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.NumberOfMonthsToKeepCalculatingPolicyValueWhenItIsNegative">
<summary>
Number of months to continue calculating the policy value when it is negative. (NQMONTOVPN)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NQMONTOVPN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.FactorOnBasicPremiumForReinstatement">
<summary>
Factor on the basic premium to charge for reinstatement. (NRATEREH)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NRATEREH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.RoutineForCalculationOfAmountOfInterest">
<summary>
Calculation routine of the amount of interest. (SROUINTEREST)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SROUINTEREST'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.BillingItem">
<summary>
Billing concept code in which the interest total will be grouped . (NBILL_ITEM)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NBILL_ITEM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.RoutineForCalculationOfInsuredAmount">
<summary>
Calculation routine for sum insured or limit. (SROUTINSU)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SROUTINSU'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MinimumAnnuity">
<summary>
Minimum amount of the annuity. (NMINRENT)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NMINRENT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MaximumAnnuity">
<summary>
Maximum amount of the annuity. (NMAXRENT)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NMAXRENT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.RoutineOfCapitalizacion">
<summary>
Routine for the calculation of funds capitalization. (SROUTINE_C)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SROUTINE_C'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.DurationOfPayments">
<summary>
Duration of premium payments. (NPDURAFIX)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NPDURAFIX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.DurationOfPaymentsVariable">
<summary>
Variable duration indicator of premium payments. (SPDURVARI)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SPDURVARI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.TypeOfDurationOfPayments">
<summary>
Type of duration for the payments. (NTYPDURPAY)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NTYPDURPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.TypeOfDurationOfPaymentsEnum">
<summary>
Type of duration for the payments.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfDurationOfPayments'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.TypeOfDurationOfPaymentsEnumText">
<summary>
Type of duration for the payments.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.RoutineForCalculationOfPremium">
<summary>
Calculation routine for premium. (SROUTPAY)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SROUTPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.SavingPercentage">
<summary>
Percentage of each contribution that will be invested in savings (Non-Traditional Life). (NSAVING_PCT)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NSAVING_PCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.CapitalizationIndexTable">
<summary>
Code of the capitalization index table that will use the product. (NINDEX_TABLE)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NINDEX_TABLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.GuaranteedInterestTable">
<summary>
Code of the guaranteed interest table that the product will use. (NWARRN_TABLE)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NWARRN_TABLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.SavingPercentageChangesAllowed">
<summary>
It indicates that allows changes of the percentage of savings. (SS_ALLWCHNG)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SS_ALLWCHNG'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.Index">
<summary>
It indicates that allows changes of the index when issuing. (SIX_ALLWCHNG)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SIX_ALLWCHNG'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.AllowedChangesOfTableOfGuaranteedInterest">
<summary>
Indicator of allowed changes of the guaranteed interest table when issuing (SW_ALLWCHNG)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SW_ALLWCHNG'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.TypeOfAccountStatement">
<summary>
Type of account statement (Non-traditional Life). (NINFTYPE)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NINFTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.DaysGuaranteedDeathBenefitToExpire">
<summary>
Days of guaranteed death benefit to expire (NDAY_BMG)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NDAY_BMG'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.VUL_APVIndicator">
<summary>
Indicates if the VUL product corresponds to VUL-APV (SAPV)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SAPV'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MinimumAmountAlloedToMakeSwitch">
<summary>
Minimum amount allowed by the product to make a switch (NULSMIN)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NULSMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.CostOfReprintPolicyDocument">
<summary>
Cost of reprint the policy document (NCOSTRE)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NCOSTRE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.YearsRemainsInEffectGuaranteedDeathBenefit">
<summary>
Years in which remains in effect guaranteed death benefit. (NYEAR_BMG)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NYEAR_BMG'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.AgeRemainsInEffectGuaranteedDeathBenefit">
<summary>
Age of insured up which remains in force the guaranteed death benefit.. (NAGE_BMG)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NAGE_BMG'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.RefundPercentageDeathOfChild">
<summary>
Percentage of refund, in case of death of the child. (NPERCDEVOLU)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NPERCDEVOLU'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.NDAYBUYUNIT">
<summary>
Number of days after which to effect the sale of units from charges.
</summary>
<remarks>Data-source is 'PRODUCT_LI.NDAYBUYUNIT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MaximumChargeAmountPerWithdrawal">
<summary>
Maximum amount of charge related to each withdrawal (NMAXCHARGSURR)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NMAXCHARGSURR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.AccountAllowedSurrenders">
<summary>
Account allowed to make surrenders (NORIGIN_SURR)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NORIGIN_SURR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.AccountAllowedLoans">
<summary>
Account allowed to make loans (NORIGIN_LOAN)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NORIGIN_LOAN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MinimumMonthsSwitch">
<summary>
Minimum months of duration to make Switch (NULMMSW)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NULMMSW'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MinimumMonthsRedirections">
<summary>
Minimum months of duration to make redirections (NULMMRD)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NULMMRD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.NULSWMAXPER">
<summary>
Type of period.
</summary>
<remarks>Data-source is 'PRODUCT_LI.NULSWMAXPER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.NULRDMAXPER">
<summary>
Type of period.
</summary>
<remarks>Data-source is 'PRODUCT_LI.NULRDMAXPER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.NULSWMQT">
<summary>
.
</summary>
<remarks>Data-source is 'PRODUCT_LI.NULSWMQT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.NULRDMQT">
<summary>
.
</summary>
<remarks>Data-source is 'PRODUCT_LI.NULRDMQT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.NULSWMQTPER">
<summary>
Type of period.
</summary>
<remarks>Data-source is 'PRODUCT_LI.NULSWMQTPER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.NULRDMQTPER">
<summary>
Type of period.
</summary>
<remarks>Data-source is 'PRODUCT_LI.NULRDMQTPER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.ChargePercentagePerSwitch">
<summary>
Percentage of charge per switch (NULSWCHPERC)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NULSWCHPERC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.ChargePercentagePerRedirection">
<summary>
Percentage of charge per redirections (NULRDCHPERC)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NULRDCHPERC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MinimumAmountApprovalClaimPaymentIndicator">
<summary>
Indicator minimum amount, for approval of payment of claims (SINDCL_PAY)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SINDCL_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.DayOfIssueOfThePolicy">
<summary>
Day of issue of the policy, from which the next billing date skips a month of issue plus 2 months (To avoid 2 consecutive collection when the collection day is 1st of each month) (NDAYISSUE)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NDAYISSUE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.PercentageSafetyMargin">
<summary>
Percentage to indicate safety margin in the valuation of funds share value unknown (NPERC_SECUR)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NPERC_SECUR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.SROUTINESURR">
<summary>
.
</summary>
<remarks>Data-source is 'PRODUCT_LI.SROUTINESURR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.SAPPLYROUSURR">
<summary>
.
</summary>
<remarks>Data-source is 'PRODUCT_LI.SAPPLYROUSURR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.HandlesMirrorAccountIndicator">
<summary>
Indicator that the product has handles mirror account (SACCOUNT_MIRROR)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SACCOUNT_MIRROR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.InterestsGuaranteedTableToMirrorAccount">
<summary>
Code table Interests guaranteed to the mirror account (NWARRN_TABLE_MIRROR)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NWARRN_TABLE_MIRROR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.ShortestEffectiveForPartialSurrenders">
<summary>
Shortest effective for partial surrenders. (NQMMPSURR)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NQMMPSURR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MinimumAmountRemainigAfterPartialSurrender">
<summary>
Minimum amount of remaining balance after a partial recovery. (NBALMINSURR)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NBALMINSURR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.TimeBenefitBeforeApplyingCancellationPeriod">
<summary>
Time benefit will be taken into account before applying the cancellation period of the policy (NBMG)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.NBMG'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.RoutineConditionsProductExpiration">
<summary>
Routine conditions product expiration (SROUTINEVPN)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SROUTINEVPN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.ApportionmentBetweenAccountsApplyCostIndicator">
<summary>
Indicator apportionment between accounts to apply the cost (SPRORATE)..
</summary>
<remarks>Data-source is 'PRODUCT_LI.SPRORATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MinimumAcumAfterRetirement">
<summary>
Minimum accumulated value after retirement, expressed in the amount of monthly basic premiums (NBALMINPB)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT_LI.NBALMINPB'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.FixedChargeOperatingExpensesLoans">
<summary>
Fixed amount corresponding to operating expenses for loans (NCHARGFIXLOANS)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT_LI.NCHARGFIXLOANS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.DaysForNoSales">
<summary>
Number of end-of-month days that unit sales requests are not generated (NDAYS_SELLS)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT_LI.NDAYS_SELLS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.TechnicalMinPremiumPercentage">
<summary>
Technical mini-mum premium calculation percentage (NPERMIN_TEC)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT_LI.NPERMIN_TEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.AmountMonthsEvaluatePolicyVPNegative">
<summary>
Indicate the minimum number of months that the policy must have to evaluate if it has a negative VP (NQMONVPN_VIG)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT_LI.NQMONVPN_VIG'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.AllowsRefinancePreviousLoans">
<summary>
Indicator allows you to refinance previous loans (1- Si , 2 - No). (SREFINANCE_LOANS)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT_LI.SREFINANCE_LOANS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.RoutineCalculationMinimumBalanceAfterRetirement">
<summary>
Routine for the calculation of the minimum balance after retirement. (SROUMINBAL)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT_LI.SROUMINBAL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.RoutineRequiredPremium">
<summary>
Routine for required premium calculation (SROUTPR)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT_LI.SROUTPR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.IndicatesPostponeExpiration">
<summary>
Indicates whether you can postpone expiration (SPOSTEXPIRATION)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT_LI.SPOSTEXPIRATION'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.RoutinePremiumRequiredNotExpire">
<summary>
Routine for premium required to not expire (SROUTINEREQPREM)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT_LI.SROUTINEREQPREM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.PercentageRequestAdditionalRandom">
<summary>
Percentage to request Additional Random Requirements (NSPECI_RANDOM)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT_LI.NSPECI_RANDOM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.CreateLoanGuarantee">
<summary>
It indicates that a guarantee must be constituted for the loan amount, which is withdrawn from the normal investment funds and invested in a special fund. This field applies only to unit linked products. (1- Yes, 2 - No) (SLOANSGUARANT)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT_LI.SLOANSGUARANT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.TypeCountingMarketingCost">
<summary>
Type of counting for marketing cost (STYPPB)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT_LI.STYPPB'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.SROUMAXCONT">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT_LI.SROUMAXCONT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.NQMAXSALARY">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT_LI.NQMAXSALARY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.SDOLLARAUTH">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT_LI.SDOLLARAUTH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.NDAYS_EXP">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT_LI.NDAYS_EXP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.NDAYS_GOAL">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT_LI.NDAYS_GOAL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.SNO_HOLIDAYS">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT_LI.SNO_HOLIDAYS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.NTYPE_RATEPROY">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT_LI.NTYPE_RATEPROY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.SFLAGTABLEDA">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT_LI.SFLAGTABLEDA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.NFLAGEXPDATE">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT_LI.NFLAGEXPDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.Compare(InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ProductLifeLineOfBusinessItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.InterestModeDescription">
 <summary>
 Modality to charge interest.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE34'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.InvestmentOptionDescription">
 <summary>
 Invest only contributions, or dividends plus contributions
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE113'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.FrequencyOfInsuranceDeductionDescription">
 <summary>
 Frequency at which the insurance component is deducted.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE36'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.MinimumFrequencyForPartialSurrenderDescription">
 <summary>
 Minimum allowed frequency for partial surrenders.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE114'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.TypeOfInsuranceDurationDescription">
 <summary>
 Type of duration for the insurance.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5589'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.BillsToChargeLoanInterestsDescription">
 <summary>
 Type of bill used to charge interests on loans.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE74'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.IndexationTypeDescription">
 <summary>
 Type of indexation
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE46'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.ProductClassDescription">
 <summary>
 Life product class.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE124'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.PeriodWithoutChargeDescription">
 <summary>
 Period without charge by redirection of units.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE36'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.PeriodForFreeSwitchesDescription">
 <summary>
 Period without charge by unit switch operations.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE36'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.TypeOfAccountStatementDescription">
 <summary>
 Type of account statement (Non-traditional Life).
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5675'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.NULSWMAXPERDescription">
 <summary>
 Type of period
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5644'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.NULRDMAXPERDescription">
 <summary>
 Type of period
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5644'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.NULSWMQTPERDescription">
 <summary>
 Type of period
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5644'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.NULRDMQTPERDescription">
 <summary>
 Type of period
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5644'.
 </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusiness.CalculateActuarialAge(System.DateTime,InMotionGIT.Common.Contracts.Enumerations.EnumGender,InMotionGIT.Common.Contracts.Enumerations.EnumSmokingStatus,System.DateTime,System.Int32@)">
 <summary>
 Age actuarial estimate based on product specification
 </summary>
 <param name="birthDate">Date of birth</param>
 <param name="gender">Gender of the insured</param>
 <param name="SmokerIndicator">Smoking status indicator</param>
 <param name="atDate">Base date used for calculating age</param>
 <param name="age">Real age</param>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusinessCollection">
 <summary>
 Collection for ProductLifeLineOfBusiness class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusinessCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusinessCollection.AddProductLifeLineOfBusiness">
 <summary>
 Add an instance of class 'ProductLifeLineOfBusiness' in the ProductLifeLineOfBusinessCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusinessCollection.Compare(InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusinessCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusinessCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusinessCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductLifeLineOfBusinessCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ProductMaster">
 <summary>
 Product master.
 </summary>
<remarks>Data-source is 'PRODMASTER'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.CreateNewProductMaster">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._Description">
<summary>
Product description.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._ShortDescription">
<summary>
Short description of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._TypeOfLineOfBusiness">
<summary>
Code of the type of line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._RealProduct">
<summary>
Real product indicator.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._Company">
<summary>
Code of the company.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._PrefixPolicy">
<summary>
Prefix number of the policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._OriginalLineofBusiness">
<summary>
Original Line of Business from where this product originated
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._OriginalProduct">
<summary>
Product that gave rise to the current
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._Metapolicy">
<summary>
Metapolicy indicator
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._ClientsAllowedInClaimPerProduct">
<summary>
Clients allowed in a claim for a product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._ClientAllowedInPolicyPerProducts">
<summary>
Clients allowed in a policy for a product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._ClientInformationRequireds">
<summary>
Client information required.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._CalculateCommissionEndorsements">
<summary>
Conditions for calculating commission endorsements.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._ControlDatesAPVs">
<summary>
Control Table dates of the APV unified process.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._CurrencyAllowedInProducts">
<summary>
Currencies allowed in the product of policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._DiscountExtraPremiumTaxOfProducts">
<summary>
Extra-premiums/Discounts/Taxes of a product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._ConditionsForDiscountExtraPremiumTaxes">
<summary>
Conditions for application of extra-premium/discounts/taxes.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._InsuranceProductDurations">
<summary>
Insurance period associated with the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._DurationPaymentAssociatedProducts">
<summary>
Duration of payments associated with the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._EffectiveDateInputForProductLives">
<summary>
Effective date of contributions to a product life.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._FrequencyAllowedByPaymentProducts">
<summary>
Frequencies allowed by way of payment and product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._InvestmentFundRelatedToProducts">
<summary>
Associated investment funds to a product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._PropertyAndCasualtyCoverages">
<summary>
Covers of property and casualty product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._GuaranteedIssueLimits">
<summary>
Table of guaranteed issue limit.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._LifeProductCoverages">
<summary>
Covers of a life product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._LifeAccountCharges">
<summary>
Current account charge for life products.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._SpecificationForProductLives">
<summary>
Criteria for selection of risk for a product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._CancellationPolicyConditions">
<summary>
Conditions for cancellation of policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._FrequencyAndExtraPremiumAlloweds">
<summary>
Payment frequency allowed and extra-premium as per payment frequency.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._PlanProfitabilityPercentages">
<summary>
Percentage of profitability per plan
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._ProductAddCapitalToCoverages">
<summary>
Products that add capital to coverage (Traditional Life Products).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._ProductGeneralInformation">
<summary>
General information of products.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._ProductPropertyAndCasualtyLineOfBusiness">
<summary>
General information on a Property and casualty product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._ProductLifeLineOfBusiness">
<summary>
General information of the life products.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._SequencePolicies">
<summary>
Sequence of windows to policy process.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._SurrenderValueRetentions">
<summary>
Table of retention according to the surrender value.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._ActiveLifePlans">
<summary>
Terms of Active Life Plans.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._ExcludedIllnessByProductInHealthPolicies">
<summary>
Exclusion of illnesses from products.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._BillingConceptsProducts">
<summary>
Billing Concepts product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._ProductClauses">
<summary>
Clauses in a product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._LifeCoverageRols">
<summary>
Roles permitted for a life coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._ProductGuaranteedValues">
<summary>
Table of guaranteed value of a product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._ProductModules">
<summary>
Table of modules of a general line of business product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._ProductProtectionElements">
<summary>
Protection elements table of a product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._RequerimentExclusionProducts">
<summary>
Table of requirements and exclusions of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._ShortTermInsurances">
<summary>
table of short-term insurance.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._RatingTableAPVProducts">
<summary>
Rating table of the APV product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._ProductAllowPerVehicles">
<summary>
Line of business- products allowed per vehicle.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._PaymentWaysAllowedByProducts">
<summary>
Ways of payment allowed by product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._OriginByTypePaymentCollection">
<summary>
Account to be affected by each type of deposit
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._RateTablePerProductCollection">
<summary>
Tables of rates of the product
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._AgreementsByWayOfPaymentCollection">
<summary>
Agreements by way of payment
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._CommercialProductsCollection">
<summary>
Master of commercial products
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._CoveragesCombinedForMaxEventsCollection">
<summary>
Conditions of Modules / Coverages for the control of Maximum Event in Claims
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._CoveragesLimitsPerEventsCollection">
<summary>
Limits of coverage for events in claims
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductMaster._ParticularDataOfTheProductoCollection">
<summary>
Particular data of the producto
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'PRODMASTER.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'PRODMASTER.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.Description">
<summary>
Product description. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'PRODMASTER.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.ShortDescription">
<summary>
Short description of the product. (SSHORT_DES)..
</summary>
<remarks>Data-source is 'PRODMASTER.SSHORT_DES'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'PRODMASTER.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'PRODMASTER.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.TypeOfLineOfBusiness">
<summary>
Code of the type of line of business. (SBRANCHT)..
</summary>
<remarks>Data-source is 'PRODMASTER.SBRANCHT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.TypeOfLineOfBusinessEnum">
<summary>
Code of the type of line of business.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfLineOfBusiness'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.TypeOfLineOfBusinessEnumText">
<summary>
Code of the type of line of business.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'PRODMASTER.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.RealProduct">
<summary>
Real product indicator. (SREALIND)..
</summary>
<remarks>Data-source is 'PRODMASTER.SREALIND'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.Company">
<summary>
Code of the company. (NCOMPANY)..
</summary>
<remarks>Data-source is 'PRODMASTER.NCOMPANY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.PrefixPolicy">
<summary>
Prefix number of the policy. (SPREFFIX)..
</summary>
<remarks>Data-source is 'PRODMASTER.SPREFFIX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.OriginalLineofBusiness">
<summary>
Original Line of Business from where this product originated (NBRANCH_ORIGI)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODMASTER.NBRANCH_ORIGI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.OriginalProduct">
<summary>
Product that gave rise to the current (NPRODUCT_ORIGI)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODMASTER.NPRODUCT_ORIGI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.Metapolicy">
<summary>
Metapolicy indicator (SMETAPOLICY)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODMASTER.SMETAPOLICY'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewClientsAllowedInClaimPerProductInstance">
<summary>
Initializes the 'ClientsAllowedInClaimPerProduct' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewClientAllowedInClaimPerProductItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ClientsAllowedInClaimPerProduct', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ClientAllowedInClaimPerProduct' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.ClientsAllowedInClaimPerProduct">
<summary>
Clients allowed in a claim for a product. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewClientAllowedInPolicyPerProductsInstance">
<summary>
Initializes the 'ClientAllowedInPolicyPerProducts' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewClientAllowedInPolicyPerProductItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ClientAllowedInPolicyPerProducts', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ClientAllowedInPolicyPerProduct' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.ClientAllowedInPolicyPerProducts">
<summary>
Clients allowed in a policy for a product. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewClientInformationRequiredsInstance">
<summary>
Initializes the 'ClientInformationRequireds' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewClientInformationRequiredItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ClientInformationRequireds', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ClientInformationRequired' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.ClientInformationRequireds">
<summary>
Client information required. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewCalculateCommissionEndorsementsInstance">
<summary>
Initializes the 'CalculateCommissionEndorsements' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewCalculateCommissionEndorsementItem(System.Boolean)">
<summary>
Add a new item to the collection of 'CalculateCommissionEndorsements', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'CalculateCommissionEndorsement' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.CalculateCommissionEndorsements">
<summary>
Conditions for calculating commission endorsements. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewControlDatesAPVsInstance">
<summary>
Initializes the 'ControlDatesAPVs' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewControlDatesAPVItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ControlDatesAPVs', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ControlDatesAPV' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.ControlDatesAPVs">
<summary>
Control Table dates of the APV unified process. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewCurrencyAllowedInProductsInstance">
<summary>
Initializes the 'CurrencyAllowedInProducts' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewCurrencyAllowedInProductItem(System.Boolean)">
<summary>
Add a new item to the collection of 'CurrencyAllowedInProducts', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'CurrencyAllowedInProduct' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.CurrencyAllowedInProducts">
<summary>
Currencies allowed in the product of policy. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewDiscountExtraPremiumTaxOfProductsInstance">
<summary>
Initializes the 'DiscountExtraPremiumTaxOfProducts' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewDiscountExtraPremiumTaxOfProductItem(System.Boolean)">
<summary>
Add a new item to the collection of 'DiscountExtraPremiumTaxOfProducts', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'DiscountExtraPremiumTaxOfProduct' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.DiscountExtraPremiumTaxOfProducts">
<summary>
Extra-premiums/Discounts/Taxes of a product. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewConditionsForDiscountExtraPremiumTaxesInstance">
<summary>
Initializes the 'ConditionsForDiscountExtraPremiumTaxes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewConditionsForDiscountExtraPremiumTaxItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ConditionsForDiscountExtraPremiumTaxes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ConditionsForDiscountExtraPremiumTax' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.ConditionsForDiscountExtraPremiumTaxes">
<summary>
Conditions for application of extra-premium/discounts/taxes. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewInsuranceProductDurationsInstance">
<summary>
Initializes the 'InsuranceProductDurations' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewInsuranceProductDurationItem(System.Boolean)">
<summary>
Add a new item to the collection of 'InsuranceProductDurations', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'InsuranceProductDuration' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.InsuranceProductDurations">
<summary>
Insurance period associated with the product. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewDurationPaymentAssociatedProductsInstance">
<summary>
Initializes the 'DurationPaymentAssociatedProducts' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewDurationPaymentAssociatedProductItem(System.Boolean)">
<summary>
Add a new item to the collection of 'DurationPaymentAssociatedProducts', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'DurationPaymentAssociatedProduct' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.DurationPaymentAssociatedProducts">
<summary>
Duration of payments associated with the product. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewEffectiveDateInputForProductLivesInstance">
<summary>
Initializes the 'EffectiveDateInputForProductLives' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewEffectiveDateInputForProductLifeItem(System.Boolean)">
<summary>
Add a new item to the collection of 'EffectiveDateInputForProductLives', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'EffectiveDateInputForProductLife' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.EffectiveDateInputForProductLives">
<summary>
Effective date of contributions to a product life. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewFrequencyAllowedByPaymentProductsInstance">
<summary>
Initializes the 'FrequencyAllowedByPaymentProducts' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewFrequencyAllowedByPaymentProductItem(System.Boolean)">
<summary>
Add a new item to the collection of 'FrequencyAllowedByPaymentProducts', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'FrequencyAllowedByPaymentProduct' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.FrequencyAllowedByPaymentProducts">
<summary>
Frequencies allowed by way of payment and product. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewInvestmentFundRelatedToProductsInstance">
<summary>
Initializes the 'InvestmentFundRelatedToProducts' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewInvestmentFundRelatedToProductItem(System.Boolean)">
<summary>
Add a new item to the collection of 'InvestmentFundRelatedToProducts', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'InvestmentFundRelatedToProduct' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.InvestmentFundRelatedToProducts">
<summary>
Associated investment funds to a product. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewPropertyAndCasualtyCoveragesInstance">
<summary>
Initializes the 'PropertyAndCasualtyCoverages' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewPropertyAndCasualtyCoverageItem(System.Boolean)">
<summary>
Add a new item to the collection of 'PropertyAndCasualtyCoverages', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'PropertyAndCasualtyCoverage' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.PropertyAndCasualtyCoverages">
<summary>
Covers of property and casualty product. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewGuaranteedIssueLimitsInstance">
<summary>
Initializes the 'GuaranteedIssueLimits' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewGuaranteedIssueLimitItem(System.Boolean)">
<summary>
Add a new item to the collection of 'GuaranteedIssueLimits', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'GuaranteedIssueLimit' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.GuaranteedIssueLimits">
<summary>
Table of guaranteed issue limit. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewLifeProductCoveragesInstance">
<summary>
Initializes the 'LifeProductCoverages' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewLifeProductCoverageItem(System.Boolean)">
<summary>
Add a new item to the collection of 'LifeProductCoverages', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'LifeProductCoverage' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.LifeProductCoverages">
<summary>
Covers of a life product. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewLifeAccountChargesInstance">
<summary>
Initializes the 'LifeAccountCharges' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewLifeAccountChargeItem(System.Boolean)">
<summary>
Add a new item to the collection of 'LifeAccountCharges', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'LifeAccountCharge' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.LifeAccountCharges">
<summary>
Current account charge for life products. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewSpecificationForProductLivesInstance">
<summary>
Initializes the 'SpecificationForProductLives' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewSpecificationForProductLifeItem(System.Boolean)">
<summary>
Add a new item to the collection of 'SpecificationForProductLives', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'SpecificationForProductLife' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.SpecificationForProductLives">
<summary>
Criteria for selection of risk for a product. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewCancellationPolicyConditionsInstance">
<summary>
Initializes the 'CancellationPolicyConditions' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewCancellationPolicyConditionItem(System.Boolean)">
<summary>
Add a new item to the collection of 'CancellationPolicyConditions', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'CancellationPolicyCondition' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.CancellationPolicyConditions">
<summary>
Conditions for cancellation of policy. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewFrequencyAndExtraPremiumAllowedsInstance">
<summary>
Initializes the 'FrequencyAndExtraPremiumAlloweds' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewFrequencyAndExtraPremiumAllowedItem(System.Boolean)">
<summary>
Add a new item to the collection of 'FrequencyAndExtraPremiumAlloweds', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'FrequencyAndExtraPremiumAllowed' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.FrequencyAndExtraPremiumAlloweds">
<summary>
Payment frequency allowed and extra-premium as per payment frequency. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewPlanProfitabilityPercentagesInstance">
<summary>
Initializes the 'PlanProfitabilityPercentages' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewPlanProfitabilityPercentageItem(System.Boolean)">
<summary>
Add a new item to the collection of 'PlanProfitabilityPercentages', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'PlanProfitabilityPercentage' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.PlanProfitabilityPercentages">
<summary>
Percentage of profitability per plan collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewProductAddCapitalToCoveragesInstance">
<summary>
Initializes the 'ProductAddCapitalToCoverages' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewProductAddCapitalToCoverageItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ProductAddCapitalToCoverages', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ProductAddCapitalToCoverage' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.ProductAddCapitalToCoverages">
<summary>
Products that add capital to coverage (Traditional Life Products). collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewProductGeneralInformationInstance">
<summary>
Initializes the 'ProductGeneralInformation' instance.
</summary>
 <returns>The 'ProductGeneralInformation' class instance.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.ProductGeneralInformation">
<summary>
General information of products. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewProductPropertyAndCasualtyLineOfBusinessInstance">
<summary>
Initializes the 'ProductPropertyAndCasualtyLineOfBusiness' instance.
</summary>
 <returns>The 'ProductPropertyAndCasualtyLineOfBusiness' class instance.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.ProductPropertyAndCasualtyLineOfBusiness">
<summary>
General information on a Property and casualty product. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewProductLifeLineOfBusinessInstance">
<summary>
Initializes the 'ProductLifeLineOfBusiness' instance.
</summary>
 <returns>The 'ProductLifeLineOfBusiness' class instance.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.ProductLifeLineOfBusiness">
<summary>
General information of the life products. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewSequencePoliciesInstance">
<summary>
Initializes the 'SequencePolicies' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewSequencePolicyItem(System.Boolean)">
<summary>
Add a new item to the collection of 'SequencePolicies', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'SequencePolicy' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.SequencePolicies">
<summary>
Sequence of windows to policy process. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewSurrenderValueRetentionsInstance">
<summary>
Initializes the 'SurrenderValueRetentions' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewSurrenderValueRetentionItem(System.Boolean)">
<summary>
Add a new item to the collection of 'SurrenderValueRetentions', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'SurrenderValueRetention' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.SurrenderValueRetentions">
<summary>
Table of retention according to the surrender value. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewActiveLifePlansInstance">
<summary>
Initializes the 'ActiveLifePlans' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewActiveLifePlanItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ActiveLifePlans', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ActiveLifePlan' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.ActiveLifePlans">
<summary>
Terms of Active Life Plans. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewExcludedIllnessByProductInHealthPoliciesInstance">
<summary>
Initializes the 'ExcludedIllnessByProductInHealthPolicies' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewExcludedIllnessByProductInHealthPolicyItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ExcludedIllnessByProductInHealthPolicies', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ExcludedIllnessByProductInHealthPolicy' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.ExcludedIllnessByProductInHealthPolicies">
<summary>
Exclusion of illnesses from products. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewBillingConceptsProductsInstance">
<summary>
Initializes the 'BillingConceptsProducts' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewBillingConceptsProductItem(System.Boolean)">
<summary>
Add a new item to the collection of 'BillingConceptsProducts', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'BillingConceptsProduct' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.BillingConceptsProducts">
<summary>
Billing Concepts product. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewProductClausesInstance">
<summary>
Initializes the 'ProductClauses' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewProductClauseItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ProductClauses', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ProductClause' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.ProductClauses">
<summary>
Clauses in a product. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewLifeCoverageRolsInstance">
<summary>
Initializes the 'LifeCoverageRols' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewLifeCoverageRolItem(System.Boolean)">
<summary>
Add a new item to the collection of 'LifeCoverageRols', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'LifeCoverageRol' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.LifeCoverageRols">
<summary>
Roles permitted for a life coverage. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewProductGuaranteedValuesInstance">
<summary>
Initializes the 'ProductGuaranteedValues' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewProductGuaranteedValueItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ProductGuaranteedValues', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ProductGuaranteedValue' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.ProductGuaranteedValues">
<summary>
Table of guaranteed value of a product. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewProductModulesInstance">
<summary>
Initializes the 'ProductModules' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewProductModuleItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ProductModules', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ProductModule' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.ProductModules">
<summary>
Table of modules of a general line of business product. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewProductProtectionElementsInstance">
<summary>
Initializes the 'ProductProtectionElements' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewProductProtectionElementItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ProductProtectionElements', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ProductProtectionElement' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.ProductProtectionElements">
<summary>
Protection elements table of a product. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewRequerimentExclusionProductsInstance">
<summary>
Initializes the 'RequerimentExclusionProducts' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewRequerimentExclusionProductItem(System.Boolean)">
<summary>
Add a new item to the collection of 'RequerimentExclusionProducts', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'RequerimentExclusionProduct' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.RequerimentExclusionProducts">
<summary>
Table of requirements and exclusions of the product. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewShortTermInsurancesInstance">
<summary>
Initializes the 'ShortTermInsurances' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewShortTermInsuranceItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ShortTermInsurances', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ShortTermInsurance' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.ShortTermInsurances">
<summary>
table of short-term insurance. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewRatingTableAPVProductsInstance">
<summary>
Initializes the 'RatingTableAPVProducts' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewRatingTableAPVProductItem(System.Boolean)">
<summary>
Add a new item to the collection of 'RatingTableAPVProducts', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'RatingTableAPVProduct' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.RatingTableAPVProducts">
<summary>
Rating table of the APV product. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewProductAllowPerVehiclesInstance">
<summary>
Initializes the 'ProductAllowPerVehicles' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewProductAllowPerVehicleItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ProductAllowPerVehicles', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ProductAllowPerVehicle' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.ProductAllowPerVehicles">
<summary>
Line of business- products allowed per vehicle. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewPaymentWaysAllowedByProductsInstance">
<summary>
Initializes the 'PaymentWaysAllowedByProducts' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewPaymentWaysAllowedByProductItem(System.Boolean)">
<summary>
Add a new item to the collection of 'PaymentWaysAllowedByProducts', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'PaymentWaysAllowedByProduct' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.PaymentWaysAllowedByProducts">
<summary>
Ways of payment allowed by product. collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewOriginByTypePaymentCollectionInstance">
<summary>
Initializes the 'OriginByTypePaymentCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewOriginByTypePaymentItem(System.Boolean)">
<summary>
Add a new item to the collection of 'OriginByTypePaymentCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'OriginByTypePayment' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.OriginByTypePaymentCollection">
<summary>
Account to be affected by each type of deposit collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewRateTablePerProductCollectionInstance">
<summary>
Initializes the 'RateTablePerProductCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewRateTablePerProductItem(System.Boolean)">
<summary>
Add a new item to the collection of 'RateTablePerProductCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'RateTablePerProduct' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.RateTablePerProductCollection">
<summary>
Tables of rates of the product collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewAgreementsByWayOfPaymentCollectionInstance">
<summary>
Initializes the 'AgreementsByWayOfPaymentCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewAgreementsByWayOfPaymentItem(System.Boolean)">
<summary>
Add a new item to the collection of 'AgreementsByWayOfPaymentCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'AgreementsByWayOfPayment' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.AgreementsByWayOfPaymentCollection">
<summary>
Agreements by way of payment collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewCommercialProductsCollectionInstance">
<summary>
Initializes the 'CommercialProductsCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewCommercialProductItem(System.Boolean)">
<summary>
Add a new item to the collection of 'CommercialProductsCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'CommercialProduct' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.CommercialProductsCollection">
<summary>
Master of commercial products collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewCoveragesCombinedForMaxEventsCollectionInstance">
<summary>
Initializes the 'CoveragesCombinedForMaxEventsCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewCoveragesCombinedForMaxEventItem(System.Boolean)">
<summary>
Add a new item to the collection of 'CoveragesCombinedForMaxEventsCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'CoveragesCombinedForMaxEvent' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.CoveragesCombinedForMaxEventsCollection">
<summary>
Conditions of Modules / Coverages for the control of Maximum Event in Claims collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewCoveragesLimitsPerEventsCollectionInstance">
<summary>
Initializes the 'CoveragesLimitsPerEventsCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewCoveragesLimitsPerEventItem(System.Boolean)">
<summary>
Add a new item to the collection of 'CoveragesLimitsPerEventsCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'CoveragesLimitsPerEvent' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.CoveragesLimitsPerEventsCollection">
<summary>
Limits of coverage for events in claims collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewParticularDataOfTheProductoCollectionInstance">
<summary>
Initializes the 'ParticularDataOfTheProductoCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.NewParticularDataOfTheProductoItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ParticularDataOfTheProductoCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ParticularDataOfTheProducto' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.ParticularDataOfTheProductoCollection">
<summary>
Particular data of the producto collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.Compare(InMotionGIT.Product.Entity.Contracts.ProductMaster,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ProductMasterItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.CustomString">
 <summary>
 Extensibility custom string property.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.CustomStringEx">
 <summary>
 Extensibility custom string ex property.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.CustomNumeric">
 <summary>
 Extensibility custom decimal property.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.CustomNumericEx">
 <summary>
 Extensibility custom decimal ex property.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.CustomDate">
 <summary>
 Extensibility custom date property.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.CustomDateEx">
 <summary>
 Extensibility custom date ex property.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.CustomBoolean">
 <summary>
 Extensibility custom boolean property.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.CustomBooleanEx">
 <summary>
 Extensibility custom boolean ex property.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMaster.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.LineOfBusinessDescription">
 <summary>
 Code of the line of business.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE10'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMaster.TypeOfLineOfBusinessDescription">
 <summary>
 Code of the type of line of business.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE37'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ProductMasterCollection">
 <summary>
 Collection for ProductMaster class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMasterCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMasterCollection.AddProductMaster">
 <summary>
 Add an instance of class 'ProductMaster' in the ProductMasterCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMasterCollection.Compare(InMotionGIT.Product.Entity.Contracts.ProductMasterCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductMasterCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMasterCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductMasterCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ProductModule">
 <summary>
 Table of modules of a general line of business product.
 </summary>
<remarks>Data-source is 'TAB_MODUL'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductModule.CreateNewProductModule">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductModule.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._ChangesAreAllowed">
<summary>
It indicates that changes are allowed.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._SelectedByDefault">
<summary>
Indicator of &#34;selected by default&#34; for the Treatment of policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._Description">
<summary>
Description of the module.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._Required">
<summary>
Indicator of module requirement when issuing a policy
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._ShortDescription">
<summary>
Short description of the module.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._Approval">
<summary>
Official approval number by Insurances Authority.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._Routine">
<summary>
Calculation routine and/or validation.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._FixedRate">
<summary>
Fixed rate for this module.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._SecurityLevelForUpdatingRate">
<summary>
Security level needed for the user to update the rate.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._MaximumPercentageOfIncrease">
<summary>
Maximum increase percentage permitted for the rate.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._MaximumPercentageOfDecrease">
<summary>
Allowed maximum percentage of diminution of premium rate.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._TypeOfChangesAllowedOnPremium">
<summary>
Type of change possible to make on the premium.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._RatingByModuleIndicator">
<summary>
Indicator of rating by module.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._SVIGEN">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._SDEPEND">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._sClaimMandatoryFields">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._CodeCoverageGroupingOfModules">
<summary>
Code coverage grouping of modules
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._IndicatorModuleCountsMandatory">
<summary>
Module counts as mandatory
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._MaximunInsuredCapital">
<summary>
Maximum Insured Capital.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._MinimunInsuredCapital">
<summary>
Minimum Insured Capital.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._ModulesAvailableByCommercialActivityCollection">
<summary>
Modules available by Commercial Activity
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductModule._SiCoverGes_APLCollection">
<summary>
SICOVERGES APL
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAB_MODUL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAB_MODUL.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'TAB_MODUL.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAB_MODUL.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.ChangesAreAllowed">
<summary>
It indicates that changes are allowed. (SCHANALLO)..
</summary>
<remarks>Data-source is 'TAB_MODUL.SCHANALLO'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_MODUL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.SelectedByDefault">
<summary>
Indicator of &#34;selected by default&#34; for the Treatment of policy. (SDEFAULTI)..
</summary>
<remarks>Data-source is 'TAB_MODUL.SDEFAULTI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.Description">
<summary>
Description of the module. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'TAB_MODUL.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAB_MODUL.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.Required">
<summary>
Indicator of module requirement when issuing a policy (SREQUIRE)..
</summary>
<remarks>Data-source is 'TAB_MODUL.SREQUIRE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.ShortDescription">
<summary>
Short description of the module. (SSHORT_DES)..
</summary>
<remarks>Data-source is 'TAB_MODUL.SSHORT_DES'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_MODUL.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.Approval">
<summary>
Official approval number by Insurances Authority. (SCONDSVS)..
</summary>
<remarks>Data-source is 'TAB_MODUL.SCONDSVS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.Routine">
<summary>
Calculation routine and/or validation. (SROUTINE)..
</summary>
<remarks>Data-source is 'TAB_MODUL.SROUTINE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.FixedRate">
<summary>
Fixed rate for this module. (NPREMIRAT)..
</summary>
<remarks>Data-source is 'TAB_MODUL.NPREMIRAT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.SecurityLevelForUpdatingRate">
<summary>
Security level needed for the user to update the rate. (NCHPRELEV)..
</summary>
<remarks>Data-source is 'TAB_MODUL.NCHPRELEV'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.MaximumPercentageOfIncrease">
<summary>
Maximum increase percentage permitted for the rate. (NRATEPREADD)..
</summary>
<remarks>Data-source is 'TAB_MODUL.NRATEPREADD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.MaximumPercentageOfDecrease">
<summary>
Allowed maximum percentage of diminution of premium rate. (NRATEPRESUB)..
</summary>
<remarks>Data-source is 'TAB_MODUL.NRATEPRESUB'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.TypeOfChangesAllowedOnPremium">
<summary>
Type of change possible to make on the premium. (SCHANGETYP)..
</summary>
<remarks>Data-source is 'TAB_MODUL.SCHANGETYP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.RatingByModuleIndicator">
<summary>
Indicator of rating by module. (STYP_RAT)..
</summary>
<remarks>Data-source is 'TAB_MODUL.STYP_RAT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.SVIGEN">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_MODUL.SVIGEN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.SDEPEND">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_MODUL.SDEPEND'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.sClaimMandatoryFields">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_MODUL.SCLAIMMANDATORYFIELDS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.CodeCoverageGroupingOfModules">
<summary>
Code coverage grouping of modules (NGROUPMOD)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_MODUL.NGROUPMOD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.IndicatorModuleCountsMandatory">
<summary>
Module counts as mandatory (SREQUIRECOUNT)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_MODUL.SREQUIRECOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.MaximunInsuredCapital">
<summary>
Maximum Insured Capital. (NCACALMAX)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_MODUL.NCACALMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.MinimunInsuredCapital">
<summary>
Minimum Insured Capital. (NCACALMIN)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_MODUL.NCACALMIN'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductModule.NewModulesAvailableByCommercialActivityCollectionInstance">
<summary>
Initializes the 'ModulesAvailableByCommercialActivityCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductModule.NewModulesAvailableByCommercialActivityItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ModulesAvailableByCommercialActivityCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ModulesAvailableByCommercialActivity' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.ModulesAvailableByCommercialActivityCollection">
<summary>
Modules available by Commercial Activity collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductModule.NewSiCoverGes_APLCollectionInstance">
<summary>
Initializes the 'SiCoverGes_APLCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductModule.NewSiCoverGes_APLItem(System.Boolean)">
<summary>
Add a new item to the collection of 'SiCoverGes_APLCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'SiCoverGes_APL' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModule.SiCoverGes_APLCollection">
<summary>
SICOVERGES APL collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductModule.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductModule.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductModule.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductModule.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductModule.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductModule.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductModule.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductModule.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductModule.Compare(InMotionGIT.Product.Entity.Contracts.ProductModule,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ProductModuleItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductModule.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductModule.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductModule.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductModule.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ProductModuleCollection">
 <summary>
 Collection for ProductModule class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductModuleCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductModuleCollection.AddProductModule">
 <summary>
 Add an instance of class 'ProductModule' in the ProductModuleCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductModuleCollection.Compare(InMotionGIT.Product.Entity.Contracts.ProductModuleCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductModuleCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductModuleCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductModuleCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness">
 <summary>
 General information on a Property and casualty product.
 </summary>
<remarks>Data-source is 'PRODUCT_GE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.CreateNewProductPropertyAndCasualtyLineOfBusiness">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._FranchiseOrDeductibleApplied">
<summary>
It indicates if a franchise or deductible is applied
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._MaximumAmountOfFranchiseOrDeductible">
<summary>
Maximum franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._MinimumAmountOfFranchiseOrDeductible">
<summary>
Minimum franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._FranchiseOrDeductiblePercentage">
<summary>
Franchise or deductible percentage to be applied.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._FranchiseOrDeductible">
<summary>
It indicates whether a franchise or deductible is applied
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._MinimumSecurityLevelForPaymentsHigherThanReservedAmount">
<summary>
Minimum updating level (security) that the user must have in order to make payments higher than the reserved amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._DetailOfPaymentRequirementIndicator">
<summary>
Indicator for requirement of detail per payment item.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._MinimumPremiumForEndorsement">
<summary>
Minimum premium amount for policy amendment.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._MinimumPremiumForNewPolicies">
<summary>
Minimum premium amount for policy issuing.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._ReserveBasedOnAverageCost">
<summary>
Indicator of reserve based on average cost.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._PaymentsAboveReservedAmountAllowed">
<summary>
It indicates that payments above reserves are allowed.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._PermissionToSuspend">
<summary>
Authorization to suspend policy guarantees.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._FixedAmountOfFranchiseOrDeductible">
<summary>
Fixed franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._UnderwritingLine">
<summary>
Product underwriting line.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._NMXYEARBUILT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._NDUPLICATEDTYPE">
<summary>
NDUPLICATEDTYPE
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._MaximumDaysAllowed">
<summary>
Maximum days allowed
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'PRODUCT_GE.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'PRODUCT_GE.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'PRODUCT_GE.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'PRODUCT_GE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'PRODUCT_GE.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.FranchiseOrDeductibleApplied">
<summary>
It indicates if a franchise or deductible is applied (SFRANCAPL)..
</summary>
<remarks>Data-source is 'PRODUCT_GE.SFRANCAPL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.MaximumAmountOfFranchiseOrDeductible">
<summary>
Maximum franchise or deductible amount. (NFRANCMAX)..
</summary>
<remarks>Data-source is 'PRODUCT_GE.NFRANCMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.MinimumAmountOfFranchiseOrDeductible">
<summary>
Minimum franchise or deductible amount. (NFRANCMIN)..
</summary>
<remarks>Data-source is 'PRODUCT_GE.NFRANCMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.FranchiseOrDeductiblePercentage">
<summary>
Franchise or deductible percentage to be applied. (NFRANCRAT)..
</summary>
<remarks>Data-source is 'PRODUCT_GE.NFRANCRAT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.FranchiseOrDeductible">
<summary>
It indicates whether a franchise or deductible is applied (SFRANTYPE)..
</summary>
<remarks>Data-source is 'PRODUCT_GE.SFRANTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.MinimumSecurityLevelForPaymentsHigherThanReservedAmount">
<summary>
Minimum updating level (security) that the user must have in order to make payments higher than the reserved amount. (NLEVELPAY)..
</summary>
<remarks>Data-source is 'PRODUCT_GE.NLEVELPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'PRODUCT_GE.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.DetailOfPaymentRequirementIndicator">
<summary>
Indicator for requirement of detail per payment item. (NPAYCONRE)..
</summary>
<remarks>Data-source is 'PRODUCT_GE.NPAYCONRE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.MinimumPremiumForEndorsement">
<summary>
Minimum premium amount for policy amendment. (NPRE_AMEND)..
</summary>
<remarks>Data-source is 'PRODUCT_GE.NPRE_AMEND'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.MinimumPremiumForNewPolicies">
<summary>
Minimum premium amount for policy issuing. (NPRE_ISSUE)..
</summary>
<remarks>Data-source is 'PRODUCT_GE.NPRE_ISSUE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.ReserveBasedOnAverageCost">
<summary>
Indicator of reserve based on average cost. (SRESEMEDI)..
</summary>
<remarks>Data-source is 'PRODUCT_GE.SRESEMEDI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.PaymentsAboveReservedAmountAllowed">
<summary>
It indicates that payments above reserves are allowed. (SRESMAYPA)..
</summary>
<remarks>Data-source is 'PRODUCT_GE.SRESMAYPA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.PermissionToSuspend">
<summary>
Authorization to suspend policy guarantees. (SSUSPENDI)..
</summary>
<remarks>Data-source is 'PRODUCT_GE.SSUSPENDI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'PRODUCT_GE.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.FixedAmountOfFranchiseOrDeductible">
<summary>
Fixed franchise or deductible amount. (NFRANCFIX)..
</summary>
<remarks>Data-source is 'PRODUCT_GE.NFRANCFIX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.UnderwritingLine">
<summary>
Product underwriting line. (NCOMERLINE)..
</summary>
<remarks>Data-source is 'PRODUCT_GE.NCOMERLINE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.NMXYEARBUILT">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT_GE.NMXYEARBUILT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.NDUPLICATEDTYPE">
<summary>
NDUPLICATEDTYPE.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT_GE.NDUPLICATEDTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.MaximumDaysAllowed">
<summary>
Maximum days allowed (NPRODMAXDAYS)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PRODUCT_GE.NPRODMAXDAYS'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.Compare(InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ProductPropertyAndCasualtyLineOfBusinessItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.FranchiseOrDeductibleAppliedDescription">
 <summary>
 It indicates if a franchise or deductible is applied
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE33'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.FranchiseOrDeductibleDescription">
 <summary>
 It indicates whether a franchise or deductible is applied
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE64'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.DetailOfPaymentRequirementIndicatorDescription">
 <summary>
 Indicator for requirement of detail per payment item.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE60'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusiness.UnderwritingLineDescription">
 <summary>
 Product underwriting line.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5009'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusinessCollection">
 <summary>
 Collection for ProductPropertyAndCasualtyLineOfBusiness class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusinessCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusinessCollection.AddProductPropertyAndCasualtyLineOfBusiness">
 <summary>
 Add an instance of class 'ProductPropertyAndCasualtyLineOfBusiness' in the ProductPropertyAndCasualtyLineOfBusinessCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusinessCollection.Compare(InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusinessCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusinessCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusinessCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductPropertyAndCasualtyLineOfBusinessCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement">
 <summary>
 Protection elements table of a product.
 </summary>
<remarks>Data-source is 'TAB_PROTEC'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.CreateNewProductProtectionElement">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement._ProtectionElement">
<summary>
Code of the Protection Element.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement._Description">
<summary>
Description of the protection element.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement._DiscountAmount">
<summary>
Amount of discount because of element of protection.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement._MaximumDiscount">
<summary>
Maximum amount of discount to be applied
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement._MinimumDiscount">
<summary>
Minimum amount of discount to be applied
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement._DiscountPercentage">
<summary>
Percentage of discount because of element of protection.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement._ShortDescription">
<summary>
Short description of the protection element.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement._Routine">
<summary>
Calculation routine of the discount related to the element of protection.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAB_PROTEC.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAB_PROTEC.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.ProtectionElement">
<summary>
Code of the Protection Element. (NELEMENT)..
</summary>
<remarks>Data-source is 'TAB_PROTEC.NELEMENT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAB_PROTEC.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_PROTEC.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'TAB_PROTEC.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.Description">
<summary>
Description of the protection element. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'TAB_PROTEC.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.DiscountAmount">
<summary>
Amount of discount because of element of protection. (NDISCOUNT)..
</summary>
<remarks>Data-source is 'TAB_PROTEC.NDISCOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.MaximumDiscount">
<summary>
Maximum amount of discount to be applied (NDISMAXIM)..
</summary>
<remarks>Data-source is 'TAB_PROTEC.NDISMAXIM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.MinimumDiscount">
<summary>
Minimum amount of discount to be applied (NDISMININ)..
</summary>
<remarks>Data-source is 'TAB_PROTEC.NDISMININ'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.DiscountPercentage">
<summary>
Percentage of discount because of element of protection. (NDISRATE)..
</summary>
<remarks>Data-source is 'TAB_PROTEC.NDISRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAB_PROTEC.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.ShortDescription">
<summary>
Short description of the protection element. (SSHORT_DES)..
</summary>
<remarks>Data-source is 'TAB_PROTEC.SSHORT_DES'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'TAB_PROTEC.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_PROTEC.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.Routine">
<summary>
Calculation routine of the discount related to the element of protection. (SROUTINE)..
</summary>
<remarks>Data-source is 'TAB_PROTEC.SROUTINE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.Compare(InMotionGIT.Product.Entity.Contracts.ProductProtectionElement,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ProductProtectionElementItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductProtectionElement.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ProductProtectionElementCollection">
 <summary>
 Collection for ProductProtectionElement class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductProtectionElementCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductProtectionElementCollection.AddProductProtectionElement">
 <summary>
 Add an instance of class 'ProductProtectionElement' in the ProductProtectionElementCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductProtectionElementCollection.Compare(InMotionGIT.Product.Entity.Contracts.ProductProtectionElementCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ProductProtectionElementCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductProtectionElementCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ProductProtectionElementCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage">
 <summary>
 Covers of property and casualty product.
 </summary>
<remarks>Data-source is 'GEN_COVER'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.CreateNewPropertyAndCasualtyCoverage">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._AddsToObtainReinsuredAmount">
<summary>
Indicator of the addition to determine the reinsurance sum insured.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._AccountingLineOfBusiness">
<summary>
Code of the accounting line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._AddsToObtainInsuredAmount">
<summary>
Indicator of the addition to obtain the sum insured
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._SolvencyMarginClass">
<summary>
Classification code for the solvency margin.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._AddsToObtainBaseForTaxes">
<summary>
Indicator of the addition to obtain the base amount for taxes.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._AutomaticLimitReinstatement">
<summary>
Automatic reinstatement of limit or sum insured (Indicator).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._BillingItem">
<summary>
Billing item.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._GenericLineOfBusiness">
<summary>
Code of the generic line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._ReinsuranceLineOfBusiness">
<summary>
Code of the line of business for reinsurance.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._BaseCoverageForCalculation">
<summary>
Code of coverage on which the percentage is applied to obtain the limit of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._FixedInsuredAmount">
<summary>
Fixed amount of the sum insured.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._FreeInsuredAmount">
<summary>
The sum insured will be entered by the user at the moment of issuing the policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._UnlimitedCoverage">
<summary>
Unlimited sum insured indicator (infinite limit).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MaximumInsuredAmount">
<summary>
Maximum sum insured
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._PercentageToApplyOverAnotherCoverageToObtainInsuredAmount">
<summary>
Percentage to be applied to the sum insured of another coverage to obtain this sum insured.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._IndexedLimit">
<summary>
Indexed limit indicator (indexed insured amount).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MaximumPercentageOfIncreaseOfInsuredAmount">
<summary>
Allowed maximum percentage of increase of the sum insured.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MaximumPercentageOfDecreaseOfInsuredAmount">
<summary>
Allowed maximum percentage of decrease of the sum insured.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._TypeOfChangesAllowedOnInsuredAmount">
<summary>
Type of changes allowed on the sum insured (limit).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MaximumPercentageOfDecreaseOfFranchiseDeductible">
<summary>
Allowed maximum percentage of decrease of the franchise/deductible.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MaximumPercentageOfIncreaseOfDecrease">
<summary>
Allowed maximum percentage of increase/decrease
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._TypeOfChangesAllowedOnPremium">
<summary>
Type of changes allowed on the premium
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._ContainerCoverage">
<summary>
Code of the coverage that contains the premium of this coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._CoverageToApplyRateOn">
<summary>
Code of the coverage on which the rate is applied.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._GenericCoverage">
<summary>
Code of the generic coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._SelectedByDefault">
<summary>
Indicator of &#34;selected by default&#34; for the Treatment of policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._FranchiseOrDeductible">
<summary>
It indicates if a franchise or deductible is applied
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._FixedAmountOfFranchiseOrDeductible">
<summary>
Fixed franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MaximumAmountOfFranchiseOrDeductible">
<summary>
Maximum franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MinimumAmountOfFranchiseOrDeductible">
<summary>
Minimum franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._FranchiseOrDeductiblePercentage">
<summary>
Franchise or deductible percentage to be applied.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._FranchiseOrDeductibleIndicator">
<summary>
It indicates whether a franchise or deductible is applied
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._AverageCostOfLosses">
<summary>
Average amount to make the reserve of claim of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._NoteID">
<summary>
Number of the note containing the comments of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._FixedPremium">
<summary>
Fixed premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MaximumPremium">
<summary>
Maximum premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MinimumPremium">
<summary>
Minimum premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._RatePerThousand">
<summary>
Rate per thousands (o/oo) of calculation of the premium of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._Required">
<summary>
The coverage is mandatory when issuing the policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._RoutineForCalculationOfInsuredAmount">
<summary>
Calculation routine for sum insured or limit.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._RoutineForFranchiseOrDeductible">
<summary>
Calculation routine for franchise/deductible.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._RoutineForCalculationOfPremium">
<summary>
Routine of calculation and/or validation of the premium
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._RoutineForClaimReserve">
<summary>
Routine of calculation and/or validation of the claim reserve.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._SecurityLevelForUpdatingInsuredAmount">
<summary>
Security level needed for the user to update the sum insured
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._SecurityLevelForUpdatingPremium">
<summary>
Security level needed for the user to update the premium.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MinimumInsuredAmount">
<summary>
Minimum sum insured
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._FranchiseOrDeductibleRequired">
<summary>
The franchise/deductible is required.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._PossibleChangesToFranchiseOrDeductible">
<summary>
Type of changes allowed on the franchise/deductible
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._SecurityLevelForUpdatingFranchiseOrDeductible">
<summary>
Level of the user (update or query) for franchise/deductible.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MaximumPercentageOfIncreaseForFranchiseOrDeductible">
<summary>
Allowed maximum percentage of increase of the franchise/deductible.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MaximumPercentageOfDecrease">
<summary>
Allowed maximum percentage of decrease of the franchise/deductible.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._HealthCoverageIndicator">
<summary>
It indicates that the coverage is of type &#34;Health&#34;/&#34;Medical expenses&#34;.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._PercentageToApply">
<summary>
Percentage to be applied to the premium/rate calculated by the system
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._PremiumVerificationRoutine">
<summary>
Premium verification routine.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._TimingForPremiumRecalculation">
<summary>
Timing of coverage recalculation
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MaintainOriginalReinsurance">
<summary>
It indicates that the reinsurance distribution for the coverage should be always done under the active conditions to the date of incorporation of the coverage in the policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._LimitCalculatedOnBasicSumsInsured">
<summary>
It indicates that the sum insured will be determined based on the basic sums insured
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._Approval">
<summary>
Official approval number by Insurances Authority.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._RateLogicTableCode">
<summary>
Code of the rate logic table
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._FranchiseOrDeductiblePercentageClaim">
<summary>
Franchise or deductible percentage to be applied to the claim.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._FixedAmountOfFranchiseOrDeductibleClaim">
<summary>
fixed amount franchise or deductible amount to be applied to the claim.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MinimumAmountOfFranchiseOrDeductibleClaim">
<summary>
Minimum franchise or deductible amount Claim.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MaximumAmountOfFranchiseOrDeductibleClaim">
<summary>
Maximum franchise or deductible amount to be applied to the claim.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._DiscountPercentageClaim">
<summary>
Percentage of discount because of franchise or deductible.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._DiscountAmountClaim">
<summary>
Amount of discount because of the franchise or deductible.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._DaysFranchiseDeductible">
<summary>
Days of franchise or deductible to be applied.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._CodeCoverageGroupingOfModules">
<summary>
Code coverage grouping of modules
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MaximumNumberOfRisks">
<summary>
Maximum number of risks
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MaximumAmountOfCapitalForSpecificRisks">
<summary>
Maximum amount of capital for specific risks
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MinimumAmountOfCapitalForSpecificRisks">
<summary>
Minimum amount of capital for specific risks
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._RevalType">
<summary>
Indices of revaluation
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._CoinsurancePercentage">
<summary>
Percentage of coinsurance to apply.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._CoinsuranceAmount">
<summary>
Coinsurance Fix amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._CoinsuranceMaximumAmount">
<summary>
Coinsurance maximum amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._CoinsuranceMinimumAmount">
<summary>
Coinsurance minimum amount.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._CoinsuranceApplication">
<summary>
Coinsurance Flag application.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._SCATASTCOVER">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._SROU_COND_CAP">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._NMAXEVENTS">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._SROUPROVIDER">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._SINDSERVCOST">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._SROUPROVCOST">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._SINDCOSTRESE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._SCOROUTINE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._SCOREQUIRE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._SCOCHTYP">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._NCOUSERLEV">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._NCORATEADD">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._NCORATESUB">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._NORDERAPL">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._NFDCURRENCY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._NCOACURRENCY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._SCAREN_TYPE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._NCAREN_QUAN">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._SFDREHABREST">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._SCOVERUSE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._SINDSUMCLAIM">
<summary>
SINDSUMCLAIM
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._CalculationRoutineUsedObtainAmountSumInsuredRestitution">
<summary>
Calculation routine used for obtain the amount of sum insured restitution
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._FranchiseDeductiblePercentageClaim">
<summary>
Franchise or deductible percentage to be applied to the claim
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._FixedAmountFranchiseDeductibleAmountClaim">
<summary>
fixed amount franchise or deductible amount to be applied to the claim
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MinimumAmountFranchiseDeductibleAmountClaim">
<summary>
Minimum amount franchise or deductible amount to be applied to the claim
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MaximumFranchiseDeductibleAmountClaim">
<summary>
Maximum franchise or deductible amount to be applied to the claim
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._CalculationRoutineFranchiseDeductibleClaim">
<summary>
Calculation routine for franchise/deductible to be applied to the claim
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._ItIndicatesDeductibleCanModifiedManually">
<summary>
It indicates that the deductible can be modified manually in the window of the claim Payments
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._PrintIndicatorCapitalInsured">
<summary>
Print indicator the capital insured
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._PrintOrder">
<summary>
Print Order
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MultiplesIncreaseDecreaseInsuredAmount">
<summary>
Multiples of Increase or Decrease in insured amount
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._CodeTypeCoverage">
<summary>
Code of the type of coverage
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._TypeOfWaitPeriod">
<summary>
Type of waiting Period
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._DurationOfWaitPeriod">
<summary>
Number of days, months, hours of the waiting period
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._IndMaxEvent">
<summary>
Indicator for maximun of events
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._NumMaxEvents">
<summary>
Maximun number of events
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._FreqMaxEvents">
<summary>
Frequency for maximun of events
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._RoutineMaxEvents">
<summary>
Routine for maximun of events
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MinimumEntryAgeMales">
<summary>
Minimum entry age for this role (males).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MaximumEntryAgeMales">
<summary>
Maximum entry age for this role (males).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MaximumAgeInsuranceMales">
<summary>
Maximum age of insurance (Masculine).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MinimumEntryAgeFemales">
<summary>
Minimum entry age for this role (females).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MaximumEntryAgeFemales">
<summary>
Maximum entry age for this role (females).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._MaximumAgeInsuranceFemales">
<summary>
Maximum age of insurance (Female).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._SiCoverGes_APLCollection">
<summary>
SICOVERGES APL
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._IntegralRateCommerceCollection">
<summary>
Integral Rate Commerce
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._UnderwritingCriteriasForHomePolicies">
<summary>
Underwriting criterias for home policys
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._UnderwritingCriteriasForMultiRiskPolicy">
<summary>
Underwriting criterias for Multi Risk policys
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'GEN_COVER.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'GEN_COVER.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'GEN_COVER.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'GEN_COVER.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'GEN_COVER.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.AddsToObtainReinsuredAmount">
<summary>
Indicator of the addition to determine the reinsurance sum insured. (SADDREINI)..
</summary>
<remarks>Data-source is 'GEN_COVER.SADDREINI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.AddsToObtainReinsuredAmountEnum">
<summary>
Indicator of the addition to determine the reinsurance sum insured.
</summary>
<remarks>This property use a enumeration based on property 'AddsToObtainReinsuredAmount'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.AddsToObtainReinsuredAmountEnumText">
<summary>
Indicator of the addition to determine the reinsurance sum insured.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.AccountingLineOfBusiness">
<summary>
Code of the accounting line of business. (NBRANCH_LED)..
</summary>
<remarks>Data-source is 'GEN_COVER.NBRANCH_LED'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.AddsToObtainInsuredAmount">
<summary>
Indicator of the addition to obtain the sum insured (SADDSUINI)..
</summary>
<remarks>Data-source is 'GEN_COVER.SADDSUINI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.AddsToObtainInsuredAmountEnum">
<summary>
Indicator of the addition to obtain the sum insured
</summary>
<remarks>This property use a enumeration based on property 'AddsToObtainInsuredAmount'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.AddsToObtainInsuredAmountEnumText">
<summary>
Indicator of the addition to obtain the sum insured
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SolvencyMarginClass">
<summary>
Classification code for the solvency margin. (NBRANCH_EST)..
</summary>
<remarks>Data-source is 'GEN_COVER.NBRANCH_EST'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.AddsToObtainBaseForTaxes">
<summary>
Indicator of the addition to obtain the base amount for taxes. (SADDTAXIN)..
</summary>
<remarks>Data-source is 'GEN_COVER.SADDTAXIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.AddsToObtainBaseForTaxesEnum">
<summary>
Indicator of the addition to obtain the base amount for taxes.
</summary>
<remarks>This property use a enumeration based on property 'AddsToObtainBaseForTaxes'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.AddsToObtainBaseForTaxesEnumText">
<summary>
Indicator of the addition to obtain the base amount for taxes.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.AutomaticLimitReinstatement">
<summary>
Automatic reinstatement of limit or sum insured (Indicator). (SAUTOMREP)..
</summary>
<remarks>Data-source is 'GEN_COVER.SAUTOMREP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.BillingItem">
<summary>
Billing item. (NBILL_ITEM)..
</summary>
<remarks>Data-source is 'GEN_COVER.NBILL_ITEM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.GenericLineOfBusiness">
<summary>
Code of the generic line of business. (NBRANCH_GEN)..
</summary>
<remarks>Data-source is 'GEN_COVER.NBRANCH_GEN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.ReinsuranceLineOfBusiness">
<summary>
Code of the line of business for reinsurance. (NBRANCH_REI)..
</summary>
<remarks>Data-source is 'GEN_COVER.NBRANCH_REI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.BaseCoverageForCalculation">
<summary>
Code of coverage on which the percentage is applied to obtain the limit of the coverage. (NCACALCOV)..
</summary>
<remarks>Data-source is 'GEN_COVER.NCACALCOV'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.FixedInsuredAmount">
<summary>
Fixed amount of the sum insured. (NCACALFIX)..
</summary>
<remarks>Data-source is 'GEN_COVER.NCACALFIX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.FreeInsuredAmount">
<summary>
The sum insured will be entered by the user at the moment of issuing the policy. (SCACALFRI)..
</summary>
<remarks>Data-source is 'GEN_COVER.SCACALFRI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.UnlimitedCoverage">
<summary>
Unlimited sum insured indicator (infinite limit). (SCACALILI)..
</summary>
<remarks>Data-source is 'GEN_COVER.SCACALILI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MaximumInsuredAmount">
<summary>
Maximum sum insured (NCACALMAX)..
</summary>
<remarks>Data-source is 'GEN_COVER.NCACALMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.PercentageToApplyOverAnotherCoverageToObtainInsuredAmount">
<summary>
Percentage to be applied to the sum insured of another coverage to obtain this sum insured. (NCACALPER)..
</summary>
<remarks>Data-source is 'GEN_COVER.NCACALPER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.IndexedLimit">
<summary>
Indexed limit indicator (indexed insured amount). (SCACALREI)..
</summary>
<remarks>Data-source is 'GEN_COVER.SCACALREI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MaximumPercentageOfIncreaseOfInsuredAmount">
<summary>
Allowed maximum percentage of increase of the sum insured. (NRATECAPADD)..
</summary>
<remarks>Data-source is 'GEN_COVER.NRATECAPADD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MaximumPercentageOfDecreaseOfInsuredAmount">
<summary>
Allowed maximum percentage of decrease of the sum insured. (NRATECAPSUB)..
</summary>
<remarks>Data-source is 'GEN_COVER.NRATECAPSUB'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.TypeOfChangesAllowedOnInsuredAmount">
<summary>
Type of changes allowed on the sum insured (limit). (SCH_TYP_CAP)..
</summary>
<remarks>Data-source is 'GEN_COVER.SCH_TYP_CAP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MaximumPercentageOfDecreaseOfFranchiseDeductible">
<summary>
Allowed maximum percentage of decrease of the franchise/deductible. (NRATEPREADD)..
</summary>
<remarks>Data-source is 'GEN_COVER.NRATEPREADD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MaximumPercentageOfIncreaseOfDecrease">
<summary>
Allowed maximum percentage of increase/decrease (NRATEPRESUB)..
</summary>
<remarks>Data-source is 'GEN_COVER.NRATEPRESUB'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.TypeOfChangesAllowedOnPremium">
<summary>
Type of changes allowed on the premium (SCHANGE_TYP)..
</summary>
<remarks>Data-source is 'GEN_COVER.SCHANGE_TYP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'GEN_COVER.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.ContainerCoverage">
<summary>
Code of the coverage that contains the premium of this coverage. (NCOVER_IN)..
</summary>
<remarks>Data-source is 'GEN_COVER.NCOVER_IN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.CoverageToApplyRateOn">
<summary>
Code of the coverage on which the rate is applied. (NCOVERAPL)..
</summary>
<remarks>Data-source is 'GEN_COVER.NCOVERAPL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.GenericCoverage">
<summary>
Code of the generic coverage. (NCOVERGEN)..
</summary>
<remarks>Data-source is 'GEN_COVER.NCOVERGEN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'GEN_COVER.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SelectedByDefault">
<summary>
Indicator of &#34;selected by default&#34; for the Treatment of policy. (SDEFAULTI)..
</summary>
<remarks>Data-source is 'GEN_COVER.SDEFAULTI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.FranchiseOrDeductible">
<summary>
It indicates if a franchise or deductible is applied (SFRANCAPL)..
</summary>
<remarks>Data-source is 'GEN_COVER.SFRANCAPL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.FixedAmountOfFranchiseOrDeductible">
<summary>
Fixed franchise or deductible amount. (NFRANCFIX)..
</summary>
<remarks>Data-source is 'GEN_COVER.NFRANCFIX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MaximumAmountOfFranchiseOrDeductible">
<summary>
Maximum franchise or deductible amount. (NFRANCMAX)..
</summary>
<remarks>Data-source is 'GEN_COVER.NFRANCMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MinimumAmountOfFranchiseOrDeductible">
<summary>
Minimum franchise or deductible amount. (NFRANCMIN)..
</summary>
<remarks>Data-source is 'GEN_COVER.NFRANCMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.FranchiseOrDeductiblePercentage">
<summary>
Franchise or deductible percentage to be applied. (NFRANCRAT)..
</summary>
<remarks>Data-source is 'GEN_COVER.NFRANCRAT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.FranchiseOrDeductibleIndicator">
<summary>
It indicates whether a franchise or deductible is applied (SFRANTYPE)..
</summary>
<remarks>Data-source is 'GEN_COVER.SFRANTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.AverageCostOfLosses">
<summary>
Average amount to make the reserve of claim of the coverage. (NMEDRESER)..
</summary>
<remarks>Data-source is 'GEN_COVER.NMEDRESER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.NoteID">
<summary>
Number of the note containing the comments of the coverage. (NNOTENUM)..
</summary>
<remarks>Data-source is 'GEN_COVER.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'GEN_COVER.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.FixedPremium">
<summary>
Fixed premium amount. (NPREMIFIX)..
</summary>
<remarks>Data-source is 'GEN_COVER.NPREMIFIX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MaximumPremium">
<summary>
Maximum premium amount. (NPREMIMAX)..
</summary>
<remarks>Data-source is 'GEN_COVER.NPREMIMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MinimumPremium">
<summary>
Minimum premium amount. (NPREMIMIN)..
</summary>
<remarks>Data-source is 'GEN_COVER.NPREMIMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.RatePerThousand">
<summary>
Rate per thousands (o/oo) of calculation of the premium of the coverage. (NPREMIRAT)..
</summary>
<remarks>Data-source is 'GEN_COVER.NPREMIRAT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.Required">
<summary>
The coverage is mandatory when issuing the policy. (SREQUIRE)..
</summary>
<remarks>Data-source is 'GEN_COVER.SREQUIRE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.RoutineForCalculationOfInsuredAmount">
<summary>
Calculation routine for sum insured or limit. (SROUCAPIT)..
</summary>
<remarks>Data-source is 'GEN_COVER.SROUCAPIT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.RoutineForFranchiseOrDeductible">
<summary>
Calculation routine for franchise/deductible. (SROUFRANC)..
</summary>
<remarks>Data-source is 'GEN_COVER.SROUFRANC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.RoutineForCalculationOfPremium">
<summary>
Routine of calculation and/or validation of the premium (SROUPREMI)..
</summary>
<remarks>Data-source is 'GEN_COVER.SROUPREMI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.RoutineForClaimReserve">
<summary>
Routine of calculation and/or validation of the claim reserve. (SROURESER)..
</summary>
<remarks>Data-source is 'GEN_COVER.SROURESER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'GEN_COVER.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'GEN_COVER.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SecurityLevelForUpdatingInsuredAmount">
<summary>
Security level needed for the user to update the sum insured (NCHCAPLEV)..
</summary>
<remarks>Data-source is 'GEN_COVER.NCHCAPLEV'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SecurityLevelForUpdatingPremium">
<summary>
Security level needed for the user to update the premium. (NCHPRELEV)..
</summary>
<remarks>Data-source is 'GEN_COVER.NCHPRELEV'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MinimumInsuredAmount">
<summary>
Minimum sum insured (NCACALMIN)..
</summary>
<remarks>Data-source is 'GEN_COVER.NCACALMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.FranchiseOrDeductibleRequired">
<summary>
The franchise/deductible is required. (SFDREQUIRE)..
</summary>
<remarks>Data-source is 'GEN_COVER.SFDREQUIRE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.PossibleChangesToFranchiseOrDeductible">
<summary>
Type of changes allowed on the franchise/deductible (SFDCHANTYP)..
</summary>
<remarks>Data-source is 'GEN_COVER.SFDCHANTYP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SecurityLevelForUpdatingFranchiseOrDeductible">
<summary>
Level of the user (update or query) for franchise/deductible. (NFDUSERLEV)..
</summary>
<remarks>Data-source is 'GEN_COVER.NFDUSERLEV'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MaximumPercentageOfIncreaseForFranchiseOrDeductible">
<summary>
Allowed maximum percentage of increase of the franchise/deductible. (NFDRATEADD)..
</summary>
<remarks>Data-source is 'GEN_COVER.NFDRATEADD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MaximumPercentageOfDecrease">
<summary>
Allowed maximum percentage of decrease of the franchise/deductible. (NFDRATESUB)..
</summary>
<remarks>Data-source is 'GEN_COVER.NFDRATESUB'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.HealthCoverageIndicator">
<summary>
It indicates that the coverage is of type &#34;Health&#34;/&#34;Medical expenses&#34;. (SIND_MED_EXP)..
</summary>
<remarks>Data-source is 'GEN_COVER.SIND_MED_EXP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.PercentageToApply">
<summary>
Percentage to be applied to the premium/rate calculated by the system (NAPPLY_PERC)..
</summary>
<remarks>Data-source is 'GEN_COVER.NAPPLY_PERC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.PremiumVerificationRoutine">
<summary>
Premium verification routine. (SROU_VERIFY)..
</summary>
<remarks>Data-source is 'GEN_COVER.SROU_VERIFY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.TimingForPremiumRecalculation">
<summary>
Timing of coverage recalculation (NRETARIF)..
</summary>
<remarks>Data-source is 'GEN_COVER.NRETARIF'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.TimingForPremiumRecalculationEnum">
<summary>
Timing of coverage recalculation
</summary>
<remarks>This property use a enumeration based on property 'TimingForPremiumRecalculation'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.TimingForPremiumRecalculationEnumText">
<summary>
Timing of coverage recalculation
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MaintainOriginalReinsurance">
<summary>
It indicates that the reinsurance distribution for the coverage should be always done under the active conditions to the date of incorporation of the coverage in the policy. (SREINORIGCOND)..
</summary>
<remarks>Data-source is 'GEN_COVER.SREINORIGCOND'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.LimitCalculatedOnBasicSumsInsured">
<summary>
It indicates that the sum insured will be determined based on the basic sums insured (SBAS_SUMINS)..
</summary>
<remarks>Data-source is 'GEN_COVER.SBAS_SUMINS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.Approval">
<summary>
Official approval number by Insurances Authority. (SCONDSVS)..
</summary>
<remarks>Data-source is 'GEN_COVER.SCONDSVS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.RateLogicTableCode">
<summary>
Code of the rate logic table (NID_TABLE)..
</summary>
<remarks>Data-source is 'GEN_COVER.NID_TABLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.FranchiseOrDeductiblePercentageClaim">
<summary>
Franchise or deductible percentage to be applied to the claim. (NRATECLA)..
</summary>
<remarks>Data-source is 'GEN_COVER.NRATECLA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.FixedAmountOfFranchiseOrDeductibleClaim">
<summary>
fixed amount franchise or deductible amount to be applied to the claim. (NFIXAMOCLA)..
</summary>
<remarks>Data-source is 'GEN_COVER.NFIXAMOCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MinimumAmountOfFranchiseOrDeductibleClaim">
<summary>
Minimum franchise or deductible amount Claim. (NMINAMOCLA)..
</summary>
<remarks>Data-source is 'GEN_COVER.NMINAMOCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MaximumAmountOfFranchiseOrDeductibleClaim">
<summary>
Maximum franchise or deductible amount to be applied to the claim. (NMAXAMOCLA)..
</summary>
<remarks>Data-source is 'GEN_COVER.NMAXAMOCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.DiscountPercentageClaim">
<summary>
Percentage of discount because of franchise or deductible. (NDISCCLA)..
</summary>
<remarks>Data-source is 'GEN_COVER.NDISCCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.DiscountAmountClaim">
<summary>
Amount of discount because of the franchise or deductible. (NDISC_AMOCLA)..
</summary>
<remarks>Data-source is 'GEN_COVER.NDISC_AMOCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.DaysFranchiseDeductible">
<summary>
Days of franchise or deductible to be applied. (NFRANCDAYS)..
</summary>
<remarks>Data-source is 'GEN_COVER.NFRANCDAYS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.CodeCoverageGroupingOfModules">
<summary>
Code coverage grouping of modules (NGROUPMOD)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NGROUPMOD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MaximumNumberOfRisks">
<summary>
Maximum number of risks (NITEM_MAX_RISK)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NITEM_MAX_RISK'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MaximumAmountOfCapitalForSpecificRisks">
<summary>
Maximum amount of capital for specific risks (NCAPITALMAX_RISK)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NCAPITALMAX_RISK'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MinimumAmountOfCapitalForSpecificRisks">
<summary>
Minimum amount of capital for specific risks (NCAPITALMIN_RISK)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NCAPITALMIN_RISK'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.RevalType">
<summary>
Indices of revaluation (NREVALTYPE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NREVALTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.CoinsurancePercentage">
<summary>
Percentage of coinsurance to apply. (NCOAPPLYPERC)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NCOAPPLYPERC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.CoinsuranceAmount">
<summary>
Coinsurance Fix amount. (NCOFIXAMOUNT)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NCOFIXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.CoinsuranceMaximumAmount">
<summary>
Coinsurance maximum amount. (NCOMAXAMOUNT)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NCOMAXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.CoinsuranceMinimumAmount">
<summary>
Coinsurance minimum amount. (NCOMINAMOUNT)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NCOMINAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.CoinsuranceApplication">
<summary>
Coinsurance Flag application. (SCOCAPL)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.SCOCAPL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SCATASTCOVER">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.SCATASTCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SROU_COND_CAP">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.SROU_COND_CAP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.NMAXEVENTS">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NMAXEVENTS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SROUPROVIDER">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.SROUPROVIDER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SINDSERVCOST">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.SINDSERVCOST'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SROUPROVCOST">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.SROUPROVCOST'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SINDCOSTRESE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.SINDCOSTRESE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SCOROUTINE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.SCOROUTINE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SCOREQUIRE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.SCOREQUIRE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SCOCHTYP">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.SCOCHTYP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.NCOUSERLEV">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NCOUSERLEV'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.NCORATEADD">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NCORATEADD'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.NCORATESUB">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NCORATESUB'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.NORDERAPL">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NORDERAPL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.NFDCURRENCY">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NFDCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.NCOACURRENCY">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NCOACURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SCAREN_TYPE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.SCAREN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.NCAREN_QUAN">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NCAREN_QUAN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SFDREHABREST">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.SFDREHABREST'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SCOVERUSE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.SCOVERUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SCOVERUSEEnum">
<summary>

</summary>
<remarks>This property use a enumeration based on property 'SCOVERUSE'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SCOVERUSEEnumText">
<summary>

</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SINDSUMCLAIM">
<summary>
SINDSUMCLAIM.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.SINDSUMCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.CalculationRoutineUsedObtainAmountSumInsuredRestitution">
<summary>
Calculation routine used for obtain the amount of sum insured restitution (SRASA_ROUTINE)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.SRASA_ROUTINE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.FranchiseDeductiblePercentageClaim">
<summary>
Franchise or deductible percentage to be applied to the claim (NFRANCRATCLA)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NFRANCRATCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.FixedAmountFranchiseDeductibleAmountClaim">
<summary>
fixed amount franchise or deductible amount to be applied to the claim (NFRANCFIXCLA)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NFRANCFIXCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MinimumAmountFranchiseDeductibleAmountClaim">
<summary>
Minimum amount franchise or deductible amount to be applied to the claim (NFRANXMINCLA)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NFRANXMINCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MaximumFranchiseDeductibleAmountClaim">
<summary>
Maximum franchise or deductible amount to be applied to the claim (NFRANXMAXCLA)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NFRANXMAXCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.CalculationRoutineFranchiseDeductibleClaim">
<summary>
Calculation routine for franchise/deductible to be applied to the claim (SROUFRANCCLA)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.SROUFRANCCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.ItIndicatesDeductibleCanModifiedManually">
<summary>
It indicates that the deductible can be modified manually in the window of the claim Payments (SINDMANUALDEDUCTIBLE)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.SINDMANUALDEDUCTIBLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.PrintIndicatorCapitalInsured">
<summary>
Print indicator the capital insured (SPRINT_CAPITAL)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.SPRINT_CAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.PrintOrder">
<summary>
Print Order (NPRINT_ORDER)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NPRINT_ORDER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MultiplesIncreaseDecreaseInsuredAmount">
<summary>
Multiples of Increase or Decrease in insured amount (NCALMULTI)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NCALMULTI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.CodeTypeCoverage">
<summary>
Code of the type of coverage (NCOVERTYPE)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NCOVERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.TypeOfWaitPeriod">
<summary>
Type of waiting Period (SWAIT_TYPE)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.SWAIT_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.DurationOfWaitPeriod">
<summary>
Number of days, months, hours of the waiting period (NWAIT_QUAN)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NWAIT_QUAN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.IndMaxEvent">
<summary>
Indicator for maximun of events (SMAX_EVEN)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.SMAX_EVEN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.NumMaxEvents">
<summary>
Maximun number of events (NMAXEVEN_QUAN)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NMAXEVEN_QUAN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.FreqMaxEvents">
<summary>
Frequency for maximun of events (NFREQUEN)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NFREQUEN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.RoutineMaxEvents">
<summary>
Routine for maximun of events (SROUTMAX_EVEN)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.SROUTMAX_EVEN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MinimumEntryAgeMales">
<summary>
Minimum entry age for this role (males). (NAGEMININSM)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NAGEMININSM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MaximumEntryAgeMales">
<summary>
Maximum entry age for this role (males). (NAGEMAXINSM)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NAGEMAXINSM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MaximumAgeInsuranceMales">
<summary>
Maximum age of insurance (Masculine). (NAGEMAXPERM)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NAGEMAXPERM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MinimumEntryAgeFemales">
<summary>
Minimum entry age for this role (females). (NAGEMININSF)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NAGEMININSF'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MaximumEntryAgeFemales">
<summary>
Maximum entry age for this role (females). (NAGEMAXINSF)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NAGEMAXINSF'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.MaximumAgeInsuranceFemales">
<summary>
Maximum age of insurance (Female). (NAGEMAXPERF)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GEN_COVER.NAGEMAXPERF'.</remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.NewSiCoverGes_APLCollectionInstance">
<summary>
Initializes the 'SiCoverGes_APLCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.NewSiCoverGes_APLItem(System.Boolean)">
<summary>
Add a new item to the collection of 'SiCoverGes_APLCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'SiCoverGes_APL' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SiCoverGes_APLCollection">
<summary>
SICOVERGES APL collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.NewIntegralRateCommerceCollectionInstance">
<summary>
Initializes the 'IntegralRateCommerceCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.NewIntegralRateCommerceItem(System.Boolean)">
<summary>
Add a new item to the collection of 'IntegralRateCommerceCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'IntegralRateCommerce' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.IntegralRateCommerceCollection">
<summary>
Integral Rate Commerce collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.NewUnderwritingCriteriasForHomePoliciesInstance">
<summary>
Initializes the 'UnderwritingCriteriasForHomePolicies' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.NewUnderwritingCriteriasForHomePolicyItem(System.Boolean)">
<summary>
Add a new item to the collection of 'UnderwritingCriteriasForHomePolicies', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'UnderwritingCriteriasForHomePolicy' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.UnderwritingCriteriasForHomePolicies">
<summary>
Underwriting criterias for home policys collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.NewUnderwritingCriteriasForMultiRiskPolicyInstance">
<summary>
Initializes the 'UnderwritingCriteriasForMultiRiskPolicy' instance.
</summary>
 <returns>The 'UnderwritingCriteriasForMultiRiskPolicy' class instance.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.UnderwritingCriteriasForMultiRiskPolicy">
<summary>
Underwriting criterias for Multi Risk policys collection.
</summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.Compare(InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="PropertyAndCasualtyCoverageItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.AccountingLineOfBusinessDescription">
 <summary>
 Code of the accounting line of business.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE75'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.SolvencyMarginClassDescription">
 <summary>
 Classification code for the solvency margin.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE71'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.GenericLineOfBusinessDescription">
 <summary>
 Code of the generic line of business.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE634'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.ReinsuranceLineOfBusinessDescription">
 <summary>
 Code of the line of business for reinsurance.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5000'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.FranchiseOrDeductibleDescription">
 <summary>
 It indicates if a franchise or deductible is applied
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE33'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.FranchiseOrDeductibleIndicatorDescription">
 <summary>
 It indicates whether a franchise or deductible is applied
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE64'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.TimingForPremiumRecalculationDescription">
 <summary>
 Timing of coverage recalculation
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5559'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.RateLogicTableCodeDescription">
 <summary>
 Code of the rate logic table
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5800'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.RevalTypeDescription">
 <summary>
 Indices of revaluation
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6714' on the table 'TABLE6714'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.TypeOfWaitPeriodDescription">
 <summary>
 Type of waiting Period
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE52'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverage.FreqMaxEventsDescription">
 <summary>
 Frequency for maximun of events
 </summary>
 <remarks>
 This property is associated with the field 'TABLE340' on the table 'TABLE340'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverageCollection">
 <summary>
 Collection for PropertyAndCasualtyCoverage class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverageCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverageCollection.AddPropertyAndCasualtyCoverage">
 <summary>
 Add an instance of class 'PropertyAndCasualtyCoverage' in the PropertyAndCasualtyCoverageCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverageCollection.Compare(InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverageCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverageCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverageCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.PropertyAndCasualtyCoverageCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.RateDetail">
 <summary>
 Detail of rate of table
 </summary>
<remarks>Data-source is 'DET_TABRATE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateDetail.CreateNewRateDetail">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateDetail.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateDetail._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateDetail._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateDetail._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateDetail._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateDetail._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateDetail._RateType">
<summary>
Rate type
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateDetail._TableCode">
<summary>
Code that identifies the rate table.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateDetail._InitialYear">
<summary>
Year initial policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateDetail._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateDetail._EndYear">
<summary>
Year final policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateDetail._Rate">
<summary>
Rate to apply
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateDetail._RatingTableType">
<summary>
Percentage or rate indicator for the rate
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateDetail._FixedAmount">
<summary>
Fixed Amount
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateDetail._CurrencyCode">
<summary>
Code of the currency.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateDetail._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateDetail._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateDetail._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateDetail._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateDetail.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateDetail.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateDetail.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateDetail.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateDetail.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateDetail.RateType">
<summary>
Rate type (NTYPERATE)..
</summary>
<remarks>Data-source is 'DET_TABRATE.NTYPERATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateDetail.TableCode">
<summary>
Code that identifies the rate table. (NTABLERATE)..
</summary>
<remarks>Data-source is 'DET_TABRATE.NTABLERATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateDetail.InitialYear">
<summary>
Year initial policy. (NYEAR_INI)..
</summary>
<remarks>Data-source is 'DET_TABRATE.NYEAR_INI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateDetail.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'DET_TABRATE.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateDetail.EndYear">
<summary>
Year final policy. (NYEAR_END)..
</summary>
<remarks>Data-source is 'DET_TABRATE.NYEAR_END'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateDetail.Rate">
<summary>
Rate to apply (NRATE)..
</summary>
<remarks>Data-source is 'DET_TABRATE.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateDetail.RatingTableType">
<summary>
Percentage or rate indicator for the rate (NTYPE_TAR)..
</summary>
<remarks>Data-source is 'DET_TABRATE.NTYPE_TAR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateDetail.RatingTableTypeEnum">
<summary>
Percentage or rate indicator for the rate
</summary>
<remarks>This property use a enumeration based on property 'RatingTableType'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateDetail.RatingTableTypeEnumText">
<summary>
Percentage or rate indicator for the rate
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateDetail.FixedAmount">
<summary>
Fixed Amount (NFIX_COST)..
</summary>
<remarks>Data-source is 'DET_TABRATE.NFIX_COST'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateDetail.CurrencyCode">
<summary>
Code of the currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'DET_TABRATE.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateDetail.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'DET_TABRATE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateDetail.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'DET_TABRATE.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateDetail.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'DET_TABRATE.DNULLDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateDetail.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateDetail.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateDetail.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateDetail.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateDetail.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateDetail.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateDetail.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateDetail.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateDetail.Compare(InMotionGIT.Product.Entity.Contracts.RateDetail,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="RateDetailItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateDetail.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateDetail.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateDetail.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateDetail.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateDetail.RatingTableTypeDescription">
 <summary>
 Percentage or rate indicator for the rate
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5584'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateDetail.CurrencyCodeDescription">
 <summary>
 Code of the currency.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE11'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.RateDetailCollection">
 <summary>
 Collection for RateDetail class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateDetailCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateDetailCollection.AddRateDetail">
 <summary>
 Add an instance of class 'RateDetail' in the RateDetailCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateDetailCollection.Compare(InMotionGIT.Product.Entity.Contracts.RateDetailCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateDetailCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateDetailCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateDetailCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.RateTable">
 <summary>
 Rate tables
 </summary>
<remarks>Data-source is 'TAB_TABRATE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTable.CreateNewRateTable">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTable.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateTable._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateTable._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateTable._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateTable._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateTable._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateTable._RateType">
<summary>
Rate type
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateTable._TableCode">
<summary>
Code that identifies the rate table.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateTable._Description">
<summary>
Rate table description
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateTable._Status">
<summary>
Register status
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateTable._Abbreviation">
<summary>
Short description of rate table
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateTable._CompDate">
<summary>
Computer date when the record is updated or created
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateTable._Usercode">
<summary>
Code of the user
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTable.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTable.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTable.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTable.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTable.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTable.RateType">
<summary>
Rate type (NTYPERATE)..
</summary>
<remarks>Data-source is 'TAB_TABRATE.NTYPERATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTable.TableCode">
<summary>
Code that identifies the rate table. (NTABLERATE)..
</summary>
<remarks>Data-source is 'TAB_TABRATE.NTABLERATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTable.Description">
<summary>
Rate table description (SDESCRIPT)..
</summary>
<remarks>Data-source is 'TAB_TABRATE.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTable.Status">
<summary>
Register status (SSTATREGT)..
</summary>
<remarks>Data-source is 'TAB_TABRATE.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTable.StatusEnum">
<summary>
Register status
</summary>
<remarks>This property use a enumeration based on property 'Status'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTable.StatusEnumText">
<summary>
Register status
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTable.Abbreviation">
<summary>
Short description of rate table (SSHORT_DES)..
</summary>
<remarks>Data-source is 'TAB_TABRATE.SSHORT_DES'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTable.CompDate">
<summary>
Computer date when the record is updated or created (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_TABRATE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTable.Usercode">
<summary>
Code of the user (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_TABRATE.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTable.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTable.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTable.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTable.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTable.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTable.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTable.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTable.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTable.Compare(InMotionGIT.Product.Entity.Contracts.RateTable,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="RateTableItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTable.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTable.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTable.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTable.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.RateTableCollection">
 <summary>
 Collection for RateTable class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTableCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTableCollection.AddRateTable">
 <summary>
 Add an instance of class 'RateTable' in the RateTableCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTableCollection.Compare(InMotionGIT.Product.Entity.Contracts.RateTableCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTableCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTableCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTableCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct">
 <summary>
 Tables of rates of the product
 </summary>
<remarks>Data-source is 'TAB_PRODUCTRATE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.CreateNewRateTablePerProduct">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct._RateType">
<summary>
Rate type
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct._TableCode">
<summary>
Code that identifies the rate table.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAB_PRODUCTRATE.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAB_PRODUCTRATE.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.RateType">
<summary>
Rate type (NTYPERATE)..
</summary>
<remarks>Data-source is 'TAB_PRODUCTRATE.NTYPERATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.TableCode">
<summary>
Code that identifies the rate table. (NTABLERATE)..
</summary>
<remarks>Data-source is 'TAB_PRODUCTRATE.NTABLERATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAB_PRODUCTRATE.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAB_PRODUCTRATE.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_PRODUCTRATE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_PRODUCTRATE.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.Compare(InMotionGIT.Product.Entity.Contracts.RateTablePerProduct,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="RateTablePerProductItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTablePerProduct.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.RateTablePerProductCollection">
 <summary>
 Collection for RateTablePerProduct class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTablePerProductCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTablePerProductCollection.AddRateTablePerProduct">
 <summary>
 Add an instance of class 'RateTablePerProduct' in the RateTablePerProductCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTablePerProductCollection.Compare(InMotionGIT.Product.Entity.Contracts.RateTablePerProductCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RateTablePerProductCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTablePerProductCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RateTablePerProductCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct">
 <summary>
 Rating table of the APV product.
 </summary>
<remarks>Data-source is 'TAR_APV'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.CreateNewRatingTableAPVProduct">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._ClientRole">
<summary>
Role of the client in the policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._NOPTION">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._YoungestAge">
<summary>
Youngest age for this rate.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._nAge_end">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._LowestLimit">
<summary>
Lowest limit of the sum-insured range
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._HighestLimit">
<summary>
Highest limit of the sum-insured range
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._LowestYear">
<summary>
Lowest limit of the range of years for the rate.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._Gender">
<summary>
Gender of the insured person.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._TypeOfCalculation">
<summary>
Type of calculation.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._SmokerIndicator">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._RiskType">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._Rate">
<summary>
Rate to be applied according to the risk.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._FixedAmount">
<summary>
Amount of fixed cost to be added to the risk premium.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._RateType">
<summary>
Rate type (percent or per thousand)
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._Currency">
<summary>
Code of The Currency in which the fixed cost is expressed
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._HighestYear">
<summary>
Highest limit of the range of years for the rate.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAR_APV.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAR_APV.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAR_APV.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.ClientRole">
<summary>
Role of the client in the policy. (NROLE)..
</summary>
<remarks>Data-source is 'TAR_APV.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.ClientRoleEnum">
<summary>
Role of the client in the policy.
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.ClientRoleEnumText">
<summary>
Role of the client in the policy.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'TAR_APV.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'TAR_APV.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.NOPTION">
<summary>
.
</summary>
<remarks>Data-source is 'TAR_APV.NOPTION'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.YoungestAge">
<summary>
Youngest age for this rate. (NAGE_INIT)..
</summary>
<remarks>Data-source is 'TAR_APV.NAGE_INIT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.nAge_end">
<summary>
.
</summary>
<remarks>Data-source is 'TAR_APV.NAGE_END'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.LowestLimit">
<summary>
Lowest limit of the sum-insured range (NCAPITAL_INIT)..
</summary>
<remarks>Data-source is 'TAR_APV.NCAPITAL_INIT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.HighestLimit">
<summary>
Highest limit of the sum-insured range (NCAPITAL_END)..
</summary>
<remarks>Data-source is 'TAR_APV.NCAPITAL_END'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.LowestYear">
<summary>
Lowest limit of the range of years for the rate. (NPOLICY_YEAR_INI)..
</summary>
<remarks>Data-source is 'TAR_APV.NPOLICY_YEAR_INI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.Gender">
<summary>
Gender of the insured person. (NSEX)..
</summary>
<remarks>Data-source is 'TAR_APV.NSEX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.GenderEnum">
<summary>
Gender of the insured person.
</summary>
<remarks>This property use a enumeration based on property 'Gender'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.GenderEnumText">
<summary>
Gender of the insured person.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.TypeOfCalculation">
<summary>
Type of calculation. (NTYPE_CALC)..
</summary>
<remarks>Data-source is 'TAR_APV.NTYPE_CALC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.SmokerIndicator">
<summary>
 (SSMOKING)..
</summary>
<remarks>Data-source is 'TAR_APV.SSMOKING'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.SmokerIndicatorEnum">
<summary>

</summary>
<remarks>This property use a enumeration based on property 'SmokerIndicator'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.SmokerIndicatorEnumText">
<summary>

</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.RiskType">
<summary>
 (NTYPERISK)..
</summary>
<remarks>Data-source is 'TAR_APV.NTYPERISK'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.RiskTypeEnum">
<summary>

</summary>
<remarks>This property use a enumeration based on property 'RiskType'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.RiskTypeEnumText">
<summary>

</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.Rate">
<summary>
Rate to be applied according to the risk. (NRATE)..
</summary>
<remarks>Data-source is 'TAR_APV.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.FixedAmount">
<summary>
Amount of fixed cost to be added to the risk premium. (NFIX_COST)..
</summary>
<remarks>Data-source is 'TAR_APV.NFIX_COST'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.RateType">
<summary>
Rate type (percent or per thousand) (NTYPE_TAR)..
</summary>
<remarks>Data-source is 'TAR_APV.NTYPE_TAR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.RateTypeEnum">
<summary>
Rate type (percent or per thousand)
</summary>
<remarks>This property use a enumeration based on property 'RateType'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.RateTypeEnumText">
<summary>
Rate type (percent or per thousand)
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAR_APV.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAR_APV.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAR_APV.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.Currency">
<summary>
Code of The Currency in which the fixed cost is expressed (NCURRENCY)..
</summary>
<remarks>Data-source is 'TAR_APV.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.HighestYear">
<summary>
Highest limit of the range of years for the rate. (NPOLICY_YEAR_END)..
</summary>
<remarks>Data-source is 'TAR_APV.NPOLICY_YEAR_END'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.Compare(InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="RatingTableAPVProductItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProduct.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProductCollection">
 <summary>
 Collection for RatingTableAPVProduct class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProductCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProductCollection.AddRatingTableAPVProduct">
 <summary>
 Add an instance of class 'RatingTableAPVProduct' in the RatingTableAPVProductCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProductCollection.Compare(InMotionGIT.Product.Entity.Contracts.RatingTableAPVProductCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProductCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProductCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RatingTableAPVProductCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct">
 <summary>
 Table of requirements and exclusions of the product.
 </summary>
<remarks>Data-source is 'TAB_REQEXC'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.CreateNewRequerimentExclusionProduct">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct._TypeOfComponent1">
<summary>
Code of the component type.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct._FirstItem">
<summary>
Code of the first component to be included in the requisite and exclusion schedule.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct._TypeOfComponent2">
<summary>
Code of the component type.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct._RoleOfTheCoverageToRelate1">
<summary>
Role of the client related to the coverage to be related to
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct._SecondItem">
<summary>
Code of the second component to be included in the requisite and exclusion schedule.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct._NDEFREQ">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct._RoleOfTheCoverageToRelate2">
<summary>
Role of the client related to the coverage to be related to
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct._RequirementOrExclusion">
<summary>
Type of requisite and exclusion schedule.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAB_REQEXC.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAB_REQEXC.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.TypeOfComponent1">
<summary>
Code of the component type. (NREQEXC1)..
</summary>
<remarks>Data-source is 'TAB_REQEXC.NREQEXC1'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.FirstItem">
<summary>
Code of the first component to be included in the requisite and exclusion schedule. (NCODE1)..
</summary>
<remarks>Data-source is 'TAB_REQEXC.NCODE1'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.TypeOfComponent2">
<summary>
Code of the component type. (NREQEXC2)..
</summary>
<remarks>Data-source is 'TAB_REQEXC.NREQEXC2'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.RoleOfTheCoverageToRelate1">
<summary>
Role of the client related to the coverage to be related to (NROLE1)..
</summary>
<remarks>Data-source is 'TAB_REQEXC.NROLE1'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.SecondItem">
<summary>
Code of the second component to be included in the requisite and exclusion schedule. (NCODE2)..
</summary>
<remarks>Data-source is 'TAB_REQEXC.NCODE2'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.NDEFREQ">
<summary>
.
</summary>
<remarks>Data-source is 'TAB_REQEXC.NDEFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.RoleOfTheCoverageToRelate2">
<summary>
Role of the client related to the coverage to be related to (NROLE2)..
</summary>
<remarks>Data-source is 'TAB_REQEXC.NROLE2'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAB_REQEXC.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAB_REQEXC.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.RequirementOrExclusion">
<summary>
Type of requisite and exclusion schedule. (NRELREQEXC)..
</summary>
<remarks>Data-source is 'TAB_REQEXC.NRELREQEXC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_REQEXC.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_REQEXC.DCOMPDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.Compare(InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="RequerimentExclusionProductItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.TypeOfComponent1Description">
 <summary>
 Code of the component type.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE72'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.TypeOfComponent2Description">
 <summary>
 Code of the component type.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE72'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProduct.RequirementOrExclusionDescription">
 <summary>
 Type of requisite and exclusion schedule.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE73'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProductCollection">
 <summary>
 Collection for RequerimentExclusionProduct class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProductCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProductCollection.AddRequerimentExclusionProduct">
 <summary>
 Add an instance of class 'RequerimentExclusionProduct' in the RequerimentExclusionProductCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProductCollection.Compare(InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProductCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProductCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProductCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.RequerimentExclusionProductCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.SequencePolicy">
 <summary>
 Sequence of windows to policy process.
 </summary>
<remarks>Data-source is 'SEQUEN_POL'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SequencePolicy.CreateNewSequencePolicy">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SequencePolicy.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SequencePolicy._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SequencePolicy._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SequencePolicy._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SequencePolicy._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SequencePolicy._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SequencePolicy._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SequencePolicy._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SequencePolicy._BusinessType">
<summary>
Type of business
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SequencePolicy._TransactionType">
<summary>
Type of transaction to perform on the policy, application or quotation.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SequencePolicy._PolicyType">
<summary>
Policy type.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SequencePolicy._Component">
<summary>
Component of the policy being processed.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SequencePolicy._Sequence">
<summary>
Order in which the folders appear in the window.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SequencePolicy._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SequencePolicy._EndorsementType">
<summary>
Code of type of endorsement.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SequencePolicy._WindowLogicalCode">
<summary>
Code of the window (logical code).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SequencePolicy._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SequencePolicy._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SequencePolicy._RequiredWindow">
<summary>
Indicator of required window
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SequencePolicy._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SequencePolicy._Automatic">
<summary>
It indicates if the window can get filled in automatically.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SequencePolicy._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SequencePolicy.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SequencePolicy.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SequencePolicy.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SequencePolicy.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SequencePolicy.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SequencePolicy.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'SEQUEN_POL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SequencePolicy.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'SEQUEN_POL.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SequencePolicy.BusinessType">
<summary>
Type of business (SBUSSITYP)..
</summary>
<remarks>Data-source is 'SEQUEN_POL.SBUSSITYP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SequencePolicy.TransactionType">
<summary>
Type of transaction to perform on the policy, application or quotation. (NTRATYPEP)..
</summary>
<remarks>Data-source is 'SEQUEN_POL.NTRATYPEP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SequencePolicy.PolicyType">
<summary>
Policy type. (SPOLITYPE)..
</summary>
<remarks>Data-source is 'SEQUEN_POL.SPOLITYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SequencePolicy.PolicyTypeEnum">
<summary>
Policy type.
</summary>
<remarks>This property use a enumeration based on property 'PolicyType'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SequencePolicy.PolicyTypeEnumText">
<summary>
Policy type.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SequencePolicy.Component">
<summary>
Component of the policy being processed. (SCOMPON)..
</summary>
<remarks>Data-source is 'SEQUEN_POL.SCOMPON'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SequencePolicy.Sequence">
<summary>
Order in which the folders appear in the window. (NSEQUENCE)..
</summary>
<remarks>Data-source is 'SEQUEN_POL.NSEQUENCE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SequencePolicy.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'SEQUEN_POL.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SequencePolicy.EndorsementType">
<summary>
Code of type of endorsement. (NTYPE_AMEND)..
</summary>
<remarks>Data-source is 'SEQUEN_POL.NTYPE_AMEND'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SequencePolicy.WindowLogicalCode">
<summary>
Code of the window (logical code). (SCODISPL)..
</summary>
<remarks>Data-source is 'SEQUEN_POL.SCODISPL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SequencePolicy.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'SEQUEN_POL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SequencePolicy.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'SEQUEN_POL.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SequencePolicy.RequiredWindow">
<summary>
Indicator of required window (SREQUIRE)..
</summary>
<remarks>Data-source is 'SEQUEN_POL.SREQUIRE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SequencePolicy.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'SEQUEN_POL.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SequencePolicy.Automatic">
<summary>
It indicates if the window can get filled in automatically. (SAUTOMATIC)..
</summary>
<remarks>Data-source is 'SEQUEN_POL.SAUTOMATIC'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SequencePolicy.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SequencePolicy.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SequencePolicy.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SequencePolicy.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SequencePolicy.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SequencePolicy.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SequencePolicy.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SequencePolicy.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SequencePolicy.Compare(InMotionGIT.Product.Entity.Contracts.SequencePolicy,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="SequencePolicyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SequencePolicy.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SequencePolicy.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SequencePolicy.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SequencePolicy.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SequencePolicy.TransactionTypeDescription">
 <summary>
 Type of transaction to perform on the policy, application or quotation.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5588'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.SequencePolicyCollection">
 <summary>
 Collection for SequencePolicy class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SequencePolicyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SequencePolicyCollection.AddSequencePolicy">
 <summary>
 Add an instance of class 'SequencePolicy' in the SequencePolicyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SequencePolicyCollection.Compare(InMotionGIT.Product.Entity.Contracts.SequencePolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SequencePolicyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SequencePolicyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SequencePolicyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance">
 <summary>
 table of short-term insurance.
 </summary>
<remarks>Data-source is 'TAB_SHORT'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.CreateNewShortTermInsurance">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance._MaximumNumberOfMonths">
<summary>
Maximum number of earned months (new short-term policies) or unearned (early cancellation).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance._MaximumNumberOfDays">
<summary>
Maximum number of days earned (for short term premiums) or unearned (refunds).
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance._PercentageToRefund">
<summary>
Premium percentage to be refunded.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance._PremiumPercentageToCharge">
<summary>
Premium percentage to be charged.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAB_SHORT.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAB_SHORT.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.MaximumNumberOfMonths">
<summary>
Maximum number of earned months (new short-term policies) or unearned (early cancellation). (NMONTHMAX)..
</summary>
<remarks>Data-source is 'TAB_SHORT.NMONTHMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.MaximumNumberOfDays">
<summary>
Maximum number of days earned (for short term premiums) or unearned (refunds). (NDAYSMAX)..
</summary>
<remarks>Data-source is 'TAB_SHORT.NDAYSMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAB_SHORT.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_SHORT.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAB_SHORT.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.PercentageToRefund">
<summary>
Premium percentage to be refunded. (NRATEDEVO)..
</summary>
<remarks>Data-source is 'TAB_SHORT.NRATEDEVO'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.PremiumPercentageToCharge">
<summary>
Premium percentage to be charged. (NRATEPREM)..
</summary>
<remarks>Data-source is 'TAB_SHORT.NRATEPREM'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_SHORT.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.Compare(InMotionGIT.Product.Entity.Contracts.ShortTermInsurance,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ShortTermInsuranceItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ShortTermInsurance.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ShortTermInsuranceCollection">
 <summary>
 Collection for ShortTermInsurance class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ShortTermInsuranceCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ShortTermInsuranceCollection.AddShortTermInsurance">
 <summary>
 Add an instance of class 'ShortTermInsurance' in the ShortTermInsuranceCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ShortTermInsuranceCollection.Compare(InMotionGIT.Product.Entity.Contracts.ShortTermInsuranceCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ShortTermInsuranceCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ShortTermInsuranceCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ShortTermInsuranceCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL">
 <summary>
 SICOVERGES APL
 </summary>
<remarks>Data-source is 'SICOVERGES_APL'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.CreateNewSiCoverGes_APL">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL._LineOfBusiness">
<summary>
Code of the line of business
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL._ProductCode">
<summary>
Code of the product
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL._CodeOfOtherCoverage">
<summary>
Code of the other coverage
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL._PercentageSumInsuredCoverage">
<summary>
Percentage Sum Insured of the Coverage
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.LineOfBusiness">
<summary>
Code of the line of business (NBRANCH)..
</summary>
<remarks>Data-source is 'SICOVERGES_APL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.ProductCode">
<summary>
Code of the product (NPRODUCT)..
</summary>
<remarks>Data-source is 'SICOVERGES_APL.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'SICOVERGES_APL.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'SICOVERGES_APL.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'SICOVERGES_APL.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.CodeOfOtherCoverage">
<summary>
Code of the other coverage (NSUMINS_COVERAGE)..
</summary>
<remarks>Data-source is 'SICOVERGES_APL.NSUMINS_COVERAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.PercentageSumInsuredCoverage">
<summary>
Percentage Sum Insured of the Coverage (NPERCENTAGE)..
</summary>
<remarks>Data-source is 'SICOVERGES_APL.NPERCENTAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'SICOVERGES_APL.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'SICOVERGES_APL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'SICOVERGES_APL.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.Compare(InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="SiCoverGes_APLItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APL.LineOfBusinessDescription">
 <summary>
 Code of the line of business
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE10'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APLCollection">
 <summary>
 Collection for SiCoverGes_APL class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APLCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APLCollection.AddSiCoverGes_APL">
 <summary>
 Add an instance of class 'SiCoverGes_APL' in the SiCoverGes_APLCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APLCollection.Compare(InMotionGIT.Product.Entity.Contracts.SiCoverGes_APLCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APLCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APLCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SiCoverGes_APLCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife">
 <summary>
 Criteria for selection of risk for a product.
 </summary>
<remarks>Data-source is 'LIFE_SPECI'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.CreateNewSpecificationForProductLife">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife._ClientRole">
<summary>
Client role
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife._ConsecutiveNumber">
<summary>
Consecutive number.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife._OldestAge">
<summary>
Oldest age for this underwriting criteria.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife._YoungestAge">
<summary>
Youngest age for this underwriting criteria.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife._HighestInsuredAmount">
<summary>
Highest limit of the sum-insured range to be taken into account in the selection criterion
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife._LowestInsuredAmount">
<summary>
Lowest limit of the sum-insured range to be taken into account in the selection criterion
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife._Document">
<summary>
Document related to the technical criterion required by the policy.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife._Gender">
<summary>
Gender of the insured to which the selection criteria pertains.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife._RandomIndicator">
<summary>
Indicates if the document is to be requested randomly
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'LIFE_SPECI.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'LIFE_SPECI.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'LIFE_SPECI.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'LIFE_SPECI.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.ClientRole">
<summary>
Client role (NROLE)..
</summary>
<remarks>Data-source is 'LIFE_SPECI.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.ClientRoleEnum">
<summary>
Client role
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.ClientRoleEnumText">
<summary>
Client role
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.ConsecutiveNumber">
<summary>
Consecutive number. (NCONSEC)..
</summary>
<remarks>Data-source is 'LIFE_SPECI.NCONSEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'LIFE_SPECI.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.OldestAge">
<summary>
Oldest age for this underwriting criteria. (NAGEEND)..
</summary>
<remarks>Data-source is 'LIFE_SPECI.NAGEEND'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.YoungestAge">
<summary>
Youngest age for this underwriting criteria. (NAGESTART)..
</summary>
<remarks>Data-source is 'LIFE_SPECI.NAGESTART'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.HighestInsuredAmount">
<summary>
Highest limit of the sum-insured range to be taken into account in the selection criterion (NCAPEND)..
</summary>
<remarks>Data-source is 'LIFE_SPECI.NCAPEND'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.LowestInsuredAmount">
<summary>
Lowest limit of the sum-insured range to be taken into account in the selection criterion (NCAPSTART)..
</summary>
<remarks>Data-source is 'LIFE_SPECI.NCAPSTART'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'LIFE_SPECI.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'LIFE_SPECI.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.Document">
<summary>
Document related to the technical criterion required by the policy. (NCRTHECNI)..
</summary>
<remarks>Data-source is 'LIFE_SPECI.NCRTHECNI'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'LIFE_SPECI.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.Gender">
<summary>
Gender of the insured to which the selection criteria pertains. (SSEXCLIEN)..
</summary>
<remarks>Data-source is 'LIFE_SPECI.SSEXCLIEN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.GenderEnum">
<summary>
Gender of the insured to which the selection criteria pertains.
</summary>
<remarks>This property use a enumeration based on property 'Gender'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.GenderEnumText">
<summary>
Gender of the insured to which the selection criteria pertains.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'LIFE_SPECI.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.RandomIndicator">
<summary>
Indicates if the document is to be requested randomly (SRANDOM)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE_SPECI.SRANDOM'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.Compare(InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="SpecificationForProductLifeItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.DocumentDescription">
 <summary>
 Document related to the technical criterion required by the policy.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE32'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLife.GenderDescription">
 <summary>
 Gender of the insured to which the selection criteria pertains.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE18'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLifeCollection">
 <summary>
 Collection for SpecificationForProductLife class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLifeCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLifeCollection.AddSpecificationForProductLife">
 <summary>
 Add an instance of class 'SpecificationForProductLife' in the SpecificationForProductLifeCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLifeCollection.Compare(InMotionGIT.Product.Entity.Contracts.SpecificationForProductLifeCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLifeCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLifeCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SpecificationForProductLifeCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.StipendProduct">
 <summary>
 Commissions of intermediation and stipends by product
 </summary>
<remarks>Data-source is 'STIPEND_PROD'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.StipendProduct.CreateNewStipendProduct">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.StipendProduct.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.StipendProduct._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.StipendProduct._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.StipendProduct._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.StipendProduct._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.StipendProduct._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.StipendProduct._CodeLineBusiness">
<summary>
Code of the line of business
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.StipendProduct._ProductCode">
<summary>
Code of the product
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.StipendProduct._ClientFigure">
<summary>
Code of the figure. Possible values according to table 12
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.StipendProduct._ClientCode">
<summary>
Client Code
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.StipendProduct._TypeOfContrat">
<summary>
Type of contract. Possible values according to table 9108
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.StipendProduct._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.StipendProduct._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.StipendProduct._TypeOfCommission">
<summary>
Type of calculation of the commission or stipend.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.StipendProduct._ContratCode">
<summary>
Stipends contract code Intermed of code
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.StipendProduct._IntermedCode">
<summary>
Intermed of code
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.StipendProduct._Amount">
<summary>
Amount of commission or stipend
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.StipendProduct._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.StipendProduct._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.StipendProduct._FixedPercentageOfCommission">
<summary>
Fixed percentage of commission or stipend
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.StipendProduct._Participation">
<summary>
Percentage of participation on the commission
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.StipendProduct._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.StipendProduct.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.StipendProduct.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.StipendProduct.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.StipendProduct.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.StipendProduct.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.StipendProduct.CodeLineBusiness">
<summary>
Code of the line of business (NBRANCH)..
</summary>
<remarks>Data-source is 'STIPEND_PROD.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.StipendProduct.ProductCode">
<summary>
Code of the product (NPRODUCT)..
</summary>
<remarks>Data-source is 'STIPEND_PROD.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.StipendProduct.ClientFigure">
<summary>
Code of the figure. Possible values according to table 12 (NROLE)..
</summary>
<remarks>Data-source is 'STIPEND_PROD.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.StipendProduct.ClientFigureEnum">
<summary>
Code of the figure. Possible values according to table 12
</summary>
<remarks>This property use a enumeration based on property 'ClientFigure'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.StipendProduct.ClientFigureEnumText">
<summary>
Code of the figure. Possible values according to table 12
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.StipendProduct.ClientCode">
<summary>
Client Code (SCLIENT)..
</summary>
<remarks>Data-source is 'STIPEND_PROD.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.StipendProduct.TypeOfContrat">
<summary>
Type of contract. Possible values according to table 9108 (NTYPE_CONTRAT)..
</summary>
<remarks>Data-source is 'STIPEND_PROD.NTYPE_CONTRAT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.StipendProduct.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'STIPEND_PROD.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.StipendProduct.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'STIPEND_PROD.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.StipendProduct.TypeOfCommission">
<summary>
Type of calculation of the commission or stipend. (SCOMMITYP)..
</summary>
<remarks>Data-source is 'STIPEND_PROD.SCOMMITYP'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.StipendProduct.ContratCode">
<summary>
Stipends contract code Intermed of code (NCONTRAT_PAY)..
</summary>
<remarks>Data-source is 'STIPEND_PROD.NCONTRAT_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.StipendProduct.IntermedCode">
<summary>
Intermed of code (NINTERMED)..
</summary>
<remarks>Data-source is 'STIPEND_PROD.NINTERMED'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.StipendProduct.Amount">
<summary>
Amount of commission or stipend (NAMOUNT)..
</summary>
<remarks>Data-source is 'STIPEND_PROD.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.StipendProduct.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'STIPEND_PROD.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.StipendProduct.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'STIPEND_PROD.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.StipendProduct.FixedPercentageOfCommission">
<summary>
Fixed percentage of commission or stipend (NPERCENT)..
</summary>
<remarks>Data-source is 'STIPEND_PROD.NPERCENT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.StipendProduct.Participation">
<summary>
Percentage of participation on the commission (NSHARE)..
</summary>
<remarks>Data-source is 'STIPEND_PROD.NSHARE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.StipendProduct.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.StipendProduct.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.StipendProduct.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.StipendProduct.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.StipendProduct.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.StipendProduct.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.StipendProduct.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.StipendProduct.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.StipendProduct.Compare(InMotionGIT.Product.Entity.Contracts.StipendProduct,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="StipendProductItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.StipendProduct.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.StipendProduct.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.StipendProduct.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.StipendProduct.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.StipendProductCollection">
 <summary>
 Collection for StipendProduct class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.StipendProductCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.StipendProductCollection.AddStipendProduct">
 <summary>
 Add an instance of class 'StipendProduct' in the StipendProductCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.StipendProductCollection.Compare(InMotionGIT.Product.Entity.Contracts.StipendProductCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.StipendProductCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.StipendProductCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.StipendProductCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.SumInsDisc">
 <summary>
 
 </summary>
<remarks>Data-source is 'TSUMINSDISC'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SumInsDisc.CreateNewSumInsDisc">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SumInsDisc.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SumInsDisc._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SumInsDisc._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SumInsDisc._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SumInsDisc._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SumInsDisc._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SumInsDisc._BranchCode">
<summary>
Branch code
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SumInsDisc._ProductCode">
<summary>
Product code
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SumInsDisc._ModulCode">
<summary>
Module code
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SumInsDisc._CoverCode">
<summary>
Cover code
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SumInsDisc._CurrencyCode">
<summary>
Currency code
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SumInsDisc._TypeDurPay">
<summary>
Type of duration pay
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SumInsDisc._PayTime">
<summary>
Pay of time
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SumInsDisc._InsurTime">
<summary>
Insured time
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SumInsDisc._AgeMinimun">
<summary>
Minimun age range
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SumInsDisc._InitSumIns">
<summary>
Minimun Sum Insured range
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SumInsDisc._EffecDate">
<summary>
Effective date
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SumInsDisc._AgeMaximun">
<summary>
Maximun age range
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SumInsDisc._MaxSumIns">
<summary>
Maximun Sum Insured range
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SumInsDisc._Factor">
<summary>
Millage Factor
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SumInsDisc._NullDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SumInsDisc._ComputerDate">
<summary>
Computer date
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SumInsDisc._UserCode">
<summary>
User code
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SumInsDisc._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SumInsDisc.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SumInsDisc.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SumInsDisc.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SumInsDisc.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SumInsDisc.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SumInsDisc.BranchCode">
<summary>
Branch code (NBRANCH)..
</summary>
<remarks>Data-source is 'TSUMINSDISC.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SumInsDisc.ProductCode">
<summary>
Product code (NPRODUCT)..
</summary>
<remarks>Data-source is 'TSUMINSDISC.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SumInsDisc.ModulCode">
<summary>
Module code (NMODULEC)..
</summary>
<remarks>Data-source is 'TSUMINSDISC.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SumInsDisc.CoverCode">
<summary>
Cover code (NCOVER)..
</summary>
<remarks>Data-source is 'TSUMINSDISC.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SumInsDisc.CurrencyCode">
<summary>
Currency code (NCURRENCY)..
</summary>
<remarks>Data-source is 'TSUMINSDISC.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SumInsDisc.TypeDurPay">
<summary>
Type of duration pay (NTYPDURPAY)..
</summary>
<remarks>Data-source is 'TSUMINSDISC.NTYPDURPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SumInsDisc.TypeDurPayEnum">
<summary>
Type of duration pay
</summary>
<remarks>This property use a enumeration based on property 'TypeDurPay'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SumInsDisc.TypeDurPayEnumText">
<summary>
Type of duration pay
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SumInsDisc.PayTime">
<summary>
Pay of time (NPAY_TIME)..
</summary>
<remarks>Data-source is 'TSUMINSDISC.NPAY_TIME'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SumInsDisc.InsurTime">
<summary>
Insured time (NIDURAFIX)..
</summary>
<remarks>Data-source is 'TSUMINSDISC.NIDURAFIX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SumInsDisc.AgeMinimun">
<summary>
Minimun age range (NAGEMIN)..
</summary>
<remarks>Data-source is 'TSUMINSDISC.NAGEMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SumInsDisc.InitSumIns">
<summary>
Minimun Sum Insured range (NINITSUMINS)..
</summary>
<remarks>Data-source is 'TSUMINSDISC.NINITSUMINS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SumInsDisc.EffecDate">
<summary>
Effective date (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TSUMINSDISC.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SumInsDisc.AgeMaximun">
<summary>
Maximun age range (NAGEMAX)..
</summary>
<remarks>Data-source is 'TSUMINSDISC.NAGEMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SumInsDisc.MaxSumIns">
<summary>
Maximun Sum Insured range (FINALSUMINS)..
</summary>
<remarks>Data-source is 'TSUMINSDISC.FINALSUMINS'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SumInsDisc.Factor">
<summary>
Millage Factor (NFACTOR)..
</summary>
<remarks>Data-source is 'TSUMINSDISC.NFACTOR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SumInsDisc.NullDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TSUMINSDISC.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SumInsDisc.ComputerDate">
<summary>
Computer date (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TSUMINSDISC.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SumInsDisc.UserCode">
<summary>
User code (NUSERCODE)..
</summary>
<remarks>Data-source is 'TSUMINSDISC.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SumInsDisc.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SumInsDisc.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SumInsDisc.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SumInsDisc.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SumInsDisc.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SumInsDisc.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SumInsDisc.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SumInsDisc.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SumInsDisc.Compare(InMotionGIT.Product.Entity.Contracts.SumInsDisc,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="SumInsDiscItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SumInsDisc.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SumInsDisc.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SumInsDisc.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SumInsDisc.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.SumInsDiscCollection">
 <summary>
 Collection for SumInsDisc class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SumInsDiscCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SumInsDiscCollection.AddSumInsDisc">
 <summary>
 Add an instance of class 'SumInsDisc' in the SumInsDiscCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SumInsDiscCollection.Compare(InMotionGIT.Product.Entity.Contracts.SumInsDiscCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SumInsDiscCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SumInsDiscCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SumInsDiscCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention">
 <summary>
 Table of retention according to the surrender value.
 </summary>
<remarks>Data-source is 'SURR_RETENTION'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.CreateNewSurrenderValueRetention">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention._ReasonOfTheSurrender">
<summary>
Reason of the surrender.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention._TypeTributaryBenefit">
<summary>
Type of Tributary Benefit.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention._PercentageToDeductInSurrenders">
<summary>
Percentage to be deducted in the surrenders.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention._Amountexempt">
<summary>
Amount exempt
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention._CurrencyCode">
<summary>
Code of the currency.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention._SourceAccount">
<summary>
Code of the source account (
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'SURR_RETENTION.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'SURR_RETENTION.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.ReasonOfTheSurrender">
<summary>
Reason of the surrender. (NSURR_REASON)..
</summary>
<remarks>Data-source is 'SURR_RETENTION.NSURR_REASON'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.TypeTributaryBenefit">
<summary>
Type of Tributary Benefit. (NTYP_PROFITWORKER)..
</summary>
<remarks>Data-source is 'SURR_RETENTION.NTYP_PROFITWORKER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'SURR_RETENTION.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'SURR_RETENTION.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'SURR_RETENTION.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'SURR_RETENTION.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.PercentageToDeductInSurrenders">
<summary>
Percentage to be deducted in the surrenders. (NSURR_RET)..
</summary>
<remarks>Data-source is 'SURR_RETENTION.NSURR_RET'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.Amountexempt">
<summary>
Amount exempt (NAMOUNTFREE)..
</summary>
<remarks>Data-source is 'SURR_RETENTION.NAMOUNTFREE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.CurrencyCode">
<summary>
Code of the currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'SURR_RETENTION.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.SourceAccount">
<summary>
Code of the source account ( (NORIGIN)..
</summary>
<remarks>Data-source is 'SURR_RETENTION.NORIGIN'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.Compare(InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="SurrenderValueRetentionItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.ReasonOfTheSurrenderDescription">
 <summary>
 Reason of the surrender.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5635'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.CurrencyCodeDescription">
 <summary>
 Code of the currency.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE11'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetention.SourceAccountDescription">
 <summary>
 Code of the source account (
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5633'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetentionCollection">
 <summary>
 Collection for SurrenderValueRetention class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetentionCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetentionCollection.AddSurrenderValueRetention">
 <summary>
 Add an instance of class 'SurrenderValueRetention' in the SurrenderValueRetentionCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetentionCollection.Compare(InMotionGIT.Product.Entity.Contracts.SurrenderValueRetentionCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetentionCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetentionCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.SurrenderValueRetentionCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.TabOriginRate">
 <summary>
 Tables of rates of the account origin of the product
 </summary>
<remarks>Data-source is 'TAB_ORIGINRATE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.TabOriginRate.CreateNewTabOriginRate">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.TabOriginRate.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.TabOriginRate._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.TabOriginRate._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.TabOriginRate._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.TabOriginRate._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.TabOriginRate._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.TabOriginRate._CodeLineBusiness">
<summary>
Code of the line of business
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.TabOriginRate._ProductCode">
<summary>
Code of the product
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.TabOriginRate._Origin">
<summary>
Code of the source account
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.TabOriginRate._RateType">
<summary>
Rate type
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.TabOriginRate._TableCode">
<summary>
Code that identifies the rate table.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.TabOriginRate._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.TabOriginRate._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.TabOriginRate._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.TabOriginRate.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.TabOriginRate.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.TabOriginRate.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.TabOriginRate.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.TabOriginRate.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.TabOriginRate.CodeLineBusiness">
<summary>
Code of the line of business (NBRANCH)..
</summary>
<remarks>Data-source is 'TAB_ORIGINRATE.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.TabOriginRate.ProductCode">
<summary>
Code of the product (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAB_ORIGINRATE.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.TabOriginRate.Origin">
<summary>
Code of the source account (NORIGIN)..
</summary>
<remarks>Data-source is 'TAB_ORIGINRATE.NORIGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.TabOriginRate.RateType">
<summary>
Rate type (NTYPERATE)..
</summary>
<remarks>Data-source is 'TAB_ORIGINRATE.NTYPERATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.TabOriginRate.TableCode">
<summary>
Code that identifies the rate table. (NTABLERATE)..
</summary>
<remarks>Data-source is 'TAB_ORIGINRATE.NTABLERATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.TabOriginRate.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAB_ORIGINRATE.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.TabOriginRate.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_ORIGINRATE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.TabOriginRate.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_ORIGINRATE.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.TabOriginRate.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.TabOriginRate.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.TabOriginRate.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.TabOriginRate.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.TabOriginRate.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.TabOriginRate.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.TabOriginRate.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.TabOriginRate.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.TabOriginRate.Compare(InMotionGIT.Product.Entity.Contracts.TabOriginRate,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="TabOriginRateItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.TabOriginRate.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.TabOriginRate.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.TabOriginRate.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.TabOriginRate.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.TabOriginRate.OriginDescription">
 <summary>
 Code of the source account
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5633'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.TabOriginRateCollection">
 <summary>
 Collection for TabOriginRate class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.TabOriginRateCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.TabOriginRateCollection.AddTabOriginRate">
 <summary>
 Add an instance of class 'TabOriginRate' in the TabOriginRateCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.TabOriginRateCollection.Compare(InMotionGIT.Product.Entity.Contracts.TabOriginRateCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.TabOriginRateCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.TabOriginRateCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.TabOriginRateCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy">
 <summary>
 Underwriting criterias for home policys
 </summary>
<remarks>Data-source is 'UWHOMECRITERIAS'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.CreateNewUnderwritingCriteriasForHomePolicy">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy._nDwellingType">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy._Floor">
<summary>
Floor Number
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy._CurrencyCode">
<summary>
Code of the currency.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy._InsuredAmount">
<summary>
Insured Amount
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy._UserMember">
<summary>
User member
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy._LongDescription">
<summary>
Long description
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy._ShortDescription">
<summary>
Short Description
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy._Preissue">
<summary>
Preissue
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy._Status">
<summary>
Register status
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'UWHOMECRITERIAS.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'UWHOMECRITERIAS.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'UWHOMECRITERIAS.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'UWHOMECRITERIAS.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'UWHOMECRITERIAS.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.nDwellingType">
<summary>
.
</summary>
<remarks>Data-source is 'UWHOMECRITERIAS.NDWELLINGTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.Floor">
<summary>
Floor Number (NFLOOR)..
</summary>
<remarks>Data-source is 'UWHOMECRITERIAS.NFLOOR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.CurrencyCode">
<summary>
Code of the currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'UWHOMECRITERIAS.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.InsuredAmount">
<summary>
Insured Amount (NCAPITAL)..
</summary>
<remarks>Data-source is 'UWHOMECRITERIAS.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.UserMember">
<summary>
User member (SECURITYLEVEL)..
</summary>
<remarks>Data-source is 'UWHOMECRITERIAS.SECURITYLEVEL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.LongDescription">
<summary>
Long description (SDESCRIPT)..
</summary>
<remarks>Data-source is 'UWHOMECRITERIAS.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.ShortDescription">
<summary>
Short Description (SSHORT_DES)..
</summary>
<remarks>Data-source is 'UWHOMECRITERIAS.SSHORT_DES'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'UWHOMECRITERIAS.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.Preissue">
<summary>
Preissue (NPREISSUED)..
</summary>
<remarks>Data-source is 'UWHOMECRITERIAS.NPREISSUED'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.Status">
<summary>
Register status (SSTATREGT)..
</summary>
<remarks>Data-source is 'UWHOMECRITERIAS.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.StatusEnum">
<summary>
Register status
</summary>
<remarks>This property use a enumeration based on property 'Status'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.StatusEnumText">
<summary>
Register status
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'UWHOMECRITERIAS.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'UWHOMECRITERIAS.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.Compare(InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="UnderwritingCriteriasForHomePolicyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.nDwellingTypeDescription">
 <summary>
 
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE6012'.
 </remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicy.CurrencyCodeDescription">
 <summary>
 Code of the currency.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE11'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicyCollection">
 <summary>
 Collection for UnderwritingCriteriasForHomePolicy class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicyCollection.AddUnderwritingCriteriasForHomePolicy">
 <summary>
 Add an instance of class 'UnderwritingCriteriasForHomePolicy' in the UnderwritingCriteriasForHomePolicyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicyCollection.Compare(InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForHomePolicyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy">
 <summary>
 Underwriting criterias for Multi Risk policys
 </summary>
<remarks>Data-source is 'UWICCRITERIAS'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.CreateNewUnderwritingCriteriasForMultiRiskPolicy">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy._CurrencyCode">
<summary>
Code of the currency.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy._InsuredAmount">
<summary>
Insured Amount
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy._UserMember">
<summary>
User member
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy._LongDescription">
<summary>
Long description
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy._ShortDescription">
<summary>
Short Description
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy._Preissue">
<summary>
Preissue
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy._Status">
<summary>
Register status
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'UWICCRITERIAS.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'UWICCRITERIAS.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'UWICCRITERIAS.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'UWICCRITERIAS.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'UWICCRITERIAS.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.CurrencyCode">
<summary>
Code of the currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'UWICCRITERIAS.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.InsuredAmount">
<summary>
Insured Amount (NCAPITAL)..
</summary>
<remarks>Data-source is 'UWICCRITERIAS.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.UserMember">
<summary>
User member (SECURITYLEVEL)..
</summary>
<remarks>Data-source is 'UWICCRITERIAS.SECURITYLEVEL'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.LongDescription">
<summary>
Long description (SDESCRIPT)..
</summary>
<remarks>Data-source is 'UWICCRITERIAS.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.ShortDescription">
<summary>
Short Description (SSHORT_DES)..
</summary>
<remarks>Data-source is 'UWICCRITERIAS.SSHORT_DES'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'UWICCRITERIAS.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.Preissue">
<summary>
Preissue (NPREISSUED)..
</summary>
<remarks>Data-source is 'UWICCRITERIAS.NPREISSUED'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.Status">
<summary>
Register status (SSTATREGT)..
</summary>
<remarks>Data-source is 'UWICCRITERIAS.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.StatusEnum">
<summary>
Register status
</summary>
<remarks>This property use a enumeration based on property 'Status'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.StatusEnumText">
<summary>
Register status
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'UWICCRITERIAS.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'UWICCRITERIAS.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.Compare(InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="UnderwritingCriteriasForMultiRiskPolicyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicy.CurrencyCodeDescription">
 <summary>
 Code of the currency.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE11'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicyCollection">
 <summary>
 Collection for UnderwritingCriteriasForMultiRiskPolicy class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicyCollection.AddUnderwritingCriteriasForMultiRiskPolicy">
 <summary>
 Add an instance of class 'UnderwritingCriteriasForMultiRiskPolicy' in the UnderwritingCriteriasForMultiRiskPolicyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicyCollection.Compare(InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.UnderwritingCriteriasForMultiRiskPolicyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable">
 <summary>
 
 </summary>
<remarks>Data-source is 'TARIF_VAL_COL'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.CreateNewValueOfColumnOfLogicalTariffTable">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable._LogicTableCode">
<summary>
Code of the logic table
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable._ColumnCode">
<summary>
Code of the column
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable._RowNumber">
<summary>
Number of the row of the logic table
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable._StringValue">
<summary>
Value of the column of the logic table for columns of number
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable._NumericValue">
<summary>
Value of the column of the logic table for columns of number
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable._DateValue">
<summary>
Value of the column of the logic table for columns of date
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.LogicTableCode">
<summary>
Code of the logic table (NID_TABLE)..
</summary>
<remarks>Data-source is 'TARIF_VAL_COL.NID_TABLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.ColumnCode">
<summary>
Code of the column (NID_COLUMN)..
</summary>
<remarks>Data-source is 'TARIF_VAL_COL.NID_COLUMN'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TARIF_VAL_COL.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.RowNumber">
<summary>
Number of the row of the logic table (NROW)..
</summary>
<remarks>Data-source is 'TARIF_VAL_COL.NROW'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.StringValue">
<summary>
Value of the column of the logic table for columns of number (SVALUE)..
</summary>
<remarks>Data-source is 'TARIF_VAL_COL.SVALUE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.NumericValue">
<summary>
Value of the column of the logic table for columns of number (NVALUE)..
</summary>
<remarks>Data-source is 'TARIF_VAL_COL.NVALUE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.DateValue">
<summary>
Value of the column of the logic table for columns of date (DVALUE)..
</summary>
<remarks>Data-source is 'TARIF_VAL_COL.DVALUE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TARIF_VAL_COL.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TARIF_VAL_COL.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TARIF_VAL_COL.DCOMPDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.Compare(InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ValueOfColumnOfLogicalTariffTableItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTable.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTableCollection">
 <summary>
 Collection for ValueOfColumnOfLogicalTariffTable class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTableCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTableCollection.AddValueOfColumnOfLogicalTariffTable">
 <summary>
 Add an instance of class 'ValueOfColumnOfLogicalTariffTable' in the ValueOfColumnOfLogicalTariffTableCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTableCollection.Compare(InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTableCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTableCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTableCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfColumnOfLogicalTariffTableCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable">
 <summary>
 
 </summary>
<remarks>Data-source is 'TARIF_VALUE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.CreateNewValueOfTariffAssociatedWithRowOfLogicalTariffTable">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable._LogicTableCode">
<summary>
Code of the logic table
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable._RowNumber">
<summary>
Number of the row of the logic table
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable._Rate">
<summary>
Rate related to the row of the logic table
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable._FixedAmount">
<summary>
Fixed amount related to the rate
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable._RatingType">
<summary>
Type of rate
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.LogicTableCode">
<summary>
Code of the logic table (NID_TABLE)..
</summary>
<remarks>Data-source is 'TARIF_VALUE.NID_TABLE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.RowNumber">
<summary>
Number of the row of the logic table (NROW)..
</summary>
<remarks>Data-source is 'TARIF_VALUE.NROW'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.Rate">
<summary>
Rate related to the row of the logic table (NRATE)..
</summary>
<remarks>Data-source is 'TARIF_VALUE.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.FixedAmount">
<summary>
Fixed amount related to the rate (NAMOUNT)..
</summary>
<remarks>Data-source is 'TARIF_VALUE.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.RatingType">
<summary>
Type of rate (NTYPE_TAR)..
</summary>
<remarks>Data-source is 'TARIF_VALUE.NTYPE_TAR'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.RatingTypeEnum">
<summary>
Type of rate
</summary>
<remarks>This property use a enumeration based on property 'RatingType'</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.RatingTypeEnumText">
<summary>
Type of rate
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TARIF_VALUE.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TARIF_VALUE.DCOMPDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.Compare(InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ValueOfTariffAssociatedWithRowOfLogicalTariffTableItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTable.LogicTableCodeDescription">
 <summary>
 Code of the logic table
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5800'.
 </remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTableCollection">
 <summary>
 Collection for ValueOfTariffAssociatedWithRowOfLogicalTariffTable class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTableCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTableCollection.AddValueOfTariffAssociatedWithRowOfLogicalTariffTable">
 <summary>
 Add an instance of class 'ValueOfTariffAssociatedWithRowOfLogicalTariffTable' in the ValueOfTariffAssociatedWithRowOfLogicalTariffTableCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTableCollection.Compare(InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTableCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTableCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTableCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValueOfTariffAssociatedWithRowOfLogicalTariffTableCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ValuesAttribute">
 <summary>
 Values attributes
 </summary>
<remarks>Data-source is 'CAT_PROPERTY_VALUE'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValuesAttribute.CreateNewValuesAttribute">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValuesAttribute.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValuesAttribute._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValuesAttribute._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValuesAttribute._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValuesAttribute._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValuesAttribute._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValuesAttribute._CodeRiskType">
<summary>
Type of Code risk type
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValuesAttribute._CodeDefinitionType">
<summary>
Code definition type
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValuesAttribute._CodeOfValue">
<summary>
Code o the value
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValuesAttribute._DescriptionOfValue">
<summary>
Description of the value
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValuesAttribute._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Product.Entity.Contracts.ValuesAttribute._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValuesAttribute.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValuesAttribute.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValuesAttribute.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValuesAttribute.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValuesAttribute.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValuesAttribute.CodeRiskType">
<summary>
Type of Code risk type (NRISKTYPE)..
</summary>
<remarks>Data-source is 'CAT_PROPERTY_VALUE.NRISKTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValuesAttribute.CodeDefinitionType">
<summary>
Code definition type (NDEFTYPE)..
</summary>
<remarks>Data-source is 'CAT_PROPERTY_VALUE.NDEFTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValuesAttribute.CodeOfValue">
<summary>
Code o the value (nPropValue)..
</summary>
<remarks>Data-source is 'CAT_PROPERTY_VALUE.nPropValue'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValuesAttribute.DescriptionOfValue">
<summary>
Description of the value (sDescript)..
</summary>
<remarks>Data-source is 'CAT_PROPERTY_VALUE.sDescript'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValuesAttribute.ComputersDate">
<summary>
Date of the computer (dCompDate)..
</summary>
<remarks>Data-source is 'CAT_PROPERTY_VALUE.dCompDate'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValuesAttribute.User">
<summary>
UserCode (nUserCode)..
</summary>
<remarks>Data-source is 'CAT_PROPERTY_VALUE.nUserCode'.</remarks>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValuesAttribute.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValuesAttribute.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValuesAttribute.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValuesAttribute.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValuesAttribute.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValuesAttribute.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValuesAttribute.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValuesAttribute.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValuesAttribute.Compare(InMotionGIT.Product.Entity.Contracts.ValuesAttribute,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ValuesAttributeItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValuesAttribute.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValuesAttribute.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValuesAttribute.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValuesAttribute.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.ValuesAttributeCollection">
 <summary>
 Collection for ValuesAttribute class
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValuesAttributeCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValuesAttributeCollection.AddValuesAttribute">
 <summary>
 Add an instance of class 'ValuesAttribute' in the ValuesAttributeCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValuesAttributeCollection.Compare(InMotionGIT.Product.Entity.Contracts.ValuesAttributeCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.ValuesAttributeCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValuesAttributeCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Product.Entity.Contracts.ValuesAttributeCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.GenericRatingTableCollection">
 <summary>
 Collection for GenericRatingTable class
 </summary>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Lookups.Coverage">
 <summary>
 Coverage lookups.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.Lookups.Coverage.Module">
<summary>
Code of The Module of The Coverage. (NMODULEC).
</summary>
<remarks>Data-source is 'LIFE_COVER.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.Lookups.Coverage.Code">
<summary>
Code of the coverage. (NCOVER).
</summary>
<remarks>Data-source is 'LIFE_COVER.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.Lookups.Coverage.Currency">
<summary>
Code of The Currency. (NCURRENCY).
</summary>
<remarks>Data-source is 'LIFE_COVER.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.Lookups.Coverage.CurrencyDescription">
<summary>
Currency description. (SDESCRIPT).
</summary>
<remarks>Data source is 'TABLE11.SDESCRIPT'.</remarks>
</member>
<member name="T:InMotionGIT.Product.Entity.Contracts.Lookups.Product">
 <summary>
 Product lookups.
 </summary>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.Lookups.Product.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH).
</summary>
<remarks>Data source is 'TABLE10.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.Lookups.Product.LineOfBusinessDescription">
<summary>
Complete description of the line of business. (SDESCRIPT).
</summary>
<remarks>Data source is 'TABLE10.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.Lookups.Product.ProductCode">
<summary>
Code of the product. (NPRODUCT).
</summary>
<remarks>Data source is 'PRODMASTER.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.Lookups.Product.ProductDescription">
<summary>
Product description. (SDESCRIPT).
</summary>
<remarks>Data source is 'PRODMASTER.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.Lookups.Product.TypeOfLineOfBusiness">
<summary>
Code of the type of line of business. (SBRANCHT).
</summary>
<remarks>Datasource is 'PRODMASTER.SBRANCHT'.</remarks>
</member>
<member name="P:InMotionGIT.Product.Entity.Contracts.Lookups.Product.TypeOfLineOfBusinessDescription">
<summary>
Type of line of business description. (SDESCRIPT).
</summary>
<remarks>Data source is 'TABLE37.SDESCRIPT'.</remarks>
</member>
</members>
</doc>
