<?xml version="1.0"?>
<doc>
<assembly>
<name>
InMotionGIT.Collecting.Entity.Contracts
</name>
</assembly>
<members>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.My.Resources.Resources">
<summary>
  Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.My.Resources.Resources.ResourceManager">
<summary>
  Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.My.Resources.Resources.Culture">
<summary>
  Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
  búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
</summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumActivitiesByExpirationStatusChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumAgreementDelinquentPolicyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumBankAccountChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumBankAccountEntryChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumBankTransferChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumBulletinDetailChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumCashAccountChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumCashEntryChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumChargeRelationChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumCheckChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumCheckbookChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumCollectionGenerationChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumCollectionNoticeChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumCurrentAccountChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumDelinquentCertificatDetailChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumDelinquentCertificatHeadChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumDelinquentCertificatHeadLotChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumDYNAMICS_TABLE_CERTIFICATChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumEntryCurrentAccountChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumExpirationCyclesForTheCollectionEntityChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumExpirationRuleChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumExpirationStatusAssigmentChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumExpirationStatusByTimePassageOfTheActivityChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumHistoricalRecordOfTheExpirationRuleChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumPaymentAgreementChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumReceiptStipendChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumRejectCausesForTheCollectionEntityChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumStatusOfExpirationManagementChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Enumerations.EnumT_docTypChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus">
 <summary>
 Activities by expiration status
 </summary>
<remarks>Data-source is 'Activity_expiract'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.CreateNewActivitiesByExpirationStatus">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus._CodeExpirationRule">
<summary>
Code of the expiration rule
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus._ConsecutiveNumberActivities">
<summary>
Consecutive number assigns to activities of the same expiration rules.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus._CodePreviousExpirationStatus">
<summary>
Code of the previous expiration status
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus._CodeActualExpirationStatus">
<summary>
Code of the actual expiration status
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus._ActivityCode">
<summary>
Code of the activity
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus._Status">
<summary>
Register status
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.CodeExpirationRule">
<summary>
Code of the expiration rule (nExpirRule)..
</summary>
<remarks>Data-source is 'Activity_expiract.nExpirRule'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.ConsecutiveNumberActivities">
<summary>
Consecutive number assigns to activities of the same expiration rules. (nId)..
</summary>
<remarks>Data-source is 'Activity_expiract.nId'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.CodePreviousExpirationStatus">
<summary>
Code of the previous expiration status (nExpirStat_old)..
</summary>
<remarks>Data-source is 'Activity_expiract.nExpirStat_old'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.CodeActualExpirationStatus">
<summary>
Code of the actual expiration status (nExpirStat_new)..
</summary>
<remarks>Data-source is 'Activity_expiract.nExpirStat_new'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.ActivityCode">
<summary>
Code of the activity (nActivity)..
</summary>
<remarks>Data-source is 'Activity_expiract.nActivity'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.Status">
<summary>
Register status (sStatregt)..
</summary>
<remarks>Data-source is 'Activity_expiract.sStatregt'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.StatusEnum">
<summary>
Register status
</summary>
<remarks>This property use a enumeration based on property 'Status'</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.StatusEnumText">
<summary>
Register status
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.ComputersDate">
<summary>
Date of the computer (dCompDate)..
</summary>
<remarks>Data-source is 'Activity_expiract.dCompDate'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.User">
<summary>
UserCode (nUserCode)..
</summary>
<remarks>Data-source is 'Activity_expiract.nUserCode'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.Compare(InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ActivitiesByExpirationStatusItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatus.ActivityCodeDescription">
 <summary>
 Code of the activity
 </summary>
 <remarks>
 This property is associated with the field 'Table6819' on the table 'Table6819'.
 </remarks>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatusCollection">
 <summary>
 Collection for ActivitiesByExpirationStatus class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatusCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatusCollection.AddActivitiesByExpirationStatus">
 <summary>
 Add an instance of class 'ActivitiesByExpirationStatus' in the ActivitiesByExpirationStatusCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatusCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatusCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatusCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatusCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ActivitiesByExpirationStatusCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy">
 <summary>
 Branches-products allowed for the processing of delinquent days
 </summary>
<remarks>Data-source is 'AGREEMENT_DELINQUENT_POLICY'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.CreateNewAgreementDelinquentPolicy">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy._AgreementCode">
<summary>
Discount or Agreement Code.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy._CodeLineBusiness">
<summary>
Code of the line of business
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy._ProductCode">
<summary>
Code of the product
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy._CurrencyCode">
<summary>
Code of the currency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy._RehabilitationIndicator">
<summary>
Rehabilitation Indicator
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy._MaximunAmount">
<summary>
Maximun amount
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.AgreementCode">
<summary>
Discount or Agreement Code. (NCOD_AGREE)..
</summary>
<remarks>Data-source is 'AGREEMENT_DELINQUENT_POLICY.NCOD_AGREE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.CodeLineBusiness">
<summary>
Code of the line of business (NBRANCH)..
</summary>
<remarks>Data-source is 'AGREEMENT_DELINQUENT_POLICY.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.ProductCode">
<summary>
Code of the product (NPRODUCT)..
</summary>
<remarks>Data-source is 'AGREEMENT_DELINQUENT_POLICY.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.CurrencyCode">
<summary>
Code of the currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'AGREEMENT_DELINQUENT_POLICY.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.RehabilitationIndicator">
<summary>
Rehabilitation Indicator (SINDRESTORE)..
</summary>
<remarks>Data-source is 'AGREEMENT_DELINQUENT_POLICY.SINDRESTORE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.MaximunAmount">
<summary>
Maximun amount (NAMOUNT)..
</summary>
<remarks>Data-source is 'AGREEMENT_DELINQUENT_POLICY.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'AGREEMENT_DELINQUENT_POLICY.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'AGREEMENT_DELINQUENT_POLICY.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.Compare(InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="AgreementDelinquentPolicyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicy.CurrencyCodeDescription">
 <summary>
 Code of the currency.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE11'.
 </remarks>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicyCollection">
 <summary>
 Collection for AgreementDelinquentPolicy class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicyCollection.AddAgreementDelinquentPolicy">
 <summary>
 Add an instance of class 'AgreementDelinquentPolicy' in the AgreementDelinquentPolicyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicyCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.AgreementDelinquentPolicyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.BankAccount">
 <summary>
 Bank accounts.
 </summary>
<remarks>Data-source is 'BANK_ACC'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccount.CreateNewBankAccount">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccount.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._InternalCodeOfBankAccount">
<summary>
Internal code of the bank account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._LedgerAccount">
<summary>
Code of the ledger account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._BankInternalCode">
<summary>
Internal code of the banking institution or the savings and lending institution.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._BankAgency">
<summary>
Code of The Bank Agency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._BankAccount">
<summary>
Number of the bank account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._SubsidiaryAccount">
<summary>
Subsidiary code complementing the account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._BankAccountType">
<summary>
Type of bank account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._AvailableAmount">
<summary>
Amount available in the account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._TypeOfAvailability">
<summary>
Type of availability.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._AccountingCompany">
<summary>
Code of the accounting company.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._BranchOffice">
<summary>
Code of the Branch Office
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._AvailableIn24Hours">
<summary>
Amount that will be available in The Bank Account within 24 Hours Time (
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._AvailableIn48Hours">
<summary>
Amount that will be available in The Bank Account within 48 Hours Time (2 Days).
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._AvailableIn72Hours">
<summary>
Amount that will be available in The Bank Account within 72Hours Time (3 Days).
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._AvailableIn96Hours">
<summary>
Amount that will be available in The Bank Account within 96 Hours Time (4 Days).
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._AvailableIn">
<summary>
Amount that will be available in The Bank Account within
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._Company">
<summary>
Code of the company.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._DepositDate">
<summary>
Date when the deposit was made.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._IndConciliation">
<summary>
Indicator Conciliation
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._BankAccountEntries">
<summary>
Bank account entries.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccount._Checkbook">
<summary>
Checkbooks of current accounts.
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.InternalCodeOfBankAccount">
<summary>
Internal code of the bank account. (NACC_BANK)..
</summary>
<remarks>Data-source is 'BANK_ACC.NACC_BANK'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.LedgerAccount">
<summary>
Code of the ledger account. (SACC_LEDGER)..
</summary>
<remarks>Data-source is 'BANK_ACC.SACC_LEDGER'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.BankInternalCode">
<summary>
Internal code of the banking institution or the savings and lending institution. (NBANK_CODE)..
</summary>
<remarks>Data-source is 'BANK_ACC.NBANK_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.BankAgency">
<summary>
Code of The Bank Agency. (NBK_AGENCY)..
</summary>
<remarks>Data-source is 'BANK_ACC.NBK_AGENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.BankAccount">
<summary>
Number of the bank account. (SACC_NUMBER)..
</summary>
<remarks>Data-source is 'BANK_ACC.SACC_NUMBER'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.SubsidiaryAccount">
<summary>
Subsidiary code complementing the account. (SAUX_ACCOUN)..
</summary>
<remarks>Data-source is 'BANK_ACC.SAUX_ACCOUN'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.BankAccountType">
<summary>
Type of bank account. (NACC_TYPE)..
</summary>
<remarks>Data-source is 'BANK_ACC.NACC_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.AvailableAmount">
<summary>
Amount available in the account. (NAVAILABLE)..
</summary>
<remarks>Data-source is 'BANK_ACC.NAVAILABLE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'BANK_ACC.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.TypeOfAvailability">
<summary>
Type of availability. (NAVAIL_TYPE)..
</summary>
<remarks>Data-source is 'BANK_ACC.NAVAIL_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'BANK_ACC.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'BANK_ACC.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.AccountingCompany">
<summary>
Code of the accounting company. (NLED_COMPAN)..
</summary>
<remarks>Data-source is 'BANK_ACC.NLED_COMPAN'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.BranchOffice">
<summary>
Code of the Branch Office (NOFFICE)..
</summary>
<remarks>Data-source is 'BANK_ACC.NOFFICE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.AvailableIn24Hours">
<summary>
Amount that will be available in The Bank Account within 24 Hours Time ( (NTRANSIT_1)..
</summary>
<remarks>Data-source is 'BANK_ACC.NTRANSIT_1'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.AvailableIn48Hours">
<summary>
Amount that will be available in The Bank Account within 48 Hours Time (2 Days). (NTRANSIT_2)..
</summary>
<remarks>Data-source is 'BANK_ACC.NTRANSIT_2'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.AvailableIn72Hours">
<summary>
Amount that will be available in The Bank Account within 72Hours Time (3 Days). (NTRANSIT_3)..
</summary>
<remarks>Data-source is 'BANK_ACC.NTRANSIT_3'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.AvailableIn96Hours">
<summary>
Amount that will be available in The Bank Account within 96 Hours Time (4 Days). (NTRANSIT_4)..
</summary>
<remarks>Data-source is 'BANK_ACC.NTRANSIT_4'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.AvailableIn">
<summary>
Amount that will be available in The Bank Account within (NTRANSIT_5)..
</summary>
<remarks>Data-source is 'BANK_ACC.NTRANSIT_5'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'BANK_ACC.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'BANK_ACC.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.Company">
<summary>
Code of the company. (NCOMPANY)..
</summary>
<remarks>Data-source is 'BANK_ACC.NCOMPANY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.DepositDate">
<summary>
Date when the deposit was made. (DREALDEP)..
</summary>
<remarks>Data-source is 'BANK_ACC.DREALDEP'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.IndConciliation">
<summary>
Indicator Conciliation (SINDCONCILIATION)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BANK_ACC.SINDCONCILIATION'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccount.NewBankAccountEntriesInstance">
<summary>
Initializes the 'BankAccountEntries' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccount.NewBankAccountEntryItem(System.Boolean)">
<summary>
Add a new item to the collection of 'BankAccountEntries', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'BankAccountEntry' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.BankAccountEntries">
<summary>
Bank account entries. collection.
</summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccount.NewCheckbookInstance">
<summary>
Initializes the 'Checkbook' instance.
</summary>
 <returns>The 'Checkbook' class instance.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.Checkbook">
<summary>
Checkbooks of current accounts. collection.
</summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccount.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccount.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccount.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccount.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccount.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccount.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccount.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccount.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccount.Compare(InMotionGIT.Collecting.Entity.Contracts.BankAccount,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="BankAccountItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccount.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccount.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccount.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccount.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.BankAccountTypeDescription">
 <summary>
 Type of bank account.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE190'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccount.TypeOfAvailabilityDescription">
 <summary>
 Type of availability.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE197'.
 </remarks>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.BankAccountCollection">
 <summary>
 Collection for BankAccount class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountCollection.AddBankAccount">
 <summary>
 Add an instance of class 'BankAccount' in the BankAccountCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.BankAccountCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry">
 <summary>
 Bank account entries.
 </summary>
<remarks>Data-source is 'BANK_MOV'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.CreateNewBankAccountEntry">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._InternalCodeOfBankAccount">
<summary>
Internal code of the bank account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._KeyConsecutiveNumber">
<summary>
Consecutive number
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._DepositNumber">
<summary>
Number identifying the Deposit or Entry.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._CancelledEntry">
<summary>
The entry has been cancelled or reversed.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._IsTheReversalOfAnotherEntry">
<summary>
The entry is the reversal of another entry.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._DocumentDate">
<summary>
Date of the document.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._CashDeposit">
<summary>
Amount deposited in cash.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._CheckDepositAmount">
<summary>
Amount deposited in checks.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._YearAndMonth">
<summary>
Year and month of the bank reconciliation process.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._ScheduleNumber">
<summary>
Number of the collection schedule, or statement of collected premiums.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._DocumentNumber">
<summary>
Number identifying the physical document supporting this entry.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._Concept">
<summary>
Concept of the entry of money.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._EntryType">
<summary>
Type of entry related to the bank
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._ProducerCode">
<summary>
Code of the producer.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._ApplicationID">
<summary>
Number of application.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._VoucherLedger">
<summary>
Code of the accounting company.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._PremiumFinancialAgreement">
<summary>
Number of the financial agreement recorded in the Agreement table (Finance_co)
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._InstallmentNumber">
<summary>
Number of the installment of the Financial Agreement related to the entry
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._AccountingCompany">
<summary>
Code of the accounting company.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._AccountingVoucher">
<summary>
Number of accounting voucher (internal).
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._TypeOfCurrentAccount">
<summary>
Type of current account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._BusinessType">
<summary>
Type of business
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._Cashier">
<summary>
Number of the cash register related to the entry.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._PostingDate">
<summary>
Date when the entry was posted in the accounting books.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._NoteID">
<summary>
Number of the note related to the entry of the current account
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._ConsecutiveNumber">
<summary>
Consecutive number identifying the record
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._InsuranceArea">
<summary>
Insurance area (Life or P&#38;C).
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._CollectionDate">
<summary>
Date of the premium collection.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._ApplicationNumber">
<summary>
Application number.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._ExchangeRate">
<summary>
Exchange rate of the entry to the local currency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._nOri_curr">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._AmountInOriginalCurrency">
<summary>
Amount expressed in the original currency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._Folio">
<summary>
Folio number of document of support.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._SupportingDocument">
<summary>
Type of supporting document.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._DepositID">
<summary>
ID number of the deposit made in the cash register.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._nCod_agree">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._BankCode">
<summary>
Code of the bank included in the agreement.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._PaymentMethod">
<summary>
Code of the payment method of the money received.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._ScheduleNumberMoneyEntryWasReused">
<summary>
Number of the schedule in which the money entry was reused
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._DepositDate">
<summary>
Date when the deposit was made.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._AmountWithDecimals">
<summary>
Amount with decimals
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._ValueDateOfMovement">
<summary>
Value date of movement
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._IncomeBalance">
<summary>
Income balance
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._BankTransfer">
<summary>
Details of bank transfers.
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.InternalCodeOfBankAccount">
<summary>
Internal code of the bank account. (NACC_BANK)..
</summary>
<remarks>Data-source is 'BANK_MOV.NACC_BANK'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'BANK_MOV.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.KeyConsecutiveNumber">
<summary>
Consecutive number (NMOVEMENT)..
</summary>
<remarks>Data-source is 'BANK_MOV.NMOVEMENT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.DepositNumber">
<summary>
Number identifying the Deposit or Entry. (SDEP_NUMBER)..
</summary>
<remarks>Data-source is 'BANK_MOV.SDEP_NUMBER'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.CancelledEntry">
<summary>
The entry has been cancelled or reversed. (SNULL_MOVEM)..
</summary>
<remarks>Data-source is 'BANK_MOV.SNULL_MOVEM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.IsTheReversalOfAnotherEntry">
<summary>
The entry is the reversal of another entry. (SNULL_RECOR)..
</summary>
<remarks>Data-source is 'BANK_MOV.SNULL_RECOR'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'BANK_MOV.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.DocumentDate">
<summary>
Date of the document. (DDOC_DATE)..
</summary>
<remarks>Data-source is 'BANK_MOV.DDOC_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.CashDeposit">
<summary>
Amount deposited in cash. (NCASH_AMOUN)..
</summary>
<remarks>Data-source is 'BANK_MOV.NCASH_AMOUN'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.CheckDepositAmount">
<summary>
Amount deposited in checks. (NCHEQ_AMOUN)..
</summary>
<remarks>Data-source is 'BANK_MOV.NCHEQ_AMOUN'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.YearAndMonth">
<summary>
Year and month of the bank reconciliation process. (NYEAR_MONTH)..
</summary>
<remarks>Data-source is 'BANK_MOV.NYEAR_MONTH'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.ScheduleNumber">
<summary>
Number of the collection schedule, or statement of collected premiums. (NBORDEREAUX)..
</summary>
<remarks>Data-source is 'BANK_MOV.NBORDEREAUX'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.DocumentNumber">
<summary>
Number identifying the physical document supporting this entry. (SDOCNUMBE)..
</summary>
<remarks>Data-source is 'BANK_MOV.SDOCNUMBE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.Concept">
<summary>
Concept of the entry of money. (NCONCEPT)..
</summary>
<remarks>Data-source is 'BANK_MOV.NCONCEPT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'BANK_MOV.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.EntryType">
<summary>
Type of entry related to the bank (NTYPE_MOV)..
</summary>
<remarks>Data-source is 'BANK_MOV.NTYPE_MOV'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.ProducerCode">
<summary>
Code of the producer. (NINTERMED)..
</summary>
<remarks>Data-source is 'BANK_MOV.NINTERMED'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'BANK_MOV.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.ApplicationID">
<summary>
Number of application. (SNUMFORM)..
</summary>
<remarks>Data-source is 'BANK_MOV.SNUMFORM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'BANK_MOV.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.VoucherLedger">
<summary>
Code of the accounting company. (NVOUCHER_LE)..
</summary>
<remarks>Data-source is 'BANK_MOV.NVOUCHER_LE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.PremiumFinancialAgreement">
<summary>
Number of the financial agreement recorded in the Agreement table (Finance_co) (NCONTRAT)..
</summary>
<remarks>Data-source is 'BANK_MOV.NCONTRAT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.InstallmentNumber">
<summary>
Number of the installment of the Financial Agreement related to the entry (NDRAFT)..
</summary>
<remarks>Data-source is 'BANK_MOV.NDRAFT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.AccountingCompany">
<summary>
Code of the accounting company. (NCOMPANYC)..
</summary>
<remarks>Data-source is 'BANK_MOV.NCOMPANYC'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.AccountingVoucher">
<summary>
Number of accounting voucher (internal). (NVOUCHER)..
</summary>
<remarks>Data-source is 'BANK_MOV.NVOUCHER'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.TypeOfCurrentAccount">
<summary>
Type of current account. (NTYP_ACCO)..
</summary>
<remarks>Data-source is 'BANK_MOV.NTYP_ACCO'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.BusinessType">
<summary>
Type of business (STYPE_ACC)..
</summary>
<remarks>Data-source is 'BANK_MOV.STYPE_ACC'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.Cashier">
<summary>
Number of the cash register related to the entry. (NCASHNUM)..
</summary>
<remarks>Data-source is 'BANK_MOV.NCASHNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.PostingDate">
<summary>
Date when the entry was posted in the accounting books. (DPOSTED)..
</summary>
<remarks>Data-source is 'BANK_MOV.DPOSTED'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.NoteID">
<summary>
Number of the note related to the entry of the current account (NNOTENUM)..
</summary>
<remarks>Data-source is 'BANK_MOV.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.ConsecutiveNumber">
<summary>
Consecutive number identifying the record (NID)..
</summary>
<remarks>Data-source is 'BANK_MOV.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.InsuranceArea">
<summary>
Insurance area (Life or P&#38;C). (NINSUR_AREA)..
</summary>
<remarks>Data-source is 'BANK_MOV.NINSUR_AREA'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.CollectionDate">
<summary>
Date of the premium collection. (DCOLLECTION)..
</summary>
<remarks>Data-source is 'BANK_MOV.DCOLLECTION'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.ApplicationNumber">
<summary>
Application number. (NPROPONUM)..
</summary>
<remarks>Data-source is 'BANK_MOV.NPROPONUM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'BANK_MOV.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'BANK_MOV.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'BANK_MOV.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.ExchangeRate">
<summary>
Exchange rate of the entry to the local currency. (NEXCHANGE)..
</summary>
<remarks>Data-source is 'BANK_MOV.NEXCHANGE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.nOri_curr">
<summary>
.
</summary>
<remarks>Data-source is 'BANK_MOV.NORI_CURR'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.AmountInOriginalCurrency">
<summary>
Amount expressed in the original currency. (NORI_AMOUNT)..
</summary>
<remarks>Data-source is 'BANK_MOV.NORI_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.Folio">
<summary>
Folio number of document of support. (NSUPPORT_ID)..
</summary>
<remarks>Data-source is 'BANK_MOV.NSUPPORT_ID'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.SupportingDocument">
<summary>
Type of supporting document. (NTYPESUPPORT)..
</summary>
<remarks>Data-source is 'BANK_MOV.NTYPESUPPORT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.DepositID">
<summary>
ID number of the deposit made in the cash register. (NCASH_ID)..
</summary>
<remarks>Data-source is 'BANK_MOV.NCASH_ID'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.nCod_agree">
<summary>
.
</summary>
<remarks>Data-source is 'BANK_MOV.NCOD_AGREE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.BankCode">
<summary>
Code of the bank included in the agreement. (NBANK_AGREE)..
</summary>
<remarks>Data-source is 'BANK_MOV.NBANK_AGREE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.PaymentMethod">
<summary>
Code of the payment method of the money received. (NINPUTCHANNEL)..
</summary>
<remarks>Data-source is 'BANK_MOV.NINPUTCHANNEL'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.ScheduleNumberMoneyEntryWasReused">
<summary>
Number of the schedule in which the money entry was reused (NBORDERUSED)..
</summary>
<remarks>Data-source is 'BANK_MOV.NBORDERUSED'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.DepositDate">
<summary>
Date when the deposit was made. (DREALDEP)..
</summary>
<remarks>Data-source is 'BANK_MOV.DREALDEP'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.AmountWithDecimals">
<summary>
Amount with decimals (NAMOUNTDEC)..
</summary>
<remarks>Data-source is 'BANK_MOV.NAMOUNTDEC'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.ValueDateOfMovement">
<summary>
Value date of movement (DVALUEDATE)..
</summary>
<remarks>Data-source is 'BANK_MOV.DVALUEDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.IncomeBalance">
<summary>
Income balance (NBALANCE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BANK_MOV.NBALANCE'.</remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.NewBankTransferInstance">
<summary>
Initializes the 'BankTransfer' instance.
</summary>
 <returns>The 'BankTransfer' class instance.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.BankTransfer">
<summary>
Details of bank transfers. collection.
</summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.Compare(InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="BankAccountEntryItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.ConceptDescription">
 <summary>
 Concept of the entry of money.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE22'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.EntryTypeDescription">
 <summary>
 Type of entry related to the bank
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE296'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntry.TypeOfCurrentAccountDescription">
 <summary>
 Type of current account.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE400'.
 </remarks>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntryCollection">
 <summary>
 Collection for BankAccountEntry class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntryCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntryCollection.AddBankAccountEntry">
 <summary>
 Add an instance of class 'BankAccountEntry' in the BankAccountEntryCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntryCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.BankAccountEntryCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntryCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntryCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankAccountEntryCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.BankTransfer">
 <summary>
 Details of bank transfers.
 </summary>
<remarks>Data-source is 'BANK_TRANS'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.CreateNewBankTransfer">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankTransfer._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankTransfer._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankTransfer._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankTransfer._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankTransfer._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankTransfer._InternalCodeOfBankAccount">
<summary>
Internal code of the bank account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankTransfer._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankTransfer._Entry">
<summary>
Consecutive number
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankTransfer._BankAccountType">
<summary>
Type of bank account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankTransfer._BankAccount">
<summary>
Number of the bank account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankTransfer._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankTransfer._BankInternalCode">
<summary>
Internal code of the banking institution or the savings and lending institution.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankTransfer._BankAgency">
<summary>
Code of The Bank Agency that receives The Transference.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankTransfer._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankTransfer._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankTransfer._ExchangeRate">
<summary>
Exchange rate of the entry to the local currency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankTransfer._ScheduleNumber">
<summary>
Number of the collection schedule, or statement of collected premiums.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankTransfer._CBU">
<summary>
Uniform Bank code
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankTransfer._CurrencyCode">
<summary>
Code of The Currency
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankTransfer._ABA">
<summary>
ABA
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankTransfer._NumberOfPaymentOrder">
<summary>
Number of the payment order
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BankTransfer._SSWIFTACC">
<summary>

</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.InternalCodeOfBankAccount">
<summary>
Internal code of the bank account. (NACC_BANK)..
</summary>
<remarks>Data-source is 'BANK_TRANS.NACC_BANK'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'BANK_TRANS.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.Entry">
<summary>
Consecutive number (NMOVEMENT)..
</summary>
<remarks>Data-source is 'BANK_TRANS.NMOVEMENT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.BankAccountType">
<summary>
Type of bank account. (NACC_TYPE)..
</summary>
<remarks>Data-source is 'BANK_TRANS.NACC_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.BankAccount">
<summary>
Number of the bank account. (SACCO_NUM)..
</summary>
<remarks>Data-source is 'BANK_TRANS.SACCO_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'BANK_TRANS.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.BankInternalCode">
<summary>
Internal code of the banking institution or the savings and lending institution. (NBANK_CODE)..
</summary>
<remarks>Data-source is 'BANK_TRANS.NBANK_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.BankAgency">
<summary>
Code of The Bank Agency that receives The Transference. (NBK_AGENCY)..
</summary>
<remarks>Data-source is 'BANK_TRANS.NBK_AGENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'BANK_TRANS.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'BANK_TRANS.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.ExchangeRate">
<summary>
Exchange rate of the entry to the local currency. (NEXCHANGE)..
</summary>
<remarks>Data-source is 'BANK_TRANS.NEXCHANGE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.ScheduleNumber">
<summary>
Number of the collection schedule, or statement of collected premiums. (NBORDEREAUX)..
</summary>
<remarks>Data-source is 'BANK_TRANS.NBORDEREAUX'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.CBU">
<summary>
Uniform Bank code (SACC_CBU)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BANK_TRANS.SACC_CBU'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.CurrencyCode">
<summary>
Code of The Currency (NCURRENCY)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BANK_TRANS.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.ABA">
<summary>
ABA (SN_ABA)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BANK_TRANS.SN_ABA'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.NumberOfPaymentOrder">
<summary>
Number of the payment order (NREQUEST_NU)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BANK_TRANS.NREQUEST_NU'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.SSWIFTACC">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BANK_TRANS.SSWIFTACC'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.Compare(InMotionGIT.Collecting.Entity.Contracts.BankTransfer,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="BankTransferItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankTransfer.BankAccountTypeDescription">
 <summary>
 Type of bank account.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE190'.
 </remarks>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.BankTransferCollection">
 <summary>
 Collection for BankTransfer class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankTransferCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankTransferCollection.AddBankTransfer">
 <summary>
 Add an instance of class 'BankTransfer' in the BankTransferCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankTransferCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.BankTransferCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BankTransferCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankTransferCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BankTransferCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail">
 <summary>
 Billing notice details.
 </summary>
<remarks>Data-source is 'BULLETINS_DET'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.CreateNewBulletinDetail">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._CollectionNotice">
<summary>
Number of the collection notice which was used to collect the installment.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._ConsecutiveNumber">
<summary>
Consecutive Number identifying the record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._TypeOfDocument">
<summary>
Code of the type of document of premium collection.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._PremiumFinancialAgreement">
<summary>
Number of the financial agreement recorded in the Agreement table (Finance_co)
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._InstallmentNumber">
<summary>
Number identifying the installment in the financial agreement.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._BullNumber">
<summary>
Number identifying the bill
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._PaidAmount">
<summary>
Amount paid on this document.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._BillControlDigit">
<summary>
Bill control digit (used in policy modifications with changes in reinsurance)
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._ProductCodeProduct">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._Installment">
<summary>
Number of the installment related to the bill payment agreement.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._Amount">
<summary>
Total amount related to the document of the collection notice
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._PremiumPaymentOriginalCurrency">
<summary>
Amount of payment receipt in original currency
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._ValuationDate">
<summary>
Valuation Date to apply exchange factor
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._ExchangeRate">
<summary>
Factor exchange currency to the local currency movement
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._CertificateID">
<summary>
Number identifying the certificate (only for Groups, if the bill belongs to a single certificate).
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._Status">
<summary>
Register status
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail._CodeUpdReceiptBulletin">
<summary>
Code of update of the receipt in the bulletin
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.CollectionNotice">
<summary>
Number of the collection notice which was used to collect the installment. (NBULLETINS)..
</summary>
<remarks>Data-source is 'BULLETINS_DET.NBULLETINS'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.ConsecutiveNumber">
<summary>
Consecutive Number identifying the record. (NID)..
</summary>
<remarks>Data-source is 'BULLETINS_DET.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.TypeOfDocument">
<summary>
Code of the type of document of premium collection. (NCOLLECDOCTYP)..
</summary>
<remarks>Data-source is 'BULLETINS_DET.NCOLLECDOCTYP'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.PremiumFinancialAgreement">
<summary>
Number of the financial agreement recorded in the Agreement table (Finance_co) (NCONTRAT)..
</summary>
<remarks>Data-source is 'BULLETINS_DET.NCONTRAT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.InstallmentNumber">
<summary>
Number identifying the installment in the financial agreement. (NDRAFT)..
</summary>
<remarks>Data-source is 'BULLETINS_DET.NDRAFT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.BullNumber">
<summary>
Number identifying the bill (NRECEIPT)..
</summary>
<remarks>Data-source is 'BULLETINS_DET.NRECEIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.PaidAmount">
<summary>
Amount paid on this document. (NAMOUNTPAY)..
</summary>
<remarks>Data-source is 'BULLETINS_DET.NAMOUNTPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'BULLETINS_DET.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'BULLETINS_DET.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.BillControlDigit">
<summary>
Bill control digit (used in policy modifications with changes in reinsurance) (NDIGIT)..
</summary>
<remarks>Data-source is 'BULLETINS_DET.NDIGIT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'BULLETINS_DET.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'BULLETINS_DET.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.ProductCodeProduct">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'BULLETINS_DET.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.Installment">
<summary>
Number of the installment related to the bill payment agreement. (NPAYNUMBE)..
</summary>
<remarks>Data-source is 'BULLETINS_DET.NPAYNUMBE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.Amount">
<summary>
Total amount related to the document of the collection notice (NAMOUNT)..
</summary>
<remarks>Data-source is 'BULLETINS_DET.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.PremiumPaymentOriginalCurrency">
<summary>
Amount of payment receipt in original currency (NPREMIUM)..
</summary>
<remarks>Data-source is 'BULLETINS_DET.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.ValuationDate">
<summary>
Valuation Date to apply exchange factor (DVALUEDATE)..
</summary>
<remarks>Data-source is 'BULLETINS_DET.DVALUEDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.ExchangeRate">
<summary>
Factor exchange currency to the local currency movement (NEXCHANGE)..
</summary>
<remarks>Data-source is 'BULLETINS_DET.NEXCHANGE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BULLETINS_DET.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.CertificateID">
<summary>
Number identifying the certificate (only for Groups, if the bill belongs to a single certificate). (NCERTIF)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BULLETINS_DET.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.Status">
<summary>
Register status (SSTATREGT)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BULLETINS_DET.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.StatusEnum">
<summary>
Register status
</summary>
<remarks>This property use a enumeration based on property 'Status'</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.StatusEnumText">
<summary>
Register status
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.CodeUpdReceiptBulletin">
<summary>
Code of update of the receipt in the bulletin (NUPDATE_COD)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BULLETINS_DET.NUPDATE_COD'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.Compare(InMotionGIT.Collecting.Entity.Contracts.BulletinDetail,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="BulletinDetailItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetail.TypeOfDocumentDescription">
 <summary>
 Code of the type of document of premium collection.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5587'.
 </remarks>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.BulletinDetailCollection">
 <summary>
 Collection for BulletinDetail class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BulletinDetailCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BulletinDetailCollection.AddBulletinDetail">
 <summary>
 Add an instance of class 'BulletinDetail' in the BulletinDetailCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BulletinDetailCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.BulletinDetailCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.BulletinDetailCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BulletinDetailCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.BulletinDetailCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.CashAccount">
 <summary>
 Cash accounts.
 </summary>
<remarks>Data-source is 'CASH_ACC'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashAccount.CreateNewCashAccount">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashAccount.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashAccount._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashAccount._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashAccount._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashAccount._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashAccount._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashAccount._CashierInternalCode">
<summary>
Internal code of the cashier Account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashAccount._BranchOffice">
<summary>
Code of the branch office.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashAccount._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashAccount._Cashier">
<summary>
Number of the cash register related to the entry.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashAccount._AccountingCompany">
<summary>
Code of the accounting company.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashAccount._LedgerAccount">
<summary>
Code of the ledger account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashAccount._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashAccount._SubsidiaryAccount">
<summary>
Subsidiary code complementing the account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashAccount._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashAccount._AvailableAmount">
<summary>
Amount available in the account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashAccount._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashAccount._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashAccount._MinimumCashAmount">
<summary>
Minimum cash amount available at the cash register.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashAccount._Company">
<summary>
Code of the company.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashAccount._CashEntries">
<summary>
Cash Entries.
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashAccount.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashAccount.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashAccount.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashAccount.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashAccount.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashAccount.CashierInternalCode">
<summary>
Internal code of the cashier Account. (NACC_CASH)..
</summary>
<remarks>Data-source is 'CASH_ACC.NACC_CASH'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashAccount.BranchOffice">
<summary>
Code of the branch office. (NOFFICE)..
</summary>
<remarks>Data-source is 'CASH_ACC.NOFFICE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashAccount.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'CASH_ACC.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashAccount.Cashier">
<summary>
Number of the cash register related to the entry. (NCASHNUM)..
</summary>
<remarks>Data-source is 'CASH_ACC.NCASHNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashAccount.AccountingCompany">
<summary>
Code of the accounting company. (NLED_COMPAN)..
</summary>
<remarks>Data-source is 'CASH_ACC.NLED_COMPAN'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashAccount.LedgerAccount">
<summary>
Code of the ledger account. (SACCOUNT)..
</summary>
<remarks>Data-source is 'CASH_ACC.SACCOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashAccount.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CASH_ACC.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashAccount.SubsidiaryAccount">
<summary>
Subsidiary code complementing the account. (SAUX_ACCOUN)..
</summary>
<remarks>Data-source is 'CASH_ACC.SAUX_ACCOUN'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashAccount.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CASH_ACC.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashAccount.AvailableAmount">
<summary>
Amount available in the account. (NAVAILABLE)..
</summary>
<remarks>Data-source is 'CASH_ACC.NAVAILABLE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashAccount.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CASH_ACC.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashAccount.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'CASH_ACC.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashAccount.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashAccount.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashAccount.MinimumCashAmount">
<summary>
Minimum cash amount available at the cash register. (NMIN_AMOUNT)..
</summary>
<remarks>Data-source is 'CASH_ACC.NMIN_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashAccount.Company">
<summary>
Code of the company. (NCOMPANY)..
</summary>
<remarks>Data-source is 'CASH_ACC.NCOMPANY'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashAccount.NewCashEntriesInstance">
<summary>
Initializes the 'CashEntries' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashAccount.NewCashEntryItem(System.Boolean)">
<summary>
Add a new item to the collection of 'CashEntries', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'CashEntry' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashAccount.CashEntries">
<summary>
Cash Entries. collection.
</summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashAccount.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashAccount.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashAccount.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashAccount.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashAccount.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashAccount.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashAccount.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashAccount.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashAccount.Compare(InMotionGIT.Collecting.Entity.Contracts.CashAccount,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CashAccountItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashAccount.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashAccount.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashAccount.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashAccount.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashAccount.BranchOfficeDescription">
 <summary>
 Code of the branch office.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9'.
 </remarks>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.CashAccountCollection">
 <summary>
 Collection for CashAccount class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashAccountCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashAccountCollection.AddCashAccount">
 <summary>
 Add an instance of class 'CashAccount' in the CashAccountCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashAccountCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.CashAccountCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashAccountCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashAccountCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashAccountCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.CashEntry">
 <summary>
 Cash Entries.
 </summary>
<remarks>Data-source is 'CASH_MOV'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashEntry.CreateNewCashEntry">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashEntry.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._CashierInternalCode">
<summary>
Internal code of the cashier Account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._BranchOffice">
<summary>
Code of the branch office related to the cash account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._Cashier">
<summary>
Number of the cash register related to the entry.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._Transaction">
<summary>
Consecutive number identifying the record as sole.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._Amount">
<summary>
Amount of this entry.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._Concept">
<summary>
Concept of the entry of money.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._InternalCodeOfBankAccount">
<summary>
Internal code of the bank account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._CreditCardType">
<summary>
Type of the credit card.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._BankInternalCode">
<summary>
Internal code of the banking institution or the savings and lending institution.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._AccountingLineOfBusiness">
<summary>
Code of the accounting line of business.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._ExpirationDate">
<summary>
Expiration date of the credit card.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._CreditCardNumber">
<summary>
Number of the Credit Card.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._TransactionNumber">
<summary>
Number of the transaction related to the entry of the cash register
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._AccountingCompanyCode">
<summary>
Code of the company.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._AccountingCompany">
<summary>
Code of the accounting company.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._AccountingVoucher">
<summary>
Number of accounting voucher (internal).
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._PremiumFinancialAgreement">
<summary>
Number of the financial agreement recorded in the Agreement table (Finance_co)
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._DepositNumber">
<summary>
Number identifying the Deposit or Entry.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._DocumentDate">
<summary>
Date of the document.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._DocumentNumber">
<summary>
Number identifying the physical document supporting this entry.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._PromissoryNoteID">
<summary>
Number identifying the installment in the financial agreement
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._ExchangeRate">
<summary>
Exchange rate of the entry to the local currency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._ProducerCode">
<summary>
Code of the producer.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._CashBillType">
<summary>
Type of cash bill document.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._CancelledEntry">
<summary>
The entry has been cancelled or reversed.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._CancellationEntry">
<summary>
The record is a cancellation entry.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._Installment">
<summary>
Number of the installment related to the bill payment agreement.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._BillNumber">
<summary>
Number identifying the bill
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._YearAndMonth">
<summary>
Year and month of the bank reconciliation process.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._Schedule">
<summary>
Number of the collection schedule, or statement of collected premiums.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._TypeOfCurrentAccount">
<summary>
Type of current account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._ClientID">
<summary>
Code of the client related to the entry.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._ApplicationID">
<summary>
Number of application.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._ClientThroughMakesPayment">
<summary>
Code identifying the client through the person that makes the payment
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._BusinessType">
<summary>
Type of business
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._ShortDescription">
<summary>
Reason of the cash entry request (Short description).
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._NoteID">
<summary>
Number of the note containing the comments.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._AccountingDate">
<summary>
Date of entry in the accounting books.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._RequestingUser">
<summary>
Code of the user requesting the entry
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._CheckLocation">
<summary>
Code of the location of the bank issuing the check, for availability purposes.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._CompanyCode">
<summary>
Code of the company.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._ProcessedEntryIndicator">
<summary>
Entry processed (Indicator).
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._InsuranceArea">
<summary>
Insurance area (Life or P&#38;C).
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._PostingDate">
<summary>
Date when the entry was posted in the accounting books.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._AgreementCode">
<summary>
Discount or Agreement Code.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._PaymentMethod">
<summary>
Code of the payment method of the money received.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._ValueDate">
<summary>
Value date to obtain the exchange factor.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._ReDeposit">
<summary>
Number of the new deposit (Redeposit)
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._OriginalCurrency">
<summary>
Code of the original currency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._AmountInOriginalCurrency">
<summary>
Amount expressed in the original currency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._Folio">
<summary>
Folio number of document of support.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._SupportingDocument">
<summary>
Type of supporting document.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._dCollection">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._CheckLastStatus">
<summary>
Last status of the check.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._DepositID">
<summary>
ID number of the deposit made in the cash register.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._Interest">
<summary>
Amount of financial interest included in the check.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._Bank">
<summary>
Code of the bank included in the agreement.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._ApplicationNumber">
<summary>
Application number.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._CollectionNotice">
<summary>
Number of the collection notice which was used to collect the installment.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._ClaimCode">
<summary>
Code of The Claim Case or Claimant.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._ClaimType">
<summary>
Claim Type.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._ConsecutiveNumber">
<summary>
Record Identifier
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._NumberIDOfTheStatementOfCollectedPremiums">
<summary>
Number of the schedule in which the entry was reused
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._AmountWithDecimals">
<summary>
Amount with decimals
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._ProportionAppliedCollections">
<summary>
Proportion applied to collections
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.CashierInternalCode">
<summary>
Internal code of the cashier Account. (NACC_CASH)..
</summary>
<remarks>Data-source is 'CASH_MOV.NACC_CASH'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.BranchOffice">
<summary>
Code of the branch office related to the cash account. (NOFFICE)..
</summary>
<remarks>Data-source is 'CASH_MOV.NOFFICE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'CASH_MOV.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.Cashier">
<summary>
Number of the cash register related to the entry. (NCASHNUM)..
</summary>
<remarks>Data-source is 'CASH_MOV.NCASHNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CASH_MOV.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.Transaction">
<summary>
Consecutive number identifying the record as sole. (NTRANSAC)..
</summary>
<remarks>Data-source is 'CASH_MOV.NTRANSAC'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.Amount">
<summary>
Amount of this entry. (NAMOUNT)..
</summary>
<remarks>Data-source is 'CASH_MOV.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'CASH_MOV.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.Concept">
<summary>
Concept of the entry of money. (NCONCEPT)..
</summary>
<remarks>Data-source is 'CASH_MOV.NCONCEPT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.InternalCodeOfBankAccount">
<summary>
Internal code of the bank account. (NACC_BANK)..
</summary>
<remarks>Data-source is 'CASH_MOV.NACC_BANK'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.CreditCardType">
<summary>
Type of the credit card. (NCARD_TYPE)..
</summary>
<remarks>Data-source is 'CASH_MOV.NCARD_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.BankInternalCode">
<summary>
Internal code of the banking institution or the savings and lending institution. (NBANK_CODE)..
</summary>
<remarks>Data-source is 'CASH_MOV.NBANK_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.AccountingLineOfBusiness">
<summary>
Code of the accounting line of business. (NBRANCH_LED)..
</summary>
<remarks>Data-source is 'CASH_MOV.NBRANCH_LED'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.ExpirationDate">
<summary>
Expiration date of the credit card. (DCARD_EXPIR)..
</summary>
<remarks>Data-source is 'CASH_MOV.DCARD_EXPIR'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.CreditCardNumber">
<summary>
Number of the Credit Card. (SCARD_NUM)..
</summary>
<remarks>Data-source is 'CASH_MOV.SCARD_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.TransactionNumber">
<summary>
Number of the transaction related to the entry of the cash register (NCL_TRANSAC)..
</summary>
<remarks>Data-source is 'CASH_MOV.NCL_TRANSAC'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.AccountingCompanyCode">
<summary>
Code of the company. (NCOMPANYC)..
</summary>
<remarks>Data-source is 'CASH_MOV.NCOMPANYC'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CASH_MOV.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.AccountingCompany">
<summary>
Code of the accounting company. (NVOUCHER_LE)..
</summary>
<remarks>Data-source is 'CASH_MOV.NVOUCHER_LE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.AccountingVoucher">
<summary>
Number of accounting voucher (internal). (NVOUCHER)..
</summary>
<remarks>Data-source is 'CASH_MOV.NVOUCHER'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.PremiumFinancialAgreement">
<summary>
Number of the financial agreement recorded in the Agreement table (Finance_co) (NCONTRAT)..
</summary>
<remarks>Data-source is 'CASH_MOV.NCONTRAT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.DepositNumber">
<summary>
Number identifying the Deposit or Entry. (SDEP_NUMBER)..
</summary>
<remarks>Data-source is 'CASH_MOV.SDEP_NUMBER'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.DocumentDate">
<summary>
Date of the document. (DDOC_DATE)..
</summary>
<remarks>Data-source is 'CASH_MOV.DDOC_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.DocumentNumber">
<summary>
Number identifying the physical document supporting this entry. (SDOCNUMBE)..
</summary>
<remarks>Data-source is 'CASH_MOV.SDOCNUMBE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.PromissoryNoteID">
<summary>
Number identifying the installment in the financial agreement (NDRAFT)..
</summary>
<remarks>Data-source is 'CASH_MOV.NDRAFT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.ExchangeRate">
<summary>
Exchange rate of the entry to the local currency. (NEXCHANGE)..
</summary>
<remarks>Data-source is 'CASH_MOV.NEXCHANGE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.ProducerCode">
<summary>
Code of the producer. (NINTERMED)..
</summary>
<remarks>Data-source is 'CASH_MOV.NINTERMED'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.CashBillType">
<summary>
Type of cash bill document. (NMOV_TYPE)..
</summary>
<remarks>Data-source is 'CASH_MOV.NMOV_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.CancelledEntry">
<summary>
The entry has been cancelled or reversed. (SNULL_MOVEM)..
</summary>
<remarks>Data-source is 'CASH_MOV.SNULL_MOVEM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.CancellationEntry">
<summary>
The record is a cancellation entry. (SNULL_RECOR)..
</summary>
<remarks>Data-source is 'CASH_MOV.SNULL_RECOR'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'CASH_MOV.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.Installment">
<summary>
Number of the installment related to the bill payment agreement. (NPAYNUMBE)..
</summary>
<remarks>Data-source is 'CASH_MOV.NPAYNUMBE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.BillNumber">
<summary>
Number identifying the bill (NRECEIPT)..
</summary>
<remarks>Data-source is 'CASH_MOV.NRECEIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CASH_MOV.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.YearAndMonth">
<summary>
Year and month of the bank reconciliation process. (NYEAR_MONTH)..
</summary>
<remarks>Data-source is 'CASH_MOV.NYEAR_MONTH'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.Schedule">
<summary>
Number of the collection schedule, or statement of collected premiums. (NBORDEREAUX)..
</summary>
<remarks>Data-source is 'CASH_MOV.NBORDEREAUX'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.TypeOfCurrentAccount">
<summary>
Type of current account. (NTYP_ACCO)..
</summary>
<remarks>Data-source is 'CASH_MOV.NTYP_ACCO'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.ClientID">
<summary>
Code of the client related to the entry. (SCLIENT)..
</summary>
<remarks>Data-source is 'CASH_MOV.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.ApplicationID">
<summary>
Number of application. (SNUMFORM)..
</summary>
<remarks>Data-source is 'CASH_MOV.SNUMFORM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.ClientThroughMakesPayment">
<summary>
Code identifying the client through the person that makes the payment (SINTER_PAY)..
</summary>
<remarks>Data-source is 'CASH_MOV.SINTER_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.BusinessType">
<summary>
Type of business (STYPE_ACC)..
</summary>
<remarks>Data-source is 'CASH_MOV.STYPE_ACC'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.ShortDescription">
<summary>
Reason of the cash entry request (Short description). (SDESCRIPT)..
</summary>
<remarks>Data-source is 'CASH_MOV.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.NoteID">
<summary>
Number of the note containing the comments. (NNOTENUM)..
</summary>
<remarks>Data-source is 'CASH_MOV.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.AccountingDate">
<summary>
Date of entry in the accounting books. (DLEDGER_DAT)..
</summary>
<remarks>Data-source is 'CASH_MOV.DLEDGER_DAT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.RequestingUser">
<summary>
Code of the user requesting the entry (NUSER_SOL)..
</summary>
<remarks>Data-source is 'CASH_MOV.NUSER_SOL'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.CheckLocation">
<summary>
Code of the location of the bank issuing the check, for availability purposes. (NCHEQUELOCAT)..
</summary>
<remarks>Data-source is 'CASH_MOV.NCHEQUELOCAT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.CompanyCode">
<summary>
Code of the company. (NCOMPANY)..
</summary>
<remarks>Data-source is 'CASH_MOV.NCOMPANY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.ProcessedEntryIndicator">
<summary>
Entry processed (Indicator). (SPROCESS)..
</summary>
<remarks>Data-source is 'CASH_MOV.SPROCESS'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.InsuranceArea">
<summary>
Insurance area (Life or P&#38;C). (NINSUR_AREA)..
</summary>
<remarks>Data-source is 'CASH_MOV.NINSUR_AREA'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.PostingDate">
<summary>
Date when the entry was posted in the accounting books. (DPOSTED)..
</summary>
<remarks>Data-source is 'CASH_MOV.DPOSTED'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.AgreementCode">
<summary>
Discount or Agreement Code. (NCOD_AGREE)..
</summary>
<remarks>Data-source is 'CASH_MOV.NCOD_AGREE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.PaymentMethod">
<summary>
Code of the payment method of the money received. (NINPUTCHANNEL)..
</summary>
<remarks>Data-source is 'CASH_MOV.NINPUTCHANNEL'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.ValueDate">
<summary>
Value date to obtain the exchange factor. (DVALDATE)..
</summary>
<remarks>Data-source is 'CASH_MOV.DVALDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.ReDeposit">
<summary>
Number of the new deposit (Redeposit) (SR_DEPNUM)..
</summary>
<remarks>Data-source is 'CASH_MOV.SR_DEPNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.OriginalCurrency">
<summary>
Code of the original currency. (NORI_CURR)..
</summary>
<remarks>Data-source is 'CASH_MOV.NORI_CURR'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.AmountInOriginalCurrency">
<summary>
Amount expressed in the original currency. (NORI_AMOUNT)..
</summary>
<remarks>Data-source is 'CASH_MOV.NORI_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.Folio">
<summary>
Folio number of document of support. (NSUPPORT_ID)..
</summary>
<remarks>Data-source is 'CASH_MOV.NSUPPORT_ID'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.SupportingDocument">
<summary>
Type of supporting document. (NTYPESUPPORT)..
</summary>
<remarks>Data-source is 'CASH_MOV.NTYPESUPPORT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.dCollection">
<summary>
.
</summary>
<remarks>Data-source is 'CASH_MOV.DCOLLECTION'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.CheckLastStatus">
<summary>
Last status of the check. (NCHEQUE_STAT)..
</summary>
<remarks>Data-source is 'CASH_MOV.NCHEQUE_STAT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.DepositID">
<summary>
ID number of the deposit made in the cash register. (NCASH_ID)..
</summary>
<remarks>Data-source is 'CASH_MOV.NCASH_ID'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.Interest">
<summary>
Amount of financial interest included in the check. (NFIN_INT)..
</summary>
<remarks>Data-source is 'CASH_MOV.NFIN_INT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'CASH_MOV.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'CASH_MOV.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.Bank">
<summary>
Code of the bank included in the agreement. (NBANK_AGREE)..
</summary>
<remarks>Data-source is 'CASH_MOV.NBANK_AGREE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.ApplicationNumber">
<summary>
Application number. (NPROPONUM)..
</summary>
<remarks>Data-source is 'CASH_MOV.NPROPONUM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.CollectionNotice">
<summary>
Number of the collection notice which was used to collect the installment. (NBULLETINS)..
</summary>
<remarks>Data-source is 'CASH_MOV.NBULLETINS'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.ClaimCode">
<summary>
Code of The Claim Case or Claimant. (NCASE_NUM)..
</summary>
<remarks>Data-source is 'CASH_MOV.NCASE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.ClaimType">
<summary>
Claim Type. (NDEMAN_TYPE)..
</summary>
<remarks>Data-source is 'CASH_MOV.NDEMAN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.ConsecutiveNumber">
<summary>
Record Identifier (NID)..
</summary>
<remarks>Data-source is 'CASH_MOV.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.NumberIDOfTheStatementOfCollectedPremiums">
<summary>
Number of the schedule in which the entry was reused (NBORDERUSED)..
</summary>
<remarks>Data-source is 'CASH_MOV.NBORDERUSED'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.AmountWithDecimals">
<summary>
Amount with decimals (NAMOUNTDEC)..
</summary>
<remarks>Data-source is 'CASH_MOV.NAMOUNTDEC'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.ProportionAppliedCollections">
<summary>
Proportion applied to collections (NAPPLICPROPORTION)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CASH_MOV.NAPPLICPROPORTION'.</remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CashEntry._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashEntry.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashEntry.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashEntry.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashEntry.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashEntry.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashEntry.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashEntry.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashEntry.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashEntry.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashEntry.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashEntry.Compare(InMotionGIT.Collecting.Entity.Contracts.CashEntry,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CashEntryItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashEntry.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashEntry.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashEntry.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashEntry.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.ConceptDescription">
 <summary>
 Concept of the entry of money.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE22'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.CreditCardTypeDescription">
 <summary>
 Type of the credit card.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE183'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.BankInternalCodeDescription">
 <summary>
 Internal code of the banking institution or the savings and lending institution.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.AccountingLineOfBusinessDescription">
 <summary>
 Code of the accounting line of business.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE75'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.CashBillTypeDescription">
 <summary>
 Type of cash bill document.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE78'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.TypeOfCurrentAccountDescription">
 <summary>
 Type of current account.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE400'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.CheckLocationDescription">
 <summary>
 Code of the location of the bank issuing the check, for availability purposes.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5553'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.InsuranceAreaDescription">
 <summary>
 Insurance area (Life or P&#38;C).
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5001'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.PaymentMethodDescription">
 <summary>
 Code of the payment method of the money received.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5554'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.SupportingDocumentDescription">
 <summary>
 Type of supporting document.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5570'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.CheckLastStatusDescription">
 <summary>
 Last status of the check.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5576'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntry.BankDescription">
 <summary>
 Code of the bank included in the agreement.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7'.
 </remarks>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.CashEntryCollection">
 <summary>
 Collection for CashEntry class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashEntryCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashEntryCollection.AddCashEntry">
 <summary>
 Add an instance of class 'CashEntry' in the CashEntryCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashEntryCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.CashEntryCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CashEntryCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashEntryCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CashEntryCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation">
 <summary>
 General information of charging relations.
 </summary>
<remarks>Data-source is 'COLFORMREF'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.CreateNewChargeRelation">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._NumberIDOfTheStatementOfCollectedPremiums">
<summary>
Number of the collection schedule, or statement of collected premiums.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._OperationType">
<summary>
Operation Type
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._BankCode">
<summary>
Code of the bank.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._ProducerCode">
<summary>
Code of the producer.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._PaymentFormAmount">
<summary>
Amount of the payment form.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._CollectionDate">
<summary>
Date of the premium collection.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._BranchOffice">
<summary>
Code of the Branch Office
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._TypeOfCollectionForm">
<summary>
Type of collection schedule
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._PaymentDocumentStatus">
<summary>
Status of the payment document.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._WindowWithContentIndicator">
<summary>
It indicates that the window has content.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._AmendingUser">
<summary>
Code of the user amending the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._Cashier">
<summary>
Number of the cash register related to the entry.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._PaymentMethod">
<summary>
Code of the payment method of the money received.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._InsuranceArea">
<summary>
Insurance area (Life or P&#38;C).
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._Agreement">
<summary>
Agreement code.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._ValueDate">
<summary>
Value date to apply ??the exchange factor.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._AnnuitiesIndicator">
<summary>
It indicates whether this collection form includes annuities.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._DateSentToAnnuitiesSystem">
<summary>
Date when the premium collection deposit was sent to the annuities system.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._CollectionAgent">
<summary>
Code of the agent, person or organization in charge of collecting this premium.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._OriginOfCollectionForm">
<summary>
Origin of the collection schedule
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._CollectionDateByPayrollDeduction">
<summary>
Date of premium collection by payroll deduction
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._CollectionScheduleDescription">
<summary>
Description of the collection schedule
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation._MovementOrigin">
<summary>
Movement origin
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.NumberIDOfTheStatementOfCollectedPremiums">
<summary>
Number of the collection schedule, or statement of collected premiums. (NBORDEREAUX)..
</summary>
<remarks>Data-source is 'COLFORMREF.NBORDEREAUX'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.OperationType">
<summary>
Operation Type (STYPE)..
</summary>
<remarks>Data-source is 'COLFORMREF.STYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.BankCode">
<summary>
Code of the bank. (NBANK)..
</summary>
<remarks>Data-source is 'COLFORMREF.NBANK'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.ProducerCode">
<summary>
Code of the producer. (NINTERMED)..
</summary>
<remarks>Data-source is 'COLFORMREF.NINTERMED'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.PaymentFormAmount">
<summary>
Amount of the payment form. (NREL_AMOUN)..
</summary>
<remarks>Data-source is 'COLFORMREF.NREL_AMOUN'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'COLFORMREF.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'COLFORMREF.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.CollectionDate">
<summary>
Date of the premium collection. (DCOLLECT)..
</summary>
<remarks>Data-source is 'COLFORMREF.DCOLLECT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'COLFORMREF.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.BranchOffice">
<summary>
Code of the Branch Office (NOFFICE)..
</summary>
<remarks>Data-source is 'COLFORMREF.NOFFICE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'COLFORMREF.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'COLFORMREF.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'COLFORMREF.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.TypeOfCollectionForm">
<summary>
Type of collection schedule (SREL_TYPE)..
</summary>
<remarks>Data-source is 'COLFORMREF.SREL_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.PaymentDocumentStatus">
<summary>
Status of the payment document. (SSTATUS)..
</summary>
<remarks>Data-source is 'COLFORMREF.SSTATUS'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'COLFORMREF.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.WindowWithContentIndicator">
<summary>
It indicates that the window has content. (SCONWIN)..
</summary>
<remarks>Data-source is 'COLFORMREF.SCONWIN'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'COLFORMREF.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.AmendingUser">
<summary>
Code of the user amending the policy/certificate. (NUSER_AMEND)..
</summary>
<remarks>Data-source is 'COLFORMREF.NUSER_AMEND'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.Cashier">
<summary>
Number of the cash register related to the entry. (NCASHNUM)..
</summary>
<remarks>Data-source is 'COLFORMREF.NCASHNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.PaymentMethod">
<summary>
Code of the payment method of the money received. (NINPUTTYP)..
</summary>
<remarks>Data-source is 'COLFORMREF.NINPUTTYP'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.InsuranceArea">
<summary>
Insurance area (Life or P&#38;C). (NINSUR_AREA)..
</summary>
<remarks>Data-source is 'COLFORMREF.NINSUR_AREA'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.Agreement">
<summary>
Agreement code. (NAGREEMENT)..
</summary>
<remarks>Data-source is 'COLFORMREF.NAGREEMENT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.ValueDate">
<summary>
Value date to apply ??the exchange factor. (DVALUEDATE)..
</summary>
<remarks>Data-source is 'COLFORMREF.DVALUEDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.AnnuitiesIndicator">
<summary>
It indicates whether this collection form includes annuities. (SIND_ANNUITY)..
</summary>
<remarks>Data-source is 'COLFORMREF.SIND_ANNUITY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.DateSentToAnnuitiesSystem">
<summary>
Date when the premium collection deposit was sent to the annuities system. (DDATE_BENLAR)..
</summary>
<remarks>Data-source is 'COLFORMREF.DDATE_BENLAR'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.CollectionAgent">
<summary>
Code of the agent, person or organization in charge of collecting this premium. (NCOLLECTOR)..
</summary>
<remarks>Data-source is 'COLFORMREF.NCOLLECTOR'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.OriginOfCollectionForm">
<summary>
Origin of the collection schedule (SRELORIGI)..
</summary>
<remarks>Data-source is 'COLFORMREF.SRELORIGI'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.CollectionDateByPayrollDeduction">
<summary>
Date of premium collection by payroll deduction (DCOLLECTDATE)..
</summary>
<remarks>Data-source is 'COLFORMREF.DCOLLECTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.CollectionScheduleDescription">
<summary>
Description of the collection schedule (SDESCRIPT)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COLFORMREF.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.MovementOrigin">
<summary>
Movement origin (NMOVORIGIN)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COLFORMREF.NMOVORIGIN'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.Compare(InMotionGIT.Collecting.Entity.Contracts.ChargeRelation,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ChargeRelationItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.BankCodeDescription">
 <summary>
 Code of the bank.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.BranchOfficeDescription">
 <summary>
 Code of the Branch Office
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.TypeOfCollectionFormDescription">
 <summary>
 Type of collection schedule
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7502'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.PaymentMethodDescription">
 <summary>
 Code of the payment method of the money received.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5554'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelation.InsuranceAreaDescription">
 <summary>
 Insurance area (Life or P&#38;C).
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5001'.
 </remarks>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.ChargeRelationCollection">
 <summary>
 Collection for ChargeRelation class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ChargeRelationCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ChargeRelationCollection.AddChargeRelation">
 <summary>
 Add an instance of class 'ChargeRelation' in the ChargeRelationCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ChargeRelationCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.ChargeRelationCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ChargeRelationCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ChargeRelationCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ChargeRelationCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Check">
 <summary>
 Required checks and checks issued.
 </summary>
<remarks>Data-source is 'CHEQUES'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Check.CreateNewCheck">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Check.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._PaymentOrder">
<summary>
Number of the payment order.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._Check">
<summary>
Number identifying the check issued by the insurance company.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._Consecutive">
<summary>
Consecutive number identifying the payment order (it is used for instances of periodic payments).
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._Concept">
<summary>
Reason why the payment is requested.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._Amount">
<summary>
Amount of the payment requested.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._AccountingLineOfBusiness">
<summary>
Code of the accounting line of business.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._ClaimID">
<summary>
Number identifying the claim that originates the payment order.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._AccountingVoucher">
<summary>
Number of accounting voucher (internal).
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._AccountingInternalVoucher">
<summary>
Number of accounting voucher (internal).
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._DateOfPaymentRequest">
<summary>
Date when the payment was requested.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._ShortDescription">
<summary>
Short description of the reason why the payment is requested.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._IssueDate">
<summary>
Date when the policy/certificate is issued
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._AccountingAvailableDate">
<summary>
Date when the system makes available this entry for posting to the accounting books.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._CancellationCode">
<summary>
Code of the reason for cancelling the payment order.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._LoanPaymentFrequency">
<summary>
Frequency of loan payment.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._NumberOfPayments">
<summary>
Number of payments that will be issued under this payment order (periodical payments).
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._BillNumber">
<summary>
Number identifying the bill
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._PaymentOrderType">
<summary>
Type of the payment order.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._PaymentOrderStatus">
<summary>
Status of the payment order.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._StatusDate">
<summary>
Date when the payment order takes on the status specified.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._ClaimEntryNumber">
<summary>
Transaction number or entry number in the history of the claim that generated the payment order.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._RequestingUser">
<summary>
Code of the user requesting the payment order
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._ReconciliationYearAndMonth">
<summary>
Year and month of the bank reconciliation process.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._InternalCodeOfBankAccount">
<summary>
Internal code of the bank account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._Bordereaux">
<summary>
Number of the collection schedule, or statement of collected premiums.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._NoteID">
<summary>
Number of the note containing the comments related to the payment
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._TaxableAmount">
<summary>
Taxable amount of the payment order.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._nExent">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._TaxCode">
<summary>
Tax code of the payment order.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._TaxAmount">
<summary>
Tax amount of the payment order.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._BranchOfficeForDelivery">
<summary>
Code of the branch office where the client receives the payment.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._CashRegister">
<summary>
Number of the cash register related to the entry.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._InsuranceArea">
<summary>
Insurance area (Life or P&#38;C).
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._PaymentOrdersSchedule">
<summary>
Number of the schedule of payment orders.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._Company">
<summary>
Code of the company.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._PayeeClienID">
<summary>
Code of the client on whose name the order for payment will be issued.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._AmountInLocalCurrency">
<summary>
Amount of the payment order in local currency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._ProductCode">
<summary>
Code of the product of the policy.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._FileName">
<summary>
Name of the file where the accounting system was sent
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._DateOfAccountingInterface">
<summary>
Date when the record was sent to the external accounting system
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._SupportDocument">
<summary>
Type of support document.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._DocumentIDNumber">
<summary>
Document number related to the payment.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._TaxPercentage">
<summary>
Tax percentage of the payment order.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._OriginalCurrency">
<summary>
Code of the original currency of the payment order
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._PaymentCurrency">
<summary>
Currency used in the payment.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._AmountInOriginalCurrency">
<summary>
Amount of the payment order in original currency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._PostingDate">
<summary>
Date when the entry was posted in the accounting books.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._OfficeCode">
<summary>
Code of Office where the client receives the check.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._AgencyForDelivery">
<summary>
Code of the agency where the client has to pick up the generated payment (this code also identifies branch office and field office).
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._PaymentRelationNumber">
<summary>
Number payout ratio at which the check belongs.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._ApprovedPaymentRelationNumber">
<summary>
Number of relation of the orders of payment approved
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._ProcessedIndicator">
<summary>
Processed indicator
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._AccountHolder">
<summary>
Account holder
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._Bank">
<summary>
Bank associated with the account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._BankAccount">
<summary>
Bank account
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._IntermediaryLiquidation">
<summary>
Number of liquidation of intermediary. Only when the payment corresponds to the concept &#34;Payment Agents&#34;.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._ExchangeRateOfThePaymentOrder">
<summary>
Exchange rate of the payment order
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._ProducerCode">
<summary>
Code of the producer
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._ProviderCode">
<summary>
Code of the provider
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._ChequesRequestedAndChequesIssued">
<summary>
Cheques requested and cheques issued
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._STEFStatus">
<summary>
Delivery status STEF
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._DirectDebitType">
<summary>
Direct Debit Type.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._BankAgency">
<summary>
Bank Agency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._ReferenceNumber">
<summary>
Unique reference number for bank transfer
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._SABAACC">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._NEXPIRATION">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._NACC_TYPE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._STERM">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._CodSystemExternal">
<summary>
Code that identifies the record in an external system.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._CodConcepApproval">
<summary>
Code concept used to standardize external system
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._TaxpayerCode">
<summary>
Taxpayer code
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._CityCode">
<summary>
Code of the city
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._CodeEconomicActivities">
<summary>
Code of the economic activities
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._AmountICA">
<summary>
Amount ICA
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._AmountRetefuente">
<summary>
Amount Retefuente
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._AmountIVA">
<summary>
Amount IVA
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._DeliveryDateADM">
<summary>
Delivery Date Information - Payment Manager
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._IDShippingADM">
<summary>
ID Shipping Information - Payment Manager
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._RealAmountPay">
<summary>
Amount to pay less retentions
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.PaymentOrder">
<summary>
Number of the payment order. (NREQUEST_NU)..
</summary>
<remarks>Data-source is 'CHEQUES.NREQUEST_NU'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.Check">
<summary>
Number identifying the check issued by the insurance company. (SCHEQUE)..
</summary>
<remarks>Data-source is 'CHEQUES.SCHEQUE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.Consecutive">
<summary>
Consecutive number identifying the payment order (it is used for instances of periodic payments). (NCONSEC)..
</summary>
<remarks>Data-source is 'CHEQUES.NCONSEC'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.Concept">
<summary>
Reason why the payment is requested. (NCONCEPT)..
</summary>
<remarks>Data-source is 'CHEQUES.NCONCEPT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.Amount">
<summary>
Amount of the payment requested. (NAMOUNT)..
</summary>
<remarks>Data-source is 'CHEQUES.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'CHEQUES.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.AccountingLineOfBusiness">
<summary>
Code of the accounting line of business. (NBRANCH_LED)..
</summary>
<remarks>Data-source is 'CHEQUES.NBRANCH_LED'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.ClaimID">
<summary>
Number identifying the claim that originates the payment order. (NCLAIM)..
</summary>
<remarks>Data-source is 'CHEQUES.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CHEQUES.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.AccountingVoucher">
<summary>
Number of accounting voucher (internal). (NVOUCHER_LE)..
</summary>
<remarks>Data-source is 'CHEQUES.NVOUCHER_LE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.AccountingInternalVoucher">
<summary>
Number of accounting voucher (internal). (NVOUCHER)..
</summary>
<remarks>Data-source is 'CHEQUES.NVOUCHER'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.DateOfPaymentRequest">
<summary>
Date when the payment was requested. (DDAT_PROPOS)..
</summary>
<remarks>Data-source is 'CHEQUES.DDAT_PROPOS'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.ShortDescription">
<summary>
Short description of the reason why the payment is requested. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'CHEQUES.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.IssueDate">
<summary>
Date when the policy/certificate is issued (DISSUE_DAT)..
</summary>
<remarks>Data-source is 'CHEQUES.DISSUE_DAT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.AccountingAvailableDate">
<summary>
Date when the system makes available this entry for posting to the accounting books. (DLEDGER_DAT)..
</summary>
<remarks>Data-source is 'CHEQUES.DLEDGER_DAT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.CancellationCode">
<summary>
Code of the reason for cancelling the payment order. (NNULLCODE)..
</summary>
<remarks>Data-source is 'CHEQUES.NNULLCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'CHEQUES.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.LoanPaymentFrequency">
<summary>
Frequency of loan payment. (SPAY_FREQ)..
</summary>
<remarks>Data-source is 'CHEQUES.SPAY_FREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.NumberOfPayments">
<summary>
Number of payments that will be issued under this payment order (periodical payments). (NQ_PAYS)..
</summary>
<remarks>Data-source is 'CHEQUES.NQ_PAYS'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.BillNumber">
<summary>
Number identifying the bill (NRECEIPT)..
</summary>
<remarks>Data-source is 'CHEQUES.NRECEIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.PaymentOrderType">
<summary>
Type of the payment order. (SREQUEST_TY)..
</summary>
<remarks>Data-source is 'CHEQUES.SREQUEST_TY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.PaymentOrderStatus">
<summary>
Status of the payment order. (NSTA_CHEQUE)..
</summary>
<remarks>Data-source is 'CHEQUES.NSTA_CHEQUE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.StatusDate">
<summary>
Date when the payment order takes on the status specified. (DSTAT_DATE)..
</summary>
<remarks>Data-source is 'CHEQUES.DSTAT_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.ClaimEntryNumber">
<summary>
Transaction number or entry number in the history of the claim that generated the payment order. (NTRANSAC)..
</summary>
<remarks>Data-source is 'CHEQUES.NTRANSAC'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.RequestingUser">
<summary>
Code of the user requesting the payment order (NUSER_SOL)..
</summary>
<remarks>Data-source is 'CHEQUES.NUSER_SOL'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CHEQUES.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.ReconciliationYearAndMonth">
<summary>
Year and month of the bank reconciliation process. (NYEAR_MONTH)..
</summary>
<remarks>Data-source is 'CHEQUES.NYEAR_MONTH'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.InternalCodeOfBankAccount">
<summary>
Internal code of the bank account. (NACC_BANK)..
</summary>
<remarks>Data-source is 'CHEQUES.NACC_BANK'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.Bordereaux">
<summary>
Number of the collection schedule, or statement of collected premiums. (NBORDEREAUX)..
</summary>
<remarks>Data-source is 'CHEQUES.NBORDEREAUX'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.NoteID">
<summary>
Number of the note containing the comments related to the payment (NNOTENUM)..
</summary>
<remarks>Data-source is 'CHEQUES.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.TaxableAmount">
<summary>
Taxable amount of the payment order. (NAFECT)..
</summary>
<remarks>Data-source is 'CHEQUES.NAFECT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.nExent">
<summary>
.
</summary>
<remarks>Data-source is 'CHEQUES.NEXENT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.TaxCode">
<summary>
Tax code of the payment order. (NTAXCODE)..
</summary>
<remarks>Data-source is 'CHEQUES.NTAXCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.TaxAmount">
<summary>
Tax amount of the payment order. (NTAX_AMOUNT)..
</summary>
<remarks>Data-source is 'CHEQUES.NTAX_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.BranchOfficeForDelivery">
<summary>
Code of the branch office where the client receives the payment. (NOFFICE)..
</summary>
<remarks>Data-source is 'CHEQUES.NOFFICE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.CashRegister">
<summary>
Number of the cash register related to the entry. (NCASHNUM)..
</summary>
<remarks>Data-source is 'CHEQUES.NCASHNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.InsuranceArea">
<summary>
Insurance area (Life or P&#38;C). (NINSUR_AREA)..
</summary>
<remarks>Data-source is 'CHEQUES.NINSUR_AREA'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.PaymentOrdersSchedule">
<summary>
Number of the schedule of payment orders. (NPAYORDBORD)..
</summary>
<remarks>Data-source is 'CHEQUES.NPAYORDBORD'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.Company">
<summary>
Code of the company. (NCOMPANY)..
</summary>
<remarks>Data-source is 'CHEQUES.NCOMPANY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.PayeeClienID">
<summary>
Code of the client on whose name the order for payment will be issued. (SINTER_PAY)..
</summary>
<remarks>Data-source is 'CHEQUES.SINTER_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.AmountInLocalCurrency">
<summary>
Amount of the payment order in local currency. (NAMOUNT_LOCAL)..
</summary>
<remarks>Data-source is 'CHEQUES.NAMOUNT_LOCAL'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'CHEQUES.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.ProductCode">
<summary>
Code of the product of the policy. (NPRODUCT)..
</summary>
<remarks>Data-source is 'CHEQUES.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'CHEQUES.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.FileName">
<summary>
Name of the file where the accounting system was sent (SFILE_FIN700)..
</summary>
<remarks>Data-source is 'CHEQUES.SFILE_FIN700'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.DateOfAccountingInterface">
<summary>
Date when the record was sent to the external accounting system (DDATE_FIN700)..
</summary>
<remarks>Data-source is 'CHEQUES.DDATE_FIN700'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.SupportDocument">
<summary>
Type of support document. (NTYPESUPPORT)..
</summary>
<remarks>Data-source is 'CHEQUES.NTYPESUPPORT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.DocumentIDNumber">
<summary>
Document number related to the payment. (NDOCSUPPORT)..
</summary>
<remarks>Data-source is 'CHEQUES.NDOCSUPPORT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.TaxPercentage">
<summary>
Tax percentage of the payment order. (NTAX_PERCENT)..
</summary>
<remarks>Data-source is 'CHEQUES.NTAX_PERCENT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.OriginalCurrency">
<summary>
Code of the original currency of the payment order (NCURRENCYORI)..
</summary>
<remarks>Data-source is 'CHEQUES.NCURRENCYORI'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.PaymentCurrency">
<summary>
Currency used in the payment. (NCURRENCYPAY)..
</summary>
<remarks>Data-source is 'CHEQUES.NCURRENCYPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.AmountInOriginalCurrency">
<summary>
Amount of the payment order in original currency. (NAMOUNTPAY)..
</summary>
<remarks>Data-source is 'CHEQUES.NAMOUNTPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.PostingDate">
<summary>
Date when the entry was posted in the accounting books. (DPOSTED)..
</summary>
<remarks>Data-source is 'CHEQUES.DPOSTED'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.OfficeCode">
<summary>
Code of Office where the client receives the check. (NOFFICEAGEN)..
</summary>
<remarks>Data-source is 'CHEQUES.NOFFICEAGEN'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.AgencyForDelivery">
<summary>
Code of the agency where the client has to pick up the generated payment (this code also identifies branch office and field office). (NAGENCY)..
</summary>
<remarks>Data-source is 'CHEQUES.NAGENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.PaymentRelationNumber">
<summary>
Number payout ratio at which the check belongs. (NORDPAY_REL)..
</summary>
<remarks>Data-source is 'CHEQUES.NORDPAY_REL'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.ApprovedPaymentRelationNumber">
<summary>
Number of relation of the orders of payment approved (NNUM_RELPAY)..
</summary>
<remarks>Data-source is 'CHEQUES.NNUM_RELPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.ProcessedIndicator">
<summary>
Processed indicator (SINDPROCES)..
</summary>
<remarks>Data-source is 'CHEQUES.SINDPROCES'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.AccountHolder">
<summary>
Account holder (SACCOUNTHOLDER)..
</summary>
<remarks>Data-source is 'CHEQUES.SACCOUNTHOLDER'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.Bank">
<summary>
Bank associated with the account. (NBANKEXT)..
</summary>
<remarks>Data-source is 'CHEQUES.NBANKEXT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.BankAccount">
<summary>
Bank account (SBANKACCOUNT)..
</summary>
<remarks>Data-source is 'CHEQUES.SBANKACCOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.IntermediaryLiquidation">
<summary>
Number of liquidation of intermediary. Only when the payment corresponds to the concept &#34;Payment Agents&#34;. (NPAY_COMM)..
</summary>
<remarks>Data-source is 'CHEQUES.NPAY_COMM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.ExchangeRateOfThePaymentOrder">
<summary>
Exchange rate of the payment order (NEXCHANGE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CHEQUES.NEXCHANGE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.ProducerCode">
<summary>
Code of the producer (NINTERMED)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CHEQUES.NINTERMED'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.ProviderCode">
<summary>
Code of the provider (NPROVIDER)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CHEQUES.NPROVIDER'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.ChequesRequestedAndChequesIssued">
<summary>
Cheques requested and cheques issued (SESREQUEST)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CHEQUES.SESREQUEST'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.STEFStatus">
<summary>
Delivery status STEF (NSTAT_TEF)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CHEQUES.NSTAT_TEF'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.DirectDebitType">
<summary>
Direct Debit Type. (STYP_DIRDEB)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CHEQUES.STYP_DIRDEB'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.BankAgency">
<summary>
Bank Agency. (NBK_AGENCY)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CHEQUES.NBK_AGENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.ReferenceNumber">
<summary>
Unique reference number for bank transfer (NBANK_REFERENCE)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CHEQUES.NBANK_REFERENCE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.SABAACC">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CHEQUES.SABAACC'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.NEXPIRATION">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CHEQUES.NEXPIRATION'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.NACC_TYPE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CHEQUES.NACC_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.STERM">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CHEQUES.STERM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.CodSystemExternal">
<summary>
Code that identifies the record in an external system. (NID_EXTERNALSYSTEM)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CHEQUES.NID_EXTERNALSYSTEM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.CodConcepApproval">
<summary>
Code concept used to standardize external system (NEXTERNAL_CONCEPT)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CHEQUES.NEXTERNAL_CONCEPT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.TaxpayerCode">
<summary>
Taxpayer code (NCONTRIBUTOR)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CHEQUES.NCONTRIBUTOR'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.CityCode">
<summary>
Code of the city (NCITY)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CHEQUES.NCITY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.CodeEconomicActivities">
<summary>
Code of the economic activities (NECONOMIACTIVITY)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CHEQUES.NECONOMIACTIVITY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.AmountICA">
<summary>
Amount ICA (NAMOUNT_ICA)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CHEQUES.NAMOUNT_ICA'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.AmountRetefuente">
<summary>
Amount Retefuente (NAMOUNT_FUENTE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CHEQUES.NAMOUNT_FUENTE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.AmountIVA">
<summary>
Amount IVA (NAMOUNT_IVA)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CHEQUES.NAMOUNT_IVA'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.DeliveryDateADM">
<summary>
Delivery Date Information - Payment Manager (DSENDADMONPAGE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CHEQUES.DSENDADMONPAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.IDShippingADM">
<summary>
ID Shipping Information - Payment Manager (SKEYSENDADMONPAGE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CHEQUES.SKEYSENDADMONPAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.RealAmountPay">
<summary>
Amount to pay less retentions (NAMOUNT_REAL)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CHEQUES.NAMOUNT_REAL'.</remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Check._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Check.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Check.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Check.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Check.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Check.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Check.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Check.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Check.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Check.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Check.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Check.Compare(InMotionGIT.Collecting.Entity.Contracts.Check,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CheckItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Check.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Check.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Check.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Check.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.AccountingLineOfBusinessDescription">
 <summary>
 Code of the accounting line of business.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE75'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.CancellationCodeDescription">
 <summary>
 Code of the reason for cancelling the payment order.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE295'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.PaymentOrderTypeDescription">
 <summary>
 Type of the payment order.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE193'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.PaymentOrderStatusDescription">
 <summary>
 Status of the payment order.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE187'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.BranchOfficeForDeliveryDescription">
 <summary>
 Code of the branch office where the client receives the payment.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.InsuranceAreaDescription">
 <summary>
 Insurance area (Life or P&#38;C).
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5001'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.SupportDocumentDescription">
 <summary>
 Type of support document.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5570'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Check.OfficeCodeDescription">
 <summary>
 Code of Office where the client receives the check.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5556'.
 </remarks>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.CheckCollection">
 <summary>
 Collection for Check class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CheckCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CheckCollection.AddCheck">
 <summary>
 Add an instance of class 'Check' in the CheckCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CheckCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.CheckCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CheckCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CheckCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CheckCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.Checkbook">
 <summary>
 Checkbooks of current accounts.
 </summary>
<remarks>Data-source is 'CHEQ_BOOK'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Checkbook.CreateNewCheckbook">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Checkbook.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Checkbook._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Checkbook._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Checkbook._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Checkbook._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Checkbook._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Checkbook._InternalCodeOfBankAccount">
<summary>
Internal code of the bank account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Checkbook._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Checkbook._Check">
<summary>
Number identifying the check issued by the insurance company.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Checkbook._LastCheck">
<summary>
Number of the last check in the checkbook.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Checkbook._FirstCheck">
<summary>
Number of first check in checkbook.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Checkbook._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Checkbook._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Checkbook._NumberOfDamagedChecks">
<summary>
Number of checks damaged.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Checkbook._NumberOfCancelledChecks">
<summary>
Number of checks cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Checkbook._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.Checkbook._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Checkbook.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Checkbook.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Checkbook.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Checkbook.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Checkbook.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Checkbook.InternalCodeOfBankAccount">
<summary>
Internal code of the bank account. (NACC_BANK)..
</summary>
<remarks>Data-source is 'CHEQ_BOOK.NACC_BANK'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Checkbook.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CHEQ_BOOK.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Checkbook.Check">
<summary>
Number identifying the check issued by the insurance company. (SCHEQUE_END)..
</summary>
<remarks>Data-source is 'CHEQ_BOOK.SCHEQUE_END'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Checkbook.LastCheck">
<summary>
Number of the last check in the checkbook. (SCHEQUE_LAS)..
</summary>
<remarks>Data-source is 'CHEQ_BOOK.SCHEQUE_LAS'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Checkbook.FirstCheck">
<summary>
Number of first check in checkbook. (SCHEQUE_STA)..
</summary>
<remarks>Data-source is 'CHEQ_BOOK.SCHEQUE_STA'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Checkbook.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CHEQ_BOOK.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Checkbook.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'CHEQ_BOOK.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Checkbook.NumberOfDamagedChecks">
<summary>
Number of checks damaged. (NQ_CHE_DAMA)..
</summary>
<remarks>Data-source is 'CHEQ_BOOK.NQ_CHE_DAMA'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Checkbook.NumberOfCancelledChecks">
<summary>
Number of checks cancelled. (NQ_CHE_NULL)..
</summary>
<remarks>Data-source is 'CHEQ_BOOK.NQ_CHE_NULL'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.Checkbook.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CHEQ_BOOK.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Checkbook.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Checkbook.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Checkbook.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Checkbook.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Checkbook.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Checkbook.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Checkbook.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Checkbook.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Checkbook.Compare(InMotionGIT.Collecting.Entity.Contracts.Checkbook,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CheckbookItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Checkbook.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Checkbook.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Checkbook.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.Checkbook.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.CheckbookCollection">
 <summary>
 Collection for Checkbook class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CheckbookCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CheckbookCollection.AddCheckbook">
 <summary>
 Add an instance of class 'Checkbook' in the CheckbookCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CheckbookCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.CheckbookCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CheckbookCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CheckbookCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CheckbookCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration">
 <summary>
 Collection table generation.
 </summary>
<remarks>Data-source is 'COLLECT_GEN'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.CreateNewCollectionGeneration">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration._PaymentMethod">
<summary>
Code of the payment method.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration._CollectionDate">
<summary>
Date of the premium collection.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration._CollectionNotice">
<summary>
Number of the collection notice
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration._BankCode">
<summary>
Code of the bank for the premium collection.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration._Amount">
<summary>
Amount of the collection notice
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration._TypeOfProcess">
<summary>
Type of process performed.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration._ValueDate">
<summary>
Value date
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration._DocumentNumber">
<summary>
Number of the document
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.PaymentMethod">
<summary>
Code of the payment method. (NWAY_PAY)..
</summary>
<remarks>Data-source is 'COLLECT_GEN.NWAY_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.CollectionDate">
<summary>
Date of the premium collection. (DCOLLEC_DATE)..
</summary>
<remarks>Data-source is 'COLLECT_GEN.DCOLLEC_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'COLLECT_GEN.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'COLLECT_GEN.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'COLLECT_GEN.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'COLLECT_GEN.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.CollectionNotice">
<summary>
Number of the collection notice (NBULLETINS)..
</summary>
<remarks>Data-source is 'COLLECT_GEN.NBULLETINS'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.BankCode">
<summary>
Code of the bank for the premium collection. (NBANK)..
</summary>
<remarks>Data-source is 'COLLECT_GEN.NBANK'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'COLLECT_GEN.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.Amount">
<summary>
Amount of the collection notice (NAMOUNT)..
</summary>
<remarks>Data-source is 'COLLECT_GEN.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.TypeOfProcess">
<summary>
Type of process performed. (SPROCESS)..
</summary>
<remarks>Data-source is 'COLLECT_GEN.SPROCESS'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'COLLECT_GEN.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'COLLECT_GEN.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.ValueDate">
<summary>
Value date (DVALUEDATE)..
</summary>
<remarks>Data-source is 'COLLECT_GEN.DVALUEDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.DocumentNumber">
<summary>
Number of the document (SDOCUMENT)..
</summary>
<remarks>Data-source is 'COLLECT_GEN.SDOCUMENT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'COLLECT_GEN.NCERTIF'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.Compare(InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CollectionGenerationItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.PaymentMethodDescription">
 <summary>
 Code of the payment method.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5002'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionGeneration.BankCodeDescription">
 <summary>
 Code of the bank for the premium collection.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7'.
 </remarks>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.CollectionGenerationCollection">
 <summary>
 Collection for CollectionGeneration class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionGenerationCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionGenerationCollection.AddCollectionGeneration">
 <summary>
 Add an instance of class 'CollectionGeneration' in the CollectionGenerationCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionGenerationCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.CollectionGenerationCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionGenerationCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionGenerationCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionGenerationCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice">
 <summary>
 Collection notice.
 </summary>
<remarks>Data-source is 'BULLETINS'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.CreateNewCollectionNotice">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._CollectionNotice">
<summary>
Number of the collection notice
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._InsuranceArea">
<summary>
Insurance area (Life or P&#38;C).
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._DueDate">
<summary>
Due date of collection notice.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._PaymentMethod">
<summary>
Code of the payment method.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._Agreement">
<summary>
Discount or Agreement Code.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._Amount">
<summary>
Total amount of the collection notice
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._Status">
<summary>
Status of the collection notice.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._CauseOfCancellation">
<summary>
Annulment cause of the collection notice.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._Schedule">
<summary>
Number of the collection schedule, or statement of collected premiums.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._StatusDate">
<summary>
Date when the collection notice took the current status.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._nRejectCause">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._BankInternalCode">
<summary>
Internal code of the banking institution or the savings and lending institution.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._PaymentDate">
<summary>
Payment date of the bill
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._ExchangeRate">
<summary>
Exchange rate of the entry to the local currency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._PaymentCurrency">
<summary>
Currency in which the payment was made.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._KeyToAddressRecord">
<summary>
Access Key of The Address Record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._BankAccount">
<summary>
Bank account number.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._SentToDirectDebitIndicator">
<summary>
Indicator of sent to direct debit collection.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._DateSentToCollection">
<summary>
Date when the collection schedule was sent for collection
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._LatestPaymentDate">
<summary>
Latest payment date of the collection notice
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._NumberCollectionLot">
<summary>
Number of the collection lot
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._CodeofEmpathyGroup">
<summary>
Code of Empathy Group
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._CommerceNumber">
<summary>
Number of the commerce
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._PreliminarLot">
<summary>
Number of the preliminar lot
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._ReportingDate">
<summary>
Reporting date of the collection
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._OperationType">
<summary>
Type of operation to sending to the collection
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._CodeRejectCollectEntity">
<summary>
Code of reject of the collection entity.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._CodeTypeGeneration">
<summary>
Code of type of the generation of collection.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice._BulletinDetails">
<summary>
Billing notice details.
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.CollectionNotice">
<summary>
Number of the collection notice (NBULLETINS)..
</summary>
<remarks>Data-source is 'BULLETINS.NBULLETINS'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'BULLETINS.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.InsuranceArea">
<summary>
Insurance area (Life or P&#38;C). (NINSUR_AREA)..
</summary>
<remarks>Data-source is 'BULLETINS.NINSUR_AREA'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.DueDate">
<summary>
Due date of collection notice. (DLIMIT_PAY)..
</summary>
<remarks>Data-source is 'BULLETINS.DLIMIT_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'BULLETINS.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.PaymentMethod">
<summary>
Code of the payment method. (NWAY_PAY)..
</summary>
<remarks>Data-source is 'BULLETINS.NWAY_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.Agreement">
<summary>
Discount or Agreement Code. (NCOD_AGREE)..
</summary>
<remarks>Data-source is 'BULLETINS.NCOD_AGREE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.Amount">
<summary>
Total amount of the collection notice (NAMOUNT)..
</summary>
<remarks>Data-source is 'BULLETINS.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.Status">
<summary>
Status of the collection notice. (NSTATUS)..
</summary>
<remarks>Data-source is 'BULLETINS.NSTATUS'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.CauseOfCancellation">
<summary>
Annulment cause of the collection notice. (NCANCEL_COD)..
</summary>
<remarks>Data-source is 'BULLETINS.NCANCEL_COD'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.Schedule">
<summary>
Number of the collection schedule, or statement of collected premiums. (NBORDEREAUX)..
</summary>
<remarks>Data-source is 'BULLETINS.NBORDEREAUX'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.StatusDate">
<summary>
Date when the collection notice took the current status. (DSTATDATE)..
</summary>
<remarks>Data-source is 'BULLETINS.DSTATDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.nRejectCause">
<summary>
.
</summary>
<remarks>Data-source is 'BULLETINS.NREJECTCAUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.BankInternalCode">
<summary>
Internal code of the banking institution or the savings and lending institution. (NBANK_CODE)..
</summary>
<remarks>Data-source is 'BULLETINS.NBANK_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.PaymentDate">
<summary>
Payment date of the bill (DPAYDATE)..
</summary>
<remarks>Data-source is 'BULLETINS.DPAYDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.ExchangeRate">
<summary>
Exchange rate of the entry to the local currency. (NEXCHANGE)..
</summary>
<remarks>Data-source is 'BULLETINS.NEXCHANGE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.PaymentCurrency">
<summary>
Currency in which the payment was made. (NCURRPAY)..
</summary>
<remarks>Data-source is 'BULLETINS.NCURRPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'BULLETINS.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'BULLETINS.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.KeyToAddressRecord">
<summary>
Access Key of The Address Record. (SKEYADDRESS)..
</summary>
<remarks>Data-source is 'BULLETINS.SKEYADDRESS'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.BankAccount">
<summary>
Bank account number. (SDOCUMENT)..
</summary>
<remarks>Data-source is 'BULLETINS.SDOCUMENT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.SentToDirectDebitIndicator">
<summary>
Indicator of sent to direct debit collection. (SIND_DOMIC)..
</summary>
<remarks>Data-source is 'BULLETINS.SIND_DOMIC'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.DateSentToCollection">
<summary>
Date when the collection schedule was sent for collection (DSEND_DOMIC)..
</summary>
<remarks>Data-source is 'BULLETINS.DSEND_DOMIC'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.LatestPaymentDate">
<summary>
Latest payment date of the collection notice (NLIMIT_PAY_DD)..
</summary>
<remarks>Data-source is 'BULLETINS.NLIMIT_PAY_DD'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.NumberCollectionLot">
<summary>
Number of the collection lot (NCOLLECTIONLOT)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BULLETINS.NCOLLECTIONLOT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.CodeofEmpathyGroup">
<summary>
Code of Empathy Group (NEMPATHYGROUP)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BULLETINS.NEMPATHYGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.CommerceNumber">
<summary>
Number of the commerce (NCOMMERNUM)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BULLETINS.NCOMMERNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.PreliminarLot">
<summary>
Number of the preliminar lot (NPRELIMINARLOT)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BULLETINS.NPRELIMINARLOT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.ReportingDate">
<summary>
Reporting date of the collection (DREPORTDATE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BULLETINS.DREPORTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.OperationType">
<summary>
Type of operation to sending to the collection (NOPERATIONTYPE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BULLETINS.NOPERATIONTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.CodeRejectCollectEntity">
<summary>
Code of reject of the collection entity. (SREJECT_AGREE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BULLETINS.SREJECT_AGREE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.CodeTypeGeneration">
<summary>
Code of type of the generation of collection. (NOPTGENERA)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BULLETINS.NOPTGENERA'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.NewBulletinDetailsInstance">
<summary>
Initializes the 'BulletinDetails' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.NewBulletinDetailItem(System.Boolean)">
<summary>
Add a new item to the collection of 'BulletinDetails', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'BulletinDetail' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.BulletinDetails">
<summary>
Billing notice details. collection.
</summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.Compare(InMotionGIT.Collecting.Entity.Contracts.CollectionNotice,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CollectionNoticeItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.InsuranceAreaDescription">
 <summary>
 Insurance area (Life or P&#38;C).
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5001'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.PaymentMethodDescription">
 <summary>
 Code of the payment method.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5002'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.StatusDescription">
 <summary>
 Status of the collection notice.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5004'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNotice.CauseOfCancellationDescription">
 <summary>
 Annulment cause of the collection notice.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5005'.
 </remarks>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.CollectionNoticeCollection">
 <summary>
 Collection for CollectionNotice class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionNoticeCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionNoticeCollection.AddCollectionNotice">
 <summary>
 Add an instance of class 'CollectionNotice' in the CollectionNoticeCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionNoticeCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.CollectionNoticeCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CollectionNoticeCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionNoticeCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CollectionNoticeCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount">
 <summary>
 current accounts associated.
 </summary>
<remarks>Data-source is 'CURR_ACC'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.CreateNewCurrentAccount">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._TypeOfCurrentAccount">
<summary>
Type of current account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._BusinessType">
<summary>
Type of business
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._Balance">
<summary>
Balance of the current account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._Credit">
<summary>
Amount of the credits made in the current account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._Debit">
<summary>
Debit amount of the account in process.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._AccountingCompany">
<summary>
Code of the accounting company.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._LedgerAccount">
<summary>
Code of the ledger account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._Company">
<summary>
Code of the company.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._SubsidiaryAccount">
<summary>
Subsidiary code complementing the account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._InsuranceArea">
<summary>
Insurance area (Life or P&#38;C).
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount._EntryCurrentAccounts">
<summary>
Entries of a current account.
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.TypeOfCurrentAccount">
<summary>
Type of current account. (NTYP_ACCO)..
</summary>
<remarks>Data-source is 'CURR_ACC.NTYP_ACCO'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.BusinessType">
<summary>
Type of business (STYPE_ACC)..
</summary>
<remarks>Data-source is 'CURR_ACC.STYPE_ACC'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'CURR_ACC.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'CURR_ACC.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.Balance">
<summary>
Balance of the current account. (NBALANCE)..
</summary>
<remarks>Data-source is 'CURR_ACC.NBALANCE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.Credit">
<summary>
Amount of the credits made in the current account. (NCREDIT)..
</summary>
<remarks>Data-source is 'CURR_ACC.NCREDIT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.Debit">
<summary>
Debit amount of the account in process. (NDEBIT)..
</summary>
<remarks>Data-source is 'CURR_ACC.NDEBIT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CURR_ACC.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'CURR_ACC.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CURR_ACC.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CURR_ACC.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.AccountingCompany">
<summary>
Code of the accounting company. (NLED_COMPAN)..
</summary>
<remarks>Data-source is 'CURR_ACC.NLED_COMPAN'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.LedgerAccount">
<summary>
Code of the ledger account. (SACCOUNT)..
</summary>
<remarks>Data-source is 'CURR_ACC.SACCOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'CURR_ACC.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.Company">
<summary>
Code of the company. (NCOMPANY)..
</summary>
<remarks>Data-source is 'CURR_ACC.NCOMPANY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'CURR_ACC.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.SubsidiaryAccount">
<summary>
Subsidiary code complementing the account. (SAUX_ACCOUN)..
</summary>
<remarks>Data-source is 'CURR_ACC.SAUX_ACCOUN'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'CURR_ACC.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'CURR_ACC.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'CURR_ACC.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.InsuranceArea">
<summary>
Insurance area (Life or P&#38;C). (NINSUR_AREA)..
</summary>
<remarks>Data-source is 'CURR_ACC.NINSUR_AREA'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.NewEntryCurrentAccountsInstance">
<summary>
Initializes the 'EntryCurrentAccounts' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.NewEntryCurrentAccountItem(System.Boolean)">
<summary>
Add a new item to the collection of 'EntryCurrentAccounts', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'EntryCurrentAccount' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.EntryCurrentAccounts">
<summary>
Entries of a current account. collection.
</summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.Compare(InMotionGIT.Collecting.Entity.Contracts.CurrentAccount,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CurrentAccountItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.TypeOfCurrentAccountDescription">
 <summary>
 Type of current account.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE400'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccount.InsuranceAreaDescription">
 <summary>
 Insurance area (Life or P&#38;C).
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5001'.
 </remarks>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.CurrentAccountCollection">
 <summary>
 Collection for CurrentAccount class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CurrentAccountCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CurrentAccountCollection.AddCurrentAccount">
 <summary>
 Add an instance of class 'CurrentAccount' in the CurrentAccountCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CurrentAccountCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.CurrentAccountCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.CurrentAccountCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CurrentAccountCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.CurrentAccountCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail">
 <summary>
 Delinquent Certificat Detail
 </summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_DETAIL'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.CreateNewDelinquentCertificatDetail">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail._AgreementCode">
<summary>
Discount or Agreement Code.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail._PreliminarLotNumber">
<summary>
Preliminar Lot number
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail._DefinitiveLotNumber">
<summary>
Definitive Lot number
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail._TypeOfRecord">
<summary>
Type of Record
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail._CodeLineBusiness">
<summary>
Code of the line
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail._ProductCode">
<summary>
Code of the product
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail._NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail._CertificateNumber">
<summary>
Number identifying the certificate
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail._CreditCardNumber">
<summary>
Credit Card Number
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail._CurrencyCode">
<summary>
Code of the currency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail._CommerceNumber">
<summary>
Commerce number
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail._CodeOfStatus">
<summary>
Code of status
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail._CodeRejectCause">
<summary>
Code of the reject cause
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail._ResponseIndicator">
<summary>
Response indicator
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail._CodeAction">
<summary>
Code action
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail._DateSend">
<summary>
Date send
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail._ReceptionDate">
<summary>
Reception date
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail._RehabilitationDate">
<summary>
Rehabilitation date
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.AgreementCode">
<summary>
Discount or Agreement Code. (NCOD_AGREE)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_DETAIL.NCOD_AGREE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.PreliminarLotNumber">
<summary>
Preliminar Lot number (NPRELIMINARLOT)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_DETAIL.NPRELIMINARLOT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.DefinitiveLotNumber">
<summary>
Definitive Lot number (NLOTEDEFINITIVE)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_DETAIL.NLOTEDEFINITIVE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.TypeOfRecord">
<summary>
Type of Record (SCERTYPE)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_DETAIL.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.TypeOfRecordEnum">
<summary>
Type of Record
</summary>
<remarks>This property use a enumeration based on property 'TypeOfRecord'</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.TypeOfRecordEnumText">
<summary>
Type of Record
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.CodeLineBusiness">
<summary>
Code of the line (NBRANCH)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_DETAIL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.ProductCode">
<summary>
Code of the product (NPRODUCT)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_DETAIL.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_DETAIL.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.CertificateNumber">
<summary>
Number identifying the certificate (NCERTIF)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_DETAIL.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.CreditCardNumber">
<summary>
Credit Card Number (SCREDI_CARD)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_DETAIL.SCREDI_CARD'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.CurrencyCode">
<summary>
Code of the currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_DETAIL.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.CommerceNumber">
<summary>
Commerce number (NCOMMERNUM)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_DETAIL.NCOMMERNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.CodeOfStatus">
<summary>
Code of status (NSTATUS)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_DETAIL.NSTATUS'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.CodeRejectCause">
<summary>
Code of the reject cause (SREJECTCAUSE)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_DETAIL.SREJECTCAUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.ResponseIndicator">
<summary>
Response indicator (SRESPONSE)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_DETAIL.SRESPONSE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.CodeAction">
<summary>
Code action (SACTION)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_DETAIL.SACTION'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.DateSend">
<summary>
Date send (DDATESEND)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_DETAIL.DDATESEND'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.ReceptionDate">
<summary>
Reception date (DDATERECEIVED)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_DETAIL.DDATERECEIVED'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.RehabilitationDate">
<summary>
Rehabilitation date (DDATEREHABI)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_DETAIL.DDATEREHABI'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_DETAIL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_DETAIL.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.Compare(InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="DelinquentCertificatDetailItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.CurrencyCodeDescription">
 <summary>
 Code of the currency.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE11'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetail.CodeOfStatusDescription">
 <summary>
 Code of status
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6847' on the table 'TABLE6847'.
 </remarks>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetailCollection">
 <summary>
 Collection for DelinquentCertificatDetail class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetailCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetailCollection.AddDelinquentCertificatDetail">
 <summary>
 Add an instance of class 'DelinquentCertificatDetail' in the DelinquentCertificatDetailCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetailCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetailCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetailCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetailCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatDetailCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead">
 <summary>
 Delinquent Certificat Head
 </summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_HEAD'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.CreateNewDelinquentCertificatHead">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead._AgreementCode">
<summary>
Discount or Agreement Code.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead._PreliminarLotNumber">
<summary>
Preliminar Lot number
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead._DateFrom">
<summary>
Date from
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead._EndDate">
<summary>
End date
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead._DateCancell">
<summary>
Date when the record is cancelled
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.AgreementCode">
<summary>
Discount or Agreement Code. (NCOD_AGREE)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_HEAD.NCOD_AGREE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.PreliminarLotNumber">
<summary>
Preliminar Lot number (NPRELIMINARLOT)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_HEAD.NPRELIMINARLOT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.DateFrom">
<summary>
Date from (DDATE_INI)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_HEAD.DDATE_INI'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.EndDate">
<summary>
End date (DDATE_END)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_HEAD.DDATE_END'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.DateCancell">
<summary>
Date when the record is cancelled (DNULLDATE)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_HEAD.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_HEAD.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_HEAD.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.Compare(InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="DelinquentCertificatHeadItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHead.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadCollection">
 <summary>
 Collection for DelinquentCertificatHead class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadCollection.AddDelinquentCertificatHead">
 <summary>
 Add an instance of class 'DelinquentCertificatHead' in the DelinquentCertificatHeadCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot">
 <summary>
 Delinquent Certificat Head Lot
 </summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_HEAD_LOT'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.CreateNewDelinquentCertificatHeadLot">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot._AgreementCode">
<summary>
Discount or Agreement Code.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot._PreliminarLotNumber">
<summary>
Preliminar Lot number
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot._DefinitiveLotNumber">
<summary>
Definitive Lot number
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot._CommerceNumber">
<summary>
Commerce number
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot._CurrencyCode">
<summary>
Code of the currency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot._CodeOfStatus">
<summary>
Code of status
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot._DateSend">
<summary>
Date send
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot._ReceptionDate">
<summary>
Reception date
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.AgreementCode">
<summary>
Discount or Agreement Code. (NCOD_AGREE)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_HEAD_LOT.NCOD_AGREE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.PreliminarLotNumber">
<summary>
Preliminar Lot number (NPRELIMINARLOT)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_HEAD_LOT.NPRELIMINARLOT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.DefinitiveLotNumber">
<summary>
Definitive Lot number (NLOTEDEFINITIVE)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_HEAD_LOT.NLOTEDEFINITIVE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.CommerceNumber">
<summary>
Commerce number (NCOMMERNUM)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_HEAD_LOT.NCOMMERNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.CurrencyCode">
<summary>
Code of the currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_HEAD_LOT.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.CodeOfStatus">
<summary>
Code of status (NSTATUS)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_HEAD_LOT.NSTATUS'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.DateSend">
<summary>
Date send (DDATESEND)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_HEAD_LOT.DDATESEND'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.ReceptionDate">
<summary>
Reception date (DDATERECEIVED)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_HEAD_LOT.DDATERECEIVED'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_HEAD_LOT.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'DELINQUENT_CERTIFICAT_HEAD_LOT.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.Compare(InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="DelinquentCertificatHeadLotItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLot.CurrencyCodeDescription">
 <summary>
 Code of the currency.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE11'.
 </remarks>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLotCollection">
 <summary>
 Collection for DelinquentCertificatHeadLot class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLotCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLotCollection.AddDelinquentCertificatHeadLot">
 <summary>
 Add an instance of class 'DelinquentCertificatHeadLot' in the DelinquentCertificatHeadLotCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLotCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLotCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLotCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLotCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DelinquentCertificatHeadLotCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT">
 <summary>
 
 </summary>
<remarks>Data-source is 'DYNAMICS_TABLE_CERTIFICAT'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.CreateNewDYNAMICS_TABLE_CERTIFICAT">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT._PolicyNumber">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT._InterfaceCode">
<summary>
Interface Code
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT._FieldCode">
<summary>
Code of the field in the template interface.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT._ValueForColumnTypeVarchar">
<summary>
Value of the column of the DYNAMICS table for columns of char.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT._ValueForColumnTypeNumber">
<summary>
Value of the column of the DYNAMICS table for columns of number.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT._ValueForColumnTypeDate">
<summary>
Value of the column of the DYNAMICS table for columns of date.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT._UpdateTimeStamUpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT._AttributeCode">
<summary>
Particular data attribute code.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT._AttributeDescription">
<summary>
Particular Data Attribute Description.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'DYNAMICS_TABLE_CERTIFICAT.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'DYNAMICS_TABLE_CERTIFICAT.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'DYNAMICS_TABLE_CERTIFICAT.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.PolicyNumber">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'DYNAMICS_TABLE_CERTIFICAT.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'DYNAMICS_TABLE_CERTIFICAT.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.InterfaceCode">
<summary>
Interface Code (NSHEET)..
</summary>
<remarks>Data-source is 'DYNAMICS_TABLE_CERTIFICAT.NSHEET'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.FieldCode">
<summary>
Code of the field in the template interface. (NFIELD)..
</summary>
<remarks>Data-source is 'DYNAMICS_TABLE_CERTIFICAT.NFIELD'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'DYNAMICS_TABLE_CERTIFICAT.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'DYNAMICS_TABLE_CERTIFICAT.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.ValueForColumnTypeVarchar">
<summary>
Value of the column of the DYNAMICS table for columns of char. (SVALUE)..
</summary>
<remarks>Data-source is 'DYNAMICS_TABLE_CERTIFICAT.SVALUE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.ValueForColumnTypeNumber">
<summary>
Value of the column of the DYNAMICS table for columns of number. (NVALUE)..
</summary>
<remarks>Data-source is 'DYNAMICS_TABLE_CERTIFICAT.NVALUE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.ValueForColumnTypeDate">
<summary>
Value of the column of the DYNAMICS table for columns of date. (DVALUE)..
</summary>
<remarks>Data-source is 'DYNAMICS_TABLE_CERTIFICAT.DVALUE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'DYNAMICS_TABLE_CERTIFICAT.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.UpdateTimeStamUpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'DYNAMICS_TABLE_CERTIFICAT.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.AttributeCode">
<summary>
Particular data attribute code. (NDEFTYPE)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DYNAMICS_TABLE_CERTIFICAT.NDEFTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.AttributeDescription">
<summary>
Particular Data Attribute Description. (SDESCRIPT)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DYNAMICS_TABLE_CERTIFICAT.SDESCRIPT'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.Compare(InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="DYNAMICS_TABLE_CERTIFICATItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICAT.AttributeDescriptionDescription">
 <summary>
 Particular Data Attribute Description.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE6786'.
 </remarks>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICATCollection">
 <summary>
 Collection for DYNAMICS_TABLE_CERTIFICAT class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICATCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICATCollection.AddDYNAMICS_TABLE_CERTIFICAT">
 <summary>
 Add an instance of class 'DYNAMICS_TABLE_CERTIFICAT' in the DYNAMICS_TABLE_CERTIFICATCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICATCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICATCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICATCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICATCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.DYNAMICS_TABLE_CERTIFICATCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount">
 <summary>
 Entries of a current account.
 </summary>
<remarks>Data-source is 'MOVE_ACC'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.CreateNewEntryCurrentAccount">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._TypeOfCurrentAccount">
<summary>
Type of current account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._BusinessType">
<summary>
Type of business
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._TransactionDate">
<summary>
Effective date of the transaction.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._SequentialConsecutiveNumber">
<summary>
Consecutive number identifying the record as unique.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._ProducerCode">
<summary>
Code of the producer.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._Amount">
<summary>
Amount of the entry.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._BankCode">
<summary>
Code of the bank.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._Check">
<summary>
Number identifying the check related to the entry.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._Credit">
<summary>
Credit amount of the entry.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._Debit">
<summary>
Amount of the debit entry.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._Description">
<summary>
Description related to the entry.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._ManualEntryIndicator">
<summary>
Manual entry indicator.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._Installment">
<summary>
Number of the installment related to the bill payment agreement.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._BillNumber">
<summary>
Number identifying the bill
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._ClaimEntryNumber">
<summary>
Entry number related to a claim.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._TransactionNumber">
<summary>
Transaction generating the entry.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._TypeOfEntry">
<summary>
Type of current account entry.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._CheckType">
<summary>
Type of check.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._EntryType">
<summary>
Type of entries in the bill history.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._StateOrProvince">
<summary>
Code of the state or province.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._CommercialDocument">
<summary>
Number of the commercial document related to the entry.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._PaymentOrder">
<summary>
Number of the payment order.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._NumberIDOfTheStatementOfCollectedPremiums">
<summary>
Number of the collection schedule, or statement of collected premiums.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._ProcessIndicator">
<summary>
Processed by &#34;Zero Quotas Process&#34; record indicator.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._ApplicationID">
<summary>
Number of application.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._OriginalCurrency">
<summary>
Code of the original currency of the transaction.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._ExchangeRate">
<summary>
Exchange rate of the entry to local currency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._AuthorizedChargeToCurrentAccount">
<summary>
The producer authorized the charge to his/her current account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._ValueDate">
<summary>
Value date of the entry.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._EntryReversed">
<summary>
Reversed entry indicator.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._Cashier">
<summary>
Number of the cash register related to the entry.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._TaxableAmount">
<summary>
Taxable amount of the credit.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._ExemptAmount">
<summary>
Non-taxable amount of the credit.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._CommissionPaymentID">
<summary>
Number of payment of commissions.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._CurrentAccountProcessID">
<summary>
Number of the process of producers current accounts preparation.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._PostingDate">
<summary>
Date when the entry was posted in the accounting books.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._ReconciledEntry">
<summary>
Reconciled entry indicator.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._ApplicationNumber">
<summary>
Application number.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._CollectionNoticeID">
<summary>
Number of the collection notice
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._NoteID">
<summary>
Number of the note containing the comments.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._ConsecutiveNumber">
<summary>
Consecutive number identifying the record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._AmountWithDecimals">
<summary>
Amount with decimals
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._ObligationNumber">
<summary>
Obligation number identifying collection movement
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._ServiceOrder">
<summary>
Number of service order.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._TypeOfPaymentDocumentCode">
<summary>
The type of payment document Code
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._PaymentDocumentNumber">
<summary>
Payment document number.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._EntryAmountLocalCurrency">
<summary>
Amount of the entry in local currency
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._BalanceOfCurrentAccount">
<summary>
Balance of the current account.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._PremiumOwnerClientID">
<summary>
Client code of the owner of the premium
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._PaymentMode">
<summary>
Code of the payment mode
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._Country">
<summary>
Code of the country
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._TypeOfProducer">
<summary>
Type of producer
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._ProcessIDNumber">
<summary>
Process ID number
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._DocumentSeries">
<summary>
Document series
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._StatusLogicalTransaction">
<summary>
Status of logical transaction
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._NumberOfFinancialAgreement">
<summary>
Number of the financial agreement
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._NumberOfDraft">
<summary>
Number identifying the draft in the financial agreement
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._CodeOfPaymentModeToApply">
<summary>
Code of the payment mode to be applied
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._ItemId">
<summary>
Consecutive number identifying the record as item
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._ItemsSettlementNumber">
<summary>
Number of items settlement
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._RecordType">
<summary>
Type of record
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._BillControlDigit">
<summary>
Bill control digit
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._IDnumberofthedepositmadeinthecashregister">
<summary>
ID number of the deposit made in the cash register.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._NAGENTDEVBON">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._NPAIDPREMIUM">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._NPAIDCALCPREM">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._NBONUSPERCENT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._NGOALLIMIT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._NGOALPERCENT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._NCALCBONUS">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._NMONTHNEXTGOAL">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._NMONTHNEXTPERCENT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._NQUARTERLYBONUS">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._NQUARTERLYDISCOUNT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._NQUARTERNEXTGOAL">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._NQUARTERNEXTPERCENT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._NYEARLYYBONUS">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._NYEARLYDISCOUNT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._NACC_BANK">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._NISRAMOUNT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._NIDCARDPROVAMO">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._SAFIRME_TR">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._DTR_DATE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._DiscountOrAgreementCode">
<summary>
Discount Or Agreement Code
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._NumberofthelatestinvoiceCreditnoteassociatedwithBalance">
<summary>
Number of the latest invoice Credit note associated with Balance
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._AmountNoClassified">
<summary>
Amount No Classified
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.TypeOfCurrentAccount">
<summary>
Type of current account. (NTYP_ACCO)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NTYP_ACCO'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.BusinessType">
<summary>
Type of business (STYPE_ACC)..
</summary>
<remarks>Data-source is 'MOVE_ACC.STYPE_ACC'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'MOVE_ACC.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.TransactionDate">
<summary>
Effective date of the transaction. (DOPERDATE)..
</summary>
<remarks>Data-source is 'MOVE_ACC.DOPERDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.SequentialConsecutiveNumber">
<summary>
Consecutive number identifying the record as unique. (NIDCONSEC)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NIDCONSEC'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.ProducerCode">
<summary>
Code of the producer. (NINTERMED)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NINTERMED'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.Amount">
<summary>
Amount of the entry. (NAMOUNT)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.BankCode">
<summary>
Code of the bank. (NBANKEXT)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NBANKEXT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.Check">
<summary>
Number identifying the check related to the entry. (SCHEQUE)..
</summary>
<remarks>Data-source is 'MOVE_ACC.SCHEQUE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.Credit">
<summary>
Credit amount of the entry. (NCREDIT)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NCREDIT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.Debit">
<summary>
Amount of the debit entry. (NDEBIT)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NDEBIT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.Description">
<summary>
Description related to the entry. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'MOVE_ACC.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.ManualEntryIndicator">
<summary>
Manual entry indicator. (SMANUALMOV)..
</summary>
<remarks>Data-source is 'MOVE_ACC.SMANUALMOV'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.Installment">
<summary>
Number of the installment related to the bill payment agreement. (NPAYNUMBE)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NPAYNUMBE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.BillNumber">
<summary>
Number identifying the bill (NRECEIPT)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NRECEIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'MOVE_ACC.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.ClaimEntryNumber">
<summary>
Entry number related to a claim. (NTRANSAC)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NTRANSAC'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.TransactionNumber">
<summary>
Transaction generating the entry. (NTRANSACTIO)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NTRANSACTIO'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.TypeOfEntry">
<summary>
Type of current account entry. (NTYPE_MOVE)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NTYPE_MOVE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.CheckType">
<summary>
Type of check. (NTYPE_PAY)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NTYPE_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.EntryType">
<summary>
Type of entries in the bill history. (NTYPE_TRAN)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NTYPE_TRAN'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.StateOrProvince">
<summary>
Code of the state or province. (NPROVINCE)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NPROVINCE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'MOVE_ACC.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.CommercialDocument">
<summary>
Number of the commercial document related to the entry. (NIDDOCUMENT)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NIDDOCUMENT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.PaymentOrder">
<summary>
Number of the payment order. (NREQUEST_NU)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NREQUEST_NU'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.NumberIDOfTheStatementOfCollectedPremiums">
<summary>
Number of the collection schedule, or statement of collected premiums. (NBORDEREAUX)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NBORDEREAUX'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.ProcessIndicator">
<summary>
Processed by &#34;Zero Quotas Process&#34; record indicator. (SPROCESS)..
</summary>
<remarks>Data-source is 'MOVE_ACC.SPROCESS'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.ApplicationID">
<summary>
Number of application. (SNUMFORM)..
</summary>
<remarks>Data-source is 'MOVE_ACC.SNUMFORM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.OriginalCurrency">
<summary>
Code of the original currency of the transaction. (NORIGCURR)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NORIGCURR'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.ExchangeRate">
<summary>
Exchange rate of the entry to local currency. (NEXCHANGE)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NEXCHANGE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.AuthorizedChargeToCurrentAccount">
<summary>
The producer authorized the charge to his/her current account. (SAUTORIZA)..
</summary>
<remarks>Data-source is 'MOVE_ACC.SAUTORIZA'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.ValueDate">
<summary>
Value date of the entry. (DVALUEDATE)..
</summary>
<remarks>Data-source is 'MOVE_ACC.DVALUEDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.EntryReversed">
<summary>
Reversed entry indicator. (SNULL_RECOR)..
</summary>
<remarks>Data-source is 'MOVE_ACC.SNULL_RECOR'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.Cashier">
<summary>
Number of the cash register related to the entry. (NCASHNUM)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NCASHNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.TaxableAmount">
<summary>
Taxable amount of the credit. (NAMOAFECT)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NAMOAFECT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.ExemptAmount">
<summary>
Non-taxable amount of the credit. (NAMOEXEN)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NAMOEXEN'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.CommissionPaymentID">
<summary>
Number of payment of commissions. (NPAY_COMM)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NPAY_COMM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.CurrentAccountProcessID">
<summary>
Number of the process of producers current accounts preparation. (NCURR_ACC)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NCURR_ACC'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.PostingDate">
<summary>
Date when the entry was posted in the accounting books. (DPOSTED)..
</summary>
<remarks>Data-source is 'MOVE_ACC.DPOSTED'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.ReconciledEntry">
<summary>
Reconciled entry indicator. (SPROCESS_IND)..
</summary>
<remarks>Data-source is 'MOVE_ACC.SPROCESS_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.ApplicationNumber">
<summary>
Application number. (NPROPONUM)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NPROPONUM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.CollectionNoticeID">
<summary>
Number of the collection notice (NBULLETINS)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NBULLETINS'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.NoteID">
<summary>
Number of the note containing the comments. (NNOTENUM)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.ConsecutiveNumber">
<summary>
Consecutive number identifying the record. (NID)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.AmountWithDecimals">
<summary>
Amount with decimals (NAMOUNTDEC)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NAMOUNTDEC'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.ObligationNumber">
<summary>
Obligation number identifying collection movement (NOBLIGATION)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NOBLIGATION'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.ServiceOrder">
<summary>
Number of service order. (NSERV_ORDER)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NSERV_ORDER'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.TypeOfPaymentDocumentCode">
<summary>
The type of payment document Code (NTYPESUPPORT)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NTYPESUPPORT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.PaymentDocumentNumber">
<summary>
Payment document number. (NDOCUMENT)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NDOCUMENT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.EntryAmountLocalCurrency">
<summary>
Amount of the entry in local currency (NAMOUNT_LOC)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NAMOUNT_LOC'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.BalanceOfCurrentAccount">
<summary>
Balance of the current account. (NBALANCE)..
</summary>
<remarks>Data-source is 'MOVE_ACC.NBALANCE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.PremiumOwnerClientID">
<summary>
Client code of the owner of the premium (SCLIENT_REL)..
</summary>
<remarks>Data-source is 'MOVE_ACC.SCLIENT_REL'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.PaymentMode">
<summary>
Code of the payment mode (SPAY_FORM)..
</summary>
<remarks>Data-source is 'MOVE_ACC.SPAY_FORM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.Country">
<summary>
Code of the country (NCOUNTRY)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NCOUNTRY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.TypeOfProducer">
<summary>
Type of producer (NINTERTYP)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NINTERTYP'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.ProcessIDNumber">
<summary>
Process ID number (NPAYPROCID)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NPAYPROCID'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.DocumentSeries">
<summary>
Document series (SDOCUMENTSERIES)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.SDOCUMENTSERIES'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.StatusLogicalTransaction">
<summary>
Status of logical transaction (NLOGICALSTATUS)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NLOGICALSTATUS'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.NumberOfFinancialAgreement">
<summary>
Number of the financial agreement (NCONTRAT)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NCONTRAT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.NumberOfDraft">
<summary>
Number identifying the draft in the financial agreement (NDRAFT)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NDRAFT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.CodeOfPaymentModeToApply">
<summary>
Code of the payment mode to be applied (SLOGICALPAYFORM)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.SLOGICALPAYFORM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.ItemId">
<summary>
Consecutive number identifying the record as item (NITEMID)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NITEMID'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.ItemsSettlementNumber">
<summary>
Number of items settlement (NSETTNUMBER)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NSETTNUMBER'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.RecordType">
<summary>
Type of record (SCERTYPE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.RecordTypeEnum">
<summary>
Type of record
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.RecordTypeEnumText">
<summary>
Type of record
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.BillControlDigit">
<summary>
Bill control digit (NDIGIT)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NDIGIT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.IDnumberofthedepositmadeinthecashregister">
<summary>
ID number of the deposit made in the cash register. (NCASH_ID)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NCASH_ID'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.NAGENTDEVBON">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NAGENTDEVBON'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.NPAIDPREMIUM">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NPAIDPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.NPAIDCALCPREM">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NPAIDCALCPREM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.NBONUSPERCENT">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NBONUSPERCENT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.NGOALLIMIT">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NGOALLIMIT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.NGOALPERCENT">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NGOALPERCENT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.NCALCBONUS">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NCALCBONUS'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.NMONTHNEXTGOAL">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NMONTHNEXTGOAL'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.NMONTHNEXTPERCENT">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NMONTHNEXTPERCENT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.NQUARTERLYBONUS">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NQUARTERLYBONUS'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.NQUARTERLYDISCOUNT">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NQUARTERLYDISCOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.NQUARTERNEXTGOAL">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NQUARTERNEXTGOAL'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.NQUARTERNEXTPERCENT">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NQUARTERNEXTPERCENT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.NYEARLYYBONUS">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NYEARLYYBONUS'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.NYEARLYDISCOUNT">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NYEARLYDISCOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.NACC_BANK">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NACC_BANK'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.NISRAMOUNT">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NISRAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.NIDCARDPROVAMO">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NIDCARDPROVAMO'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.SAFIRME_TR">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.SAFIRME_TR'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.DTR_DATE">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.DTR_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.DiscountOrAgreementCode">
<summary>
Discount Or Agreement Code (NCOD_AGREE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NCOD_AGREE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.NumberofthelatestinvoiceCreditnoteassociatedwithBalance">
<summary>
Number of the latest invoice Credit note associated with Balance (NBILLNUM)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NBILLNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.AmountNoClassified">
<summary>
Amount No Classified (NAMONOCLAS)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MOVE_ACC.NAMONOCLAS'.</remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.Compare(InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="EntryCurrentAccountItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.BankCodeDescription">
 <summary>
 Code of the bank.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.TypeOfEntryDescription">
 <summary>
 Type of current account entry.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE401'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.CheckTypeDescription">
 <summary>
 Type of check.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE137'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.EntryTypeDescription">
 <summary>
 Type of entries in the bill history.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE6'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.PaymentModeDescription">
 <summary>
 Code of the payment mode
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE182'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.StatusLogicalTransactionDescription">
 <summary>
 Status of logical transaction
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6721' on the table 'TABLE6721'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccount.CodeOfPaymentModeToApplyDescription">
 <summary>
 Code of the payment mode to be applied
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE182'.
 </remarks>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccountCollection">
 <summary>
 Collection for EntryCurrentAccount class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccountCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccountCollection.AddEntryCurrentAccount">
 <summary>
 Add an instance of class 'EntryCurrentAccount' in the EntryCurrentAccountCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccountCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccountCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccountCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccountCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.EntryCurrentAccountCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity">
 <summary>
 Expiration cycles for the collection entity
 </summary>
<remarks>Data-source is 'AGREEMENT_EXPCYCLE'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.CreateNewExpirationCyclesForTheCollectionEntity">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity._AgreementCode">
<summary>
Discount or Agreement Code.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity._CodeOfExpirationCycle">
<summary>
Code of the expiration cycle
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity._ExpirationCyclesOrder">
<summary>
Expiration cycles order
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity._NameValidationRoutine">
<summary>
Name of the validation routine.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity._Status">
<summary>
Register status
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.AgreementCode">
<summary>
Discount or Agreement Code. (NCOD_AGREE)..
</summary>
<remarks>Data-source is 'AGREEMENT_EXPCYCLE.NCOD_AGREE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.CodeOfExpirationCycle">
<summary>
Code of the expiration cycle (NEXPCYCLE)..
</summary>
<remarks>Data-source is 'AGREEMENT_EXPCYCLE.NEXPCYCLE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.ExpirationCyclesOrder">
<summary>
Expiration cycles order (NORDER)..
</summary>
<remarks>Data-source is 'AGREEMENT_EXPCYCLE.NORDER'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.NameValidationRoutine">
<summary>
Name of the validation routine. (SROUTINEVALID)..
</summary>
<remarks>Data-source is 'AGREEMENT_EXPCYCLE.SROUTINEVALID'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.Status">
<summary>
Register status (SSTATREGT)..
</summary>
<remarks>Data-source is 'AGREEMENT_EXPCYCLE.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.StatusEnum">
<summary>
Register status
</summary>
<remarks>This property use a enumeration based on property 'Status'</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.StatusEnumText">
<summary>
Register status
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'AGREEMENT_EXPCYCLE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'AGREEMENT_EXPCYCLE.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.Compare(InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ExpirationCyclesForTheCollectionEntityItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntity.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntityCollection">
 <summary>
 Collection for ExpirationCyclesForTheCollectionEntity class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntityCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntityCollection.AddExpirationCyclesForTheCollectionEntity">
 <summary>
 Add an instance of class 'ExpirationCyclesForTheCollectionEntity' in the ExpirationCyclesForTheCollectionEntityCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntityCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntityCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntityCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntityCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationCyclesForTheCollectionEntityCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule">
 <summary>
 Expiration rules
 </summary>
<remarks>Data-source is 'EXPIRATION_RULES'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.CreateNewExpirationRule">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule._CodeExpirationRule">
<summary>
Code of the expiration rule
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule._DescriptionExpirationRule">
<summary>
Description of the expiration rule
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule._CodeofTypeActivityExec">
<summary>
Code of the type of execution of activity
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule._CodeCriteriaDigitalSending">
<summary>
Code of the criteria for digital sending
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule._DaysExpirationReminder">
<summary>
Number of days for expiration reminder
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule._Status">
<summary>
Register status
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule._ActivitiesByExpirationStatuss">
<summary>
Activities by expiration status
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule._ExpirationStatusAssigments">
<summary>
Expiration status assigment
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.CodeExpirationRule">
<summary>
Code of the expiration rule (nExpirRule)..
</summary>
<remarks>Data-source is 'EXPIRATION_RULES.nExpirRule'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.DescriptionExpirationRule">
<summary>
Description of the expiration rule (sDescript)..
</summary>
<remarks>Data-source is 'EXPIRATION_RULES.sDescript'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.CodeofTypeActivityExec">
<summary>
Code of the type of execution of activity (nActivExec_typ)..
</summary>
<remarks>Data-source is 'EXPIRATION_RULES.nActivExec_typ'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.CodeCriteriaDigitalSending">
<summary>
Code of the criteria for digital sending (nDigital_send)..
</summary>
<remarks>Data-source is 'EXPIRATION_RULES.nDigital_send'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.DaysExpirationReminder">
<summary>
Number of days for expiration reminder (nReminderDays)..
</summary>
<remarks>Data-source is 'EXPIRATION_RULES.nReminderDays'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.Status">
<summary>
Register status (sStatregt)..
</summary>
<remarks>Data-source is 'EXPIRATION_RULES.sStatregt'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.StatusEnum">
<summary>
Register status
</summary>
<remarks>This property use a enumeration based on property 'Status'</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.StatusEnumText">
<summary>
Register status
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.ComputersDate">
<summary>
Date of the computer (dCompDate)..
</summary>
<remarks>Data-source is 'EXPIRATION_RULES.dCompDate'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.User">
<summary>
UserCode (nUserCode)..
</summary>
<remarks>Data-source is 'EXPIRATION_RULES.nUserCode'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.NewActivitiesByExpirationStatussInstance">
<summary>
Initializes the 'ActivitiesByExpirationStatuss' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.NewActivitiesByExpirationStatusItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ActivitiesByExpirationStatuss', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ActivitiesByExpirationStatus' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.ActivitiesByExpirationStatuss">
<summary>
Activities by expiration status collection.
</summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.NewExpirationStatusAssigmentsInstance">
<summary>
Initializes the 'ExpirationStatusAssigments' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.NewExpirationStatusAssigmentItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ExpirationStatusAssigments', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ExpirationStatusAssigment' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.ExpirationStatusAssigments">
<summary>
Expiration status assigment collection.
</summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.Compare(InMotionGIT.Collecting.Entity.Contracts.ExpirationRule,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ExpirationRuleItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationRule.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.ExpirationRuleCollection">
 <summary>
 Collection for ExpirationRule class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationRuleCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationRuleCollection.AddExpirationRule">
 <summary>
 Add an instance of class 'ExpirationRule' in the ExpirationRuleCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationRuleCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.ExpirationRuleCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationRuleCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationRuleCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationRuleCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment">
 <summary>
 Expiration status assigment
 </summary>
<remarks>Data-source is 'Expir_sts_assign'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.CreateNewExpirationStatusAssigment">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment._CodeExpirationRule">
<summary>
Code of the expiration rule
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment._CodeRejectionCause">
<summary>
Code of rejection of a Collection Notice.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment._FDAMinimumNumber">
<summary>
Minimum number of FDA (Failed Debit Attemp) for status assigment.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment._FDAMaximumNumber">
<summary>
Maximum number of FDA (Failed Debit Attemp) for status assigment.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment._CodeExpirationStatus">
<summary>
Code of the expiration status
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment._Status">
<summary>
Register status
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.CodeExpirationRule">
<summary>
Code of the expiration rule (nExpirRule)..
</summary>
<remarks>Data-source is 'Expir_sts_assign.nExpirRule'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.CodeRejectionCause">
<summary>
Code of rejection of a Collection Notice. (nRejectCause)..
</summary>
<remarks>Data-source is 'Expir_sts_assign.nRejectCause'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.FDAMinimumNumber">
<summary>
Minimum number of FDA (Failed Debit Attemp) for status assigment. (nFDA_from)..
</summary>
<remarks>Data-source is 'Expir_sts_assign.nFDA_from'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.FDAMaximumNumber">
<summary>
Maximum number of FDA (Failed Debit Attemp) for status assigment. (nFDA_to)..
</summary>
<remarks>Data-source is 'Expir_sts_assign.nFDA_to'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.CodeExpirationStatus">
<summary>
Code of the expiration status (nExpirStat)..
</summary>
<remarks>Data-source is 'Expir_sts_assign.nExpirStat'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.Status">
<summary>
Register status (sStatregt)..
</summary>
<remarks>Data-source is 'Expir_sts_assign.sStatregt'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.StatusEnum">
<summary>
Register status
</summary>
<remarks>This property use a enumeration based on property 'Status'</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.StatusEnumText">
<summary>
Register status
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.ComputersDate">
<summary>
Date of the computer (dCompDate)..
</summary>
<remarks>Data-source is 'Expir_sts_assign.dCompDate'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.User">
<summary>
UserCode (nUserCode)..
</summary>
<remarks>Data-source is 'Expir_sts_assign.nUserCode'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.Compare(InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ExpirationStatusAssigmentItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigment.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigmentCollection">
 <summary>
 Collection for ExpirationStatusAssigment class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigmentCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigmentCollection.AddExpirationStatusAssigment">
 <summary>
 Add an instance of class 'ExpirationStatusAssigment' in the ExpirationStatusAssigmentCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigmentCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigmentCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigmentCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigmentCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusAssigmentCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity">
 <summary>
 Expiration status by time passage of the activity
 </summary>
<remarks>Data-source is 'Expirsts_timepassage'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.CreateNewExpirationStatusByTimePassageOfTheActivity">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity._ActivityCode">
<summary>
Code of the activity
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity._NumberDaysActivityAgenda">
<summary>
Number of days passed with the activity in agenda.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity._CodeExpirationStatus">
<summary>
Code of the expiration status
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity._Status">
<summary>
Register status
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.ActivityCode">
<summary>
Code of the activity (nActivity)..
</summary>
<remarks>Data-source is 'Expirsts_timepassage.nActivity'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.NumberDaysActivityAgenda">
<summary>
Number of days passed with the activity in agenda. (nDays)..
</summary>
<remarks>Data-source is 'Expirsts_timepassage.nDays'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.CodeExpirationStatus">
<summary>
Code of the expiration status (nExpirStat)..
</summary>
<remarks>Data-source is 'Expirsts_timepassage.nExpirStat'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.Status">
<summary>
Register status (sStatregt)..
</summary>
<remarks>Data-source is 'Expirsts_timepassage.sStatregt'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.StatusEnum">
<summary>
Register status
</summary>
<remarks>This property use a enumeration based on property 'Status'</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.StatusEnumText">
<summary>
Register status
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.ComputersDate">
<summary>
Date of the computer (dCompDate)..
</summary>
<remarks>Data-source is 'Expirsts_timepassage.dCompDate'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.User">
<summary>
UserCode (nUserCode)..
</summary>
<remarks>Data-source is 'Expirsts_timepassage.nUserCode'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.Compare(InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ExpirationStatusByTimePassageOfTheActivityItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivity.ActivityCodeDescription">
 <summary>
 Code of the activity
 </summary>
 <remarks>
 This property is associated with the field 'Table6819' on the table 'Table6819'.
 </remarks>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivityCollection">
 <summary>
 Collection for ExpirationStatusByTimePassageOfTheActivity class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivityCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivityCollection.AddExpirationStatusByTimePassageOfTheActivity">
 <summary>
 Add an instance of class 'ExpirationStatusByTimePassageOfTheActivity' in the ExpirationStatusByTimePassageOfTheActivityCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivityCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivityCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivityCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivityCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ExpirationStatusByTimePassageOfTheActivityCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule">
 <summary>
 Historical record of the expiration rule
 </summary>
<remarks>Data-source is 'Expiration_his'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.CreateNewHistoricalRecordOfTheExpirationRule">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule._ExpirationManagingNumber">
<summary>
Number Identifying the expiration mananging
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule._CodeExpirationStatus">
<summary>
Code of the expiration status
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule._CodeExpirationRule">
<summary>
Code of the expiration rule
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'Expiration_his.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'Expiration_his.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'Expiration_his.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'Expiration_his.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'Expiration_his.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.ExpirationManagingNumber">
<summary>
Number Identifying the expiration mananging (nManaging_id)..
</summary>
<remarks>Data-source is 'Expiration_his.nManaging_id'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.CodeExpirationStatus">
<summary>
Code of the expiration status (nExpirStat)..
</summary>
<remarks>Data-source is 'Expiration_his.nExpirStat'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.CodeExpirationRule">
<summary>
Code of the expiration rule (nExpirRule)..
</summary>
<remarks>Data-source is 'Expiration_his.nExpirRule'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.EffectiveDate">
<summary>
Effective Date of the register (dEffecDate)..
</summary>
<remarks>Data-source is 'Expiration_his.dEffecDate'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (dNullDate)..
</summary>
<remarks>Data-source is 'Expiration_his.dNullDate'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.ComputersDate">
<summary>
Date of the computer (dCompDate)..
</summary>
<remarks>Data-source is 'Expiration_his.dCompDate'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.User">
<summary>
UserCode (nUserCode)..
</summary>
<remarks>Data-source is 'Expiration_his.nUserCode'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.Compare(InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="HistoricalRecordOfTheExpirationRuleItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRule.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRuleCollection">
 <summary>
 Collection for HistoricalRecordOfTheExpirationRule class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRuleCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRuleCollection.AddHistoricalRecordOfTheExpirationRule">
 <summary>
 Add an instance of class 'HistoricalRecordOfTheExpirationRule' in the HistoricalRecordOfTheExpirationRuleCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRuleCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRuleCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRuleCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRuleCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.HistoricalRecordOfTheExpirationRuleCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement">
 <summary>
 Payments or Discounts Agreements.
 </summary>
<remarks>Data-source is 'AGREEMENT'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.CreateNewPaymentAgreement">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._AgreementCode">
<summary>
Discount or Agreement Code.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._Installments">
<summary>
Number of installments for the premium.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._MaximumDiscount">
<summary>
Maximum discount percentage to be applied on the agreement.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._EffectiveDate">
<summary>
Effective date of the payment or discount agreement
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._EndingDate">
<summary>
Ending date of the Payment or Discount Agreement.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._TypeOfPaymentAgreement">
<summary>
Type of payment agreement.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._TypeOfCollection">
<summary>
Code of the type of collection.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._ProducerCode">
<summary>
Code of the producer.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._Agency">
<summary>
Code of Agency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._EMailContact">
<summary>
EMail contact
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._PhoneContact">
<summary>
Phone contact
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._CompleteContactName">
<summary>
Complete name of the contact
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._ContactName">
<summary>
Contact name
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._ContactLastName">
<summary>
Last name of the contact
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._Position">
<summary>
Contact Position convention
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._AdditionalEMailContact">
<summary>
Additional eMail address of the contact
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._AdditionalPhoneContact">
<summary>
Additional phone of the contact
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._AgreementFax">
<summary>
Agreement fax
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._AgreementName">
<summary>
Agreement name
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._CollectionGenerationIndicator">
<summary>
Collection Generation indicator.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._ImageID">
<summary>
Number of the image.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._CodeofEmpathyGroup">
<summary>
Code of Empathy Group
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._CreditCardType">
<summary>
Type of the credit card.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._TypeBankInformation">
<summary>
Type of Bank Information
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._Bankcode">
<summary>
Internal code of the bank
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._AgreementDelinquentPolicyCollecion">
<summary>
Branches-products allowed for the processing of delinquent days
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._ExpirationCyclesForTheCollectionEntitys">
<summary>
Expiration cycles for the collection entity
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._DelinquentCertificatDetailCollection">
<summary>
Delinquent Certificat Detail
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._DelinquentCertificatHeadCollection">
<summary>
Delinquent Certificat Head
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._DelinquentCertificatHeadLotCollection">
<summary>
Delinquent Certificat Head Lot
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.AgreementCode">
<summary>
Discount or Agreement Code. (NCOD_AGREE)..
</summary>
<remarks>Data-source is 'AGREEMENT.NCOD_AGREE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'AGREEMENT.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.Installments">
<summary>
Number of installments for the premium. (NQ_DRAFT)..
</summary>
<remarks>Data-source is 'AGREEMENT.NQ_DRAFT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.MaximumDiscount">
<summary>
Maximum discount percentage to be applied on the agreement. (NMAX_PERC_DCTO)..
</summary>
<remarks>Data-source is 'AGREEMENT.NMAX_PERC_DCTO'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.EffectiveDate">
<summary>
Effective date of the payment or discount agreement (DINIT_DATE)..
</summary>
<remarks>Data-source is 'AGREEMENT.DINIT_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.EndingDate">
<summary>
Ending date of the Payment or Discount Agreement. (DEND_DATE)..
</summary>
<remarks>Data-source is 'AGREEMENT.DEND_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'AGREEMENT.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'AGREEMENT.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'AGREEMENT.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.TypeOfPaymentAgreement">
<summary>
Type of payment agreement. (NTYPEAGREE)..
</summary>
<remarks>Data-source is 'AGREEMENT.NTYPEAGREE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.TypeOfCollection">
<summary>
Code of the type of collection. (NTYPE_REC)..
</summary>
<remarks>Data-source is 'AGREEMENT.NTYPE_REC'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.ProducerCode">
<summary>
Code of the producer. (NINTERMED)..
</summary>
<remarks>Data-source is 'AGREEMENT.NINTERMED'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.Agency">
<summary>
Code of Agency. (NAGENCY)..
</summary>
<remarks>Data-source is 'AGREEMENT.NAGENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.EMailContact">
<summary>
EMail contact (SEMAIL_CONTACT)..
</summary>
<remarks>Data-source is 'AGREEMENT.SEMAIL_CONTACT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.PhoneContact">
<summary>
Phone contact (SPHONE_CONTACT)..
</summary>
<remarks>Data-source is 'AGREEMENT.SPHONE_CONTACT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.CompleteContactName">
<summary>
Complete name of the contact (SCLIENAME)..
</summary>
<remarks>Data-source is 'AGREEMENT.SCLIENAME'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.ContactName">
<summary>
Contact name (SFIRSTNAME)..
</summary>
<remarks>Data-source is 'AGREEMENT.SFIRSTNAME'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.ContactLastName">
<summary>
Last name of the contact (SLASTNAME)..
</summary>
<remarks>Data-source is 'AGREEMENT.SLASTNAME'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.Position">
<summary>
Contact Position convention (NPOSITION)..
</summary>
<remarks>Data-source is 'AGREEMENT.NPOSITION'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.AdditionalEMailContact">
<summary>
Additional eMail address of the contact (SEMAILA_CONTACT)..
</summary>
<remarks>Data-source is 'AGREEMENT.SEMAILA_CONTACT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.AdditionalPhoneContact">
<summary>
Additional phone of the contact (SPHONEA_CONTACT)..
</summary>
<remarks>Data-source is 'AGREEMENT.SPHONEA_CONTACT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.AgreementFax">
<summary>
Agreement fax (SPHONEFAX)..
</summary>
<remarks>Data-source is 'AGREEMENT.SPHONEFAX'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.AgreementName">
<summary>
Agreement name (SNAME_AGREE)..
</summary>
<remarks>Data-source is 'AGREEMENT.SNAME_AGREE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.CollectionGenerationIndicator">
<summary>
Collection Generation indicator. (SNOCOLLECTION)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AGREEMENT.SNOCOLLECTION'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.ImageID">
<summary>
Number of the image. (NIMAGENUM)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AGREEMENT.NIMAGENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.CodeofEmpathyGroup">
<summary>
Code of Empathy Group (NEMPATHYGROUP)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AGREEMENT.NEMPATHYGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.CreditCardType">
<summary>
Type of the credit card. (NCARD_TYPE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AGREEMENT.NCARD_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.TypeBankInformation">
<summary>
Type of Bank Information (SBANKINF_IND)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AGREEMENT.SBANKINF_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.Bankcode">
<summary>
Internal code of the bank (NBANK_CODE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AGREEMENT.NBANK_CODE'.</remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement._Images">
<summary>
Images.
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.Images">
<summary>
Images.
</summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.NewImagesInstance">
<summary>
Initializes the 'Images' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.NewImagesItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Images', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Images' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.NewAgreementDelinquentPolicyCollecionInstance">
<summary>
Initializes the 'AgreementDelinquentPolicyCollecion' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.NewAgreementDelinquentPolicyItem(System.Boolean)">
<summary>
Add a new item to the collection of 'AgreementDelinquentPolicyCollecion', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'AgreementDelinquentPolicy' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.AgreementDelinquentPolicyCollecion">
<summary>
Branches-products allowed for the processing of delinquent days collection.
</summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.NewExpirationCyclesForTheCollectionEntitysInstance">
<summary>
Initializes the 'ExpirationCyclesForTheCollectionEntitys' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.NewExpirationCyclesForTheCollectionEntityItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ExpirationCyclesForTheCollectionEntitys', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ExpirationCyclesForTheCollectionEntity' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.ExpirationCyclesForTheCollectionEntitys">
<summary>
Expiration cycles for the collection entity collection.
</summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.NewDelinquentCertificatDetailCollectionInstance">
<summary>
Initializes the 'DelinquentCertificatDetailCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.NewDelinquentCertificatDetailItem(System.Boolean)">
<summary>
Add a new item to the collection of 'DelinquentCertificatDetailCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'DelinquentCertificatDetail' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.DelinquentCertificatDetailCollection">
<summary>
Delinquent Certificat Detail collection.
</summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.NewDelinquentCertificatHeadCollectionInstance">
<summary>
Initializes the 'DelinquentCertificatHeadCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.NewDelinquentCertificatHeadItem(System.Boolean)">
<summary>
Add a new item to the collection of 'DelinquentCertificatHeadCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'DelinquentCertificatHead' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.DelinquentCertificatHeadCollection">
<summary>
Delinquent Certificat Head collection.
</summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.NewDelinquentCertificatHeadLotCollectionInstance">
<summary>
Initializes the 'DelinquentCertificatHeadLotCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.NewDelinquentCertificatHeadLotItem(System.Boolean)">
<summary>
Add a new item to the collection of 'DelinquentCertificatHeadLotCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'DelinquentCertificatHeadLot' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.DelinquentCertificatHeadLotCollection">
<summary>
Delinquent Certificat Head Lot collection.
</summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.Compare(InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="PaymentAgreementItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.TypeOfPaymentAgreementDescription">
 <summary>
 Type of payment agreement.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5529'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.TypeOfCollectionDescription">
 <summary>
 Code of the type of collection.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5581'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.AgencyDescription">
 <summary>
 Code of Agency.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5555'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.CodeofEmpathyGroupDescription">
 <summary>
 Code of Empathy Group
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE6738'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreement.CreditCardTypeDescription">
 <summary>
 Type of the credit card.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE183'.
 </remarks>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreementCollection">
 <summary>
 Collection for PaymentAgreement class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreementCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreementCollection.AddPaymentAgreement">
 <summary>
 Add an instance of class 'PaymentAgreement' in the PaymentAgreementCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreementCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.PaymentAgreementCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreementCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreementCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.PaymentAgreementCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend">
 <summary>
 Commisions of a premium invoice
 </summary>
<remarks>Data-source is 'STIPEND_PR'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.CreateNewReceiptStipend">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend._BillNumber">
<summary>
Number identifying the bill
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend._TypeOfRecord">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend._CodeLineBusiness">
<summary>
Code of the line of business
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend._ProductCode">
<summary>
Code of the product
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend._BillControlDigit">
<summary>
Bill control digit
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend._PayNumber">
<summary>
Payment number
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend._Province">
<summary>
Province
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend._TypeCommissionCalculation">
<summary>
Type of commission calculation
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend._StipendAmount">
<summary>
Stipend Amount
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend._FixedPercentageOfCommission">
<summary>
Fixed percentage of commission or stipend
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend._FigureClient">
<summary>
Code of the figure. Possible values according to table 12
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend._StipendAmountTaxable">
<summary>
Amount of stipend which is taxable
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend._StipendAmountExemptTaxes">
<summary>
Amount of stipend which is exempt of taxes
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend._TypeOfContrat">
<summary>
Type of contract. Possible values according to table 9108
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.BillNumber">
<summary>
Number identifying the bill (NRECEIPT)..
</summary>
<remarks>Data-source is 'STIPEND_PR.NRECEIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.TypeOfRecord">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'STIPEND_PR.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.TypeOfRecordEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfRecord'</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.TypeOfRecordEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.CodeLineBusiness">
<summary>
Code of the line of business (NBRANCH)..
</summary>
<remarks>Data-source is 'STIPEND_PR.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.ProductCode">
<summary>
Code of the product (NPRODUCT)..
</summary>
<remarks>Data-source is 'STIPEND_PR.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.BillControlDigit">
<summary>
Bill control digit (NDIGIT)..
</summary>
<remarks>Data-source is 'STIPEND_PR.NDIGIT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.PayNumber">
<summary>
Payment number (NPAYNUMBE)..
</summary>
<remarks>Data-source is 'STIPEND_PR.NPAYNUMBE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.Province">
<summary>
Province (NPROVINCE)..
</summary>
<remarks>Data-source is 'STIPEND_PR.NPROVINCE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.TypeCommissionCalculation">
<summary>
Type of commission calculation (NTYPE_COMM)..
</summary>
<remarks>Data-source is 'STIPEND_PR.NTYPE_COMM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.StipendAmount">
<summary>
Stipend Amount (NSTIPEND_AMOUNT)..
</summary>
<remarks>Data-source is 'STIPEND_PR.NSTIPEND_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.FixedPercentageOfCommission">
<summary>
Fixed percentage of commission or stipend (NPERCENT)..
</summary>
<remarks>Data-source is 'STIPEND_PR.NPERCENT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.FigureClient">
<summary>
Code of the figure. Possible values according to table 12 (NROLE)..
</summary>
<remarks>Data-source is 'STIPEND_PR.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.FigureClientEnum">
<summary>
Code of the figure. Possible values according to table 12
</summary>
<remarks>This property use a enumeration based on property 'FigureClient'</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.FigureClientEnumText">
<summary>
Code of the figure. Possible values according to table 12
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.StipendAmountTaxable">
<summary>
Amount of stipend which is taxable (NSTIPEND_AFEC)..
</summary>
<remarks>Data-source is 'STIPEND_PR.NSTIPEND_AFEC'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.StipendAmountExemptTaxes">
<summary>
Amount of stipend which is exempt of taxes (NSTIPEND_EXEN)..
</summary>
<remarks>Data-source is 'STIPEND_PR.NSTIPEND_EXEN'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.TypeOfContrat">
<summary>
Type of contract. Possible values according to table 9108 (NSTIPEND_TYPE)..
</summary>
<remarks>Data-source is 'STIPEND_PR.NSTIPEND_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'STIPEND_PR.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'STIPEND_PR.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.Compare(InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ReceiptStipendItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipend.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipendCollection">
 <summary>
 Collection for ReceiptStipend class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipendCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipendCollection.AddReceiptStipend">
 <summary>
 Add an instance of class 'ReceiptStipend' in the ReceiptStipendCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipendCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.ReceiptStipendCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipendCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipendCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.ReceiptStipendCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity">
 <summary>
 Reject causes for the collection entity
 </summary>
<remarks>Data-source is 'AGREEMENT_REJECTCAUSE'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.CreateNewRejectCausesForTheCollectionEntity">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity._CodeOfCollectionEntity">
<summary>
Code of collection entity
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity._CodeRejectCause">
<summary>
Code of the reject cause
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity._DRejectCauseDescript">
<summary>
Description of the reject cause
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity._RejectCauseShortDescript">
<summary>
Short description of the reject cause
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity._Status">
<summary>
Register status
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity._AceptCode">
<summary>
It indicates that the collection is accepted by this code
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity._EligibleCauseIndicatorDelinquencyPerDay">
<summary>
Eligible cause indicator for the Delinquency process per day
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.CodeOfCollectionEntity">
<summary>
Code of collection entity (NCOD_AGREE)..
</summary>
<remarks>Data-source is 'AGREEMENT_REJECTCAUSE.NCOD_AGREE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.CodeRejectCause">
<summary>
Code of the reject cause (SREJECTCAUSE)..
</summary>
<remarks>Data-source is 'AGREEMENT_REJECTCAUSE.SREJECTCAUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.DRejectCauseDescript">
<summary>
Description of the reject cause (SDESCRIPT)..
</summary>
<remarks>Data-source is 'AGREEMENT_REJECTCAUSE.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.RejectCauseShortDescript">
<summary>
Short description of the reject cause (SSHORT_DES)..
</summary>
<remarks>Data-source is 'AGREEMENT_REJECTCAUSE.SSHORT_DES'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.Status">
<summary>
Register status (SSTATREGT)..
</summary>
<remarks>Data-source is 'AGREEMENT_REJECTCAUSE.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.StatusEnum">
<summary>
Register status
</summary>
<remarks>This property use a enumeration based on property 'Status'</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.StatusEnumText">
<summary>
Register status
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'AGREEMENT_REJECTCAUSE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'AGREEMENT_REJECTCAUSE.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.AceptCode">
<summary>
It indicates that the collection is accepted by this code (SACEPTCODE)..
</summary>
<remarks>Data-source is 'AGREEMENT_REJECTCAUSE.SACEPTCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.EligibleCauseIndicatorDelinquencyPerDay">
<summary>
Eligible cause indicator for the Delinquency process per day (SDEBREVERSAL)..
</summary>
<remarks>Data-source is 'AGREEMENT_REJECTCAUSE.SDEBREVERSAL'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.Compare(InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="RejectCausesForTheCollectionEntityItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntity.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntityCollection">
 <summary>
 Collection for RejectCausesForTheCollectionEntity class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntityCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntityCollection.AddRejectCausesForTheCollectionEntity">
 <summary>
 Add an instance of class 'RejectCausesForTheCollectionEntity' in the RejectCausesForTheCollectionEntityCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntityCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntityCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntityCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntityCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.RejectCausesForTheCollectionEntityCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement">
 <summary>
 Status of expiration management
 </summary>
<remarks>Data-source is 'Expir_status'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.CreateNewStatusOfExpirationManagement">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement._CodeExpirationStatus">
<summary>
Code of the expiration status
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement._LongDescription">
<summary>
Long description
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement._CodeTypeStatusExpiration">
<summary>
Code of type of the status of expiration management
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement._DescriptionNoteExpirationStatus">
<summary>
Description of note of the expiration management status
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement._Status">
<summary>
Register status
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.CodeExpirationStatus">
<summary>
Code of the expiration status (nExpirStat)..
</summary>
<remarks>Data-source is 'Expir_status.nExpirStat'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.LongDescription">
<summary>
Long description (sDescript)..
</summary>
<remarks>Data-source is 'Expir_status.sDescript'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.CodeTypeStatusExpiration">
<summary>
Code of type of the status of expiration management (nStatusType)..
</summary>
<remarks>Data-source is 'Expir_status.nStatusType'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.DescriptionNoteExpirationStatus">
<summary>
Description of note of the expiration management status (sDescript_note)..
</summary>
<remarks>Data-source is 'Expir_status.sDescript_note'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.Status">
<summary>
Register status (sStatregt)..
</summary>
<remarks>Data-source is 'Expir_status.sStatregt'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.StatusEnum">
<summary>
Register status
</summary>
<remarks>This property use a enumeration based on property 'Status'</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.StatusEnumText">
<summary>
Register status
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.ComputersDate">
<summary>
Date of the computer (dCompDate)..
</summary>
<remarks>Data-source is 'Expir_status.dCompDate'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.User">
<summary>
UserCode (nUserCode)..
</summary>
<remarks>Data-source is 'Expir_status.nUserCode'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.Compare(InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="StatusOfExpirationManagementItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagement.CodeTypeStatusExpirationDescription">
 <summary>
 Code of type of the status of expiration management
 </summary>
 <remarks>
 This property is associated with the field 'Table6818' on the table 'Table6818'.
 </remarks>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagementCollection">
 <summary>
 Collection for StatusOfExpirationManagement class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagementCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagementCollection.AddStatusOfExpirationManagement">
 <summary>
 Add an instance of class 'StatusOfExpirationManagement' in the StatusOfExpirationManagementCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagementCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagementCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagementCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagementCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.StatusOfExpirationManagementCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.T_docTyp">
 <summary>
 Tabla temporal de documentos de cobranza (transacción CO001 - Documentos de una relación de cobro).
 </summary>
<remarks>Data-source is 'T_DOCTYP'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.CreateNewT_docTyp">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._ScheduleNumber">
<summary>
Number of The Collection Schedule
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._ConsecutiveNumber">
<summary>
Consecutive number identifying the record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._SelectionIndicator">
<summary>
Selection indicator.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._CollectionDocumentType">
<summary>
Code of the type of collection document.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._DocumentNumber">
<summary>
Document Number.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._LineOfBusiness">
<summary>
Code of the line of business
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._Policy">
<summary>
Number identifying the policy/ quotation/ application
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._CertificateNumber">
<summary>
Number identifying the Certificate.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._FinancialAgreement">
<summary>
Number of the financial agreement recorded in the Agreement table (Finance_co)
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._InstallmentNumber">
<summary>
Number identifying the installment in the financial agreement.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._CollectionNotice">
<summary>
Collection Notice Number.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._ApplicationQuotation">
<summary>
Number of the application/quotation originating the policy.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._EntryType">
<summary>
Type of entries of the current accounts.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._EntryDate">
<summary>
Date of the entry
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._Type">
<summary>
Type of Bill.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._Transaction">
<summary>
Transaction originating the bill
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._CurrencyCode">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._ExchangeRate">
<summary>
Exchange rate of the entry to the local currency.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._AmountToBeCollected">
<summary>
Amount to be collected
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._AmountToBePaid">
<summary>
Amount to be paid
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._DiscountAmount">
<summary>
Discount amount for early payment.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._LatePaymentInterest">
<summary>
Interest on late payment
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._EndingDate">
<summary>
Due Date of Document.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._ManualAutomaticIndicator">
<summary>
Manual/Automatic Indicator.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._BillStatus">
<summary>
Status of the bill
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._CommissionAmount">
<summary>
Commission amount.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._SharePercentage">
<summary>
Percentage of share of the main producer of the policy.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._PremiumAmount">
<summary>
Premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._ProducerCode">
<summary>
Code of the producer
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._EntryNumber">
<summary>
Number of the cash entry generated in the transaction.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._PostingDate">
<summary>
Date when the entry was posted in the accounting books.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._RecordType">
<summary>
Type of record in the premium detail
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._CommissionPercentage">
<summary>
Commission percentage.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._nIntertyp">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._DiscountRate">
<summary>
Discount rate of the bond
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._NominalValue">
<summary>
Nominal value of the recognition bond
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._IssueDateBon">
<summary>
Issue date of the recognition bond
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._EndingDateBond">
<summary>
Expiration date of the recognition bond
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._TaxAmount">
<summary>
Tax amount to be withheld from the producer.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._Origin">
<summary>
Origin of the deposit.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._dDate_origin">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._FinancialInstitution">
<summary>
Financial institution from which the deposits are coming from.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._PermittedChanges">
<summary>
Code describing the changes permitted at the value date
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._ValueDate">
<summary>
Value date to apply ??the exchange factor.
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._CollectorCode">
<summary>
Collector code
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._AmountWithDecimals">
<summary>
Amount with decimals
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._LoanCode">
<summary>
Code of the loan
</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._NTYP_PROFITWORKER">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._SNEWRECEIPT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Collecting.Entity.Contracts.T_docTyp._NCOD_SAAPV">
<summary>

</summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.ScheduleNumber">
<summary>
Number of The Collection Schedule (NBORDEREAUX)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NBORDEREAUX'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.ConsecutiveNumber">
<summary>
Consecutive number identifying the record. (NSEQUENCE)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NSEQUENCE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.SelectionIndicator">
<summary>
Selection indicator. (SSEL)..
</summary>
<remarks>Data-source is 'T_DOCTYP.SSEL'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.CollectionDocumentType">
<summary>
Code of the type of collection document. (NCOLLECDOCTYP)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NCOLLECDOCTYP'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.DocumentNumber">
<summary>
Document Number. (NDOCUMENT)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NDOCUMENT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.LineOfBusiness">
<summary>
Code of the line of business (NBRANCH)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.Policy">
<summary>
Number identifying the policy/ quotation/ application (NPOLICY)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.CertificateNumber">
<summary>
Number identifying the Certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.FinancialAgreement">
<summary>
Number of the financial agreement recorded in the Agreement table (Finance_co) (NCONTRAT)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NCONTRAT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.InstallmentNumber">
<summary>
Number identifying the installment in the financial agreement. (NDRAFT)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NDRAFT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'T_DOCTYP.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.CollectionNotice">
<summary>
Collection Notice Number. (NBULLETINS)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NBULLETINS'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.ApplicationQuotation">
<summary>
Number of the application/quotation originating the policy. (NPROPONUM)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NPROPONUM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.EntryType">
<summary>
Type of entries of the current accounts. (NTYPEMOVE)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NTYPEMOVE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.EntryDate">
<summary>
Date of the entry (DMOVDATE)..
</summary>
<remarks>Data-source is 'T_DOCTYP.DMOVDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.Type">
<summary>
Type of Bill. (NTYPE)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.Transaction">
<summary>
Transaction originating the bill (NTRATYPEI)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NTRATYPEI'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.CurrencyCode">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.ExchangeRate">
<summary>
Exchange rate of the entry to the local currency. (NEXCHANGE)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NEXCHANGE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.AmountToBeCollected">
<summary>
Amount to be collected (NAMOUNTCOL)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NAMOUNTCOL'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.AmountToBePaid">
<summary>
Amount to be paid (NAMOUNTPAY)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NAMOUNTPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.DiscountAmount">
<summary>
Discount amount for early payment. (NPAYSOONDISC)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NPAYSOONDISC'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.LatePaymentInterest">
<summary>
Interest on late payment (NINTEREST_RATE)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NINTEREST_RATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.EndingDate">
<summary>
Due Date of Document. (DEXPIRDAT)..
</summary>
<remarks>Data-source is 'T_DOCTYP.DEXPIRDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.ManualAutomaticIndicator">
<summary>
Manual/Automatic Indicator. (SMANAUTI)..
</summary>
<remarks>Data-source is 'T_DOCTYP.SMANAUTI'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.BillStatus">
<summary>
Status of the bill (NSTATUS_PRE)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NSTATUS_PRE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.CommissionAmount">
<summary>
Commission amount. (NCOMAMOU)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NCOMAMOU'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.SharePercentage">
<summary>
Percentage of share of the main producer of the policy. (NPARTICIP)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NPARTICIP'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.PremiumAmount">
<summary>
Premium amount. (NPREMIUM)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.ProducerCode">
<summary>
Code of the producer (NINTERMED)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NINTERMED'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.EntryNumber">
<summary>
Number of the cash entry generated in the transaction. (NCASH_MOV)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NCASH_MOV'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.PostingDate">
<summary>
Date when the entry was posted in the accounting books. (DPOSTED)..
</summary>
<remarks>Data-source is 'T_DOCTYP.DPOSTED'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.RecordType">
<summary>
Type of record in the premium detail (STYPE_DETAI)..
</summary>
<remarks>Data-source is 'T_DOCTYP.STYPE_DETAI'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.CommissionPercentage">
<summary>
Commission percentage. (NCOMMI_RATE)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NCOMMI_RATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.nIntertyp">
<summary>
.
</summary>
<remarks>Data-source is 'T_DOCTYP.NINTERTYP'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.DiscountRate">
<summary>
Discount rate of the bond (NRATE_DISC)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NRATE_DISC'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.NominalValue">
<summary>
Nominal value of the recognition bond (NNOM_VALBON)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NNOM_VALBON'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.IssueDateBon">
<summary>
Issue date of the recognition bond (DISSUEDATBON)..
</summary>
<remarks>Data-source is 'T_DOCTYP.DISSUEDATBON'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.EndingDateBond">
<summary>
Expiration date of the recognition bond (DEXPIRDATBON)..
</summary>
<remarks>Data-source is 'T_DOCTYP.DEXPIRDATBON'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.TaxAmount">
<summary>
Tax amount to be withheld from the producer. (NTAX)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NTAX'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.Origin">
<summary>
Origin of the deposit. (NORIGIN)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NORIGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.dDate_origin">
<summary>
.
</summary>
<remarks>Data-source is 'T_DOCTYP.DDATE_ORIGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.FinancialInstitution">
<summary>
Financial institution from which the deposits are coming from. (NINSTITUTION)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NINSTITUTION'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.PermittedChanges">
<summary>
Code describing the changes permitted at the value date (NCHANGESDAT)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NCHANGESDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.ValueDate">
<summary>
Value date to apply ??the exchange factor. (DVALUEDATE)..
</summary>
<remarks>Data-source is 'T_DOCTYP.DVALUEDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.CollectorCode">
<summary>
Collector code (NCOLLECTOR)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NCOLLECTOR'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.AmountWithDecimals">
<summary>
Amount with decimals (NAMOUNTDEC)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NAMOUNTDEC'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.LoanCode">
<summary>
Code of the loan (NLOANS)..
</summary>
<remarks>Data-source is 'T_DOCTYP.NLOANS'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.NTYP_PROFITWORKER">
<summary>
.
</summary>
<remarks>Data-source is 'T_DOCTYP.NTYP_PROFITWORKER'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.SNEWRECEIPT">
<summary>
.
</summary>
<remarks>Data-source is 'T_DOCTYP.SNEWRECEIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.NCOD_SAAPV">
<summary>
.
</summary>
<remarks>Data-source is 'T_DOCTYP.NCOD_SAAPV'.</remarks>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.Compare(InMotionGIT.Collecting.Entity.Contracts.T_docTyp,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="T_docTypItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.CollectionDocumentTypeDescription">
 <summary>
 Code of the type of collection document.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5587'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.EntryTypeDescription">
 <summary>
 Type of entries of the current accounts.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5525'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.TransactionDescription">
 <summary>
 Transaction originating the bill
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE24'.
 </remarks>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTyp.OriginDescription">
 <summary>
 Origin of the deposit.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5633'.
 </remarks>
</member>
<member name="T:InMotionGIT.Collecting.Entity.Contracts.T_docTypCollection">
 <summary>
 Collection for T_docTyp class
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.T_docTypCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.T_docTypCollection.AddT_docTyp">
 <summary>
 Add an instance of class 'T_docTyp' in the T_docTypCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.T_docTypCollection.Compare(InMotionGIT.Collecting.Entity.Contracts.T_docTypCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Collecting.Entity.Contracts.T_docTypCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.T_docTypCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Collecting.Entity.Contracts.T_docTypCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
</members>
</doc>
